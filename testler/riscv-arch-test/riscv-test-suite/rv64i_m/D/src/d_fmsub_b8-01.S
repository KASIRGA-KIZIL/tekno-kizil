
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:00 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V FD extension for the fmsub_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmsub_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f9, rs2==f20, rs3==f8, rd==f9, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5a329783562c9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x417e0c661f3f1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2c3e5a6bb364 and rm_val == 0  
// opcode: fmsub.d ; op1:f9; op2:f20; op3:f8; dest:f9; op1val:0x3fe5a329783562c9; op2val:0x3ff417e0c661f3f1; op3val:0x3feb2c3e5a6bb364; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f9, f9, f20, f8, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f18, rs2==f1, rs3==f18, rd==f22, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d761a60ec568 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x551524634d31f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ec7fc5a3584 and rm_val == 4  
// opcode: fmsub.d ; op1:f18; op2:f1; op3:f18; dest:f22; op1val:0x3fe6d761a60ec568; op2val:0x3ff551524634d31f; op3val:0x3fe6d761a60ec568; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f22, f18, f1, f18, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f6, rs2==f27, rs3==f27, rd==f11, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d761a60ec568 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x551524634d31f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ec7fc5a3584 and rm_val == 3  
// opcode: fmsub.d ; op1:f6; op2:f27; op3:f27; dest:f11; op1val:0x3fe6d761a60ec568; op2val:0x3ff551524634d31f; op3val:0x3ff551524634d31f; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f11, f6, f27, f27, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f0, rs2==f12, rs3==f6, rd==f26, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d761a60ec568 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x551524634d31f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ec7fc5a3584 and rm_val == 2  
// opcode: fmsub.d ; op1:f0; op2:f12; op3:f6; dest:f26; op1val:0x3fe6d761a60ec568; op2val:0x3ff551524634d31f; op3val:0x3fee6ec7fc5a3584; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f26, f0, f12, f6, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f8, rs2==f7, rs3==f26, rd==f7, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d761a60ec568 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x551524634d31f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ec7fc5a3584 and rm_val == 1  
// opcode: fmsub.d ; op1:f8; op2:f7; op3:f26; dest:f7; op1val:0x3fe6d761a60ec568; op2val:0x3ff551524634d31f; op3val:0x3fee6ec7fc5a3584; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f7, f8, f7, f26, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f17, rs2==f17, rs3==f3, rd==f2, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d761a60ec568 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x551524634d31f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ec7fc5a3584 and rm_val == 0  
// opcode: fmsub.d ; op1:f17; op2:f17; op3:f3; dest:f2; op1val:0x3fe6d761a60ec568; op2val:0x3fe6d761a60ec568; op3val:0x3fee6ec7fc5a3584; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f2, f17, f17, f3, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rd == rs3 != rs2, rs1==f30, rs2==f11, rs3==f30, rd==f30, fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfa8931dc8682c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ff7eeafae67b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c0aa090b4eae and rm_val == 4  
// opcode: fmsub.d ; op1:f30; op2:f11; op3:f30; dest:f30; op1val:0x3fcfa8931dc8682c; op2val:0x3ff6ff7eeafae67b; op3val:0x3fcfa8931dc8682c; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f30, f30, f11, f30, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rd == rs2 == rs3 != rs1, rs1==f1, rs2==f0, rs3==f0, rd==f0, fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfa8931dc8682c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ff7eeafae67b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c0aa090b4eae and rm_val == 3  
// opcode: fmsub.d ; op1:f1; op2:f0; op3:f0; dest:f0; op1val:0x3fcfa8931dc8682c; op2val:0x3ff6ff7eeafae67b; op3val:0x3ff6ff7eeafae67b; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f0, f1, f0, f0, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f23, rs2==f23, rs3==f23, rd==f23, fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfa8931dc8682c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ff7eeafae67b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c0aa090b4eae and rm_val == 2  
// opcode: fmsub.d ; op1:f23; op2:f23; op3:f23; dest:f23; op1val:0x3fcfa8931dc8682c; op2val:0x3fcfa8931dc8682c; op3val:0x3fcfa8931dc8682c; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f23, f23, f23, f23, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 != rd, rs1==f29, rs2==f29, rs3==f29, rd==f12, fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfa8931dc8682c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ff7eeafae67b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c0aa090b4eae and rm_val == 1  
// opcode: fmsub.d ; op1:f29; op2:f29; op3:f29; dest:f12; op1val:0x3fcfa8931dc8682c; op2val:0x3fcfa8931dc8682c; op3val:0x3fcfa8931dc8682c; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f12, f29, f29, f29, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 == rd != rs3, rs1==f21, rs2==f21, rs3==f20, rd==f21, fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfa8931dc8682c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ff7eeafae67b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c0aa090b4eae and rm_val == 0  
// opcode: fmsub.d ; op1:f21; op2:f21; op3:f20; dest:f21; op1val:0x3fcfa8931dc8682c; op2val:0x3fcfa8931dc8682c; op3val:0x3fd6c0aa090b4eae; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f21, f21, f21, f20, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f13, rs2==f2, rs3==f1, rd==f1, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x121231cb68166 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x069efab52e69c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1928d298a53f8 and rm_val == 4  
// opcode: fmsub.d ; op1:f13; op2:f2; op3:f1; dest:f1; op1val:0x3fd121231cb68166; op2val:0x400069efab52e69c; op3val:0x3fe1928d298a53f8; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f1, f13, f2, f1, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f5, rs2==f18, rs3==f4, rd==f17, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x121231cb68166 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x069efab52e69c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1928d298a53f8 and rm_val == 3  
// opcode: fmsub.d ; op1:f5; op2:f18; op3:f4; dest:f17; op1val:0x3fd121231cb68166; op2val:0x400069efab52e69c; op3val:0x3fe1928d298a53f8; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f17, f5, f18, f4, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f25, rs2==f10, rs3==f12, rd==f18, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x121231cb68166 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x069efab52e69c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1928d298a53f8 and rm_val == 2  
// opcode: fmsub.d ; op1:f25; op2:f10; op3:f12; dest:f18; op1val:0x3fd121231cb68166; op2val:0x400069efab52e69c; op3val:0x3fe1928d298a53f8; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f18, f25, f10, f12, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f20, rs2==f30, rs3==f24, rd==f6, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x121231cb68166 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x069efab52e69c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1928d298a53f8 and rm_val == 1  
// opcode: fmsub.d ; op1:f20; op2:f30; op3:f24; dest:f6; op1val:0x3fd121231cb68166; op2val:0x400069efab52e69c; op3val:0x3fe1928d298a53f8; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f6, f20, f30, f24, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f26, rs2==f28, rs3==f5, rd==f31, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x121231cb68166 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x069efab52e69c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1928d298a53f8 and rm_val == 0  
// opcode: fmsub.d ; op1:f26; op2:f28; op3:f5; dest:f31; op1val:0x3fd121231cb68166; op2val:0x400069efab52e69c; op3val:0x3fe1928d298a53f8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f31, f26, f28, f5, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f15, rs2==f3, rs3==f17, rd==f29, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f285d75afa80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb1dcea768f608 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ab13c4421a9 and rm_val == 4  
// opcode: fmsub.d ; op1:f15; op2:f3; op3:f17; dest:f29; op1val:0x3fd1f285d75afa80; op2val:0x400b1dcea768f608; op3val:0x3fee6ab13c4421a9; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f29, f15, f3, f17, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f3, rs2==f8, rs3==f28, rd==f15, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f285d75afa80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb1dcea768f608 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ab13c4421a9 and rm_val == 3  
// opcode: fmsub.d ; op1:f3; op2:f8; op3:f28; dest:f15; op1val:0x3fd1f285d75afa80; op2val:0x400b1dcea768f608; op3val:0x3fee6ab13c4421a9; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f15, f3, f8, f28, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f12, rs2==f4, rs3==f7, rd==f14, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f285d75afa80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb1dcea768f608 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ab13c4421a9 and rm_val == 2  
// opcode: fmsub.d ; op1:f12; op2:f4; op3:f7; dest:f14; op1val:0x3fd1f285d75afa80; op2val:0x400b1dcea768f608; op3val:0x3fee6ab13c4421a9; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f14, f12, f4, f7, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f31, rs2==f26, rs3==f2, rd==f24, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f285d75afa80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb1dcea768f608 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ab13c4421a9 and rm_val == 1  
// opcode: fmsub.d ; op1:f31; op2:f26; op3:f2; dest:f24; op1val:0x3fd1f285d75afa80; op2val:0x400b1dcea768f608; op3val:0x3fee6ab13c4421a9; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f24, f31, f26, f2, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f14, rs2==f6, rs3==f31, rd==f28, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f285d75afa80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb1dcea768f608 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ab13c4421a9 and rm_val == 0  
// opcode: fmsub.d ; op1:f14; op2:f6; op3:f31; dest:f28; op1val:0x3fd1f285d75afa80; op2val:0x400b1dcea768f608; op3val:0x3fee6ab13c4421a9; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f28, f14, f6, f31, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f2, rs2==f9, rs3==f13, rd==f19, fs1 == 0 and fe1 == 0x3fa and fm1 == 0xe5ca95c88c200 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xe67e4dd9ecae5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcd9722e5f5d0c and rm_val == 4  
// opcode: fmsub.d ; op1:f2; op2:f9; op3:f13; dest:f19; op1val:0x3fae5ca95c88c200; op2val:0x401e67e4dd9ecae5; op3val:0x3fdcd9722e5f5d0c; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f19, f2, f9, f13, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f4, rs2==f16, rs3==f25, rd==f20, fs1 == 0 and fe1 == 0x3fa and fm1 == 0xe5ca95c88c200 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xe67e4dd9ecae5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcd9722e5f5d0c and rm_val == 3  
// opcode: fmsub.d ; op1:f4; op2:f16; op3:f25; dest:f20; op1val:0x3fae5ca95c88c200; op2val:0x401e67e4dd9ecae5; op3val:0x3fdcd9722e5f5d0c; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f20, f4, f16, f25, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f24, rs2==f25, rs3==f16, rd==f3, fs1 == 0 and fe1 == 0x3fa and fm1 == 0xe5ca95c88c200 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xe67e4dd9ecae5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcd9722e5f5d0c and rm_val == 2  
// opcode: fmsub.d ; op1:f24; op2:f25; op3:f16; dest:f3; op1val:0x3fae5ca95c88c200; op2val:0x401e67e4dd9ecae5; op3val:0x3fdcd9722e5f5d0c; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f3, f24, f25, f16, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f11, rs2==f22, rs3==f21, rd==f27, fs1 == 0 and fe1 == 0x3fa and fm1 == 0xe5ca95c88c200 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xe67e4dd9ecae5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcd9722e5f5d0c and rm_val == 1  
// opcode: fmsub.d ; op1:f11; op2:f22; op3:f21; dest:f27; op1val:0x3fae5ca95c88c200; op2val:0x401e67e4dd9ecae5; op3val:0x3fdcd9722e5f5d0c; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f27, f11, f22, f21, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f10, rs2==f31, rs3==f19, rd==f16, fs1 == 0 and fe1 == 0x3fa and fm1 == 0xe5ca95c88c200 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xe67e4dd9ecae5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcd9722e5f5d0c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f31; op3:f19; dest:f16; op1val:0x3fae5ca95c88c200; op2val:0x401e67e4dd9ecae5; op3val:0x3fdcd9722e5f5d0c; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f16, f10, f31, f19, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f19, rs2==f5, rs3==f11, rd==f10, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x79f6734ccb6f6 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xe05f9e647ece9 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x629da23fa0cb8 and rm_val == 4  
// opcode: fmsub.d ; op1:f19; op2:f5; op3:f11; dest:f10; op1val:0x3fd79f6734ccb6f6; op2val:0x3fce05f9e647ece9; op3val:0x3fb629da23fa0cb8; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f10, f19, f5, f11, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f28, rs2==f14, rs3==f22, rd==f13, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x79f6734ccb6f6 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xe05f9e647ece9 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x629da23fa0cb8 and rm_val == 3  
// opcode: fmsub.d ; op1:f28; op2:f14; op3:f22; dest:f13; op1val:0x3fd79f6734ccb6f6; op2val:0x3fce05f9e647ece9; op3val:0x3fb629da23fa0cb8; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f28, f14, f22, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f22, rs2==f13, rs3==f14, rd==f5, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x79f6734ccb6f6 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xe05f9e647ece9 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x629da23fa0cb8 and rm_val == 2  
// opcode: fmsub.d ; op1:f22; op2:f13; op3:f14; dest:f5; op1val:0x3fd79f6734ccb6f6; op2val:0x3fce05f9e647ece9; op3val:0x3fb629da23fa0cb8; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f5, f22, f13, f14, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f16, rs2==f24, rs3==f9, rd==f8, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x79f6734ccb6f6 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xe05f9e647ece9 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x629da23fa0cb8 and rm_val == 1  
// opcode: fmsub.d ; op1:f16; op2:f24; op3:f9; dest:f8; op1val:0x3fd79f6734ccb6f6; op2val:0x3fce05f9e647ece9; op3val:0x3fb629da23fa0cb8; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f8, f16, f24, f9, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f7, rs2==f15, rs3==f10, rd==f25, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x79f6734ccb6f6 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xe05f9e647ece9 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x629da23fa0cb8 and rm_val == 0  
// opcode: fmsub.d ; op1:f7; op2:f15; op3:f10; dest:f25; op1val:0x3fd79f6734ccb6f6; op2val:0x3fce05f9e647ece9; op3val:0x3fb629da23fa0cb8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f25, f7, f15, f10, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f27, rs2==f19, rs3==f15, rd==f4, fs1 == 0 and fe1 == 0x3fb and fm1 == 0xda0b4ff1256e0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9fef8366fa9f0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8119ed3d04278 and rm_val == 4  
// opcode: fmsub.d ; op1:f27; op2:f19; op3:f15; dest:f4; op1val:0x3fbda0b4ff1256e0; op2val:0x3ff9fef8366fa9f0; op3val:0x3fc8119ed3d04278; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f4, f27, f19, f15, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xda0b4ff1256e0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9fef8366fa9f0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8119ed3d04278 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbda0b4ff1256e0; op2val:0x3ff9fef8366fa9f0; op3val:0x3fc8119ed3d04278; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xda0b4ff1256e0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9fef8366fa9f0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8119ed3d04278 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbda0b4ff1256e0; op2val:0x3ff9fef8366fa9f0; op3val:0x3fc8119ed3d04278; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xda0b4ff1256e0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9fef8366fa9f0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8119ed3d04278 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbda0b4ff1256e0; op2val:0x3ff9fef8366fa9f0; op3val:0x3fc8119ed3d04278; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xda0b4ff1256e0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9fef8366fa9f0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8119ed3d04278 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbda0b4ff1256e0; op2val:0x3ff9fef8366fa9f0; op3val:0x3fc8119ed3d04278; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40d85ccdc0390 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x1e84c1ed19119 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x67181a49fc870 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40d85ccdc0390; op2val:0x3fb1e84c1ed19119; op3val:0x3fa67181a49fc870; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40d85ccdc0390 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x1e84c1ed19119 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x67181a49fc870 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40d85ccdc0390; op2val:0x3fb1e84c1ed19119; op3val:0x3fa67181a49fc870; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40d85ccdc0390 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x1e84c1ed19119 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x67181a49fc870 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40d85ccdc0390; op2val:0x3fb1e84c1ed19119; op3val:0x3fa67181a49fc870; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40d85ccdc0390 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x1e84c1ed19119 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x67181a49fc870 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40d85ccdc0390; op2val:0x3fb1e84c1ed19119; op3val:0x3fa67181a49fc870; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40d85ccdc0390 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x1e84c1ed19119 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x67181a49fc870 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40d85ccdc0390; op2val:0x3fb1e84c1ed19119; op3val:0x3fa67181a49fc870; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf4c61e579a5fe and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa81893e2a29d6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ecc1b0e8428d and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf4c61e579a5fe; op2val:0x3ffa81893e2a29d6; op3val:0x3fe9ecc1b0e8428d; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf4c61e579a5fe and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa81893e2a29d6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ecc1b0e8428d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf4c61e579a5fe; op2val:0x3ffa81893e2a29d6; op3val:0x3fe9ecc1b0e8428d; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf4c61e579a5fe and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa81893e2a29d6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ecc1b0e8428d and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf4c61e579a5fe; op2val:0x3ffa81893e2a29d6; op3val:0x3fe9ecc1b0e8428d; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf4c61e579a5fe and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa81893e2a29d6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ecc1b0e8428d and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf4c61e579a5fe; op2val:0x3ffa81893e2a29d6; op3val:0x3fe9ecc1b0e8428d; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf4c61e579a5fe and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa81893e2a29d6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ecc1b0e8428d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf4c61e579a5fe; op2val:0x3ffa81893e2a29d6; op3val:0x3fe9ecc1b0e8428d; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x805882c1da80f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf4cfe503167a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77f27f6414a1c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe805882c1da80f; op2val:0x3fef4cfe503167a3; op3val:0x3fe77f27f6414a1c; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x805882c1da80f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf4cfe503167a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77f27f6414a1c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe805882c1da80f; op2val:0x3fef4cfe503167a3; op3val:0x3fe77f27f6414a1c; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x805882c1da80f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf4cfe503167a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77f27f6414a1c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe805882c1da80f; op2val:0x3fef4cfe503167a3; op3val:0x3fe77f27f6414a1c; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x805882c1da80f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf4cfe503167a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77f27f6414a1c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe805882c1da80f; op2val:0x3fef4cfe503167a3; op3val:0x3fe77f27f6414a1c; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x805882c1da80f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf4cfe503167a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77f27f6414a1c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe805882c1da80f; op2val:0x3fef4cfe503167a3; op3val:0x3fe77f27f6414a1c; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dc2cc175cc22 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x714e661939458 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x07d2e5b3c17e8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6dc2cc175cc22; op2val:0x3fb714e661939458; op3val:0x3fb07d2e5b3c17e8; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dc2cc175cc22 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x714e661939458 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x07d2e5b3c17e8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6dc2cc175cc22; op2val:0x3fb714e661939458; op3val:0x3fb07d2e5b3c17e8; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dc2cc175cc22 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x714e661939458 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x07d2e5b3c17e8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6dc2cc175cc22; op2val:0x3fb714e661939458; op3val:0x3fb07d2e5b3c17e8; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dc2cc175cc22 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x714e661939458 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x07d2e5b3c17e8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6dc2cc175cc22; op2val:0x3fb714e661939458; op3val:0x3fb07d2e5b3c17e8; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dc2cc175cc22 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x714e661939458 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x07d2e5b3c17e8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6dc2cc175cc22; op2val:0x3fb714e661939458; op3val:0x3fb07d2e5b3c17e8; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcbecaf7cb24c8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x78eb882e3f81f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5295645688994 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecbecaf7cb24c8; op2val:0x3fc78eb882e3f81f; op3val:0x3fc5295645688994; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcbecaf7cb24c8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x78eb882e3f81f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5295645688994 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecbecaf7cb24c8; op2val:0x3fc78eb882e3f81f; op3val:0x3fc5295645688994; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcbecaf7cb24c8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x78eb882e3f81f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5295645688994 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecbecaf7cb24c8; op2val:0x3fc78eb882e3f81f; op3val:0x3fc5295645688994; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcbecaf7cb24c8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x78eb882e3f81f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5295645688994 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecbecaf7cb24c8; op2val:0x3fc78eb882e3f81f; op3val:0x3fc5295645688994; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcbecaf7cb24c8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x78eb882e3f81f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5295645688994 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecbecaf7cb24c8; op2val:0x3fc78eb882e3f81f; op3val:0x3fc5295645688994; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x731ed9c953e1c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5021bd6cf3a04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe749676e0a083 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe731ed9c953e1c; op2val:0x3ff5021bd6cf3a04; op3val:0x3fee749676e0a083; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x731ed9c953e1c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5021bd6cf3a04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe749676e0a083 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe731ed9c953e1c; op2val:0x3ff5021bd6cf3a04; op3val:0x3fee749676e0a083; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x731ed9c953e1c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5021bd6cf3a04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe749676e0a083 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe731ed9c953e1c; op2val:0x3ff5021bd6cf3a04; op3val:0x3fee749676e0a083; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x731ed9c953e1c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5021bd6cf3a04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe749676e0a083 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe731ed9c953e1c; op2val:0x3ff5021bd6cf3a04; op3val:0x3fee749676e0a083; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x731ed9c953e1c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5021bd6cf3a04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe749676e0a083 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe731ed9c953e1c; op2val:0x3ff5021bd6cf3a04; op3val:0x3fee749676e0a083; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47511b84c5fe2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xca10c363833e2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x24d6450fa3536 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47511b84c5fe2; op2val:0x3feca10c363833e2; op3val:0x3fe24d6450fa3536; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47511b84c5fe2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xca10c363833e2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x24d6450fa3536 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47511b84c5fe2; op2val:0x3feca10c363833e2; op3val:0x3fe24d6450fa3536; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47511b84c5fe2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xca10c363833e2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x24d6450fa3536 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47511b84c5fe2; op2val:0x3feca10c363833e2; op3val:0x3fe24d6450fa3536; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47511b84c5fe2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xca10c363833e2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x24d6450fa3536 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47511b84c5fe2; op2val:0x3feca10c363833e2; op3val:0x3fe24d6450fa3536; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47511b84c5fe2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xca10c363833e2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x24d6450fa3536 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47511b84c5fe2; op2val:0x3feca10c363833e2; op3val:0x3fe24d6450fa3536; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x3f5 and fm1 == 0x3c8990a4c2a00 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x543a5e5f86adc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4aedff63880a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f53c8990a4c2a00; op2val:0x407543a5e5f86adc; op3val:0x3fda4aedff63880a; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x3f5 and fm1 == 0x3c8990a4c2a00 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x543a5e5f86adc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4aedff63880a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f53c8990a4c2a00; op2val:0x407543a5e5f86adc; op3val:0x3fda4aedff63880a; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x3f5 and fm1 == 0x3c8990a4c2a00 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x543a5e5f86adc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4aedff63880a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f53c8990a4c2a00; op2val:0x407543a5e5f86adc; op3val:0x3fda4aedff63880a; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x3f5 and fm1 == 0x3c8990a4c2a00 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x543a5e5f86adc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4aedff63880a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f53c8990a4c2a00; op2val:0x407543a5e5f86adc; op3val:0x3fda4aedff63880a; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x3f5 and fm1 == 0x3c8990a4c2a00 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x543a5e5f86adc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4aedff63880a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f53c8990a4c2a00; op2val:0x407543a5e5f86adc; op3val:0x3fda4aedff63880a; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x416c1e3bd7694 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xef22d3d8d0594 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x36d5e4670799f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe416c1e3bd7694; op2val:0x3feef22d3d8d0594; op3val:0x3fe36d5e4670799f; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x416c1e3bd7694 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xef22d3d8d0594 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x36d5e4670799f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe416c1e3bd7694; op2val:0x3feef22d3d8d0594; op3val:0x3fe36d5e4670799f; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x416c1e3bd7694 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xef22d3d8d0594 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x36d5e4670799f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe416c1e3bd7694; op2val:0x3feef22d3d8d0594; op3val:0x3fe36d5e4670799f; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x416c1e3bd7694 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xef22d3d8d0594 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x36d5e4670799f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe416c1e3bd7694; op2val:0x3feef22d3d8d0594; op3val:0x3fe36d5e4670799f; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x416c1e3bd7694 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xef22d3d8d0594 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x36d5e4670799f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe416c1e3bd7694; op2val:0x3feef22d3d8d0594; op3val:0x3fe36d5e4670799f; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x932ef0852acd8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xcdbd884193169 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b9b03afcb5f0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb932ef0852acd8; op2val:0x401cdbd884193169; op3val:0x3fe6b9b03afcb5f0; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x932ef0852acd8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xcdbd884193169 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b9b03afcb5f0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb932ef0852acd8; op2val:0x401cdbd884193169; op3val:0x3fe6b9b03afcb5f0; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x932ef0852acd8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xcdbd884193169 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b9b03afcb5f0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb932ef0852acd8; op2val:0x401cdbd884193169; op3val:0x3fe6b9b03afcb5f0; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x932ef0852acd8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xcdbd884193169 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b9b03afcb5f0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb932ef0852acd8; op2val:0x401cdbd884193169; op3val:0x3fe6b9b03afcb5f0; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x932ef0852acd8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xcdbd884193169 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b9b03afcb5f0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb932ef0852acd8; op2val:0x401cdbd884193169; op3val:0x3fe6b9b03afcb5f0; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2d78639bc7d18 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf314eb94a6891 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x25dd267e7fe80 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2d78639bc7d18; op2val:0x400f314eb94a6891; op3val:0x3fd25dd267e7fe80; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2d78639bc7d18 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf314eb94a6891 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x25dd267e7fe80 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2d78639bc7d18; op2val:0x400f314eb94a6891; op3val:0x3fd25dd267e7fe80; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2d78639bc7d18 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf314eb94a6891 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x25dd267e7fe80 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2d78639bc7d18; op2val:0x400f314eb94a6891; op3val:0x3fd25dd267e7fe80; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2d78639bc7d18 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf314eb94a6891 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x25dd267e7fe80 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2d78639bc7d18; op2val:0x400f314eb94a6891; op3val:0x3fd25dd267e7fe80; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2d78639bc7d18 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf314eb94a6891 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x25dd267e7fe80 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2d78639bc7d18; op2val:0x400f314eb94a6891; op3val:0x3fd25dd267e7fe80; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4980479a0ba98 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5e09c1bccd745 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc289f0c3d8fd5 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4980479a0ba98; op2val:0x4015e09c1bccd745; op3val:0x3fec289f0c3d8fd5; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4980479a0ba98 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5e09c1bccd745 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc289f0c3d8fd5 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4980479a0ba98; op2val:0x4015e09c1bccd745; op3val:0x3fec289f0c3d8fd5; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4980479a0ba98 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5e09c1bccd745 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc289f0c3d8fd5 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4980479a0ba98; op2val:0x4015e09c1bccd745; op3val:0x3fec289f0c3d8fd5; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4980479a0ba98 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5e09c1bccd745 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc289f0c3d8fd5 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4980479a0ba98; op2val:0x4015e09c1bccd745; op3val:0x3fec289f0c3d8fd5; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4980479a0ba98 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5e09c1bccd745 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc289f0c3d8fd5 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4980479a0ba98; op2val:0x4015e09c1bccd745; op3val:0x3fec289f0c3d8fd5; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff1bc0eb3a9cd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xff631fcf02965 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfe7f26a966f74 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff1bc0eb3a9cd; op2val:0x3fcff631fcf02965; op3val:0x3fcfe7f26a966f74; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff1bc0eb3a9cd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xff631fcf02965 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfe7f26a966f74 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff1bc0eb3a9cd; op2val:0x3fcff631fcf02965; op3val:0x3fcfe7f26a966f74; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff1bc0eb3a9cd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xff631fcf02965 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfe7f26a966f74 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff1bc0eb3a9cd; op2val:0x3fcff631fcf02965; op3val:0x3fcfe7f26a966f74; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff1bc0eb3a9cd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xff631fcf02965 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfe7f26a966f74 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff1bc0eb3a9cd; op2val:0x3fcff631fcf02965; op3val:0x3fcfe7f26a966f74; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff1bc0eb3a9cd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xff631fcf02965 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfe7f26a966f74 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff1bc0eb3a9cd; op2val:0x3fcff631fcf02965; op3val:0x3fcfe7f26a966f74; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e2b04b843057 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde6d5ace4b245 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4734f3ab2e53c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5e2b04b843057; op2val:0x3fcde6d5ace4b245; op3val:0x3fc4734f3ab2e53c; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e2b04b843057 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde6d5ace4b245 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4734f3ab2e53c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5e2b04b843057; op2val:0x3fcde6d5ace4b245; op3val:0x3fc4734f3ab2e53c; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e2b04b843057 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde6d5ace4b245 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4734f3ab2e53c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5e2b04b843057; op2val:0x3fcde6d5ace4b245; op3val:0x3fc4734f3ab2e53c; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e2b04b843057 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde6d5ace4b245 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4734f3ab2e53c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5e2b04b843057; op2val:0x3fcde6d5ace4b245; op3val:0x3fc4734f3ab2e53c; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e2b04b843057 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde6d5ace4b245 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4734f3ab2e53c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5e2b04b843057; op2val:0x3fcde6d5ace4b245; op3val:0x3fc4734f3ab2e53c; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7f539255d499 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x86e4de3085257 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4fe474a7ede08 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb7f539255d499; op2val:0x3fe86e4de3085257; op3val:0x3fe4fe474a7ede08; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7f539255d499 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x86e4de3085257 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4fe474a7ede08 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb7f539255d499; op2val:0x3fe86e4de3085257; op3val:0x3fe4fe474a7ede08; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7f539255d499 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x86e4de3085257 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4fe474a7ede08 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb7f539255d499; op2val:0x3fe86e4de3085257; op3val:0x3fe4fe474a7ede08; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7f539255d499 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x86e4de3085257 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4fe474a7ede08 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb7f539255d499; op2val:0x3fe86e4de3085257; op3val:0x3fe4fe474a7ede08; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7f539255d499 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x86e4de3085257 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4fe474a7ede08 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb7f539255d499; op2val:0x3fe86e4de3085257; op3val:0x3fe4fe474a7ede08; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1935f2260d9c2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x455c1d99dd687 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6566ac5175d67 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1935f2260d9c2; op2val:0x3ff455c1d99dd687; op3val:0x3fe6566ac5175d67; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1935f2260d9c2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x455c1d99dd687 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6566ac5175d67 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1935f2260d9c2; op2val:0x3ff455c1d99dd687; op3val:0x3fe6566ac5175d67; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1935f2260d9c2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x455c1d99dd687 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6566ac5175d67 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1935f2260d9c2; op2val:0x3ff455c1d99dd687; op3val:0x3fe6566ac5175d67; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1935f2260d9c2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x455c1d99dd687 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6566ac5175d67 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1935f2260d9c2; op2val:0x3ff455c1d99dd687; op3val:0x3fe6566ac5175d67; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1935f2260d9c2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x455c1d99dd687 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6566ac5175d67 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1935f2260d9c2; op2val:0x3ff455c1d99dd687; op3val:0x3fe6566ac5175d67; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfe2963c333dcd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x05307b89919a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0440685460dc4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefe2963c333dcd; op2val:0x3fe05307b89919a9; op3val:0x3fe0440685460dc4; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfe2963c333dcd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x05307b89919a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0440685460dc4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefe2963c333dcd; op2val:0x3fe05307b89919a9; op3val:0x3fe0440685460dc4; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfe2963c333dcd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x05307b89919a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0440685460dc4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefe2963c333dcd; op2val:0x3fe05307b89919a9; op3val:0x3fe0440685460dc4; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfe2963c333dcd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x05307b89919a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0440685460dc4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefe2963c333dcd; op2val:0x3fe05307b89919a9; op3val:0x3fe0440685460dc4; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfe2963c333dcd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x05307b89919a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0440685460dc4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefe2963c333dcd; op2val:0x3fe05307b89919a9; op3val:0x3fe0440685460dc4; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07189266c7628 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe5d18b6c3caf6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf348e7b5d1dff and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe07189266c7628; op2val:0x3ffe5d18b6c3caf6; op3val:0x3fef348e7b5d1dff; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07189266c7628 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe5d18b6c3caf6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf348e7b5d1dff and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe07189266c7628; op2val:0x3ffe5d18b6c3caf6; op3val:0x3fef348e7b5d1dff; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07189266c7628 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe5d18b6c3caf6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf348e7b5d1dff and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe07189266c7628; op2val:0x3ffe5d18b6c3caf6; op3val:0x3fef348e7b5d1dff; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07189266c7628 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe5d18b6c3caf6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf348e7b5d1dff and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe07189266c7628; op2val:0x3ffe5d18b6c3caf6; op3val:0x3fef348e7b5d1dff; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07189266c7628 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe5d18b6c3caf6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf348e7b5d1dff and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe07189266c7628; op2val:0x3ffe5d18b6c3caf6; op3val:0x3fef348e7b5d1dff; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x898816a0229aa and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1090e8a9ec990 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa2ff5a3f69e48 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe898816a0229aa; op2val:0x3fc1090e8a9ec990; op3val:0x3fba2ff5a3f69e48; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x898816a0229aa and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1090e8a9ec990 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa2ff5a3f69e48 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe898816a0229aa; op2val:0x3fc1090e8a9ec990; op3val:0x3fba2ff5a3f69e48; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x898816a0229aa and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1090e8a9ec990 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa2ff5a3f69e48 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe898816a0229aa; op2val:0x3fc1090e8a9ec990; op3val:0x3fba2ff5a3f69e48; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x898816a0229aa and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1090e8a9ec990 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa2ff5a3f69e48 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe898816a0229aa; op2val:0x3fc1090e8a9ec990; op3val:0x3fba2ff5a3f69e48; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x898816a0229aa and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1090e8a9ec990 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa2ff5a3f69e48 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe898816a0229aa; op2val:0x3fc1090e8a9ec990; op3val:0x3fba2ff5a3f69e48; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xcf699fc64f208 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4fa232aa4b78f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2fc86a514180a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbcf699fc64f208; op2val:0x4004fa232aa4b78f; op3val:0x3fd2fc86a514180a; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xcf699fc64f208 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4fa232aa4b78f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2fc86a514180a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbcf699fc64f208; op2val:0x4004fa232aa4b78f; op3val:0x3fd2fc86a514180a; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xcf699fc64f208 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4fa232aa4b78f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2fc86a514180a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbcf699fc64f208; op2val:0x4004fa232aa4b78f; op3val:0x3fd2fc86a514180a; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xcf699fc64f208 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4fa232aa4b78f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2fc86a514180a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbcf699fc64f208; op2val:0x4004fa232aa4b78f; op3val:0x3fd2fc86a514180a; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xcf699fc64f208 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4fa232aa4b78f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2fc86a514180a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbcf699fc64f208; op2val:0x4004fa232aa4b78f; op3val:0x3fd2fc86a514180a; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7032105e4afe4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5dc24f5615f0e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf70bb85c371ea and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7032105e4afe4; op2val:0x4005dc24f5615f0e; op3val:0x3fdf70bb85c371ea; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7032105e4afe4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5dc24f5615f0e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf70bb85c371ea and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7032105e4afe4; op2val:0x4005dc24f5615f0e; op3val:0x3fdf70bb85c371ea; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7032105e4afe4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5dc24f5615f0e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf70bb85c371ea and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7032105e4afe4; op2val:0x4005dc24f5615f0e; op3val:0x3fdf70bb85c371ea; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7032105e4afe4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5dc24f5615f0e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf70bb85c371ea and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7032105e4afe4; op2val:0x4005dc24f5615f0e; op3val:0x3fdf70bb85c371ea; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7032105e4afe4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5dc24f5615f0e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf70bb85c371ea and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7032105e4afe4; op2val:0x4005dc24f5615f0e; op3val:0x3fdf70bb85c371ea; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8326b28fd1300 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x25a935ae7ed73 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbc1b30196274b and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8326b28fd1300; op2val:0x40325a935ae7ed73; op3val:0x3febc1b30196274b; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8326b28fd1300 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x25a935ae7ed73 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbc1b30196274b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8326b28fd1300; op2val:0x40325a935ae7ed73; op3val:0x3febc1b30196274b; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8326b28fd1300 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x25a935ae7ed73 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbc1b30196274b and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8326b28fd1300; op2val:0x40325a935ae7ed73; op3val:0x3febc1b30196274b; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8326b28fd1300 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x25a935ae7ed73 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbc1b30196274b and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8326b28fd1300; op2val:0x40325a935ae7ed73; op3val:0x3febc1b30196274b; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8326b28fd1300 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x25a935ae7ed73 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbc1b30196274b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8326b28fd1300; op2val:0x40325a935ae7ed73; op3val:0x3febc1b30196274b; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb76dc410292fc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1bebed9cba00e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe75b515e7d0b4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb76dc410292fc; op2val:0x3fe1bebed9cba00e; op3val:0x3fde75b515e7d0b4; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb76dc410292fc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1bebed9cba00e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe75b515e7d0b4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb76dc410292fc; op2val:0x3fe1bebed9cba00e; op3val:0x3fde75b515e7d0b4; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb76dc410292fc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1bebed9cba00e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe75b515e7d0b4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb76dc410292fc; op2val:0x3fe1bebed9cba00e; op3val:0x3fde75b515e7d0b4; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb76dc410292fc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1bebed9cba00e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe75b515e7d0b4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb76dc410292fc; op2val:0x3fe1bebed9cba00e; op3val:0x3fde75b515e7d0b4; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb76dc410292fc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1bebed9cba00e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe75b515e7d0b4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb76dc410292fc; op2val:0x3fe1bebed9cba00e; op3val:0x3fde75b515e7d0b4; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x941df9fb398b0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0f7deb75243a9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac9281f470f2c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe941df9fb398b0; op2val:0x3fe0f7deb75243a9; op3val:0x3fdac9281f470f2c; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x941df9fb398b0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0f7deb75243a9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac9281f470f2c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe941df9fb398b0; op2val:0x3fe0f7deb75243a9; op3val:0x3fdac9281f470f2c; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x941df9fb398b0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0f7deb75243a9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac9281f470f2c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe941df9fb398b0; op2val:0x3fe0f7deb75243a9; op3val:0x3fdac9281f470f2c; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x941df9fb398b0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0f7deb75243a9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac9281f470f2c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe941df9fb398b0; op2val:0x3fe0f7deb75243a9; op3val:0x3fdac9281f470f2c; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x941df9fb398b0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0f7deb75243a9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac9281f470f2c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe941df9fb398b0; op2val:0x3fe0f7deb75243a9; op3val:0x3fdac9281f470f2c; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x94903745572ab and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x1a0fbfb26352e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbdbfc047218f0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe94903745572ab; op2val:0x3fb1a0fbfb26352e; op3val:0x3fabdbfc047218f0; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x94903745572ab and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x1a0fbfb26352e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbdbfc047218f0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe94903745572ab; op2val:0x3fb1a0fbfb26352e; op3val:0x3fabdbfc047218f0; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x94903745572ab and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x1a0fbfb26352e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbdbfc047218f0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe94903745572ab; op2val:0x3fb1a0fbfb26352e; op3val:0x3fabdbfc047218f0; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x94903745572ab and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x1a0fbfb26352e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbdbfc047218f0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe94903745572ab; op2val:0x3fb1a0fbfb26352e; op3val:0x3fabdbfc047218f0; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x94903745572ab and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x1a0fbfb26352e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbdbfc047218f0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe94903745572ab; op2val:0x3fb1a0fbfb26352e; op3val:0x3fabdbfc047218f0; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x19e1900062d87 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x54113d75894a5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x76728ee73de07 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe19e1900062d87; op2val:0x3ff54113d75894a5; op3val:0x3fe76728ee73de07; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x19e1900062d87 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x54113d75894a5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x76728ee73de07 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe19e1900062d87; op2val:0x3ff54113d75894a5; op3val:0x3fe76728ee73de07; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x19e1900062d87 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x54113d75894a5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x76728ee73de07 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe19e1900062d87; op2val:0x3ff54113d75894a5; op3val:0x3fe76728ee73de07; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x19e1900062d87 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x54113d75894a5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x76728ee73de07 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe19e1900062d87; op2val:0x3ff54113d75894a5; op3val:0x3fe76728ee73de07; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x19e1900062d87 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x54113d75894a5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x76728ee73de07 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe19e1900062d87; op2val:0x3ff54113d75894a5; op3val:0x3fe76728ee73de07; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x70d97a7e4e400 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x6aa6aec48c3a7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0541d805852e0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc70d97a7e4e400; op2val:0x3fc6aa6aec48c3a7; op3val:0x3fa0541d805852e0; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x70d97a7e4e400 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x6aa6aec48c3a7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0541d805852e0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc70d97a7e4e400; op2val:0x3fc6aa6aec48c3a7; op3val:0x3fa0541d805852e0; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x70d97a7e4e400 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x6aa6aec48c3a7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0541d805852e0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc70d97a7e4e400; op2val:0x3fc6aa6aec48c3a7; op3val:0x3fa0541d805852e0; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x70d97a7e4e400 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x6aa6aec48c3a7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0541d805852e0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc70d97a7e4e400; op2val:0x3fc6aa6aec48c3a7; op3val:0x3fa0541d805852e0; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x70d97a7e4e400 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x6aa6aec48c3a7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0541d805852e0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc70d97a7e4e400; op2val:0x3fc6aa6aec48c3a7; op3val:0x3fa0541d805852e0; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf709a7ed77604 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x19f132e9e2970 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1501c6bb1b35c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef709a7ed77604; op2val:0x3fe19f132e9e2970; op3val:0x3fe1501c6bb1b35c; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf709a7ed77604 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x19f132e9e2970 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1501c6bb1b35c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef709a7ed77604; op2val:0x3fe19f132e9e2970; op3val:0x3fe1501c6bb1b35c; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf709a7ed77604 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x19f132e9e2970 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1501c6bb1b35c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef709a7ed77604; op2val:0x3fe19f132e9e2970; op3val:0x3fe1501c6bb1b35c; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf709a7ed77604 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x19f132e9e2970 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1501c6bb1b35c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef709a7ed77604; op2val:0x3fe19f132e9e2970; op3val:0x3fe1501c6bb1b35c; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf709a7ed77604 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x19f132e9e2970 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1501c6bb1b35c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef709a7ed77604; op2val:0x3fe19f132e9e2970; op3val:0x3fe1501c6bb1b35c; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x66634f502ba60 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x75040723abe8f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x051a2b0dda218 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f966634f502ba60; op2val:0x40075040723abe8f; op3val:0x3fb051a2b0dda218; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x66634f502ba60 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x75040723abe8f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x051a2b0dda218 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f966634f502ba60; op2val:0x40075040723abe8f; op3val:0x3fb051a2b0dda218; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x66634f502ba60 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x75040723abe8f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x051a2b0dda218 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f966634f502ba60; op2val:0x40075040723abe8f; op3val:0x3fb051a2b0dda218; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x66634f502ba60 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x75040723abe8f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x051a2b0dda218 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f966634f502ba60; op2val:0x40075040723abe8f; op3val:0x3fb051a2b0dda218; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x66634f502ba60 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x75040723abe8f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x051a2b0dda218 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f966634f502ba60; op2val:0x40075040723abe8f; op3val:0x3fb051a2b0dda218; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb38e80e6df720 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xe1f06b96ffe78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x99fbe66c0d85c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb38e80e6df720; op2val:0x401e1f06b96ffe78; op3val:0x3fe99fbe66c0d85c; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb38e80e6df720 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xe1f06b96ffe78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x99fbe66c0d85c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb38e80e6df720; op2val:0x401e1f06b96ffe78; op3val:0x3fe99fbe66c0d85c; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb38e80e6df720 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xe1f06b96ffe78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x99fbe66c0d85c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb38e80e6df720; op2val:0x401e1f06b96ffe78; op3val:0x3fe99fbe66c0d85c; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb38e80e6df720 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xe1f06b96ffe78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x99fbe66c0d85c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb38e80e6df720; op2val:0x401e1f06b96ffe78; op3val:0x3fe99fbe66c0d85c; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb38e80e6df720 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xe1f06b96ffe78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x99fbe66c0d85c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb38e80e6df720; op2val:0x401e1f06b96ffe78; op3val:0x3fe99fbe66c0d85c; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x113bfe8ee6b0d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa6dbe46d4eaeb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc35397c06dc43 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe113bfe8ee6b0d; op2val:0x3ffa6dbe46d4eaeb; op3val:0x3fec35397c06dc43; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x113bfe8ee6b0d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa6dbe46d4eaeb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc35397c06dc43 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe113bfe8ee6b0d; op2val:0x3ffa6dbe46d4eaeb; op3val:0x3fec35397c06dc43; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x113bfe8ee6b0d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa6dbe46d4eaeb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc35397c06dc43 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe113bfe8ee6b0d; op2val:0x3ffa6dbe46d4eaeb; op3val:0x3fec35397c06dc43; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x113bfe8ee6b0d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa6dbe46d4eaeb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc35397c06dc43 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe113bfe8ee6b0d; op2val:0x3ffa6dbe46d4eaeb; op3val:0x3fec35397c06dc43; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x113bfe8ee6b0d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa6dbe46d4eaeb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc35397c06dc43 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe113bfe8ee6b0d; op2val:0x3ffa6dbe46d4eaeb; op3val:0x3fec35397c06dc43; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xef11445b734f4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1b779f5b68660 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1217b5e22ebbd and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdef11445b734f4; op2val:0x3ff1b779f5b68660; op3val:0x3fe1217b5e22ebbd; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xef11445b734f4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1b779f5b68660 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1217b5e22ebbd and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdef11445b734f4; op2val:0x3ff1b779f5b68660; op3val:0x3fe1217b5e22ebbd; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xef11445b734f4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1b779f5b68660 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1217b5e22ebbd and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdef11445b734f4; op2val:0x3ff1b779f5b68660; op3val:0x3fe1217b5e22ebbd; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xef11445b734f4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1b779f5b68660 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1217b5e22ebbd and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdef11445b734f4; op2val:0x3ff1b779f5b68660; op3val:0x3fe1217b5e22ebbd; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xef11445b734f4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1b779f5b68660 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1217b5e22ebbd and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdef11445b734f4; op2val:0x3ff1b779f5b68660; op3val:0x3fe1217b5e22ebbd; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4c134ac154518 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x17e7252713de3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b14dc12a1dbe and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4c134ac154518; op2val:0x40017e7252713de3; op3val:0x3fe6b14dc12a1dbe; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4c134ac154518 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x17e7252713de3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b14dc12a1dbe and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4c134ac154518; op2val:0x40017e7252713de3; op3val:0x3fe6b14dc12a1dbe; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4c134ac154518 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x17e7252713de3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b14dc12a1dbe and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4c134ac154518; op2val:0x40017e7252713de3; op3val:0x3fe6b14dc12a1dbe; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4c134ac154518 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x17e7252713de3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b14dc12a1dbe and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4c134ac154518; op2val:0x40017e7252713de3; op3val:0x3fe6b14dc12a1dbe; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4c134ac154518 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x17e7252713de3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b14dc12a1dbe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4c134ac154518; op2val:0x40017e7252713de3; op3val:0x3fe6b14dc12a1dbe; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4fded17342f5a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe07e666f7ff8a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3b33cf64229f0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4fded17342f5a; op2val:0x3fee07e666f7ff8a; op3val:0x3fd3b33cf64229f0; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4fded17342f5a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe07e666f7ff8a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3b33cf64229f0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4fded17342f5a; op2val:0x3fee07e666f7ff8a; op3val:0x3fd3b33cf64229f0; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4fded17342f5a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe07e666f7ff8a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3b33cf64229f0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4fded17342f5a; op2val:0x3fee07e666f7ff8a; op3val:0x3fd3b33cf64229f0; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4fded17342f5a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe07e666f7ff8a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3b33cf64229f0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4fded17342f5a; op2val:0x3fee07e666f7ff8a; op3val:0x3fd3b33cf64229f0; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4fded17342f5a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe07e666f7ff8a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3b33cf64229f0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4fded17342f5a; op2val:0x3fee07e666f7ff8a; op3val:0x3fd3b33cf64229f0; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0f10a20e8af5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8e90d4bf1dfcb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x76636a81c269a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0f10a20e8af5; op2val:0x3fe8e90d4bf1dfcb; op3val:0x3fe76636a81c269a; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0f10a20e8af5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8e90d4bf1dfcb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x76636a81c269a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0f10a20e8af5; op2val:0x3fe8e90d4bf1dfcb; op3val:0x3fe76636a81c269a; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0f10a20e8af5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8e90d4bf1dfcb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x76636a81c269a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0f10a20e8af5; op2val:0x3fe8e90d4bf1dfcb; op3val:0x3fe76636a81c269a; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0f10a20e8af5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8e90d4bf1dfcb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x76636a81c269a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0f10a20e8af5; op2val:0x3fe8e90d4bf1dfcb; op3val:0x3fe76636a81c269a; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0f10a20e8af5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8e90d4bf1dfcb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x76636a81c269a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0f10a20e8af5; op2val:0x3fe8e90d4bf1dfcb; op3val:0x3fe76636a81c269a; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xba9cad6eeb67c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2470bddc65f77 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf99da2a12004f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdba9cad6eeb67c; op2val:0x4002470bddc65f77; op3val:0x3fef99da2a12004f; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xba9cad6eeb67c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2470bddc65f77 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf99da2a12004f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdba9cad6eeb67c; op2val:0x4002470bddc65f77; op3val:0x3fef99da2a12004f; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xba9cad6eeb67c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2470bddc65f77 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf99da2a12004f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdba9cad6eeb67c; op2val:0x4002470bddc65f77; op3val:0x3fef99da2a12004f; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xba9cad6eeb67c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2470bddc65f77 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf99da2a12004f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdba9cad6eeb67c; op2val:0x4002470bddc65f77; op3val:0x3fef99da2a12004f; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xba9cad6eeb67c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2470bddc65f77 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf99da2a12004f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdba9cad6eeb67c; op2val:0x4002470bddc65f77; op3val:0x3fef99da2a12004f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x06f20e274f7c2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5abb347a4aaac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x64236fd83f10f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd06f20e274f7c2; op2val:0x4005abb347a4aaac; op3val:0x3fe64236fd83f10f; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x06f20e274f7c2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5abb347a4aaac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x64236fd83f10f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd06f20e274f7c2; op2val:0x4005abb347a4aaac; op3val:0x3fe64236fd83f10f; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x06f20e274f7c2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5abb347a4aaac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x64236fd83f10f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd06f20e274f7c2; op2val:0x4005abb347a4aaac; op3val:0x3fe64236fd83f10f; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x06f20e274f7c2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5abb347a4aaac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x64236fd83f10f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd06f20e274f7c2; op2val:0x4005abb347a4aaac; op3val:0x3fe64236fd83f10f; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x06f20e274f7c2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5abb347a4aaac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x64236fd83f10f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd06f20e274f7c2; op2val:0x4005abb347a4aaac; op3val:0x3fe64236fd83f10f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb484b36ac43b7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc008b5d47e1bb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7dfb8a164d42e and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb484b36ac43b7; op2val:0x3fec008b5d47e1bb; op3val:0x3fe7dfb8a164d42e; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb484b36ac43b7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc008b5d47e1bb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7dfb8a164d42e and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb484b36ac43b7; op2val:0x3fec008b5d47e1bb; op3val:0x3fe7dfb8a164d42e; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb484b36ac43b7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc008b5d47e1bb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7dfb8a164d42e and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb484b36ac43b7; op2val:0x3fec008b5d47e1bb; op3val:0x3fe7dfb8a164d42e; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb484b36ac43b7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc008b5d47e1bb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7dfb8a164d42e and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb484b36ac43b7; op2val:0x3fec008b5d47e1bb; op3val:0x3fe7dfb8a164d42e; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb484b36ac43b7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc008b5d47e1bb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7dfb8a164d42e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb484b36ac43b7; op2val:0x3fec008b5d47e1bb; op3val:0x3fe7dfb8a164d42e; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6dcf8ae69e6de and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4a8c04952745a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd8559d199e6dd and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6dcf8ae69e6de; op2val:0x4004a8c04952745a; op3val:0x3fed8559d199e6dd; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6dcf8ae69e6de and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4a8c04952745a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd8559d199e6dd and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6dcf8ae69e6de; op2val:0x4004a8c04952745a; op3val:0x3fed8559d199e6dd; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6dcf8ae69e6de and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4a8c04952745a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd8559d199e6dd and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6dcf8ae69e6de; op2val:0x4004a8c04952745a; op3val:0x3fed8559d199e6dd; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6dcf8ae69e6de and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4a8c04952745a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd8559d199e6dd and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6dcf8ae69e6de; op2val:0x4004a8c04952745a; op3val:0x3fed8559d199e6dd; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6dcf8ae69e6de and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4a8c04952745a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd8559d199e6dd and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6dcf8ae69e6de; op2val:0x4004a8c04952745a; op3val:0x3fed8559d199e6dd; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdd3ec6f4085b8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa4c80bc161a77 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8837f6af00a50 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdd3ec6f4085b8; op2val:0x3ffa4c80bc161a77; op3val:0x3fd8837f6af00a50; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdd3ec6f4085b8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa4c80bc161a77 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8837f6af00a50 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdd3ec6f4085b8; op2val:0x3ffa4c80bc161a77; op3val:0x3fd8837f6af00a50; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdd3ec6f4085b8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa4c80bc161a77 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8837f6af00a50 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdd3ec6f4085b8; op2val:0x3ffa4c80bc161a77; op3val:0x3fd8837f6af00a50; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdd3ec6f4085b8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa4c80bc161a77 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8837f6af00a50 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdd3ec6f4085b8; op2val:0x3ffa4c80bc161a77; op3val:0x3fd8837f6af00a50; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdd3ec6f4085b8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa4c80bc161a77 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8837f6af00a50 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdd3ec6f4085b8; op2val:0x3ffa4c80bc161a77; op3val:0x3fd8837f6af00a50; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0abf2e05baea1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x36d8746e32d0a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x43e50c5b39204 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0abf2e05baea1; op2val:0x3fe36d8746e32d0a; op3val:0x3fd43e50c5b39204; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0abf2e05baea1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x36d8746e32d0a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x43e50c5b39204 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0abf2e05baea1; op2val:0x3fe36d8746e32d0a; op3val:0x3fd43e50c5b39204; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0abf2e05baea1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x36d8746e32d0a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x43e50c5b39204 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0abf2e05baea1; op2val:0x3fe36d8746e32d0a; op3val:0x3fd43e50c5b39204; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0abf2e05baea1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x36d8746e32d0a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x43e50c5b39204 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0abf2e05baea1; op2val:0x3fe36d8746e32d0a; op3val:0x3fd43e50c5b39204; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0abf2e05baea1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x36d8746e32d0a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x43e50c5b39204 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0abf2e05baea1; op2val:0x3fe36d8746e32d0a; op3val:0x3fd43e50c5b39204; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x03192549e2d0f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x38594e58587fb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3c21087b16b1b and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe03192549e2d0f; op2val:0x3ff38594e58587fb; op3val:0x3fe3c21087b16b1b; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x03192549e2d0f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x38594e58587fb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3c21087b16b1b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe03192549e2d0f; op2val:0x3ff38594e58587fb; op3val:0x3fe3c21087b16b1b; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x03192549e2d0f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x38594e58587fb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3c21087b16b1b and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe03192549e2d0f; op2val:0x3ff38594e58587fb; op3val:0x3fe3c21087b16b1b; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x03192549e2d0f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x38594e58587fb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3c21087b16b1b and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe03192549e2d0f; op2val:0x3ff38594e58587fb; op3val:0x3fe3c21087b16b1b; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x03192549e2d0f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x38594e58587fb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3c21087b16b1b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe03192549e2d0f; op2val:0x3ff38594e58587fb; op3val:0x3fe3c21087b16b1b; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a6a5faccf050 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7e0384e608111 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x8d8e6451393c0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a6a5faccf050; op2val:0x3fb7e0384e608111; op3val:0x3f98d8e6451393c0; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a6a5faccf050 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7e0384e608111 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x8d8e6451393c0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a6a5faccf050; op2val:0x3fb7e0384e608111; op3val:0x3f98d8e6451393c0; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a6a5faccf050 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7e0384e608111 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x8d8e6451393c0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a6a5faccf050; op2val:0x3fb7e0384e608111; op3val:0x3f98d8e6451393c0; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a6a5faccf050 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7e0384e608111 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x8d8e6451393c0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a6a5faccf050; op2val:0x3fb7e0384e608111; op3val:0x3f98d8e6451393c0; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a6a5faccf050 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7e0384e608111 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x8d8e6451393c0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a6a5faccf050; op2val:0x3fb7e0384e608111; op3val:0x3f98d8e6451393c0; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1529321f2ceda and fs2 == 0 and fe2 == 0x400 and fm2 == 0x77dc2ec120486 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x96edba713b9e9 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1529321f2ceda; op2val:0x40077dc2ec120486; op3val:0x3fe96edba713b9e9; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1529321f2ceda and fs2 == 0 and fe2 == 0x400 and fm2 == 0x77dc2ec120486 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x96edba713b9e9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1529321f2ceda; op2val:0x40077dc2ec120486; op3val:0x3fe96edba713b9e9; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1529321f2ceda and fs2 == 0 and fe2 == 0x400 and fm2 == 0x77dc2ec120486 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x96edba713b9e9 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1529321f2ceda; op2val:0x40077dc2ec120486; op3val:0x3fe96edba713b9e9; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1529321f2ceda and fs2 == 0 and fe2 == 0x400 and fm2 == 0x77dc2ec120486 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x96edba713b9e9 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1529321f2ceda; op2val:0x40077dc2ec120486; op3val:0x3fe96edba713b9e9; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1529321f2ceda and fs2 == 0 and fe2 == 0x400 and fm2 == 0x77dc2ec120486 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x96edba713b9e9 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1529321f2ceda; op2val:0x40077dc2ec120486; op3val:0x3fe96edba713b9e9; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd9e1b089d8f26 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x964829049c135 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7808c0b0f945c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed9e1b089d8f26; op2val:0x3fe964829049c135; op3val:0x3fe7808c0b0f945c; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd9e1b089d8f26 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x964829049c135 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7808c0b0f945c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed9e1b089d8f26; op2val:0x3fe964829049c135; op3val:0x3fe7808c0b0f945c; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd9e1b089d8f26 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x964829049c135 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7808c0b0f945c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed9e1b089d8f26; op2val:0x3fe964829049c135; op3val:0x3fe7808c0b0f945c; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd9e1b089d8f26 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x964829049c135 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7808c0b0f945c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed9e1b089d8f26; op2val:0x3fe964829049c135; op3val:0x3fe7808c0b0f945c; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd9e1b089d8f26 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x964829049c135 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7808c0b0f945c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed9e1b089d8f26; op2val:0x3fe964829049c135; op3val:0x3fe7808c0b0f945c; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d875c43589b8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6ba8a3f9c7f32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7ee07d4c35c27 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d875c43589b8; op2val:0x4006ba8a3f9c7f32; op3val:0x3fe7ee07d4c35c27; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d875c43589b8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6ba8a3f9c7f32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7ee07d4c35c27 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d875c43589b8; op2val:0x4006ba8a3f9c7f32; op3val:0x3fe7ee07d4c35c27; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d875c43589b8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6ba8a3f9c7f32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7ee07d4c35c27 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d875c43589b8; op2val:0x4006ba8a3f9c7f32; op3val:0x3fe7ee07d4c35c27; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d875c43589b8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6ba8a3f9c7f32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7ee07d4c35c27 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d875c43589b8; op2val:0x4006ba8a3f9c7f32; op3val:0x3fe7ee07d4c35c27; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d875c43589b8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6ba8a3f9c7f32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7ee07d4c35c27 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d875c43589b8; op2val:0x4006ba8a3f9c7f32; op3val:0x3fe7ee07d4c35c27; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5ce0983cac5ae and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5ee1b33f74e5c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xde2ea5d045fe8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5ce0983cac5ae; op2val:0x4005ee1b33f74e5c; op3val:0x3fede2ea5d045fe8; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5ce0983cac5ae and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5ee1b33f74e5c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xde2ea5d045fe8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5ce0983cac5ae; op2val:0x4005ee1b33f74e5c; op3val:0x3fede2ea5d045fe8; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5ce0983cac5ae and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5ee1b33f74e5c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xde2ea5d045fe8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5ce0983cac5ae; op2val:0x4005ee1b33f74e5c; op3val:0x3fede2ea5d045fe8; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5ce0983cac5ae and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5ee1b33f74e5c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xde2ea5d045fe8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5ce0983cac5ae; op2val:0x4005ee1b33f74e5c; op3val:0x3fede2ea5d045fe8; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5ce0983cac5ae and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5ee1b33f74e5c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xde2ea5d045fe8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5ce0983cac5ae; op2val:0x4005ee1b33f74e5c; op3val:0x3fede2ea5d045fe8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfcf5280d1300c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdeccebc8bcc58 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdbf494743b3f4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfcf5280d1300c; op2val:0x3fedeccebc8bcc58; op3val:0x3fddbf494743b3f4; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfcf5280d1300c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdeccebc8bcc58 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdbf494743b3f4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfcf5280d1300c; op2val:0x3fedeccebc8bcc58; op3val:0x3fddbf494743b3f4; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfcf5280d1300c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdeccebc8bcc58 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdbf494743b3f4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfcf5280d1300c; op2val:0x3fedeccebc8bcc58; op3val:0x3fddbf494743b3f4; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfcf5280d1300c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdeccebc8bcc58 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdbf494743b3f4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfcf5280d1300c; op2val:0x3fedeccebc8bcc58; op3val:0x3fddbf494743b3f4; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfcf5280d1300c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdeccebc8bcc58 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdbf494743b3f4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfcf5280d1300c; op2val:0x3fedeccebc8bcc58; op3val:0x3fddbf494743b3f4; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9e50beee0d2bc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3e8d95ca4e824 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x01c6b908a3b02 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9e50beee0d2bc; op2val:0x3ff3e8d95ca4e824; op3val:0x3fd01c6b908a3b02; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9e50beee0d2bc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3e8d95ca4e824 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x01c6b908a3b02 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9e50beee0d2bc; op2val:0x3ff3e8d95ca4e824; op3val:0x3fd01c6b908a3b02; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 368, x18)

inst_278:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9e50beee0d2bc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3e8d95ca4e824 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x01c6b908a3b02 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9e50beee0d2bc; op2val:0x3ff3e8d95ca4e824; op3val:0x3fd01c6b908a3b02; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 384, x18)

inst_279:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9e50beee0d2bc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3e8d95ca4e824 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x01c6b908a3b02 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9e50beee0d2bc; op2val:0x3ff3e8d95ca4e824; op3val:0x3fd01c6b908a3b02; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 400, x18)

inst_280:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9e50beee0d2bc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3e8d95ca4e824 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x01c6b908a3b02 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9e50beee0d2bc; op2val:0x3ff3e8d95ca4e824; op3val:0x3fd01c6b908a3b02; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_281:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x057b372f1e047 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf39b16f9919c5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe4d95a2c15b0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe057b372f1e047; op2val:0x3fff39b16f9919c5; op3val:0x3fefe4d95a2c15b0; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 432, x18)

inst_282:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x057b372f1e047 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf39b16f9919c5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe4d95a2c15b0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe057b372f1e047; op2val:0x3fff39b16f9919c5; op3val:0x3fefe4d95a2c15b0; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 448, x18)

inst_283:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x057b372f1e047 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf39b16f9919c5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe4d95a2c15b0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe057b372f1e047; op2val:0x3fff39b16f9919c5; op3val:0x3fefe4d95a2c15b0; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 464, x18)

inst_284:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x057b372f1e047 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf39b16f9919c5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe4d95a2c15b0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe057b372f1e047; op2val:0x3fff39b16f9919c5; op3val:0x3fefe4d95a2c15b0; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 480, x18)

inst_285:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x057b372f1e047 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf39b16f9919c5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe4d95a2c15b0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe057b372f1e047; op2val:0x3fff39b16f9919c5; op3val:0x3fefe4d95a2c15b0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 496, x18)

inst_286:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7ebe7dbbf9a60 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb56e345a2832a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x46fff860b244c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7ebe7dbbf9a60; op2val:0x3feb56e345a2832a; op3val:0x3fd46fff860b244c; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 512, x18)

inst_287:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7ebe7dbbf9a60 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb56e345a2832a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x46fff860b244c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7ebe7dbbf9a60; op2val:0x3feb56e345a2832a; op3val:0x3fd46fff860b244c; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 528, x18)

inst_288:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7ebe7dbbf9a60 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb56e345a2832a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x46fff860b244c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7ebe7dbbf9a60; op2val:0x3feb56e345a2832a; op3val:0x3fd46fff860b244c; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 544, x18)

inst_289:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7ebe7dbbf9a60 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb56e345a2832a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x46fff860b244c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7ebe7dbbf9a60; op2val:0x3feb56e345a2832a; op3val:0x3fd46fff860b244c; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 560, x18)

inst_290:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7ebe7dbbf9a60 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb56e345a2832a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x46fff860b244c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7ebe7dbbf9a60; op2val:0x3feb56e345a2832a; op3val:0x3fd46fff860b244c; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 576, x18)

inst_291:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc4116ef98007e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xafb2e1f620cf1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7d2a9e7d96a10 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc4116ef98007e; op2val:0x3feafb2e1f620cf1; op3val:0x3fd7d2a9e7d96a10; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 592, x18)

inst_292:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc4116ef98007e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xafb2e1f620cf1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7d2a9e7d96a10 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc4116ef98007e; op2val:0x3feafb2e1f620cf1; op3val:0x3fd7d2a9e7d96a10; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 608, x18)

inst_293:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc4116ef98007e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xafb2e1f620cf1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7d2a9e7d96a10 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc4116ef98007e; op2val:0x3feafb2e1f620cf1; op3val:0x3fd7d2a9e7d96a10; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 624, x18)

inst_294:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc4116ef98007e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xafb2e1f620cf1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7d2a9e7d96a10 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc4116ef98007e; op2val:0x3feafb2e1f620cf1; op3val:0x3fd7d2a9e7d96a10; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 640, x18)

inst_295:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc4116ef98007e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xafb2e1f620cf1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7d2a9e7d96a10 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc4116ef98007e; op2val:0x3feafb2e1f620cf1; op3val:0x3fd7d2a9e7d96a10; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 656, x18)

inst_296:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca486367e57c9 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x77a66a706dcb4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x503cf98c71f4c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca486367e57c9; op2val:0x3fc77a66a706dcb4; op3val:0x3fc503cf98c71f4c; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 672, x18)

inst_297:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca486367e57c9 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x77a66a706dcb4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x503cf98c71f4c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca486367e57c9; op2val:0x3fc77a66a706dcb4; op3val:0x3fc503cf98c71f4c; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 688, x18)

inst_298:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca486367e57c9 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x77a66a706dcb4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x503cf98c71f4c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca486367e57c9; op2val:0x3fc77a66a706dcb4; op3val:0x3fc503cf98c71f4c; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 704, x18)

inst_299:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca486367e57c9 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x77a66a706dcb4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x503cf98c71f4c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca486367e57c9; op2val:0x3fc77a66a706dcb4; op3val:0x3fc503cf98c71f4c; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 720, x18)

inst_300:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca486367e57c9 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x77a66a706dcb4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x503cf98c71f4c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca486367e57c9; op2val:0x3fc77a66a706dcb4; op3val:0x3fc503cf98c71f4c; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 736, x18)

inst_301:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbbdb3557396d9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7991da3183a12 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x475159829749f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febbdb3557396d9; op2val:0x3fe7991da3183a12; op3val:0x3fe475159829749f; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 752, x18)

inst_302:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbbdb3557396d9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7991da3183a12 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x475159829749f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febbdb3557396d9; op2val:0x3fe7991da3183a12; op3val:0x3fe475159829749f; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 768, x18)

inst_303:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbbdb3557396d9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7991da3183a12 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x475159829749f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febbdb3557396d9; op2val:0x3fe7991da3183a12; op3val:0x3fe475159829749f; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 784, x18)

inst_304:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbbdb3557396d9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7991da3183a12 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x475159829749f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febbdb3557396d9; op2val:0x3fe7991da3183a12; op3val:0x3fe475159829749f; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 800, x18)

inst_305:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbbdb3557396d9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7991da3183a12 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x475159829749f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febbdb3557396d9; op2val:0x3fe7991da3183a12; op3val:0x3fe475159829749f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 816, x18)

inst_306:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a4535ba8ddb9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4215372db4f3e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf00bba3d5221a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a4535ba8ddb9; op2val:0x3ff4215372db4f3e; op3val:0x3fef00bba3d5221a; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 832, x18)

inst_307:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a4535ba8ddb9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4215372db4f3e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf00bba3d5221a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a4535ba8ddb9; op2val:0x3ff4215372db4f3e; op3val:0x3fef00bba3d5221a; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 848, x18)

inst_308:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a4535ba8ddb9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4215372db4f3e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf00bba3d5221a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a4535ba8ddb9; op2val:0x3ff4215372db4f3e; op3val:0x3fef00bba3d5221a; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 864, x18)

inst_309:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a4535ba8ddb9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4215372db4f3e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf00bba3d5221a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a4535ba8ddb9; op2val:0x3ff4215372db4f3e; op3val:0x3fef00bba3d5221a; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 880, x18)

inst_310:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a4535ba8ddb9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4215372db4f3e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf00bba3d5221a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a4535ba8ddb9; op2val:0x3ff4215372db4f3e; op3val:0x3fef00bba3d5221a; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 896, x18)

inst_311:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x44b713859f3f0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xef288c55d6b06 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3a08b6adb5c98 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd44b713859f3f0; op2val:0x3feef288c55d6b06; op3val:0x3fd3a08b6adb5c98; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 912, x18)

inst_312:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x44b713859f3f0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xef288c55d6b06 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3a08b6adb5c98 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd44b713859f3f0; op2val:0x3feef288c55d6b06; op3val:0x3fd3a08b6adb5c98; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 928, x18)

inst_313:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x44b713859f3f0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xef288c55d6b06 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3a08b6adb5c98 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd44b713859f3f0; op2val:0x3feef288c55d6b06; op3val:0x3fd3a08b6adb5c98; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 944, x18)

inst_314:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x44b713859f3f0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xef288c55d6b06 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3a08b6adb5c98 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd44b713859f3f0; op2val:0x3feef288c55d6b06; op3val:0x3fd3a08b6adb5c98; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 960, x18)

inst_315:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x44b713859f3f0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xef288c55d6b06 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3a08b6adb5c98 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd44b713859f3f0; op2val:0x3feef288c55d6b06; op3val:0x3fd3a08b6adb5c98; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 976, x18)

inst_316:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa9ebc719dc362 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x07d7bdf108b7a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xb6f82a93df690 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda9ebc719dc362; op2val:0x3fd07d7bdf108b7a; op3val:0x3fbb6f82a93df690; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 992, x18)

inst_317:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa9ebc719dc362 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x07d7bdf108b7a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xb6f82a93df690 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda9ebc719dc362; op2val:0x3fd07d7bdf108b7a; op3val:0x3fbb6f82a93df690; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1008, x18)

inst_318:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa9ebc719dc362 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x07d7bdf108b7a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xb6f82a93df690 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda9ebc719dc362; op2val:0x3fd07d7bdf108b7a; op3val:0x3fbb6f82a93df690; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1024, x18)

inst_319:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa9ebc719dc362 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x07d7bdf108b7a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xb6f82a93df690 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda9ebc719dc362; op2val:0x3fd07d7bdf108b7a; op3val:0x3fbb6f82a93df690; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1040, x18)

inst_320:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa9ebc719dc362 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x07d7bdf108b7a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xb6f82a93df690 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda9ebc719dc362; op2val:0x3fd07d7bdf108b7a; op3val:0x3fbb6f82a93df690; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1056, x18)

inst_321:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x90052ffbe2328 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc708f724b1d08 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x63839d5043638 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc90052ffbe2328; op2val:0x3fec708f724b1d08; op3val:0x3fc63839d5043638; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1072, x18)

inst_322:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x90052ffbe2328 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc708f724b1d08 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x63839d5043638 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc90052ffbe2328; op2val:0x3fec708f724b1d08; op3val:0x3fc63839d5043638; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1088, x18)

inst_323:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x90052ffbe2328 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc708f724b1d08 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x63839d5043638 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc90052ffbe2328; op2val:0x3fec708f724b1d08; op3val:0x3fc63839d5043638; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1104, x18)

inst_324:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x90052ffbe2328 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc708f724b1d08 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x63839d5043638 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc90052ffbe2328; op2val:0x3fec708f724b1d08; op3val:0x3fc63839d5043638; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1120, x18)

inst_325:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x90052ffbe2328 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc708f724b1d08 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x63839d5043638 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc90052ffbe2328; op2val:0x3fec708f724b1d08; op3val:0x3fc63839d5043638; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1136, x18)

inst_326:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfb8627b73c106 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5507746b5c321 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x520c3d2fe56ec and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfb8627b73c106; op2val:0x3fd5507746b5c321; op3val:0x3fc520c3d2fe56ec; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1152, x18)

inst_327:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfb8627b73c106 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5507746b5c321 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x520c3d2fe56ec and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfb8627b73c106; op2val:0x3fd5507746b5c321; op3val:0x3fc520c3d2fe56ec; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1168, x18)

inst_328:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfb8627b73c106 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5507746b5c321 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x520c3d2fe56ec and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfb8627b73c106; op2val:0x3fd5507746b5c321; op3val:0x3fc520c3d2fe56ec; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1184, x18)

inst_329:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfb8627b73c106 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5507746b5c321 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x520c3d2fe56ec and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfb8627b73c106; op2val:0x3fd5507746b5c321; op3val:0x3fc520c3d2fe56ec; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1200, x18)

inst_330:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfb8627b73c106 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5507746b5c321 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x520c3d2fe56ec and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfb8627b73c106; op2val:0x3fd5507746b5c321; op3val:0x3fc520c3d2fe56ec; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1216, x18)

inst_331:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb8acac45c466a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b4d6df005a55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe7ac2b9fa20ca and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb8acac45c466a; op2val:0x3fe1b4d6df005a55; op3val:0x3fde7ac2b9fa20ca; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1232, x18)

inst_332:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb8acac45c466a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b4d6df005a55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe7ac2b9fa20ca and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb8acac45c466a; op2val:0x3fe1b4d6df005a55; op3val:0x3fde7ac2b9fa20ca; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1248, x18)

inst_333:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb8acac45c466a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b4d6df005a55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe7ac2b9fa20ca and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb8acac45c466a; op2val:0x3fe1b4d6df005a55; op3val:0x3fde7ac2b9fa20ca; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1264, x18)

inst_334:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb8acac45c466a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b4d6df005a55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe7ac2b9fa20ca and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb8acac45c466a; op2val:0x3fe1b4d6df005a55; op3val:0x3fde7ac2b9fa20ca; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1280, x18)

inst_335:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb8acac45c466a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b4d6df005a55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe7ac2b9fa20ca and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb8acac45c466a; op2val:0x3fe1b4d6df005a55; op3val:0x3fde7ac2b9fa20ca; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1296, x18)

inst_336:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x108911a643e2e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x693e123b5fd81 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x80935e7e94dd0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd108911a643e2e; op2val:0x3fe693e123b5fd81; op3val:0x3fc80935e7e94dd0; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1312, x18)

inst_337:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x108911a643e2e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x693e123b5fd81 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x80935e7e94dd0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd108911a643e2e; op2val:0x3fe693e123b5fd81; op3val:0x3fc80935e7e94dd0; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1328, x18)

inst_338:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x108911a643e2e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x693e123b5fd81 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x80935e7e94dd0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd108911a643e2e; op2val:0x3fe693e123b5fd81; op3val:0x3fc80935e7e94dd0; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1344, x18)

inst_339:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x108911a643e2e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x693e123b5fd81 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x80935e7e94dd0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd108911a643e2e; op2val:0x3fe693e123b5fd81; op3val:0x3fc80935e7e94dd0; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1360, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x108911a643e2e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x693e123b5fd81 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x80935e7e94dd0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd108911a643e2e; op2val:0x3fe693e123b5fd81; op3val:0x3fc80935e7e94dd0; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1376, x18)

inst_341:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xba9aa6f95a870 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb971e039929af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7d9ca5c90e828 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbba9aa6f95a870; op2val:0x400b971e039929af; op3val:0x3fd7d9ca5c90e828; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1392, x18)

inst_342:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xba9aa6f95a870 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb971e039929af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7d9ca5c90e828 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbba9aa6f95a870; op2val:0x400b971e039929af; op3val:0x3fd7d9ca5c90e828; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1408, x18)

inst_343:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xba9aa6f95a870 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb971e039929af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7d9ca5c90e828 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbba9aa6f95a870; op2val:0x400b971e039929af; op3val:0x3fd7d9ca5c90e828; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1424, x18)

inst_344:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xba9aa6f95a870 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb971e039929af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7d9ca5c90e828 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbba9aa6f95a870; op2val:0x400b971e039929af; op3val:0x3fd7d9ca5c90e828; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1440, x18)

inst_345:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xba9aa6f95a870 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb971e039929af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7d9ca5c90e828 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbba9aa6f95a870; op2val:0x400b971e039929af; op3val:0x3fd7d9ca5c90e828; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1456, x18)

inst_346:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe9949c4b358a7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x60c639e5d4104 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5153b748f50a4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee9949c4b358a7; op2val:0x3fc60c639e5d4104; op3val:0x3fc5153b748f50a4; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1472, x18)

inst_347:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe9949c4b358a7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x60c639e5d4104 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5153b748f50a4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee9949c4b358a7; op2val:0x3fc60c639e5d4104; op3val:0x3fc5153b748f50a4; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1488, x18)

inst_348:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe9949c4b358a7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x60c639e5d4104 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5153b748f50a4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee9949c4b358a7; op2val:0x3fc60c639e5d4104; op3val:0x3fc5153b748f50a4; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1504, x18)

inst_349:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe9949c4b358a7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x60c639e5d4104 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5153b748f50a4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee9949c4b358a7; op2val:0x3fc60c639e5d4104; op3val:0x3fc5153b748f50a4; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1520, x18)

inst_350:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe9949c4b358a7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x60c639e5d4104 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5153b748f50a4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee9949c4b358a7; op2val:0x3fc60c639e5d4104; op3val:0x3fc5153b748f50a4; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1536, x18)

inst_351:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1a76e8b0ce342 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b1d1fcebcbe2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6d57e16d78c28 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1a76e8b0ce342; op2val:0x3ff4b1d1fcebcbe2; op3val:0x3fd6d57e16d78c28; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1552, x18)

inst_352:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1a76e8b0ce342 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b1d1fcebcbe2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6d57e16d78c28 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1a76e8b0ce342; op2val:0x3ff4b1d1fcebcbe2; op3val:0x3fd6d57e16d78c28; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1568, x18)

inst_353:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1a76e8b0ce342 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b1d1fcebcbe2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6d57e16d78c28 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1a76e8b0ce342; op2val:0x3ff4b1d1fcebcbe2; op3val:0x3fd6d57e16d78c28; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1584, x18)

inst_354:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1a76e8b0ce342 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b1d1fcebcbe2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6d57e16d78c28 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1a76e8b0ce342; op2val:0x3ff4b1d1fcebcbe2; op3val:0x3fd6d57e16d78c28; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1600, x18)

inst_355:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1a76e8b0ce342 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b1d1fcebcbe2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6d57e16d78c28 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1a76e8b0ce342; op2val:0x3ff4b1d1fcebcbe2; op3val:0x3fd6d57e16d78c28; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1616, x18)

inst_356:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xf465b817cb700 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xbd927a307f6f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb37990edd00d1 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8f465b817cb700; op2val:0x404bd927a307f6f9; op3val:0x3feb37990edd00d1; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1632, x18)

inst_357:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xf465b817cb700 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xbd927a307f6f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb37990edd00d1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8f465b817cb700; op2val:0x404bd927a307f6f9; op3val:0x3feb37990edd00d1; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1648, x18)

inst_358:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xf465b817cb700 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xbd927a307f6f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb37990edd00d1 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8f465b817cb700; op2val:0x404bd927a307f6f9; op3val:0x3feb37990edd00d1; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1664, x18)

inst_359:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xf465b817cb700 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xbd927a307f6f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb37990edd00d1 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8f465b817cb700; op2val:0x404bd927a307f6f9; op3val:0x3feb37990edd00d1; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1680, x18)

inst_360:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xf465b817cb700 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xbd927a307f6f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb37990edd00d1 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8f465b817cb700; op2val:0x404bd927a307f6f9; op3val:0x3feb37990edd00d1; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1696, x18)

inst_361:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x38914c0f1585e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1a9416c1f25d1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5904dd91e06c8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe38914c0f1585e; op2val:0x3ff1a9416c1f25d1; op3val:0x3fe5904dd91e06c8; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1712, x18)

inst_362:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x38914c0f1585e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1a9416c1f25d1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5904dd91e06c8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe38914c0f1585e; op2val:0x3ff1a9416c1f25d1; op3val:0x3fe5904dd91e06c8; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1728, x18)

inst_363:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x38914c0f1585e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1a9416c1f25d1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5904dd91e06c8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe38914c0f1585e; op2val:0x3ff1a9416c1f25d1; op3val:0x3fe5904dd91e06c8; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1744, x18)

inst_364:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x38914c0f1585e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1a9416c1f25d1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5904dd91e06c8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe38914c0f1585e; op2val:0x3ff1a9416c1f25d1; op3val:0x3fe5904dd91e06c8; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1760, x18)

inst_365:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x38914c0f1585e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1a9416c1f25d1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5904dd91e06c8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe38914c0f1585e; op2val:0x3ff1a9416c1f25d1; op3val:0x3fe5904dd91e06c8; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1776, x18)

inst_366:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x22d29d9ba48aa and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb3f1d22329e25 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xef3e98ce8fc78 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd22d29d9ba48aa; op2val:0x3fdb3f1d22329e25; op3val:0x3fbef3e98ce8fc78; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1792, x18)

inst_367:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x22d29d9ba48aa and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb3f1d22329e25 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xef3e98ce8fc78 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd22d29d9ba48aa; op2val:0x3fdb3f1d22329e25; op3val:0x3fbef3e98ce8fc78; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1808, x18)

inst_368:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x22d29d9ba48aa and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb3f1d22329e25 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xef3e98ce8fc78 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd22d29d9ba48aa; op2val:0x3fdb3f1d22329e25; op3val:0x3fbef3e98ce8fc78; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1824, x18)

inst_369:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x22d29d9ba48aa and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb3f1d22329e25 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xef3e98ce8fc78 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd22d29d9ba48aa; op2val:0x3fdb3f1d22329e25; op3val:0x3fbef3e98ce8fc78; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1840, x18)

inst_370:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x22d29d9ba48aa and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb3f1d22329e25 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xef3e98ce8fc78 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd22d29d9ba48aa; op2val:0x3fdb3f1d22329e25; op3val:0x3fbef3e98ce8fc78; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1856, x18)

inst_371:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfee48dd841658 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5f6f6d7fd60c8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5eacdf0db8b10 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfee48dd841658; op2val:0x3ff5f6f6d7fd60c8; op3val:0x3fd5eacdf0db8b10; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1872, x18)

inst_372:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfee48dd841658 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5f6f6d7fd60c8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5eacdf0db8b10 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfee48dd841658; op2val:0x3ff5f6f6d7fd60c8; op3val:0x3fd5eacdf0db8b10; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1888, x18)

inst_373:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfee48dd841658 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5f6f6d7fd60c8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5eacdf0db8b10 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfee48dd841658; op2val:0x3ff5f6f6d7fd60c8; op3val:0x3fd5eacdf0db8b10; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1904, x18)

inst_374:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfee48dd841658 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5f6f6d7fd60c8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5eacdf0db8b10 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfee48dd841658; op2val:0x3ff5f6f6d7fd60c8; op3val:0x3fd5eacdf0db8b10; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1920, x18)

inst_375:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfee48dd841658 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5f6f6d7fd60c8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5eacdf0db8b10 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfee48dd841658; op2val:0x3ff5f6f6d7fd60c8; op3val:0x3fd5eacdf0db8b10; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1936, x18)

inst_376:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa85cdb056c252 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x22d61fe099365 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe21c2292c8c94 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda85cdb056c252; op2val:0x3ff22d61fe099365; op3val:0x3fde21c2292c8c94; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1952, x18)

inst_377:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa85cdb056c252 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x22d61fe099365 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe21c2292c8c94 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda85cdb056c252; op2val:0x3ff22d61fe099365; op3val:0x3fde21c2292c8c94; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1968, x18)

inst_378:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa85cdb056c252 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x22d61fe099365 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe21c2292c8c94 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda85cdb056c252; op2val:0x3ff22d61fe099365; op3val:0x3fde21c2292c8c94; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1984, x18)

inst_379:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa85cdb056c252 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x22d61fe099365 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe21c2292c8c94 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda85cdb056c252; op2val:0x3ff22d61fe099365; op3val:0x3fde21c2292c8c94; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2000, x18)

inst_380:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa85cdb056c252 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x22d61fe099365 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe21c2292c8c94 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda85cdb056c252; op2val:0x3ff22d61fe099365; op3val:0x3fde21c2292c8c94; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_381:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x643a0e97b37d2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1a48bfc0a495a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88cd2f3a97d5e and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe643a0e97b37d2; op2val:0x3ff1a48bfc0a495a; op3val:0x3fe88cd2f3a97d5e; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 0, x18)

inst_382:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x643a0e97b37d2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1a48bfc0a495a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88cd2f3a97d5e and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe643a0e97b37d2; op2val:0x3ff1a48bfc0a495a; op3val:0x3fe88cd2f3a97d5e; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 16, x18)

inst_383:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x643a0e97b37d2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1a48bfc0a495a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88cd2f3a97d5e and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe643a0e97b37d2; op2val:0x3ff1a48bfc0a495a; op3val:0x3fe88cd2f3a97d5e; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 32, x18)

inst_384:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x643a0e97b37d2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1a48bfc0a495a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88cd2f3a97d5e and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe643a0e97b37d2; op2val:0x3ff1a48bfc0a495a; op3val:0x3fe88cd2f3a97d5e; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 48, x18)

inst_385:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x643a0e97b37d2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1a48bfc0a495a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88cd2f3a97d5e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe643a0e97b37d2; op2val:0x3ff1a48bfc0a495a; op3val:0x3fe88cd2f3a97d5e; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 64, x18)

inst_386:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeaaaa0e6c90dd and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x051f23fbda48b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf47ba5acd2996 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeaaaa0e6c90dd; op2val:0x3ff051f23fbda48b; op3val:0x3fef47ba5acd2996; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 80, x18)

inst_387:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeaaaa0e6c90dd and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x051f23fbda48b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf47ba5acd2996 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeaaaa0e6c90dd; op2val:0x3ff051f23fbda48b; op3val:0x3fef47ba5acd2996; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 96, x18)

inst_388:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeaaaa0e6c90dd and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x051f23fbda48b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf47ba5acd2996 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeaaaa0e6c90dd; op2val:0x3ff051f23fbda48b; op3val:0x3fef47ba5acd2996; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 112, x18)

inst_389:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeaaaa0e6c90dd and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x051f23fbda48b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf47ba5acd2996 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeaaaa0e6c90dd; op2val:0x3ff051f23fbda48b; op3val:0x3fef47ba5acd2996; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 128, x18)

inst_390:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeaaaa0e6c90dd and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x051f23fbda48b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf47ba5acd2996 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeaaaa0e6c90dd; op2val:0x3ff051f23fbda48b; op3val:0x3fef47ba5acd2996; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 144, x18)

inst_391:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd20bd7b6cae9e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x51c41351f8394 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3373459a71db6 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed20bd7b6cae9e; op2val:0x3fe51c41351f8394; op3val:0x3fe3373459a71db6; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 160, x18)

inst_392:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd20bd7b6cae9e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x51c41351f8394 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3373459a71db6 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed20bd7b6cae9e; op2val:0x3fe51c41351f8394; op3val:0x3fe3373459a71db6; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 176, x18)

inst_393:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd20bd7b6cae9e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x51c41351f8394 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3373459a71db6 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed20bd7b6cae9e; op2val:0x3fe51c41351f8394; op3val:0x3fe3373459a71db6; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 192, x18)

inst_394:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd20bd7b6cae9e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x51c41351f8394 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3373459a71db6 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed20bd7b6cae9e; op2val:0x3fe51c41351f8394; op3val:0x3fe3373459a71db6; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 208, x18)

inst_395:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd20bd7b6cae9e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x51c41351f8394 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3373459a71db6 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed20bd7b6cae9e; op2val:0x3fe51c41351f8394; op3val:0x3fe3373459a71db6; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 224, x18)

inst_396:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfd771fba2f7c6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7a9eb88650dab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x78bee1cbb58bf and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefd771fba2f7c6; op2val:0x3fe7a9eb88650dab; op3val:0x3fe78bee1cbb58bf; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 240, x18)

inst_397:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfd771fba2f7c6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7a9eb88650dab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x78bee1cbb58bf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefd771fba2f7c6; op2val:0x3fe7a9eb88650dab; op3val:0x3fe78bee1cbb58bf; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 256, x18)

inst_398:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfd771fba2f7c6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7a9eb88650dab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x78bee1cbb58bf and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefd771fba2f7c6; op2val:0x3fe7a9eb88650dab; op3val:0x3fe78bee1cbb58bf; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 272, x18)

inst_399:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfd771fba2f7c6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7a9eb88650dab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x78bee1cbb58bf and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefd771fba2f7c6; op2val:0x3fe7a9eb88650dab; op3val:0x3fe78bee1cbb58bf; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 288, x18)

inst_400:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfd771fba2f7c6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7a9eb88650dab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x78bee1cbb58bf and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefd771fba2f7c6; op2val:0x3fe7a9eb88650dab; op3val:0x3fe78bee1cbb58bf; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 304, x18)

inst_401:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x991924701dd43 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3d5ba44c2ff46 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfb26949ca43b2 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe991924701dd43; op2val:0x3fe3d5ba44c2ff46; op3val:0x3fdfb26949ca43b2; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 320, x18)

inst_402:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x991924701dd43 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3d5ba44c2ff46 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfb26949ca43b2 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe991924701dd43; op2val:0x3fe3d5ba44c2ff46; op3val:0x3fdfb26949ca43b2; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 336, x18)

inst_403:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x991924701dd43 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3d5ba44c2ff46 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfb26949ca43b2 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe991924701dd43; op2val:0x3fe3d5ba44c2ff46; op3val:0x3fdfb26949ca43b2; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 352, x18)

inst_404:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x991924701dd43 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3d5ba44c2ff46 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfb26949ca43b2 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe991924701dd43; op2val:0x3fe3d5ba44c2ff46; op3val:0x3fdfb26949ca43b2; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 368, x18)

inst_405:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x991924701dd43 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3d5ba44c2ff46 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfb26949ca43b2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe991924701dd43; op2val:0x3fe3d5ba44c2ff46; op3val:0x3fdfb26949ca43b2; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 384, x18)

inst_406:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0cfb82ae26079 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe49833a6a1f83 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfd2b6eac079b4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0cfb82ae26079; op2val:0x3fee49833a6a1f83; op3val:0x3fdfd2b6eac079b4; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 400, x18)

inst_407:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0cfb82ae26079 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe49833a6a1f83 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfd2b6eac079b4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0cfb82ae26079; op2val:0x3fee49833a6a1f83; op3val:0x3fdfd2b6eac079b4; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 416, x18)

inst_408:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0cfb82ae26079 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe49833a6a1f83 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfd2b6eac079b4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0cfb82ae26079; op2val:0x3fee49833a6a1f83; op3val:0x3fdfd2b6eac079b4; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 432, x18)

inst_409:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0cfb82ae26079 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe49833a6a1f83 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfd2b6eac079b4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0cfb82ae26079; op2val:0x3fee49833a6a1f83; op3val:0x3fdfd2b6eac079b4; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 448, x18)

inst_410:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0cfb82ae26079 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe49833a6a1f83 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfd2b6eac079b4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0cfb82ae26079; op2val:0x3fee49833a6a1f83; op3val:0x3fdfd2b6eac079b4; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 464, x18)

inst_411:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff73e52a89e86 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cf22acec6197 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3c9b6ffaa1898 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff73e52a89e86; op2val:0x3fe3cf22acec6197; op3val:0x3fe3c9b6ffaa1898; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 480, x18)

inst_412:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff73e52a89e86 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cf22acec6197 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3c9b6ffaa1898 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff73e52a89e86; op2val:0x3fe3cf22acec6197; op3val:0x3fe3c9b6ffaa1898; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 496, x18)

inst_413:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff73e52a89e86 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cf22acec6197 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3c9b6ffaa1898 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff73e52a89e86; op2val:0x3fe3cf22acec6197; op3val:0x3fe3c9b6ffaa1898; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 512, x18)

inst_414:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff73e52a89e86 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cf22acec6197 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3c9b6ffaa1898 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff73e52a89e86; op2val:0x3fe3cf22acec6197; op3val:0x3fe3c9b6ffaa1898; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 528, x18)

inst_415:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff73e52a89e86 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cf22acec6197 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3c9b6ffaa1898 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff73e52a89e86; op2val:0x3fe3cf22acec6197; op3val:0x3fe3c9b6ffaa1898; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 544, x18)

inst_416:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6182ef720e7c6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdd1eeb49b9a17 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x496dd5344a6b0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6182ef720e7c6; op2val:0x3fedd1eeb49b9a17; op3val:0x3fe496dd5344a6b0; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 560, x18)

inst_417:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6182ef720e7c6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdd1eeb49b9a17 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x496dd5344a6b0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6182ef720e7c6; op2val:0x3fedd1eeb49b9a17; op3val:0x3fe496dd5344a6b0; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 576, x18)

inst_418:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6182ef720e7c6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdd1eeb49b9a17 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x496dd5344a6b0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6182ef720e7c6; op2val:0x3fedd1eeb49b9a17; op3val:0x3fe496dd5344a6b0; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 592, x18)

inst_419:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6182ef720e7c6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdd1eeb49b9a17 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x496dd5344a6b0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6182ef720e7c6; op2val:0x3fedd1eeb49b9a17; op3val:0x3fe496dd5344a6b0; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 608, x18)

inst_420:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6182ef720e7c6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdd1eeb49b9a17 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x496dd5344a6b0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6182ef720e7c6; op2val:0x3fedd1eeb49b9a17; op3val:0x3fe496dd5344a6b0; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 624, x18)

inst_421:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x82d7e8bdcba00 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x7441069035c9b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x194200786f220 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe82d7e8bdcba00; op2val:0x3fa7441069035c9b; op3val:0x3fa194200786f220; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 640, x18)

inst_422:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x82d7e8bdcba00 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x7441069035c9b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x194200786f220 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe82d7e8bdcba00; op2val:0x3fa7441069035c9b; op3val:0x3fa194200786f220; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 656, x18)

inst_423:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x82d7e8bdcba00 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x7441069035c9b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x194200786f220 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe82d7e8bdcba00; op2val:0x3fa7441069035c9b; op3val:0x3fa194200786f220; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 672, x18)

inst_424:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x82d7e8bdcba00 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x7441069035c9b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x194200786f220 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe82d7e8bdcba00; op2val:0x3fa7441069035c9b; op3val:0x3fa194200786f220; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 688, x18)
addi x16,x16,2040

inst_425:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x82d7e8bdcba00 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x7441069035c9b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x194200786f220 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe82d7e8bdcba00; op2val:0x3fa7441069035c9b; op3val:0x3fa194200786f220; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 704, x18)

inst_426:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc08b781ee6d40 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x08b472f2142b5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcfcbff5696710 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c08b781ee6d40; op2val:0x40308b472f2142b5; op3val:0x3fdcfcbff5696710; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 720, x18)

inst_427:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc08b781ee6d40 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x08b472f2142b5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcfcbff5696710 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c08b781ee6d40; op2val:0x40308b472f2142b5; op3val:0x3fdcfcbff5696710; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 736, x18)

inst_428:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc08b781ee6d40 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x08b472f2142b5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcfcbff5696710 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c08b781ee6d40; op2val:0x40308b472f2142b5; op3val:0x3fdcfcbff5696710; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 752, x18)

inst_429:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc08b781ee6d40 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x08b472f2142b5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcfcbff5696710 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c08b781ee6d40; op2val:0x40308b472f2142b5; op3val:0x3fdcfcbff5696710; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 768, x18)

inst_430:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc08b781ee6d40 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x08b472f2142b5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcfcbff5696710 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c08b781ee6d40; op2val:0x40308b472f2142b5; op3val:0x3fdcfcbff5696710; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 784, x18)

inst_431:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x79383468b1e88 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xa8e540ab0980b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x390b72af2dfb0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe79383468b1e88; op2val:0x3faa8e540ab0980b; op3val:0x3fa390b72af2dfb0; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 800, x18)

inst_432:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x79383468b1e88 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xa8e540ab0980b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x390b72af2dfb0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe79383468b1e88; op2val:0x3faa8e540ab0980b; op3val:0x3fa390b72af2dfb0; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 816, x18)

inst_433:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x79383468b1e88 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xa8e540ab0980b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x390b72af2dfb0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe79383468b1e88; op2val:0x3faa8e540ab0980b; op3val:0x3fa390b72af2dfb0; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 832, x18)

inst_434:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x79383468b1e88 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xa8e540ab0980b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x390b72af2dfb0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe79383468b1e88; op2val:0x3faa8e540ab0980b; op3val:0x3fa390b72af2dfb0; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 848, x18)

inst_435:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x79383468b1e88 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xa8e540ab0980b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x390b72af2dfb0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe79383468b1e88; op2val:0x3faa8e540ab0980b; op3val:0x3fa390b72af2dfb0; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 864, x18)

inst_436:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaf57d7aec81a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x50cb3fa83fb3e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1bbce07fc4a54 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaf57d7aec81a5; op2val:0x3fe50cb3fa83fb3e; op3val:0x3fe1bbce07fc4a54; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 880, x18)

inst_437:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaf57d7aec81a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x50cb3fa83fb3e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1bbce07fc4a54 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaf57d7aec81a5; op2val:0x3fe50cb3fa83fb3e; op3val:0x3fe1bbce07fc4a54; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 896, x18)

inst_438:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaf57d7aec81a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x50cb3fa83fb3e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1bbce07fc4a54 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaf57d7aec81a5; op2val:0x3fe50cb3fa83fb3e; op3val:0x3fe1bbce07fc4a54; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 912, x18)

inst_439:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaf57d7aec81a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x50cb3fa83fb3e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1bbce07fc4a54 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaf57d7aec81a5; op2val:0x3fe50cb3fa83fb3e; op3val:0x3fe1bbce07fc4a54; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 928, x18)

inst_440:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaf57d7aec81a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x50cb3fa83fb3e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1bbce07fc4a54 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaf57d7aec81a5; op2val:0x3fe50cb3fa83fb3e; op3val:0x3fe1bbce07fc4a54; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 944, x18)

inst_441:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x69f43cbd1ad44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x877d480eebf7f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x14c2957423314 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe69f43cbd1ad44; op2val:0x3fe877d480eebf7f; op3val:0x3fe14c2957423314; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 960, x18)

inst_442:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x69f43cbd1ad44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x877d480eebf7f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x14c2957423314 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe69f43cbd1ad44; op2val:0x3fe877d480eebf7f; op3val:0x3fe14c2957423314; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 976, x18)

inst_443:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x69f43cbd1ad44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x877d480eebf7f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x14c2957423314 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe69f43cbd1ad44; op2val:0x3fe877d480eebf7f; op3val:0x3fe14c2957423314; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 992, x18)

inst_444:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x69f43cbd1ad44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x877d480eebf7f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x14c2957423314 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe69f43cbd1ad44; op2val:0x3fe877d480eebf7f; op3val:0x3fe14c2957423314; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1008, x18)

inst_445:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x69f43cbd1ad44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x877d480eebf7f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x14c2957423314 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe69f43cbd1ad44; op2val:0x3fe877d480eebf7f; op3val:0x3fe14c2957423314; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1024, x18)

inst_446:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6fa670d9ad9d5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0e292b19cd50a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x83fcaa93ab0a6 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6fa670d9ad9d5; op2val:0x3ff0e292b19cd50a; op3val:0x3fe83fcaa93ab0a6; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1040, x18)

inst_447:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6fa670d9ad9d5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0e292b19cd50a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x83fcaa93ab0a6 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6fa670d9ad9d5; op2val:0x3ff0e292b19cd50a; op3val:0x3fe83fcaa93ab0a6; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1056, x18)

inst_448:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6fa670d9ad9d5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0e292b19cd50a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x83fcaa93ab0a6 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6fa670d9ad9d5; op2val:0x3ff0e292b19cd50a; op3val:0x3fe83fcaa93ab0a6; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1072, x18)

inst_449:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6fa670d9ad9d5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0e292b19cd50a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x83fcaa93ab0a6 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6fa670d9ad9d5; op2val:0x3ff0e292b19cd50a; op3val:0x3fe83fcaa93ab0a6; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1088, x18)

inst_450:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6fa670d9ad9d5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0e292b19cd50a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x83fcaa93ab0a6 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6fa670d9ad9d5; op2val:0x3ff0e292b19cd50a; op3val:0x3fe83fcaa93ab0a6; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1104, x18)

inst_451:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0923777e7a86c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x45bc5916460aa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x515d1903b8910 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0923777e7a86c; op2val:0x40045bc5916460aa; op3val:0x3fd515d1903b8910; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1120, x18)

inst_452:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0923777e7a86c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x45bc5916460aa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x515d1903b8910 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0923777e7a86c; op2val:0x40045bc5916460aa; op3val:0x3fd515d1903b8910; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1136, x18)

inst_453:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0923777e7a86c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x45bc5916460aa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x515d1903b8910 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0923777e7a86c; op2val:0x40045bc5916460aa; op3val:0x3fd515d1903b8910; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1152, x18)

inst_454:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0923777e7a86c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x45bc5916460aa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x515d1903b8910 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0923777e7a86c; op2val:0x40045bc5916460aa; op3val:0x3fd515d1903b8910; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1168, x18)

inst_455:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0923777e7a86c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x45bc5916460aa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x515d1903b8910 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0923777e7a86c; op2val:0x40045bc5916460aa; op3val:0x3fd515d1903b8910; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1184, x18)

inst_456:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4be66156ce8f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x63147bdda2b8a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4514c49e7e884 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4be66156ce8f; op2val:0x3fc63147bdda2b8a; op3val:0x3fc4514c49e7e884; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1200, x18)

inst_457:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4be66156ce8f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x63147bdda2b8a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4514c49e7e884 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4be66156ce8f; op2val:0x3fc63147bdda2b8a; op3val:0x3fc4514c49e7e884; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1216, x18)

inst_458:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4be66156ce8f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x63147bdda2b8a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4514c49e7e884 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4be66156ce8f; op2val:0x3fc63147bdda2b8a; op3val:0x3fc4514c49e7e884; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1232, x18)

inst_459:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4be66156ce8f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x63147bdda2b8a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4514c49e7e884 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4be66156ce8f; op2val:0x3fc63147bdda2b8a; op3val:0x3fc4514c49e7e884; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1248, x18)

inst_460:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4be66156ce8f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x63147bdda2b8a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4514c49e7e884 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4be66156ce8f; op2val:0x3fc63147bdda2b8a; op3val:0x3fc4514c49e7e884; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1264, x18)

inst_461:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d22cca46ebe9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fc212c485561 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xac6af3bc744f0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d22cca46ebe9; op2val:0x3ff1fc212c485561; op3val:0x3feac6af3bc744f0; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1280, x18)

inst_462:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d22cca46ebe9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fc212c485561 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xac6af3bc744f0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d22cca46ebe9; op2val:0x3ff1fc212c485561; op3val:0x3feac6af3bc744f0; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1296, x18)

inst_463:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d22cca46ebe9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fc212c485561 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xac6af3bc744f0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d22cca46ebe9; op2val:0x3ff1fc212c485561; op3val:0x3feac6af3bc744f0; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1312, x18)

inst_464:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d22cca46ebe9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fc212c485561 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xac6af3bc744f0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d22cca46ebe9; op2val:0x3ff1fc212c485561; op3val:0x3feac6af3bc744f0; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1328, x18)

inst_465:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d22cca46ebe9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fc212c485561 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xac6af3bc744f0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d22cca46ebe9; op2val:0x3ff1fc212c485561; op3val:0x3feac6af3bc744f0; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1344, x18)

inst_466:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbca3817f8a7b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1d85bca5f2b23 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0954578f60ef8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedbca3817f8a7b; op2val:0x3fd1d85bca5f2b23; op3val:0x3fd0954578f60ef8; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1360, x18)

inst_467:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbca3817f8a7b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1d85bca5f2b23 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0954578f60ef8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedbca3817f8a7b; op2val:0x3fd1d85bca5f2b23; op3val:0x3fd0954578f60ef8; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1376, x18)

inst_468:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbca3817f8a7b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1d85bca5f2b23 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0954578f60ef8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedbca3817f8a7b; op2val:0x3fd1d85bca5f2b23; op3val:0x3fd0954578f60ef8; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1392, x18)

inst_469:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbca3817f8a7b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1d85bca5f2b23 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0954578f60ef8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedbca3817f8a7b; op2val:0x3fd1d85bca5f2b23; op3val:0x3fd0954578f60ef8; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1408, x18)

inst_470:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbca3817f8a7b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1d85bca5f2b23 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0954578f60ef8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedbca3817f8a7b; op2val:0x3fd1d85bca5f2b23; op3val:0x3fd0954578f60ef8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1424, x18)

inst_471:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4272f8a6ec88 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd728940035e82 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd886b3f1671b and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4272f8a6ec88; op2val:0x3fed728940035e82; op3val:0x3febd886b3f1671b; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1440, x18)

inst_472:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4272f8a6ec88 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd728940035e82 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd886b3f1671b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4272f8a6ec88; op2val:0x3fed728940035e82; op3val:0x3febd886b3f1671b; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1456, x18)

inst_473:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4272f8a6ec88 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd728940035e82 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd886b3f1671b and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4272f8a6ec88; op2val:0x3fed728940035e82; op3val:0x3febd886b3f1671b; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1472, x18)

inst_474:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4272f8a6ec88 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd728940035e82 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd886b3f1671b and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4272f8a6ec88; op2val:0x3fed728940035e82; op3val:0x3febd886b3f1671b; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1488, x18)

inst_475:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4272f8a6ec88 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd728940035e82 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd886b3f1671b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4272f8a6ec88; op2val:0x3fed728940035e82; op3val:0x3febd886b3f1671b; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1504, x18)

inst_476:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x30cb7640ad0c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18931256b030c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4e0da40128d8b and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe30cb7640ad0c0; op2val:0x3ff18931256b030c; op3val:0x3fe4e0da40128d8b; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1520, x18)

inst_477:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x30cb7640ad0c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18931256b030c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4e0da40128d8b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe30cb7640ad0c0; op2val:0x3ff18931256b030c; op3val:0x3fe4e0da40128d8b; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1536, x18)

inst_478:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x30cb7640ad0c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18931256b030c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4e0da40128d8b and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe30cb7640ad0c0; op2val:0x3ff18931256b030c; op3val:0x3fe4e0da40128d8b; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1552, x18)

inst_479:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x30cb7640ad0c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18931256b030c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4e0da40128d8b and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe30cb7640ad0c0; op2val:0x3ff18931256b030c; op3val:0x3fe4e0da40128d8b; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1568, x18)

inst_480:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x30cb7640ad0c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18931256b030c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4e0da40128d8b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe30cb7640ad0c0; op2val:0x3ff18931256b030c; op3val:0x3fe4e0da40128d8b; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1584, x18)

inst_481:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2c502d22b53c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3dc1a802fa803 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x74c2756e1db1c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2c502d22b53c0; op2val:0x3ff3dc1a802fa803; op3val:0x3fd74c2756e1db1c; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1600, x18)

inst_482:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2c502d22b53c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3dc1a802fa803 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x74c2756e1db1c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2c502d22b53c0; op2val:0x3ff3dc1a802fa803; op3val:0x3fd74c2756e1db1c; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1616, x18)

inst_483:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2c502d22b53c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3dc1a802fa803 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x74c2756e1db1c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2c502d22b53c0; op2val:0x3ff3dc1a802fa803; op3val:0x3fd74c2756e1db1c; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1632, x18)

inst_484:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2c502d22b53c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3dc1a802fa803 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x74c2756e1db1c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2c502d22b53c0; op2val:0x3ff3dc1a802fa803; op3val:0x3fd74c2756e1db1c; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1648, x18)

inst_485:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2c502d22b53c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3dc1a802fa803 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x74c2756e1db1c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2c502d22b53c0; op2val:0x3ff3dc1a802fa803; op3val:0x3fd74c2756e1db1c; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1664, x18)

inst_486:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x508904f349bc9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0547da5f301c4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x577a271e39f58 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe508904f349bc9; op2val:0x3fd0547da5f301c4; op3val:0x3fc577a271e39f58; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1680, x18)

inst_487:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x508904f349bc9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0547da5f301c4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x577a271e39f58 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe508904f349bc9; op2val:0x3fd0547da5f301c4; op3val:0x3fc577a271e39f58; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1696, x18)

inst_488:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x508904f349bc9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0547da5f301c4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x577a271e39f58 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe508904f349bc9; op2val:0x3fd0547da5f301c4; op3val:0x3fc577a271e39f58; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1712, x18)

inst_489:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x508904f349bc9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0547da5f301c4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x577a271e39f58 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe508904f349bc9; op2val:0x3fd0547da5f301c4; op3val:0x3fc577a271e39f58; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1728, x18)

inst_490:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x508904f349bc9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0547da5f301c4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x577a271e39f58 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe508904f349bc9; op2val:0x3fd0547da5f301c4; op3val:0x3fc577a271e39f58; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1744, x18)

inst_491:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fc0a16474f20 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xccaac3ad29241 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x1fb1b629d92c0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fc0a16474f20; op2val:0x3faccaac3ad29241; op3val:0x3f91fb1b629d92c0; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1760, x18)

inst_492:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fc0a16474f20 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xccaac3ad29241 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x1fb1b629d92c0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fc0a16474f20; op2val:0x3faccaac3ad29241; op3val:0x3f91fb1b629d92c0; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1776, x18)

inst_493:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fc0a16474f20 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xccaac3ad29241 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x1fb1b629d92c0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fc0a16474f20; op2val:0x3faccaac3ad29241; op3val:0x3f91fb1b629d92c0; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1792, x18)

inst_494:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fc0a16474f20 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xccaac3ad29241 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x1fb1b629d92c0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fc0a16474f20; op2val:0x3faccaac3ad29241; op3val:0x3f91fb1b629d92c0; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1808, x18)

inst_495:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fc0a16474f20 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xccaac3ad29241 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x1fb1b629d92c0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fc0a16474f20; op2val:0x3faccaac3ad29241; op3val:0x3f91fb1b629d92c0; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1824, x18)

inst_496:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x36bd6c01e666e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa02a6f04aa958 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf92751589a90c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe36bd6c01e666e; op2val:0x3fea02a6f04aa958; op3val:0x3fdf92751589a90c; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1840, x18)

inst_497:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x36bd6c01e666e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa02a6f04aa958 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf92751589a90c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe36bd6c01e666e; op2val:0x3fea02a6f04aa958; op3val:0x3fdf92751589a90c; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1856, x18)

inst_498:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x36bd6c01e666e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa02a6f04aa958 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf92751589a90c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe36bd6c01e666e; op2val:0x3fea02a6f04aa958; op3val:0x3fdf92751589a90c; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1872, x18)

inst_499:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x36bd6c01e666e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa02a6f04aa958 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf92751589a90c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe36bd6c01e666e; op2val:0x3fea02a6f04aa958; op3val:0x3fdf92751589a90c; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1888, x18)

inst_500:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x36bd6c01e666e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa02a6f04aa958 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf92751589a90c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe36bd6c01e666e; op2val:0x3fea02a6f04aa958; op3val:0x3fdf92751589a90c; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1904, x18)

inst_501:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x028f275d0fdf4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4f5baef6f1dea and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x52b5ee1c7c748 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe028f275d0fdf4; op2val:0x3fd4f5baef6f1dea; op3val:0x3fc52b5ee1c7c748; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1920, x18)

inst_502:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x028f275d0fdf4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4f5baef6f1dea and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x52b5ee1c7c748 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe028f275d0fdf4; op2val:0x3fd4f5baef6f1dea; op3val:0x3fc52b5ee1c7c748; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1936, x18)

inst_503:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x028f275d0fdf4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4f5baef6f1dea and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x52b5ee1c7c748 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe028f275d0fdf4; op2val:0x3fd4f5baef6f1dea; op3val:0x3fc52b5ee1c7c748; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1952, x18)

inst_504:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x028f275d0fdf4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4f5baef6f1dea and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x52b5ee1c7c748 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe028f275d0fdf4; op2val:0x3fd4f5baef6f1dea; op3val:0x3fc52b5ee1c7c748; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1968, x18)

inst_505:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x028f275d0fdf4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4f5baef6f1dea and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x52b5ee1c7c748 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe028f275d0fdf4; op2val:0x3fd4f5baef6f1dea; op3val:0x3fc52b5ee1c7c748; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1984, x18)

inst_506:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72d9ff5992a78 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x91607b2dac02c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x22b99e95fbbfe and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc72d9ff5992a78; op2val:0x40091607b2dac02c; op3val:0x3fe22b99e95fbbfe; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2000, x18)

inst_507:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72d9ff5992a78 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x91607b2dac02c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x22b99e95fbbfe and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc72d9ff5992a78; op2val:0x40091607b2dac02c; op3val:0x3fe22b99e95fbbfe; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_508:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72d9ff5992a78 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x91607b2dac02c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x22b99e95fbbfe and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc72d9ff5992a78; op2val:0x40091607b2dac02c; op3val:0x3fe22b99e95fbbfe; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72d9ff5992a78 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x91607b2dac02c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x22b99e95fbbfe and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc72d9ff5992a78; op2val:0x40091607b2dac02c; op3val:0x3fe22b99e95fbbfe; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 16, x18)
addi x16,x16,2040

inst_510:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72d9ff5992a78 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x91607b2dac02c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x22b99e95fbbfe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc72d9ff5992a78; op2val:0x40091607b2dac02c; op3val:0x3fe22b99e95fbbfe; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 32, x18)

inst_511:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0bb3f31b1b890 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xb59485b35c122 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc9957dd5de148 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb0bb3f31b1b890; op2val:0x402b59485b35c122; op3val:0x3fec9957dd5de148; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 48, x18)

inst_512:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0bb3f31b1b890 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xb59485b35c122 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc9957dd5de148 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb0bb3f31b1b890; op2val:0x402b59485b35c122; op3val:0x3fec9957dd5de148; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 64, x18)

inst_513:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0bb3f31b1b890 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xb59485b35c122 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc9957dd5de148 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb0bb3f31b1b890; op2val:0x402b59485b35c122; op3val:0x3fec9957dd5de148; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 80, x18)

inst_514:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0bb3f31b1b890 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xb59485b35c122 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc9957dd5de148 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb0bb3f31b1b890; op2val:0x402b59485b35c122; op3val:0x3fec9957dd5de148; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 96, x18)

inst_515:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0bb3f31b1b890 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xb59485b35c122 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc9957dd5de148 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb0bb3f31b1b890; op2val:0x402b59485b35c122; op3val:0x3fec9957dd5de148; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 112, x18)

inst_516:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9eff8edf16c68 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4bc7d0ce48c78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cec2c7046c97 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9eff8edf16c68; op2val:0x3fe4bc7d0ce48c78; op3val:0x3fe0cec2c7046c97; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 128, x18)

inst_517:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9eff8edf16c68 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4bc7d0ce48c78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cec2c7046c97 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9eff8edf16c68; op2val:0x3fe4bc7d0ce48c78; op3val:0x3fe0cec2c7046c97; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 144, x18)

inst_518:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9eff8edf16c68 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4bc7d0ce48c78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cec2c7046c97 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9eff8edf16c68; op2val:0x3fe4bc7d0ce48c78; op3val:0x3fe0cec2c7046c97; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 160, x18)

inst_519:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9eff8edf16c68 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4bc7d0ce48c78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cec2c7046c97 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9eff8edf16c68; op2val:0x3fe4bc7d0ce48c78; op3val:0x3fe0cec2c7046c97; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 176, x18)

inst_520:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9eff8edf16c68 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4bc7d0ce48c78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cec2c7046c97 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9eff8edf16c68; op2val:0x3fe4bc7d0ce48c78; op3val:0x3fe0cec2c7046c97; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 192, x18)

inst_521:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1153603f46bb0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xae959b4eb2cac and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcbb9c702cf346 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1153603f46bb0; op2val:0x3ffae959b4eb2cac; op3val:0x3fdcbb9c702cf346; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 208, x18)

inst_522:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1153603f46bb0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xae959b4eb2cac and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcbb9c702cf346 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1153603f46bb0; op2val:0x3ffae959b4eb2cac; op3val:0x3fdcbb9c702cf346; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 224, x18)

inst_523:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1153603f46bb0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xae959b4eb2cac and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcbb9c702cf346 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1153603f46bb0; op2val:0x3ffae959b4eb2cac; op3val:0x3fdcbb9c702cf346; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 240, x18)

inst_524:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1153603f46bb0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xae959b4eb2cac and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcbb9c702cf346 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1153603f46bb0; op2val:0x3ffae959b4eb2cac; op3val:0x3fdcbb9c702cf346; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 256, x18)

inst_525:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1153603f46bb0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xae959b4eb2cac and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcbb9c702cf346 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1153603f46bb0; op2val:0x3ffae959b4eb2cac; op3val:0x3fdcbb9c702cf346; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 272, x18)

inst_526:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fc52e3da29f3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x504be1a8d115c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8248dbed1fab and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7fc52e3da29f3; op2val:0x3ff504be1a8d115c; op3val:0x3fef8248dbed1fab; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 288, x18)

inst_527:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fc52e3da29f3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x504be1a8d115c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8248dbed1fab and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7fc52e3da29f3; op2val:0x3ff504be1a8d115c; op3val:0x3fef8248dbed1fab; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 304, x18)

inst_528:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fc52e3da29f3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x504be1a8d115c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8248dbed1fab and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7fc52e3da29f3; op2val:0x3ff504be1a8d115c; op3val:0x3fef8248dbed1fab; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 320, x18)

inst_529:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fc52e3da29f3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x504be1a8d115c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8248dbed1fab and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7fc52e3da29f3; op2val:0x3ff504be1a8d115c; op3val:0x3fef8248dbed1fab; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 336, x18)

inst_530:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fc52e3da29f3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x504be1a8d115c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8248dbed1fab and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7fc52e3da29f3; op2val:0x3ff504be1a8d115c; op3val:0x3fef8248dbed1fab; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 352, x18)

inst_531:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4e55e1cc90863 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80eab026560b2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf6b353405a20f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4e55e1cc90863; op2val:0x3ff80eab026560b2; op3val:0x3fef6b353405a20f; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 368, x18)

inst_532:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4e55e1cc90863 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80eab026560b2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf6b353405a20f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4e55e1cc90863; op2val:0x3ff80eab026560b2; op3val:0x3fef6b353405a20f; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 384, x18)

inst_533:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4e55e1cc90863 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80eab026560b2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf6b353405a20f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4e55e1cc90863; op2val:0x3ff80eab026560b2; op3val:0x3fef6b353405a20f; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 400, x18)

inst_534:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4e55e1cc90863 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80eab026560b2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf6b353405a20f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4e55e1cc90863; op2val:0x3ff80eab026560b2; op3val:0x3fef6b353405a20f; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 416, x18)

inst_535:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4e55e1cc90863 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80eab026560b2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf6b353405a20f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4e55e1cc90863; op2val:0x3ff80eab026560b2; op3val:0x3fef6b353405a20f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 432, x18)

inst_536:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xffe8c629f6c0c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa4fd675f080ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa4ea4e6eafc30 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdffe8c629f6c0c; op2val:0x3ffa4fd675f080ea; op3val:0x3fea4ea4e6eafc30; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 448, x18)

inst_537:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xffe8c629f6c0c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa4fd675f080ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa4ea4e6eafc30 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdffe8c629f6c0c; op2val:0x3ffa4fd675f080ea; op3val:0x3fea4ea4e6eafc30; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 464, x18)

inst_538:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xffe8c629f6c0c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa4fd675f080ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa4ea4e6eafc30 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdffe8c629f6c0c; op2val:0x3ffa4fd675f080ea; op3val:0x3fea4ea4e6eafc30; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 480, x18)

inst_539:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xffe8c629f6c0c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa4fd675f080ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa4ea4e6eafc30 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdffe8c629f6c0c; op2val:0x3ffa4fd675f080ea; op3val:0x3fea4ea4e6eafc30; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 496, x18)

inst_540:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xffe8c629f6c0c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa4fd675f080ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa4ea4e6eafc30 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdffe8c629f6c0c; op2val:0x3ffa4fd675f080ea; op3val:0x3fea4ea4e6eafc30; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 512, x18)

inst_541:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xec8c2dcb4c00c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x79e5c3ea50872 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b8a40e379ddd and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcec8c2dcb4c00c; op2val:0x40079e5c3ea50872; op3val:0x3fe6b8a40e379ddd; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 528, x18)

inst_542:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xec8c2dcb4c00c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x79e5c3ea50872 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b8a40e379ddd and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcec8c2dcb4c00c; op2val:0x40079e5c3ea50872; op3val:0x3fe6b8a40e379ddd; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 544, x18)

inst_543:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xec8c2dcb4c00c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x79e5c3ea50872 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b8a40e379ddd and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcec8c2dcb4c00c; op2val:0x40079e5c3ea50872; op3val:0x3fe6b8a40e379ddd; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 560, x18)

inst_544:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xec8c2dcb4c00c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x79e5c3ea50872 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b8a40e379ddd and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcec8c2dcb4c00c; op2val:0x40079e5c3ea50872; op3val:0x3fe6b8a40e379ddd; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 576, x18)

inst_545:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xec8c2dcb4c00c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x79e5c3ea50872 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6b8a40e379ddd and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcec8c2dcb4c00c; op2val:0x40079e5c3ea50872; op3val:0x3fe6b8a40e379ddd; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 592, x18)

inst_546:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x60428817c3da5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x02998bad65ec7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x63d6551e02b09 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe60428817c3da5; op2val:0x3ff02998bad65ec7; op3val:0x3fe63d6551e02b09; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 608, x18)

inst_547:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x60428817c3da5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x02998bad65ec7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x63d6551e02b09 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe60428817c3da5; op2val:0x3ff02998bad65ec7; op3val:0x3fe63d6551e02b09; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 624, x18)

inst_548:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x60428817c3da5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x02998bad65ec7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x63d6551e02b09 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe60428817c3da5; op2val:0x3ff02998bad65ec7; op3val:0x3fe63d6551e02b09; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 640, x18)

inst_549:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x60428817c3da5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x02998bad65ec7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x63d6551e02b09 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe60428817c3da5; op2val:0x3ff02998bad65ec7; op3val:0x3fe63d6551e02b09; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 656, x18)

inst_550:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x60428817c3da5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x02998bad65ec7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x63d6551e02b09 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe60428817c3da5; op2val:0x3ff02998bad65ec7; op3val:0x3fe63d6551e02b09; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 672, x18)

inst_551:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe634a134681ac and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xae607e1da3637 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x98b1d50456113 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee634a134681ac; op2val:0x3feae607e1da3637; op3val:0x3fe98b1d50456113; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 688, x18)

inst_552:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe634a134681ac and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xae607e1da3637 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x98b1d50456113 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee634a134681ac; op2val:0x3feae607e1da3637; op3val:0x3fe98b1d50456113; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 704, x18)

inst_553:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe634a134681ac and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xae607e1da3637 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x98b1d50456113 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee634a134681ac; op2val:0x3feae607e1da3637; op3val:0x3fe98b1d50456113; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 720, x18)

inst_554:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe634a134681ac and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xae607e1da3637 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x98b1d50456113 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee634a134681ac; op2val:0x3feae607e1da3637; op3val:0x3fe98b1d50456113; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 736, x18)

inst_555:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe634a134681ac and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xae607e1da3637 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x98b1d50456113 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee634a134681ac; op2val:0x3feae607e1da3637; op3val:0x3fe98b1d50456113; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 752, x18)

inst_556:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7f5fa41f86ad and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe21aed532adf0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad568b6f3d1b9 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec7f5fa41f86ad; op2val:0x3fee21aed532adf0; op3val:0x3fead568b6f3d1b9; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 768, x18)

inst_557:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7f5fa41f86ad and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe21aed532adf0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad568b6f3d1b9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec7f5fa41f86ad; op2val:0x3fee21aed532adf0; op3val:0x3fead568b6f3d1b9; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 784, x18)

inst_558:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7f5fa41f86ad and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe21aed532adf0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad568b6f3d1b9 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec7f5fa41f86ad; op2val:0x3fee21aed532adf0; op3val:0x3fead568b6f3d1b9; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 800, x18)

inst_559:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7f5fa41f86ad and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe21aed532adf0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad568b6f3d1b9 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec7f5fa41f86ad; op2val:0x3fee21aed532adf0; op3val:0x3fead568b6f3d1b9; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 816, x18)

inst_560:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7f5fa41f86ad and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe21aed532adf0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad568b6f3d1b9 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec7f5fa41f86ad; op2val:0x3fee21aed532adf0; op3val:0x3fead568b6f3d1b9; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 832, x18)

inst_561:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe47063252de6a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c1ab1d9e2307 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85ebb1c3f5bec and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde47063252de6a; op2val:0x3ff9c1ab1d9e2307; op3val:0x3fe85ebb1c3f5bec; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 848, x18)

inst_562:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe47063252de6a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c1ab1d9e2307 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85ebb1c3f5bec and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde47063252de6a; op2val:0x3ff9c1ab1d9e2307; op3val:0x3fe85ebb1c3f5bec; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 864, x18)

inst_563:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe47063252de6a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c1ab1d9e2307 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85ebb1c3f5bec and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde47063252de6a; op2val:0x3ff9c1ab1d9e2307; op3val:0x3fe85ebb1c3f5bec; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 880, x18)

inst_564:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe47063252de6a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c1ab1d9e2307 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85ebb1c3f5bec and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde47063252de6a; op2val:0x3ff9c1ab1d9e2307; op3val:0x3fe85ebb1c3f5bec; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 896, x18)

inst_565:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe47063252de6a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c1ab1d9e2307 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85ebb1c3f5bec and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde47063252de6a; op2val:0x3ff9c1ab1d9e2307; op3val:0x3fe85ebb1c3f5bec; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 912, x18)

inst_566:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76db16583602c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x30799ddc49483 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbdd63f3d3c1e4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76db16583602c; op2val:0x3ff30799ddc49483; op3val:0x3febdd63f3d3c1e4; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 928, x18)

inst_567:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76db16583602c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x30799ddc49483 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbdd63f3d3c1e4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76db16583602c; op2val:0x3ff30799ddc49483; op3val:0x3febdd63f3d3c1e4; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 944, x18)

inst_568:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76db16583602c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x30799ddc49483 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbdd63f3d3c1e4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76db16583602c; op2val:0x3ff30799ddc49483; op3val:0x3febdd63f3d3c1e4; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 960, x18)

inst_569:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76db16583602c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x30799ddc49483 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbdd63f3d3c1e4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76db16583602c; op2val:0x3ff30799ddc49483; op3val:0x3febdd63f3d3c1e4; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 976, x18)

inst_570:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76db16583602c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x30799ddc49483 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbdd63f3d3c1e4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76db16583602c; op2val:0x3ff30799ddc49483; op3val:0x3febdd63f3d3c1e4; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 992, x18)

inst_571:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc9a98f4a86d46 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x500636fb865bd and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x2c5cd42b4d310 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc9a98f4a86d46; op2val:0x3fc500636fb865bd; op3val:0x3fb2c5cd42b4d310; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1008, x18)

inst_572:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc9a98f4a86d46 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x500636fb865bd and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x2c5cd42b4d310 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc9a98f4a86d46; op2val:0x3fc500636fb865bd; op3val:0x3fb2c5cd42b4d310; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1024, x18)

inst_573:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc9a98f4a86d46 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x500636fb865bd and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x2c5cd42b4d310 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc9a98f4a86d46; op2val:0x3fc500636fb865bd; op3val:0x3fb2c5cd42b4d310; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1040, x18)

inst_574:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc9a98f4a86d46 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x500636fb865bd and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x2c5cd42b4d310 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc9a98f4a86d46; op2val:0x3fc500636fb865bd; op3val:0x3fb2c5cd42b4d310; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1056, x18)

inst_575:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc9a98f4a86d46 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x500636fb865bd and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x2c5cd42b4d310 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc9a98f4a86d46; op2val:0x3fc500636fb865bd; op3val:0x3fb2c5cd42b4d310; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1072, x18)

inst_576:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17aaff3f42d33 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x35b84383a00f7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x525ab2c05d4ae and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17aaff3f42d33; op2val:0x3ff35b84383a00f7; op3val:0x3fe525ab2c05d4ae; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1088, x18)

inst_577:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17aaff3f42d33 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x35b84383a00f7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x525ab2c05d4ae and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17aaff3f42d33; op2val:0x3ff35b84383a00f7; op3val:0x3fe525ab2c05d4ae; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1104, x18)

inst_578:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17aaff3f42d33 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x35b84383a00f7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x525ab2c05d4ae and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17aaff3f42d33; op2val:0x3ff35b84383a00f7; op3val:0x3fe525ab2c05d4ae; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1120, x18)

inst_579:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17aaff3f42d33 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x35b84383a00f7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x525ab2c05d4ae and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17aaff3f42d33; op2val:0x3ff35b84383a00f7; op3val:0x3fe525ab2c05d4ae; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1136, x18)

inst_580:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17aaff3f42d33 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x35b84383a00f7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x525ab2c05d4ae and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17aaff3f42d33; op2val:0x3ff35b84383a00f7; op3val:0x3fe525ab2c05d4ae; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1152, x18)

inst_581:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdde3a6af133c3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x2d18c08b00fb1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x19096fe0d9bd8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedde3a6af133c3; op2val:0x3fc2d18c08b00fb1; op3val:0x3fc19096fe0d9bd8; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1168, x18)

inst_582:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdde3a6af133c3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x2d18c08b00fb1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x19096fe0d9bd8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedde3a6af133c3; op2val:0x3fc2d18c08b00fb1; op3val:0x3fc19096fe0d9bd8; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1184, x18)

inst_583:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdde3a6af133c3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x2d18c08b00fb1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x19096fe0d9bd8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedde3a6af133c3; op2val:0x3fc2d18c08b00fb1; op3val:0x3fc19096fe0d9bd8; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1200, x18)

inst_584:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdde3a6af133c3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x2d18c08b00fb1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x19096fe0d9bd8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedde3a6af133c3; op2val:0x3fc2d18c08b00fb1; op3val:0x3fc19096fe0d9bd8; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1216, x18)

inst_585:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdde3a6af133c3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x2d18c08b00fb1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x19096fe0d9bd8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedde3a6af133c3; op2val:0x3fc2d18c08b00fb1; op3val:0x3fc19096fe0d9bd8; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1232, x18)

inst_586:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd51fb319139f1 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x415ad547ac9cd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x267199c710454 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed51fb319139f1; op2val:0x3fc415ad547ac9cd; op3val:0x3fc267199c710454; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1248, x18)

inst_587:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd51fb319139f1 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x415ad547ac9cd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x267199c710454 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed51fb319139f1; op2val:0x3fc415ad547ac9cd; op3val:0x3fc267199c710454; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1264, x18)

inst_588:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd51fb319139f1 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x415ad547ac9cd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x267199c710454 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed51fb319139f1; op2val:0x3fc415ad547ac9cd; op3val:0x3fc267199c710454; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1280, x18)

inst_589:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd51fb319139f1 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x415ad547ac9cd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x267199c710454 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed51fb319139f1; op2val:0x3fc415ad547ac9cd; op3val:0x3fc267199c710454; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1296, x18)

inst_590:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd51fb319139f1 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x415ad547ac9cd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x267199c710454 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed51fb319139f1; op2val:0x3fc415ad547ac9cd; op3val:0x3fc267199c710454; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1312, x18)

inst_591:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x76557d74a9df4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x15d6391f90e25 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9643bfbd4c78c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd76557d74a9df4; op2val:0x3fe15d6391f90e25; op3val:0x3fc9643bfbd4c78c; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1328, x18)

inst_592:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x76557d74a9df4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x15d6391f90e25 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9643bfbd4c78c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd76557d74a9df4; op2val:0x3fe15d6391f90e25; op3val:0x3fc9643bfbd4c78c; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1344, x18)

inst_593:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x76557d74a9df4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x15d6391f90e25 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9643bfbd4c78c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd76557d74a9df4; op2val:0x3fe15d6391f90e25; op3val:0x3fc9643bfbd4c78c; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1360, x18)

inst_594:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x76557d74a9df4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x15d6391f90e25 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9643bfbd4c78c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd76557d74a9df4; op2val:0x3fe15d6391f90e25; op3val:0x3fc9643bfbd4c78c; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1376, x18)
addi x16,x16,2040

inst_595:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x76557d74a9df4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x15d6391f90e25 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9643bfbd4c78c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd76557d74a9df4; op2val:0x3fe15d6391f90e25; op3val:0x3fc9643bfbd4c78c; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1392, x18)

inst_596:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdaec8a2ec9f57 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x103bacd037aaf and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf90a07eec3ab0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedaec8a2ec9f57; op2val:0x3fb103bacd037aaf; op3val:0x3faf90a07eec3ab0; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1408, x18)

inst_597:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdaec8a2ec9f57 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x103bacd037aaf and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf90a07eec3ab0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedaec8a2ec9f57; op2val:0x3fb103bacd037aaf; op3val:0x3faf90a07eec3ab0; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1424, x18)

inst_598:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdaec8a2ec9f57 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x103bacd037aaf and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf90a07eec3ab0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedaec8a2ec9f57; op2val:0x3fb103bacd037aaf; op3val:0x3faf90a07eec3ab0; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1440, x18)

inst_599:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdaec8a2ec9f57 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x103bacd037aaf and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf90a07eec3ab0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedaec8a2ec9f57; op2val:0x3fb103bacd037aaf; op3val:0x3faf90a07eec3ab0; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1456, x18)

inst_600:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdaec8a2ec9f57 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x103bacd037aaf and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf90a07eec3ab0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedaec8a2ec9f57; op2val:0x3fb103bacd037aaf; op3val:0x3faf90a07eec3ab0; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1472, x18)

inst_601:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f4709e8882ee and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd7d87afc0ff29 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x263cd846b3a5b and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f4709e8882ee; op2val:0x3ffd7d87afc0ff29; op3val:0x3fe263cd846b3a5b; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1488, x18)

inst_602:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f4709e8882ee and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd7d87afc0ff29 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x263cd846b3a5b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f4709e8882ee; op2val:0x3ffd7d87afc0ff29; op3val:0x3fe263cd846b3a5b; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1504, x18)

inst_603:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f4709e8882ee and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd7d87afc0ff29 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x263cd846b3a5b and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f4709e8882ee; op2val:0x3ffd7d87afc0ff29; op3val:0x3fe263cd846b3a5b; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1520, x18)

inst_604:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f4709e8882ee and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd7d87afc0ff29 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x263cd846b3a5b and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f4709e8882ee; op2val:0x3ffd7d87afc0ff29; op3val:0x3fe263cd846b3a5b; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1536, x18)

inst_605:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f4709e8882ee and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd7d87afc0ff29 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x263cd846b3a5b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f4709e8882ee; op2val:0x3ffd7d87afc0ff29; op3val:0x3fe263cd846b3a5b; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1552, x18)

inst_606:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd232026e23d7e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x08fa92bae5289 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe28be28cd38ec and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed232026e23d7e; op2val:0x3ff08fa92bae5289; op3val:0x3fee28be28cd38ec; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1568, x18)

inst_607:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd232026e23d7e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x08fa92bae5289 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe28be28cd38ec and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed232026e23d7e; op2val:0x3ff08fa92bae5289; op3val:0x3fee28be28cd38ec; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1584, x18)

inst_608:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd232026e23d7e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x08fa92bae5289 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe28be28cd38ec and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed232026e23d7e; op2val:0x3ff08fa92bae5289; op3val:0x3fee28be28cd38ec; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1600, x18)

inst_609:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd232026e23d7e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x08fa92bae5289 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe28be28cd38ec and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed232026e23d7e; op2val:0x3ff08fa92bae5289; op3val:0x3fee28be28cd38ec; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1616, x18)

inst_610:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd232026e23d7e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x08fa92bae5289 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe28be28cd38ec and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed232026e23d7e; op2val:0x3ff08fa92bae5289; op3val:0x3fee28be28cd38ec; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1632, x18)

inst_611:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb7b5f6c0b08d8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6534daadc7c21 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x32c5c4d623466 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb7b5f6c0b08d8; op2val:0x3fe6534daadc7c21; op3val:0x3fd32c5c4d623466; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1648, x18)

inst_612:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb7b5f6c0b08d8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6534daadc7c21 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x32c5c4d623466 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb7b5f6c0b08d8; op2val:0x3fe6534daadc7c21; op3val:0x3fd32c5c4d623466; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1664, x18)

inst_613:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb7b5f6c0b08d8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6534daadc7c21 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x32c5c4d623466 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb7b5f6c0b08d8; op2val:0x3fe6534daadc7c21; op3val:0x3fd32c5c4d623466; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1680, x18)

inst_614:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb7b5f6c0b08d8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6534daadc7c21 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x32c5c4d623466 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb7b5f6c0b08d8; op2val:0x3fe6534daadc7c21; op3val:0x3fd32c5c4d623466; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1696, x18)

inst_615:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb7b5f6c0b08d8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6534daadc7c21 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x32c5c4d623466 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb7b5f6c0b08d8; op2val:0x3fe6534daadc7c21; op3val:0x3fd32c5c4d623466; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1712, x18)

inst_616:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3860b5da85d3 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8535758309e27 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4b12d0f86e6a0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb3860b5da85d3; op2val:0x3fb8535758309e27; op3val:0x3fb4b12d0f86e6a0; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1728, x18)

inst_617:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3860b5da85d3 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8535758309e27 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4b12d0f86e6a0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb3860b5da85d3; op2val:0x3fb8535758309e27; op3val:0x3fb4b12d0f86e6a0; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1744, x18)

inst_618:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3860b5da85d3 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8535758309e27 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4b12d0f86e6a0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb3860b5da85d3; op2val:0x3fb8535758309e27; op3val:0x3fb4b12d0f86e6a0; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1760, x18)

inst_619:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3860b5da85d3 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8535758309e27 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4b12d0f86e6a0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb3860b5da85d3; op2val:0x3fb8535758309e27; op3val:0x3fb4b12d0f86e6a0; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1776, x18)

inst_620:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3860b5da85d3 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8535758309e27 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4b12d0f86e6a0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb3860b5da85d3; op2val:0x3fb8535758309e27; op3val:0x3fb4b12d0f86e6a0; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1792, x18)

inst_621:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72bb260dd2d78 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x061e6d769535c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7b97996604f37 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc72bb260dd2d78; op2val:0x401061e6d769535c; op3val:0x3fe7b97996604f37; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1808, x18)

inst_622:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72bb260dd2d78 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x061e6d769535c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7b97996604f37 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc72bb260dd2d78; op2val:0x401061e6d769535c; op3val:0x3fe7b97996604f37; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1824, x18)

inst_623:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72bb260dd2d78 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x061e6d769535c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7b97996604f37 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc72bb260dd2d78; op2val:0x401061e6d769535c; op3val:0x3fe7b97996604f37; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1840, x18)

inst_624:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72bb260dd2d78 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x061e6d769535c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7b97996604f37 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc72bb260dd2d78; op2val:0x401061e6d769535c; op3val:0x3fe7b97996604f37; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1856, x18)

inst_625:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72bb260dd2d78 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x061e6d769535c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7b97996604f37 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc72bb260dd2d78; op2val:0x401061e6d769535c; op3val:0x3fe7b97996604f37; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1872, x18)

inst_626:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x27ce4cc9a05a7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3a0575357dcc6 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6ad958a5e6c90 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe27ce4cc9a05a7; op2val:0x3fc3a0575357dcc6; op3val:0x3fb6ad958a5e6c90; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1888, x18)

inst_627:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x27ce4cc9a05a7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3a0575357dcc6 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6ad958a5e6c90 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe27ce4cc9a05a7; op2val:0x3fc3a0575357dcc6; op3val:0x3fb6ad958a5e6c90; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1904, x18)

inst_628:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x27ce4cc9a05a7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3a0575357dcc6 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6ad958a5e6c90 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe27ce4cc9a05a7; op2val:0x3fc3a0575357dcc6; op3val:0x3fb6ad958a5e6c90; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1920, x18)

inst_629:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x27ce4cc9a05a7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3a0575357dcc6 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6ad958a5e6c90 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe27ce4cc9a05a7; op2val:0x3fc3a0575357dcc6; op3val:0x3fb6ad958a5e6c90; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1936, x18)

inst_630:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x27ce4cc9a05a7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3a0575357dcc6 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6ad958a5e6c90 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe27ce4cc9a05a7; op2val:0x3fc3a0575357dcc6; op3val:0x3fb6ad958a5e6c90; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1952, x18)

inst_631:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x758816cfa15b7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x31703afe812f6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbdaae4cb88c4f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe758816cfa15b7; op2val:0x3ff31703afe812f6; op3val:0x3febdaae4cb88c4f; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1968, x18)

inst_632:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x758816cfa15b7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x31703afe812f6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbdaae4cb88c4f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe758816cfa15b7; op2val:0x3ff31703afe812f6; op3val:0x3febdaae4cb88c4f; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1984, x18)

inst_633:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x758816cfa15b7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x31703afe812f6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbdaae4cb88c4f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe758816cfa15b7; op2val:0x3ff31703afe812f6; op3val:0x3febdaae4cb88c4f; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2000, x18)

inst_634:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x758816cfa15b7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x31703afe812f6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbdaae4cb88c4f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe758816cfa15b7; op2val:0x3ff31703afe812f6; op3val:0x3febdaae4cb88c4f; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_635:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x758816cfa15b7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x31703afe812f6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbdaae4cb88c4f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe758816cfa15b7; op2val:0x3ff31703afe812f6; op3val:0x3febdaae4cb88c4f; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 0, x18)

inst_636:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xebbb18c605c19 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd7451e0094492 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc49cfed185d94 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feebbb18c605c19; op2val:0x3fcd7451e0094492; op3val:0x3fcc49cfed185d94; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 16, x18)

inst_637:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xebbb18c605c19 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd7451e0094492 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc49cfed185d94 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feebbb18c605c19; op2val:0x3fcd7451e0094492; op3val:0x3fcc49cfed185d94; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 32, x18)

inst_638:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xebbb18c605c19 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd7451e0094492 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc49cfed185d94 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feebbb18c605c19; op2val:0x3fcd7451e0094492; op3val:0x3fcc49cfed185d94; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 48, x18)

inst_639:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xebbb18c605c19 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd7451e0094492 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc49cfed185d94 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feebbb18c605c19; op2val:0x3fcd7451e0094492; op3val:0x3fcc49cfed185d94; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 64, x18)

inst_640:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xebbb18c605c19 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd7451e0094492 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc49cfed185d94 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feebbb18c605c19; op2val:0x3fcd7451e0094492; op3val:0x3fcc49cfed185d94; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 80, x18)

inst_641:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca5a543a9ebd8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa40b0412fbf1b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7807f5ae98daf and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca5a543a9ebd8; op2val:0x3fea40b0412fbf1b; op3val:0x3fe7807f5ae98daf; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 96, x18)

inst_642:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca5a543a9ebd8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa40b0412fbf1b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7807f5ae98daf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca5a543a9ebd8; op2val:0x3fea40b0412fbf1b; op3val:0x3fe7807f5ae98daf; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 112, x18)

inst_643:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca5a543a9ebd8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa40b0412fbf1b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7807f5ae98daf and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca5a543a9ebd8; op2val:0x3fea40b0412fbf1b; op3val:0x3fe7807f5ae98daf; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 128, x18)

inst_644:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca5a543a9ebd8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa40b0412fbf1b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7807f5ae98daf and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca5a543a9ebd8; op2val:0x3fea40b0412fbf1b; op3val:0x3fe7807f5ae98daf; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 144, x18)

inst_645:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca5a543a9ebd8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa40b0412fbf1b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7807f5ae98daf and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca5a543a9ebd8; op2val:0x3fea40b0412fbf1b; op3val:0x3fe7807f5ae98daf; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 160, x18)

inst_646:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb16eb5c57d7ec and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x11e5932279f62 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xcfbbc0fd26100 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb16eb5c57d7ec; op2val:0x3fc11e5932279f62; op3val:0x3f9cfbbc0fd26100; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 176, x18)

inst_647:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb16eb5c57d7ec and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x11e5932279f62 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xcfbbc0fd26100 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb16eb5c57d7ec; op2val:0x3fc11e5932279f62; op3val:0x3f9cfbbc0fd26100; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 192, x18)

inst_648:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb16eb5c57d7ec and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x11e5932279f62 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xcfbbc0fd26100 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb16eb5c57d7ec; op2val:0x3fc11e5932279f62; op3val:0x3f9cfbbc0fd26100; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 208, x18)

inst_649:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb16eb5c57d7ec and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x11e5932279f62 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xcfbbc0fd26100 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb16eb5c57d7ec; op2val:0x3fc11e5932279f62; op3val:0x3f9cfbbc0fd26100; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 224, x18)

inst_650:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb16eb5c57d7ec and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x11e5932279f62 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xcfbbc0fd26100 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb16eb5c57d7ec; op2val:0x3fc11e5932279f62; op3val:0x3f9cfbbc0fd26100; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 240, x18)

inst_651:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf1546f8c7110 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x053028965855d and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xe8cad14da0780 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf1546f8c7110; op2val:0x3f9053028965855d; op3val:0x3f8e8cad14da0780; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 256, x18)

inst_652:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf1546f8c7110 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x053028965855d and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xe8cad14da0780 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf1546f8c7110; op2val:0x3f9053028965855d; op3val:0x3f8e8cad14da0780; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 272, x18)

inst_653:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf1546f8c7110 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x053028965855d and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xe8cad14da0780 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf1546f8c7110; op2val:0x3f9053028965855d; op3val:0x3f8e8cad14da0780; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 288, x18)

inst_654:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf1546f8c7110 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x053028965855d and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xe8cad14da0780 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf1546f8c7110; op2val:0x3f9053028965855d; op3val:0x3f8e8cad14da0780; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 304, x18)

inst_655:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf1546f8c7110 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x053028965855d and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xe8cad14da0780 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf1546f8c7110; op2val:0x3f9053028965855d; op3val:0x3f8e8cad14da0780; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 320, x18)

inst_656:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x811942da2e8f6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c03293b52579 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf37184050555a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd811942da2e8f6; op2val:0x3ff4c03293b52579; op3val:0x3fdf37184050555a; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 336, x18)

inst_657:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x811942da2e8f6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c03293b52579 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf37184050555a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd811942da2e8f6; op2val:0x3ff4c03293b52579; op3val:0x3fdf37184050555a; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 352, x18)

inst_658:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x811942da2e8f6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c03293b52579 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf37184050555a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd811942da2e8f6; op2val:0x3ff4c03293b52579; op3val:0x3fdf37184050555a; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 368, x18)

inst_659:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x811942da2e8f6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c03293b52579 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf37184050555a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd811942da2e8f6; op2val:0x3ff4c03293b52579; op3val:0x3fdf37184050555a; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 384, x18)

inst_660:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x811942da2e8f6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c03293b52579 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf37184050555a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd811942da2e8f6; op2val:0x3ff4c03293b52579; op3val:0x3fdf37184050555a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 400, x18)

inst_661:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf6bdf56766e62 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5c93766cd5784 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5645e89ee25d2 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef6bdf56766e62; op2val:0x3fe5c93766cd5784; op3val:0x3fe5645e89ee25d2; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 416, x18)

inst_662:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf6bdf56766e62 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5c93766cd5784 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5645e89ee25d2 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef6bdf56766e62; op2val:0x3fe5c93766cd5784; op3val:0x3fe5645e89ee25d2; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 432, x18)

inst_663:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf6bdf56766e62 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5c93766cd5784 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5645e89ee25d2 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef6bdf56766e62; op2val:0x3fe5c93766cd5784; op3val:0x3fe5645e89ee25d2; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 448, x18)

inst_664:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf6bdf56766e62 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5c93766cd5784 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5645e89ee25d2 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef6bdf56766e62; op2val:0x3fe5c93766cd5784; op3val:0x3fe5645e89ee25d2; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 464, x18)

inst_665:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf6bdf56766e62 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5c93766cd5784 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5645e89ee25d2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef6bdf56766e62; op2val:0x3fe5c93766cd5784; op3val:0x3fe5645e89ee25d2; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 480, x18)

inst_666:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc8a70d454a46c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x41354de16dc9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e7c4692ff916 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc8a70d454a46c; op2val:0x3ff41354de16dc9d; op3val:0x3fe1e7c4692ff916; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 496, x18)

inst_667:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc8a70d454a46c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x41354de16dc9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e7c4692ff916 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc8a70d454a46c; op2val:0x3ff41354de16dc9d; op3val:0x3fe1e7c4692ff916; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 512, x18)

inst_668:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc8a70d454a46c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x41354de16dc9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e7c4692ff916 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc8a70d454a46c; op2val:0x3ff41354de16dc9d; op3val:0x3fe1e7c4692ff916; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 528, x18)

inst_669:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc8a70d454a46c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x41354de16dc9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e7c4692ff916 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc8a70d454a46c; op2val:0x3ff41354de16dc9d; op3val:0x3fe1e7c4692ff916; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 544, x18)

inst_670:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc8a70d454a46c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x41354de16dc9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e7c4692ff916 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc8a70d454a46c; op2val:0x3ff41354de16dc9d; op3val:0x3fe1e7c4692ff916; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 560, x18)

inst_671:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1c847dd12877e and fs2 == 0 and fe2 == 0x400 and fm2 == 0xc3b4c84a9b4a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf606556a5e8a8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1c847dd12877e; op2val:0x400c3b4c84a9b4a9; op3val:0x3fef606556a5e8a8; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 576, x18)

inst_672:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1c847dd12877e and fs2 == 0 and fe2 == 0x400 and fm2 == 0xc3b4c84a9b4a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf606556a5e8a8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1c847dd12877e; op2val:0x400c3b4c84a9b4a9; op3val:0x3fef606556a5e8a8; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 592, x18)

inst_673:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1c847dd12877e and fs2 == 0 and fe2 == 0x400 and fm2 == 0xc3b4c84a9b4a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf606556a5e8a8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1c847dd12877e; op2val:0x400c3b4c84a9b4a9; op3val:0x3fef606556a5e8a8; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 608, x18)

inst_674:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1c847dd12877e and fs2 == 0 and fe2 == 0x400 and fm2 == 0xc3b4c84a9b4a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf606556a5e8a8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1c847dd12877e; op2val:0x400c3b4c84a9b4a9; op3val:0x3fef606556a5e8a8; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 624, x18)

inst_675:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1c847dd12877e and fs2 == 0 and fe2 == 0x400 and fm2 == 0xc3b4c84a9b4a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf606556a5e8a8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1c847dd12877e; op2val:0x400c3b4c84a9b4a9; op3val:0x3fef606556a5e8a8; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 640, x18)

inst_676:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9bc75ae92d393 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb1d6037170d84 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5cea377a197e4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9bc75ae92d393; op2val:0x3feb1d6037170d84; op3val:0x3fe5cea377a197e4; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 656, x18)

inst_677:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9bc75ae92d393 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb1d6037170d84 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5cea377a197e4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9bc75ae92d393; op2val:0x3feb1d6037170d84; op3val:0x3fe5cea377a197e4; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 672, x18)

inst_678:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9bc75ae92d393 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb1d6037170d84 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5cea377a197e4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9bc75ae92d393; op2val:0x3feb1d6037170d84; op3val:0x3fe5cea377a197e4; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 688, x18)

inst_679:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9bc75ae92d393 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb1d6037170d84 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5cea377a197e4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9bc75ae92d393; op2val:0x3feb1d6037170d84; op3val:0x3fe5cea377a197e4; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 704, x18)
addi x16,x16,2040

inst_680:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9bc75ae92d393 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb1d6037170d84 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5cea377a197e4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9bc75ae92d393; op2val:0x3feb1d6037170d84; op3val:0x3fe5cea377a197e4; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 720, x18)

inst_681:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf0053a4c4ff66 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5d45fd5bf3603 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x525f5e6509ce7 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf0053a4c4ff66; op2val:0x3ff5d45fd5bf3603; op3val:0x3fe525f5e6509ce7; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 736, x18)

inst_682:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf0053a4c4ff66 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5d45fd5bf3603 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x525f5e6509ce7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf0053a4c4ff66; op2val:0x3ff5d45fd5bf3603; op3val:0x3fe525f5e6509ce7; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 752, x18)

inst_683:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf0053a4c4ff66 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5d45fd5bf3603 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x525f5e6509ce7 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf0053a4c4ff66; op2val:0x3ff5d45fd5bf3603; op3val:0x3fe525f5e6509ce7; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 768, x18)

inst_684:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf0053a4c4ff66 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5d45fd5bf3603 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x525f5e6509ce7 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf0053a4c4ff66; op2val:0x3ff5d45fd5bf3603; op3val:0x3fe525f5e6509ce7; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 784, x18)

inst_685:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf0053a4c4ff66 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5d45fd5bf3603 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x525f5e6509ce7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf0053a4c4ff66; op2val:0x3ff5d45fd5bf3603; op3val:0x3fe525f5e6509ce7; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 800, x18)

inst_686:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad545212cb985 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5b1b56f96c571 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x230f9280611d5 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead545212cb985; op2val:0x3fe5b1b56f96c571; op3val:0x3fe230f9280611d5; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 816, x18)

inst_687:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad545212cb985 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5b1b56f96c571 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x230f9280611d5 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead545212cb985; op2val:0x3fe5b1b56f96c571; op3val:0x3fe230f9280611d5; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 832, x18)

inst_688:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad545212cb985 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5b1b56f96c571 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x230f9280611d5 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead545212cb985; op2val:0x3fe5b1b56f96c571; op3val:0x3fe230f9280611d5; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 848, x18)

inst_689:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad545212cb985 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5b1b56f96c571 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x230f9280611d5 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead545212cb985; op2val:0x3fe5b1b56f96c571; op3val:0x3fe230f9280611d5; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 864, x18)

inst_690:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad545212cb985 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5b1b56f96c571 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x230f9280611d5 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead545212cb985; op2val:0x3fe5b1b56f96c571; op3val:0x3fe230f9280611d5; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 880, x18)

inst_691:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x4be465508e640 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x08afa5318307d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x57273fc6baccc and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f84be465508e640; op2val:0x40308afa5318307d; op3val:0x3fc57273fc6baccc; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 896, x18)

inst_692:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x4be465508e640 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x08afa5318307d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x57273fc6baccc and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f84be465508e640; op2val:0x40308afa5318307d; op3val:0x3fc57273fc6baccc; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 912, x18)

inst_693:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x4be465508e640 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x08afa5318307d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x57273fc6baccc and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f84be465508e640; op2val:0x40308afa5318307d; op3val:0x3fc57273fc6baccc; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 928, x18)

inst_694:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x4be465508e640 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x08afa5318307d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x57273fc6baccc and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f84be465508e640; op2val:0x40308afa5318307d; op3val:0x3fc57273fc6baccc; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 944, x18)

inst_695:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x4be465508e640 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x08afa5318307d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x57273fc6baccc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f84be465508e640; op2val:0x40308afa5318307d; op3val:0x3fc57273fc6baccc; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 960, x18)

inst_696:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3417acc75d428 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb4451fcd63c6c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0685c17594c3a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3417acc75d428; op2val:0x3feb4451fcd63c6c; op3val:0x3fe0685c17594c3a; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 976, x18)

inst_697:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3417acc75d428 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb4451fcd63c6c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0685c17594c3a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3417acc75d428; op2val:0x3feb4451fcd63c6c; op3val:0x3fe0685c17594c3a; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 992, x18)

inst_698:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3417acc75d428 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb4451fcd63c6c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0685c17594c3a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3417acc75d428; op2val:0x3feb4451fcd63c6c; op3val:0x3fe0685c17594c3a; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1008, x18)

inst_699:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3417acc75d428 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb4451fcd63c6c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0685c17594c3a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3417acc75d428; op2val:0x3feb4451fcd63c6c; op3val:0x3fe0685c17594c3a; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1024, x18)

inst_700:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3417acc75d428 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb4451fcd63c6c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0685c17594c3a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3417acc75d428; op2val:0x3feb4451fcd63c6c; op3val:0x3fe0685c17594c3a; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1040, x18)

inst_701:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f922f10365c6 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xf290a2646769e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x85160f9f9d950 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f922f10365c6; op2val:0x3faf290a2646769e; op3val:0x3fa85160f9f9d950; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1056, x18)

inst_702:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f922f10365c6 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xf290a2646769e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x85160f9f9d950 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f922f10365c6; op2val:0x3faf290a2646769e; op3val:0x3fa85160f9f9d950; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1072, x18)

inst_703:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f922f10365c6 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xf290a2646769e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x85160f9f9d950 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f922f10365c6; op2val:0x3faf290a2646769e; op3val:0x3fa85160f9f9d950; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1088, x18)

inst_704:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f922f10365c6 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xf290a2646769e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x85160f9f9d950 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f922f10365c6; op2val:0x3faf290a2646769e; op3val:0x3fa85160f9f9d950; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1104, x18)

inst_705:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f922f10365c6 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xf290a2646769e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x85160f9f9d950 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f922f10365c6; op2val:0x3faf290a2646769e; op3val:0x3fa85160f9f9d950; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1120, x18)

inst_706:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xdfeaadb9b9c40 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1ba5b1126bc5d and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x09df862109dc0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbdfeaadb9b9c40; op2val:0x3fd1ba5b1126bc5d; op3val:0x3fa09df862109dc0; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1136, x18)

inst_707:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xdfeaadb9b9c40 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1ba5b1126bc5d and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x09df862109dc0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbdfeaadb9b9c40; op2val:0x3fd1ba5b1126bc5d; op3val:0x3fa09df862109dc0; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1152, x18)

inst_708:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xdfeaadb9b9c40 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1ba5b1126bc5d and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x09df862109dc0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbdfeaadb9b9c40; op2val:0x3fd1ba5b1126bc5d; op3val:0x3fa09df862109dc0; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1168, x18)

inst_709:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xdfeaadb9b9c40 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1ba5b1126bc5d and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x09df862109dc0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbdfeaadb9b9c40; op2val:0x3fd1ba5b1126bc5d; op3val:0x3fa09df862109dc0; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1184, x18)

inst_710:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xdfeaadb9b9c40 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1ba5b1126bc5d and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x09df862109dc0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbdfeaadb9b9c40; op2val:0x3fd1ba5b1126bc5d; op3val:0x3fa09df862109dc0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_711:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5be5b75120e80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x42e305a3e34f5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6cb74efcd14d and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5be5b75120e80; op2val:0x40042e305a3e34f5; op3val:0x3feb6cb74efcd14d; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1216, x18)

inst_712:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5be5b75120e80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x42e305a3e34f5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6cb74efcd14d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5be5b75120e80; op2val:0x40042e305a3e34f5; op3val:0x3feb6cb74efcd14d; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1232, x18)

inst_713:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5be5b75120e80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x42e305a3e34f5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6cb74efcd14d and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5be5b75120e80; op2val:0x40042e305a3e34f5; op3val:0x3feb6cb74efcd14d; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1248, x18)

inst_714:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5be5b75120e80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x42e305a3e34f5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6cb74efcd14d and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5be5b75120e80; op2val:0x40042e305a3e34f5; op3val:0x3feb6cb74efcd14d; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1264, x18)

inst_715:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5be5b75120e80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x42e305a3e34f5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6cb74efcd14d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5be5b75120e80; op2val:0x40042e305a3e34f5; op3val:0x3feb6cb74efcd14d; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1280, x18)

inst_716:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb0ec5f43df27e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x57ca5fea6ecd2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x22b1782da32b2 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb0ec5f43df27e; op2val:0x3fd57ca5fea6ecd2; op3val:0x3fd22b1782da32b2; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1296, x18)

inst_717:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb0ec5f43df27e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x57ca5fea6ecd2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x22b1782da32b2 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb0ec5f43df27e; op2val:0x3fd57ca5fea6ecd2; op3val:0x3fd22b1782da32b2; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1312, x18)

inst_718:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb0ec5f43df27e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x57ca5fea6ecd2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x22b1782da32b2 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb0ec5f43df27e; op2val:0x3fd57ca5fea6ecd2; op3val:0x3fd22b1782da32b2; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1328, x18)

inst_719:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb0ec5f43df27e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x57ca5fea6ecd2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x22b1782da32b2 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb0ec5f43df27e; op2val:0x3fd57ca5fea6ecd2; op3val:0x3fd22b1782da32b2; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1344, x18)

inst_720:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb0ec5f43df27e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x57ca5fea6ecd2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x22b1782da32b2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb0ec5f43df27e; op2val:0x3fd57ca5fea6ecd2; op3val:0x3fd22b1782da32b2; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1360, x18)

inst_721:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xba7fc0e0adadc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe806c3ac92c4c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa5c79c7235e48 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcba7fc0e0adadc; op2val:0x3fde806c3ac92c4c; op3val:0x3fba5c79c7235e48; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1376, x18)

inst_722:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xba7fc0e0adadc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe806c3ac92c4c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa5c79c7235e48 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcba7fc0e0adadc; op2val:0x3fde806c3ac92c4c; op3val:0x3fba5c79c7235e48; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1392, x18)

inst_723:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xba7fc0e0adadc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe806c3ac92c4c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa5c79c7235e48 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcba7fc0e0adadc; op2val:0x3fde806c3ac92c4c; op3val:0x3fba5c79c7235e48; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1408, x18)

inst_724:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xba7fc0e0adadc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe806c3ac92c4c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa5c79c7235e48 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcba7fc0e0adadc; op2val:0x3fde806c3ac92c4c; op3val:0x3fba5c79c7235e48; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1424, x18)

inst_725:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xba7fc0e0adadc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe806c3ac92c4c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa5c79c7235e48 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcba7fc0e0adadc; op2val:0x3fde806c3ac92c4c; op3val:0x3fba5c79c7235e48; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1440, x18)

inst_726:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda8fea32634a6 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6d2951da42bce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5275e4d93e80c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feda8fea32634a6; op2val:0x3fd6d2951da42bce; op3val:0x3fd5275e4d93e80c; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1456, x18)

inst_727:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda8fea32634a6 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6d2951da42bce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5275e4d93e80c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feda8fea32634a6; op2val:0x3fd6d2951da42bce; op3val:0x3fd5275e4d93e80c; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1472, x18)

inst_728:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda8fea32634a6 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6d2951da42bce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5275e4d93e80c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feda8fea32634a6; op2val:0x3fd6d2951da42bce; op3val:0x3fd5275e4d93e80c; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1488, x18)

inst_729:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda8fea32634a6 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6d2951da42bce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5275e4d93e80c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feda8fea32634a6; op2val:0x3fd6d2951da42bce; op3val:0x3fd5275e4d93e80c; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1504, x18)

inst_730:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda8fea32634a6 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6d2951da42bce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5275e4d93e80c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feda8fea32634a6; op2val:0x3fd6d2951da42bce; op3val:0x3fd5275e4d93e80c; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1520, x18)

inst_731:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdadb3cd50bca1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa33461ae28bce and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84caff2496196 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedadb3cd50bca1; op2val:0x3fea33461ae28bce; op3val:0x3fe84caff2496196; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1536, x18)

inst_732:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdadb3cd50bca1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa33461ae28bce and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84caff2496196 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedadb3cd50bca1; op2val:0x3fea33461ae28bce; op3val:0x3fe84caff2496196; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1552, x18)

inst_733:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdadb3cd50bca1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa33461ae28bce and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84caff2496196 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedadb3cd50bca1; op2val:0x3fea33461ae28bce; op3val:0x3fe84caff2496196; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1568, x18)

inst_734:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdadb3cd50bca1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa33461ae28bce and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84caff2496196 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedadb3cd50bca1; op2val:0x3fea33461ae28bce; op3val:0x3fe84caff2496196; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1584, x18)

inst_735:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdadb3cd50bca1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa33461ae28bce and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84caff2496196 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedadb3cd50bca1; op2val:0x3fea33461ae28bce; op3val:0x3fe84caff2496196; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1600, x18)

inst_736:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc1bac466e3809 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x452f692527aef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1da2b2abc6fcb and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec1bac466e3809; op2val:0x3fe452f692527aef; op3val:0x3fe1da2b2abc6fcb; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1616, x18)

inst_737:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc1bac466e3809 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x452f692527aef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1da2b2abc6fcb and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec1bac466e3809; op2val:0x3fe452f692527aef; op3val:0x3fe1da2b2abc6fcb; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1632, x18)

inst_738:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc1bac466e3809 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x452f692527aef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1da2b2abc6fcb and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec1bac466e3809; op2val:0x3fe452f692527aef; op3val:0x3fe1da2b2abc6fcb; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1648, x18)

inst_739:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc1bac466e3809 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x452f692527aef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1da2b2abc6fcb and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec1bac466e3809; op2val:0x3fe452f692527aef; op3val:0x3fe1da2b2abc6fcb; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1664, x18)

inst_740:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc1bac466e3809 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x452f692527aef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1da2b2abc6fcb and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec1bac466e3809; op2val:0x3fe452f692527aef; op3val:0x3fe1da2b2abc6fcb; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1680, x18)

inst_741:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47ae318d6eca8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5925506beafb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb9c983e555d19 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47ae318d6eca8; op2val:0x4015925506beafb3; op3val:0x3feb9c983e555d19; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1696, x18)

inst_742:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47ae318d6eca8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5925506beafb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb9c983e555d19 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47ae318d6eca8; op2val:0x4015925506beafb3; op3val:0x3feb9c983e555d19; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1712, x18)

inst_743:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47ae318d6eca8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5925506beafb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb9c983e555d19 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47ae318d6eca8; op2val:0x4015925506beafb3; op3val:0x3feb9c983e555d19; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1728, x18)

inst_744:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47ae318d6eca8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5925506beafb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb9c983e555d19 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47ae318d6eca8; op2val:0x4015925506beafb3; op3val:0x3feb9c983e555d19; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1744, x18)

inst_745:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47ae318d6eca8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5925506beafb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb9c983e555d19 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47ae318d6eca8; op2val:0x4015925506beafb3; op3val:0x3feb9c983e555d19; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1760, x18)

inst_746:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc30ed00dba34e and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x07c652db859b4 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xd0c1a7308ca30 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc30ed00dba34e; op2val:0x3fc07c652db859b4; op3val:0x3fad0c1a7308ca30; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1776, x18)

inst_747:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc30ed00dba34e and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x07c652db859b4 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xd0c1a7308ca30 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc30ed00dba34e; op2val:0x3fc07c652db859b4; op3val:0x3fad0c1a7308ca30; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1792, x18)

inst_748:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc30ed00dba34e and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x07c652db859b4 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xd0c1a7308ca30 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc30ed00dba34e; op2val:0x3fc07c652db859b4; op3val:0x3fad0c1a7308ca30; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1808, x18)

inst_749:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc30ed00dba34e and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x07c652db859b4 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xd0c1a7308ca30 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc30ed00dba34e; op2val:0x3fc07c652db859b4; op3val:0x3fad0c1a7308ca30; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1824, x18)

inst_750:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc30ed00dba34e and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x07c652db859b4 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xd0c1a7308ca30 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc30ed00dba34e; op2val:0x3fc07c652db859b4; op3val:0x3fad0c1a7308ca30; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1840, x18)

inst_751:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd9a81849ec5c0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x99c6d487016f1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7b16b804f11a8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fad9a81849ec5c0; op2val:0x40299c6d487016f1; op3val:0x3fe7b16b804f11a8; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1856, x18)

inst_752:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd9a81849ec5c0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x99c6d487016f1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7b16b804f11a8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fad9a81849ec5c0; op2val:0x40299c6d487016f1; op3val:0x3fe7b16b804f11a8; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1872, x18)

inst_753:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd9a81849ec5c0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x99c6d487016f1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7b16b804f11a8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fad9a81849ec5c0; op2val:0x40299c6d487016f1; op3val:0x3fe7b16b804f11a8; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1888, x18)

inst_754:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd9a81849ec5c0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x99c6d487016f1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7b16b804f11a8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fad9a81849ec5c0; op2val:0x40299c6d487016f1; op3val:0x3fe7b16b804f11a8; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1904, x18)

inst_755:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd9a81849ec5c0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x99c6d487016f1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7b16b804f11a8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fad9a81849ec5c0; op2val:0x40299c6d487016f1; op3val:0x3fe7b16b804f11a8; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1920, x18)

inst_756:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x34003a3d07776 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa454693f4f9a6 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xf9b5ee3f7ffd8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd34003a3d07776; op2val:0x3fda454693f4f9a6; op3val:0x3fbf9b5ee3f7ffd8; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1936, x18)

inst_757:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x34003a3d07776 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa454693f4f9a6 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xf9b5ee3f7ffd8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd34003a3d07776; op2val:0x3fda454693f4f9a6; op3val:0x3fbf9b5ee3f7ffd8; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1952, x18)

inst_758:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x34003a3d07776 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa454693f4f9a6 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xf9b5ee3f7ffd8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd34003a3d07776; op2val:0x3fda454693f4f9a6; op3val:0x3fbf9b5ee3f7ffd8; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1968, x18)

inst_759:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x34003a3d07776 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa454693f4f9a6 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xf9b5ee3f7ffd8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd34003a3d07776; op2val:0x3fda454693f4f9a6; op3val:0x3fbf9b5ee3f7ffd8; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1984, x18)

inst_760:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x34003a3d07776 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa454693f4f9a6 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xf9b5ee3f7ffd8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd34003a3d07776; op2val:0x3fda454693f4f9a6; op3val:0x3fbf9b5ee3f7ffd8; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2000, x18)

inst_761:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b3ed2df80fe6 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xcb0ebd2cc8b77 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdf39070266850 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b3ed2df80fe6; op2val:0x3fbcb0ebd2cc8b77; op3val:0x3fadf39070266850; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_762:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b3ed2df80fe6 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xcb0ebd2cc8b77 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdf39070266850 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b3ed2df80fe6; op2val:0x3fbcb0ebd2cc8b77; op3val:0x3fadf39070266850; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b3ed2df80fe6 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xcb0ebd2cc8b77 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdf39070266850 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b3ed2df80fe6; op2val:0x3fbcb0ebd2cc8b77; op3val:0x3fadf39070266850; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 16, x18)

inst_764:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b3ed2df80fe6 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xcb0ebd2cc8b77 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdf39070266850 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b3ed2df80fe6; op2val:0x3fbcb0ebd2cc8b77; op3val:0x3fadf39070266850; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 32, x18)
addi x16,x16,2040

inst_765:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b3ed2df80fe6 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xcb0ebd2cc8b77 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdf39070266850 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b3ed2df80fe6; op2val:0x3fbcb0ebd2cc8b77; op3val:0x3fadf39070266850; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 48, x18)

inst_766:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x186621df7a5ea and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb4546e5fe80be and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xddea6c18a85b8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe186621df7a5ea; op2val:0x3feb4546e5fe80be; op3val:0x3fdddea6c18a85b8; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 64, x18)

inst_767:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x186621df7a5ea and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb4546e5fe80be and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xddea6c18a85b8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe186621df7a5ea; op2val:0x3feb4546e5fe80be; op3val:0x3fdddea6c18a85b8; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 80, x18)

inst_768:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x186621df7a5ea and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb4546e5fe80be and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xddea6c18a85b8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe186621df7a5ea; op2val:0x3feb4546e5fe80be; op3val:0x3fdddea6c18a85b8; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 96, x18)

inst_769:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x186621df7a5ea and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb4546e5fe80be and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xddea6c18a85b8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe186621df7a5ea; op2val:0x3feb4546e5fe80be; op3val:0x3fdddea6c18a85b8; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 112, x18)

inst_770:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x186621df7a5ea and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb4546e5fe80be and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xddea6c18a85b8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe186621df7a5ea; op2val:0x3feb4546e5fe80be; op3val:0x3fdddea6c18a85b8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 128, x18)

inst_771:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf38bf16679f4c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x427cbf4dcb848 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3aa4b95c852f4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf38bf16679f4c; op2val:0x3fe427cbf4dcb848; op3val:0x3fd3aa4b95c852f4; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 144, x18)

inst_772:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf38bf16679f4c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x427cbf4dcb848 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3aa4b95c852f4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf38bf16679f4c; op2val:0x3fe427cbf4dcb848; op3val:0x3fd3aa4b95c852f4; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 160, x18)

inst_773:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf38bf16679f4c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x427cbf4dcb848 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3aa4b95c852f4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf38bf16679f4c; op2val:0x3fe427cbf4dcb848; op3val:0x3fd3aa4b95c852f4; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 176, x18)

inst_774:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf38bf16679f4c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x427cbf4dcb848 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3aa4b95c852f4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf38bf16679f4c; op2val:0x3fe427cbf4dcb848; op3val:0x3fd3aa4b95c852f4; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 192, x18)

inst_775:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf38bf16679f4c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x427cbf4dcb848 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3aa4b95c852f4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf38bf16679f4c; op2val:0x3fe427cbf4dcb848; op3val:0x3fd3aa4b95c852f4; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 208, x18)

inst_776:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8cc57d8368ee8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x46ad6ca7b6828 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfa5047b26a14a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8cc57d8368ee8; op2val:0x3ff46ad6ca7b6828; op3val:0x3fdfa5047b26a14a; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 224, x18)

inst_777:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8cc57d8368ee8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x46ad6ca7b6828 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfa5047b26a14a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8cc57d8368ee8; op2val:0x3ff46ad6ca7b6828; op3val:0x3fdfa5047b26a14a; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 240, x18)

inst_778:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8cc57d8368ee8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x46ad6ca7b6828 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfa5047b26a14a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8cc57d8368ee8; op2val:0x3ff46ad6ca7b6828; op3val:0x3fdfa5047b26a14a; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 256, x18)

inst_779:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8cc57d8368ee8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x46ad6ca7b6828 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfa5047b26a14a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8cc57d8368ee8; op2val:0x3ff46ad6ca7b6828; op3val:0x3fdfa5047b26a14a; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 272, x18)

inst_780:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8cc57d8368ee8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x46ad6ca7b6828 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfa5047b26a14a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8cc57d8368ee8; op2val:0x3ff46ad6ca7b6828; op3val:0x3fdfa5047b26a14a; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 288, x18)

inst_781:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6672f1df8e1f0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x972b19b4031b8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1d0e8beb29257 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6672f1df8e1f0; op2val:0x401972b19b4031b8; op3val:0x3fe1d0e8beb29257; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 304, x18)

inst_782:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6672f1df8e1f0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x972b19b4031b8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1d0e8beb29257 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6672f1df8e1f0; op2val:0x401972b19b4031b8; op3val:0x3fe1d0e8beb29257; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 320, x18)

inst_783:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6672f1df8e1f0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x972b19b4031b8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1d0e8beb29257 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6672f1df8e1f0; op2val:0x401972b19b4031b8; op3val:0x3fe1d0e8beb29257; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 336, x18)

inst_784:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6672f1df8e1f0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x972b19b4031b8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1d0e8beb29257 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6672f1df8e1f0; op2val:0x401972b19b4031b8; op3val:0x3fe1d0e8beb29257; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 352, x18)

inst_785:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6672f1df8e1f0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x972b19b4031b8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1d0e8beb29257 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6672f1df8e1f0; op2val:0x401972b19b4031b8; op3val:0x3fe1d0e8beb29257; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 368, x18)

inst_786:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc0ca02fc6ee52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1861fa95ced4d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeb88b71b22068 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc0ca02fc6ee52; op2val:0x3fe1861fa95ced4d; op3val:0x3fceb88b71b22068; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 384, x18)

inst_787:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc0ca02fc6ee52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1861fa95ced4d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeb88b71b22068 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc0ca02fc6ee52; op2val:0x3fe1861fa95ced4d; op3val:0x3fceb88b71b22068; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 400, x18)

inst_788:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc0ca02fc6ee52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1861fa95ced4d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeb88b71b22068 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc0ca02fc6ee52; op2val:0x3fe1861fa95ced4d; op3val:0x3fceb88b71b22068; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 416, x18)

inst_789:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc0ca02fc6ee52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1861fa95ced4d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeb88b71b22068 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc0ca02fc6ee52; op2val:0x3fe1861fa95ced4d; op3val:0x3fceb88b71b22068; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 432, x18)

inst_790:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc0ca02fc6ee52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1861fa95ced4d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeb88b71b22068 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc0ca02fc6ee52; op2val:0x3fe1861fa95ced4d; op3val:0x3fceb88b71b22068; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 448, x18)

inst_791:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xd268c5e6fa2a8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x14b01d4c63626 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf819d2c61f198 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcd268c5e6fa2a8; op2val:0x40014b01d4c63626; op3val:0x3fdf819d2c61f198; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 464, x18)

inst_792:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xd268c5e6fa2a8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x14b01d4c63626 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf819d2c61f198 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcd268c5e6fa2a8; op2val:0x40014b01d4c63626; op3val:0x3fdf819d2c61f198; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 480, x18)

inst_793:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xd268c5e6fa2a8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x14b01d4c63626 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf819d2c61f198 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcd268c5e6fa2a8; op2val:0x40014b01d4c63626; op3val:0x3fdf819d2c61f198; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 496, x18)

inst_794:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xd268c5e6fa2a8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x14b01d4c63626 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf819d2c61f198 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcd268c5e6fa2a8; op2val:0x40014b01d4c63626; op3val:0x3fdf819d2c61f198; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 512, x18)

inst_795:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xd268c5e6fa2a8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x14b01d4c63626 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf819d2c61f198 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcd268c5e6fa2a8; op2val:0x40014b01d4c63626; op3val:0x3fdf819d2c61f198; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 528, x18)

inst_796:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x80c55a33c1a3f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xeca2b7746a109 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7237ecfd4c9d1 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe80c55a33c1a3f; op2val:0x3feeca2b7746a109; op3val:0x3fe7237ecfd4c9d1; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 544, x18)

inst_797:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x80c55a33c1a3f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xeca2b7746a109 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7237ecfd4c9d1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe80c55a33c1a3f; op2val:0x3feeca2b7746a109; op3val:0x3fe7237ecfd4c9d1; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 560, x18)

inst_798:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x80c55a33c1a3f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xeca2b7746a109 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7237ecfd4c9d1 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe80c55a33c1a3f; op2val:0x3feeca2b7746a109; op3val:0x3fe7237ecfd4c9d1; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 576, x18)

inst_799:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x80c55a33c1a3f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xeca2b7746a109 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7237ecfd4c9d1 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe80c55a33c1a3f; op2val:0x3feeca2b7746a109; op3val:0x3fe7237ecfd4c9d1; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 592, x18)

inst_800:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x80c55a33c1a3f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xeca2b7746a109 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7237ecfd4c9d1 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe80c55a33c1a3f; op2val:0x3feeca2b7746a109; op3val:0x3fe7237ecfd4c9d1; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 608, x18)

inst_801:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc9ac06c779321 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf7b45dc8f3c8c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc241baf8ba09c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec9ac06c779321; op2val:0x3fdf7b45dc8f3c8c; op3val:0x3fdc241baf8ba09c; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 624, x18)

inst_802:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc9ac06c779321 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf7b45dc8f3c8c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc241baf8ba09c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec9ac06c779321; op2val:0x3fdf7b45dc8f3c8c; op3val:0x3fdc241baf8ba09c; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 640, x18)

inst_803:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc9ac06c779321 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf7b45dc8f3c8c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc241baf8ba09c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec9ac06c779321; op2val:0x3fdf7b45dc8f3c8c; op3val:0x3fdc241baf8ba09c; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 656, x18)

inst_804:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc9ac06c779321 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf7b45dc8f3c8c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc241baf8ba09c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec9ac06c779321; op2val:0x3fdf7b45dc8f3c8c; op3val:0x3fdc241baf8ba09c; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 672, x18)

inst_805:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc9ac06c779321 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf7b45dc8f3c8c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc241baf8ba09c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec9ac06c779321; op2val:0x3fdf7b45dc8f3c8c; op3val:0x3fdc241baf8ba09c; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 688, x18)

inst_806:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc73a3ec23ddda and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf0e8bbdd6256b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb9cf5a3937f20 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc73a3ec23ddda; op2val:0x3fdf0e8bbdd6256b; op3val:0x3fcb9cf5a3937f20; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 704, x18)

inst_807:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc73a3ec23ddda and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf0e8bbdd6256b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb9cf5a3937f20 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc73a3ec23ddda; op2val:0x3fdf0e8bbdd6256b; op3val:0x3fcb9cf5a3937f20; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 720, x18)

inst_808:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc73a3ec23ddda and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf0e8bbdd6256b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb9cf5a3937f20 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc73a3ec23ddda; op2val:0x3fdf0e8bbdd6256b; op3val:0x3fcb9cf5a3937f20; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 736, x18)

inst_809:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc73a3ec23ddda and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf0e8bbdd6256b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb9cf5a3937f20 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc73a3ec23ddda; op2val:0x3fdf0e8bbdd6256b; op3val:0x3fcb9cf5a3937f20; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 752, x18)

inst_810:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc73a3ec23ddda and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf0e8bbdd6256b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb9cf5a3937f20 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc73a3ec23ddda; op2val:0x3fdf0e8bbdd6256b; op3val:0x3fcb9cf5a3937f20; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 768, x18)

inst_811:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5918de1454aee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6ddfb02284956 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xed35febc1128c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5918de1454aee; op2val:0x3fe6ddfb02284956; op3val:0x3fded35febc1128c; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 784, x18)

inst_812:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5918de1454aee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6ddfb02284956 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xed35febc1128c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5918de1454aee; op2val:0x3fe6ddfb02284956; op3val:0x3fded35febc1128c; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 800, x18)

inst_813:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5918de1454aee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6ddfb02284956 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xed35febc1128c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5918de1454aee; op2val:0x3fe6ddfb02284956; op3val:0x3fded35febc1128c; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 816, x18)

inst_814:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5918de1454aee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6ddfb02284956 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xed35febc1128c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5918de1454aee; op2val:0x3fe6ddfb02284956; op3val:0x3fded35febc1128c; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 832, x18)

inst_815:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5918de1454aee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6ddfb02284956 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xed35febc1128c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5918de1454aee; op2val:0x3fe6ddfb02284956; op3val:0x3fded35febc1128c; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 848, x18)

inst_816:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1966ef7098cf6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d2bd70e5a48d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc62b40f818672 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1966ef7098cf6; op2val:0x3ff9d2bd70e5a48d; op3val:0x3fdc62b40f818672; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 864, x18)

inst_817:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1966ef7098cf6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d2bd70e5a48d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc62b40f818672 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1966ef7098cf6; op2val:0x3ff9d2bd70e5a48d; op3val:0x3fdc62b40f818672; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 880, x18)

inst_818:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1966ef7098cf6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d2bd70e5a48d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc62b40f818672 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1966ef7098cf6; op2val:0x3ff9d2bd70e5a48d; op3val:0x3fdc62b40f818672; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 896, x18)

inst_819:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1966ef7098cf6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d2bd70e5a48d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc62b40f818672 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1966ef7098cf6; op2val:0x3ff9d2bd70e5a48d; op3val:0x3fdc62b40f818672; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 912, x18)

inst_820:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1966ef7098cf6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d2bd70e5a48d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc62b40f818672 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1966ef7098cf6; op2val:0x3ff9d2bd70e5a48d; op3val:0x3fdc62b40f818672; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 928, x18)

inst_821:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa7c22bf6f0b2b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x45b4ba94c6156 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d92559860a54 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea7c22bf6f0b2b; op2val:0x3fe45b4ba94c6156; op3val:0x3fe0d92559860a54; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 944, x18)

inst_822:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa7c22bf6f0b2b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x45b4ba94c6156 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d92559860a54 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea7c22bf6f0b2b; op2val:0x3fe45b4ba94c6156; op3val:0x3fe0d92559860a54; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 960, x18)

inst_823:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa7c22bf6f0b2b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x45b4ba94c6156 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d92559860a54 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea7c22bf6f0b2b; op2val:0x3fe45b4ba94c6156; op3val:0x3fe0d92559860a54; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 976, x18)

inst_824:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa7c22bf6f0b2b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x45b4ba94c6156 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d92559860a54 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea7c22bf6f0b2b; op2val:0x3fe45b4ba94c6156; op3val:0x3fe0d92559860a54; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 992, x18)

inst_825:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa7c22bf6f0b2b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x45b4ba94c6156 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d92559860a54 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea7c22bf6f0b2b; op2val:0x3fe45b4ba94c6156; op3val:0x3fe0d92559860a54; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1008, x18)

inst_826:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfdfc8fce5560b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x9cec37efa48a3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9b4c85d9a68b8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefdfc8fce5560b; op2val:0x3fc9cec37efa48a3; op3val:0x3fc9b4c85d9a68b8; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1024, x18)

inst_827:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfdfc8fce5560b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x9cec37efa48a3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9b4c85d9a68b8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefdfc8fce5560b; op2val:0x3fc9cec37efa48a3; op3val:0x3fc9b4c85d9a68b8; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1040, x18)

inst_828:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfdfc8fce5560b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x9cec37efa48a3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9b4c85d9a68b8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefdfc8fce5560b; op2val:0x3fc9cec37efa48a3; op3val:0x3fc9b4c85d9a68b8; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1056, x18)

inst_829:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfdfc8fce5560b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x9cec37efa48a3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9b4c85d9a68b8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefdfc8fce5560b; op2val:0x3fc9cec37efa48a3; op3val:0x3fc9b4c85d9a68b8; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1072, x18)

inst_830:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfdfc8fce5560b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x9cec37efa48a3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9b4c85d9a68b8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefdfc8fce5560b; op2val:0x3fc9cec37efa48a3; op3val:0x3fc9b4c85d9a68b8; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1088, x18)

inst_831:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1ea7f28e4db92 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x75850bc5cb42d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa23faed90d70e and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1ea7f28e4db92; op2val:0x3ff75850bc5cb42d; op3val:0x3fea23faed90d70e; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1104, x18)

inst_832:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1ea7f28e4db92 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x75850bc5cb42d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa23faed90d70e and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1ea7f28e4db92; op2val:0x3ff75850bc5cb42d; op3val:0x3fea23faed90d70e; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1120, x18)

inst_833:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1ea7f28e4db92 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x75850bc5cb42d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa23faed90d70e and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1ea7f28e4db92; op2val:0x3ff75850bc5cb42d; op3val:0x3fea23faed90d70e; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1136, x18)

inst_834:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1ea7f28e4db92 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x75850bc5cb42d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa23faed90d70e and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1ea7f28e4db92; op2val:0x3ff75850bc5cb42d; op3val:0x3fea23faed90d70e; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1152, x18)

inst_835:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1ea7f28e4db92 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x75850bc5cb42d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa23faed90d70e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1ea7f28e4db92; op2val:0x3ff75850bc5cb42d; op3val:0x3fea23faed90d70e; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1168, x18)

inst_836:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe7ede3bea6654 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x079abc3331aca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf66c50c823f40 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde7ede3bea6654; op2val:0x400079abc3331aca; op3val:0x3fef66c50c823f40; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1184, x18)

inst_837:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe7ede3bea6654 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x079abc3331aca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf66c50c823f40 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde7ede3bea6654; op2val:0x400079abc3331aca; op3val:0x3fef66c50c823f40; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1200, x18)

inst_838:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe7ede3bea6654 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x079abc3331aca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf66c50c823f40 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde7ede3bea6654; op2val:0x400079abc3331aca; op3val:0x3fef66c50c823f40; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1216, x18)

inst_839:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe7ede3bea6654 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x079abc3331aca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf66c50c823f40 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde7ede3bea6654; op2val:0x400079abc3331aca; op3val:0x3fef66c50c823f40; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1232, x18)

inst_840:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe7ede3bea6654 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x079abc3331aca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf66c50c823f40 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde7ede3bea6654; op2val:0x400079abc3331aca; op3val:0x3fef66c50c823f40; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1248, x18)

inst_841:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfe4fbd6f43266 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe0ff5cebdbd86 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdf6946ec90a02 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfe4fbd6f43266; op2val:0x3fee0ff5cebdbd86; op3val:0x3fddf6946ec90a02; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1264, x18)

inst_842:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfe4fbd6f43266 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe0ff5cebdbd86 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdf6946ec90a02 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfe4fbd6f43266; op2val:0x3fee0ff5cebdbd86; op3val:0x3fddf6946ec90a02; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1280, x18)

inst_843:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfe4fbd6f43266 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe0ff5cebdbd86 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdf6946ec90a02 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfe4fbd6f43266; op2val:0x3fee0ff5cebdbd86; op3val:0x3fddf6946ec90a02; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1296, x18)

inst_844:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfe4fbd6f43266 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe0ff5cebdbd86 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdf6946ec90a02 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfe4fbd6f43266; op2val:0x3fee0ff5cebdbd86; op3val:0x3fddf6946ec90a02; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1312, x18)

inst_845:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfe4fbd6f43266 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe0ff5cebdbd86 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdf6946ec90a02 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfe4fbd6f43266; op2val:0x3fee0ff5cebdbd86; op3val:0x3fddf6946ec90a02; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1328, x18)

inst_846:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28a3694b1024c and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x22d840cd180b1 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x5103b23e60a98 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe28a3694b1024c; op2val:0x3fc22d840cd180b1; op3val:0x3fb5103b23e60a98; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1344, x18)

inst_847:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28a3694b1024c and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x22d840cd180b1 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x5103b23e60a98 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe28a3694b1024c; op2val:0x3fc22d840cd180b1; op3val:0x3fb5103b23e60a98; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1360, x18)

inst_848:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28a3694b1024c and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x22d840cd180b1 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x5103b23e60a98 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe28a3694b1024c; op2val:0x3fc22d840cd180b1; op3val:0x3fb5103b23e60a98; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1376, x18)

inst_849:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28a3694b1024c and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x22d840cd180b1 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x5103b23e60a98 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe28a3694b1024c; op2val:0x3fc22d840cd180b1; op3val:0x3fb5103b23e60a98; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1392, x18)
addi x16,x16,2040

inst_850:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28a3694b1024c and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x22d840cd180b1 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x5103b23e60a98 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe28a3694b1024c; op2val:0x3fc22d840cd180b1; op3val:0x3fb5103b23e60a98; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1408, x18)

inst_851:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaaa69e97ac8a0 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd66afd1339591 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x88001af76b200 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdaaa69e97ac8a0; op2val:0x3fcd66afd1339591; op3val:0x3fb88001af76b200; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1424, x18)

inst_852:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaaa69e97ac8a0 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd66afd1339591 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x88001af76b200 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdaaa69e97ac8a0; op2val:0x3fcd66afd1339591; op3val:0x3fb88001af76b200; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1440, x18)

inst_853:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaaa69e97ac8a0 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd66afd1339591 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x88001af76b200 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdaaa69e97ac8a0; op2val:0x3fcd66afd1339591; op3val:0x3fb88001af76b200; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1456, x18)

inst_854:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaaa69e97ac8a0 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd66afd1339591 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x88001af76b200 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdaaa69e97ac8a0; op2val:0x3fcd66afd1339591; op3val:0x3fb88001af76b200; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1472, x18)

inst_855:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaaa69e97ac8a0 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd66afd1339591 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x88001af76b200 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdaaa69e97ac8a0; op2val:0x3fcd66afd1339591; op3val:0x3fb88001af76b200; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1488, x18)

inst_856:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4adcd2068c049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xad4d37ef90056 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x156bec559a033 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4adcd2068c049; op2val:0x3fead4d37ef90056; op3val:0x3fe156bec559a033; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1504, x18)

inst_857:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4adcd2068c049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xad4d37ef90056 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x156bec559a033 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4adcd2068c049; op2val:0x3fead4d37ef90056; op3val:0x3fe156bec559a033; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1520, x18)

inst_858:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4adcd2068c049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xad4d37ef90056 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x156bec559a033 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4adcd2068c049; op2val:0x3fead4d37ef90056; op3val:0x3fe156bec559a033; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1536, x18)

inst_859:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4adcd2068c049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xad4d37ef90056 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x156bec559a033 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4adcd2068c049; op2val:0x3fead4d37ef90056; op3val:0x3fe156bec559a033; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1552, x18)

inst_860:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4adcd2068c049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xad4d37ef90056 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x156bec559a033 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4adcd2068c049; op2val:0x3fead4d37ef90056; op3val:0x3fe156bec559a033; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1568, x18)

inst_861:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbce3e93c1a23f and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xa82ad488d1bd0 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x7091f48528f00 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febce3e93c1a23f; op2val:0x3fba82ad488d1bd0; op3val:0x3fb7091f48528f00; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1584, x18)

inst_862:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbce3e93c1a23f and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xa82ad488d1bd0 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x7091f48528f00 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febce3e93c1a23f; op2val:0x3fba82ad488d1bd0; op3val:0x3fb7091f48528f00; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1600, x18)

inst_863:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbce3e93c1a23f and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xa82ad488d1bd0 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x7091f48528f00 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febce3e93c1a23f; op2val:0x3fba82ad488d1bd0; op3val:0x3fb7091f48528f00; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1616, x18)

inst_864:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbce3e93c1a23f and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xa82ad488d1bd0 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x7091f48528f00 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febce3e93c1a23f; op2val:0x3fba82ad488d1bd0; op3val:0x3fb7091f48528f00; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1632, x18)

inst_865:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbce3e93c1a23f and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xa82ad488d1bd0 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x7091f48528f00 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febce3e93c1a23f; op2val:0x3fba82ad488d1bd0; op3val:0x3fb7091f48528f00; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1648, x18)

inst_866:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7b34899d29531 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91a2c04082ad8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x29772fca9c8ca and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7b34899d29531; op2val:0x3fe91a2c04082ad8; op3val:0x3fe29772fca9c8ca; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1664, x18)

inst_867:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7b34899d29531 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91a2c04082ad8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x29772fca9c8ca and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7b34899d29531; op2val:0x3fe91a2c04082ad8; op3val:0x3fe29772fca9c8ca; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1680, x18)

inst_868:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7b34899d29531 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91a2c04082ad8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x29772fca9c8ca and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7b34899d29531; op2val:0x3fe91a2c04082ad8; op3val:0x3fe29772fca9c8ca; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1696, x18)

inst_869:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7b34899d29531 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91a2c04082ad8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x29772fca9c8ca and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7b34899d29531; op2val:0x3fe91a2c04082ad8; op3val:0x3fe29772fca9c8ca; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1712, x18)

inst_870:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7b34899d29531 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91a2c04082ad8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x29772fca9c8ca and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7b34899d29531; op2val:0x3fe91a2c04082ad8; op3val:0x3fe29772fca9c8ca; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1728, x18)

inst_871:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x84d8054f1fdee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x16cf023ccfdc0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa77d03d645fb8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe84d8054f1fdee; op2val:0x3fe16cf023ccfdc0; op3val:0x3fda77d03d645fb8; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1744, x18)

inst_872:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x84d8054f1fdee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x16cf023ccfdc0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa77d03d645fb8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe84d8054f1fdee; op2val:0x3fe16cf023ccfdc0; op3val:0x3fda77d03d645fb8; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1760, x18)

inst_873:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x84d8054f1fdee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x16cf023ccfdc0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa77d03d645fb8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe84d8054f1fdee; op2val:0x3fe16cf023ccfdc0; op3val:0x3fda77d03d645fb8; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1776, x18)

inst_874:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x84d8054f1fdee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x16cf023ccfdc0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa77d03d645fb8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe84d8054f1fdee; op2val:0x3fe16cf023ccfdc0; op3val:0x3fda77d03d645fb8; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1792, x18)

inst_875:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x84d8054f1fdee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x16cf023ccfdc0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa77d03d645fb8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe84d8054f1fdee; op2val:0x3fe16cf023ccfdc0; op3val:0x3fda77d03d645fb8; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1808, x18)

inst_876:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7f0f81f261d0e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe3da0f9e5f6ca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6a00465fecf69 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7f0f81f261d0e; op2val:0x3fee3da0f9e5f6ca; op3val:0x3fe6a00465fecf69; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1824, x18)

inst_877:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7f0f81f261d0e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe3da0f9e5f6ca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6a00465fecf69 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7f0f81f261d0e; op2val:0x3fee3da0f9e5f6ca; op3val:0x3fe6a00465fecf69; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1840, x18)

inst_878:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7f0f81f261d0e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe3da0f9e5f6ca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6a00465fecf69 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7f0f81f261d0e; op2val:0x3fee3da0f9e5f6ca; op3val:0x3fe6a00465fecf69; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1856, x18)

inst_879:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7f0f81f261d0e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe3da0f9e5f6ca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6a00465fecf69 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7f0f81f261d0e; op2val:0x3fee3da0f9e5f6ca; op3val:0x3fe6a00465fecf69; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1872, x18)

inst_880:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7f0f81f261d0e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe3da0f9e5f6ca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6a00465fecf69 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7f0f81f261d0e; op2val:0x3fee3da0f9e5f6ca; op3val:0x3fe6a00465fecf69; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1888, x18)

inst_881:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6408b72047a40 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2273529a4b59c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x93f2423e3559d and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6408b72047a40; op2val:0x4012273529a4b59c; op3val:0x3fe93f2423e3559d; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1904, x18)

inst_882:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6408b72047a40 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2273529a4b59c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x93f2423e3559d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6408b72047a40; op2val:0x4012273529a4b59c; op3val:0x3fe93f2423e3559d; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1920, x18)

inst_883:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6408b72047a40 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2273529a4b59c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x93f2423e3559d and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6408b72047a40; op2val:0x4012273529a4b59c; op3val:0x3fe93f2423e3559d; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1936, x18)

inst_884:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6408b72047a40 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2273529a4b59c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x93f2423e3559d and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6408b72047a40; op2val:0x4012273529a4b59c; op3val:0x3fe93f2423e3559d; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1952, x18)

inst_885:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6408b72047a40 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2273529a4b59c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x93f2423e3559d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6408b72047a40; op2val:0x4012273529a4b59c; op3val:0x3fe93f2423e3559d; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1968, x18)

inst_886:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x21e3bac0dc5fe and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcfed09bbb488b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x06aba4ce213b4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe21e3bac0dc5fe; op2val:0x3fccfed09bbb488b; op3val:0x3fc06aba4ce213b4; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1984, x18)

inst_887:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x21e3bac0dc5fe and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcfed09bbb488b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x06aba4ce213b4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe21e3bac0dc5fe; op2val:0x3fccfed09bbb488b; op3val:0x3fc06aba4ce213b4; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 2000, x18)

inst_888:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x21e3bac0dc5fe and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcfed09bbb488b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x06aba4ce213b4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe21e3bac0dc5fe; op2val:0x3fccfed09bbb488b; op3val:0x3fc06aba4ce213b4; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_8)

inst_889:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x21e3bac0dc5fe and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcfed09bbb488b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x06aba4ce213b4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe21e3bac0dc5fe; op2val:0x3fccfed09bbb488b; op3val:0x3fc06aba4ce213b4; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 0, x18)

inst_890:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x21e3bac0dc5fe and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcfed09bbb488b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x06aba4ce213b4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe21e3bac0dc5fe; op2val:0x3fccfed09bbb488b; op3val:0x3fc06aba4ce213b4; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 16, x18)

inst_891:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe4c7f02010820 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1f233c266d871 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x0fdf6fb8b4210 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde4c7f02010820; op2val:0x3fc1f233c266d871; op3val:0x3fb0fdf6fb8b4210; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 32, x18)

inst_892:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe4c7f02010820 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1f233c266d871 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x0fdf6fb8b4210 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde4c7f02010820; op2val:0x3fc1f233c266d871; op3val:0x3fb0fdf6fb8b4210; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 48, x18)

inst_893:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe4c7f02010820 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1f233c266d871 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x0fdf6fb8b4210 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde4c7f02010820; op2val:0x3fc1f233c266d871; op3val:0x3fb0fdf6fb8b4210; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 64, x18)

inst_894:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe4c7f02010820 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1f233c266d871 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x0fdf6fb8b4210 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde4c7f02010820; op2val:0x3fc1f233c266d871; op3val:0x3fb0fdf6fb8b4210; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 80, x18)

inst_895:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe4c7f02010820 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1f233c266d871 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x0fdf6fb8b4210 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde4c7f02010820; op2val:0x3fc1f233c266d871; op3val:0x3fb0fdf6fb8b4210; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 96, x18)

inst_896:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xdcef723064e60 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x811b83ff24780 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66bbaef2d85da and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9dcef723064e60; op2val:0x402811b83ff24780; op3val:0x3fd66bbaef2d85da; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 112, x18)

inst_897:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xdcef723064e60 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x811b83ff24780 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66bbaef2d85da and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9dcef723064e60; op2val:0x402811b83ff24780; op3val:0x3fd66bbaef2d85da; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 128, x18)

inst_898:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xdcef723064e60 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x811b83ff24780 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66bbaef2d85da and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9dcef723064e60; op2val:0x402811b83ff24780; op3val:0x3fd66bbaef2d85da; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 144, x18)

inst_899:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xdcef723064e60 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x811b83ff24780 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66bbaef2d85da and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9dcef723064e60; op2val:0x402811b83ff24780; op3val:0x3fd66bbaef2d85da; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 160, x18)

inst_900:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xdcef723064e60 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x811b83ff24780 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66bbaef2d85da and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9dcef723064e60; op2val:0x402811b83ff24780; op3val:0x3fd66bbaef2d85da; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 176, x18)

inst_901:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbcefaf3ea16fe and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2263e6c5cc73f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8b5264cd755c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febcefaf3ea16fe; op2val:0x3ff2263e6c5cc73f; op3val:0x3fef8b5264cd755c; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 192, x18)

inst_902:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbcefaf3ea16fe and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2263e6c5cc73f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8b5264cd755c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febcefaf3ea16fe; op2val:0x3ff2263e6c5cc73f; op3val:0x3fef8b5264cd755c; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 208, x18)

inst_903:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbcefaf3ea16fe and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2263e6c5cc73f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8b5264cd755c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febcefaf3ea16fe; op2val:0x3ff2263e6c5cc73f; op3val:0x3fef8b5264cd755c; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 224, x18)

inst_904:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbcefaf3ea16fe and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2263e6c5cc73f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8b5264cd755c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febcefaf3ea16fe; op2val:0x3ff2263e6c5cc73f; op3val:0x3fef8b5264cd755c; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 240, x18)

inst_905:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbcefaf3ea16fe and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2263e6c5cc73f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8b5264cd755c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febcefaf3ea16fe; op2val:0x3ff2263e6c5cc73f; op3val:0x3fef8b5264cd755c; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 256, x18)

inst_906:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4c9762f60587f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x63bd733f9210a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xce2c0fb9d1c76 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4c9762f60587f; op2val:0x3fe63bd733f9210a; op3val:0x3fdce2c0fb9d1c76; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 272, x18)

inst_907:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4c9762f60587f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x63bd733f9210a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xce2c0fb9d1c76 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4c9762f60587f; op2val:0x3fe63bd733f9210a; op3val:0x3fdce2c0fb9d1c76; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 288, x18)

inst_908:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4c9762f60587f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x63bd733f9210a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xce2c0fb9d1c76 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4c9762f60587f; op2val:0x3fe63bd733f9210a; op3val:0x3fdce2c0fb9d1c76; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 304, x18)

inst_909:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4c9762f60587f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x63bd733f9210a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xce2c0fb9d1c76 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4c9762f60587f; op2val:0x3fe63bd733f9210a; op3val:0x3fdce2c0fb9d1c76; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 320, x18)

inst_910:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4c9762f60587f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x63bd733f9210a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xce2c0fb9d1c76 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4c9762f60587f; op2val:0x3fe63bd733f9210a; op3val:0x3fdce2c0fb9d1c76; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 336, x18)

inst_911:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x42aadc34845c0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x1671dd577d57d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5ef50f880110a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f942aadc34845c0; op2val:0x4031671dd577d57d; op3val:0x3fd5ef50f880110a; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 352, x18)

inst_912:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x42aadc34845c0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x1671dd577d57d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5ef50f880110a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f942aadc34845c0; op2val:0x4031671dd577d57d; op3val:0x3fd5ef50f880110a; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 368, x18)

inst_913:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x42aadc34845c0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x1671dd577d57d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5ef50f880110a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f942aadc34845c0; op2val:0x4031671dd577d57d; op3val:0x3fd5ef50f880110a; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 384, x18)

inst_914:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x42aadc34845c0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x1671dd577d57d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5ef50f880110a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f942aadc34845c0; op2val:0x4031671dd577d57d; op3val:0x3fd5ef50f880110a; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 400, x18)

inst_915:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x42aadc34845c0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x1671dd577d57d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5ef50f880110a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f942aadc34845c0; op2val:0x4031671dd577d57d; op3val:0x3fd5ef50f880110a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 416, x18)

inst_916:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb528a418dbfb9 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xa0227eee2cf53 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x634e7967750c4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb528a418dbfb9; op2val:0x3fca0227eee2cf53; op3val:0x3fc634e7967750c4; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 432, x18)

inst_917:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb528a418dbfb9 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xa0227eee2cf53 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x634e7967750c4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb528a418dbfb9; op2val:0x3fca0227eee2cf53; op3val:0x3fc634e7967750c4; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 448, x18)

inst_918:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb528a418dbfb9 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xa0227eee2cf53 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x634e7967750c4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb528a418dbfb9; op2val:0x3fca0227eee2cf53; op3val:0x3fc634e7967750c4; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 464, x18)

inst_919:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb528a418dbfb9 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xa0227eee2cf53 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x634e7967750c4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb528a418dbfb9; op2val:0x3fca0227eee2cf53; op3val:0x3fc634e7967750c4; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 480, x18)

inst_920:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb528a418dbfb9 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xa0227eee2cf53 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x634e7967750c4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb528a418dbfb9; op2val:0x3fca0227eee2cf53; op3val:0x3fc634e7967750c4; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 496, x18)

inst_921:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x85b9cf11bd230 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x044ecf31c1e57 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8c48b05819ad8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb85b9cf11bd230; op2val:0x400044ecf31c1e57; op3val:0x3fc8c48b05819ad8; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 512, x18)

inst_922:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x85b9cf11bd230 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x044ecf31c1e57 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8c48b05819ad8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb85b9cf11bd230; op2val:0x400044ecf31c1e57; op3val:0x3fc8c48b05819ad8; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 528, x18)

inst_923:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x85b9cf11bd230 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x044ecf31c1e57 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8c48b05819ad8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb85b9cf11bd230; op2val:0x400044ecf31c1e57; op3val:0x3fc8c48b05819ad8; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 544, x18)

inst_924:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x85b9cf11bd230 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x044ecf31c1e57 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8c48b05819ad8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb85b9cf11bd230; op2val:0x400044ecf31c1e57; op3val:0x3fc8c48b05819ad8; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 560, x18)

inst_925:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x85b9cf11bd230 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x044ecf31c1e57 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8c48b05819ad8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb85b9cf11bd230; op2val:0x400044ecf31c1e57; op3val:0x3fc8c48b05819ad8; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 576, x18)

inst_926:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbef4d3be3ca3c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf1db9f0bf0ff4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb29c601a3021a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febef4d3be3ca3c; op2val:0x3fef1db9f0bf0ff4; op3val:0x3feb29c601a3021a; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 592, x18)

inst_927:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbef4d3be3ca3c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf1db9f0bf0ff4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb29c601a3021a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febef4d3be3ca3c; op2val:0x3fef1db9f0bf0ff4; op3val:0x3feb29c601a3021a; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 608, x18)

inst_928:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbef4d3be3ca3c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf1db9f0bf0ff4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb29c601a3021a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febef4d3be3ca3c; op2val:0x3fef1db9f0bf0ff4; op3val:0x3feb29c601a3021a; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 624, x18)

inst_929:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbef4d3be3ca3c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf1db9f0bf0ff4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb29c601a3021a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febef4d3be3ca3c; op2val:0x3fef1db9f0bf0ff4; op3val:0x3feb29c601a3021a; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 640, x18)

inst_930:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbef4d3be3ca3c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf1db9f0bf0ff4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb29c601a3021a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febef4d3be3ca3c; op2val:0x3fef1db9f0bf0ff4; op3val:0x3feb29c601a3021a; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 656, x18)

inst_931:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x19ce60ebaa9ae and fs2 == 0 and fe2 == 0x400 and fm2 == 0x820afdf3c798f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa8f547c070d8e and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd19ce60ebaa9ae; op2val:0x400820afdf3c798f; op3val:0x3fea8f547c070d8e; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 672, x18)

inst_932:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x19ce60ebaa9ae and fs2 == 0 and fe2 == 0x400 and fm2 == 0x820afdf3c798f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa8f547c070d8e and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd19ce60ebaa9ae; op2val:0x400820afdf3c798f; op3val:0x3fea8f547c070d8e; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 688, x18)

inst_933:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x19ce60ebaa9ae and fs2 == 0 and fe2 == 0x400 and fm2 == 0x820afdf3c798f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa8f547c070d8e and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd19ce60ebaa9ae; op2val:0x400820afdf3c798f; op3val:0x3fea8f547c070d8e; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 704, x18)

inst_934:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x19ce60ebaa9ae and fs2 == 0 and fe2 == 0x400 and fm2 == 0x820afdf3c798f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa8f547c070d8e and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd19ce60ebaa9ae; op2val:0x400820afdf3c798f; op3val:0x3fea8f547c070d8e; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 720, x18)
addi x16,x16,2040

inst_935:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x19ce60ebaa9ae and fs2 == 0 and fe2 == 0x400 and fm2 == 0x820afdf3c798f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa8f547c070d8e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd19ce60ebaa9ae; op2val:0x400820afdf3c798f; op3val:0x3fea8f547c070d8e; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 736, x18)

inst_936:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x327d6d506ce8d and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x6c0a6054ae63c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xb3d6c3a90aee0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe327d6d506ce8d; op2val:0x3fb6c0a6054ae63c; op3val:0x3fab3d6c3a90aee0; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 752, x18)

inst_937:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x327d6d506ce8d and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x6c0a6054ae63c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xb3d6c3a90aee0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe327d6d506ce8d; op2val:0x3fb6c0a6054ae63c; op3val:0x3fab3d6c3a90aee0; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 768, x18)

inst_938:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x327d6d506ce8d and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x6c0a6054ae63c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xb3d6c3a90aee0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe327d6d506ce8d; op2val:0x3fb6c0a6054ae63c; op3val:0x3fab3d6c3a90aee0; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 784, x18)

inst_939:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x327d6d506ce8d and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x6c0a6054ae63c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xb3d6c3a90aee0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe327d6d506ce8d; op2val:0x3fb6c0a6054ae63c; op3val:0x3fab3d6c3a90aee0; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 800, x18)

inst_940:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x327d6d506ce8d and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x6c0a6054ae63c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xb3d6c3a90aee0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe327d6d506ce8d; op2val:0x3fb6c0a6054ae63c; op3val:0x3fab3d6c3a90aee0; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 816, x18)

inst_941:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd05df239b3f60 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x550f883ad9cf9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3554a8225b93f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d05df239b3f60; op2val:0x403550f883ad9cf9; op3val:0x3fe3554a8225b93f; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 832, x18)

inst_942:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd05df239b3f60 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x550f883ad9cf9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3554a8225b93f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d05df239b3f60; op2val:0x403550f883ad9cf9; op3val:0x3fe3554a8225b93f; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 848, x18)

inst_943:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd05df239b3f60 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x550f883ad9cf9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3554a8225b93f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d05df239b3f60; op2val:0x403550f883ad9cf9; op3val:0x3fe3554a8225b93f; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 864, x18)

inst_944:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd05df239b3f60 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x550f883ad9cf9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3554a8225b93f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d05df239b3f60; op2val:0x403550f883ad9cf9; op3val:0x3fe3554a8225b93f; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 880, x18)

inst_945:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd05df239b3f60 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x550f883ad9cf9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3554a8225b93f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d05df239b3f60; op2val:0x403550f883ad9cf9; op3val:0x3fe3554a8225b93f; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 896, x18)

inst_946:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x55c04e3a72b0c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x318f9922d820a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x97e9d00dc81bc and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe55c04e3a72b0c; op2val:0x3fd318f9922d820a; op3val:0x3fc97e9d00dc81bc; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 912, x18)

inst_947:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x55c04e3a72b0c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x318f9922d820a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x97e9d00dc81bc and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe55c04e3a72b0c; op2val:0x3fd318f9922d820a; op3val:0x3fc97e9d00dc81bc; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 928, x18)

inst_948:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x55c04e3a72b0c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x318f9922d820a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x97e9d00dc81bc and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe55c04e3a72b0c; op2val:0x3fd318f9922d820a; op3val:0x3fc97e9d00dc81bc; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 944, x18)

inst_949:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x55c04e3a72b0c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x318f9922d820a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x97e9d00dc81bc and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe55c04e3a72b0c; op2val:0x3fd318f9922d820a; op3val:0x3fc97e9d00dc81bc; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 960, x18)

inst_950:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x55c04e3a72b0c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x318f9922d820a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x97e9d00dc81bc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe55c04e3a72b0c; op2val:0x3fd318f9922d820a; op3val:0x3fc97e9d00dc81bc; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 976, x18)

inst_951:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa498cd243a926 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x06d985d6c752e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xafd9c35d3971c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea498cd243a926; op2val:0x3fd06d985d6c752e; op3val:0x3fcafd9c35d3971c; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 992, x18)

inst_952:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa498cd243a926 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x06d985d6c752e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xafd9c35d3971c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea498cd243a926; op2val:0x3fd06d985d6c752e; op3val:0x3fcafd9c35d3971c; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1008, x18)

inst_953:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa498cd243a926 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x06d985d6c752e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xafd9c35d3971c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea498cd243a926; op2val:0x3fd06d985d6c752e; op3val:0x3fcafd9c35d3971c; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1024, x18)

inst_954:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa498cd243a926 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x06d985d6c752e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xafd9c35d3971c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea498cd243a926; op2val:0x3fd06d985d6c752e; op3val:0x3fcafd9c35d3971c; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1040, x18)

inst_955:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa498cd243a926 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x06d985d6c752e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xafd9c35d3971c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea498cd243a926; op2val:0x3fd06d985d6c752e; op3val:0x3fcafd9c35d3971c; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1056, x18)

inst_956:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xffb65bccf9678 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0b65c08a4bea4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0b3f4ac71a71a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcffb65bccf9678; op2val:0x4000b65c08a4bea4; op3val:0x3fe0b3f4ac71a71a; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1072, x18)

inst_957:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xffb65bccf9678 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0b65c08a4bea4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0b3f4ac71a71a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcffb65bccf9678; op2val:0x4000b65c08a4bea4; op3val:0x3fe0b3f4ac71a71a; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1088, x18)

inst_958:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xffb65bccf9678 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0b65c08a4bea4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0b3f4ac71a71a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcffb65bccf9678; op2val:0x4000b65c08a4bea4; op3val:0x3fe0b3f4ac71a71a; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1104, x18)

inst_959:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xffb65bccf9678 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0b65c08a4bea4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0b3f4ac71a71a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcffb65bccf9678; op2val:0x4000b65c08a4bea4; op3val:0x3fe0b3f4ac71a71a; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1120, x18)

inst_960:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xffb65bccf9678 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0b65c08a4bea4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0b3f4ac71a71a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcffb65bccf9678; op2val:0x4000b65c08a4bea4; op3val:0x3fe0b3f4ac71a71a; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1136, x18)

inst_961:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x718d873911d80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x34d950cb3586b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xbdd7fc49db98c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb718d873911d80; op2val:0x40034d950cb3586b; op3val:0x3fcbdd7fc49db98c; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1152, x18)

inst_962:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x718d873911d80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x34d950cb3586b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xbdd7fc49db98c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb718d873911d80; op2val:0x40034d950cb3586b; op3val:0x3fcbdd7fc49db98c; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1168, x18)

inst_963:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x718d873911d80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x34d950cb3586b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xbdd7fc49db98c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb718d873911d80; op2val:0x40034d950cb3586b; op3val:0x3fcbdd7fc49db98c; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1184, x18)

inst_964:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x718d873911d80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x34d950cb3586b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xbdd7fc49db98c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb718d873911d80; op2val:0x40034d950cb3586b; op3val:0x3fcbdd7fc49db98c; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1200, x18)

inst_965:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x718d873911d80 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x34d950cb3586b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xbdd7fc49db98c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb718d873911d80; op2val:0x40034d950cb3586b; op3val:0x3fcbdd7fc49db98c; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1216, x18)

inst_966:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd497ea0a951d3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7bc1609f19c0f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5b8f6f70a6ff8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed497ea0a951d3; op2val:0x3fd7bc1609f19c0f; op3val:0x3fd5b8f6f70a6ff8; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1232, x18)

inst_967:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd497ea0a951d3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7bc1609f19c0f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5b8f6f70a6ff8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed497ea0a951d3; op2val:0x3fd7bc1609f19c0f; op3val:0x3fd5b8f6f70a6ff8; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1248, x18)

inst_968:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd497ea0a951d3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7bc1609f19c0f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5b8f6f70a6ff8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed497ea0a951d3; op2val:0x3fd7bc1609f19c0f; op3val:0x3fd5b8f6f70a6ff8; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1264, x18)

inst_969:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd497ea0a951d3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7bc1609f19c0f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5b8f6f70a6ff8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed497ea0a951d3; op2val:0x3fd7bc1609f19c0f; op3val:0x3fd5b8f6f70a6ff8; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1280, x18)

inst_970:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd497ea0a951d3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7bc1609f19c0f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5b8f6f70a6ff8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed497ea0a951d3; op2val:0x3fd7bc1609f19c0f; op3val:0x3fd5b8f6f70a6ff8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1296, x18)

inst_971:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6359b953f7950 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x279b99c98bf69 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9a54615b5ba14 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6359b953f7950; op2val:0x3fe279b99c98bf69; op3val:0x3fc9a54615b5ba14; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1312, x18)

inst_972:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6359b953f7950 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x279b99c98bf69 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9a54615b5ba14 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6359b953f7950; op2val:0x3fe279b99c98bf69; op3val:0x3fc9a54615b5ba14; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1328, x18)

inst_973:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6359b953f7950 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x279b99c98bf69 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9a54615b5ba14 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6359b953f7950; op2val:0x3fe279b99c98bf69; op3val:0x3fc9a54615b5ba14; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1344, x18)

inst_974:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6359b953f7950 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x279b99c98bf69 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9a54615b5ba14 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6359b953f7950; op2val:0x3fe279b99c98bf69; op3val:0x3fc9a54615b5ba14; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1360, x18)

inst_975:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6359b953f7950 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x279b99c98bf69 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9a54615b5ba14 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6359b953f7950; op2val:0x3fe279b99c98bf69; op3val:0x3fc9a54615b5ba14; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1376, x18)

inst_976:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x46c9bcff82f00 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa18ed09a1191d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a827585cfae3 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc46c9bcff82f00; op2val:0x400a18ed09a1191d; op3val:0x3fe0a827585cfae3; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1392, x18)

inst_977:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x46c9bcff82f00 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa18ed09a1191d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a827585cfae3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc46c9bcff82f00; op2val:0x400a18ed09a1191d; op3val:0x3fe0a827585cfae3; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1408, x18)

inst_978:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x46c9bcff82f00 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa18ed09a1191d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a827585cfae3 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc46c9bcff82f00; op2val:0x400a18ed09a1191d; op3val:0x3fe0a827585cfae3; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1424, x18)

inst_979:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x46c9bcff82f00 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa18ed09a1191d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a827585cfae3 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc46c9bcff82f00; op2val:0x400a18ed09a1191d; op3val:0x3fe0a827585cfae3; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1440, x18)

inst_980:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x46c9bcff82f00 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa18ed09a1191d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a827585cfae3 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc46c9bcff82f00; op2val:0x400a18ed09a1191d; op3val:0x3fe0a827585cfae3; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1456, x18)

inst_981:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x80f4bd01e35c8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0f8c74480302e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x985648c78bb88 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd80f4bd01e35c8; op2val:0x3fd0f8c74480302e; op3val:0x3fb985648c78bb88; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1472, x18)

inst_982:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x80f4bd01e35c8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0f8c74480302e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x985648c78bb88 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd80f4bd01e35c8; op2val:0x3fd0f8c74480302e; op3val:0x3fb985648c78bb88; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1488, x18)

inst_983:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x80f4bd01e35c8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0f8c74480302e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x985648c78bb88 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd80f4bd01e35c8; op2val:0x3fd0f8c74480302e; op3val:0x3fb985648c78bb88; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1504, x18)

inst_984:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x80f4bd01e35c8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0f8c74480302e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x985648c78bb88 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd80f4bd01e35c8; op2val:0x3fd0f8c74480302e; op3val:0x3fb985648c78bb88; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1520, x18)

inst_985:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x80f4bd01e35c8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0f8c74480302e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x985648c78bb88 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd80f4bd01e35c8; op2val:0x3fd0f8c74480302e; op3val:0x3fb985648c78bb88; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1536, x18)

inst_986:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9b49546a62826 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfb1cf4f6bc736 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x975c5fe11c356 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9b49546a62826; op2val:0x3fefb1cf4f6bc736; op3val:0x3fe975c5fe11c356; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1552, x18)

inst_987:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9b49546a62826 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfb1cf4f6bc736 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x975c5fe11c356 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9b49546a62826; op2val:0x3fefb1cf4f6bc736; op3val:0x3fe975c5fe11c356; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1568, x18)

inst_988:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9b49546a62826 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfb1cf4f6bc736 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x975c5fe11c356 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9b49546a62826; op2val:0x3fefb1cf4f6bc736; op3val:0x3fe975c5fe11c356; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1584, x18)

inst_989:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9b49546a62826 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfb1cf4f6bc736 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x975c5fe11c356 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9b49546a62826; op2val:0x3fefb1cf4f6bc736; op3val:0x3fe975c5fe11c356; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1600, x18)

inst_990:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9b49546a62826 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfb1cf4f6bc736 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x975c5fe11c356 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9b49546a62826; op2val:0x3fefb1cf4f6bc736; op3val:0x3fe975c5fe11c356; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1616, x18)

inst_991:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f1f8ff97641e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfbceac5d76d67 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8bdadd21ea35b and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f1f8ff97641e; op2val:0x3fefbceac5d76d67; op3val:0x3fe8bdadd21ea35b; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1632, x18)

inst_992:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f1f8ff97641e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfbceac5d76d67 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8bdadd21ea35b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f1f8ff97641e; op2val:0x3fefbceac5d76d67; op3val:0x3fe8bdadd21ea35b; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1648, x18)

inst_993:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f1f8ff97641e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfbceac5d76d67 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8bdadd21ea35b and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f1f8ff97641e; op2val:0x3fefbceac5d76d67; op3val:0x3fe8bdadd21ea35b; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1664, x18)

inst_994:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f1f8ff97641e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfbceac5d76d67 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8bdadd21ea35b and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f1f8ff97641e; op2val:0x3fefbceac5d76d67; op3val:0x3fe8bdadd21ea35b; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1680, x18)

inst_995:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f1f8ff97641e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfbceac5d76d67 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8bdadd21ea35b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f1f8ff97641e; op2val:0x3fefbceac5d76d67; op3val:0x3fe8bdadd21ea35b; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1696, x18)

inst_996:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x70a2841a18bf0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xc3d221471d0b2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x454e71fad876a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa70a2841a18bf0; op2val:0x402c3d221471d0b2; op3val:0x3fe454e71fad876a; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1712, x18)

inst_997:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x70a2841a18bf0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xc3d221471d0b2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x454e71fad876a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa70a2841a18bf0; op2val:0x402c3d221471d0b2; op3val:0x3fe454e71fad876a; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1728, x18)

inst_998:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x70a2841a18bf0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xc3d221471d0b2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x454e71fad876a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa70a2841a18bf0; op2val:0x402c3d221471d0b2; op3val:0x3fe454e71fad876a; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1744, x18)

inst_999:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x70a2841a18bf0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xc3d221471d0b2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x454e71fad876a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa70a2841a18bf0; op2val:0x402c3d221471d0b2; op3val:0x3fe454e71fad876a; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1760, x18)

inst_1000:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x70a2841a18bf0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xc3d221471d0b2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x454e71fad876a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa70a2841a18bf0; op2val:0x402c3d221471d0b2; op3val:0x3fe454e71fad876a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1776, x18)

inst_1001:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x01f60e8dc22c8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x84fd2bd7274a9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x87f80a685e140 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb01f60e8dc22c8; op2val:0x3fc84fd2bd7274a9; op3val:0x3f887f80a685e140; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1792, x18)

inst_1002:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x01f60e8dc22c8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x84fd2bd7274a9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x87f80a685e140 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb01f60e8dc22c8; op2val:0x3fc84fd2bd7274a9; op3val:0x3f887f80a685e140; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1808, x18)

inst_1003:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x01f60e8dc22c8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x84fd2bd7274a9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x87f80a685e140 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb01f60e8dc22c8; op2val:0x3fc84fd2bd7274a9; op3val:0x3f887f80a685e140; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1824, x18)

inst_1004:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x01f60e8dc22c8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x84fd2bd7274a9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x87f80a685e140 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb01f60e8dc22c8; op2val:0x3fc84fd2bd7274a9; op3val:0x3f887f80a685e140; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1840, x18)

inst_1005:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x01f60e8dc22c8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x84fd2bd7274a9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x87f80a685e140 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb01f60e8dc22c8; op2val:0x3fc84fd2bd7274a9; op3val:0x3f887f80a685e140; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1856, x18)

inst_1006:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x643a7e9f74d30 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96c73116fd448 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b04f94c40758 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa643a7e9f74d30; op2val:0x40296c73116fd448; op3val:0x3fe1b04f94c40758; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1872, x18)

inst_1007:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x643a7e9f74d30 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96c73116fd448 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b04f94c40758 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa643a7e9f74d30; op2val:0x40296c73116fd448; op3val:0x3fe1b04f94c40758; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1888, x18)

inst_1008:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x643a7e9f74d30 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96c73116fd448 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b04f94c40758 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa643a7e9f74d30; op2val:0x40296c73116fd448; op3val:0x3fe1b04f94c40758; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1904, x18)

inst_1009:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x643a7e9f74d30 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96c73116fd448 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b04f94c40758 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa643a7e9f74d30; op2val:0x40296c73116fd448; op3val:0x3fe1b04f94c40758; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1920, x18)

inst_1010:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x643a7e9f74d30 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96c73116fd448 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b04f94c40758 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa643a7e9f74d30; op2val:0x40296c73116fd448; op3val:0x3fe1b04f94c40758; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1936, x18)

inst_1011:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7b4d7f739b524 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa9024b0d22222 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3adb87328ace0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7b4d7f739b524; op2val:0x3fda9024b0d22222; op3val:0x3fd3adb87328ace0; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1952, x18)

inst_1012:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7b4d7f739b524 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa9024b0d22222 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3adb87328ace0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7b4d7f739b524; op2val:0x3fda9024b0d22222; op3val:0x3fd3adb87328ace0; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1968, x18)

inst_1013:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7b4d7f739b524 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa9024b0d22222 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3adb87328ace0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7b4d7f739b524; op2val:0x3fda9024b0d22222; op3val:0x3fd3adb87328ace0; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1984, x18)

inst_1014:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7b4d7f739b524 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa9024b0d22222 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3adb87328ace0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7b4d7f739b524; op2val:0x3fda9024b0d22222; op3val:0x3fd3adb87328ace0; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 2000, x18)

inst_1015:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7b4d7f739b524 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa9024b0d22222 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3adb87328ace0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7b4d7f739b524; op2val:0x3fda9024b0d22222; op3val:0x3fd3adb87328ace0; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_9)

inst_1016:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1b23b4d6ec52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7b8a7d3156d7e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x70f00da1c6d1a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1b23b4d6ec52; op2val:0x3fe7b8a7d3156d7e; op3val:0x3fe70f00da1c6d1a; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1b23b4d6ec52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7b8a7d3156d7e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x70f00da1c6d1a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1b23b4d6ec52; op2val:0x3fe7b8a7d3156d7e; op3val:0x3fe70f00da1c6d1a; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 16, x18)

inst_1018:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1b23b4d6ec52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7b8a7d3156d7e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x70f00da1c6d1a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1b23b4d6ec52; op2val:0x3fe7b8a7d3156d7e; op3val:0x3fe70f00da1c6d1a; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 32, x18)

inst_1019:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1b23b4d6ec52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7b8a7d3156d7e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x70f00da1c6d1a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1b23b4d6ec52; op2val:0x3fe7b8a7d3156d7e; op3val:0x3fe70f00da1c6d1a; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 48, x18)
addi x16,x16,2040

inst_1020:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1b23b4d6ec52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7b8a7d3156d7e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x70f00da1c6d1a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1b23b4d6ec52; op2val:0x3fe7b8a7d3156d7e; op3val:0x3fe70f00da1c6d1a; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 64, x18)

inst_1021:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x49f3b4d1373b1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x81bbc32baff3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf1298380aa55c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe49f3b4d1373b1; op2val:0x3ff81bbc32baff3d; op3val:0x3fef1298380aa55c; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 80, x18)

inst_1022:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x49f3b4d1373b1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x81bbc32baff3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf1298380aa55c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe49f3b4d1373b1; op2val:0x3ff81bbc32baff3d; op3val:0x3fef1298380aa55c; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 96, x18)

inst_1023:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x49f3b4d1373b1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x81bbc32baff3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf1298380aa55c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe49f3b4d1373b1; op2val:0x3ff81bbc32baff3d; op3val:0x3fef1298380aa55c; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 112, x18)

inst_1024:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x49f3b4d1373b1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x81bbc32baff3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf1298380aa55c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe49f3b4d1373b1; op2val:0x3ff81bbc32baff3d; op3val:0x3fef1298380aa55c; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 128, x18)

inst_1025:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x49f3b4d1373b1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x81bbc32baff3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf1298380aa55c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe49f3b4d1373b1; op2val:0x3ff81bbc32baff3d; op3val:0x3fef1298380aa55c; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 144, x18)

inst_1026:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8be8cd33348b4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3f62f21d6ac12 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xedf01d40ec866 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8be8cd33348b4; op2val:0x3fe3f62f21d6ac12; op3val:0x3fdedf01d40ec866; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 160, x18)

inst_1027:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8be8cd33348b4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3f62f21d6ac12 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xedf01d40ec866 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8be8cd33348b4; op2val:0x3fe3f62f21d6ac12; op3val:0x3fdedf01d40ec866; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 176, x18)

inst_1028:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8be8cd33348b4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3f62f21d6ac12 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xedf01d40ec866 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8be8cd33348b4; op2val:0x3fe3f62f21d6ac12; op3val:0x3fdedf01d40ec866; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 192, x18)

inst_1029:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8be8cd33348b4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3f62f21d6ac12 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xedf01d40ec866 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8be8cd33348b4; op2val:0x3fe3f62f21d6ac12; op3val:0x3fdedf01d40ec866; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 208, x18)

inst_1030:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8be8cd33348b4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3f62f21d6ac12 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xedf01d40ec866 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8be8cd33348b4; op2val:0x3fe3f62f21d6ac12; op3val:0x3fdedf01d40ec866; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 224, x18)

inst_1031:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x740ddb996cc00 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6e903f9b8c5fd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0a5eba192c9ca and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc740ddb996cc00; op2val:0x3ff6e903f9b8c5fd; op3val:0x3fd0a5eba192c9ca; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 240, x18)

inst_1032:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x740ddb996cc00 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6e903f9b8c5fd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0a5eba192c9ca and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc740ddb996cc00; op2val:0x3ff6e903f9b8c5fd; op3val:0x3fd0a5eba192c9ca; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 256, x18)

inst_1033:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x740ddb996cc00 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6e903f9b8c5fd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0a5eba192c9ca and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc740ddb996cc00; op2val:0x3ff6e903f9b8c5fd; op3val:0x3fd0a5eba192c9ca; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 272, x18)

inst_1034:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x740ddb996cc00 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6e903f9b8c5fd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0a5eba192c9ca and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc740ddb996cc00; op2val:0x3ff6e903f9b8c5fd; op3val:0x3fd0a5eba192c9ca; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 288, x18)

inst_1035:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x740ddb996cc00 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6e903f9b8c5fd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0a5eba192c9ca and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc740ddb996cc00; op2val:0x3ff6e903f9b8c5fd; op3val:0x3fd0a5eba192c9ca; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 304, x18)

inst_1036:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2dd0f3ce0ae90 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x50dce37c3f5d6 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8d26abc2b77d8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2dd0f3ce0ae90; op2val:0x3ff50dce37c3f5d6; op3val:0x3fc8d26abc2b77d8; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 320, x18)

inst_1037:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2dd0f3ce0ae90 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x50dce37c3f5d6 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8d26abc2b77d8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2dd0f3ce0ae90; op2val:0x3ff50dce37c3f5d6; op3val:0x3fc8d26abc2b77d8; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 336, x18)

inst_1038:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2dd0f3ce0ae90 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x50dce37c3f5d6 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8d26abc2b77d8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2dd0f3ce0ae90; op2val:0x3ff50dce37c3f5d6; op3val:0x3fc8d26abc2b77d8; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 352, x18)

inst_1039:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2dd0f3ce0ae90 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x50dce37c3f5d6 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8d26abc2b77d8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2dd0f3ce0ae90; op2val:0x3ff50dce37c3f5d6; op3val:0x3fc8d26abc2b77d8; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 368, x18)

inst_1040:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2dd0f3ce0ae90 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x50dce37c3f5d6 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8d26abc2b77d8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2dd0f3ce0ae90; op2val:0x3ff50dce37c3f5d6; op3val:0x3fc8d26abc2b77d8; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 384, x18)

inst_1041:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x820664362b778 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x47916ceb992b2 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xedf173dde9500 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc820664362b778; op2val:0x3fb47916ceb992b2; op3val:0x3f8edf173dde9500; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 400, x18)

inst_1042:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x820664362b778 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x47916ceb992b2 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xedf173dde9500 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc820664362b778; op2val:0x3fb47916ceb992b2; op3val:0x3f8edf173dde9500; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 416, x18)

inst_1043:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x820664362b778 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x47916ceb992b2 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xedf173dde9500 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc820664362b778; op2val:0x3fb47916ceb992b2; op3val:0x3f8edf173dde9500; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 432, x18)

inst_1044:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x820664362b778 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x47916ceb992b2 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xedf173dde9500 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc820664362b778; op2val:0x3fb47916ceb992b2; op3val:0x3f8edf173dde9500; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 448, x18)

inst_1045:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x820664362b778 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x47916ceb992b2 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xedf173dde9500 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc820664362b778; op2val:0x3fb47916ceb992b2; op3val:0x3f8edf173dde9500; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 464, x18)

inst_1046:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5736265744892 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x28b823dfafa69 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8dcd7b58c0de7 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5736265744892; op2val:0x3ff28b823dfafa69; op3val:0x3fe8dcd7b58c0de7; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 480, x18)

inst_1047:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5736265744892 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x28b823dfafa69 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8dcd7b58c0de7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5736265744892; op2val:0x3ff28b823dfafa69; op3val:0x3fe8dcd7b58c0de7; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 496, x18)

inst_1048:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5736265744892 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x28b823dfafa69 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8dcd7b58c0de7 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5736265744892; op2val:0x3ff28b823dfafa69; op3val:0x3fe8dcd7b58c0de7; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 512, x18)

inst_1049:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5736265744892 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x28b823dfafa69 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8dcd7b58c0de7 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5736265744892; op2val:0x3ff28b823dfafa69; op3val:0x3fe8dcd7b58c0de7; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 528, x18)

inst_1050:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5736265744892 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x28b823dfafa69 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8dcd7b58c0de7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5736265744892; op2val:0x3ff28b823dfafa69; op3val:0x3fe8dcd7b58c0de7; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 544, x18)

inst_1051:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdea0193aadedc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe40c54659ad3b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc47ede7f4f3f8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddea0193aadedc; op2val:0x3fde40c54659ad3b; op3val:0x3fcc47ede7f4f3f8; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 560, x18)

inst_1052:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdea0193aadedc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe40c54659ad3b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc47ede7f4f3f8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddea0193aadedc; op2val:0x3fde40c54659ad3b; op3val:0x3fcc47ede7f4f3f8; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 576, x18)

inst_1053:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdea0193aadedc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe40c54659ad3b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc47ede7f4f3f8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddea0193aadedc; op2val:0x3fde40c54659ad3b; op3val:0x3fcc47ede7f4f3f8; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 592, x18)

inst_1054:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdea0193aadedc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe40c54659ad3b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc47ede7f4f3f8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddea0193aadedc; op2val:0x3fde40c54659ad3b; op3val:0x3fcc47ede7f4f3f8; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 608, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdea0193aadedc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe40c54659ad3b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc47ede7f4f3f8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddea0193aadedc; op2val:0x3fde40c54659ad3b; op3val:0x3fcc47ede7f4f3f8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 624, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaa7977693c463 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x185e75fed121d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd31237c6f70e0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaa7977693c463; op2val:0x3fd185e75fed121d; op3val:0x3fcd31237c6f70e0; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 640, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaa7977693c463 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x185e75fed121d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd31237c6f70e0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaa7977693c463; op2val:0x3fd185e75fed121d; op3val:0x3fcd31237c6f70e0; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 656, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaa7977693c463 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x185e75fed121d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd31237c6f70e0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaa7977693c463; op2val:0x3fd185e75fed121d; op3val:0x3fcd31237c6f70e0; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 672, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaa7977693c463 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x185e75fed121d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd31237c6f70e0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaa7977693c463; op2val:0x3fd185e75fed121d; op3val:0x3fcd31237c6f70e0; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 688, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaa7977693c463 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x185e75fed121d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd31237c6f70e0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaa7977693c463; op2val:0x3fd185e75fed121d; op3val:0x3fcd31237c6f70e0; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 704, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7a4f1bded2960 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb6d62c7ae57c9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x443fecc5df179 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7a4f1bded2960; op2val:0x3feb6d62c7ae57c9; op3val:0x3fe443fecc5df179; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 720, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7a4f1bded2960 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb6d62c7ae57c9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x443fecc5df179 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7a4f1bded2960; op2val:0x3feb6d62c7ae57c9; op3val:0x3fe443fecc5df179; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 736, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7a4f1bded2960 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb6d62c7ae57c9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x443fecc5df179 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7a4f1bded2960; op2val:0x3feb6d62c7ae57c9; op3val:0x3fe443fecc5df179; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 752, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7a4f1bded2960 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb6d62c7ae57c9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x443fecc5df179 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7a4f1bded2960; op2val:0x3feb6d62c7ae57c9; op3val:0x3fe443fecc5df179; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 768, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7a4f1bded2960 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb6d62c7ae57c9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x443fecc5df179 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7a4f1bded2960; op2val:0x3feb6d62c7ae57c9; op3val:0x3fe443fecc5df179; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 784, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x17e90be8b3888 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1c853639e0e6c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x37183093c85fa and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc17e90be8b3888; op2val:0x4001c853639e0e6c; op3val:0x3fd37183093c85fa; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 800, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x17e90be8b3888 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1c853639e0e6c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x37183093c85fa and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc17e90be8b3888; op2val:0x4001c853639e0e6c; op3val:0x3fd37183093c85fa; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 816, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x17e90be8b3888 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1c853639e0e6c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x37183093c85fa and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc17e90be8b3888; op2val:0x4001c853639e0e6c; op3val:0x3fd37183093c85fa; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 832, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x17e90be8b3888 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1c853639e0e6c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x37183093c85fa and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc17e90be8b3888; op2val:0x4001c853639e0e6c; op3val:0x3fd37183093c85fa; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 848, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x17e90be8b3888 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1c853639e0e6c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x37183093c85fa and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc17e90be8b3888; op2val:0x4001c853639e0e6c; op3val:0x3fd37183093c85fa; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 864, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe3374759d8328 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x7537aec362e6b and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x603c52db4e4c0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde3374759d8328; op2val:0x3fa7537aec362e6b; op3val:0x3f9603c52db4e4c0; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 880, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe3374759d8328 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x7537aec362e6b and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x603c52db4e4c0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde3374759d8328; op2val:0x3fa7537aec362e6b; op3val:0x3f9603c52db4e4c0; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 896, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe3374759d8328 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x7537aec362e6b and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x603c52db4e4c0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde3374759d8328; op2val:0x3fa7537aec362e6b; op3val:0x3f9603c52db4e4c0; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 912, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe3374759d8328 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x7537aec362e6b and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x603c52db4e4c0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde3374759d8328; op2val:0x3fa7537aec362e6b; op3val:0x3f9603c52db4e4c0; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 928, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe3374759d8328 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x7537aec362e6b and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x603c52db4e4c0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde3374759d8328; op2val:0x3fa7537aec362e6b; op3val:0x3f9603c52db4e4c0; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 944, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd3ca9b8afd456 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x109dba168c8c0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf2277c8f7a960 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd3ca9b8afd456; op2val:0x400109dba168c8c0; op3val:0x3fef2277c8f7a960; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 960, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd3ca9b8afd456 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x109dba168c8c0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf2277c8f7a960 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd3ca9b8afd456; op2val:0x400109dba168c8c0; op3val:0x3fef2277c8f7a960; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 976, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd3ca9b8afd456 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x109dba168c8c0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf2277c8f7a960 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd3ca9b8afd456; op2val:0x400109dba168c8c0; op3val:0x3fef2277c8f7a960; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 992, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd3ca9b8afd456 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x109dba168c8c0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf2277c8f7a960 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd3ca9b8afd456; op2val:0x400109dba168c8c0; op3val:0x3fef2277c8f7a960; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1008, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd3ca9b8afd456 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x109dba168c8c0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf2277c8f7a960 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd3ca9b8afd456; op2val:0x400109dba168c8c0; op3val:0x3fef2277c8f7a960; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1024, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe3107e51b2188 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf1cb85d66d56 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb4f08313d5eed and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde3107e51b2188; op2val:0x3ffcf1cb85d66d56; op3val:0x3feb4f08313d5eed; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1040, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe3107e51b2188 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf1cb85d66d56 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb4f08313d5eed and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde3107e51b2188; op2val:0x3ffcf1cb85d66d56; op3val:0x3feb4f08313d5eed; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1056, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe3107e51b2188 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf1cb85d66d56 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb4f08313d5eed and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde3107e51b2188; op2val:0x3ffcf1cb85d66d56; op3val:0x3feb4f08313d5eed; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1072, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe3107e51b2188 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf1cb85d66d56 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb4f08313d5eed and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde3107e51b2188; op2val:0x3ffcf1cb85d66d56; op3val:0x3feb4f08313d5eed; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1088, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe3107e51b2188 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf1cb85d66d56 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb4f08313d5eed and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde3107e51b2188; op2val:0x3ffcf1cb85d66d56; op3val:0x3feb4f08313d5eed; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1104, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf42ccc32ddc1f and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x9b04dafb6fafb and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x9186b431216c0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef42ccc32ddc1f; op2val:0x3fa9b04dafb6fafb; op3val:0x3fa9186b431216c0; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1120, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf42ccc32ddc1f and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x9b04dafb6fafb and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x9186b431216c0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef42ccc32ddc1f; op2val:0x3fa9b04dafb6fafb; op3val:0x3fa9186b431216c0; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1136, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf42ccc32ddc1f and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x9b04dafb6fafb and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x9186b431216c0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef42ccc32ddc1f; op2val:0x3fa9b04dafb6fafb; op3val:0x3fa9186b431216c0; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1152, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf42ccc32ddc1f and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x9b04dafb6fafb and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x9186b431216c0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef42ccc32ddc1f; op2val:0x3fa9b04dafb6fafb; op3val:0x3fa9186b431216c0; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1168, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf42ccc32ddc1f and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x9b04dafb6fafb and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x9186b431216c0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef42ccc32ddc1f; op2val:0x3fa9b04dafb6fafb; op3val:0x3fa9186b431216c0; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1184, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5e81124ed55e4 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x3995136ffda78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad57eb1ef4601 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5e81124ed55e4; op2val:0x4013995136ffda78; op3val:0x3fead57eb1ef4601; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1200, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5e81124ed55e4 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x3995136ffda78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad57eb1ef4601 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5e81124ed55e4; op2val:0x4013995136ffda78; op3val:0x3fead57eb1ef4601; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1216, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5e81124ed55e4 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x3995136ffda78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad57eb1ef4601 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5e81124ed55e4; op2val:0x4013995136ffda78; op3val:0x3fead57eb1ef4601; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1232, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5e81124ed55e4 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x3995136ffda78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad57eb1ef4601 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5e81124ed55e4; op2val:0x4013995136ffda78; op3val:0x3fead57eb1ef4601; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1248, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5e81124ed55e4 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x3995136ffda78 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad57eb1ef4601 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5e81124ed55e4; op2val:0x4013995136ffda78; op3val:0x3fead57eb1ef4601; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1264, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x509209109e15f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1e5426aa7e2a2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7871c8e15e422 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe509209109e15f; op2val:0x3ff1e5426aa7e2a2; op3val:0x3fe7871c8e15e422; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1280, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x509209109e15f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1e5426aa7e2a2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7871c8e15e422 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe509209109e15f; op2val:0x3ff1e5426aa7e2a2; op3val:0x3fe7871c8e15e422; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1296, x18)

inst_1098:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x509209109e15f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1e5426aa7e2a2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7871c8e15e422 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe509209109e15f; op2val:0x3ff1e5426aa7e2a2; op3val:0x3fe7871c8e15e422; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1312, x18)

inst_1099:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x509209109e15f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1e5426aa7e2a2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7871c8e15e422 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe509209109e15f; op2val:0x3ff1e5426aa7e2a2; op3val:0x3fe7871c8e15e422; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1328, x18)

inst_1100:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x509209109e15f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1e5426aa7e2a2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7871c8e15e422 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe509209109e15f; op2val:0x3ff1e5426aa7e2a2; op3val:0x3fe7871c8e15e422; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1344, x18)

inst_1101:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd406ecf6c6c77 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6de5f6b3e635 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcbae10900557b and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed406ecf6c6c77; op2val:0x3fef6de5f6b3e635; op3val:0x3fecbae10900557b; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1360, x18)

inst_1102:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd406ecf6c6c77 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6de5f6b3e635 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcbae10900557b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed406ecf6c6c77; op2val:0x3fef6de5f6b3e635; op3val:0x3fecbae10900557b; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1376, x18)

inst_1103:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd406ecf6c6c77 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6de5f6b3e635 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcbae10900557b and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed406ecf6c6c77; op2val:0x3fef6de5f6b3e635; op3val:0x3fecbae10900557b; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1392, x18)

inst_1104:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd406ecf6c6c77 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6de5f6b3e635 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcbae10900557b and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed406ecf6c6c77; op2val:0x3fef6de5f6b3e635; op3val:0x3fecbae10900557b; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1408, x18)
addi x16,x16,2040

inst_1105:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd406ecf6c6c77 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6de5f6b3e635 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcbae10900557b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed406ecf6c6c77; op2val:0x3fef6de5f6b3e635; op3val:0x3fecbae10900557b; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1424, x18)

inst_1106:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1169d4614134f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xeee3ed0d3765d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0846d2ec0a9ca and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1169d4614134f; op2val:0x3feeee3ed0d3765d; op3val:0x3fe0846d2ec0a9ca; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1440, x18)

inst_1107:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1169d4614134f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xeee3ed0d3765d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0846d2ec0a9ca and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1169d4614134f; op2val:0x3feeee3ed0d3765d; op3val:0x3fe0846d2ec0a9ca; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1456, x18)

inst_1108:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1169d4614134f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xeee3ed0d3765d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0846d2ec0a9ca and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1169d4614134f; op2val:0x3feeee3ed0d3765d; op3val:0x3fe0846d2ec0a9ca; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1472, x18)

inst_1109:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1169d4614134f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xeee3ed0d3765d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0846d2ec0a9ca and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1169d4614134f; op2val:0x3feeee3ed0d3765d; op3val:0x3fe0846d2ec0a9ca; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1488, x18)

inst_1110:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1169d4614134f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xeee3ed0d3765d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0846d2ec0a9ca and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1169d4614134f; op2val:0x3feeee3ed0d3765d; op3val:0x3fe0846d2ec0a9ca; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1504, x18)

inst_1111:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x35608e830df90 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x760853fb18f8b and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc40520b5ac900 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc35608e830df90; op2val:0x3fa760853fb18f8b; op3val:0x3f7c40520b5ac900; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1520, x18)

inst_1112:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x35608e830df90 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x760853fb18f8b and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc40520b5ac900 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc35608e830df90; op2val:0x3fa760853fb18f8b; op3val:0x3f7c40520b5ac900; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1536, x18)

inst_1113:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x35608e830df90 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x760853fb18f8b and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc40520b5ac900 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc35608e830df90; op2val:0x3fa760853fb18f8b; op3val:0x3f7c40520b5ac900; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1552, x18)

inst_1114:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x35608e830df90 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x760853fb18f8b and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc40520b5ac900 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc35608e830df90; op2val:0x3fa760853fb18f8b; op3val:0x3f7c40520b5ac900; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1568, x18)

inst_1115:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x35608e830df90 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x760853fb18f8b and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc40520b5ac900 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc35608e830df90; op2val:0x3fa760853fb18f8b; op3val:0x3f7c40520b5ac900; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1584, x18)

inst_1116:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x458c5ea1a780a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x612919c153733 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc11ad2b89e0c5 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe458c5ea1a780a; op2val:0x3ff612919c153733; op3val:0x3fec11ad2b89e0c5; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1600, x18)

inst_1117:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x458c5ea1a780a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x612919c153733 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc11ad2b89e0c5 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe458c5ea1a780a; op2val:0x3ff612919c153733; op3val:0x3fec11ad2b89e0c5; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1616, x18)

inst_1118:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x458c5ea1a780a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x612919c153733 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc11ad2b89e0c5 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe458c5ea1a780a; op2val:0x3ff612919c153733; op3val:0x3fec11ad2b89e0c5; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1632, x18)

inst_1119:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x458c5ea1a780a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x612919c153733 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc11ad2b89e0c5 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe458c5ea1a780a; op2val:0x3ff612919c153733; op3val:0x3fec11ad2b89e0c5; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1648, x18)

inst_1120:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x458c5ea1a780a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x612919c153733 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc11ad2b89e0c5 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe458c5ea1a780a; op2val:0x3ff612919c153733; op3val:0x3fec11ad2b89e0c5; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1664, x18)

inst_1121:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ed81242d99cb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xbedc50b55d42b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4e22f51974420 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ed81242d99cb; op2val:0x3febedc50b55d42b; op3val:0x3fe4e22f51974420; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1680, x18)

inst_1122:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ed81242d99cb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xbedc50b55d42b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4e22f51974420 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ed81242d99cb; op2val:0x3febedc50b55d42b; op3val:0x3fe4e22f51974420; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1696, x18)

inst_1123:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ed81242d99cb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xbedc50b55d42b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4e22f51974420 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ed81242d99cb; op2val:0x3febedc50b55d42b; op3val:0x3fe4e22f51974420; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1712, x18)

inst_1124:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ed81242d99cb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xbedc50b55d42b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4e22f51974420 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ed81242d99cb; op2val:0x3febedc50b55d42b; op3val:0x3fe4e22f51974420; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1728, x18)

inst_1125:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ed81242d99cb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xbedc50b55d42b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4e22f51974420 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ed81242d99cb; op2val:0x3febedc50b55d42b; op3val:0x3fe4e22f51974420; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1744, x18)

inst_1126:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b317fcfd7b76 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1a657c1039236 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb3f130d765d56 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b317fcfd7b76; op2val:0x4001a657c1039236; op3val:0x3feb3f130d765d56; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1760, x18)

inst_1127:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b317fcfd7b76 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1a657c1039236 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb3f130d765d56 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b317fcfd7b76; op2val:0x4001a657c1039236; op3val:0x3feb3f130d765d56; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1776, x18)

inst_1128:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b317fcfd7b76 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1a657c1039236 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb3f130d765d56 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b317fcfd7b76; op2val:0x4001a657c1039236; op3val:0x3feb3f130d765d56; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1792, x18)

inst_1129:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b317fcfd7b76 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1a657c1039236 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb3f130d765d56 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b317fcfd7b76; op2val:0x4001a657c1039236; op3val:0x3feb3f130d765d56; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1808, x18)

inst_1130:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b317fcfd7b76 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1a657c1039236 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb3f130d765d56 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b317fcfd7b76; op2val:0x4001a657c1039236; op3val:0x3feb3f130d765d56; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1824, x18)

inst_1131:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf2f18c3b7ff32 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x081a252a980bf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x015e06cac39d0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef2f18c3b7ff32; op2val:0x3fc081a252a980bf; op3val:0x3fc015e06cac39d0; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1840, x18)

inst_1132:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf2f18c3b7ff32 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x081a252a980bf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x015e06cac39d0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef2f18c3b7ff32; op2val:0x3fc081a252a980bf; op3val:0x3fc015e06cac39d0; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1856, x18)

inst_1133:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf2f18c3b7ff32 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x081a252a980bf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x015e06cac39d0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef2f18c3b7ff32; op2val:0x3fc081a252a980bf; op3val:0x3fc015e06cac39d0; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1872, x18)

inst_1134:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf2f18c3b7ff32 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x081a252a980bf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x015e06cac39d0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef2f18c3b7ff32; op2val:0x3fc081a252a980bf; op3val:0x3fc015e06cac39d0; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1888, x18)

inst_1135:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf2f18c3b7ff32 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x081a252a980bf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x015e06cac39d0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef2f18c3b7ff32; op2val:0x3fc081a252a980bf; op3val:0x3fc015e06cac39d0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1904, x18)

inst_1136:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc0cdcc3446c7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6aa0113d7bd51 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45d4eb98b8876 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecc0cdcc3446c7; op2val:0x3fe6aa0113d7bd51; op3val:0x3fe45d4eb98b8876; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1920, x18)

inst_1137:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc0cdcc3446c7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6aa0113d7bd51 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45d4eb98b8876 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecc0cdcc3446c7; op2val:0x3fe6aa0113d7bd51; op3val:0x3fe45d4eb98b8876; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1936, x18)

inst_1138:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc0cdcc3446c7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6aa0113d7bd51 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45d4eb98b8876 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecc0cdcc3446c7; op2val:0x3fe6aa0113d7bd51; op3val:0x3fe45d4eb98b8876; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1952, x18)

inst_1139:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc0cdcc3446c7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6aa0113d7bd51 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45d4eb98b8876 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecc0cdcc3446c7; op2val:0x3fe6aa0113d7bd51; op3val:0x3fe45d4eb98b8876; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1968, x18)

inst_1140:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc0cdcc3446c7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6aa0113d7bd51 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45d4eb98b8876 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecc0cdcc3446c7; op2val:0x3fe6aa0113d7bd51; op3val:0x3fe45d4eb98b8876; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1984, x18)

inst_1141:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffe16c5bb9d14 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb2a75c42921df and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb28d671da80a2 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffe16c5bb9d14; op2val:0x3feb2a75c42921df; op3val:0x3feb28d671da80a2; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 2000, x18)

inst_1142:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffe16c5bb9d14 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb2a75c42921df and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb28d671da80a2 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffe16c5bb9d14; op2val:0x3feb2a75c42921df; op3val:0x3feb28d671da80a2; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_10)

inst_1143:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffe16c5bb9d14 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb2a75c42921df and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb28d671da80a2 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffe16c5bb9d14; op2val:0x3feb2a75c42921df; op3val:0x3feb28d671da80a2; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 0, x18)

inst_1144:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffe16c5bb9d14 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb2a75c42921df and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb28d671da80a2 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffe16c5bb9d14; op2val:0x3feb2a75c42921df; op3val:0x3feb28d671da80a2; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 16, x18)

inst_1145:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffe16c5bb9d14 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb2a75c42921df and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb28d671da80a2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffe16c5bb9d14; op2val:0x3feb2a75c42921df; op3val:0x3feb28d671da80a2; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 32, x18)

inst_1146:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51e47cd98daf4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6f84050ef1fa5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe514cf79729ce and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe51e47cd98daf4; op2val:0x3ff6f84050ef1fa5; op3val:0x3fee514cf79729ce; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 48, x18)

inst_1147:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51e47cd98daf4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6f84050ef1fa5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe514cf79729ce and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe51e47cd98daf4; op2val:0x3ff6f84050ef1fa5; op3val:0x3fee514cf79729ce; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 64, x18)

inst_1148:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51e47cd98daf4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6f84050ef1fa5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe514cf79729ce and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe51e47cd98daf4; op2val:0x3ff6f84050ef1fa5; op3val:0x3fee514cf79729ce; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 80, x18)

inst_1149:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51e47cd98daf4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6f84050ef1fa5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe514cf79729ce and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe51e47cd98daf4; op2val:0x3ff6f84050ef1fa5; op3val:0x3fee514cf79729ce; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 96, x18)

inst_1150:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51e47cd98daf4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6f84050ef1fa5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe514cf79729ce and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe51e47cd98daf4; op2val:0x3ff6f84050ef1fa5; op3val:0x3fee514cf79729ce; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 112, x18)

inst_1151:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x951cfde3ccc50 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0f0827d7c7b36 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xace698b8f6ef5 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe951cfde3ccc50; op2val:0x3ff0f0827d7c7b36; op3val:0x3feace698b8f6ef5; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 128, x18)

inst_1152:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x951cfde3ccc50 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0f0827d7c7b36 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xace698b8f6ef5 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe951cfde3ccc50; op2val:0x3ff0f0827d7c7b36; op3val:0x3feace698b8f6ef5; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 144, x18)

inst_1153:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x951cfde3ccc50 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0f0827d7c7b36 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xace698b8f6ef5 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe951cfde3ccc50; op2val:0x3ff0f0827d7c7b36; op3val:0x3feace698b8f6ef5; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 160, x18)

inst_1154:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x951cfde3ccc50 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0f0827d7c7b36 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xace698b8f6ef5 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe951cfde3ccc50; op2val:0x3ff0f0827d7c7b36; op3val:0x3feace698b8f6ef5; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 176, x18)

inst_1155:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x951cfde3ccc50 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0f0827d7c7b36 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xace698b8f6ef5 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe951cfde3ccc50; op2val:0x3ff0f0827d7c7b36; op3val:0x3feace698b8f6ef5; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 192, x18)

inst_1156:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0210db3cd0db and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfd3730571579a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdd849d00fb34c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0210db3cd0db; op2val:0x3fefd3730571579a; op3val:0x3fedd849d00fb34c; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 208, x18)

inst_1157:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0210db3cd0db and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfd3730571579a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdd849d00fb34c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0210db3cd0db; op2val:0x3fefd3730571579a; op3val:0x3fedd849d00fb34c; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 224, x18)

inst_1158:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0210db3cd0db and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfd3730571579a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdd849d00fb34c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0210db3cd0db; op2val:0x3fefd3730571579a; op3val:0x3fedd849d00fb34c; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 240, x18)

inst_1159:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0210db3cd0db and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfd3730571579a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdd849d00fb34c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0210db3cd0db; op2val:0x3fefd3730571579a; op3val:0x3fedd849d00fb34c; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 256, x18)

inst_1160:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0210db3cd0db and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfd3730571579a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdd849d00fb34c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0210db3cd0db; op2val:0x3fefd3730571579a; op3val:0x3fedd849d00fb34c; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 272, x18)

inst_1161:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcafd2fa12ebaf and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa1bd2cabedb1b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x767ccbccbe4bc and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecafd2fa12ebaf; op2val:0x3fda1bd2cabedb1b; op3val:0x3fd767ccbccbe4bc; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 288, x18)

inst_1162:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcafd2fa12ebaf and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa1bd2cabedb1b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x767ccbccbe4bc and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecafd2fa12ebaf; op2val:0x3fda1bd2cabedb1b; op3val:0x3fd767ccbccbe4bc; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 304, x18)

inst_1163:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcafd2fa12ebaf and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa1bd2cabedb1b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x767ccbccbe4bc and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecafd2fa12ebaf; op2val:0x3fda1bd2cabedb1b; op3val:0x3fd767ccbccbe4bc; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 320, x18)

inst_1164:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcafd2fa12ebaf and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa1bd2cabedb1b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x767ccbccbe4bc and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecafd2fa12ebaf; op2val:0x3fda1bd2cabedb1b; op3val:0x3fd767ccbccbe4bc; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 336, x18)

inst_1165:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcafd2fa12ebaf and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa1bd2cabedb1b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x767ccbccbe4bc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecafd2fa12ebaf; op2val:0x3fda1bd2cabedb1b; op3val:0x3fd767ccbccbe4bc; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 352, x18)

inst_1166:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x371a1ca686070 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfa704eca5c789 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x33b90be6c6bce and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe371a1ca686070; op2val:0x3fefa704eca5c789; op3val:0x3fe33b90be6c6bce; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 368, x18)

inst_1167:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x371a1ca686070 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfa704eca5c789 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x33b90be6c6bce and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe371a1ca686070; op2val:0x3fefa704eca5c789; op3val:0x3fe33b90be6c6bce; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 384, x18)

inst_1168:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x371a1ca686070 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfa704eca5c789 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x33b90be6c6bce and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe371a1ca686070; op2val:0x3fefa704eca5c789; op3val:0x3fe33b90be6c6bce; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 400, x18)

inst_1169:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x371a1ca686070 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfa704eca5c789 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x33b90be6c6bce and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe371a1ca686070; op2val:0x3fefa704eca5c789; op3val:0x3fe33b90be6c6bce; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 416, x18)

inst_1170:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x371a1ca686070 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfa704eca5c789 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x33b90be6c6bce and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe371a1ca686070; op2val:0x3fefa704eca5c789; op3val:0x3fe33b90be6c6bce; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 432, x18)

inst_1171:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x00ff3b51c5d4c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c5995a864578 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9df4b270d3914 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc00ff3b51c5d4c; op2val:0x3ff9c5995a864578; op3val:0x3fc9df4b270d3914; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 448, x18)

inst_1172:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x00ff3b51c5d4c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c5995a864578 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9df4b270d3914 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc00ff3b51c5d4c; op2val:0x3ff9c5995a864578; op3val:0x3fc9df4b270d3914; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 464, x18)

inst_1173:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x00ff3b51c5d4c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c5995a864578 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9df4b270d3914 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc00ff3b51c5d4c; op2val:0x3ff9c5995a864578; op3val:0x3fc9df4b270d3914; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 480, x18)

inst_1174:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x00ff3b51c5d4c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c5995a864578 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9df4b270d3914 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc00ff3b51c5d4c; op2val:0x3ff9c5995a864578; op3val:0x3fc9df4b270d3914; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 496, x18)

inst_1175:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x00ff3b51c5d4c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c5995a864578 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9df4b270d3914 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc00ff3b51c5d4c; op2val:0x3ff9c5995a864578; op3val:0x3fc9df4b270d3914; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 512, x18)

inst_1176:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9b8346420efa0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x185476e67ceb2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc29f5b0c512f8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9b8346420efa0; op2val:0x400185476e67ceb2; op3val:0x3fcc29f5b0c512f8; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 528, x18)

inst_1177:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9b8346420efa0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x185476e67ceb2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc29f5b0c512f8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9b8346420efa0; op2val:0x400185476e67ceb2; op3val:0x3fcc29f5b0c512f8; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 544, x18)

inst_1178:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9b8346420efa0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x185476e67ceb2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc29f5b0c512f8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9b8346420efa0; op2val:0x400185476e67ceb2; op3val:0x3fcc29f5b0c512f8; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 560, x18)

inst_1179:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9b8346420efa0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x185476e67ceb2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc29f5b0c512f8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9b8346420efa0; op2val:0x400185476e67ceb2; op3val:0x3fcc29f5b0c512f8; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 576, x18)

inst_1180:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9b8346420efa0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x185476e67ceb2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc29f5b0c512f8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9b8346420efa0; op2val:0x400185476e67ceb2; op3val:0x3fcc29f5b0c512f8; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 592, x18)

inst_1181:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4b9234a14ebbc and fs2 == 0 and fe2 == 0x400 and fm2 == 0x75f64eb83c9cb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe45b0b22c6597 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4b9234a14ebbc; op2val:0x40075f64eb83c9cb; op3val:0x3fee45b0b22c6597; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 608, x18)

inst_1182:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4b9234a14ebbc and fs2 == 0 and fe2 == 0x400 and fm2 == 0x75f64eb83c9cb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe45b0b22c6597 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4b9234a14ebbc; op2val:0x40075f64eb83c9cb; op3val:0x3fee45b0b22c6597; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 624, x18)

inst_1183:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4b9234a14ebbc and fs2 == 0 and fe2 == 0x400 and fm2 == 0x75f64eb83c9cb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe45b0b22c6597 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4b9234a14ebbc; op2val:0x40075f64eb83c9cb; op3val:0x3fee45b0b22c6597; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 640, x18)

inst_1184:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4b9234a14ebbc and fs2 == 0 and fe2 == 0x400 and fm2 == 0x75f64eb83c9cb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe45b0b22c6597 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4b9234a14ebbc; op2val:0x40075f64eb83c9cb; op3val:0x3fee45b0b22c6597; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 656, x18)

inst_1185:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4b9234a14ebbc and fs2 == 0 and fe2 == 0x400 and fm2 == 0x75f64eb83c9cb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe45b0b22c6597 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4b9234a14ebbc; op2val:0x40075f64eb83c9cb; op3val:0x3fee45b0b22c6597; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 672, x18)

inst_1186:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf02303865f0fe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x941af9569cfe9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8795c42c2a0f2 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf02303865f0fe; op2val:0x3fe941af9569cfe9; op3val:0x3fd8795c42c2a0f2; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 688, x18)

inst_1187:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf02303865f0fe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x941af9569cfe9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8795c42c2a0f2 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf02303865f0fe; op2val:0x3fe941af9569cfe9; op3val:0x3fd8795c42c2a0f2; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 704, x18)

inst_1188:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf02303865f0fe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x941af9569cfe9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8795c42c2a0f2 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf02303865f0fe; op2val:0x3fe941af9569cfe9; op3val:0x3fd8795c42c2a0f2; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 720, x18)

inst_1189:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf02303865f0fe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x941af9569cfe9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8795c42c2a0f2 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf02303865f0fe; op2val:0x3fe941af9569cfe9; op3val:0x3fd8795c42c2a0f2; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 736, x18)
addi x16,x16,2040

inst_1190:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf02303865f0fe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x941af9569cfe9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8795c42c2a0f2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf02303865f0fe; op2val:0x3fe941af9569cfe9; op3val:0x3fd8795c42c2a0f2; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 752, x18)

inst_1191:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8038c77f7f280 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa655dc28894f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3cef3b1205abc and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8038c77f7f280; op2val:0x401a655dc28894f7; op3val:0x3fd3cef3b1205abc; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 768, x18)

inst_1192:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8038c77f7f280 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa655dc28894f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3cef3b1205abc and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8038c77f7f280; op2val:0x401a655dc28894f7; op3val:0x3fd3cef3b1205abc; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 784, x18)

inst_1193:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8038c77f7f280 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa655dc28894f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3cef3b1205abc and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8038c77f7f280; op2val:0x401a655dc28894f7; op3val:0x3fd3cef3b1205abc; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 800, x18)

inst_1194:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8038c77f7f280 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa655dc28894f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3cef3b1205abc and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8038c77f7f280; op2val:0x401a655dc28894f7; op3val:0x3fd3cef3b1205abc; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 816, x18)

inst_1195:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8038c77f7f280 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa655dc28894f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3cef3b1205abc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8038c77f7f280; op2val:0x401a655dc28894f7; op3val:0x3fd3cef3b1205abc; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 832, x18)

inst_1196:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42f13218f8d55 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x600448492323d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbc110bd737bba and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42f13218f8d55; op2val:0x3fe600448492323d; op3val:0x3fdbc110bd737bba; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 848, x18)

inst_1197:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42f13218f8d55 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x600448492323d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbc110bd737bba and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42f13218f8d55; op2val:0x3fe600448492323d; op3val:0x3fdbc110bd737bba; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 864, x18)

inst_1198:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42f13218f8d55 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x600448492323d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbc110bd737bba and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42f13218f8d55; op2val:0x3fe600448492323d; op3val:0x3fdbc110bd737bba; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 880, x18)

inst_1199:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42f13218f8d55 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x600448492323d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbc110bd737bba and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42f13218f8d55; op2val:0x3fe600448492323d; op3val:0x3fdbc110bd737bba; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 896, x18)

inst_1200:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42f13218f8d55 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x600448492323d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbc110bd737bba and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42f13218f8d55; op2val:0x3fe600448492323d; op3val:0x3fdbc110bd737bba; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 912, x18)

inst_1201:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfde77176ad3cf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2ab8e4d6c04e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x297fd81dc9430 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefde77176ad3cf; op2val:0x3fe2ab8e4d6c04e9; op3val:0x3fe297fd81dc9430; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 928, x18)

inst_1202:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfde77176ad3cf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2ab8e4d6c04e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x297fd81dc9430 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefde77176ad3cf; op2val:0x3fe2ab8e4d6c04e9; op3val:0x3fe297fd81dc9430; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 944, x18)

inst_1203:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfde77176ad3cf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2ab8e4d6c04e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x297fd81dc9430 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefde77176ad3cf; op2val:0x3fe2ab8e4d6c04e9; op3val:0x3fe297fd81dc9430; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 960, x18)

inst_1204:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfde77176ad3cf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2ab8e4d6c04e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x297fd81dc9430 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefde77176ad3cf; op2val:0x3fe2ab8e4d6c04e9; op3val:0x3fe297fd81dc9430; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 976, x18)

inst_1205:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfde77176ad3cf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2ab8e4d6c04e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x297fd81dc9430 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefde77176ad3cf; op2val:0x3fe2ab8e4d6c04e9; op3val:0x3fe297fd81dc9430; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 992, x18)

inst_1206:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa4bccee8a8fd2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcb5a10bb898bd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7979466df4d8e and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda4bccee8a8fd2; op2val:0x3ffcb5a10bb898bd; op3val:0x3fe7979466df4d8e; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1008, x18)

inst_1207:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa4bccee8a8fd2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcb5a10bb898bd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7979466df4d8e and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda4bccee8a8fd2; op2val:0x3ffcb5a10bb898bd; op3val:0x3fe7979466df4d8e; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1024, x18)

inst_1208:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa4bccee8a8fd2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcb5a10bb898bd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7979466df4d8e and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda4bccee8a8fd2; op2val:0x3ffcb5a10bb898bd; op3val:0x3fe7979466df4d8e; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1040, x18)

inst_1209:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa4bccee8a8fd2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcb5a10bb898bd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7979466df4d8e and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda4bccee8a8fd2; op2val:0x3ffcb5a10bb898bd; op3val:0x3fe7979466df4d8e; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1056, x18)

inst_1210:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa4bccee8a8fd2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcb5a10bb898bd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7979466df4d8e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda4bccee8a8fd2; op2val:0x3ffcb5a10bb898bd; op3val:0x3fe7979466df4d8e; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1072, x18)

inst_1211:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x88882c3f3a5be and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x57f4e101fcf24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x07b2f70acf5d0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe88882c3f3a5be; op2val:0x3fe57f4e101fcf24; op3val:0x3fe07b2f70acf5d0; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1088, x18)

inst_1212:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x88882c3f3a5be and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x57f4e101fcf24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x07b2f70acf5d0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe88882c3f3a5be; op2val:0x3fe57f4e101fcf24; op3val:0x3fe07b2f70acf5d0; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1104, x18)

inst_1213:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x88882c3f3a5be and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x57f4e101fcf24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x07b2f70acf5d0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe88882c3f3a5be; op2val:0x3fe57f4e101fcf24; op3val:0x3fe07b2f70acf5d0; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1120, x18)

inst_1214:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x88882c3f3a5be and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x57f4e101fcf24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x07b2f70acf5d0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe88882c3f3a5be; op2val:0x3fe57f4e101fcf24; op3val:0x3fe07b2f70acf5d0; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1136, x18)

inst_1215:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x88882c3f3a5be and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x57f4e101fcf24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x07b2f70acf5d0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe88882c3f3a5be; op2val:0x3fe57f4e101fcf24; op3val:0x3fe07b2f70acf5d0; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1152, x18)

inst_1216:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa5c6ca365120a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdd5b58737f1f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x893cf315dadce and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea5c6ca365120a; op2val:0x3fedd5b58737f1f9; op3val:0x3fe893cf315dadce; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1168, x18)

inst_1217:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa5c6ca365120a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdd5b58737f1f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x893cf315dadce and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea5c6ca365120a; op2val:0x3fedd5b58737f1f9; op3val:0x3fe893cf315dadce; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1184, x18)

inst_1218:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa5c6ca365120a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdd5b58737f1f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x893cf315dadce and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea5c6ca365120a; op2val:0x3fedd5b58737f1f9; op3val:0x3fe893cf315dadce; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1200, x18)

inst_1219:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa5c6ca365120a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdd5b58737f1f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x893cf315dadce and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea5c6ca365120a; op2val:0x3fedd5b58737f1f9; op3val:0x3fe893cf315dadce; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1216, x18)

inst_1220:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa5c6ca365120a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdd5b58737f1f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x893cf315dadce and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea5c6ca365120a; op2val:0x3fedd5b58737f1f9; op3val:0x3fe893cf315dadce; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1232, x18)

inst_1221:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x5a441713b5e10 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x4166d9d967a4b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2ba7ebab0610 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa5a441713b5e10; op2val:0x4034166d9d967a4b; op3val:0x3feb2ba7ebab0610; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1248, x18)

inst_1222:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x5a441713b5e10 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x4166d9d967a4b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2ba7ebab0610 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa5a441713b5e10; op2val:0x4034166d9d967a4b; op3val:0x3feb2ba7ebab0610; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1264, x18)

inst_1223:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x5a441713b5e10 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x4166d9d967a4b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2ba7ebab0610 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa5a441713b5e10; op2val:0x4034166d9d967a4b; op3val:0x3feb2ba7ebab0610; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1280, x18)

inst_1224:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x5a441713b5e10 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x4166d9d967a4b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2ba7ebab0610 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa5a441713b5e10; op2val:0x4034166d9d967a4b; op3val:0x3feb2ba7ebab0610; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1296, x18)

inst_1225:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x5a441713b5e10 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x4166d9d967a4b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2ba7ebab0610 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa5a441713b5e10; op2val:0x4034166d9d967a4b; op3val:0x3feb2ba7ebab0610; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1312, x18)

inst_1226:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x484f25544e440 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x71df6e5390ea5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xda589f3d36cc8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe484f25544e440; op2val:0x3fc71df6e5390ea5; op3val:0x3fbda589f3d36cc8; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1328, x18)

inst_1227:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x484f25544e440 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x71df6e5390ea5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xda589f3d36cc8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe484f25544e440; op2val:0x3fc71df6e5390ea5; op3val:0x3fbda589f3d36cc8; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1344, x18)

inst_1228:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x484f25544e440 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x71df6e5390ea5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xda589f3d36cc8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe484f25544e440; op2val:0x3fc71df6e5390ea5; op3val:0x3fbda589f3d36cc8; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1360, x18)

inst_1229:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x484f25544e440 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x71df6e5390ea5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xda589f3d36cc8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe484f25544e440; op2val:0x3fc71df6e5390ea5; op3val:0x3fbda589f3d36cc8; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1376, x18)

inst_1230:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x484f25544e440 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x71df6e5390ea5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xda589f3d36cc8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe484f25544e440; op2val:0x3fc71df6e5390ea5; op3val:0x3fbda589f3d36cc8; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1392, x18)

inst_1231:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7172cb52ca658 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9ee11b944f617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2b5e4140ddb93 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7172cb52ca658; op2val:0x3fe9ee11b944f617; op3val:0x3fe2b5e4140ddb93; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1408, x18)

inst_1232:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7172cb52ca658 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9ee11b944f617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2b5e4140ddb93 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7172cb52ca658; op2val:0x3fe9ee11b944f617; op3val:0x3fe2b5e4140ddb93; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1424, x18)

inst_1233:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7172cb52ca658 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9ee11b944f617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2b5e4140ddb93 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7172cb52ca658; op2val:0x3fe9ee11b944f617; op3val:0x3fe2b5e4140ddb93; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1440, x18)

inst_1234:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7172cb52ca658 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9ee11b944f617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2b5e4140ddb93 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7172cb52ca658; op2val:0x3fe9ee11b944f617; op3val:0x3fe2b5e4140ddb93; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1456, x18)

inst_1235:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7172cb52ca658 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9ee11b944f617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2b5e4140ddb93 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7172cb52ca658; op2val:0x3fe9ee11b944f617; op3val:0x3fe2b5e4140ddb93; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1472, x18)

inst_1236:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x721d6991c9558 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8158cd7192153 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x168f4f7324cfc and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc721d6991c9558; op2val:0x3fe8158cd7192153; op3val:0x3fc168f4f7324cfc; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1488, x18)

inst_1237:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x721d6991c9558 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8158cd7192153 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x168f4f7324cfc and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc721d6991c9558; op2val:0x3fe8158cd7192153; op3val:0x3fc168f4f7324cfc; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1504, x18)

inst_1238:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x721d6991c9558 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8158cd7192153 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x168f4f7324cfc and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc721d6991c9558; op2val:0x3fe8158cd7192153; op3val:0x3fc168f4f7324cfc; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1520, x18)

inst_1239:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x721d6991c9558 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8158cd7192153 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x168f4f7324cfc and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc721d6991c9558; op2val:0x3fe8158cd7192153; op3val:0x3fc168f4f7324cfc; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1536, x18)

inst_1240:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x721d6991c9558 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8158cd7192153 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x168f4f7324cfc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc721d6991c9558; op2val:0x3fe8158cd7192153; op3val:0x3fc168f4f7324cfc; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1552, x18)

inst_1241:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcd5f9fdc6fc48 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x09096579b729c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xdda8ebb9e4d18 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcd5f9fdc6fc48; op2val:0x3fd09096579b729c; op3val:0x3fbdda8ebb9e4d18; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1568, x18)

inst_1242:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcd5f9fdc6fc48 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x09096579b729c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xdda8ebb9e4d18 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcd5f9fdc6fc48; op2val:0x3fd09096579b729c; op3val:0x3fbdda8ebb9e4d18; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1584, x18)

inst_1243:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcd5f9fdc6fc48 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x09096579b729c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xdda8ebb9e4d18 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcd5f9fdc6fc48; op2val:0x3fd09096579b729c; op3val:0x3fbdda8ebb9e4d18; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1600, x18)

inst_1244:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcd5f9fdc6fc48 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x09096579b729c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xdda8ebb9e4d18 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcd5f9fdc6fc48; op2val:0x3fd09096579b729c; op3val:0x3fbdda8ebb9e4d18; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1616, x18)

inst_1245:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcd5f9fdc6fc48 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x09096579b729c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xdda8ebb9e4d18 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcd5f9fdc6fc48; op2val:0x3fd09096579b729c; op3val:0x3fbdda8ebb9e4d18; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1632, x18)

inst_1246:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd6be0c355a414 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x32bba587a20be and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a041be64b75f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed6be0c355a414; op2val:0x3fe32bba587a20be; op3val:0x3fe1a041be64b75f; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1648, x18)

inst_1247:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd6be0c355a414 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x32bba587a20be and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a041be64b75f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed6be0c355a414; op2val:0x3fe32bba587a20be; op3val:0x3fe1a041be64b75f; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1664, x18)

inst_1248:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd6be0c355a414 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x32bba587a20be and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a041be64b75f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed6be0c355a414; op2val:0x3fe32bba587a20be; op3val:0x3fe1a041be64b75f; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1680, x18)

inst_1249:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd6be0c355a414 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x32bba587a20be and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a041be64b75f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed6be0c355a414; op2val:0x3fe32bba587a20be; op3val:0x3fe1a041be64b75f; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1696, x18)

inst_1250:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd6be0c355a414 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x32bba587a20be and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a041be64b75f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed6be0c355a414; op2val:0x3fe32bba587a20be; op3val:0x3fe1a041be64b75f; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1712, x18)

inst_1251:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x37d570c552e21 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb05ba8faebf5e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0753ea80e4f00 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe37d570c552e21; op2val:0x3fcb05ba8faebf5e; op3val:0x3fc0753ea80e4f00; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1728, x18)

inst_1252:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x37d570c552e21 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb05ba8faebf5e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0753ea80e4f00 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe37d570c552e21; op2val:0x3fcb05ba8faebf5e; op3val:0x3fc0753ea80e4f00; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1744, x18)

inst_1253:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x37d570c552e21 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb05ba8faebf5e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0753ea80e4f00 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe37d570c552e21; op2val:0x3fcb05ba8faebf5e; op3val:0x3fc0753ea80e4f00; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1760, x18)

inst_1254:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x37d570c552e21 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb05ba8faebf5e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0753ea80e4f00 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe37d570c552e21; op2val:0x3fcb05ba8faebf5e; op3val:0x3fc0753ea80e4f00; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1776, x18)

inst_1255:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x37d570c552e21 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb05ba8faebf5e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0753ea80e4f00 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe37d570c552e21; op2val:0x3fcb05ba8faebf5e; op3val:0x3fc0753ea80e4f00; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1792, x18)

inst_1256:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbdc71e50bea79 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xba728c93bde0e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8138a0e688d83 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febdc71e50bea79; op2val:0x3feba728c93bde0e; op3val:0x3fe8138a0e688d83; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1808, x18)

inst_1257:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbdc71e50bea79 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xba728c93bde0e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8138a0e688d83 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febdc71e50bea79; op2val:0x3feba728c93bde0e; op3val:0x3fe8138a0e688d83; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1824, x18)

inst_1258:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbdc71e50bea79 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xba728c93bde0e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8138a0e688d83 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febdc71e50bea79; op2val:0x3feba728c93bde0e; op3val:0x3fe8138a0e688d83; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1840, x18)

inst_1259:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbdc71e50bea79 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xba728c93bde0e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8138a0e688d83 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febdc71e50bea79; op2val:0x3feba728c93bde0e; op3val:0x3fe8138a0e688d83; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1856, x18)

inst_1260:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbdc71e50bea79 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xba728c93bde0e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8138a0e688d83 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febdc71e50bea79; op2val:0x3feba728c93bde0e; op3val:0x3fe8138a0e688d83; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1872, x18)

inst_1261:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe1d0b9f208e25 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xf8652970ed500 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xdaa8a9b66adc8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee1d0b9f208e25; op2val:0x3fcf8652970ed500; op3val:0x3fcdaa8a9b66adc8; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1888, x18)

inst_1262:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe1d0b9f208e25 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xf8652970ed500 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xdaa8a9b66adc8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee1d0b9f208e25; op2val:0x3fcf8652970ed500; op3val:0x3fcdaa8a9b66adc8; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1904, x18)

inst_1263:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe1d0b9f208e25 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xf8652970ed500 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xdaa8a9b66adc8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee1d0b9f208e25; op2val:0x3fcf8652970ed500; op3val:0x3fcdaa8a9b66adc8; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1920, x18)

inst_1264:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe1d0b9f208e25 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xf8652970ed500 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xdaa8a9b66adc8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee1d0b9f208e25; op2val:0x3fcf8652970ed500; op3val:0x3fcdaa8a9b66adc8; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1936, x18)

inst_1265:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe1d0b9f208e25 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xf8652970ed500 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xdaa8a9b66adc8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee1d0b9f208e25; op2val:0x3fcf8652970ed500; op3val:0x3fcdaa8a9b66adc8; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1952, x18)

inst_1266:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa9f59018e6b1c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0fadbab1717a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc40c052067558 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea9f59018e6b1c; op2val:0x3ff0fadbab1717a3; op3val:0x3fec40c052067558; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1968, x18)

inst_1267:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa9f59018e6b1c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0fadbab1717a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc40c052067558 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea9f59018e6b1c; op2val:0x3ff0fadbab1717a3; op3val:0x3fec40c052067558; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1984, x18)

inst_1268:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa9f59018e6b1c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0fadbab1717a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc40c052067558 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea9f59018e6b1c; op2val:0x3ff0fadbab1717a3; op3val:0x3fec40c052067558; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 2000, x18)

inst_1269:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa9f59018e6b1c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0fadbab1717a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc40c052067558 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea9f59018e6b1c; op2val:0x3ff0fadbab1717a3; op3val:0x3fec40c052067558; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_11)

inst_1270:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa9f59018e6b1c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0fadbab1717a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc40c052067558 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea9f59018e6b1c; op2val:0x3ff0fadbab1717a3; op3val:0x3fec40c052067558; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 0, x18)

inst_1271:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf472a1c3cc6a0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x19f963a116db3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x139cace940138 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef472a1c3cc6a0; op2val:0x3fe19f963a116db3; op3val:0x3fe139cace940138; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 16, x18)

inst_1272:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf472a1c3cc6a0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x19f963a116db3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x139cace940138 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef472a1c3cc6a0; op2val:0x3fe19f963a116db3; op3val:0x3fe139cace940138; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 32, x18)

inst_1273:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf472a1c3cc6a0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x19f963a116db3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x139cace940138 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef472a1c3cc6a0; op2val:0x3fe19f963a116db3; op3val:0x3fe139cace940138; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 48, x18)

inst_1274:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf472a1c3cc6a0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x19f963a116db3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x139cace940138 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef472a1c3cc6a0; op2val:0x3fe19f963a116db3; op3val:0x3fe139cace940138; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 64, x18)
addi x16,x16,2040

inst_1275:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf472a1c3cc6a0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x19f963a116db3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x139cace940138 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef472a1c3cc6a0; op2val:0x3fe19f963a116db3; op3val:0x3fe139cace940138; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 80, x18)

inst_1276:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a798b473abb6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1435740187afc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x534cb3d395550 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a798b473abb6; op2val:0x3fe1435740187afc; op3val:0x3fd534cb3d395550; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 96, x18)

inst_1277:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a798b473abb6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1435740187afc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x534cb3d395550 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a798b473abb6; op2val:0x3fe1435740187afc; op3val:0x3fd534cb3d395550; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 112, x18)

inst_1278:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a798b473abb6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1435740187afc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x534cb3d395550 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a798b473abb6; op2val:0x3fe1435740187afc; op3val:0x3fd534cb3d395550; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 128, x18)

inst_1279:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a798b473abb6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1435740187afc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x534cb3d395550 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a798b473abb6; op2val:0x3fe1435740187afc; op3val:0x3fd534cb3d395550; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 144, x18)

inst_1280:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a798b473abb6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1435740187afc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x534cb3d395550 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a798b473abb6; op2val:0x3fe1435740187afc; op3val:0x3fd534cb3d395550; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 160, x18)

inst_1281:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6cb2b28dea7cc and fs2 == 0 and fe2 == 0x401 and fm2 == 0x011d8d2536d5e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6e497e9222c53 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6cb2b28dea7cc; op2val:0x401011d8d2536d5e; op3val:0x3fe6e497e9222c53; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 176, x18)

inst_1282:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6cb2b28dea7cc and fs2 == 0 and fe2 == 0x401 and fm2 == 0x011d8d2536d5e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6e497e9222c53 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6cb2b28dea7cc; op2val:0x401011d8d2536d5e; op3val:0x3fe6e497e9222c53; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 192, x18)

inst_1283:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6cb2b28dea7cc and fs2 == 0 and fe2 == 0x401 and fm2 == 0x011d8d2536d5e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6e497e9222c53 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6cb2b28dea7cc; op2val:0x401011d8d2536d5e; op3val:0x3fe6e497e9222c53; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 208, x18)

inst_1284:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6cb2b28dea7cc and fs2 == 0 and fe2 == 0x401 and fm2 == 0x011d8d2536d5e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6e497e9222c53 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6cb2b28dea7cc; op2val:0x401011d8d2536d5e; op3val:0x3fe6e497e9222c53; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 224, x18)

inst_1285:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6cb2b28dea7cc and fs2 == 0 and fe2 == 0x401 and fm2 == 0x011d8d2536d5e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6e497e9222c53 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6cb2b28dea7cc; op2val:0x401011d8d2536d5e; op3val:0x3fe6e497e9222c53; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1286:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69570db605dbc and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x408f2e5bbad62 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc476ea334e200 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69570db605dbc; op2val:0x3f9408f2e5bbad62; op3val:0x3f7c476ea334e200; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 256, x18)

inst_1287:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69570db605dbc and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x408f2e5bbad62 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc476ea334e200 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69570db605dbc; op2val:0x3f9408f2e5bbad62; op3val:0x3f7c476ea334e200; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 272, x18)

inst_1288:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69570db605dbc and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x408f2e5bbad62 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc476ea334e200 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69570db605dbc; op2val:0x3f9408f2e5bbad62; op3val:0x3f7c476ea334e200; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 288, x18)

inst_1289:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69570db605dbc and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x408f2e5bbad62 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc476ea334e200 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69570db605dbc; op2val:0x3f9408f2e5bbad62; op3val:0x3f7c476ea334e200; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 304, x18)

inst_1290:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69570db605dbc and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x408f2e5bbad62 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc476ea334e200 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69570db605dbc; op2val:0x3f9408f2e5bbad62; op3val:0x3f7c476ea334e200; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 320, x18)

inst_1291:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0efefd134af8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x456a374c46f55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31ac13585ec92 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0efefd134af8; op2val:0x3fd456a374c46f55; op3val:0x3fd31ac13585ec92; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 336, x18)

inst_1292:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0efefd134af8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x456a374c46f55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31ac13585ec92 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0efefd134af8; op2val:0x3fd456a374c46f55; op3val:0x3fd31ac13585ec92; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 352, x18)

inst_1293:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0efefd134af8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x456a374c46f55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31ac13585ec92 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0efefd134af8; op2val:0x3fd456a374c46f55; op3val:0x3fd31ac13585ec92; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 368, x18)

inst_1294:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0efefd134af8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x456a374c46f55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31ac13585ec92 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0efefd134af8; op2val:0x3fd456a374c46f55; op3val:0x3fd31ac13585ec92; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 384, x18)

inst_1295:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0efefd134af8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x456a374c46f55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31ac13585ec92 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0efefd134af8; op2val:0x3fd456a374c46f55; op3val:0x3fd31ac13585ec92; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 400, x18)

inst_1296:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0d42fb9363a9b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x46f85270f7aa6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x57e87bf7ae14c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0d42fb9363a9b; op2val:0x3fe46f85270f7aa6; op3val:0x3fd57e87bf7ae14c; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 416, x18)

inst_1297:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0d42fb9363a9b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x46f85270f7aa6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x57e87bf7ae14c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0d42fb9363a9b; op2val:0x3fe46f85270f7aa6; op3val:0x3fd57e87bf7ae14c; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 432, x18)

inst_1298:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0d42fb9363a9b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x46f85270f7aa6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x57e87bf7ae14c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0d42fb9363a9b; op2val:0x3fe46f85270f7aa6; op3val:0x3fd57e87bf7ae14c; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 448, x18)

inst_1299:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0d42fb9363a9b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x46f85270f7aa6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x57e87bf7ae14c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0d42fb9363a9b; op2val:0x3fe46f85270f7aa6; op3val:0x3fd57e87bf7ae14c; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 464, x18)

inst_1300:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0d42fb9363a9b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x46f85270f7aa6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x57e87bf7ae14c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0d42fb9363a9b; op2val:0x3fe46f85270f7aa6; op3val:0x3fd57e87bf7ae14c; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 480, x18)

inst_1301:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47bef8e80a180 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x61f83f0832db7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc52c26eb950a0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47bef8e80a180; op2val:0x3fd61f83f0832db7; op3val:0x3fac52c26eb950a0; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 496, x18)

inst_1302:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47bef8e80a180 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x61f83f0832db7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc52c26eb950a0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47bef8e80a180; op2val:0x3fd61f83f0832db7; op3val:0x3fac52c26eb950a0; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 512, x18)

inst_1303:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47bef8e80a180 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x61f83f0832db7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc52c26eb950a0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47bef8e80a180; op2val:0x3fd61f83f0832db7; op3val:0x3fac52c26eb950a0; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 528, x18)

inst_1304:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47bef8e80a180 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x61f83f0832db7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc52c26eb950a0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47bef8e80a180; op2val:0x3fd61f83f0832db7; op3val:0x3fac52c26eb950a0; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 544, x18)

inst_1305:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47bef8e80a180 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x61f83f0832db7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc52c26eb950a0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47bef8e80a180; op2val:0x3fd61f83f0832db7; op3val:0x3fac52c26eb950a0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 560, x18)

inst_1306:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xae2ff399ff71a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b5f84870fbe0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x166c413b99635 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdae2ff399ff71a; op2val:0x3ff4b5f84870fbe0; op3val:0x3fe166c413b99635; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 576, x18)

inst_1307:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xae2ff399ff71a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b5f84870fbe0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x166c413b99635 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdae2ff399ff71a; op2val:0x3ff4b5f84870fbe0; op3val:0x3fe166c413b99635; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 592, x18)

inst_1308:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xae2ff399ff71a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b5f84870fbe0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x166c413b99635 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdae2ff399ff71a; op2val:0x3ff4b5f84870fbe0; op3val:0x3fe166c413b99635; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 608, x18)

inst_1309:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xae2ff399ff71a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b5f84870fbe0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x166c413b99635 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdae2ff399ff71a; op2val:0x3ff4b5f84870fbe0; op3val:0x3fe166c413b99635; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 624, x18)

inst_1310:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xae2ff399ff71a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b5f84870fbe0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x166c413b99635 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdae2ff399ff71a; op2val:0x3ff4b5f84870fbe0; op3val:0x3fe166c413b99635; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 640, x18)

inst_1311:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38047dd32d5ae and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x54cb18adbde28 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9f5d80c06cf5e and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38047dd32d5ae; op2val:0x3ff54cb18adbde28; op3val:0x3fd9f5d80c06cf5e; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 656, x18)

inst_1312:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38047dd32d5ae and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x54cb18adbde28 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9f5d80c06cf5e and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38047dd32d5ae; op2val:0x3ff54cb18adbde28; op3val:0x3fd9f5d80c06cf5e; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 672, x18)

inst_1313:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38047dd32d5ae and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x54cb18adbde28 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9f5d80c06cf5e and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38047dd32d5ae; op2val:0x3ff54cb18adbde28; op3val:0x3fd9f5d80c06cf5e; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 688, x18)

inst_1314:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38047dd32d5ae and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x54cb18adbde28 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9f5d80c06cf5e and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38047dd32d5ae; op2val:0x3ff54cb18adbde28; op3val:0x3fd9f5d80c06cf5e; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 704, x18)

inst_1315:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38047dd32d5ae and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x54cb18adbde28 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9f5d80c06cf5e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38047dd32d5ae; op2val:0x3ff54cb18adbde28; op3val:0x3fd9f5d80c06cf5e; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 720, x18)

inst_1316:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xfe0afa5d00ca8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x60b5a20756fab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f5c7c6a3b6f7 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbfe0afa5d00ca8; op2val:0x40160b5a20756fab; op3val:0x3fe5f5c7c6a3b6f7; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 736, x18)

inst_1317:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xfe0afa5d00ca8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x60b5a20756fab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f5c7c6a3b6f7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbfe0afa5d00ca8; op2val:0x40160b5a20756fab; op3val:0x3fe5f5c7c6a3b6f7; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 752, x18)

inst_1318:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xfe0afa5d00ca8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x60b5a20756fab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f5c7c6a3b6f7 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbfe0afa5d00ca8; op2val:0x40160b5a20756fab; op3val:0x3fe5f5c7c6a3b6f7; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 768, x18)

inst_1319:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xfe0afa5d00ca8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x60b5a20756fab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f5c7c6a3b6f7 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbfe0afa5d00ca8; op2val:0x40160b5a20756fab; op3val:0x3fe5f5c7c6a3b6f7; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 784, x18)

inst_1320:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xfe0afa5d00ca8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x60b5a20756fab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f5c7c6a3b6f7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbfe0afa5d00ca8; op2val:0x40160b5a20756fab; op3val:0x3fe5f5c7c6a3b6f7; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 800, x18)

inst_1321:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe228ab7121f2c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd048077389d7c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb538b01afef66 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce228ab7121f2c; op2val:0x3ffd048077389d7c; op3val:0x3fdb538b01afef66; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 816, x18)

inst_1322:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe228ab7121f2c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd048077389d7c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb538b01afef66 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce228ab7121f2c; op2val:0x3ffd048077389d7c; op3val:0x3fdb538b01afef66; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 832, x18)

inst_1323:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe228ab7121f2c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd048077389d7c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb538b01afef66 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce228ab7121f2c; op2val:0x3ffd048077389d7c; op3val:0x3fdb538b01afef66; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 848, x18)

inst_1324:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe228ab7121f2c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd048077389d7c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb538b01afef66 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce228ab7121f2c; op2val:0x3ffd048077389d7c; op3val:0x3fdb538b01afef66; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 864, x18)

inst_1325:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe228ab7121f2c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd048077389d7c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb538b01afef66 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce228ab7121f2c; op2val:0x3ffd048077389d7c; op3val:0x3fdb538b01afef66; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 880, x18)

inst_1326:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xebed06c26e479 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x619c6ff8d2bf3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x53bf38f610884 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feebed06c26e479; op2val:0x3fd619c6ff8d2bf3; op3val:0x3fd53bf38f610884; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 896, x18)

inst_1327:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xebed06c26e479 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x619c6ff8d2bf3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x53bf38f610884 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feebed06c26e479; op2val:0x3fd619c6ff8d2bf3; op3val:0x3fd53bf38f610884; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 912, x18)

inst_1328:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xebed06c26e479 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x619c6ff8d2bf3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x53bf38f610884 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feebed06c26e479; op2val:0x3fd619c6ff8d2bf3; op3val:0x3fd53bf38f610884; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 928, x18)

inst_1329:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xebed06c26e479 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x619c6ff8d2bf3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x53bf38f610884 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feebed06c26e479; op2val:0x3fd619c6ff8d2bf3; op3val:0x3fd53bf38f610884; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 944, x18)

inst_1330:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xebed06c26e479 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x619c6ff8d2bf3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x53bf38f610884 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feebed06c26e479; op2val:0x3fd619c6ff8d2bf3; op3val:0x3fd53bf38f610884; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 960, x18)

inst_1331:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb22f1544454d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x348b82173f45d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x05a6a0e502e4f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb22f1544454d1; op2val:0x3fe348b82173f45d; op3val:0x3fe05a6a0e502e4f; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 976, x18)

inst_1332:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb22f1544454d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x348b82173f45d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x05a6a0e502e4f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb22f1544454d1; op2val:0x3fe348b82173f45d; op3val:0x3fe05a6a0e502e4f; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 992, x18)

inst_1333:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb22f1544454d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x348b82173f45d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x05a6a0e502e4f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb22f1544454d1; op2val:0x3fe348b82173f45d; op3val:0x3fe05a6a0e502e4f; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1008, x18)

inst_1334:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb22f1544454d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x348b82173f45d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x05a6a0e502e4f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb22f1544454d1; op2val:0x3fe348b82173f45d; op3val:0x3fe05a6a0e502e4f; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1024, x18)

inst_1335:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb22f1544454d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x348b82173f45d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x05a6a0e502e4f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb22f1544454d1; op2val:0x3fe348b82173f45d; op3val:0x3fe05a6a0e502e4f; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1040, x18)

inst_1336:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x29ebce357142d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xab637d0aa9c07 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf16018a86f080 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe29ebce357142d; op2val:0x3fdab637d0aa9c07; op3val:0x3fcf16018a86f080; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1056, x18)

inst_1337:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x29ebce357142d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xab637d0aa9c07 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf16018a86f080 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe29ebce357142d; op2val:0x3fdab637d0aa9c07; op3val:0x3fcf16018a86f080; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1072, x18)

inst_1338:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x29ebce357142d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xab637d0aa9c07 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf16018a86f080 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe29ebce357142d; op2val:0x3fdab637d0aa9c07; op3val:0x3fcf16018a86f080; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1088, x18)

inst_1339:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x29ebce357142d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xab637d0aa9c07 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf16018a86f080 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe29ebce357142d; op2val:0x3fdab637d0aa9c07; op3val:0x3fcf16018a86f080; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1104, x18)

inst_1340:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x29ebce357142d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xab637d0aa9c07 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf16018a86f080 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe29ebce357142d; op2val:0x3fdab637d0aa9c07; op3val:0x3fcf16018a86f080; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1120, x18)

inst_1341:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x44d0b76a15aa0 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x63e28d4a48123 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc38ce1df3c7e2 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f944d0b76a15aa0; op2val:0x40463e28d4a48123; op3val:0x3fec38ce1df3c7e2; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1136, x18)

inst_1342:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x44d0b76a15aa0 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x63e28d4a48123 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc38ce1df3c7e2 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f944d0b76a15aa0; op2val:0x40463e28d4a48123; op3val:0x3fec38ce1df3c7e2; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1152, x18)

inst_1343:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x44d0b76a15aa0 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x63e28d4a48123 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc38ce1df3c7e2 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f944d0b76a15aa0; op2val:0x40463e28d4a48123; op3val:0x3fec38ce1df3c7e2; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1168, x18)

inst_1344:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x44d0b76a15aa0 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x63e28d4a48123 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc38ce1df3c7e2 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f944d0b76a15aa0; op2val:0x40463e28d4a48123; op3val:0x3fec38ce1df3c7e2; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1184, x18)

inst_1345:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x44d0b76a15aa0 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x63e28d4a48123 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc38ce1df3c7e2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f944d0b76a15aa0; op2val:0x40463e28d4a48123; op3val:0x3fec38ce1df3c7e2; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1200, x18)

inst_1346:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x150c4b468c9a0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50e0cd673b6ef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6c936bd906d0d and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd150c4b468c9a0; op2val:0x40050e0cd673b6ef; op3val:0x3fe6c936bd906d0d; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1216, x18)

inst_1347:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x150c4b468c9a0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50e0cd673b6ef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6c936bd906d0d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd150c4b468c9a0; op2val:0x40050e0cd673b6ef; op3val:0x3fe6c936bd906d0d; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1232, x18)

inst_1348:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x150c4b468c9a0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50e0cd673b6ef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6c936bd906d0d and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd150c4b468c9a0; op2val:0x40050e0cd673b6ef; op3val:0x3fe6c936bd906d0d; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1248, x18)

inst_1349:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x150c4b468c9a0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50e0cd673b6ef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6c936bd906d0d and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd150c4b468c9a0; op2val:0x40050e0cd673b6ef; op3val:0x3fe6c936bd906d0d; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1264, x18)

inst_1350:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x150c4b468c9a0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50e0cd673b6ef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6c936bd906d0d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd150c4b468c9a0; op2val:0x40050e0cd673b6ef; op3val:0x3fe6c936bd906d0d; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1280, x18)

inst_1351:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe632e340a0070 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0d49e6a070e30 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xff6fd35023f48 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde632e340a0070; op2val:0x3fd0d49e6a070e30; op3val:0x3fbff6fd35023f48; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1296, x18)

inst_1352:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe632e340a0070 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0d49e6a070e30 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xff6fd35023f48 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde632e340a0070; op2val:0x3fd0d49e6a070e30; op3val:0x3fbff6fd35023f48; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1312, x18)

inst_1353:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe632e340a0070 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0d49e6a070e30 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xff6fd35023f48 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde632e340a0070; op2val:0x3fd0d49e6a070e30; op3val:0x3fbff6fd35023f48; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1328, x18)

inst_1354:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe632e340a0070 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0d49e6a070e30 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xff6fd35023f48 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde632e340a0070; op2val:0x3fd0d49e6a070e30; op3val:0x3fbff6fd35023f48; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1344, x18)

inst_1355:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe632e340a0070 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0d49e6a070e30 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xff6fd35023f48 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde632e340a0070; op2val:0x3fd0d49e6a070e30; op3val:0x3fbff6fd35023f48; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1360, x18)

inst_1356:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8305c83ac2e34 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2041fdc06c830 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb3ca4559916fe and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8305c83ac2e34; op2val:0x3fe2041fdc06c830; op3val:0x3fdb3ca4559916fe; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1376, x18)

inst_1357:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8305c83ac2e34 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2041fdc06c830 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb3ca4559916fe and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8305c83ac2e34; op2val:0x3fe2041fdc06c830; op3val:0x3fdb3ca4559916fe; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1392, x18)

inst_1358:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8305c83ac2e34 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2041fdc06c830 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb3ca4559916fe and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8305c83ac2e34; op2val:0x3fe2041fdc06c830; op3val:0x3fdb3ca4559916fe; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1408, x18)

inst_1359:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8305c83ac2e34 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2041fdc06c830 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb3ca4559916fe and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8305c83ac2e34; op2val:0x3fe2041fdc06c830; op3val:0x3fdb3ca4559916fe; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1424, x18)
addi x16,x16,2040

inst_1360:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8305c83ac2e34 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2041fdc06c830 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb3ca4559916fe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8305c83ac2e34; op2val:0x3fe2041fdc06c830; op3val:0x3fdb3ca4559916fe; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1440, x18)

inst_1361:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa51c5ed1face8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x76c169f67e93c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x343acd9c2e8b0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca51c5ed1face8; op2val:0x3ff76c169f67e93c; op3val:0x3fd343acd9c2e8b0; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1456, x18)

inst_1362:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa51c5ed1face8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x76c169f67e93c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x343acd9c2e8b0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca51c5ed1face8; op2val:0x3ff76c169f67e93c; op3val:0x3fd343acd9c2e8b0; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1472, x18)

inst_1363:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa51c5ed1face8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x76c169f67e93c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x343acd9c2e8b0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca51c5ed1face8; op2val:0x3ff76c169f67e93c; op3val:0x3fd343acd9c2e8b0; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1488, x18)

inst_1364:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa51c5ed1face8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x76c169f67e93c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x343acd9c2e8b0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca51c5ed1face8; op2val:0x3ff76c169f67e93c; op3val:0x3fd343acd9c2e8b0; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1504, x18)

inst_1365:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa51c5ed1face8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x76c169f67e93c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x343acd9c2e8b0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca51c5ed1face8; op2val:0x3ff76c169f67e93c; op3val:0x3fd343acd9c2e8b0; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1520, x18)

inst_1366:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17f837a8dbd5b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x47d31d440b7c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6684f0b019c77 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17f837a8dbd5b; op2val:0x3ff47d31d440b7c2; op3val:0x3fe6684f0b019c77; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1536, x18)

inst_1367:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17f837a8dbd5b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x47d31d440b7c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6684f0b019c77 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17f837a8dbd5b; op2val:0x3ff47d31d440b7c2; op3val:0x3fe6684f0b019c77; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1552, x18)

inst_1368:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17f837a8dbd5b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x47d31d440b7c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6684f0b019c77 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17f837a8dbd5b; op2val:0x3ff47d31d440b7c2; op3val:0x3fe6684f0b019c77; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1568, x18)

inst_1369:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17f837a8dbd5b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x47d31d440b7c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6684f0b019c77 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17f837a8dbd5b; op2val:0x3ff47d31d440b7c2; op3val:0x3fe6684f0b019c77; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1584, x18)

inst_1370:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17f837a8dbd5b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x47d31d440b7c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6684f0b019c77 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17f837a8dbd5b; op2val:0x3ff47d31d440b7c2; op3val:0x3fe6684f0b019c77; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1600, x18)

inst_1371:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5f281a2233944 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3562774c741c4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa8627889ccac4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5f281a2233944; op2val:0x3fe3562774c741c4; op3val:0x3fda8627889ccac4; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1616, x18)

inst_1372:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5f281a2233944 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3562774c741c4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa8627889ccac4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5f281a2233944; op2val:0x3fe3562774c741c4; op3val:0x3fda8627889ccac4; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1632, x18)

inst_1373:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5f281a2233944 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3562774c741c4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa8627889ccac4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5f281a2233944; op2val:0x3fe3562774c741c4; op3val:0x3fda8627889ccac4; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1648, x18)

inst_1374:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5f281a2233944 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3562774c741c4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa8627889ccac4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5f281a2233944; op2val:0x3fe3562774c741c4; op3val:0x3fda8627889ccac4; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1664, x18)

inst_1375:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5f281a2233944 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3562774c741c4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa8627889ccac4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5f281a2233944; op2val:0x3fe3562774c741c4; op3val:0x3fda8627889ccac4; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1680, x18)

inst_1376:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x47453abbf0976 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca7fce439c398 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x25129f0e41e24 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd47453abbf0976; op2val:0x3ffca7fce439c398; op3val:0x3fe25129f0e41e24; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1696, x18)

inst_1377:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x47453abbf0976 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca7fce439c398 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x25129f0e41e24 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd47453abbf0976; op2val:0x3ffca7fce439c398; op3val:0x3fe25129f0e41e24; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1712, x18)

inst_1378:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x47453abbf0976 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca7fce439c398 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x25129f0e41e24 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd47453abbf0976; op2val:0x3ffca7fce439c398; op3val:0x3fe25129f0e41e24; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1728, x18)

inst_1379:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x47453abbf0976 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca7fce439c398 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x25129f0e41e24 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd47453abbf0976; op2val:0x3ffca7fce439c398; op3val:0x3fe25129f0e41e24; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1744, x18)

inst_1380:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x47453abbf0976 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca7fce439c398 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x25129f0e41e24 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd47453abbf0976; op2val:0x3ffca7fce439c398; op3val:0x3fe25129f0e41e24; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1760, x18)

inst_1381:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe17bf4986225a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb050cef74e110 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x968c94603abec and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee17bf4986225a; op2val:0x3feb050cef74e110; op3val:0x3fe968c94603abec; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1776, x18)

inst_1382:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe17bf4986225a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb050cef74e110 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x968c94603abec and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee17bf4986225a; op2val:0x3feb050cef74e110; op3val:0x3fe968c94603abec; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1792, x18)

inst_1383:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe17bf4986225a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb050cef74e110 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x968c94603abec and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee17bf4986225a; op2val:0x3feb050cef74e110; op3val:0x3fe968c94603abec; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1808, x18)

inst_1384:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe17bf4986225a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb050cef74e110 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x968c94603abec and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee17bf4986225a; op2val:0x3feb050cef74e110; op3val:0x3fe968c94603abec; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1824, x18)

inst_1385:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe17bf4986225a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb050cef74e110 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x968c94603abec and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee17bf4986225a; op2val:0x3feb050cef74e110; op3val:0x3fe968c94603abec; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1840, x18)

inst_1386:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf1c1324d98e0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x09414340f789b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdfda1f9be163d and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf1c1324d98e0; op2val:0x40009414340f789b; op3val:0x3fedfda1f9be163d; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1856, x18)

inst_1387:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf1c1324d98e0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x09414340f789b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdfda1f9be163d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf1c1324d98e0; op2val:0x40009414340f789b; op3val:0x3fedfda1f9be163d; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1872, x18)

inst_1388:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf1c1324d98e0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x09414340f789b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdfda1f9be163d and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf1c1324d98e0; op2val:0x40009414340f789b; op3val:0x3fedfda1f9be163d; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1888, x18)

inst_1389:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf1c1324d98e0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x09414340f789b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdfda1f9be163d and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf1c1324d98e0; op2val:0x40009414340f789b; op3val:0x3fedfda1f9be163d; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1904, x18)

inst_1390:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf1c1324d98e0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x09414340f789b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdfda1f9be163d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf1c1324d98e0; op2val:0x40009414340f789b; op3val:0x3fedfda1f9be163d; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1920, x18)

inst_1391:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x71c0aae7f3d7a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbcf3c03be4fa7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41551bf9c3b29 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd71c0aae7f3d7a; op2val:0x3ffbcf3c03be4fa7; op3val:0x3fe41551bf9c3b29; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1936, x18)

inst_1392:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x71c0aae7f3d7a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbcf3c03be4fa7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41551bf9c3b29 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd71c0aae7f3d7a; op2val:0x3ffbcf3c03be4fa7; op3val:0x3fe41551bf9c3b29; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1952, x18)

inst_1393:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x71c0aae7f3d7a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbcf3c03be4fa7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41551bf9c3b29 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd71c0aae7f3d7a; op2val:0x3ffbcf3c03be4fa7; op3val:0x3fe41551bf9c3b29; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1968, x18)

inst_1394:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x71c0aae7f3d7a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbcf3c03be4fa7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41551bf9c3b29 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd71c0aae7f3d7a; op2val:0x3ffbcf3c03be4fa7; op3val:0x3fe41551bf9c3b29; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1984, x18)

inst_1395:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x71c0aae7f3d7a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbcf3c03be4fa7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41551bf9c3b29 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd71c0aae7f3d7a; op2val:0x3ffbcf3c03be4fa7; op3val:0x3fe41551bf9c3b29; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 2000, x18)

inst_1396:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa377d4f967891 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0579f54dab2b4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac7101b6e2c66 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea377d4f967891; op2val:0x3fe0579f54dab2b4; op3val:0x3fdac7101b6e2c66; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_12)

inst_1397:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa377d4f967891 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0579f54dab2b4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac7101b6e2c66 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea377d4f967891; op2val:0x3fe0579f54dab2b4; op3val:0x3fdac7101b6e2c66; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 0, x18)

inst_1398:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa377d4f967891 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0579f54dab2b4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac7101b6e2c66 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea377d4f967891; op2val:0x3fe0579f54dab2b4; op3val:0x3fdac7101b6e2c66; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 16, x18)

inst_1399:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa377d4f967891 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0579f54dab2b4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac7101b6e2c66 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea377d4f967891; op2val:0x3fe0579f54dab2b4; op3val:0x3fdac7101b6e2c66; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 32, x18)

inst_1400:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa377d4f967891 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0579f54dab2b4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac7101b6e2c66 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea377d4f967891; op2val:0x3fe0579f54dab2b4; op3val:0x3fdac7101b6e2c66; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 48, x18)

inst_1401:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x620eab9c24beb and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1047b1ce9f688 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7892be5168458 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe620eab9c24beb; op2val:0x3fd1047b1ce9f688; op3val:0x3fc7892be5168458; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 64, x18)

inst_1402:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x620eab9c24beb and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1047b1ce9f688 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7892be5168458 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe620eab9c24beb; op2val:0x3fd1047b1ce9f688; op3val:0x3fc7892be5168458; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 80, x18)

inst_1403:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x620eab9c24beb and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1047b1ce9f688 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7892be5168458 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe620eab9c24beb; op2val:0x3fd1047b1ce9f688; op3val:0x3fc7892be5168458; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 96, x18)

inst_1404:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x620eab9c24beb and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1047b1ce9f688 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7892be5168458 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe620eab9c24beb; op2val:0x3fd1047b1ce9f688; op3val:0x3fc7892be5168458; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 112, x18)

inst_1405:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x620eab9c24beb and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1047b1ce9f688 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7892be5168458 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe620eab9c24beb; op2val:0x3fd1047b1ce9f688; op3val:0x3fc7892be5168458; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 128, x18)

inst_1406:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb624329d65671 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07ea9e800cb7e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc3b0bc5b76267 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb624329d65671; op2val:0x3ff07ea9e800cb7e; op3val:0x3fec3b0bc5b76267; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 144, x18)

inst_1407:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb624329d65671 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07ea9e800cb7e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc3b0bc5b76267 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb624329d65671; op2val:0x3ff07ea9e800cb7e; op3val:0x3fec3b0bc5b76267; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 160, x18)

inst_1408:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb624329d65671 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07ea9e800cb7e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc3b0bc5b76267 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb624329d65671; op2val:0x3ff07ea9e800cb7e; op3val:0x3fec3b0bc5b76267; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 176, x18)

inst_1409:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb624329d65671 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07ea9e800cb7e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc3b0bc5b76267 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb624329d65671; op2val:0x3ff07ea9e800cb7e; op3val:0x3fec3b0bc5b76267; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 192, x18)

inst_1410:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb624329d65671 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07ea9e800cb7e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc3b0bc5b76267 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb624329d65671; op2val:0x3ff07ea9e800cb7e; op3val:0x3fec3b0bc5b76267; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 208, x18)

inst_1411:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x21db49dde8418 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x413c610b0f2bf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bb854e52cd37 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc21db49dde8418; op2val:0x401413c610b0f2bf; op3val:0x3fe6bb854e52cd37; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 224, x18)

inst_1412:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x21db49dde8418 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x413c610b0f2bf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bb854e52cd37 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc21db49dde8418; op2val:0x401413c610b0f2bf; op3val:0x3fe6bb854e52cd37; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 240, x18)

inst_1413:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x21db49dde8418 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x413c610b0f2bf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bb854e52cd37 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc21db49dde8418; op2val:0x401413c610b0f2bf; op3val:0x3fe6bb854e52cd37; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 256, x18)

inst_1414:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x21db49dde8418 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x413c610b0f2bf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bb854e52cd37 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc21db49dde8418; op2val:0x401413c610b0f2bf; op3val:0x3fe6bb854e52cd37; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 272, x18)

inst_1415:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x21db49dde8418 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x413c610b0f2bf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bb854e52cd37 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc21db49dde8418; op2val:0x401413c610b0f2bf; op3val:0x3fe6bb854e52cd37; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 288, x18)

inst_1416:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x85094e3b39740 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x41385bc87f592 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe826509c5f9a4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f985094e3b39740; op2val:0x40441385bc87f592; op3val:0x3fee826509c5f9a4; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 304, x18)

inst_1417:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x85094e3b39740 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x41385bc87f592 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe826509c5f9a4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f985094e3b39740; op2val:0x40441385bc87f592; op3val:0x3fee826509c5f9a4; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 320, x18)

inst_1418:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x85094e3b39740 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x41385bc87f592 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe826509c5f9a4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f985094e3b39740; op2val:0x40441385bc87f592; op3val:0x3fee826509c5f9a4; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 336, x18)

inst_1419:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x85094e3b39740 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x41385bc87f592 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe826509c5f9a4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f985094e3b39740; op2val:0x40441385bc87f592; op3val:0x3fee826509c5f9a4; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 352, x18)

inst_1420:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x85094e3b39740 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x41385bc87f592 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe826509c5f9a4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f985094e3b39740; op2val:0x40441385bc87f592; op3val:0x3fee826509c5f9a4; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 368, x18)

inst_1421:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb10becb50cfaa and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6d37eb3c20d9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x34e64bfcd3876 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb10becb50cfaa; op2val:0x3ff6d37eb3c20d9d; op3val:0x3fe34e64bfcd3876; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 384, x18)

inst_1422:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb10becb50cfaa and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6d37eb3c20d9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x34e64bfcd3876 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb10becb50cfaa; op2val:0x3ff6d37eb3c20d9d; op3val:0x3fe34e64bfcd3876; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 400, x18)

inst_1423:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb10becb50cfaa and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6d37eb3c20d9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x34e64bfcd3876 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb10becb50cfaa; op2val:0x3ff6d37eb3c20d9d; op3val:0x3fe34e64bfcd3876; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 416, x18)

inst_1424:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb10becb50cfaa and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6d37eb3c20d9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x34e64bfcd3876 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb10becb50cfaa; op2val:0x3ff6d37eb3c20d9d; op3val:0x3fe34e64bfcd3876; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 432, x18)

inst_1425:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb10becb50cfaa and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6d37eb3c20d9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x34e64bfcd3876 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb10becb50cfaa; op2val:0x3ff6d37eb3c20d9d; op3val:0x3fe34e64bfcd3876; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 448, x18)

inst_1426:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7d822535605ba and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1f71aa2a4024b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xac5e4bc0a73d0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7d822535605ba; op2val:0x3fc1f71aa2a4024b; op3val:0x3faac5e4bc0a73d0; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 464, x18)

inst_1427:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7d822535605ba and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1f71aa2a4024b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xac5e4bc0a73d0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7d822535605ba; op2val:0x3fc1f71aa2a4024b; op3val:0x3faac5e4bc0a73d0; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 480, x18)

inst_1428:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7d822535605ba and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1f71aa2a4024b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xac5e4bc0a73d0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7d822535605ba; op2val:0x3fc1f71aa2a4024b; op3val:0x3faac5e4bc0a73d0; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 496, x18)

inst_1429:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7d822535605ba and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1f71aa2a4024b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xac5e4bc0a73d0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7d822535605ba; op2val:0x3fc1f71aa2a4024b; op3val:0x3faac5e4bc0a73d0; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 512, x18)

inst_1430:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7d822535605ba and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1f71aa2a4024b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xac5e4bc0a73d0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7d822535605ba; op2val:0x3fc1f71aa2a4024b; op3val:0x3faac5e4bc0a73d0; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 528, x18)

inst_1431:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc09d07835cfbf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc5e50b5e5cccb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8db39f57a3d34 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec09d07835cfbf; op2val:0x3fec5e50b5e5cccb; op3val:0x3fe8db39f57a3d34; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 544, x18)

inst_1432:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc09d07835cfbf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc5e50b5e5cccb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8db39f57a3d34 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec09d07835cfbf; op2val:0x3fec5e50b5e5cccb; op3val:0x3fe8db39f57a3d34; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 560, x18)

inst_1433:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc09d07835cfbf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc5e50b5e5cccb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8db39f57a3d34 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec09d07835cfbf; op2val:0x3fec5e50b5e5cccb; op3val:0x3fe8db39f57a3d34; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 576, x18)

inst_1434:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc09d07835cfbf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc5e50b5e5cccb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8db39f57a3d34 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec09d07835cfbf; op2val:0x3fec5e50b5e5cccb; op3val:0x3fe8db39f57a3d34; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 592, x18)

inst_1435:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc09d07835cfbf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc5e50b5e5cccb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8db39f57a3d34 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec09d07835cfbf; op2val:0x3fec5e50b5e5cccb; op3val:0x3fe8db39f57a3d34; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 608, x18)

inst_1436:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x26a56bbc3788a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x34189d86e22a7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x629b5a6f3e6d4 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe26a56bbc3788a; op2val:0x3fd34189d86e22a7; op3val:0x3fc629b5a6f3e6d4; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 624, x18)

inst_1437:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x26a56bbc3788a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x34189d86e22a7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x629b5a6f3e6d4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe26a56bbc3788a; op2val:0x3fd34189d86e22a7; op3val:0x3fc629b5a6f3e6d4; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 640, x18)

inst_1438:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x26a56bbc3788a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x34189d86e22a7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x629b5a6f3e6d4 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe26a56bbc3788a; op2val:0x3fd34189d86e22a7; op3val:0x3fc629b5a6f3e6d4; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 656, x18)

inst_1439:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x26a56bbc3788a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x34189d86e22a7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x629b5a6f3e6d4 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe26a56bbc3788a; op2val:0x3fd34189d86e22a7; op3val:0x3fc629b5a6f3e6d4; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 672, x18)

inst_1440:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x26a56bbc3788a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x34189d86e22a7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x629b5a6f3e6d4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe26a56bbc3788a; op2val:0x3fd34189d86e22a7; op3val:0x3fc629b5a6f3e6d4; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 688, x18)

inst_1441:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdc3be8f098fa4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf484d66a17113 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd18e105cbba45 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedc3be8f098fa4; op2val:0x3fef484d66a17113; op3val:0x3fed18e105cbba45; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 704, x18)

inst_1442:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdc3be8f098fa4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf484d66a17113 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd18e105cbba45 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedc3be8f098fa4; op2val:0x3fef484d66a17113; op3val:0x3fed18e105cbba45; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 720, x18)

inst_1443:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdc3be8f098fa4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf484d66a17113 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd18e105cbba45 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedc3be8f098fa4; op2val:0x3fef484d66a17113; op3val:0x3fed18e105cbba45; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 736, x18)

inst_1444:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdc3be8f098fa4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf484d66a17113 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd18e105cbba45 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedc3be8f098fa4; op2val:0x3fef484d66a17113; op3val:0x3fed18e105cbba45; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 752, x18)
addi x16,x16,2040

inst_1445:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdc3be8f098fa4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf484d66a17113 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd18e105cbba45 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedc3be8f098fa4; op2val:0x3fef484d66a17113; op3val:0x3fed18e105cbba45; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 768, x18)

inst_1446:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeccd5e7a7fd73 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2d450c216da9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x21f931653caae and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeccd5e7a7fd73; op2val:0x3fe2d450c216da9d; op3val:0x3fe21f931653caae; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 784, x18)

inst_1447:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeccd5e7a7fd73 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2d450c216da9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x21f931653caae and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeccd5e7a7fd73; op2val:0x3fe2d450c216da9d; op3val:0x3fe21f931653caae; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 800, x18)

inst_1448:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeccd5e7a7fd73 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2d450c216da9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x21f931653caae and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeccd5e7a7fd73; op2val:0x3fe2d450c216da9d; op3val:0x3fe21f931653caae; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 816, x18)

inst_1449:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeccd5e7a7fd73 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2d450c216da9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x21f931653caae and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeccd5e7a7fd73; op2val:0x3fe2d450c216da9d; op3val:0x3fe21f931653caae; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 832, x18)

inst_1450:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeccd5e7a7fd73 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2d450c216da9d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x21f931653caae and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeccd5e7a7fd73; op2val:0x3fe2d450c216da9d; op3val:0x3fe21f931653caae; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 848, x18)

inst_1451:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe24df705c768a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0bb86c2177a06 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf862c46484c52 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee24df705c768a; op2val:0x3fe0bb86c2177a06; op3val:0x3fdf862c46484c52; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 864, x18)

inst_1452:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe24df705c768a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0bb86c2177a06 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf862c46484c52 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee24df705c768a; op2val:0x3fe0bb86c2177a06; op3val:0x3fdf862c46484c52; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 880, x18)

inst_1453:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe24df705c768a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0bb86c2177a06 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf862c46484c52 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee24df705c768a; op2val:0x3fe0bb86c2177a06; op3val:0x3fdf862c46484c52; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 896, x18)

inst_1454:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe24df705c768a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0bb86c2177a06 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf862c46484c52 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee24df705c768a; op2val:0x3fe0bb86c2177a06; op3val:0x3fdf862c46484c52; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 912, x18)

inst_1455:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe24df705c768a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0bb86c2177a06 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf862c46484c52 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee24df705c768a; op2val:0x3fe0bb86c2177a06; op3val:0x3fdf862c46484c52; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 928, x18)

inst_1456:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdb41bf73f38c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5de031eb83486 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44c46c1ab399f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddb41bf73f38c0; op2val:0x3ff5de031eb83486; op3val:0x3fe44c46c1ab399f; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 944, x18)

inst_1457:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdb41bf73f38c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5de031eb83486 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44c46c1ab399f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddb41bf73f38c0; op2val:0x3ff5de031eb83486; op3val:0x3fe44c46c1ab399f; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 960, x18)

inst_1458:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdb41bf73f38c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5de031eb83486 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44c46c1ab399f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddb41bf73f38c0; op2val:0x3ff5de031eb83486; op3val:0x3fe44c46c1ab399f; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 976, x18)

inst_1459:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdb41bf73f38c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5de031eb83486 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44c46c1ab399f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddb41bf73f38c0; op2val:0x3ff5de031eb83486; op3val:0x3fe44c46c1ab399f; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 992, x18)

inst_1460:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdb41bf73f38c0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5de031eb83486 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44c46c1ab399f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddb41bf73f38c0; op2val:0x3ff5de031eb83486; op3val:0x3fe44c46c1ab399f; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1008, x18)

inst_1461:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x65716ef9d1c02 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5421a51b61623 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdae9a18b703e0 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd65716ef9d1c02; op2val:0x4005421a51b61623; op3val:0x3fedae9a18b703e0; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1024, x18)

inst_1462:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x65716ef9d1c02 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5421a51b61623 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdae9a18b703e0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd65716ef9d1c02; op2val:0x4005421a51b61623; op3val:0x3fedae9a18b703e0; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1040, x18)

inst_1463:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x65716ef9d1c02 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5421a51b61623 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdae9a18b703e0 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd65716ef9d1c02; op2val:0x4005421a51b61623; op3val:0x3fedae9a18b703e0; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1056, x18)

inst_1464:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x65716ef9d1c02 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5421a51b61623 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdae9a18b703e0 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd65716ef9d1c02; op2val:0x4005421a51b61623; op3val:0x3fedae9a18b703e0; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1072, x18)

inst_1465:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x65716ef9d1c02 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5421a51b61623 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdae9a18b703e0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd65716ef9d1c02; op2val:0x4005421a51b61623; op3val:0x3fedae9a18b703e0; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1088, x18)

inst_1466:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5a329783562c9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x417e0c661f3f1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2c3e5a6bb364 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5a329783562c9; op2val:0x3ff417e0c661f3f1; op3val:0x3feb2c3e5a6bb364; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1104, x18)

inst_1467:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5a329783562c9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x417e0c661f3f1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2c3e5a6bb364 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5a329783562c9; op2val:0x3ff417e0c661f3f1; op3val:0x3feb2c3e5a6bb364; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1120, x18)

inst_1468:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5a329783562c9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x417e0c661f3f1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2c3e5a6bb364 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5a329783562c9; op2val:0x3ff417e0c661f3f1; op3val:0x3feb2c3e5a6bb364; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1136, x18)

inst_1469:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5a329783562c9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x417e0c661f3f1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2c3e5a6bb364 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5a329783562c9; op2val:0x3ff417e0c661f3f1; op3val:0x3feb2c3e5a6bb364; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1152, x18)

inst_1470:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d761a60ec568 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x551524634d31f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ec7fc5a3584 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d761a60ec568; op2val:0x3ff551524634d31f; op3val:0x3fee6ec7fc5a3584; valaddr_reg:x16; val_offset:600; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 600, x17, x15, 1168, x18)

inst_1471:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d761a60ec568 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x551524634d31f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ec7fc5a3584 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d761a60ec568; op2val:0x3ff551524634d31f; op3val:0x3fee6ec7fc5a3584; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1184, x18)

inst_1472:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d761a60ec568 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x551524634d31f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6ec7fc5a3584 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d761a60ec568; op2val:0x3ff551524634d31f; op3val:0x3fee6ec7fc5a3584; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1200, x18)

inst_1473:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfa8931dc8682c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ff7eeafae67b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c0aa090b4eae and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfa8931dc8682c; op2val:0x3ff6ff7eeafae67b; op3val:0x3fd6c0aa090b4eae; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1216, x18)

inst_1474:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfa8931dc8682c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ff7eeafae67b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c0aa090b4eae and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfa8931dc8682c; op2val:0x3ff6ff7eeafae67b; op3val:0x3fd6c0aa090b4eae; valaddr_reg:x16; val_offset:696; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 696, x17, x15, 1232, x18)

inst_1475:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfa8931dc8682c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ff7eeafae67b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c0aa090b4eae and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfa8931dc8682c; op2val:0x3ff6ff7eeafae67b; op3val:0x3fd6c0aa090b4eae; valaddr_reg:x16; val_offset:720; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 720, x17, x15, 1248, x18)

inst_1476:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfa8931dc8682c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ff7eeafae67b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c0aa090b4eae and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfa8931dc8682c; op2val:0x3ff6ff7eeafae67b; op3val:0x3fd6c0aa090b4eae; valaddr_reg:x16; val_offset:744; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 744, x17, x15, 1264, x18)

inst_1477:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfa8931dc8682c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ff7eeafae67b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c0aa090b4eae and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfa8931dc8682c; op2val:0x3ff6ff7eeafae67b; op3val:0x3fd6c0aa090b4eae; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1280, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x3fe5a329783562c9
.dword 0x3ff417e0c661f3f1
.dword 0x3feb2c3e5a6bb364
.dword 0x3fe6d761a60ec568
.dword 0x3ff551524634d31f
.dword 0x3fe6d761a60ec568
.dword 0x3fe6d761a60ec568
.dword 0x3ff551524634d31f
.dword 0x3ff551524634d31f
.dword 0x3fe6d761a60ec568
.dword 0x3ff551524634d31f
.dword 0x3fee6ec7fc5a3584
.dword 0x3fe6d761a60ec568
.dword 0x3ff551524634d31f
.dword 0x3fee6ec7fc5a3584
.dword 0x3fe6d761a60ec568
.dword 0x3fe6d761a60ec568
.dword 0x3fee6ec7fc5a3584
.dword 0x3fcfa8931dc8682c
.dword 0x3ff6ff7eeafae67b
.dword 0x3fcfa8931dc8682c
.dword 0x3fcfa8931dc8682c
.dword 0x3ff6ff7eeafae67b
.dword 0x3ff6ff7eeafae67b
.dword 0x3fcfa8931dc8682c
.dword 0x3fcfa8931dc8682c
.dword 0x3fcfa8931dc8682c
.dword 0x3fcfa8931dc8682c
.dword 0x3fcfa8931dc8682c
.dword 0x3fcfa8931dc8682c
.dword 0x3fcfa8931dc8682c
.dword 0x3fcfa8931dc8682c
.dword 0x3fd6c0aa090b4eae
.dword 0x3fd121231cb68166
.dword 0x400069efab52e69c
.dword 0x3fe1928d298a53f8
.dword 0x3fd121231cb68166
.dword 0x400069efab52e69c
.dword 0x3fe1928d298a53f8
.dword 0x3fd121231cb68166
.dword 0x400069efab52e69c
.dword 0x3fe1928d298a53f8
.dword 0x3fd121231cb68166
.dword 0x400069efab52e69c
.dword 0x3fe1928d298a53f8
.dword 0x3fd121231cb68166
.dword 0x400069efab52e69c
.dword 0x3fe1928d298a53f8
.dword 0x3fd1f285d75afa80
.dword 0x400b1dcea768f608
.dword 0x3fee6ab13c4421a9
.dword 0x3fd1f285d75afa80
.dword 0x400b1dcea768f608
.dword 0x3fee6ab13c4421a9
.dword 0x3fd1f285d75afa80
.dword 0x400b1dcea768f608
.dword 0x3fee6ab13c4421a9
.dword 0x3fd1f285d75afa80
.dword 0x400b1dcea768f608
.dword 0x3fee6ab13c4421a9
.dword 0x3fd1f285d75afa80
.dword 0x400b1dcea768f608
.dword 0x3fee6ab13c4421a9
.dword 0x3fae5ca95c88c200
.dword 0x401e67e4dd9ecae5
.dword 0x3fdcd9722e5f5d0c
.dword 0x3fae5ca95c88c200
.dword 0x401e67e4dd9ecae5
.dword 0x3fdcd9722e5f5d0c
.dword 0x3fae5ca95c88c200
.dword 0x401e67e4dd9ecae5
.dword 0x3fdcd9722e5f5d0c
.dword 0x3fae5ca95c88c200
.dword 0x401e67e4dd9ecae5
.dword 0x3fdcd9722e5f5d0c
.dword 0x3fae5ca95c88c200
.dword 0x401e67e4dd9ecae5
.dword 0x3fdcd9722e5f5d0c
.dword 0x3fd79f6734ccb6f6
.dword 0x3fce05f9e647ece9
.dword 0x3fb629da23fa0cb8
.dword 0x3fd79f6734ccb6f6
.dword 0x3fce05f9e647ece9
.dword 0x3fb629da23fa0cb8
.dword 0x3fd79f6734ccb6f6
.dword 0x3fce05f9e647ece9
.dword 0x3fb629da23fa0cb8
.dword 0x3fd79f6734ccb6f6
.dword 0x3fce05f9e647ece9
.dword 0x3fb629da23fa0cb8
.dword 0x3fd79f6734ccb6f6
.dword 0x3fce05f9e647ece9
.dword 0x3fb629da23fa0cb8
.dword 0x3fbda0b4ff1256e0
.dword 0x3ff9fef8366fa9f0
.dword 0x3fc8119ed3d04278
.dword 0x3fbda0b4ff1256e0
.dword 0x3ff9fef8366fa9f0
.dword 0x3fc8119ed3d04278
.dword 0x3fbda0b4ff1256e0
.dword 0x3ff9fef8366fa9f0
.dword 0x3fc8119ed3d04278
.dword 0x3fbda0b4ff1256e0
.dword 0x3ff9fef8366fa9f0
.dword 0x3fc8119ed3d04278
.dword 0x3fbda0b4ff1256e0
.dword 0x3ff9fef8366fa9f0
.dword 0x3fc8119ed3d04278
.dword 0x3fe40d85ccdc0390
.dword 0x3fb1e84c1ed19119
.dword 0x3fa67181a49fc870
.dword 0x3fe40d85ccdc0390
.dword 0x3fb1e84c1ed19119
.dword 0x3fa67181a49fc870
.dword 0x3fe40d85ccdc0390
.dword 0x3fb1e84c1ed19119
.dword 0x3fa67181a49fc870
.dword 0x3fe40d85ccdc0390
.dword 0x3fb1e84c1ed19119
.dword 0x3fa67181a49fc870
.dword 0x3fe40d85ccdc0390
.dword 0x3fb1e84c1ed19119
.dword 0x3fa67181a49fc870
.dword 0x3fdf4c61e579a5fe
.dword 0x3ffa81893e2a29d6
.dword 0x3fe9ecc1b0e8428d
.dword 0x3fdf4c61e579a5fe
.dword 0x3ffa81893e2a29d6
.dword 0x3fe9ecc1b0e8428d
.dword 0x3fdf4c61e579a5fe
.dword 0x3ffa81893e2a29d6
.dword 0x3fe9ecc1b0e8428d
.dword 0x3fdf4c61e579a5fe
.dword 0x3ffa81893e2a29d6
.dword 0x3fe9ecc1b0e8428d
.dword 0x3fdf4c61e579a5fe
.dword 0x3ffa81893e2a29d6
.dword 0x3fe9ecc1b0e8428d
.dword 0x3fe805882c1da80f
.dword 0x3fef4cfe503167a3
.dword 0x3fe77f27f6414a1c
.dword 0x3fe805882c1da80f
.dword 0x3fef4cfe503167a3
.dword 0x3fe77f27f6414a1c
.dword 0x3fe805882c1da80f
.dword 0x3fef4cfe503167a3
.dword 0x3fe77f27f6414a1c
.dword 0x3fe805882c1da80f
.dword 0x3fef4cfe503167a3
.dword 0x3fe77f27f6414a1c
.dword 0x3fe805882c1da80f
.dword 0x3fef4cfe503167a3
.dword 0x3fe77f27f6414a1c
.dword 0x3fe6dc2cc175cc22
.dword 0x3fb714e661939458
.dword 0x3fb07d2e5b3c17e8
.dword 0x3fe6dc2cc175cc22
.dword 0x3fb714e661939458
.dword 0x3fb07d2e5b3c17e8
.dword 0x3fe6dc2cc175cc22
.dword 0x3fb714e661939458
.dword 0x3fb07d2e5b3c17e8
.dword 0x3fe6dc2cc175cc22
.dword 0x3fb714e661939458
.dword 0x3fb07d2e5b3c17e8
.dword 0x3fe6dc2cc175cc22
.dword 0x3fb714e661939458
.dword 0x3fb07d2e5b3c17e8
.dword 0x3fecbecaf7cb24c8
.dword 0x3fc78eb882e3f81f
.dword 0x3fc5295645688994
.dword 0x3fecbecaf7cb24c8
.dword 0x3fc78eb882e3f81f
.dword 0x3fc5295645688994
.dword 0x3fecbecaf7cb24c8
.dword 0x3fc78eb882e3f81f
.dword 0x3fc5295645688994
.dword 0x3fecbecaf7cb24c8
.dword 0x3fc78eb882e3f81f
.dword 0x3fc5295645688994
.dword 0x3fecbecaf7cb24c8
.dword 0x3fc78eb882e3f81f
.dword 0x3fc5295645688994
.dword 0x3fe731ed9c953e1c
.dword 0x3ff5021bd6cf3a04
.dword 0x3fee749676e0a083
.dword 0x3fe731ed9c953e1c
.dword 0x3ff5021bd6cf3a04
.dword 0x3fee749676e0a083
.dword 0x3fe731ed9c953e1c
.dword 0x3ff5021bd6cf3a04
.dword 0x3fee749676e0a083
.dword 0x3fe731ed9c953e1c
.dword 0x3ff5021bd6cf3a04
.dword 0x3fee749676e0a083
.dword 0x3fe731ed9c953e1c
.dword 0x3ff5021bd6cf3a04
.dword 0x3fee749676e0a083
.dword 0x3fe47511b84c5fe2
.dword 0x3feca10c363833e2
.dword 0x3fe24d6450fa3536
.dword 0x3fe47511b84c5fe2
.dword 0x3feca10c363833e2
.dword 0x3fe24d6450fa3536
.dword 0x3fe47511b84c5fe2
.dword 0x3feca10c363833e2
.dword 0x3fe24d6450fa3536
.dword 0x3fe47511b84c5fe2
.dword 0x3feca10c363833e2
.dword 0x3fe24d6450fa3536
.dword 0x3fe47511b84c5fe2
.dword 0x3feca10c363833e2
.dword 0x3fe24d6450fa3536
.dword 0x3f53c8990a4c2a00
.dword 0x407543a5e5f86adc
.dword 0x3fda4aedff63880a
.dword 0x3f53c8990a4c2a00
.dword 0x407543a5e5f86adc
.dword 0x3fda4aedff63880a
.dword 0x3f53c8990a4c2a00
.dword 0x407543a5e5f86adc
.dword 0x3fda4aedff63880a
.dword 0x3f53c8990a4c2a00
.dword 0x407543a5e5f86adc
.dword 0x3fda4aedff63880a
.dword 0x3f53c8990a4c2a00
.dword 0x407543a5e5f86adc
.dword 0x3fda4aedff63880a
.dword 0x3fe416c1e3bd7694
.dword 0x3feef22d3d8d0594
.dword 0x3fe36d5e4670799f
.dword 0x3fe416c1e3bd7694
.dword 0x3feef22d3d8d0594
.dword 0x3fe36d5e4670799f
.dword 0x3fe416c1e3bd7694
.dword 0x3feef22d3d8d0594
.dword 0x3fe36d5e4670799f
.dword 0x3fe416c1e3bd7694
.dword 0x3feef22d3d8d0594
.dword 0x3fe36d5e4670799f
.dword 0x3fe416c1e3bd7694
.dword 0x3feef22d3d8d0594
.dword 0x3fe36d5e4670799f
.dword 0x3fb932ef0852acd8
.dword 0x401cdbd884193169
.dword 0x3fe6b9b03afcb5f0
.dword 0x3fb932ef0852acd8
.dword 0x401cdbd884193169
.dword 0x3fe6b9b03afcb5f0
.dword 0x3fb932ef0852acd8
.dword 0x401cdbd884193169
.dword 0x3fe6b9b03afcb5f0
.dword 0x3fb932ef0852acd8
.dword 0x401cdbd884193169
.dword 0x3fe6b9b03afcb5f0
.dword 0x3fb932ef0852acd8
.dword 0x401cdbd884193169
.dword 0x3fe6b9b03afcb5f0
.dword 0x3fb2d78639bc7d18
.dword 0x400f314eb94a6891
.dword 0x3fd25dd267e7fe80
.dword 0x3fb2d78639bc7d18
.dword 0x400f314eb94a6891
.dword 0x3fd25dd267e7fe80
.dword 0x3fb2d78639bc7d18
.dword 0x400f314eb94a6891
.dword 0x3fd25dd267e7fe80
.dword 0x3fb2d78639bc7d18
.dword 0x400f314eb94a6891
.dword 0x3fd25dd267e7fe80
.dword 0x3fb2d78639bc7d18
.dword 0x400f314eb94a6891
.dword 0x3fd25dd267e7fe80
.dword 0x3fc4980479a0ba98
.dword 0x4015e09c1bccd745
.dword 0x3fec289f0c3d8fd5
.dword 0x3fc4980479a0ba98
.dword 0x4015e09c1bccd745
.dword 0x3fec289f0c3d8fd5
.dword 0x3fc4980479a0ba98
.dword 0x4015e09c1bccd745
.dword 0x3fec289f0c3d8fd5
.dword 0x3fc4980479a0ba98
.dword 0x4015e09c1bccd745
.dword 0x3fec289f0c3d8fd5
.dword 0x3fc4980479a0ba98
.dword 0x4015e09c1bccd745
.dword 0x3fec289f0c3d8fd5
.dword 0x3feff1bc0eb3a9cd
.dword 0x3fcff631fcf02965
.dword 0x3fcfe7f26a966f74
.dword 0x3feff1bc0eb3a9cd
.dword 0x3fcff631fcf02965
.dword 0x3fcfe7f26a966f74
.dword 0x3feff1bc0eb3a9cd
.dword 0x3fcff631fcf02965
.dword 0x3fcfe7f26a966f74
.dword 0x3feff1bc0eb3a9cd
.dword 0x3fcff631fcf02965
.dword 0x3fcfe7f26a966f74
.dword 0x3feff1bc0eb3a9cd
.dword 0x3fcff631fcf02965
.dword 0x3fcfe7f26a966f74
.dword 0x3fe5e2b04b843057
.dword 0x3fcde6d5ace4b245
.dword 0x3fc4734f3ab2e53c
.dword 0x3fe5e2b04b843057
.dword 0x3fcde6d5ace4b245
.dword 0x3fc4734f3ab2e53c
.dword 0x3fe5e2b04b843057
.dword 0x3fcde6d5ace4b245
.dword 0x3fc4734f3ab2e53c
.dword 0x3fe5e2b04b843057
.dword 0x3fcde6d5ace4b245
.dword 0x3fc4734f3ab2e53c
.dword 0x3fe5e2b04b843057
.dword 0x3fcde6d5ace4b245
.dword 0x3fc4734f3ab2e53c
.dword 0x3feb7f539255d499
.dword 0x3fe86e4de3085257
.dword 0x3fe4fe474a7ede08
.dword 0x3feb7f539255d499
.dword 0x3fe86e4de3085257
.dword 0x3fe4fe474a7ede08
.dword 0x3feb7f539255d499
.dword 0x3fe86e4de3085257
.dword 0x3fe4fe474a7ede08
.dword 0x3feb7f539255d499
.dword 0x3fe86e4de3085257
.dword 0x3fe4fe474a7ede08
.dword 0x3feb7f539255d499
.dword 0x3fe86e4de3085257
.dword 0x3fe4fe474a7ede08
.dword 0x3fe1935f2260d9c2
.dword 0x3ff455c1d99dd687
.dword 0x3fe6566ac5175d67
.dword 0x3fe1935f2260d9c2
.dword 0x3ff455c1d99dd687
.dword 0x3fe6566ac5175d67
.dword 0x3fe1935f2260d9c2
.dword 0x3ff455c1d99dd687
.dword 0x3fe6566ac5175d67
.dword 0x3fe1935f2260d9c2
.dword 0x3ff455c1d99dd687
.dword 0x3fe6566ac5175d67
.dword 0x3fe1935f2260d9c2
.dword 0x3ff455c1d99dd687
.dword 0x3fe6566ac5175d67
.dword 0x3fefe2963c333dcd
.dword 0x3fe05307b89919a9
.dword 0x3fe0440685460dc4
.dword 0x3fefe2963c333dcd
.dword 0x3fe05307b89919a9
.dword 0x3fe0440685460dc4
.dword 0x3fefe2963c333dcd
.dword 0x3fe05307b89919a9
.dword 0x3fe0440685460dc4
.dword 0x3fefe2963c333dcd
.dword 0x3fe05307b89919a9
.dword 0x3fe0440685460dc4
.dword 0x3fefe2963c333dcd
.dword 0x3fe05307b89919a9
.dword 0x3fe0440685460dc4
.dword 0x3fe07189266c7628
.dword 0x3ffe5d18b6c3caf6
.dword 0x3fef348e7b5d1dff
.dword 0x3fe07189266c7628
.dword 0x3ffe5d18b6c3caf6
.dword 0x3fef348e7b5d1dff
.dword 0x3fe07189266c7628
.dword 0x3ffe5d18b6c3caf6
.dword 0x3fef348e7b5d1dff
.dword 0x3fe07189266c7628
.dword 0x3ffe5d18b6c3caf6
.dword 0x3fef348e7b5d1dff
.dword 0x3fe07189266c7628
.dword 0x3ffe5d18b6c3caf6
.dword 0x3fef348e7b5d1dff
.dword 0x3fe898816a0229aa
.dword 0x3fc1090e8a9ec990
.dword 0x3fba2ff5a3f69e48
.dword 0x3fe898816a0229aa
.dword 0x3fc1090e8a9ec990
.dword 0x3fba2ff5a3f69e48
.dword 0x3fe898816a0229aa
.dword 0x3fc1090e8a9ec990
.dword 0x3fba2ff5a3f69e48
.dword 0x3fe898816a0229aa
.dword 0x3fc1090e8a9ec990
.dword 0x3fba2ff5a3f69e48
.dword 0x3fe898816a0229aa
.dword 0x3fc1090e8a9ec990
.dword 0x3fba2ff5a3f69e48
.dword 0x3fbcf699fc64f208
.dword 0x4004fa232aa4b78f
.dword 0x3fd2fc86a514180a
.dword 0x3fbcf699fc64f208
.dword 0x4004fa232aa4b78f
.dword 0x3fd2fc86a514180a
.dword 0x3fbcf699fc64f208
.dword 0x4004fa232aa4b78f
.dword 0x3fd2fc86a514180a
.dword 0x3fbcf699fc64f208
.dword 0x4004fa232aa4b78f
.dword 0x3fd2fc86a514180a
.dword 0x3fbcf699fc64f208
.dword 0x4004fa232aa4b78f
.dword 0x3fd2fc86a514180a
.dword 0x3fc7032105e4afe4
.dword 0x4005dc24f5615f0e
.dword 0x3fdf70bb85c371ea
.dword 0x3fc7032105e4afe4
.dword 0x4005dc24f5615f0e
.dword 0x3fdf70bb85c371ea
.dword 0x3fc7032105e4afe4
.dword 0x4005dc24f5615f0e
.dword 0x3fdf70bb85c371ea
.dword 0x3fc7032105e4afe4
.dword 0x4005dc24f5615f0e
.dword 0x3fdf70bb85c371ea
.dword 0x3fc7032105e4afe4
.dword 0x4005dc24f5615f0e
.dword 0x3fdf70bb85c371ea
.dword 0x3fa8326b28fd1300
.dword 0x40325a935ae7ed73
.dword 0x3febc1b30196274b
.dword 0x3fa8326b28fd1300
.dword 0x40325a935ae7ed73
.dword 0x3febc1b30196274b
.dword 0x3fa8326b28fd1300
.dword 0x40325a935ae7ed73
.dword 0x3febc1b30196274b
.dword 0x3fa8326b28fd1300
.dword 0x40325a935ae7ed73
.dword 0x3febc1b30196274b
.dword 0x3fa8326b28fd1300
.dword 0x40325a935ae7ed73
.dword 0x3febc1b30196274b
.dword 0x3feb76dc410292fc
.dword 0x3fe1bebed9cba00e
.dword 0x3fde75b515e7d0b4
.dword 0x3feb76dc410292fc
.dword 0x3fe1bebed9cba00e
.dword 0x3fde75b515e7d0b4
.dword 0x3feb76dc410292fc
.dword 0x3fe1bebed9cba00e
.dword 0x3fde75b515e7d0b4
.dword 0x3feb76dc410292fc
.dword 0x3fe1bebed9cba00e
.dword 0x3fde75b515e7d0b4
.dword 0x3feb76dc410292fc
.dword 0x3fe1bebed9cba00e
.dword 0x3fde75b515e7d0b4
.dword 0x3fe941df9fb398b0
.dword 0x3fe0f7deb75243a9
.dword 0x3fdac9281f470f2c
.dword 0x3fe941df9fb398b0
.dword 0x3fe0f7deb75243a9
.dword 0x3fdac9281f470f2c
.dword 0x3fe941df9fb398b0
.dword 0x3fe0f7deb75243a9
.dword 0x3fdac9281f470f2c
.dword 0x3fe941df9fb398b0
.dword 0x3fe0f7deb75243a9
.dword 0x3fdac9281f470f2c
.dword 0x3fe941df9fb398b0
.dword 0x3fe0f7deb75243a9
.dword 0x3fdac9281f470f2c
.dword 0x3fe94903745572ab
.dword 0x3fb1a0fbfb26352e
.dword 0x3fabdbfc047218f0
.dword 0x3fe94903745572ab
.dword 0x3fb1a0fbfb26352e
.dword 0x3fabdbfc047218f0
.dword 0x3fe94903745572ab
.dword 0x3fb1a0fbfb26352e
.dword 0x3fabdbfc047218f0
.dword 0x3fe94903745572ab
.dword 0x3fb1a0fbfb26352e
.dword 0x3fabdbfc047218f0
.dword 0x3fe94903745572ab
.dword 0x3fb1a0fbfb26352e
.dword 0x3fabdbfc047218f0
.dword 0x3fe19e1900062d87
.dword 0x3ff54113d75894a5
.dword 0x3fe76728ee73de07
.dword 0x3fe19e1900062d87
.dword 0x3ff54113d75894a5
.dword 0x3fe76728ee73de07
.dword 0x3fe19e1900062d87
.dword 0x3ff54113d75894a5
.dword 0x3fe76728ee73de07
.dword 0x3fe19e1900062d87
.dword 0x3ff54113d75894a5
.dword 0x3fe76728ee73de07
.dword 0x3fe19e1900062d87
.dword 0x3ff54113d75894a5
.dword 0x3fe76728ee73de07
.dword 0x3fc70d97a7e4e400
.dword 0x3fc6aa6aec48c3a7
.dword 0x3fa0541d805852e0
.dword 0x3fc70d97a7e4e400
.dword 0x3fc6aa6aec48c3a7
.dword 0x3fa0541d805852e0
.dword 0x3fc70d97a7e4e400
.dword 0x3fc6aa6aec48c3a7
.dword 0x3fa0541d805852e0
.dword 0x3fc70d97a7e4e400
.dword 0x3fc6aa6aec48c3a7
.dword 0x3fa0541d805852e0
.dword 0x3fc70d97a7e4e400
.dword 0x3fc6aa6aec48c3a7
.dword 0x3fa0541d805852e0
.dword 0x3fef709a7ed77604
.dword 0x3fe19f132e9e2970
.dword 0x3fe1501c6bb1b35c
.dword 0x3fef709a7ed77604
.dword 0x3fe19f132e9e2970
.dword 0x3fe1501c6bb1b35c
.dword 0x3fef709a7ed77604
.dword 0x3fe19f132e9e2970
.dword 0x3fe1501c6bb1b35c
.dword 0x3fef709a7ed77604
.dword 0x3fe19f132e9e2970
.dword 0x3fe1501c6bb1b35c
.dword 0x3fef709a7ed77604
.dword 0x3fe19f132e9e2970
.dword 0x3fe1501c6bb1b35c
.dword 0x3f966634f502ba60
.dword 0x40075040723abe8f
.dword 0x3fb051a2b0dda218
.dword 0x3f966634f502ba60
.dword 0x40075040723abe8f
.dword 0x3fb051a2b0dda218
.dword 0x3f966634f502ba60
.dword 0x40075040723abe8f
.dword 0x3fb051a2b0dda218
.dword 0x3f966634f502ba60
.dword 0x40075040723abe8f
.dword 0x3fb051a2b0dda218
.dword 0x3f966634f502ba60
.dword 0x40075040723abe8f
.dword 0x3fb051a2b0dda218
.dword 0x3fbb38e80e6df720
.dword 0x401e1f06b96ffe78
.dword 0x3fe99fbe66c0d85c
.dword 0x3fbb38e80e6df720
.dword 0x401e1f06b96ffe78
.dword 0x3fe99fbe66c0d85c
.dword 0x3fbb38e80e6df720
.dword 0x401e1f06b96ffe78
.dword 0x3fe99fbe66c0d85c
.dword 0x3fbb38e80e6df720
.dword 0x401e1f06b96ffe78
.dword 0x3fe99fbe66c0d85c
.dword 0x3fbb38e80e6df720
.dword 0x401e1f06b96ffe78
.dword 0x3fe99fbe66c0d85c
.dword 0x3fe113bfe8ee6b0d
.dword 0x3ffa6dbe46d4eaeb
.dword 0x3fec35397c06dc43
.dword 0x3fe113bfe8ee6b0d
.dword 0x3ffa6dbe46d4eaeb
.dword 0x3fec35397c06dc43
.dword 0x3fe113bfe8ee6b0d
.dword 0x3ffa6dbe46d4eaeb
.dword 0x3fec35397c06dc43
.dword 0x3fe113bfe8ee6b0d
.dword 0x3ffa6dbe46d4eaeb
.dword 0x3fec35397c06dc43
.dword 0x3fe113bfe8ee6b0d
.dword 0x3ffa6dbe46d4eaeb
.dword 0x3fec35397c06dc43
.dword 0x3fdef11445b734f4
.dword 0x3ff1b779f5b68660
.dword 0x3fe1217b5e22ebbd
.dword 0x3fdef11445b734f4
.dword 0x3ff1b779f5b68660
.dword 0x3fe1217b5e22ebbd
.dword 0x3fdef11445b734f4
.dword 0x3ff1b779f5b68660
.dword 0x3fe1217b5e22ebbd
.dword 0x3fdef11445b734f4
.dword 0x3ff1b779f5b68660
.dword 0x3fe1217b5e22ebbd
.dword 0x3fdef11445b734f4
.dword 0x3ff1b779f5b68660
.dword 0x3fe1217b5e22ebbd
.dword 0x3fd4c134ac154518
.dword 0x40017e7252713de3
.dword 0x3fe6b14dc12a1dbe
.dword 0x3fd4c134ac154518
.dword 0x40017e7252713de3
.dword 0x3fe6b14dc12a1dbe
.dword 0x3fd4c134ac154518
.dword 0x40017e7252713de3
.dword 0x3fe6b14dc12a1dbe
.dword 0x3fd4c134ac154518
.dword 0x40017e7252713de3
.dword 0x3fe6b14dc12a1dbe
.dword 0x3fd4c134ac154518
.dword 0x40017e7252713de3
.dword 0x3fe6b14dc12a1dbe
.dword 0x3fd4fded17342f5a
.dword 0x3fee07e666f7ff8a
.dword 0x3fd3b33cf64229f0
.dword 0x3fd4fded17342f5a
.dword 0x3fee07e666f7ff8a
.dword 0x3fd3b33cf64229f0
.dword 0x3fd4fded17342f5a
.dword 0x3fee07e666f7ff8a
.dword 0x3fd3b33cf64229f0
.dword 0x3fd4fded17342f5a
.dword 0x3fee07e666f7ff8a
.dword 0x3fd3b33cf64229f0
.dword 0x3fd4fded17342f5a
.dword 0x3fee07e666f7ff8a
.dword 0x3fd3b33cf64229f0
.dword 0x3fee0f10a20e8af5
.dword 0x3fe8e90d4bf1dfcb
.dword 0x3fe76636a81c269a
.dword 0x3fee0f10a20e8af5
.dword 0x3fe8e90d4bf1dfcb
.dword 0x3fe76636a81c269a
.dword 0x3fee0f10a20e8af5
.dword 0x3fe8e90d4bf1dfcb
.dword 0x3fe76636a81c269a
.dword 0x3fee0f10a20e8af5
.dword 0x3fe8e90d4bf1dfcb
.dword 0x3fe76636a81c269a
.dword 0x3fee0f10a20e8af5
.dword 0x3fe8e90d4bf1dfcb
.dword 0x3fe76636a81c269a
.dword 0x3fdba9cad6eeb67c
.dword 0x4002470bddc65f77
.dword 0x3fef99da2a12004f
.dword 0x3fdba9cad6eeb67c
.dword 0x4002470bddc65f77
.dword 0x3fef99da2a12004f
.dword 0x3fdba9cad6eeb67c
.dword 0x4002470bddc65f77
.dword 0x3fef99da2a12004f
.dword 0x3fdba9cad6eeb67c
.dword 0x4002470bddc65f77
.dword 0x3fef99da2a12004f
.dword 0x3fdba9cad6eeb67c
.dword 0x4002470bddc65f77
.dword 0x3fef99da2a12004f
.dword 0x3fd06f20e274f7c2
.dword 0x4005abb347a4aaac
.dword 0x3fe64236fd83f10f
.dword 0x3fd06f20e274f7c2
.dword 0x4005abb347a4aaac
.dword 0x3fe64236fd83f10f
.dword 0x3fd06f20e274f7c2
.dword 0x4005abb347a4aaac
.dword 0x3fe64236fd83f10f
.dword 0x3fd06f20e274f7c2
.dword 0x4005abb347a4aaac
.dword 0x3fe64236fd83f10f
.dword 0x3fd06f20e274f7c2
.dword 0x4005abb347a4aaac
.dword 0x3fe64236fd83f10f
.dword 0x3feb484b36ac43b7
.dword 0x3fec008b5d47e1bb
.dword 0x3fe7dfb8a164d42e
.dword 0x3feb484b36ac43b7
.dword 0x3fec008b5d47e1bb
.dword 0x3fe7dfb8a164d42e
.dword 0x3feb484b36ac43b7
.dword 0x3fec008b5d47e1bb
.dword 0x3fe7dfb8a164d42e
.dword 0x3feb484b36ac43b7
.dword 0x3fec008b5d47e1bb
.dword 0x3fe7dfb8a164d42e
.dword 0x3feb484b36ac43b7
.dword 0x3fec008b5d47e1bb
.dword 0x3fe7dfb8a164d42e
.dword 0x3fd6dcf8ae69e6de
.dword 0x4004a8c04952745a
.dword 0x3fed8559d199e6dd
.dword 0x3fd6dcf8ae69e6de
.dword 0x4004a8c04952745a
.dword 0x3fed8559d199e6dd
.dword 0x3fd6dcf8ae69e6de
.dword 0x4004a8c04952745a
.dword 0x3fed8559d199e6dd
.dword 0x3fd6dcf8ae69e6de
.dword 0x4004a8c04952745a
.dword 0x3fed8559d199e6dd
.dword 0x3fd6dcf8ae69e6de
.dword 0x4004a8c04952745a
.dword 0x3fed8559d199e6dd
.dword 0x3fcdd3ec6f4085b8
.dword 0x3ffa4c80bc161a77
.dword 0x3fd8837f6af00a50
.dword 0x3fcdd3ec6f4085b8
.dword 0x3ffa4c80bc161a77
.dword 0x3fd8837f6af00a50
.dword 0x3fcdd3ec6f4085b8
.dword 0x3ffa4c80bc161a77
.dword 0x3fd8837f6af00a50
.dword 0x3fcdd3ec6f4085b8
.dword 0x3ffa4c80bc161a77
.dword 0x3fd8837f6af00a50
.dword 0x3fcdd3ec6f4085b8
.dword 0x3ffa4c80bc161a77
.dword 0x3fd8837f6af00a50
.dword 0x3fe0abf2e05baea1
.dword 0x3fe36d8746e32d0a
.dword 0x3fd43e50c5b39204
.dword 0x3fe0abf2e05baea1
.dword 0x3fe36d8746e32d0a
.dword 0x3fd43e50c5b39204
.dword 0x3fe0abf2e05baea1
.dword 0x3fe36d8746e32d0a
.dword 0x3fd43e50c5b39204
.dword 0x3fe0abf2e05baea1
.dword 0x3fe36d8746e32d0a
.dword 0x3fd43e50c5b39204
.dword 0x3fe0abf2e05baea1
.dword 0x3fe36d8746e32d0a
.dword 0x3fd43e50c5b39204
.dword 0x3fe03192549e2d0f
.dword 0x3ff38594e58587fb
.dword 0x3fe3c21087b16b1b
.dword 0x3fe03192549e2d0f
.dword 0x3ff38594e58587fb
.dword 0x3fe3c21087b16b1b
.dword 0x3fe03192549e2d0f
.dword 0x3ff38594e58587fb
.dword 0x3fe3c21087b16b1b
.dword 0x3fe03192549e2d0f
.dword 0x3ff38594e58587fb
.dword 0x3fe3c21087b16b1b
.dword 0x3fe03192549e2d0f
.dword 0x3ff38594e58587fb
.dword 0x3fe3c21087b16b1b
.dword 0x3fd0a6a5faccf050
.dword 0x3fb7e0384e608111
.dword 0x3f98d8e6451393c0
.dword 0x3fd0a6a5faccf050
.dword 0x3fb7e0384e608111
.dword 0x3f98d8e6451393c0
.dword 0x3fd0a6a5faccf050
.dword 0x3fb7e0384e608111
.dword 0x3f98d8e6451393c0
.dword 0x3fd0a6a5faccf050
.dword 0x3fb7e0384e608111
.dword 0x3f98d8e6451393c0
.dword 0x3fd0a6a5faccf050
.dword 0x3fb7e0384e608111
.dword 0x3f98d8e6451393c0
.dword 0x3fd1529321f2ceda
.dword 0x40077dc2ec120486
.dword 0x3fe96edba713b9e9
.dword 0x3fd1529321f2ceda
.dword 0x40077dc2ec120486
.dword 0x3fe96edba713b9e9
.dword 0x3fd1529321f2ceda
.dword 0x40077dc2ec120486
.dword 0x3fe96edba713b9e9
.dword 0x3fd1529321f2ceda
.dword 0x40077dc2ec120486
.dword 0x3fe96edba713b9e9
.dword 0x3fd1529321f2ceda
.dword 0x40077dc2ec120486
.dword 0x3fe96edba713b9e9
.dword 0x3fed9e1b089d8f26
.dword 0x3fe964829049c135
.dword 0x3fe7808c0b0f945c
.dword 0x3fed9e1b089d8f26
.dword 0x3fe964829049c135
.dword 0x3fe7808c0b0f945c
.dword 0x3fed9e1b089d8f26
.dword 0x3fe964829049c135
.dword 0x3fe7808c0b0f945c
.dword 0x3fed9e1b089d8f26
.dword 0x3fe964829049c135
.dword 0x3fe7808c0b0f945c
.dword 0x3fed9e1b089d8f26
.dword 0x3fe964829049c135
.dword 0x3fe7808c0b0f945c
.dword 0x3fd0d875c43589b8
.dword 0x4006ba8a3f9c7f32
.dword 0x3fe7ee07d4c35c27
.dword 0x3fd0d875c43589b8
.dword 0x4006ba8a3f9c7f32
.dword 0x3fe7ee07d4c35c27
.dword 0x3fd0d875c43589b8
.dword 0x4006ba8a3f9c7f32
.dword 0x3fe7ee07d4c35c27
.dword 0x3fd0d875c43589b8
.dword 0x4006ba8a3f9c7f32
.dword 0x3fe7ee07d4c35c27
.dword 0x3fd0d875c43589b8
.dword 0x4006ba8a3f9c7f32
.dword 0x3fe7ee07d4c35c27
.dword 0x3fd5ce0983cac5ae
.dword 0x4005ee1b33f74e5c
.dword 0x3fede2ea5d045fe8
.dword 0x3fd5ce0983cac5ae
.dword 0x4005ee1b33f74e5c
.dword 0x3fede2ea5d045fe8
.dword 0x3fd5ce0983cac5ae
.dword 0x4005ee1b33f74e5c
.dword 0x3fede2ea5d045fe8
.dword 0x3fd5ce0983cac5ae
.dword 0x4005ee1b33f74e5c
.dword 0x3fede2ea5d045fe8
.dword 0x3fd5ce0983cac5ae
.dword 0x4005ee1b33f74e5c
.dword 0x3fede2ea5d045fe8
.dword 0x3fdfcf5280d1300c
.dword 0x3fedeccebc8bcc58
.dword 0x3fddbf494743b3f4
.dword 0x3fdfcf5280d1300c
.dword 0x3fedeccebc8bcc58
.dword 0x3fddbf494743b3f4
.dword 0x3fdfcf5280d1300c
.dword 0x3fedeccebc8bcc58
.dword 0x3fddbf494743b3f4
.dword 0x3fdfcf5280d1300c
.dword 0x3fedeccebc8bcc58
.dword 0x3fddbf494743b3f4
.dword 0x3fdfcf5280d1300c
.dword 0x3fedeccebc8bcc58
.dword 0x3fddbf494743b3f4
.dword 0x3fc9e50beee0d2bc
.dword 0x3ff3e8d95ca4e824
.dword 0x3fd01c6b908a3b02
.dword 0x3fc9e50beee0d2bc
.dword 0x3ff3e8d95ca4e824
.dword 0x3fd01c6b908a3b02
.dword 0x3fc9e50beee0d2bc
.dword 0x3ff3e8d95ca4e824
.dword 0x3fd01c6b908a3b02
.dword 0x3fc9e50beee0d2bc
.dword 0x3ff3e8d95ca4e824
.dword 0x3fd01c6b908a3b02
.dword 0x3fc9e50beee0d2bc
.dword 0x3ff3e8d95ca4e824
.dword 0x3fd01c6b908a3b02
.dword 0x3fe057b372f1e047
.dword 0x3fff39b16f9919c5
.dword 0x3fefe4d95a2c15b0
.dword 0x3fe057b372f1e047
.dword 0x3fff39b16f9919c5
.dword 0x3fefe4d95a2c15b0
.dword 0x3fe057b372f1e047
.dword 0x3fff39b16f9919c5
.dword 0x3fefe4d95a2c15b0
.dword 0x3fe057b372f1e047
.dword 0x3fff39b16f9919c5
.dword 0x3fefe4d95a2c15b0
.dword 0x3fe057b372f1e047
.dword 0x3fff39b16f9919c5
.dword 0x3fefe4d95a2c15b0
.dword 0x3fd7ebe7dbbf9a60
.dword 0x3feb56e345a2832a
.dword 0x3fd46fff860b244c
.dword 0x3fd7ebe7dbbf9a60
.dword 0x3feb56e345a2832a
.dword 0x3fd46fff860b244c
.dword 0x3fd7ebe7dbbf9a60
.dword 0x3feb56e345a2832a
.dword 0x3fd46fff860b244c
.dword 0x3fd7ebe7dbbf9a60
.dword 0x3feb56e345a2832a
.dword 0x3fd46fff860b244c
.dword 0x3fd7ebe7dbbf9a60
.dword 0x3feb56e345a2832a
.dword 0x3fd46fff860b244c
.dword 0x3fdc4116ef98007e
.dword 0x3feafb2e1f620cf1
.dword 0x3fd7d2a9e7d96a10
.dword 0x3fdc4116ef98007e
.dword 0x3feafb2e1f620cf1
.dword 0x3fd7d2a9e7d96a10
.dword 0x3fdc4116ef98007e
.dword 0x3feafb2e1f620cf1
.dword 0x3fd7d2a9e7d96a10
.dword 0x3fdc4116ef98007e
.dword 0x3feafb2e1f620cf1
.dword 0x3fd7d2a9e7d96a10
.dword 0x3fdc4116ef98007e
.dword 0x3feafb2e1f620cf1
.dword 0x3fd7d2a9e7d96a10
.dword 0x3feca486367e57c9
.dword 0x3fc77a66a706dcb4
.dword 0x3fc503cf98c71f4c
.dword 0x3feca486367e57c9
.dword 0x3fc77a66a706dcb4
.dword 0x3fc503cf98c71f4c
.dword 0x3feca486367e57c9
.dword 0x3fc77a66a706dcb4
.dword 0x3fc503cf98c71f4c
.dword 0x3feca486367e57c9
.dword 0x3fc77a66a706dcb4
.dword 0x3fc503cf98c71f4c
.dword 0x3feca486367e57c9
.dword 0x3fc77a66a706dcb4
.dword 0x3fc503cf98c71f4c
.dword 0x3febbdb3557396d9
.dword 0x3fe7991da3183a12
.dword 0x3fe475159829749f
.dword 0x3febbdb3557396d9
.dword 0x3fe7991da3183a12
.dword 0x3fe475159829749f
.dword 0x3febbdb3557396d9
.dword 0x3fe7991da3183a12
.dword 0x3fe475159829749f
.dword 0x3febbdb3557396d9
.dword 0x3fe7991da3183a12
.dword 0x3fe475159829749f
.dword 0x3febbdb3557396d9
.dword 0x3fe7991da3183a12
.dword 0x3fe475159829749f
.dword 0x3fe8a4535ba8ddb9
.dword 0x3ff4215372db4f3e
.dword 0x3fef00bba3d5221a
.dword 0x3fe8a4535ba8ddb9
.dword 0x3ff4215372db4f3e
.dword 0x3fef00bba3d5221a
.dword 0x3fe8a4535ba8ddb9
.dword 0x3ff4215372db4f3e
.dword 0x3fef00bba3d5221a
.dword 0x3fe8a4535ba8ddb9
.dword 0x3ff4215372db4f3e
.dword 0x3fef00bba3d5221a
.dword 0x3fe8a4535ba8ddb9
.dword 0x3ff4215372db4f3e
.dword 0x3fef00bba3d5221a
.dword 0x3fd44b713859f3f0
.dword 0x3feef288c55d6b06
.dword 0x3fd3a08b6adb5c98
.dword 0x3fd44b713859f3f0
.dword 0x3feef288c55d6b06
.dword 0x3fd3a08b6adb5c98
.dword 0x3fd44b713859f3f0
.dword 0x3feef288c55d6b06
.dword 0x3fd3a08b6adb5c98
.dword 0x3fd44b713859f3f0
.dword 0x3feef288c55d6b06
.dword 0x3fd3a08b6adb5c98
.dword 0x3fd44b713859f3f0
.dword 0x3feef288c55d6b06
.dword 0x3fd3a08b6adb5c98
.dword 0x3fda9ebc719dc362
.dword 0x3fd07d7bdf108b7a
.dword 0x3fbb6f82a93df690
.dword 0x3fda9ebc719dc362
.dword 0x3fd07d7bdf108b7a
.dword 0x3fbb6f82a93df690
.dword 0x3fda9ebc719dc362
.dword 0x3fd07d7bdf108b7a
.dword 0x3fbb6f82a93df690
.dword 0x3fda9ebc719dc362
.dword 0x3fd07d7bdf108b7a
.dword 0x3fbb6f82a93df690
.dword 0x3fda9ebc719dc362
.dword 0x3fd07d7bdf108b7a
.dword 0x3fbb6f82a93df690
.dword 0x3fc90052ffbe2328
.dword 0x3fec708f724b1d08
.dword 0x3fc63839d5043638
.dword 0x3fc90052ffbe2328
.dword 0x3fec708f724b1d08
.dword 0x3fc63839d5043638
.dword 0x3fc90052ffbe2328
.dword 0x3fec708f724b1d08
.dword 0x3fc63839d5043638
.dword 0x3fc90052ffbe2328
.dword 0x3fec708f724b1d08
.dword 0x3fc63839d5043638
.dword 0x3fc90052ffbe2328
.dword 0x3fec708f724b1d08
.dword 0x3fc63839d5043638
.dword 0x3fdfb8627b73c106
.dword 0x3fd5507746b5c321
.dword 0x3fc520c3d2fe56ec
.dword 0x3fdfb8627b73c106
.dword 0x3fd5507746b5c321
.dword 0x3fc520c3d2fe56ec
.dword 0x3fdfb8627b73c106
.dword 0x3fd5507746b5c321
.dword 0x3fc520c3d2fe56ec
.dword 0x3fdfb8627b73c106
.dword 0x3fd5507746b5c321
.dword 0x3fc520c3d2fe56ec
.dword 0x3fdfb8627b73c106
.dword 0x3fd5507746b5c321
.dword 0x3fc520c3d2fe56ec
.dword 0x3feb8acac45c466a
.dword 0x3fe1b4d6df005a55
.dword 0x3fde7ac2b9fa20ca
.dword 0x3feb8acac45c466a
.dword 0x3fe1b4d6df005a55
.dword 0x3fde7ac2b9fa20ca
.dword 0x3feb8acac45c466a
.dword 0x3fe1b4d6df005a55
.dword 0x3fde7ac2b9fa20ca
.dword 0x3feb8acac45c466a
.dword 0x3fe1b4d6df005a55
.dword 0x3fde7ac2b9fa20ca
.dword 0x3feb8acac45c466a
.dword 0x3fe1b4d6df005a55
.dword 0x3fde7ac2b9fa20ca
.dword 0x3fd108911a643e2e
.dword 0x3fe693e123b5fd81
.dword 0x3fc80935e7e94dd0
.dword 0x3fd108911a643e2e
.dword 0x3fe693e123b5fd81
.dword 0x3fc80935e7e94dd0
.dword 0x3fd108911a643e2e
.dword 0x3fe693e123b5fd81
.dword 0x3fc80935e7e94dd0
.dword 0x3fd108911a643e2e
.dword 0x3fe693e123b5fd81
.dword 0x3fc80935e7e94dd0
.dword 0x3fd108911a643e2e
.dword 0x3fe693e123b5fd81
.dword 0x3fc80935e7e94dd0
.dword 0x3fbba9aa6f95a870
.dword 0x400b971e039929af
.dword 0x3fd7d9ca5c90e828
.dword 0x3fbba9aa6f95a870
.dword 0x400b971e039929af
.dword 0x3fd7d9ca5c90e828
.dword 0x3fbba9aa6f95a870
.dword 0x400b971e039929af
.dword 0x3fd7d9ca5c90e828
.dword 0x3fbba9aa6f95a870
.dword 0x400b971e039929af
.dword 0x3fd7d9ca5c90e828
.dword 0x3fbba9aa6f95a870
.dword 0x400b971e039929af
.dword 0x3fd7d9ca5c90e828
.dword 0x3fee9949c4b358a7
.dword 0x3fc60c639e5d4104
.dword 0x3fc5153b748f50a4
.dword 0x3fee9949c4b358a7
.dword 0x3fc60c639e5d4104
.dword 0x3fc5153b748f50a4
.dword 0x3fee9949c4b358a7
.dword 0x3fc60c639e5d4104
.dword 0x3fc5153b748f50a4
.dword 0x3fee9949c4b358a7
.dword 0x3fc60c639e5d4104
.dword 0x3fc5153b748f50a4
.dword 0x3fee9949c4b358a7
.dword 0x3fc60c639e5d4104
.dword 0x3fc5153b748f50a4
.dword 0x3fd1a76e8b0ce342
.dword 0x3ff4b1d1fcebcbe2
.dword 0x3fd6d57e16d78c28
.dword 0x3fd1a76e8b0ce342
.dword 0x3ff4b1d1fcebcbe2
.dword 0x3fd6d57e16d78c28
.dword 0x3fd1a76e8b0ce342
.dword 0x3ff4b1d1fcebcbe2
.dword 0x3fd6d57e16d78c28
.dword 0x3fd1a76e8b0ce342
.dword 0x3ff4b1d1fcebcbe2
.dword 0x3fd6d57e16d78c28
.dword 0x3fd1a76e8b0ce342
.dword 0x3ff4b1d1fcebcbe2
.dword 0x3fd6d57e16d78c28
.dword 0x3f8f465b817cb700
.dword 0x404bd927a307f6f9
.dword 0x3feb37990edd00d1
.dword 0x3f8f465b817cb700
.dword 0x404bd927a307f6f9
.dword 0x3feb37990edd00d1
.dword 0x3f8f465b817cb700
.dword 0x404bd927a307f6f9
.dword 0x3feb37990edd00d1
.dword 0x3f8f465b817cb700
.dword 0x404bd927a307f6f9
.dword 0x3feb37990edd00d1
.dword 0x3f8f465b817cb700
.dword 0x404bd927a307f6f9
.dword 0x3feb37990edd00d1
.dword 0x3fe38914c0f1585e
.dword 0x3ff1a9416c1f25d1
.dword 0x3fe5904dd91e06c8
.dword 0x3fe38914c0f1585e
.dword 0x3ff1a9416c1f25d1
.dword 0x3fe5904dd91e06c8
.dword 0x3fe38914c0f1585e
.dword 0x3ff1a9416c1f25d1
.dword 0x3fe5904dd91e06c8
.dword 0x3fe38914c0f1585e
.dword 0x3ff1a9416c1f25d1
.dword 0x3fe5904dd91e06c8
.dword 0x3fe38914c0f1585e
.dword 0x3ff1a9416c1f25d1
.dword 0x3fe5904dd91e06c8
.dword 0x3fd22d29d9ba48aa
.dword 0x3fdb3f1d22329e25
.dword 0x3fbef3e98ce8fc78
.dword 0x3fd22d29d9ba48aa
.dword 0x3fdb3f1d22329e25
.dword 0x3fbef3e98ce8fc78
.dword 0x3fd22d29d9ba48aa
.dword 0x3fdb3f1d22329e25
.dword 0x3fbef3e98ce8fc78
.dword 0x3fd22d29d9ba48aa
.dword 0x3fdb3f1d22329e25
.dword 0x3fbef3e98ce8fc78
.dword 0x3fd22d29d9ba48aa
.dword 0x3fdb3f1d22329e25
.dword 0x3fbef3e98ce8fc78
.dword 0x3fcfee48dd841658
.dword 0x3ff5f6f6d7fd60c8
.dword 0x3fd5eacdf0db8b10
.dword 0x3fcfee48dd841658
.dword 0x3ff5f6f6d7fd60c8
.dword 0x3fd5eacdf0db8b10
.dword 0x3fcfee48dd841658
.dword 0x3ff5f6f6d7fd60c8
.dword 0x3fd5eacdf0db8b10
.dword 0x3fcfee48dd841658
.dword 0x3ff5f6f6d7fd60c8
.dword 0x3fd5eacdf0db8b10
.dword 0x3fcfee48dd841658
.dword 0x3ff5f6f6d7fd60c8
.dword 0x3fd5eacdf0db8b10
.dword 0x3fda85cdb056c252
.dword 0x3ff22d61fe099365
.dword 0x3fde21c2292c8c94
.dword 0x3fda85cdb056c252
.dword 0x3ff22d61fe099365
.dword 0x3fde21c2292c8c94
.dword 0x3fda85cdb056c252
.dword 0x3ff22d61fe099365
.dword 0x3fde21c2292c8c94
.dword 0x3fda85cdb056c252
.dword 0x3ff22d61fe099365
.dword 0x3fde21c2292c8c94
.dword 0x3fda85cdb056c252
.dword 0x3ff22d61fe099365
.dword 0x3fde21c2292c8c94
.dword 0x3fe643a0e97b37d2
.dword 0x3ff1a48bfc0a495a
.dword 0x3fe88cd2f3a97d5e
.dword 0x3fe643a0e97b37d2
.dword 0x3ff1a48bfc0a495a
.dword 0x3fe88cd2f3a97d5e
.dword 0x3fe643a0e97b37d2
.dword 0x3ff1a48bfc0a495a
.dword 0x3fe88cd2f3a97d5e
.dword 0x3fe643a0e97b37d2
.dword 0x3ff1a48bfc0a495a
.dword 0x3fe88cd2f3a97d5e
.dword 0x3fe643a0e97b37d2
.dword 0x3ff1a48bfc0a495a
.dword 0x3fe88cd2f3a97d5e
.dword 0x3feeaaaa0e6c90dd
.dword 0x3ff051f23fbda48b
.dword 0x3fef47ba5acd2996
.dword 0x3feeaaaa0e6c90dd
.dword 0x3ff051f23fbda48b
.dword 0x3fef47ba5acd2996
.dword 0x3feeaaaa0e6c90dd
.dword 0x3ff051f23fbda48b
.dword 0x3fef47ba5acd2996
.dword 0x3feeaaaa0e6c90dd
.dword 0x3ff051f23fbda48b
.dword 0x3fef47ba5acd2996
.dword 0x3feeaaaa0e6c90dd
.dword 0x3ff051f23fbda48b
.dword 0x3fef47ba5acd2996
.dword 0x3fed20bd7b6cae9e
.dword 0x3fe51c41351f8394
.dword 0x3fe3373459a71db6
.dword 0x3fed20bd7b6cae9e
.dword 0x3fe51c41351f8394
.dword 0x3fe3373459a71db6
.dword 0x3fed20bd7b6cae9e
.dword 0x3fe51c41351f8394
.dword 0x3fe3373459a71db6
.dword 0x3fed20bd7b6cae9e
.dword 0x3fe51c41351f8394
.dword 0x3fe3373459a71db6
.dword 0x3fed20bd7b6cae9e
.dword 0x3fe51c41351f8394
.dword 0x3fe3373459a71db6
.dword 0x3fefd771fba2f7c6
.dword 0x3fe7a9eb88650dab
.dword 0x3fe78bee1cbb58bf
.dword 0x3fefd771fba2f7c6
.dword 0x3fe7a9eb88650dab
.dword 0x3fe78bee1cbb58bf
.dword 0x3fefd771fba2f7c6
.dword 0x3fe7a9eb88650dab
.dword 0x3fe78bee1cbb58bf
.dword 0x3fefd771fba2f7c6
.dword 0x3fe7a9eb88650dab
.dword 0x3fe78bee1cbb58bf
.dword 0x3fefd771fba2f7c6
.dword 0x3fe7a9eb88650dab
.dword 0x3fe78bee1cbb58bf
.dword 0x3fe991924701dd43
.dword 0x3fe3d5ba44c2ff46
.dword 0x3fdfb26949ca43b2
.dword 0x3fe991924701dd43
.dword 0x3fe3d5ba44c2ff46
.dword 0x3fdfb26949ca43b2
.dword 0x3fe991924701dd43
.dword 0x3fe3d5ba44c2ff46
.dword 0x3fdfb26949ca43b2
.dword 0x3fe991924701dd43
.dword 0x3fe3d5ba44c2ff46
.dword 0x3fdfb26949ca43b2
.dword 0x3fe991924701dd43
.dword 0x3fe3d5ba44c2ff46
.dword 0x3fdfb26949ca43b2
.dword 0x3fe0cfb82ae26079
.dword 0x3fee49833a6a1f83
.dword 0x3fdfd2b6eac079b4
.dword 0x3fe0cfb82ae26079
.dword 0x3fee49833a6a1f83
.dword 0x3fdfd2b6eac079b4
.dword 0x3fe0cfb82ae26079
.dword 0x3fee49833a6a1f83
.dword 0x3fdfd2b6eac079b4
.dword 0x3fe0cfb82ae26079
.dword 0x3fee49833a6a1f83
.dword 0x3fdfd2b6eac079b4
.dword 0x3fe0cfb82ae26079
.dword 0x3fee49833a6a1f83
.dword 0x3fdfd2b6eac079b4
.dword 0x3feff73e52a89e86
.dword 0x3fe3cf22acec6197
.dword 0x3fe3c9b6ffaa1898
.dword 0x3feff73e52a89e86
.dword 0x3fe3cf22acec6197
.dword 0x3fe3c9b6ffaa1898
.dword 0x3feff73e52a89e86
.dword 0x3fe3cf22acec6197
.dword 0x3fe3c9b6ffaa1898
.dword 0x3feff73e52a89e86
.dword 0x3fe3cf22acec6197
.dword 0x3fe3c9b6ffaa1898
.dword 0x3feff73e52a89e86
.dword 0x3fe3cf22acec6197
.dword 0x3fe3c9b6ffaa1898
.dword 0x3fe6182ef720e7c6
.dword 0x3fedd1eeb49b9a17
.dword 0x3fe496dd5344a6b0
.dword 0x3fe6182ef720e7c6
.dword 0x3fedd1eeb49b9a17
.dword 0x3fe496dd5344a6b0
.dword 0x3fe6182ef720e7c6
.dword 0x3fedd1eeb49b9a17
.dword 0x3fe496dd5344a6b0
.dword 0x3fe6182ef720e7c6
.dword 0x3fedd1eeb49b9a17
.dword 0x3fe496dd5344a6b0
.dword 0x3fe6182ef720e7c6
.dword 0x3fedd1eeb49b9a17
.dword 0x3fe496dd5344a6b0
.dword 0x3fe82d7e8bdcba00
.dword 0x3fa7441069035c9b
.dword 0x3fa194200786f220
.dword 0x3fe82d7e8bdcba00
.dword 0x3fa7441069035c9b
.dword 0x3fa194200786f220
.dword 0x3fe82d7e8bdcba00
.dword 0x3fa7441069035c9b
.dword 0x3fa194200786f220
.dword 0x3fe82d7e8bdcba00
.dword 0x3fa7441069035c9b
.dword 0x3fa194200786f220
.dword 0x3fe82d7e8bdcba00
.dword 0x3fa7441069035c9b
.dword 0x3fa194200786f220
.dword 0x3f9c08b781ee6d40
.dword 0x40308b472f2142b5
.dword 0x3fdcfcbff5696710
.dword 0x3f9c08b781ee6d40
.dword 0x40308b472f2142b5
.dword 0x3fdcfcbff5696710
.dword 0x3f9c08b781ee6d40
.dword 0x40308b472f2142b5
.dword 0x3fdcfcbff5696710
.dword 0x3f9c08b781ee6d40
.dword 0x40308b472f2142b5
.dword 0x3fdcfcbff5696710
.dword 0x3f9c08b781ee6d40
.dword 0x40308b472f2142b5
.dword 0x3fdcfcbff5696710
.dword 0x3fe79383468b1e88
.dword 0x3faa8e540ab0980b
.dword 0x3fa390b72af2dfb0
.dword 0x3fe79383468b1e88
.dword 0x3faa8e540ab0980b
.dword 0x3fa390b72af2dfb0
.dword 0x3fe79383468b1e88
.dword 0x3faa8e540ab0980b
.dword 0x3fa390b72af2dfb0
.dword 0x3fe79383468b1e88
.dword 0x3faa8e540ab0980b
.dword 0x3fa390b72af2dfb0
.dword 0x3fe79383468b1e88
.dword 0x3faa8e540ab0980b
.dword 0x3fa390b72af2dfb0
.dword 0x3feaf57d7aec81a5
.dword 0x3fe50cb3fa83fb3e
.dword 0x3fe1bbce07fc4a54
.dword 0x3feaf57d7aec81a5
.dword 0x3fe50cb3fa83fb3e
.dword 0x3fe1bbce07fc4a54
.dword 0x3feaf57d7aec81a5
.dword 0x3fe50cb3fa83fb3e
.dword 0x3fe1bbce07fc4a54
.dword 0x3feaf57d7aec81a5
.dword 0x3fe50cb3fa83fb3e
.dword 0x3fe1bbce07fc4a54
.dword 0x3feaf57d7aec81a5
.dword 0x3fe50cb3fa83fb3e
.dword 0x3fe1bbce07fc4a54
.dword 0x3fe69f43cbd1ad44
.dword 0x3fe877d480eebf7f
.dword 0x3fe14c2957423314
.dword 0x3fe69f43cbd1ad44
.dword 0x3fe877d480eebf7f
.dword 0x3fe14c2957423314
.dword 0x3fe69f43cbd1ad44
.dword 0x3fe877d480eebf7f
.dword 0x3fe14c2957423314
.dword 0x3fe69f43cbd1ad44
.dword 0x3fe877d480eebf7f
.dword 0x3fe14c2957423314
.dword 0x3fe69f43cbd1ad44
.dword 0x3fe877d480eebf7f
.dword 0x3fe14c2957423314
.dword 0x3fe6fa670d9ad9d5
.dword 0x3ff0e292b19cd50a
.dword 0x3fe83fcaa93ab0a6
.dword 0x3fe6fa670d9ad9d5
.dword 0x3ff0e292b19cd50a
.dword 0x3fe83fcaa93ab0a6
.dword 0x3fe6fa670d9ad9d5
.dword 0x3ff0e292b19cd50a
.dword 0x3fe83fcaa93ab0a6
.dword 0x3fe6fa670d9ad9d5
.dword 0x3ff0e292b19cd50a
.dword 0x3fe83fcaa93ab0a6
.dword 0x3fe6fa670d9ad9d5
.dword 0x3ff0e292b19cd50a
.dword 0x3fe83fcaa93ab0a6
.dword 0x3fc0923777e7a86c
.dword 0x40045bc5916460aa
.dword 0x3fd515d1903b8910
.dword 0x3fc0923777e7a86c
.dword 0x40045bc5916460aa
.dword 0x3fd515d1903b8910
.dword 0x3fc0923777e7a86c
.dword 0x40045bc5916460aa
.dword 0x3fd515d1903b8910
.dword 0x3fc0923777e7a86c
.dword 0x40045bc5916460aa
.dword 0x3fd515d1903b8910
.dword 0x3fc0923777e7a86c
.dword 0x40045bc5916460aa
.dword 0x3fd515d1903b8910
.dword 0x3fed4be66156ce8f
.dword 0x3fc63147bdda2b8a
.dword 0x3fc4514c49e7e884
.dword 0x3fed4be66156ce8f
.dword 0x3fc63147bdda2b8a
.dword 0x3fc4514c49e7e884
.dword 0x3fed4be66156ce8f
.dword 0x3fc63147bdda2b8a
.dword 0x3fc4514c49e7e884
.dword 0x3fed4be66156ce8f
.dword 0x3fc63147bdda2b8a
.dword 0x3fc4514c49e7e884
.dword 0x3fed4be66156ce8f
.dword 0x3fc63147bdda2b8a
.dword 0x3fc4514c49e7e884
.dword 0x3fe7d22cca46ebe9
.dword 0x3ff1fc212c485561
.dword 0x3feac6af3bc744f0
.dword 0x3fe7d22cca46ebe9
.dword 0x3ff1fc212c485561
.dword 0x3feac6af3bc744f0
.dword 0x3fe7d22cca46ebe9
.dword 0x3ff1fc212c485561
.dword 0x3feac6af3bc744f0
.dword 0x3fe7d22cca46ebe9
.dword 0x3ff1fc212c485561
.dword 0x3feac6af3bc744f0
.dword 0x3fe7d22cca46ebe9
.dword 0x3ff1fc212c485561
.dword 0x3feac6af3bc744f0
.dword 0x3fedbca3817f8a7b
.dword 0x3fd1d85bca5f2b23
.dword 0x3fd0954578f60ef8
.dword 0x3fedbca3817f8a7b
.dword 0x3fd1d85bca5f2b23
.dword 0x3fd0954578f60ef8
.dword 0x3fedbca3817f8a7b
.dword 0x3fd1d85bca5f2b23
.dword 0x3fd0954578f60ef8
.dword 0x3fedbca3817f8a7b
.dword 0x3fd1d85bca5f2b23
.dword 0x3fd0954578f60ef8
.dword 0x3fedbca3817f8a7b
.dword 0x3fd1d85bca5f2b23
.dword 0x3fd0954578f60ef8
.dword 0x3fee4272f8a6ec88
.dword 0x3fed728940035e82
.dword 0x3febd886b3f1671b
.dword 0x3fee4272f8a6ec88
.dword 0x3fed728940035e82
.dword 0x3febd886b3f1671b
.dword 0x3fee4272f8a6ec88
.dword 0x3fed728940035e82
.dword 0x3febd886b3f1671b
.dword 0x3fee4272f8a6ec88
.dword 0x3fed728940035e82
.dword 0x3febd886b3f1671b
.dword 0x3fee4272f8a6ec88
.dword 0x3fed728940035e82
.dword 0x3febd886b3f1671b
.dword 0x3fe30cb7640ad0c0
.dword 0x3ff18931256b030c
.dword 0x3fe4e0da40128d8b
.dword 0x3fe30cb7640ad0c0
.dword 0x3ff18931256b030c
.dword 0x3fe4e0da40128d8b
.dword 0x3fe30cb7640ad0c0
.dword 0x3ff18931256b030c
.dword 0x3fe4e0da40128d8b
.dword 0x3fe30cb7640ad0c0
.dword 0x3ff18931256b030c
.dword 0x3fe4e0da40128d8b
.dword 0x3fe30cb7640ad0c0
.dword 0x3ff18931256b030c
.dword 0x3fe4e0da40128d8b
.dword 0x3fd2c502d22b53c0
.dword 0x3ff3dc1a802fa803
.dword 0x3fd74c2756e1db1c
.dword 0x3fd2c502d22b53c0
.dword 0x3ff3dc1a802fa803
.dword 0x3fd74c2756e1db1c
.dword 0x3fd2c502d22b53c0
.dword 0x3ff3dc1a802fa803
.dword 0x3fd74c2756e1db1c
.dword 0x3fd2c502d22b53c0
.dword 0x3ff3dc1a802fa803
.dword 0x3fd74c2756e1db1c
.dword 0x3fd2c502d22b53c0
.dword 0x3ff3dc1a802fa803
.dword 0x3fd74c2756e1db1c
.dword 0x3fe508904f349bc9
.dword 0x3fd0547da5f301c4
.dword 0x3fc577a271e39f58
.dword 0x3fe508904f349bc9
.dword 0x3fd0547da5f301c4
.dword 0x3fc577a271e39f58
.dword 0x3fe508904f349bc9
.dword 0x3fd0547da5f301c4
.dword 0x3fc577a271e39f58
.dword 0x3fe508904f349bc9
.dword 0x3fd0547da5f301c4
.dword 0x3fc577a271e39f58
.dword 0x3fe508904f349bc9
.dword 0x3fd0547da5f301c4
.dword 0x3fc577a271e39f58
.dword 0x3fd3fc0a16474f20
.dword 0x3faccaac3ad29241
.dword 0x3f91fb1b629d92c0
.dword 0x3fd3fc0a16474f20
.dword 0x3faccaac3ad29241
.dword 0x3f91fb1b629d92c0
.dword 0x3fd3fc0a16474f20
.dword 0x3faccaac3ad29241
.dword 0x3f91fb1b629d92c0
.dword 0x3fd3fc0a16474f20
.dword 0x3faccaac3ad29241
.dword 0x3f91fb1b629d92c0
.dword 0x3fd3fc0a16474f20
.dword 0x3faccaac3ad29241
.dword 0x3f91fb1b629d92c0
.dword 0x3fe36bd6c01e666e
.dword 0x3fea02a6f04aa958
.dword 0x3fdf92751589a90c
.dword 0x3fe36bd6c01e666e
.dword 0x3fea02a6f04aa958
.dword 0x3fdf92751589a90c
.dword 0x3fe36bd6c01e666e
.dword 0x3fea02a6f04aa958
.dword 0x3fdf92751589a90c
.dword 0x3fe36bd6c01e666e
.dword 0x3fea02a6f04aa958
.dword 0x3fdf92751589a90c
.dword 0x3fe36bd6c01e666e
.dword 0x3fea02a6f04aa958
.dword 0x3fdf92751589a90c
.dword 0x3fe028f275d0fdf4
.dword 0x3fd4f5baef6f1dea
.dword 0x3fc52b5ee1c7c748
.dword 0x3fe028f275d0fdf4
.dword 0x3fd4f5baef6f1dea
.dword 0x3fc52b5ee1c7c748
.dword 0x3fe028f275d0fdf4
.dword 0x3fd4f5baef6f1dea
.dword 0x3fc52b5ee1c7c748
.dword 0x3fe028f275d0fdf4
.dword 0x3fd4f5baef6f1dea
.dword 0x3fc52b5ee1c7c748
.dword 0x3fe028f275d0fdf4
.dword 0x3fd4f5baef6f1dea
.dword 0x3fc52b5ee1c7c748
.dword 0x3fc72d9ff5992a78
.dword 0x40091607b2dac02c
.dword 0x3fe22b99e95fbbfe
.dword 0x3fc72d9ff5992a78
.dword 0x40091607b2dac02c
.dword 0x3fe22b99e95fbbfe
.dword 0x3fc72d9ff5992a78
.dword 0x40091607b2dac02c
.dword 0x3fe22b99e95fbbfe
.dword 0x3fc72d9ff5992a78
.dword 0x40091607b2dac02c
.dword 0x3fe22b99e95fbbfe
.dword 0x3fc72d9ff5992a78
.dword 0x40091607b2dac02c
.dword 0x3fe22b99e95fbbfe
.dword 0x3fb0bb3f31b1b890
.dword 0x402b59485b35c122
.dword 0x3fec9957dd5de148
.dword 0x3fb0bb3f31b1b890
.dword 0x402b59485b35c122
.dword 0x3fec9957dd5de148
.dword 0x3fb0bb3f31b1b890
.dword 0x402b59485b35c122
.dword 0x3fec9957dd5de148
.dword 0x3fb0bb3f31b1b890
.dword 0x402b59485b35c122
.dword 0x3fec9957dd5de148
.dword 0x3fb0bb3f31b1b890
.dword 0x402b59485b35c122
.dword 0x3fec9957dd5de148
.dword 0x3fe9eff8edf16c68
.dword 0x3fe4bc7d0ce48c78
.dword 0x3fe0cec2c7046c97
.dword 0x3fe9eff8edf16c68
.dword 0x3fe4bc7d0ce48c78
.dword 0x3fe0cec2c7046c97
.dword 0x3fe9eff8edf16c68
.dword 0x3fe4bc7d0ce48c78
.dword 0x3fe0cec2c7046c97
.dword 0x3fe9eff8edf16c68
.dword 0x3fe4bc7d0ce48c78
.dword 0x3fe0cec2c7046c97
.dword 0x3fe9eff8edf16c68
.dword 0x3fe4bc7d0ce48c78
.dword 0x3fe0cec2c7046c97
.dword 0x3fd1153603f46bb0
.dword 0x3ffae959b4eb2cac
.dword 0x3fdcbb9c702cf346
.dword 0x3fd1153603f46bb0
.dword 0x3ffae959b4eb2cac
.dword 0x3fdcbb9c702cf346
.dword 0x3fd1153603f46bb0
.dword 0x3ffae959b4eb2cac
.dword 0x3fdcbb9c702cf346
.dword 0x3fd1153603f46bb0
.dword 0x3ffae959b4eb2cac
.dword 0x3fdcbb9c702cf346
.dword 0x3fd1153603f46bb0
.dword 0x3ffae959b4eb2cac
.dword 0x3fdcbb9c702cf346
.dword 0x3fe7fc52e3da29f3
.dword 0x3ff504be1a8d115c
.dword 0x3fef8248dbed1fab
.dword 0x3fe7fc52e3da29f3
.dword 0x3ff504be1a8d115c
.dword 0x3fef8248dbed1fab
.dword 0x3fe7fc52e3da29f3
.dword 0x3ff504be1a8d115c
.dword 0x3fef8248dbed1fab
.dword 0x3fe7fc52e3da29f3
.dword 0x3ff504be1a8d115c
.dword 0x3fef8248dbed1fab
.dword 0x3fe7fc52e3da29f3
.dword 0x3ff504be1a8d115c
.dword 0x3fef8248dbed1fab
.dword 0x3fe4e55e1cc90863
.dword 0x3ff80eab026560b2
.dword 0x3fef6b353405a20f
.dword 0x3fe4e55e1cc90863
.dword 0x3ff80eab026560b2
.dword 0x3fef6b353405a20f
.dword 0x3fe4e55e1cc90863
.dword 0x3ff80eab026560b2
.dword 0x3fef6b353405a20f
.dword 0x3fe4e55e1cc90863
.dword 0x3ff80eab026560b2
.dword 0x3fef6b353405a20f
.dword 0x3fe4e55e1cc90863
.dword 0x3ff80eab026560b2
.dword 0x3fef6b353405a20f
.dword 0x3fdffe8c629f6c0c
.dword 0x3ffa4fd675f080ea
.dword 0x3fea4ea4e6eafc30
.dword 0x3fdffe8c629f6c0c
.dword 0x3ffa4fd675f080ea
.dword 0x3fea4ea4e6eafc30
.dword 0x3fdffe8c629f6c0c
.dword 0x3ffa4fd675f080ea
.dword 0x3fea4ea4e6eafc30
.dword 0x3fdffe8c629f6c0c
.dword 0x3ffa4fd675f080ea
.dword 0x3fea4ea4e6eafc30
.dword 0x3fdffe8c629f6c0c
.dword 0x3ffa4fd675f080ea
.dword 0x3fea4ea4e6eafc30
.dword 0x3fcec8c2dcb4c00c
.dword 0x40079e5c3ea50872
.dword 0x3fe6b8a40e379ddd
.dword 0x3fcec8c2dcb4c00c
.dword 0x40079e5c3ea50872
.dword 0x3fe6b8a40e379ddd
.dword 0x3fcec8c2dcb4c00c
.dword 0x40079e5c3ea50872
.dword 0x3fe6b8a40e379ddd
.dword 0x3fcec8c2dcb4c00c
.dword 0x40079e5c3ea50872
.dword 0x3fe6b8a40e379ddd
.dword 0x3fcec8c2dcb4c00c
.dword 0x40079e5c3ea50872
.dword 0x3fe6b8a40e379ddd
.dword 0x3fe60428817c3da5
.dword 0x3ff02998bad65ec7
.dword 0x3fe63d6551e02b09
.dword 0x3fe60428817c3da5
.dword 0x3ff02998bad65ec7
.dword 0x3fe63d6551e02b09
.dword 0x3fe60428817c3da5
.dword 0x3ff02998bad65ec7
.dword 0x3fe63d6551e02b09
.dword 0x3fe60428817c3da5
.dword 0x3ff02998bad65ec7
.dword 0x3fe63d6551e02b09
.dword 0x3fe60428817c3da5
.dword 0x3ff02998bad65ec7
.dword 0x3fe63d6551e02b09
.dword 0x3fee634a134681ac
.dword 0x3feae607e1da3637
.dword 0x3fe98b1d50456113
.dword 0x3fee634a134681ac
.dword 0x3feae607e1da3637
.dword 0x3fe98b1d50456113
.dword 0x3fee634a134681ac
.dword 0x3feae607e1da3637
.dword 0x3fe98b1d50456113
.dword 0x3fee634a134681ac
.dword 0x3feae607e1da3637
.dword 0x3fe98b1d50456113
.dword 0x3fee634a134681ac
.dword 0x3feae607e1da3637
.dword 0x3fe98b1d50456113
.dword 0x3fec7f5fa41f86ad
.dword 0x3fee21aed532adf0
.dword 0x3fead568b6f3d1b9
.dword 0x3fec7f5fa41f86ad
.dword 0x3fee21aed532adf0
.dword 0x3fead568b6f3d1b9
.dword 0x3fec7f5fa41f86ad
.dword 0x3fee21aed532adf0
.dword 0x3fead568b6f3d1b9
.dword 0x3fec7f5fa41f86ad
.dword 0x3fee21aed532adf0
.dword 0x3fead568b6f3d1b9
.dword 0x3fec7f5fa41f86ad
.dword 0x3fee21aed532adf0
.dword 0x3fead568b6f3d1b9
.dword 0x3fde47063252de6a
.dword 0x3ff9c1ab1d9e2307
.dword 0x3fe85ebb1c3f5bec
.dword 0x3fde47063252de6a
.dword 0x3ff9c1ab1d9e2307
.dword 0x3fe85ebb1c3f5bec
.dword 0x3fde47063252de6a
.dword 0x3ff9c1ab1d9e2307
.dword 0x3fe85ebb1c3f5bec
.dword 0x3fde47063252de6a
.dword 0x3ff9c1ab1d9e2307
.dword 0x3fe85ebb1c3f5bec
.dword 0x3fde47063252de6a
.dword 0x3ff9c1ab1d9e2307
.dword 0x3fe85ebb1c3f5bec
.dword 0x3fe76db16583602c
.dword 0x3ff30799ddc49483
.dword 0x3febdd63f3d3c1e4
.dword 0x3fe76db16583602c
.dword 0x3ff30799ddc49483
.dword 0x3febdd63f3d3c1e4
.dword 0x3fe76db16583602c
.dword 0x3ff30799ddc49483
.dword 0x3febdd63f3d3c1e4
.dword 0x3fe76db16583602c
.dword 0x3ff30799ddc49483
.dword 0x3febdd63f3d3c1e4
.dword 0x3fe76db16583602c
.dword 0x3ff30799ddc49483
.dword 0x3febdd63f3d3c1e4
.dword 0x3fdc9a98f4a86d46
.dword 0x3fc500636fb865bd
.dword 0x3fb2c5cd42b4d310
.dword 0x3fdc9a98f4a86d46
.dword 0x3fc500636fb865bd
.dword 0x3fb2c5cd42b4d310
.dword 0x3fdc9a98f4a86d46
.dword 0x3fc500636fb865bd
.dword 0x3fb2c5cd42b4d310
.dword 0x3fdc9a98f4a86d46
.dword 0x3fc500636fb865bd
.dword 0x3fb2c5cd42b4d310
.dword 0x3fdc9a98f4a86d46
.dword 0x3fc500636fb865bd
.dword 0x3fb2c5cd42b4d310
.dword 0x3fe17aaff3f42d33
.dword 0x3ff35b84383a00f7
.dword 0x3fe525ab2c05d4ae
.dword 0x3fe17aaff3f42d33
.dword 0x3ff35b84383a00f7
.dword 0x3fe525ab2c05d4ae
.dword 0x3fe17aaff3f42d33
.dword 0x3ff35b84383a00f7
.dword 0x3fe525ab2c05d4ae
.dword 0x3fe17aaff3f42d33
.dword 0x3ff35b84383a00f7
.dword 0x3fe525ab2c05d4ae
.dword 0x3fe17aaff3f42d33
.dword 0x3ff35b84383a00f7
.dword 0x3fe525ab2c05d4ae
.dword 0x3fedde3a6af133c3
.dword 0x3fc2d18c08b00fb1
.dword 0x3fc19096fe0d9bd8
.dword 0x3fedde3a6af133c3
.dword 0x3fc2d18c08b00fb1
.dword 0x3fc19096fe0d9bd8
.dword 0x3fedde3a6af133c3
.dword 0x3fc2d18c08b00fb1
.dword 0x3fc19096fe0d9bd8
.dword 0x3fedde3a6af133c3
.dword 0x3fc2d18c08b00fb1
.dword 0x3fc19096fe0d9bd8
.dword 0x3fedde3a6af133c3
.dword 0x3fc2d18c08b00fb1
.dword 0x3fc19096fe0d9bd8
.dword 0x3fed51fb319139f1
.dword 0x3fc415ad547ac9cd
.dword 0x3fc267199c710454
.dword 0x3fed51fb319139f1
.dword 0x3fc415ad547ac9cd
.dword 0x3fc267199c710454
.dword 0x3fed51fb319139f1
.dword 0x3fc415ad547ac9cd
.dword 0x3fc267199c710454
.dword 0x3fed51fb319139f1
.dword 0x3fc415ad547ac9cd
.dword 0x3fc267199c710454
.dword 0x3fed51fb319139f1
.dword 0x3fc415ad547ac9cd
.dword 0x3fc267199c710454
.dword 0x3fd76557d74a9df4
.dword 0x3fe15d6391f90e25
.dword 0x3fc9643bfbd4c78c
.dword 0x3fd76557d74a9df4
.dword 0x3fe15d6391f90e25
.dword 0x3fc9643bfbd4c78c
.dword 0x3fd76557d74a9df4
.dword 0x3fe15d6391f90e25
.dword 0x3fc9643bfbd4c78c
.dword 0x3fd76557d74a9df4
.dword 0x3fe15d6391f90e25
.dword 0x3fc9643bfbd4c78c
.dword 0x3fd76557d74a9df4
.dword 0x3fe15d6391f90e25
.dword 0x3fc9643bfbd4c78c
.dword 0x3fedaec8a2ec9f57
.dword 0x3fb103bacd037aaf
.dword 0x3faf90a07eec3ab0
.dword 0x3fedaec8a2ec9f57
.dword 0x3fb103bacd037aaf
.dword 0x3faf90a07eec3ab0
.dword 0x3fedaec8a2ec9f57
.dword 0x3fb103bacd037aaf
.dword 0x3faf90a07eec3ab0
.dword 0x3fedaec8a2ec9f57
.dword 0x3fb103bacd037aaf
.dword 0x3faf90a07eec3ab0
.dword 0x3fedaec8a2ec9f57
.dword 0x3fb103bacd037aaf
.dword 0x3faf90a07eec3ab0
.dword 0x3fd3f4709e8882ee
.dword 0x3ffd7d87afc0ff29
.dword 0x3fe263cd846b3a5b
.dword 0x3fd3f4709e8882ee
.dword 0x3ffd7d87afc0ff29
.dword 0x3fe263cd846b3a5b
.dword 0x3fd3f4709e8882ee
.dword 0x3ffd7d87afc0ff29
.dword 0x3fe263cd846b3a5b
.dword 0x3fd3f4709e8882ee
.dword 0x3ffd7d87afc0ff29
.dword 0x3fe263cd846b3a5b
.dword 0x3fd3f4709e8882ee
.dword 0x3ffd7d87afc0ff29
.dword 0x3fe263cd846b3a5b
.dword 0x3fed232026e23d7e
.dword 0x3ff08fa92bae5289
.dword 0x3fee28be28cd38ec
.dword 0x3fed232026e23d7e
.dword 0x3ff08fa92bae5289
.dword 0x3fee28be28cd38ec
.dword 0x3fed232026e23d7e
.dword 0x3ff08fa92bae5289
.dword 0x3fee28be28cd38ec
.dword 0x3fed232026e23d7e
.dword 0x3ff08fa92bae5289
.dword 0x3fee28be28cd38ec
.dword 0x3fed232026e23d7e
.dword 0x3ff08fa92bae5289
.dword 0x3fee28be28cd38ec
.dword 0x3fdb7b5f6c0b08d8
.dword 0x3fe6534daadc7c21
.dword 0x3fd32c5c4d623466
.dword 0x3fdb7b5f6c0b08d8
.dword 0x3fe6534daadc7c21
.dword 0x3fd32c5c4d623466
.dword 0x3fdb7b5f6c0b08d8
.dword 0x3fe6534daadc7c21
.dword 0x3fd32c5c4d623466
.dword 0x3fdb7b5f6c0b08d8
.dword 0x3fe6534daadc7c21
.dword 0x3fd32c5c4d623466
.dword 0x3fdb7b5f6c0b08d8
.dword 0x3fe6534daadc7c21
.dword 0x3fd32c5c4d623466
.dword 0x3feb3860b5da85d3
.dword 0x3fb8535758309e27
.dword 0x3fb4b12d0f86e6a0
.dword 0x3feb3860b5da85d3
.dword 0x3fb8535758309e27
.dword 0x3fb4b12d0f86e6a0
.dword 0x3feb3860b5da85d3
.dword 0x3fb8535758309e27
.dword 0x3fb4b12d0f86e6a0
.dword 0x3feb3860b5da85d3
.dword 0x3fb8535758309e27
.dword 0x3fb4b12d0f86e6a0
.dword 0x3feb3860b5da85d3
.dword 0x3fb8535758309e27
.dword 0x3fb4b12d0f86e6a0
.dword 0x3fc72bb260dd2d78
.dword 0x401061e6d769535c
.dword 0x3fe7b97996604f37
.dword 0x3fc72bb260dd2d78
.dword 0x401061e6d769535c
.dword 0x3fe7b97996604f37
.dword 0x3fc72bb260dd2d78
.dword 0x401061e6d769535c
.dword 0x3fe7b97996604f37
.dword 0x3fc72bb260dd2d78
.dword 0x401061e6d769535c
.dword 0x3fe7b97996604f37
.dword 0x3fc72bb260dd2d78
.dword 0x401061e6d769535c
.dword 0x3fe7b97996604f37
.dword 0x3fe27ce4cc9a05a7
.dword 0x3fc3a0575357dcc6
.dword 0x3fb6ad958a5e6c90
.dword 0x3fe27ce4cc9a05a7
.dword 0x3fc3a0575357dcc6
.dword 0x3fb6ad958a5e6c90
.dword 0x3fe27ce4cc9a05a7
.dword 0x3fc3a0575357dcc6
.dword 0x3fb6ad958a5e6c90
.dword 0x3fe27ce4cc9a05a7
.dword 0x3fc3a0575357dcc6
.dword 0x3fb6ad958a5e6c90
.dword 0x3fe27ce4cc9a05a7
.dword 0x3fc3a0575357dcc6
.dword 0x3fb6ad958a5e6c90
.dword 0x3fe758816cfa15b7
.dword 0x3ff31703afe812f6
.dword 0x3febdaae4cb88c4f
.dword 0x3fe758816cfa15b7
.dword 0x3ff31703afe812f6
.dword 0x3febdaae4cb88c4f
.dword 0x3fe758816cfa15b7
.dword 0x3ff31703afe812f6
.dword 0x3febdaae4cb88c4f
.dword 0x3fe758816cfa15b7
.dword 0x3ff31703afe812f6
.dword 0x3febdaae4cb88c4f
.dword 0x3fe758816cfa15b7
.dword 0x3ff31703afe812f6
.dword 0x3febdaae4cb88c4f
.dword 0x3feebbb18c605c19
.dword 0x3fcd7451e0094492
.dword 0x3fcc49cfed185d94
.dword 0x3feebbb18c605c19
.dword 0x3fcd7451e0094492
.dword 0x3fcc49cfed185d94
.dword 0x3feebbb18c605c19
.dword 0x3fcd7451e0094492
.dword 0x3fcc49cfed185d94
.dword 0x3feebbb18c605c19
.dword 0x3fcd7451e0094492
.dword 0x3fcc49cfed185d94
.dword 0x3feebbb18c605c19
.dword 0x3fcd7451e0094492
.dword 0x3fcc49cfed185d94
.dword 0x3feca5a543a9ebd8
.dword 0x3fea40b0412fbf1b
.dword 0x3fe7807f5ae98daf
.dword 0x3feca5a543a9ebd8
.dword 0x3fea40b0412fbf1b
.dword 0x3fe7807f5ae98daf
.dword 0x3feca5a543a9ebd8
.dword 0x3fea40b0412fbf1b
.dword 0x3fe7807f5ae98daf
.dword 0x3feca5a543a9ebd8
.dword 0x3fea40b0412fbf1b
.dword 0x3fe7807f5ae98daf
.dword 0x3feca5a543a9ebd8
.dword 0x3fea40b0412fbf1b
.dword 0x3fe7807f5ae98daf
.dword 0x3fcb16eb5c57d7ec
.dword 0x3fc11e5932279f62
.dword 0x3f9cfbbc0fd26100
.dword 0x3fcb16eb5c57d7ec
.dword 0x3fc11e5932279f62
.dword 0x3f9cfbbc0fd26100
.dword 0x3fcb16eb5c57d7ec
.dword 0x3fc11e5932279f62
.dword 0x3f9cfbbc0fd26100
.dword 0x3fcb16eb5c57d7ec
.dword 0x3fc11e5932279f62
.dword 0x3f9cfbbc0fd26100
.dword 0x3fcb16eb5c57d7ec
.dword 0x3fc11e5932279f62
.dword 0x3f9cfbbc0fd26100
.dword 0x3fedf1546f8c7110
.dword 0x3f9053028965855d
.dword 0x3f8e8cad14da0780
.dword 0x3fedf1546f8c7110
.dword 0x3f9053028965855d
.dword 0x3f8e8cad14da0780
.dword 0x3fedf1546f8c7110
.dword 0x3f9053028965855d
.dword 0x3f8e8cad14da0780
.dword 0x3fedf1546f8c7110
.dword 0x3f9053028965855d
.dword 0x3f8e8cad14da0780
.dword 0x3fedf1546f8c7110
.dword 0x3f9053028965855d
.dword 0x3f8e8cad14da0780
.dword 0x3fd811942da2e8f6
.dword 0x3ff4c03293b52579
.dword 0x3fdf37184050555a
.dword 0x3fd811942da2e8f6
.dword 0x3ff4c03293b52579
.dword 0x3fdf37184050555a
.dword 0x3fd811942da2e8f6
.dword 0x3ff4c03293b52579
.dword 0x3fdf37184050555a
.dword 0x3fd811942da2e8f6
.dword 0x3ff4c03293b52579
.dword 0x3fdf37184050555a
.dword 0x3fd811942da2e8f6
.dword 0x3ff4c03293b52579
.dword 0x3fdf37184050555a
.dword 0x3fef6bdf56766e62
.dword 0x3fe5c93766cd5784
.dword 0x3fe5645e89ee25d2
.dword 0x3fef6bdf56766e62
.dword 0x3fe5c93766cd5784
.dword 0x3fe5645e89ee25d2
.dword 0x3fef6bdf56766e62
.dword 0x3fe5c93766cd5784
.dword 0x3fe5645e89ee25d2
.dword 0x3fef6bdf56766e62
.dword 0x3fe5c93766cd5784
.dword 0x3fe5645e89ee25d2
.dword 0x3fef6bdf56766e62
.dword 0x3fe5c93766cd5784
.dword 0x3fe5645e89ee25d2
.dword 0x3fdc8a70d454a46c
.dword 0x3ff41354de16dc9d
.dword 0x3fe1e7c4692ff916
.dword 0x3fdc8a70d454a46c
.dword 0x3ff41354de16dc9d
.dword 0x3fe1e7c4692ff916
.dword 0x3fdc8a70d454a46c
.dword 0x3ff41354de16dc9d
.dword 0x3fe1e7c4692ff916
.dword 0x3fdc8a70d454a46c
.dword 0x3ff41354de16dc9d
.dword 0x3fe1e7c4692ff916
.dword 0x3fdc8a70d454a46c
.dword 0x3ff41354de16dc9d
.dword 0x3fe1e7c4692ff916
.dword 0x3fd1c847dd12877e
.dword 0x400c3b4c84a9b4a9
.dword 0x3fef606556a5e8a8
.dword 0x3fd1c847dd12877e
.dword 0x400c3b4c84a9b4a9
.dword 0x3fef606556a5e8a8
.dword 0x3fd1c847dd12877e
.dword 0x400c3b4c84a9b4a9
.dword 0x3fef606556a5e8a8
.dword 0x3fd1c847dd12877e
.dword 0x400c3b4c84a9b4a9
.dword 0x3fef606556a5e8a8
.dword 0x3fd1c847dd12877e
.dword 0x400c3b4c84a9b4a9
.dword 0x3fef606556a5e8a8
.dword 0x3fe9bc75ae92d393
.dword 0x3feb1d6037170d84
.dword 0x3fe5cea377a197e4
.dword 0x3fe9bc75ae92d393
.dword 0x3feb1d6037170d84
.dword 0x3fe5cea377a197e4
.dword 0x3fe9bc75ae92d393
.dword 0x3feb1d6037170d84
.dword 0x3fe5cea377a197e4
.dword 0x3fe9bc75ae92d393
.dword 0x3feb1d6037170d84
.dword 0x3fe5cea377a197e4
.dword 0x3fe9bc75ae92d393
.dword 0x3feb1d6037170d84
.dword 0x3fe5cea377a197e4
.dword 0x3fdf0053a4c4ff66
.dword 0x3ff5d45fd5bf3603
.dword 0x3fe525f5e6509ce7
.dword 0x3fdf0053a4c4ff66
.dword 0x3ff5d45fd5bf3603
.dword 0x3fe525f5e6509ce7
.dword 0x3fdf0053a4c4ff66
.dword 0x3ff5d45fd5bf3603
.dword 0x3fe525f5e6509ce7
.dword 0x3fdf0053a4c4ff66
.dword 0x3ff5d45fd5bf3603
.dword 0x3fe525f5e6509ce7
.dword 0x3fdf0053a4c4ff66
.dword 0x3ff5d45fd5bf3603
.dword 0x3fe525f5e6509ce7
.dword 0x3fead545212cb985
.dword 0x3fe5b1b56f96c571
.dword 0x3fe230f9280611d5
.dword 0x3fead545212cb985
.dword 0x3fe5b1b56f96c571
.dword 0x3fe230f9280611d5
.dword 0x3fead545212cb985
.dword 0x3fe5b1b56f96c571
.dword 0x3fe230f9280611d5
.dword 0x3fead545212cb985
.dword 0x3fe5b1b56f96c571
.dword 0x3fe230f9280611d5
.dword 0x3fead545212cb985
.dword 0x3fe5b1b56f96c571
.dword 0x3fe230f9280611d5
.dword 0x3f84be465508e640
.dword 0x40308afa5318307d
.dword 0x3fc57273fc6baccc
.dword 0x3f84be465508e640
.dword 0x40308afa5318307d
.dword 0x3fc57273fc6baccc
.dword 0x3f84be465508e640
.dword 0x40308afa5318307d
.dword 0x3fc57273fc6baccc
.dword 0x3f84be465508e640
.dword 0x40308afa5318307d
.dword 0x3fc57273fc6baccc
.dword 0x3f84be465508e640
.dword 0x40308afa5318307d
.dword 0x3fc57273fc6baccc
.dword 0x3fe3417acc75d428
.dword 0x3feb4451fcd63c6c
.dword 0x3fe0685c17594c3a
.dword 0x3fe3417acc75d428
.dword 0x3feb4451fcd63c6c
.dword 0x3fe0685c17594c3a
.dword 0x3fe3417acc75d428
.dword 0x3feb4451fcd63c6c
.dword 0x3fe0685c17594c3a
.dword 0x3fe3417acc75d428
.dword 0x3feb4451fcd63c6c
.dword 0x3fe0685c17594c3a
.dword 0x3fe3417acc75d428
.dword 0x3feb4451fcd63c6c
.dword 0x3fe0685c17594c3a
.dword 0x3fe8f922f10365c6
.dword 0x3faf290a2646769e
.dword 0x3fa85160f9f9d950
.dword 0x3fe8f922f10365c6
.dword 0x3faf290a2646769e
.dword 0x3fa85160f9f9d950
.dword 0x3fe8f922f10365c6
.dword 0x3faf290a2646769e
.dword 0x3fa85160f9f9d950
.dword 0x3fe8f922f10365c6
.dword 0x3faf290a2646769e
.dword 0x3fa85160f9f9d950
.dword 0x3fe8f922f10365c6
.dword 0x3faf290a2646769e
.dword 0x3fa85160f9f9d950
.dword 0x3fbdfeaadb9b9c40
.dword 0x3fd1ba5b1126bc5d
.dword 0x3fa09df862109dc0
.dword 0x3fbdfeaadb9b9c40
.dword 0x3fd1ba5b1126bc5d
.dword 0x3fa09df862109dc0
.dword 0x3fbdfeaadb9b9c40
.dword 0x3fd1ba5b1126bc5d
.dword 0x3fa09df862109dc0
.dword 0x3fbdfeaadb9b9c40
.dword 0x3fd1ba5b1126bc5d
.dword 0x3fa09df862109dc0
.dword 0x3fbdfeaadb9b9c40
.dword 0x3fd1ba5b1126bc5d
.dword 0x3fa09df862109dc0
.dword 0x3fd5be5b75120e80
.dword 0x40042e305a3e34f5
.dword 0x3feb6cb74efcd14d
.dword 0x3fd5be5b75120e80
.dword 0x40042e305a3e34f5
.dword 0x3feb6cb74efcd14d
.dword 0x3fd5be5b75120e80
.dword 0x40042e305a3e34f5
.dword 0x3feb6cb74efcd14d
.dword 0x3fd5be5b75120e80
.dword 0x40042e305a3e34f5
.dword 0x3feb6cb74efcd14d
.dword 0x3fd5be5b75120e80
.dword 0x40042e305a3e34f5
.dword 0x3feb6cb74efcd14d
.dword 0x3feb0ec5f43df27e
.dword 0x3fd57ca5fea6ecd2
.dword 0x3fd22b1782da32b2
.dword 0x3feb0ec5f43df27e
.dword 0x3fd57ca5fea6ecd2
.dword 0x3fd22b1782da32b2
.dword 0x3feb0ec5f43df27e
.dword 0x3fd57ca5fea6ecd2
.dword 0x3fd22b1782da32b2
.dword 0x3feb0ec5f43df27e
.dword 0x3fd57ca5fea6ecd2
.dword 0x3fd22b1782da32b2
.dword 0x3feb0ec5f43df27e
.dword 0x3fd57ca5fea6ecd2
.dword 0x3fd22b1782da32b2
.dword 0x3fcba7fc0e0adadc
.dword 0x3fde806c3ac92c4c
.dword 0x3fba5c79c7235e48
.dword 0x3fcba7fc0e0adadc
.dword 0x3fde806c3ac92c4c
.dword 0x3fba5c79c7235e48
.dword 0x3fcba7fc0e0adadc
.dword 0x3fde806c3ac92c4c
.dword 0x3fba5c79c7235e48
.dword 0x3fcba7fc0e0adadc
.dword 0x3fde806c3ac92c4c
.dword 0x3fba5c79c7235e48
.dword 0x3fcba7fc0e0adadc
.dword 0x3fde806c3ac92c4c
.dword 0x3fba5c79c7235e48
.dword 0x3feda8fea32634a6
.dword 0x3fd6d2951da42bce
.dword 0x3fd5275e4d93e80c
.dword 0x3feda8fea32634a6
.dword 0x3fd6d2951da42bce
.dword 0x3fd5275e4d93e80c
.dword 0x3feda8fea32634a6
.dword 0x3fd6d2951da42bce
.dword 0x3fd5275e4d93e80c
.dword 0x3feda8fea32634a6
.dword 0x3fd6d2951da42bce
.dword 0x3fd5275e4d93e80c
.dword 0x3feda8fea32634a6
.dword 0x3fd6d2951da42bce
.dword 0x3fd5275e4d93e80c
.dword 0x3fedadb3cd50bca1
.dword 0x3fea33461ae28bce
.dword 0x3fe84caff2496196
.dword 0x3fedadb3cd50bca1
.dword 0x3fea33461ae28bce
.dword 0x3fe84caff2496196
.dword 0x3fedadb3cd50bca1
.dword 0x3fea33461ae28bce
.dword 0x3fe84caff2496196
.dword 0x3fedadb3cd50bca1
.dword 0x3fea33461ae28bce
.dword 0x3fe84caff2496196
.dword 0x3fedadb3cd50bca1
.dword 0x3fea33461ae28bce
.dword 0x3fe84caff2496196
.dword 0x3fec1bac466e3809
.dword 0x3fe452f692527aef
.dword 0x3fe1da2b2abc6fcb
.dword 0x3fec1bac466e3809
.dword 0x3fe452f692527aef
.dword 0x3fe1da2b2abc6fcb
.dword 0x3fec1bac466e3809
.dword 0x3fe452f692527aef
.dword 0x3fe1da2b2abc6fcb
.dword 0x3fec1bac466e3809
.dword 0x3fe452f692527aef
.dword 0x3fe1da2b2abc6fcb
.dword 0x3fec1bac466e3809
.dword 0x3fe452f692527aef
.dword 0x3fe1da2b2abc6fcb
.dword 0x3fc47ae318d6eca8
.dword 0x4015925506beafb3
.dword 0x3feb9c983e555d19
.dword 0x3fc47ae318d6eca8
.dword 0x4015925506beafb3
.dword 0x3feb9c983e555d19
.dword 0x3fc47ae318d6eca8
.dword 0x4015925506beafb3
.dword 0x3feb9c983e555d19
.dword 0x3fc47ae318d6eca8
.dword 0x4015925506beafb3
.dword 0x3feb9c983e555d19
.dword 0x3fc47ae318d6eca8
.dword 0x4015925506beafb3
.dword 0x3feb9c983e555d19
.dword 0x3fdc30ed00dba34e
.dword 0x3fc07c652db859b4
.dword 0x3fad0c1a7308ca30
.dword 0x3fdc30ed00dba34e
.dword 0x3fc07c652db859b4
.dword 0x3fad0c1a7308ca30
.dword 0x3fdc30ed00dba34e
.dword 0x3fc07c652db859b4
.dword 0x3fad0c1a7308ca30
.dword 0x3fdc30ed00dba34e
.dword 0x3fc07c652db859b4
.dword 0x3fad0c1a7308ca30
.dword 0x3fdc30ed00dba34e
.dword 0x3fc07c652db859b4
.dword 0x3fad0c1a7308ca30
.dword 0x3fad9a81849ec5c0
.dword 0x40299c6d487016f1
.dword 0x3fe7b16b804f11a8
.dword 0x3fad9a81849ec5c0
.dword 0x40299c6d487016f1
.dword 0x3fe7b16b804f11a8
.dword 0x3fad9a81849ec5c0
.dword 0x40299c6d487016f1
.dword 0x3fe7b16b804f11a8
.dword 0x3fad9a81849ec5c0
.dword 0x40299c6d487016f1
.dword 0x3fe7b16b804f11a8
.dword 0x3fad9a81849ec5c0
.dword 0x40299c6d487016f1
.dword 0x3fe7b16b804f11a8
.dword 0x3fd34003a3d07776
.dword 0x3fda454693f4f9a6
.dword 0x3fbf9b5ee3f7ffd8
.dword 0x3fd34003a3d07776
.dword 0x3fda454693f4f9a6
.dword 0x3fbf9b5ee3f7ffd8
.dword 0x3fd34003a3d07776
.dword 0x3fda454693f4f9a6
.dword 0x3fbf9b5ee3f7ffd8
.dword 0x3fd34003a3d07776
.dword 0x3fda454693f4f9a6
.dword 0x3fbf9b5ee3f7ffd8
.dword 0x3fd34003a3d07776
.dword 0x3fda454693f4f9a6
.dword 0x3fbf9b5ee3f7ffd8
.dword 0x3fe0b3ed2df80fe6
.dword 0x3fbcb0ebd2cc8b77
.dword 0x3fadf39070266850
.dword 0x3fe0b3ed2df80fe6
.dword 0x3fbcb0ebd2cc8b77
.dword 0x3fadf39070266850
.dword 0x3fe0b3ed2df80fe6
.dword 0x3fbcb0ebd2cc8b77
.dword 0x3fadf39070266850
.dword 0x3fe0b3ed2df80fe6
.dword 0x3fbcb0ebd2cc8b77
.dword 0x3fadf39070266850
.dword 0x3fe0b3ed2df80fe6
.dword 0x3fbcb0ebd2cc8b77
.dword 0x3fadf39070266850
.dword 0x3fe186621df7a5ea
.dword 0x3feb4546e5fe80be
.dword 0x3fdddea6c18a85b8
.dword 0x3fe186621df7a5ea
.dword 0x3feb4546e5fe80be
.dword 0x3fdddea6c18a85b8
.dword 0x3fe186621df7a5ea
.dword 0x3feb4546e5fe80be
.dword 0x3fdddea6c18a85b8
.dword 0x3fe186621df7a5ea
.dword 0x3feb4546e5fe80be
.dword 0x3fdddea6c18a85b8
.dword 0x3fe186621df7a5ea
.dword 0x3feb4546e5fe80be
.dword 0x3fdddea6c18a85b8
.dword 0x3fdf38bf16679f4c
.dword 0x3fe427cbf4dcb848
.dword 0x3fd3aa4b95c852f4
.dword 0x3fdf38bf16679f4c
.dword 0x3fe427cbf4dcb848
.dword 0x3fd3aa4b95c852f4
.dword 0x3fdf38bf16679f4c
.dword 0x3fe427cbf4dcb848
.dword 0x3fd3aa4b95c852f4
.dword 0x3fdf38bf16679f4c
.dword 0x3fe427cbf4dcb848
.dword 0x3fd3aa4b95c852f4
.dword 0x3fdf38bf16679f4c
.dword 0x3fe427cbf4dcb848
.dword 0x3fd3aa4b95c852f4
.dword 0x3fd8cc57d8368ee8
.dword 0x3ff46ad6ca7b6828
.dword 0x3fdfa5047b26a14a
.dword 0x3fd8cc57d8368ee8
.dword 0x3ff46ad6ca7b6828
.dword 0x3fdfa5047b26a14a
.dword 0x3fd8cc57d8368ee8
.dword 0x3ff46ad6ca7b6828
.dword 0x3fdfa5047b26a14a
.dword 0x3fd8cc57d8368ee8
.dword 0x3ff46ad6ca7b6828
.dword 0x3fdfa5047b26a14a
.dword 0x3fd8cc57d8368ee8
.dword 0x3ff46ad6ca7b6828
.dword 0x3fdfa5047b26a14a
.dword 0x3fb6672f1df8e1f0
.dword 0x401972b19b4031b8
.dword 0x3fe1d0e8beb29257
.dword 0x3fb6672f1df8e1f0
.dword 0x401972b19b4031b8
.dword 0x3fe1d0e8beb29257
.dword 0x3fb6672f1df8e1f0
.dword 0x401972b19b4031b8
.dword 0x3fe1d0e8beb29257
.dword 0x3fb6672f1df8e1f0
.dword 0x401972b19b4031b8
.dword 0x3fe1d0e8beb29257
.dword 0x3fb6672f1df8e1f0
.dword 0x401972b19b4031b8
.dword 0x3fe1d0e8beb29257
.dword 0x3fdc0ca02fc6ee52
.dword 0x3fe1861fa95ced4d
.dword 0x3fceb88b71b22068
.dword 0x3fdc0ca02fc6ee52
.dword 0x3fe1861fa95ced4d
.dword 0x3fceb88b71b22068
.dword 0x3fdc0ca02fc6ee52
.dword 0x3fe1861fa95ced4d
.dword 0x3fceb88b71b22068
.dword 0x3fdc0ca02fc6ee52
.dword 0x3fe1861fa95ced4d
.dword 0x3fceb88b71b22068
.dword 0x3fdc0ca02fc6ee52
.dword 0x3fe1861fa95ced4d
.dword 0x3fceb88b71b22068
.dword 0x3fcd268c5e6fa2a8
.dword 0x40014b01d4c63626
.dword 0x3fdf819d2c61f198
.dword 0x3fcd268c5e6fa2a8
.dword 0x40014b01d4c63626
.dword 0x3fdf819d2c61f198
.dword 0x3fcd268c5e6fa2a8
.dword 0x40014b01d4c63626
.dword 0x3fdf819d2c61f198
.dword 0x3fcd268c5e6fa2a8
.dword 0x40014b01d4c63626
.dword 0x3fdf819d2c61f198
.dword 0x3fcd268c5e6fa2a8
.dword 0x40014b01d4c63626
.dword 0x3fdf819d2c61f198
.dword 0x3fe80c55a33c1a3f
.dword 0x3feeca2b7746a109
.dword 0x3fe7237ecfd4c9d1
.dword 0x3fe80c55a33c1a3f
.dword 0x3feeca2b7746a109
.dword 0x3fe7237ecfd4c9d1
.dword 0x3fe80c55a33c1a3f
.dword 0x3feeca2b7746a109
.dword 0x3fe7237ecfd4c9d1
.dword 0x3fe80c55a33c1a3f
.dword 0x3feeca2b7746a109
.dword 0x3fe7237ecfd4c9d1
.dword 0x3fe80c55a33c1a3f
.dword 0x3feeca2b7746a109
.dword 0x3fe7237ecfd4c9d1
.dword 0x3fec9ac06c779321
.dword 0x3fdf7b45dc8f3c8c
.dword 0x3fdc241baf8ba09c
.dword 0x3fec9ac06c779321
.dword 0x3fdf7b45dc8f3c8c
.dword 0x3fdc241baf8ba09c
.dword 0x3fec9ac06c779321
.dword 0x3fdf7b45dc8f3c8c
.dword 0x3fdc241baf8ba09c
.dword 0x3fec9ac06c779321
.dword 0x3fdf7b45dc8f3c8c
.dword 0x3fdc241baf8ba09c
.dword 0x3fec9ac06c779321
.dword 0x3fdf7b45dc8f3c8c
.dword 0x3fdc241baf8ba09c
.dword 0x3fdc73a3ec23ddda
.dword 0x3fdf0e8bbdd6256b
.dword 0x3fcb9cf5a3937f20
.dword 0x3fdc73a3ec23ddda
.dword 0x3fdf0e8bbdd6256b
.dword 0x3fcb9cf5a3937f20
.dword 0x3fdc73a3ec23ddda
.dword 0x3fdf0e8bbdd6256b
.dword 0x3fcb9cf5a3937f20
.dword 0x3fdc73a3ec23ddda
.dword 0x3fdf0e8bbdd6256b
.dword 0x3fcb9cf5a3937f20
.dword 0x3fdc73a3ec23ddda
.dword 0x3fdf0e8bbdd6256b
.dword 0x3fcb9cf5a3937f20
.dword 0x3fe5918de1454aee
.dword 0x3fe6ddfb02284956
.dword 0x3fded35febc1128c
.dword 0x3fe5918de1454aee
.dword 0x3fe6ddfb02284956
.dword 0x3fded35febc1128c
.dword 0x3fe5918de1454aee
.dword 0x3fe6ddfb02284956
.dword 0x3fded35febc1128c
.dword 0x3fe5918de1454aee
.dword 0x3fe6ddfb02284956
.dword 0x3fded35febc1128c
.dword 0x3fe5918de1454aee
.dword 0x3fe6ddfb02284956
.dword 0x3fded35febc1128c
.dword 0x3fd1966ef7098cf6
.dword 0x3ff9d2bd70e5a48d
.dword 0x3fdc62b40f818672
.dword 0x3fd1966ef7098cf6
.dword 0x3ff9d2bd70e5a48d
.dword 0x3fdc62b40f818672
.dword 0x3fd1966ef7098cf6
.dword 0x3ff9d2bd70e5a48d
.dword 0x3fdc62b40f818672
.dword 0x3fd1966ef7098cf6
.dword 0x3ff9d2bd70e5a48d
.dword 0x3fdc62b40f818672
.dword 0x3fd1966ef7098cf6
.dword 0x3ff9d2bd70e5a48d
.dword 0x3fdc62b40f818672
.dword 0x3fea7c22bf6f0b2b
.dword 0x3fe45b4ba94c6156
.dword 0x3fe0d92559860a54
.dword 0x3fea7c22bf6f0b2b
.dword 0x3fe45b4ba94c6156
.dword 0x3fe0d92559860a54
.dword 0x3fea7c22bf6f0b2b
.dword 0x3fe45b4ba94c6156
.dword 0x3fe0d92559860a54
.dword 0x3fea7c22bf6f0b2b
.dword 0x3fe45b4ba94c6156
.dword 0x3fe0d92559860a54
.dword 0x3fea7c22bf6f0b2b
.dword 0x3fe45b4ba94c6156
.dword 0x3fe0d92559860a54
.dword 0x3fefdfc8fce5560b
.dword 0x3fc9cec37efa48a3
.dword 0x3fc9b4c85d9a68b8
.dword 0x3fefdfc8fce5560b
.dword 0x3fc9cec37efa48a3
.dword 0x3fc9b4c85d9a68b8
.dword 0x3fefdfc8fce5560b
.dword 0x3fc9cec37efa48a3
.dword 0x3fc9b4c85d9a68b8
.dword 0x3fefdfc8fce5560b
.dword 0x3fc9cec37efa48a3
.dword 0x3fc9b4c85d9a68b8
.dword 0x3fefdfc8fce5560b
.dword 0x3fc9cec37efa48a3
.dword 0x3fc9b4c85d9a68b8
.dword 0x3fe1ea7f28e4db92
.dword 0x3ff75850bc5cb42d
.dword 0x3fea23faed90d70e
.dword 0x3fe1ea7f28e4db92
.dword 0x3ff75850bc5cb42d
.dword 0x3fea23faed90d70e
.dword 0x3fe1ea7f28e4db92
.dword 0x3ff75850bc5cb42d
.dword 0x3fea23faed90d70e
.dword 0x3fe1ea7f28e4db92
.dword 0x3ff75850bc5cb42d
.dword 0x3fea23faed90d70e
.dword 0x3fe1ea7f28e4db92
.dword 0x3ff75850bc5cb42d
.dword 0x3fea23faed90d70e
.dword 0x3fde7ede3bea6654
.dword 0x400079abc3331aca
.dword 0x3fef66c50c823f40
.dword 0x3fde7ede3bea6654
.dword 0x400079abc3331aca
.dword 0x3fef66c50c823f40
.dword 0x3fde7ede3bea6654
.dword 0x400079abc3331aca
.dword 0x3fef66c50c823f40
.dword 0x3fde7ede3bea6654
.dword 0x400079abc3331aca
.dword 0x3fef66c50c823f40
.dword 0x3fde7ede3bea6654
.dword 0x400079abc3331aca
.dword 0x3fef66c50c823f40
.dword 0x3fdfe4fbd6f43266
.dword 0x3fee0ff5cebdbd86
.dword 0x3fddf6946ec90a02
.dword 0x3fdfe4fbd6f43266
.dword 0x3fee0ff5cebdbd86
.dword 0x3fddf6946ec90a02
.dword 0x3fdfe4fbd6f43266
.dword 0x3fee0ff5cebdbd86
.dword 0x3fddf6946ec90a02
.dword 0x3fdfe4fbd6f43266
.dword 0x3fee0ff5cebdbd86
.dword 0x3fddf6946ec90a02
.dword 0x3fdfe4fbd6f43266
.dword 0x3fee0ff5cebdbd86
.dword 0x3fddf6946ec90a02
.dword 0x3fe28a3694b1024c
.dword 0x3fc22d840cd180b1
.dword 0x3fb5103b23e60a98
.dword 0x3fe28a3694b1024c
.dword 0x3fc22d840cd180b1
.dword 0x3fb5103b23e60a98
.dword 0x3fe28a3694b1024c
.dword 0x3fc22d840cd180b1
.dword 0x3fb5103b23e60a98
.dword 0x3fe28a3694b1024c
.dword 0x3fc22d840cd180b1
.dword 0x3fb5103b23e60a98
.dword 0x3fe28a3694b1024c
.dword 0x3fc22d840cd180b1
.dword 0x3fb5103b23e60a98
.dword 0x3fdaaa69e97ac8a0
.dword 0x3fcd66afd1339591
.dword 0x3fb88001af76b200
.dword 0x3fdaaa69e97ac8a0
.dword 0x3fcd66afd1339591
.dword 0x3fb88001af76b200
.dword 0x3fdaaa69e97ac8a0
.dword 0x3fcd66afd1339591
.dword 0x3fb88001af76b200
.dword 0x3fdaaa69e97ac8a0
.dword 0x3fcd66afd1339591
.dword 0x3fb88001af76b200
.dword 0x3fdaaa69e97ac8a0
.dword 0x3fcd66afd1339591
.dword 0x3fb88001af76b200
.dword 0x3fe4adcd2068c049
.dword 0x3fead4d37ef90056
.dword 0x3fe156bec559a033
.dword 0x3fe4adcd2068c049
.dword 0x3fead4d37ef90056
.dword 0x3fe156bec559a033
.dword 0x3fe4adcd2068c049
.dword 0x3fead4d37ef90056
.dword 0x3fe156bec559a033
.dword 0x3fe4adcd2068c049
.dword 0x3fead4d37ef90056
.dword 0x3fe156bec559a033
.dword 0x3fe4adcd2068c049
.dword 0x3fead4d37ef90056
.dword 0x3fe156bec559a033
.dword 0x3febce3e93c1a23f
.dword 0x3fba82ad488d1bd0
.dword 0x3fb7091f48528f00
.dword 0x3febce3e93c1a23f
.dword 0x3fba82ad488d1bd0
.dword 0x3fb7091f48528f00
.dword 0x3febce3e93c1a23f
.dword 0x3fba82ad488d1bd0
.dword 0x3fb7091f48528f00
.dword 0x3febce3e93c1a23f
.dword 0x3fba82ad488d1bd0
.dword 0x3fb7091f48528f00
.dword 0x3febce3e93c1a23f
.dword 0x3fba82ad488d1bd0
.dword 0x3fb7091f48528f00
.dword 0x3fe7b34899d29531
.dword 0x3fe91a2c04082ad8
.dword 0x3fe29772fca9c8ca
.dword 0x3fe7b34899d29531
.dword 0x3fe91a2c04082ad8
.dword 0x3fe29772fca9c8ca
.dword 0x3fe7b34899d29531
.dword 0x3fe91a2c04082ad8
.dword 0x3fe29772fca9c8ca
.dword 0x3fe7b34899d29531
.dword 0x3fe91a2c04082ad8
.dword 0x3fe29772fca9c8ca
.dword 0x3fe7b34899d29531
.dword 0x3fe91a2c04082ad8
.dword 0x3fe29772fca9c8ca
.dword 0x3fe84d8054f1fdee
.dword 0x3fe16cf023ccfdc0
.dword 0x3fda77d03d645fb8
.dword 0x3fe84d8054f1fdee
.dword 0x3fe16cf023ccfdc0
.dword 0x3fda77d03d645fb8
.dword 0x3fe84d8054f1fdee
.dword 0x3fe16cf023ccfdc0
.dword 0x3fda77d03d645fb8
.dword 0x3fe84d8054f1fdee
.dword 0x3fe16cf023ccfdc0
.dword 0x3fda77d03d645fb8
.dword 0x3fe84d8054f1fdee
.dword 0x3fe16cf023ccfdc0
.dword 0x3fda77d03d645fb8
.dword 0x3fe7f0f81f261d0e
.dword 0x3fee3da0f9e5f6ca
.dword 0x3fe6a00465fecf69
.dword 0x3fe7f0f81f261d0e
.dword 0x3fee3da0f9e5f6ca
.dword 0x3fe6a00465fecf69
.dword 0x3fe7f0f81f261d0e
.dword 0x3fee3da0f9e5f6ca
.dword 0x3fe6a00465fecf69
.dword 0x3fe7f0f81f261d0e
.dword 0x3fee3da0f9e5f6ca
.dword 0x3fe6a00465fecf69
.dword 0x3fe7f0f81f261d0e
.dword 0x3fee3da0f9e5f6ca
.dword 0x3fe6a00465fecf69
.dword 0x3fc6408b72047a40
.dword 0x4012273529a4b59c
.dword 0x3fe93f2423e3559d
.dword 0x3fc6408b72047a40
.dword 0x4012273529a4b59c
.dword 0x3fe93f2423e3559d
.dword 0x3fc6408b72047a40
.dword 0x4012273529a4b59c
.dword 0x3fe93f2423e3559d
.dword 0x3fc6408b72047a40
.dword 0x4012273529a4b59c
.dword 0x3fe93f2423e3559d
.dword 0x3fc6408b72047a40
.dword 0x4012273529a4b59c
.dword 0x3fe93f2423e3559d
.dword 0x3fe21e3bac0dc5fe
.dword 0x3fccfed09bbb488b
.dword 0x3fc06aba4ce213b4
.dword 0x3fe21e3bac0dc5fe
.dword 0x3fccfed09bbb488b
.dword 0x3fc06aba4ce213b4
.dword 0x3fe21e3bac0dc5fe
.dword 0x3fccfed09bbb488b
.dword 0x3fc06aba4ce213b4
.dword 0x3fe21e3bac0dc5fe
.dword 0x3fccfed09bbb488b
.dword 0x3fc06aba4ce213b4
.dword 0x3fe21e3bac0dc5fe
.dword 0x3fccfed09bbb488b
.dword 0x3fc06aba4ce213b4
.dword 0x3fde4c7f02010820
.dword 0x3fc1f233c266d871
.dword 0x3fb0fdf6fb8b4210
.dword 0x3fde4c7f02010820
.dword 0x3fc1f233c266d871
.dword 0x3fb0fdf6fb8b4210
.dword 0x3fde4c7f02010820
.dword 0x3fc1f233c266d871
.dword 0x3fb0fdf6fb8b4210
.dword 0x3fde4c7f02010820
.dword 0x3fc1f233c266d871
.dword 0x3fb0fdf6fb8b4210
.dword 0x3fde4c7f02010820
.dword 0x3fc1f233c266d871
.dword 0x3fb0fdf6fb8b4210
.dword 0x3f9dcef723064e60
.dword 0x402811b83ff24780
.dword 0x3fd66bbaef2d85da
.dword 0x3f9dcef723064e60
.dword 0x402811b83ff24780
.dword 0x3fd66bbaef2d85da
.dword 0x3f9dcef723064e60
.dword 0x402811b83ff24780
.dword 0x3fd66bbaef2d85da
.dword 0x3f9dcef723064e60
.dword 0x402811b83ff24780
.dword 0x3fd66bbaef2d85da
.dword 0x3f9dcef723064e60
.dword 0x402811b83ff24780
.dword 0x3fd66bbaef2d85da
.dword 0x3febcefaf3ea16fe
.dword 0x3ff2263e6c5cc73f
.dword 0x3fef8b5264cd755c
.dword 0x3febcefaf3ea16fe
.dword 0x3ff2263e6c5cc73f
.dword 0x3fef8b5264cd755c
.dword 0x3febcefaf3ea16fe
.dword 0x3ff2263e6c5cc73f
.dword 0x3fef8b5264cd755c
.dword 0x3febcefaf3ea16fe
.dword 0x3ff2263e6c5cc73f
.dword 0x3fef8b5264cd755c
.dword 0x3febcefaf3ea16fe
.dword 0x3ff2263e6c5cc73f
.dword 0x3fef8b5264cd755c
.dword 0x3fe4c9762f60587f
.dword 0x3fe63bd733f9210a
.dword 0x3fdce2c0fb9d1c76
.dword 0x3fe4c9762f60587f
.dword 0x3fe63bd733f9210a
.dword 0x3fdce2c0fb9d1c76
.dword 0x3fe4c9762f60587f
.dword 0x3fe63bd733f9210a
.dword 0x3fdce2c0fb9d1c76
.dword 0x3fe4c9762f60587f
.dword 0x3fe63bd733f9210a
.dword 0x3fdce2c0fb9d1c76
.dword 0x3fe4c9762f60587f
.dword 0x3fe63bd733f9210a
.dword 0x3fdce2c0fb9d1c76
.dword 0x3f942aadc34845c0
.dword 0x4031671dd577d57d
.dword 0x3fd5ef50f880110a
.dword 0x3f942aadc34845c0
.dword 0x4031671dd577d57d
.dword 0x3fd5ef50f880110a
.dword 0x3f942aadc34845c0
.dword 0x4031671dd577d57d
.dword 0x3fd5ef50f880110a
.dword 0x3f942aadc34845c0
.dword 0x4031671dd577d57d
.dword 0x3fd5ef50f880110a
.dword 0x3f942aadc34845c0
.dword 0x4031671dd577d57d
.dword 0x3fd5ef50f880110a
.dword 0x3feb528a418dbfb9
.dword 0x3fca0227eee2cf53
.dword 0x3fc634e7967750c4
.dword 0x3feb528a418dbfb9
.dword 0x3fca0227eee2cf53
.dword 0x3fc634e7967750c4
.dword 0x3feb528a418dbfb9
.dword 0x3fca0227eee2cf53
.dword 0x3fc634e7967750c4
.dword 0x3feb528a418dbfb9
.dword 0x3fca0227eee2cf53
.dword 0x3fc634e7967750c4
.dword 0x3feb528a418dbfb9
.dword 0x3fca0227eee2cf53
.dword 0x3fc634e7967750c4
.dword 0x3fb85b9cf11bd230
.dword 0x400044ecf31c1e57
.dword 0x3fc8c48b05819ad8
.dword 0x3fb85b9cf11bd230
.dword 0x400044ecf31c1e57
.dword 0x3fc8c48b05819ad8
.dword 0x3fb85b9cf11bd230
.dword 0x400044ecf31c1e57
.dword 0x3fc8c48b05819ad8
.dword 0x3fb85b9cf11bd230
.dword 0x400044ecf31c1e57
.dword 0x3fc8c48b05819ad8
.dword 0x3fb85b9cf11bd230
.dword 0x400044ecf31c1e57
.dword 0x3fc8c48b05819ad8
.dword 0x3febef4d3be3ca3c
.dword 0x3fef1db9f0bf0ff4
.dword 0x3feb29c601a3021a
.dword 0x3febef4d3be3ca3c
.dword 0x3fef1db9f0bf0ff4
.dword 0x3feb29c601a3021a
.dword 0x3febef4d3be3ca3c
.dword 0x3fef1db9f0bf0ff4
.dword 0x3feb29c601a3021a
.dword 0x3febef4d3be3ca3c
.dword 0x3fef1db9f0bf0ff4
.dword 0x3feb29c601a3021a
.dword 0x3febef4d3be3ca3c
.dword 0x3fef1db9f0bf0ff4
.dword 0x3feb29c601a3021a
.dword 0x3fd19ce60ebaa9ae
.dword 0x400820afdf3c798f
.dword 0x3fea8f547c070d8e
.dword 0x3fd19ce60ebaa9ae
.dword 0x400820afdf3c798f
.dword 0x3fea8f547c070d8e
.dword 0x3fd19ce60ebaa9ae
.dword 0x400820afdf3c798f
.dword 0x3fea8f547c070d8e
.dword 0x3fd19ce60ebaa9ae
.dword 0x400820afdf3c798f
.dword 0x3fea8f547c070d8e
.dword 0x3fd19ce60ebaa9ae
.dword 0x400820afdf3c798f
.dword 0x3fea8f547c070d8e
.dword 0x3fe327d6d506ce8d
.dword 0x3fb6c0a6054ae63c
.dword 0x3fab3d6c3a90aee0
.dword 0x3fe327d6d506ce8d
.dword 0x3fb6c0a6054ae63c
.dword 0x3fab3d6c3a90aee0
.dword 0x3fe327d6d506ce8d
.dword 0x3fb6c0a6054ae63c
.dword 0x3fab3d6c3a90aee0
.dword 0x3fe327d6d506ce8d
.dword 0x3fb6c0a6054ae63c
.dword 0x3fab3d6c3a90aee0
.dword 0x3fe327d6d506ce8d
.dword 0x3fb6c0a6054ae63c
.dword 0x3fab3d6c3a90aee0
.dword 0x3f9d05df239b3f60
.dword 0x403550f883ad9cf9
.dword 0x3fe3554a8225b93f
.dword 0x3f9d05df239b3f60
.dword 0x403550f883ad9cf9
.dword 0x3fe3554a8225b93f
.dword 0x3f9d05df239b3f60
.dword 0x403550f883ad9cf9
.dword 0x3fe3554a8225b93f
.dword 0x3f9d05df239b3f60
.dword 0x403550f883ad9cf9
.dword 0x3fe3554a8225b93f
.dword 0x3f9d05df239b3f60
.dword 0x403550f883ad9cf9
.dword 0x3fe3554a8225b93f
.dword 0x3fe55c04e3a72b0c
.dword 0x3fd318f9922d820a
.dword 0x3fc97e9d00dc81bc
.dword 0x3fe55c04e3a72b0c
.dword 0x3fd318f9922d820a
.dword 0x3fc97e9d00dc81bc
.dword 0x3fe55c04e3a72b0c
.dword 0x3fd318f9922d820a
.dword 0x3fc97e9d00dc81bc
.dword 0x3fe55c04e3a72b0c
.dword 0x3fd318f9922d820a
.dword 0x3fc97e9d00dc81bc
.dword 0x3fe55c04e3a72b0c
.dword 0x3fd318f9922d820a
.dword 0x3fc97e9d00dc81bc
.dword 0x3fea498cd243a926
.dword 0x3fd06d985d6c752e
.dword 0x3fcafd9c35d3971c
.dword 0x3fea498cd243a926
.dword 0x3fd06d985d6c752e
.dword 0x3fcafd9c35d3971c
.dword 0x3fea498cd243a926
.dword 0x3fd06d985d6c752e
.dword 0x3fcafd9c35d3971c
.dword 0x3fea498cd243a926
.dword 0x3fd06d985d6c752e
.dword 0x3fcafd9c35d3971c
.dword 0x3fea498cd243a926
.dword 0x3fd06d985d6c752e
.dword 0x3fcafd9c35d3971c
.dword 0x3fcffb65bccf9678
.dword 0x4000b65c08a4bea4
.dword 0x3fe0b3f4ac71a71a
.dword 0x3fcffb65bccf9678
.dword 0x4000b65c08a4bea4
.dword 0x3fe0b3f4ac71a71a
.dword 0x3fcffb65bccf9678
.dword 0x4000b65c08a4bea4
.dword 0x3fe0b3f4ac71a71a
.dword 0x3fcffb65bccf9678
.dword 0x4000b65c08a4bea4
.dword 0x3fe0b3f4ac71a71a
.dword 0x3fcffb65bccf9678
.dword 0x4000b65c08a4bea4
.dword 0x3fe0b3f4ac71a71a
.dword 0x3fb718d873911d80
.dword 0x40034d950cb3586b
.dword 0x3fcbdd7fc49db98c
.dword 0x3fb718d873911d80
.dword 0x40034d950cb3586b
.dword 0x3fcbdd7fc49db98c
.dword 0x3fb718d873911d80
.dword 0x40034d950cb3586b
.dword 0x3fcbdd7fc49db98c
.dword 0x3fb718d873911d80
.dword 0x40034d950cb3586b
.dword 0x3fcbdd7fc49db98c
.dword 0x3fb718d873911d80
.dword 0x40034d950cb3586b
.dword 0x3fcbdd7fc49db98c
.dword 0x3fed497ea0a951d3
.dword 0x3fd7bc1609f19c0f
.dword 0x3fd5b8f6f70a6ff8
.dword 0x3fed497ea0a951d3
.dword 0x3fd7bc1609f19c0f
.dword 0x3fd5b8f6f70a6ff8
.dword 0x3fed497ea0a951d3
.dword 0x3fd7bc1609f19c0f
.dword 0x3fd5b8f6f70a6ff8
.dword 0x3fed497ea0a951d3
.dword 0x3fd7bc1609f19c0f
.dword 0x3fd5b8f6f70a6ff8
.dword 0x3fed497ea0a951d3
.dword 0x3fd7bc1609f19c0f
.dword 0x3fd5b8f6f70a6ff8
.dword 0x3fd6359b953f7950
.dword 0x3fe279b99c98bf69
.dword 0x3fc9a54615b5ba14
.dword 0x3fd6359b953f7950
.dword 0x3fe279b99c98bf69
.dword 0x3fc9a54615b5ba14
.dword 0x3fd6359b953f7950
.dword 0x3fe279b99c98bf69
.dword 0x3fc9a54615b5ba14
.dword 0x3fd6359b953f7950
.dword 0x3fe279b99c98bf69
.dword 0x3fc9a54615b5ba14
.dword 0x3fd6359b953f7950
.dword 0x3fe279b99c98bf69
.dword 0x3fc9a54615b5ba14
.dword 0x3fc46c9bcff82f00
.dword 0x400a18ed09a1191d
.dword 0x3fe0a827585cfae3
.dword 0x3fc46c9bcff82f00
.dword 0x400a18ed09a1191d
.dword 0x3fe0a827585cfae3
.dword 0x3fc46c9bcff82f00
.dword 0x400a18ed09a1191d
.dword 0x3fe0a827585cfae3
.dword 0x3fc46c9bcff82f00
.dword 0x400a18ed09a1191d
.dword 0x3fe0a827585cfae3
.dword 0x3fc46c9bcff82f00
.dword 0x400a18ed09a1191d
.dword 0x3fe0a827585cfae3
.dword 0x3fd80f4bd01e35c8
.dword 0x3fd0f8c74480302e
.dword 0x3fb985648c78bb88
.dword 0x3fd80f4bd01e35c8
.dword 0x3fd0f8c74480302e
.dword 0x3fb985648c78bb88
.dword 0x3fd80f4bd01e35c8
.dword 0x3fd0f8c74480302e
.dword 0x3fb985648c78bb88
.dword 0x3fd80f4bd01e35c8
.dword 0x3fd0f8c74480302e
.dword 0x3fb985648c78bb88
.dword 0x3fd80f4bd01e35c8
.dword 0x3fd0f8c74480302e
.dword 0x3fb985648c78bb88
.dword 0x3fe9b49546a62826
.dword 0x3fefb1cf4f6bc736
.dword 0x3fe975c5fe11c356
.dword 0x3fe9b49546a62826
.dword 0x3fefb1cf4f6bc736
.dword 0x3fe975c5fe11c356
.dword 0x3fe9b49546a62826
.dword 0x3fefb1cf4f6bc736
.dword 0x3fe975c5fe11c356
.dword 0x3fe9b49546a62826
.dword 0x3fefb1cf4f6bc736
.dword 0x3fe975c5fe11c356
.dword 0x3fe9b49546a62826
.dword 0x3fefb1cf4f6bc736
.dword 0x3fe975c5fe11c356
.dword 0x3fe8f1f8ff97641e
.dword 0x3fefbceac5d76d67
.dword 0x3fe8bdadd21ea35b
.dword 0x3fe8f1f8ff97641e
.dword 0x3fefbceac5d76d67
.dword 0x3fe8bdadd21ea35b
.dword 0x3fe8f1f8ff97641e
.dword 0x3fefbceac5d76d67
.dword 0x3fe8bdadd21ea35b
.dword 0x3fe8f1f8ff97641e
.dword 0x3fefbceac5d76d67
.dword 0x3fe8bdadd21ea35b
.dword 0x3fe8f1f8ff97641e
.dword 0x3fefbceac5d76d67
.dword 0x3fe8bdadd21ea35b
.dword 0x3fa70a2841a18bf0
.dword 0x402c3d221471d0b2
.dword 0x3fe454e71fad876a
.dword 0x3fa70a2841a18bf0
.dword 0x402c3d221471d0b2
.dword 0x3fe454e71fad876a
.dword 0x3fa70a2841a18bf0
.dword 0x402c3d221471d0b2
.dword 0x3fe454e71fad876a
.dword 0x3fa70a2841a18bf0
.dword 0x402c3d221471d0b2
.dword 0x3fe454e71fad876a
.dword 0x3fa70a2841a18bf0
.dword 0x402c3d221471d0b2
.dword 0x3fe454e71fad876a
.dword 0x3fb01f60e8dc22c8
.dword 0x3fc84fd2bd7274a9
.dword 0x3f887f80a685e140
.dword 0x3fb01f60e8dc22c8
.dword 0x3fc84fd2bd7274a9
.dword 0x3f887f80a685e140
.dword 0x3fb01f60e8dc22c8
.dword 0x3fc84fd2bd7274a9
.dword 0x3f887f80a685e140
.dword 0x3fb01f60e8dc22c8
.dword 0x3fc84fd2bd7274a9
.dword 0x3f887f80a685e140
.dword 0x3fb01f60e8dc22c8
.dword 0x3fc84fd2bd7274a9
.dword 0x3f887f80a685e140
.dword 0x3fa643a7e9f74d30
.dword 0x40296c73116fd448
.dword 0x3fe1b04f94c40758
.dword 0x3fa643a7e9f74d30
.dword 0x40296c73116fd448
.dword 0x3fe1b04f94c40758
.dword 0x3fa643a7e9f74d30
.dword 0x40296c73116fd448
.dword 0x3fe1b04f94c40758
.dword 0x3fa643a7e9f74d30
.dword 0x40296c73116fd448
.dword 0x3fe1b04f94c40758
.dword 0x3fa643a7e9f74d30
.dword 0x40296c73116fd448
.dword 0x3fe1b04f94c40758
.dword 0x3fe7b4d7f739b524
.dword 0x3fda9024b0d22222
.dword 0x3fd3adb87328ace0
.dword 0x3fe7b4d7f739b524
.dword 0x3fda9024b0d22222
.dword 0x3fd3adb87328ace0
.dword 0x3fe7b4d7f739b524
.dword 0x3fda9024b0d22222
.dword 0x3fd3adb87328ace0
.dword 0x3fe7b4d7f739b524
.dword 0x3fda9024b0d22222
.dword 0x3fd3adb87328ace0
.dword 0x3fe7b4d7f739b524
.dword 0x3fda9024b0d22222
.dword 0x3fd3adb87328ace0
.dword 0x3fef1b23b4d6ec52
.dword 0x3fe7b8a7d3156d7e
.dword 0x3fe70f00da1c6d1a
.dword 0x3fef1b23b4d6ec52
.dword 0x3fe7b8a7d3156d7e
.dword 0x3fe70f00da1c6d1a
.dword 0x3fef1b23b4d6ec52
.dword 0x3fe7b8a7d3156d7e
.dword 0x3fe70f00da1c6d1a
.dword 0x3fef1b23b4d6ec52
.dword 0x3fe7b8a7d3156d7e
.dword 0x3fe70f00da1c6d1a
.dword 0x3fef1b23b4d6ec52
.dword 0x3fe7b8a7d3156d7e
.dword 0x3fe70f00da1c6d1a
.dword 0x3fe49f3b4d1373b1
.dword 0x3ff81bbc32baff3d
.dword 0x3fef1298380aa55c
.dword 0x3fe49f3b4d1373b1
.dword 0x3ff81bbc32baff3d
.dword 0x3fef1298380aa55c
.dword 0x3fe49f3b4d1373b1
.dword 0x3ff81bbc32baff3d
.dword 0x3fef1298380aa55c
.dword 0x3fe49f3b4d1373b1
.dword 0x3ff81bbc32baff3d
.dword 0x3fef1298380aa55c
.dword 0x3fe49f3b4d1373b1
.dword 0x3ff81bbc32baff3d
.dword 0x3fef1298380aa55c
.dword 0x3fe8be8cd33348b4
.dword 0x3fe3f62f21d6ac12
.dword 0x3fdedf01d40ec866
.dword 0x3fe8be8cd33348b4
.dword 0x3fe3f62f21d6ac12
.dword 0x3fdedf01d40ec866
.dword 0x3fe8be8cd33348b4
.dword 0x3fe3f62f21d6ac12
.dword 0x3fdedf01d40ec866
.dword 0x3fe8be8cd33348b4
.dword 0x3fe3f62f21d6ac12
.dword 0x3fdedf01d40ec866
.dword 0x3fe8be8cd33348b4
.dword 0x3fe3f62f21d6ac12
.dword 0x3fdedf01d40ec866
.dword 0x3fc740ddb996cc00
.dword 0x3ff6e903f9b8c5fd
.dword 0x3fd0a5eba192c9ca
.dword 0x3fc740ddb996cc00
.dword 0x3ff6e903f9b8c5fd
.dword 0x3fd0a5eba192c9ca
.dword 0x3fc740ddb996cc00
.dword 0x3ff6e903f9b8c5fd
.dword 0x3fd0a5eba192c9ca
.dword 0x3fc740ddb996cc00
.dword 0x3ff6e903f9b8c5fd
.dword 0x3fd0a5eba192c9ca
.dword 0x3fc740ddb996cc00
.dword 0x3ff6e903f9b8c5fd
.dword 0x3fd0a5eba192c9ca
.dword 0x3fc2dd0f3ce0ae90
.dword 0x3ff50dce37c3f5d6
.dword 0x3fc8d26abc2b77d8
.dword 0x3fc2dd0f3ce0ae90
.dword 0x3ff50dce37c3f5d6
.dword 0x3fc8d26abc2b77d8
.dword 0x3fc2dd0f3ce0ae90
.dword 0x3ff50dce37c3f5d6
.dword 0x3fc8d26abc2b77d8
.dword 0x3fc2dd0f3ce0ae90
.dword 0x3ff50dce37c3f5d6
.dword 0x3fc8d26abc2b77d8
.dword 0x3fc2dd0f3ce0ae90
.dword 0x3ff50dce37c3f5d6
.dword 0x3fc8d26abc2b77d8
.dword 0x3fc820664362b778
.dword 0x3fb47916ceb992b2
.dword 0x3f8edf173dde9500
.dword 0x3fc820664362b778
.dword 0x3fb47916ceb992b2
.dword 0x3f8edf173dde9500
.dword 0x3fc820664362b778
.dword 0x3fb47916ceb992b2
.dword 0x3f8edf173dde9500
.dword 0x3fc820664362b778
.dword 0x3fb47916ceb992b2
.dword 0x3f8edf173dde9500
.dword 0x3fc820664362b778
.dword 0x3fb47916ceb992b2
.dword 0x3f8edf173dde9500
.dword 0x3fe5736265744892
.dword 0x3ff28b823dfafa69
.dword 0x3fe8dcd7b58c0de7
.dword 0x3fe5736265744892
.dword 0x3ff28b823dfafa69
.dword 0x3fe8dcd7b58c0de7
.dword 0x3fe5736265744892
.dword 0x3ff28b823dfafa69
.dword 0x3fe8dcd7b58c0de7
.dword 0x3fe5736265744892
.dword 0x3ff28b823dfafa69
.dword 0x3fe8dcd7b58c0de7
.dword 0x3fe5736265744892
.dword 0x3ff28b823dfafa69
.dword 0x3fe8dcd7b58c0de7
.dword 0x3fddea0193aadedc
.dword 0x3fde40c54659ad3b
.dword 0x3fcc47ede7f4f3f8
.dword 0x3fddea0193aadedc
.dword 0x3fde40c54659ad3b
.dword 0x3fcc47ede7f4f3f8
.dword 0x3fddea0193aadedc
.dword 0x3fde40c54659ad3b
.dword 0x3fcc47ede7f4f3f8
.dword 0x3fddea0193aadedc
.dword 0x3fde40c54659ad3b
.dword 0x3fcc47ede7f4f3f8
.dword 0x3fddea0193aadedc
.dword 0x3fde40c54659ad3b
.dword 0x3fcc47ede7f4f3f8
.dword 0x3feaa7977693c463
.dword 0x3fd185e75fed121d
.dword 0x3fcd31237c6f70e0
.dword 0x3feaa7977693c463
.dword 0x3fd185e75fed121d
.dword 0x3fcd31237c6f70e0
.dword 0x3feaa7977693c463
.dword 0x3fd185e75fed121d
.dword 0x3fcd31237c6f70e0
.dword 0x3feaa7977693c463
.dword 0x3fd185e75fed121d
.dword 0x3fcd31237c6f70e0
.dword 0x3feaa7977693c463
.dword 0x3fd185e75fed121d
.dword 0x3fcd31237c6f70e0
.dword 0x3fe7a4f1bded2960
.dword 0x3feb6d62c7ae57c9
.dword 0x3fe443fecc5df179
.dword 0x3fe7a4f1bded2960
.dword 0x3feb6d62c7ae57c9
.dword 0x3fe443fecc5df179
.dword 0x3fe7a4f1bded2960
.dword 0x3feb6d62c7ae57c9
.dword 0x3fe443fecc5df179
.dword 0x3fe7a4f1bded2960
.dword 0x3feb6d62c7ae57c9
.dword 0x3fe443fecc5df179
.dword 0x3fe7a4f1bded2960
.dword 0x3feb6d62c7ae57c9
.dword 0x3fe443fecc5df179
.dword 0x3fc17e90be8b3888
.dword 0x4001c853639e0e6c
.dword 0x3fd37183093c85fa
.dword 0x3fc17e90be8b3888
.dword 0x4001c853639e0e6c
.dword 0x3fd37183093c85fa
.dword 0x3fc17e90be8b3888
.dword 0x4001c853639e0e6c
.dword 0x3fd37183093c85fa
.dword 0x3fc17e90be8b3888
.dword 0x4001c853639e0e6c
.dword 0x3fd37183093c85fa
.dword 0x3fc17e90be8b3888
.dword 0x4001c853639e0e6c
.dword 0x3fd37183093c85fa
.dword 0x3fde3374759d8328
.dword 0x3fa7537aec362e6b
.dword 0x3f9603c52db4e4c0
.dword 0x3fde3374759d8328
.dword 0x3fa7537aec362e6b
.dword 0x3f9603c52db4e4c0
.dword 0x3fde3374759d8328
.dword 0x3fa7537aec362e6b
.dword 0x3f9603c52db4e4c0
.dword 0x3fde3374759d8328
.dword 0x3fa7537aec362e6b
.dword 0x3f9603c52db4e4c0
.dword 0x3fde3374759d8328
.dword 0x3fa7537aec362e6b
.dword 0x3f9603c52db4e4c0
.dword 0x3fdd3ca9b8afd456
.dword 0x400109dba168c8c0
.dword 0x3fef2277c8f7a960
.dword 0x3fdd3ca9b8afd456
.dword 0x400109dba168c8c0
.dword 0x3fef2277c8f7a960
.dword 0x3fdd3ca9b8afd456
.dword 0x400109dba168c8c0
.dword 0x3fef2277c8f7a960
.dword 0x3fdd3ca9b8afd456
.dword 0x400109dba168c8c0
.dword 0x3fef2277c8f7a960
.dword 0x3fdd3ca9b8afd456
.dword 0x400109dba168c8c0
.dword 0x3fef2277c8f7a960
.dword 0x3fde3107e51b2188
.dword 0x3ffcf1cb85d66d56
.dword 0x3feb4f08313d5eed
.dword 0x3fde3107e51b2188
.dword 0x3ffcf1cb85d66d56
.dword 0x3feb4f08313d5eed
.dword 0x3fde3107e51b2188
.dword 0x3ffcf1cb85d66d56
.dword 0x3feb4f08313d5eed
.dword 0x3fde3107e51b2188
.dword 0x3ffcf1cb85d66d56
.dword 0x3feb4f08313d5eed
.dword 0x3fde3107e51b2188
.dword 0x3ffcf1cb85d66d56
.dword 0x3feb4f08313d5eed
.dword 0x3fef42ccc32ddc1f
.dword 0x3fa9b04dafb6fafb
.dword 0x3fa9186b431216c0
.dword 0x3fef42ccc32ddc1f
.dword 0x3fa9b04dafb6fafb
.dword 0x3fa9186b431216c0
.dword 0x3fef42ccc32ddc1f
.dword 0x3fa9b04dafb6fafb
.dword 0x3fa9186b431216c0
.dword 0x3fef42ccc32ddc1f
.dword 0x3fa9b04dafb6fafb
.dword 0x3fa9186b431216c0
.dword 0x3fef42ccc32ddc1f
.dword 0x3fa9b04dafb6fafb
.dword 0x3fa9186b431216c0
.dword 0x3fc5e81124ed55e4
.dword 0x4013995136ffda78
.dword 0x3fead57eb1ef4601
.dword 0x3fc5e81124ed55e4
.dword 0x4013995136ffda78
.dword 0x3fead57eb1ef4601
.dword 0x3fc5e81124ed55e4
.dword 0x4013995136ffda78
.dword 0x3fead57eb1ef4601
.dword 0x3fc5e81124ed55e4
.dword 0x4013995136ffda78
.dword 0x3fead57eb1ef4601
.dword 0x3fc5e81124ed55e4
.dword 0x4013995136ffda78
.dword 0x3fead57eb1ef4601
.dword 0x3fe509209109e15f
.dword 0x3ff1e5426aa7e2a2
.dword 0x3fe7871c8e15e422
.dword 0x3fe509209109e15f
.dword 0x3ff1e5426aa7e2a2
.dword 0x3fe7871c8e15e422
.dword 0x3fe509209109e15f
.dword 0x3ff1e5426aa7e2a2
.dword 0x3fe7871c8e15e422
.dword 0x3fe509209109e15f
.dword 0x3ff1e5426aa7e2a2
.dword 0x3fe7871c8e15e422
.dword 0x3fe509209109e15f
.dword 0x3ff1e5426aa7e2a2
.dword 0x3fe7871c8e15e422
.dword 0x3fed406ecf6c6c77
.dword 0x3fef6de5f6b3e635
.dword 0x3fecbae10900557b
.dword 0x3fed406ecf6c6c77
.dword 0x3fef6de5f6b3e635
.dword 0x3fecbae10900557b
.dword 0x3fed406ecf6c6c77
.dword 0x3fef6de5f6b3e635
.dword 0x3fecbae10900557b
.dword 0x3fed406ecf6c6c77
.dword 0x3fef6de5f6b3e635
.dword 0x3fecbae10900557b
.dword 0x3fed406ecf6c6c77
.dword 0x3fef6de5f6b3e635
.dword 0x3fecbae10900557b
.dword 0x3fe1169d4614134f
.dword 0x3feeee3ed0d3765d
.dword 0x3fe0846d2ec0a9ca
.dword 0x3fe1169d4614134f
.dword 0x3feeee3ed0d3765d
.dword 0x3fe0846d2ec0a9ca
.dword 0x3fe1169d4614134f
.dword 0x3feeee3ed0d3765d
.dword 0x3fe0846d2ec0a9ca
.dword 0x3fe1169d4614134f
.dword 0x3feeee3ed0d3765d
.dword 0x3fe0846d2ec0a9ca
.dword 0x3fe1169d4614134f
.dword 0x3feeee3ed0d3765d
.dword 0x3fe0846d2ec0a9ca
.dword 0x3fc35608e830df90
.dword 0x3fa760853fb18f8b
.dword 0x3f7c40520b5ac900
.dword 0x3fc35608e830df90
.dword 0x3fa760853fb18f8b
.dword 0x3f7c40520b5ac900
.dword 0x3fc35608e830df90
.dword 0x3fa760853fb18f8b
.dword 0x3f7c40520b5ac900
.dword 0x3fc35608e830df90
.dword 0x3fa760853fb18f8b
.dword 0x3f7c40520b5ac900
.dword 0x3fc35608e830df90
.dword 0x3fa760853fb18f8b
.dword 0x3f7c40520b5ac900
.dword 0x3fe458c5ea1a780a
.dword 0x3ff612919c153733
.dword 0x3fec11ad2b89e0c5
.dword 0x3fe458c5ea1a780a
.dword 0x3ff612919c153733
.dword 0x3fec11ad2b89e0c5
.dword 0x3fe458c5ea1a780a
.dword 0x3ff612919c153733
.dword 0x3fec11ad2b89e0c5
.dword 0x3fe458c5ea1a780a
.dword 0x3ff612919c153733
.dword 0x3fec11ad2b89e0c5
.dword 0x3fe458c5ea1a780a
.dword 0x3ff612919c153733
.dword 0x3fec11ad2b89e0c5
.dword 0x3fe7ed81242d99cb
.dword 0x3febedc50b55d42b
.dword 0x3fe4e22f51974420
.dword 0x3fe7ed81242d99cb
.dword 0x3febedc50b55d42b
.dword 0x3fe4e22f51974420
.dword 0x3fe7ed81242d99cb
.dword 0x3febedc50b55d42b
.dword 0x3fe4e22f51974420
.dword 0x3fe7ed81242d99cb
.dword 0x3febedc50b55d42b
.dword 0x3fe4e22f51974420
.dword 0x3fe7ed81242d99cb
.dword 0x3febedc50b55d42b
.dword 0x3fe4e22f51974420
.dword 0x3fd8b317fcfd7b76
.dword 0x4001a657c1039236
.dword 0x3feb3f130d765d56
.dword 0x3fd8b317fcfd7b76
.dword 0x4001a657c1039236
.dword 0x3feb3f130d765d56
.dword 0x3fd8b317fcfd7b76
.dword 0x4001a657c1039236
.dword 0x3feb3f130d765d56
.dword 0x3fd8b317fcfd7b76
.dword 0x4001a657c1039236
.dword 0x3feb3f130d765d56
.dword 0x3fd8b317fcfd7b76
.dword 0x4001a657c1039236
.dword 0x3feb3f130d765d56
.dword 0x3fef2f18c3b7ff32
.dword 0x3fc081a252a980bf
.dword 0x3fc015e06cac39d0
.dword 0x3fef2f18c3b7ff32
.dword 0x3fc081a252a980bf
.dword 0x3fc015e06cac39d0
.dword 0x3fef2f18c3b7ff32
.dword 0x3fc081a252a980bf
.dword 0x3fc015e06cac39d0
.dword 0x3fef2f18c3b7ff32
.dword 0x3fc081a252a980bf
.dword 0x3fc015e06cac39d0
.dword 0x3fef2f18c3b7ff32
.dword 0x3fc081a252a980bf
.dword 0x3fc015e06cac39d0
.dword 0x3fecc0cdcc3446c7
.dword 0x3fe6aa0113d7bd51
.dword 0x3fe45d4eb98b8876
.dword 0x3fecc0cdcc3446c7
.dword 0x3fe6aa0113d7bd51
.dword 0x3fe45d4eb98b8876
.dword 0x3fecc0cdcc3446c7
.dword 0x3fe6aa0113d7bd51
.dword 0x3fe45d4eb98b8876
.dword 0x3fecc0cdcc3446c7
.dword 0x3fe6aa0113d7bd51
.dword 0x3fe45d4eb98b8876
.dword 0x3fecc0cdcc3446c7
.dword 0x3fe6aa0113d7bd51
.dword 0x3fe45d4eb98b8876
.dword 0x3feffe16c5bb9d14
.dword 0x3feb2a75c42921df
.dword 0x3feb28d671da80a2
.dword 0x3feffe16c5bb9d14
.dword 0x3feb2a75c42921df
.dword 0x3feb28d671da80a2
.dword 0x3feffe16c5bb9d14
.dword 0x3feb2a75c42921df
.dword 0x3feb28d671da80a2
.dword 0x3feffe16c5bb9d14
.dword 0x3feb2a75c42921df
.dword 0x3feb28d671da80a2
.dword 0x3feffe16c5bb9d14
.dword 0x3feb2a75c42921df
.dword 0x3feb28d671da80a2
.dword 0x3fe51e47cd98daf4
.dword 0x3ff6f84050ef1fa5
.dword 0x3fee514cf79729ce
.dword 0x3fe51e47cd98daf4
.dword 0x3ff6f84050ef1fa5
.dword 0x3fee514cf79729ce
.dword 0x3fe51e47cd98daf4
.dword 0x3ff6f84050ef1fa5
.dword 0x3fee514cf79729ce
.dword 0x3fe51e47cd98daf4
.dword 0x3ff6f84050ef1fa5
.dword 0x3fee514cf79729ce
.dword 0x3fe51e47cd98daf4
.dword 0x3ff6f84050ef1fa5
.dword 0x3fee514cf79729ce
.dword 0x3fe951cfde3ccc50
.dword 0x3ff0f0827d7c7b36
.dword 0x3feace698b8f6ef5
.dword 0x3fe951cfde3ccc50
.dword 0x3ff0f0827d7c7b36
.dword 0x3feace698b8f6ef5
.dword 0x3fe951cfde3ccc50
.dword 0x3ff0f0827d7c7b36
.dword 0x3feace698b8f6ef5
.dword 0x3fe951cfde3ccc50
.dword 0x3ff0f0827d7c7b36
.dword 0x3feace698b8f6ef5
.dword 0x3fe951cfde3ccc50
.dword 0x3ff0f0827d7c7b36
.dword 0x3feace698b8f6ef5
.dword 0x3fee0210db3cd0db
.dword 0x3fefd3730571579a
.dword 0x3fedd849d00fb34c
.dword 0x3fee0210db3cd0db
.dword 0x3fefd3730571579a
.dword 0x3fedd849d00fb34c
.dword 0x3fee0210db3cd0db
.dword 0x3fefd3730571579a
.dword 0x3fedd849d00fb34c
.dword 0x3fee0210db3cd0db
.dword 0x3fefd3730571579a
.dword 0x3fedd849d00fb34c
.dword 0x3fee0210db3cd0db
.dword 0x3fefd3730571579a
.dword 0x3fedd849d00fb34c
.dword 0x3fecafd2fa12ebaf
.dword 0x3fda1bd2cabedb1b
.dword 0x3fd767ccbccbe4bc
.dword 0x3fecafd2fa12ebaf
.dword 0x3fda1bd2cabedb1b
.dword 0x3fd767ccbccbe4bc
.dword 0x3fecafd2fa12ebaf
.dword 0x3fda1bd2cabedb1b
.dword 0x3fd767ccbccbe4bc
.dword 0x3fecafd2fa12ebaf
.dword 0x3fda1bd2cabedb1b
.dword 0x3fd767ccbccbe4bc
.dword 0x3fecafd2fa12ebaf
.dword 0x3fda1bd2cabedb1b
.dword 0x3fd767ccbccbe4bc
.dword 0x3fe371a1ca686070
.dword 0x3fefa704eca5c789
.dword 0x3fe33b90be6c6bce
.dword 0x3fe371a1ca686070
.dword 0x3fefa704eca5c789
.dword 0x3fe33b90be6c6bce
.dword 0x3fe371a1ca686070
.dword 0x3fefa704eca5c789
.dword 0x3fe33b90be6c6bce
.dword 0x3fe371a1ca686070
.dword 0x3fefa704eca5c789
.dword 0x3fe33b90be6c6bce
.dword 0x3fe371a1ca686070
.dword 0x3fefa704eca5c789
.dword 0x3fe33b90be6c6bce
.dword 0x3fc00ff3b51c5d4c
.dword 0x3ff9c5995a864578
.dword 0x3fc9df4b270d3914
.dword 0x3fc00ff3b51c5d4c
.dword 0x3ff9c5995a864578
.dword 0x3fc9df4b270d3914
.dword 0x3fc00ff3b51c5d4c
.dword 0x3ff9c5995a864578
.dword 0x3fc9df4b270d3914
.dword 0x3fc00ff3b51c5d4c
.dword 0x3ff9c5995a864578
.dword 0x3fc9df4b270d3914
.dword 0x3fc00ff3b51c5d4c
.dword 0x3ff9c5995a864578
.dword 0x3fc9df4b270d3914
.dword 0x3fb9b8346420efa0
.dword 0x400185476e67ceb2
.dword 0x3fcc29f5b0c512f8
.dword 0x3fb9b8346420efa0
.dword 0x400185476e67ceb2
.dword 0x3fcc29f5b0c512f8
.dword 0x3fb9b8346420efa0
.dword 0x400185476e67ceb2
.dword 0x3fcc29f5b0c512f8
.dword 0x3fb9b8346420efa0
.dword 0x400185476e67ceb2
.dword 0x3fcc29f5b0c512f8
.dword 0x3fb9b8346420efa0
.dword 0x400185476e67ceb2
.dword 0x3fcc29f5b0c512f8
.dword 0x3fd4b9234a14ebbc
.dword 0x40075f64eb83c9cb
.dword 0x3fee45b0b22c6597
.dword 0x3fd4b9234a14ebbc
.dword 0x40075f64eb83c9cb
.dword 0x3fee45b0b22c6597
.dword 0x3fd4b9234a14ebbc
.dword 0x40075f64eb83c9cb
.dword 0x3fee45b0b22c6597
.dword 0x3fd4b9234a14ebbc
.dword 0x40075f64eb83c9cb
.dword 0x3fee45b0b22c6597
.dword 0x3fd4b9234a14ebbc
.dword 0x40075f64eb83c9cb
.dword 0x3fee45b0b22c6597
.dword 0x3fdf02303865f0fe
.dword 0x3fe941af9569cfe9
.dword 0x3fd8795c42c2a0f2
.dword 0x3fdf02303865f0fe
.dword 0x3fe941af9569cfe9
.dword 0x3fd8795c42c2a0f2
.dword 0x3fdf02303865f0fe
.dword 0x3fe941af9569cfe9
.dword 0x3fd8795c42c2a0f2
.dword 0x3fdf02303865f0fe
.dword 0x3fe941af9569cfe9
.dword 0x3fd8795c42c2a0f2
.dword 0x3fdf02303865f0fe
.dword 0x3fe941af9569cfe9
.dword 0x3fd8795c42c2a0f2
.dword 0x3fa8038c77f7f280
.dword 0x401a655dc28894f7
.dword 0x3fd3cef3b1205abc
.dword 0x3fa8038c77f7f280
.dword 0x401a655dc28894f7
.dword 0x3fd3cef3b1205abc
.dword 0x3fa8038c77f7f280
.dword 0x401a655dc28894f7
.dword 0x3fd3cef3b1205abc
.dword 0x3fa8038c77f7f280
.dword 0x401a655dc28894f7
.dword 0x3fd3cef3b1205abc
.dword 0x3fa8038c77f7f280
.dword 0x401a655dc28894f7
.dword 0x3fd3cef3b1205abc
.dword 0x3fe42f13218f8d55
.dword 0x3fe600448492323d
.dword 0x3fdbc110bd737bba
.dword 0x3fe42f13218f8d55
.dword 0x3fe600448492323d
.dword 0x3fdbc110bd737bba
.dword 0x3fe42f13218f8d55
.dword 0x3fe600448492323d
.dword 0x3fdbc110bd737bba
.dword 0x3fe42f13218f8d55
.dword 0x3fe600448492323d
.dword 0x3fdbc110bd737bba
.dword 0x3fe42f13218f8d55
.dword 0x3fe600448492323d
.dword 0x3fdbc110bd737bba
.dword 0x3fefde77176ad3cf
.dword 0x3fe2ab8e4d6c04e9
.dword 0x3fe297fd81dc9430
.dword 0x3fefde77176ad3cf
.dword 0x3fe2ab8e4d6c04e9
.dword 0x3fe297fd81dc9430
.dword 0x3fefde77176ad3cf
.dword 0x3fe2ab8e4d6c04e9
.dword 0x3fe297fd81dc9430
.dword 0x3fefde77176ad3cf
.dword 0x3fe2ab8e4d6c04e9
.dword 0x3fe297fd81dc9430
.dword 0x3fefde77176ad3cf
.dword 0x3fe2ab8e4d6c04e9
.dword 0x3fe297fd81dc9430
.dword 0x3fda4bccee8a8fd2
.dword 0x3ffcb5a10bb898bd
.dword 0x3fe7979466df4d8e
.dword 0x3fda4bccee8a8fd2
.dword 0x3ffcb5a10bb898bd
.dword 0x3fe7979466df4d8e
.dword 0x3fda4bccee8a8fd2
.dword 0x3ffcb5a10bb898bd
.dword 0x3fe7979466df4d8e
.dword 0x3fda4bccee8a8fd2
.dword 0x3ffcb5a10bb898bd
.dword 0x3fe7979466df4d8e
.dword 0x3fda4bccee8a8fd2
.dword 0x3ffcb5a10bb898bd
.dword 0x3fe7979466df4d8e
.dword 0x3fe88882c3f3a5be
.dword 0x3fe57f4e101fcf24
.dword 0x3fe07b2f70acf5d0
.dword 0x3fe88882c3f3a5be
.dword 0x3fe57f4e101fcf24
.dword 0x3fe07b2f70acf5d0
.dword 0x3fe88882c3f3a5be
.dword 0x3fe57f4e101fcf24
.dword 0x3fe07b2f70acf5d0
.dword 0x3fe88882c3f3a5be
.dword 0x3fe57f4e101fcf24
.dword 0x3fe07b2f70acf5d0
.dword 0x3fe88882c3f3a5be
.dword 0x3fe57f4e101fcf24
.dword 0x3fe07b2f70acf5d0
.dword 0x3fea5c6ca365120a
.dword 0x3fedd5b58737f1f9
.dword 0x3fe893cf315dadce
.dword 0x3fea5c6ca365120a
.dword 0x3fedd5b58737f1f9
.dword 0x3fe893cf315dadce
.dword 0x3fea5c6ca365120a
.dword 0x3fedd5b58737f1f9
.dword 0x3fe893cf315dadce
.dword 0x3fea5c6ca365120a
.dword 0x3fedd5b58737f1f9
.dword 0x3fe893cf315dadce
.dword 0x3fea5c6ca365120a
.dword 0x3fedd5b58737f1f9
.dword 0x3fe893cf315dadce
.dword 0x3fa5a441713b5e10
.dword 0x4034166d9d967a4b
.dword 0x3feb2ba7ebab0610
.dword 0x3fa5a441713b5e10
.dword 0x4034166d9d967a4b
.dword 0x3feb2ba7ebab0610
.dword 0x3fa5a441713b5e10
.dword 0x4034166d9d967a4b
.dword 0x3feb2ba7ebab0610
.dword 0x3fa5a441713b5e10
.dword 0x4034166d9d967a4b
.dword 0x3feb2ba7ebab0610
.dword 0x3fa5a441713b5e10
.dword 0x4034166d9d967a4b
.dword 0x3feb2ba7ebab0610
.dword 0x3fe484f25544e440
.dword 0x3fc71df6e5390ea5
.dword 0x3fbda589f3d36cc8
.dword 0x3fe484f25544e440
.dword 0x3fc71df6e5390ea5
.dword 0x3fbda589f3d36cc8
.dword 0x3fe484f25544e440
.dword 0x3fc71df6e5390ea5
.dword 0x3fbda589f3d36cc8
.dword 0x3fe484f25544e440
.dword 0x3fc71df6e5390ea5
.dword 0x3fbda589f3d36cc8
.dword 0x3fe484f25544e440
.dword 0x3fc71df6e5390ea5
.dword 0x3fbda589f3d36cc8
.dword 0x3fe7172cb52ca658
.dword 0x3fe9ee11b944f617
.dword 0x3fe2b5e4140ddb93
.dword 0x3fe7172cb52ca658
.dword 0x3fe9ee11b944f617
.dword 0x3fe2b5e4140ddb93
.dword 0x3fe7172cb52ca658
.dword 0x3fe9ee11b944f617
.dword 0x3fe2b5e4140ddb93
.dword 0x3fe7172cb52ca658
.dword 0x3fe9ee11b944f617
.dword 0x3fe2b5e4140ddb93
.dword 0x3fe7172cb52ca658
.dword 0x3fe9ee11b944f617
.dword 0x3fe2b5e4140ddb93
.dword 0x3fc721d6991c9558
.dword 0x3fe8158cd7192153
.dword 0x3fc168f4f7324cfc
.dword 0x3fc721d6991c9558
.dword 0x3fe8158cd7192153
.dword 0x3fc168f4f7324cfc
.dword 0x3fc721d6991c9558
.dword 0x3fe8158cd7192153
.dword 0x3fc168f4f7324cfc
.dword 0x3fc721d6991c9558
.dword 0x3fe8158cd7192153
.dword 0x3fc168f4f7324cfc
.dword 0x3fc721d6991c9558
.dword 0x3fe8158cd7192153
.dword 0x3fc168f4f7324cfc
.dword 0x3fdcd5f9fdc6fc48
.dword 0x3fd09096579b729c
.dword 0x3fbdda8ebb9e4d18
.dword 0x3fdcd5f9fdc6fc48
.dword 0x3fd09096579b729c
.dword 0x3fbdda8ebb9e4d18
.dword 0x3fdcd5f9fdc6fc48
.dword 0x3fd09096579b729c
.dword 0x3fbdda8ebb9e4d18
.dword 0x3fdcd5f9fdc6fc48
.dword 0x3fd09096579b729c
.dword 0x3fbdda8ebb9e4d18
.dword 0x3fdcd5f9fdc6fc48
.dword 0x3fd09096579b729c
.dword 0x3fbdda8ebb9e4d18
.dword 0x3fed6be0c355a414
.dword 0x3fe32bba587a20be
.dword 0x3fe1a041be64b75f
.dword 0x3fed6be0c355a414
.dword 0x3fe32bba587a20be
.dword 0x3fe1a041be64b75f
.dword 0x3fed6be0c355a414
.dword 0x3fe32bba587a20be
.dword 0x3fe1a041be64b75f
.dword 0x3fed6be0c355a414
.dword 0x3fe32bba587a20be
.dword 0x3fe1a041be64b75f
.dword 0x3fed6be0c355a414
.dword 0x3fe32bba587a20be
.dword 0x3fe1a041be64b75f
.dword 0x3fe37d570c552e21
.dword 0x3fcb05ba8faebf5e
.dword 0x3fc0753ea80e4f00
.dword 0x3fe37d570c552e21
.dword 0x3fcb05ba8faebf5e
.dword 0x3fc0753ea80e4f00
.dword 0x3fe37d570c552e21
.dword 0x3fcb05ba8faebf5e
.dword 0x3fc0753ea80e4f00
.dword 0x3fe37d570c552e21
.dword 0x3fcb05ba8faebf5e
.dword 0x3fc0753ea80e4f00
.dword 0x3fe37d570c552e21
.dword 0x3fcb05ba8faebf5e
.dword 0x3fc0753ea80e4f00
.dword 0x3febdc71e50bea79
.dword 0x3feba728c93bde0e
.dword 0x3fe8138a0e688d83
.dword 0x3febdc71e50bea79
.dword 0x3feba728c93bde0e
.dword 0x3fe8138a0e688d83
.dword 0x3febdc71e50bea79
.dword 0x3feba728c93bde0e
.dword 0x3fe8138a0e688d83
.dword 0x3febdc71e50bea79
.dword 0x3feba728c93bde0e
.dword 0x3fe8138a0e688d83
.dword 0x3febdc71e50bea79
.dword 0x3feba728c93bde0e
.dword 0x3fe8138a0e688d83
.dword 0x3fee1d0b9f208e25
.dword 0x3fcf8652970ed500
.dword 0x3fcdaa8a9b66adc8
.dword 0x3fee1d0b9f208e25
.dword 0x3fcf8652970ed500
.dword 0x3fcdaa8a9b66adc8
.dword 0x3fee1d0b9f208e25
.dword 0x3fcf8652970ed500
.dword 0x3fcdaa8a9b66adc8
.dword 0x3fee1d0b9f208e25
.dword 0x3fcf8652970ed500
.dword 0x3fcdaa8a9b66adc8
.dword 0x3fee1d0b9f208e25
.dword 0x3fcf8652970ed500
.dword 0x3fcdaa8a9b66adc8
.dword 0x3fea9f59018e6b1c
.dword 0x3ff0fadbab1717a3
.dword 0x3fec40c052067558
.dword 0x3fea9f59018e6b1c
.dword 0x3ff0fadbab1717a3
.dword 0x3fec40c052067558
.dword 0x3fea9f59018e6b1c
.dword 0x3ff0fadbab1717a3
.dword 0x3fec40c052067558
.dword 0x3fea9f59018e6b1c
.dword 0x3ff0fadbab1717a3
.dword 0x3fec40c052067558
.dword 0x3fea9f59018e6b1c
.dword 0x3ff0fadbab1717a3
.dword 0x3fec40c052067558
.dword 0x3fef472a1c3cc6a0
.dword 0x3fe19f963a116db3
.dword 0x3fe139cace940138
.dword 0x3fef472a1c3cc6a0
.dword 0x3fe19f963a116db3
.dword 0x3fe139cace940138
.dword 0x3fef472a1c3cc6a0
.dword 0x3fe19f963a116db3
.dword 0x3fe139cace940138
.dword 0x3fef472a1c3cc6a0
.dword 0x3fe19f963a116db3
.dword 0x3fe139cace940138
.dword 0x3fef472a1c3cc6a0
.dword 0x3fe19f963a116db3
.dword 0x3fe139cace940138
.dword 0x3fe3a798b473abb6
.dword 0x3fe1435740187afc
.dword 0x3fd534cb3d395550
.dword 0x3fe3a798b473abb6
.dword 0x3fe1435740187afc
.dword 0x3fd534cb3d395550
.dword 0x3fe3a798b473abb6
.dword 0x3fe1435740187afc
.dword 0x3fd534cb3d395550
.dword 0x3fe3a798b473abb6
.dword 0x3fe1435740187afc
.dword 0x3fd534cb3d395550
.dword 0x3fe3a798b473abb6
.dword 0x3fe1435740187afc
.dword 0x3fd534cb3d395550
.dword 0x3fc6cb2b28dea7cc
.dword 0x401011d8d2536d5e
.dword 0x3fe6e497e9222c53
.dword 0x3fc6cb2b28dea7cc
.dword 0x401011d8d2536d5e
.dword 0x3fe6e497e9222c53
.dword 0x3fc6cb2b28dea7cc
.dword 0x401011d8d2536d5e
.dword 0x3fe6e497e9222c53
.dword 0x3fc6cb2b28dea7cc
.dword 0x401011d8d2536d5e
.dword 0x3fe6e497e9222c53
.dword 0x3fc6cb2b28dea7cc
.dword 0x401011d8d2536d5e
.dword 0x3fe6e497e9222c53
.dword 0x3fd69570db605dbc
.dword 0x3f9408f2e5bbad62
.dword 0x3f7c476ea334e200
.dword 0x3fd69570db605dbc
.dword 0x3f9408f2e5bbad62
.dword 0x3f7c476ea334e200
.dword 0x3fd69570db605dbc
.dword 0x3f9408f2e5bbad62
.dword 0x3f7c476ea334e200
.dword 0x3fd69570db605dbc
.dword 0x3f9408f2e5bbad62
.dword 0x3f7c476ea334e200
.dword 0x3fd69570db605dbc
.dword 0x3f9408f2e5bbad62
.dword 0x3f7c476ea334e200
.dword 0x3fee0efefd134af8
.dword 0x3fd456a374c46f55
.dword 0x3fd31ac13585ec92
.dword 0x3fee0efefd134af8
.dword 0x3fd456a374c46f55
.dword 0x3fd31ac13585ec92
.dword 0x3fee0efefd134af8
.dword 0x3fd456a374c46f55
.dword 0x3fd31ac13585ec92
.dword 0x3fee0efefd134af8
.dword 0x3fd456a374c46f55
.dword 0x3fd31ac13585ec92
.dword 0x3fee0efefd134af8
.dword 0x3fd456a374c46f55
.dword 0x3fd31ac13585ec92
.dword 0x3fe0d42fb9363a9b
.dword 0x3fe46f85270f7aa6
.dword 0x3fd57e87bf7ae14c
.dword 0x3fe0d42fb9363a9b
.dword 0x3fe46f85270f7aa6
.dword 0x3fd57e87bf7ae14c
.dword 0x3fe0d42fb9363a9b
.dword 0x3fe46f85270f7aa6
.dword 0x3fd57e87bf7ae14c
.dword 0x3fe0d42fb9363a9b
.dword 0x3fe46f85270f7aa6
.dword 0x3fd57e87bf7ae14c
.dword 0x3fe0d42fb9363a9b
.dword 0x3fe46f85270f7aa6
.dword 0x3fd57e87bf7ae14c
.dword 0x3fc47bef8e80a180
.dword 0x3fd61f83f0832db7
.dword 0x3fac52c26eb950a0
.dword 0x3fc47bef8e80a180
.dword 0x3fd61f83f0832db7
.dword 0x3fac52c26eb950a0
.dword 0x3fc47bef8e80a180
.dword 0x3fd61f83f0832db7
.dword 0x3fac52c26eb950a0
.dword 0x3fc47bef8e80a180
.dword 0x3fd61f83f0832db7
.dword 0x3fac52c26eb950a0
.dword 0x3fc47bef8e80a180
.dword 0x3fd61f83f0832db7
.dword 0x3fac52c26eb950a0
.dword 0x3fdae2ff399ff71a
.dword 0x3ff4b5f84870fbe0
.dword 0x3fe166c413b99635
.dword 0x3fdae2ff399ff71a
.dword 0x3ff4b5f84870fbe0
.dword 0x3fe166c413b99635
.dword 0x3fdae2ff399ff71a
.dword 0x3ff4b5f84870fbe0
.dword 0x3fe166c413b99635
.dword 0x3fdae2ff399ff71a
.dword 0x3ff4b5f84870fbe0
.dword 0x3fe166c413b99635
.dword 0x3fdae2ff399ff71a
.dword 0x3ff4b5f84870fbe0
.dword 0x3fe166c413b99635
.dword 0x3fd38047dd32d5ae
.dword 0x3ff54cb18adbde28
.dword 0x3fd9f5d80c06cf5e
.dword 0x3fd38047dd32d5ae
.dword 0x3ff54cb18adbde28
.dword 0x3fd9f5d80c06cf5e
.dword 0x3fd38047dd32d5ae
.dword 0x3ff54cb18adbde28
.dword 0x3fd9f5d80c06cf5e
.dword 0x3fd38047dd32d5ae
.dword 0x3ff54cb18adbde28
.dword 0x3fd9f5d80c06cf5e
.dword 0x3fd38047dd32d5ae
.dword 0x3ff54cb18adbde28
.dword 0x3fd9f5d80c06cf5e
.dword 0x3fbfe0afa5d00ca8
.dword 0x40160b5a20756fab
.dword 0x3fe5f5c7c6a3b6f7
.dword 0x3fbfe0afa5d00ca8
.dword 0x40160b5a20756fab
.dword 0x3fe5f5c7c6a3b6f7
.dword 0x3fbfe0afa5d00ca8
.dword 0x40160b5a20756fab
.dword 0x3fe5f5c7c6a3b6f7
.dword 0x3fbfe0afa5d00ca8
.dword 0x40160b5a20756fab
.dword 0x3fe5f5c7c6a3b6f7
.dword 0x3fbfe0afa5d00ca8
.dword 0x40160b5a20756fab
.dword 0x3fe5f5c7c6a3b6f7
.dword 0x3fce228ab7121f2c
.dword 0x3ffd048077389d7c
.dword 0x3fdb538b01afef66
.dword 0x3fce228ab7121f2c
.dword 0x3ffd048077389d7c
.dword 0x3fdb538b01afef66
.dword 0x3fce228ab7121f2c
.dword 0x3ffd048077389d7c
.dword 0x3fdb538b01afef66
.dword 0x3fce228ab7121f2c
.dword 0x3ffd048077389d7c
.dword 0x3fdb538b01afef66
.dword 0x3fce228ab7121f2c
.dword 0x3ffd048077389d7c
.dword 0x3fdb538b01afef66
.dword 0x3feebed06c26e479
.dword 0x3fd619c6ff8d2bf3
.dword 0x3fd53bf38f610884
.dword 0x3feebed06c26e479
.dword 0x3fd619c6ff8d2bf3
.dword 0x3fd53bf38f610884
.dword 0x3feebed06c26e479
.dword 0x3fd619c6ff8d2bf3
.dword 0x3fd53bf38f610884
.dword 0x3feebed06c26e479
.dword 0x3fd619c6ff8d2bf3
.dword 0x3fd53bf38f610884
.dword 0x3feebed06c26e479
.dword 0x3fd619c6ff8d2bf3
.dword 0x3fd53bf38f610884
.dword 0x3feb22f1544454d1
.dword 0x3fe348b82173f45d
.dword 0x3fe05a6a0e502e4f
.dword 0x3feb22f1544454d1
.dword 0x3fe348b82173f45d
.dword 0x3fe05a6a0e502e4f
.dword 0x3feb22f1544454d1
.dword 0x3fe348b82173f45d
.dword 0x3fe05a6a0e502e4f
.dword 0x3feb22f1544454d1
.dword 0x3fe348b82173f45d
.dword 0x3fe05a6a0e502e4f
.dword 0x3feb22f1544454d1
.dword 0x3fe348b82173f45d
.dword 0x3fe05a6a0e502e4f
.dword 0x3fe29ebce357142d
.dword 0x3fdab637d0aa9c07
.dword 0x3fcf16018a86f080
.dword 0x3fe29ebce357142d
.dword 0x3fdab637d0aa9c07
.dword 0x3fcf16018a86f080
.dword 0x3fe29ebce357142d
.dword 0x3fdab637d0aa9c07
.dword 0x3fcf16018a86f080
.dword 0x3fe29ebce357142d
.dword 0x3fdab637d0aa9c07
.dword 0x3fcf16018a86f080
.dword 0x3fe29ebce357142d
.dword 0x3fdab637d0aa9c07
.dword 0x3fcf16018a86f080
.dword 0x3f944d0b76a15aa0
.dword 0x40463e28d4a48123
.dword 0x3fec38ce1df3c7e2
.dword 0x3f944d0b76a15aa0
.dword 0x40463e28d4a48123
.dword 0x3fec38ce1df3c7e2
.dword 0x3f944d0b76a15aa0
.dword 0x40463e28d4a48123
.dword 0x3fec38ce1df3c7e2
.dword 0x3f944d0b76a15aa0
.dword 0x40463e28d4a48123
.dword 0x3fec38ce1df3c7e2
.dword 0x3f944d0b76a15aa0
.dword 0x40463e28d4a48123
.dword 0x3fec38ce1df3c7e2
.dword 0x3fd150c4b468c9a0
.dword 0x40050e0cd673b6ef
.dword 0x3fe6c936bd906d0d
.dword 0x3fd150c4b468c9a0
.dword 0x40050e0cd673b6ef
.dword 0x3fe6c936bd906d0d
.dword 0x3fd150c4b468c9a0
.dword 0x40050e0cd673b6ef
.dword 0x3fe6c936bd906d0d
.dword 0x3fd150c4b468c9a0
.dword 0x40050e0cd673b6ef
.dword 0x3fe6c936bd906d0d
.dword 0x3fd150c4b468c9a0
.dword 0x40050e0cd673b6ef
.dword 0x3fe6c936bd906d0d
.dword 0x3fde632e340a0070
.dword 0x3fd0d49e6a070e30
.dword 0x3fbff6fd35023f48
.dword 0x3fde632e340a0070
.dword 0x3fd0d49e6a070e30
.dword 0x3fbff6fd35023f48
.dword 0x3fde632e340a0070
.dword 0x3fd0d49e6a070e30
.dword 0x3fbff6fd35023f48
.dword 0x3fde632e340a0070
.dword 0x3fd0d49e6a070e30
.dword 0x3fbff6fd35023f48
.dword 0x3fde632e340a0070
.dword 0x3fd0d49e6a070e30
.dword 0x3fbff6fd35023f48
.dword 0x3fe8305c83ac2e34
.dword 0x3fe2041fdc06c830
.dword 0x3fdb3ca4559916fe
.dword 0x3fe8305c83ac2e34
.dword 0x3fe2041fdc06c830
.dword 0x3fdb3ca4559916fe
.dword 0x3fe8305c83ac2e34
.dword 0x3fe2041fdc06c830
.dword 0x3fdb3ca4559916fe
.dword 0x3fe8305c83ac2e34
.dword 0x3fe2041fdc06c830
.dword 0x3fdb3ca4559916fe
.dword 0x3fe8305c83ac2e34
.dword 0x3fe2041fdc06c830
.dword 0x3fdb3ca4559916fe
.dword 0x3fca51c5ed1face8
.dword 0x3ff76c169f67e93c
.dword 0x3fd343acd9c2e8b0
.dword 0x3fca51c5ed1face8
.dword 0x3ff76c169f67e93c
.dword 0x3fd343acd9c2e8b0
.dword 0x3fca51c5ed1face8
.dword 0x3ff76c169f67e93c
.dword 0x3fd343acd9c2e8b0
.dword 0x3fca51c5ed1face8
.dword 0x3ff76c169f67e93c
.dword 0x3fd343acd9c2e8b0
.dword 0x3fca51c5ed1face8
.dword 0x3ff76c169f67e93c
.dword 0x3fd343acd9c2e8b0
.dword 0x3fe17f837a8dbd5b
.dword 0x3ff47d31d440b7c2
.dword 0x3fe6684f0b019c77
.dword 0x3fe17f837a8dbd5b
.dword 0x3ff47d31d440b7c2
.dword 0x3fe6684f0b019c77
.dword 0x3fe17f837a8dbd5b
.dword 0x3ff47d31d440b7c2
.dword 0x3fe6684f0b019c77
.dword 0x3fe17f837a8dbd5b
.dword 0x3ff47d31d440b7c2
.dword 0x3fe6684f0b019c77
.dword 0x3fe17f837a8dbd5b
.dword 0x3ff47d31d440b7c2
.dword 0x3fe6684f0b019c77
.dword 0x3fe5f281a2233944
.dword 0x3fe3562774c741c4
.dword 0x3fda8627889ccac4
.dword 0x3fe5f281a2233944
.dword 0x3fe3562774c741c4
.dword 0x3fda8627889ccac4
.dword 0x3fe5f281a2233944
.dword 0x3fe3562774c741c4
.dword 0x3fda8627889ccac4
.dword 0x3fe5f281a2233944
.dword 0x3fe3562774c741c4
.dword 0x3fda8627889ccac4
.dword 0x3fe5f281a2233944
.dword 0x3fe3562774c741c4
.dword 0x3fda8627889ccac4
.dword 0x3fd47453abbf0976
.dword 0x3ffca7fce439c398
.dword 0x3fe25129f0e41e24
.dword 0x3fd47453abbf0976
.dword 0x3ffca7fce439c398
.dword 0x3fe25129f0e41e24
.dword 0x3fd47453abbf0976
.dword 0x3ffca7fce439c398
.dword 0x3fe25129f0e41e24
.dword 0x3fd47453abbf0976
.dword 0x3ffca7fce439c398
.dword 0x3fe25129f0e41e24
.dword 0x3fd47453abbf0976
.dword 0x3ffca7fce439c398
.dword 0x3fe25129f0e41e24
.dword 0x3fee17bf4986225a
.dword 0x3feb050cef74e110
.dword 0x3fe968c94603abec
.dword 0x3fee17bf4986225a
.dword 0x3feb050cef74e110
.dword 0x3fe968c94603abec
.dword 0x3fee17bf4986225a
.dword 0x3feb050cef74e110
.dword 0x3fe968c94603abec
.dword 0x3fee17bf4986225a
.dword 0x3feb050cef74e110
.dword 0x3fe968c94603abec
.dword 0x3fee17bf4986225a
.dword 0x3feb050cef74e110
.dword 0x3fe968c94603abec
.dword 0x3fdcf1c1324d98e0
.dword 0x40009414340f789b
.dword 0x3fedfda1f9be163d
.dword 0x3fdcf1c1324d98e0
.dword 0x40009414340f789b
.dword 0x3fedfda1f9be163d
.dword 0x3fdcf1c1324d98e0
.dword 0x40009414340f789b
.dword 0x3fedfda1f9be163d
.dword 0x3fdcf1c1324d98e0
.dword 0x40009414340f789b
.dword 0x3fedfda1f9be163d
.dword 0x3fdcf1c1324d98e0
.dword 0x40009414340f789b
.dword 0x3fedfda1f9be163d
.dword 0x3fd71c0aae7f3d7a
.dword 0x3ffbcf3c03be4fa7
.dword 0x3fe41551bf9c3b29
.dword 0x3fd71c0aae7f3d7a
.dword 0x3ffbcf3c03be4fa7
.dword 0x3fe41551bf9c3b29
.dword 0x3fd71c0aae7f3d7a
.dword 0x3ffbcf3c03be4fa7
.dword 0x3fe41551bf9c3b29
.dword 0x3fd71c0aae7f3d7a
.dword 0x3ffbcf3c03be4fa7
.dword 0x3fe41551bf9c3b29
.dword 0x3fd71c0aae7f3d7a
.dword 0x3ffbcf3c03be4fa7
.dword 0x3fe41551bf9c3b29
.dword 0x3fea377d4f967891
.dword 0x3fe0579f54dab2b4
.dword 0x3fdac7101b6e2c66
.dword 0x3fea377d4f967891
.dword 0x3fe0579f54dab2b4
.dword 0x3fdac7101b6e2c66
.dword 0x3fea377d4f967891
.dword 0x3fe0579f54dab2b4
.dword 0x3fdac7101b6e2c66
.dword 0x3fea377d4f967891
.dword 0x3fe0579f54dab2b4
.dword 0x3fdac7101b6e2c66
.dword 0x3fea377d4f967891
.dword 0x3fe0579f54dab2b4
.dword 0x3fdac7101b6e2c66
.dword 0x3fe620eab9c24beb
.dword 0x3fd1047b1ce9f688
.dword 0x3fc7892be5168458
.dword 0x3fe620eab9c24beb
.dword 0x3fd1047b1ce9f688
.dword 0x3fc7892be5168458
.dword 0x3fe620eab9c24beb
.dword 0x3fd1047b1ce9f688
.dword 0x3fc7892be5168458
.dword 0x3fe620eab9c24beb
.dword 0x3fd1047b1ce9f688
.dword 0x3fc7892be5168458
.dword 0x3fe620eab9c24beb
.dword 0x3fd1047b1ce9f688
.dword 0x3fc7892be5168458
.dword 0x3feb624329d65671
.dword 0x3ff07ea9e800cb7e
.dword 0x3fec3b0bc5b76267
.dword 0x3feb624329d65671
.dword 0x3ff07ea9e800cb7e
.dword 0x3fec3b0bc5b76267
.dword 0x3feb624329d65671
.dword 0x3ff07ea9e800cb7e
.dword 0x3fec3b0bc5b76267
.dword 0x3feb624329d65671
.dword 0x3ff07ea9e800cb7e
.dword 0x3fec3b0bc5b76267
.dword 0x3feb624329d65671
.dword 0x3ff07ea9e800cb7e
.dword 0x3fec3b0bc5b76267
.dword 0x3fc21db49dde8418
.dword 0x401413c610b0f2bf
.dword 0x3fe6bb854e52cd37
.dword 0x3fc21db49dde8418
.dword 0x401413c610b0f2bf
.dword 0x3fe6bb854e52cd37
.dword 0x3fc21db49dde8418
.dword 0x401413c610b0f2bf
.dword 0x3fe6bb854e52cd37
.dword 0x3fc21db49dde8418
.dword 0x401413c610b0f2bf
.dword 0x3fe6bb854e52cd37
.dword 0x3fc21db49dde8418
.dword 0x401413c610b0f2bf
.dword 0x3fe6bb854e52cd37
.dword 0x3f985094e3b39740
.dword 0x40441385bc87f592
.dword 0x3fee826509c5f9a4
.dword 0x3f985094e3b39740
.dword 0x40441385bc87f592
.dword 0x3fee826509c5f9a4
.dword 0x3f985094e3b39740
.dword 0x40441385bc87f592
.dword 0x3fee826509c5f9a4
.dword 0x3f985094e3b39740
.dword 0x40441385bc87f592
.dword 0x3fee826509c5f9a4
.dword 0x3f985094e3b39740
.dword 0x40441385bc87f592
.dword 0x3fee826509c5f9a4
.dword 0x3fdb10becb50cfaa
.dword 0x3ff6d37eb3c20d9d
.dword 0x3fe34e64bfcd3876
.dword 0x3fdb10becb50cfaa
.dword 0x3ff6d37eb3c20d9d
.dword 0x3fe34e64bfcd3876
.dword 0x3fdb10becb50cfaa
.dword 0x3ff6d37eb3c20d9d
.dword 0x3fe34e64bfcd3876
.dword 0x3fdb10becb50cfaa
.dword 0x3ff6d37eb3c20d9d
.dword 0x3fe34e64bfcd3876
.dword 0x3fdb10becb50cfaa
.dword 0x3ff6d37eb3c20d9d
.dword 0x3fe34e64bfcd3876
.dword 0x3fd7d822535605ba
.dword 0x3fc1f71aa2a4024b
.dword 0x3faac5e4bc0a73d0
.dword 0x3fd7d822535605ba
.dword 0x3fc1f71aa2a4024b
.dword 0x3faac5e4bc0a73d0
.dword 0x3fd7d822535605ba
.dword 0x3fc1f71aa2a4024b
.dword 0x3faac5e4bc0a73d0
.dword 0x3fd7d822535605ba
.dword 0x3fc1f71aa2a4024b
.dword 0x3faac5e4bc0a73d0
.dword 0x3fd7d822535605ba
.dword 0x3fc1f71aa2a4024b
.dword 0x3faac5e4bc0a73d0
.dword 0x3fec09d07835cfbf
.dword 0x3fec5e50b5e5cccb
.dword 0x3fe8db39f57a3d34
.dword 0x3fec09d07835cfbf
.dword 0x3fec5e50b5e5cccb
.dword 0x3fe8db39f57a3d34
.dword 0x3fec09d07835cfbf
.dword 0x3fec5e50b5e5cccb
.dword 0x3fe8db39f57a3d34
.dword 0x3fec09d07835cfbf
.dword 0x3fec5e50b5e5cccb
.dword 0x3fe8db39f57a3d34
.dword 0x3fec09d07835cfbf
.dword 0x3fec5e50b5e5cccb
.dword 0x3fe8db39f57a3d34
.dword 0x3fe26a56bbc3788a
.dword 0x3fd34189d86e22a7
.dword 0x3fc629b5a6f3e6d4
.dword 0x3fe26a56bbc3788a
.dword 0x3fd34189d86e22a7
.dword 0x3fc629b5a6f3e6d4
.dword 0x3fe26a56bbc3788a
.dword 0x3fd34189d86e22a7
.dword 0x3fc629b5a6f3e6d4
.dword 0x3fe26a56bbc3788a
.dword 0x3fd34189d86e22a7
.dword 0x3fc629b5a6f3e6d4
.dword 0x3fe26a56bbc3788a
.dword 0x3fd34189d86e22a7
.dword 0x3fc629b5a6f3e6d4
.dword 0x3fedc3be8f098fa4
.dword 0x3fef484d66a17113
.dword 0x3fed18e105cbba45
.dword 0x3fedc3be8f098fa4
.dword 0x3fef484d66a17113
.dword 0x3fed18e105cbba45
.dword 0x3fedc3be8f098fa4
.dword 0x3fef484d66a17113
.dword 0x3fed18e105cbba45
.dword 0x3fedc3be8f098fa4
.dword 0x3fef484d66a17113
.dword 0x3fed18e105cbba45
.dword 0x3fedc3be8f098fa4
.dword 0x3fef484d66a17113
.dword 0x3fed18e105cbba45
.dword 0x3feeccd5e7a7fd73
.dword 0x3fe2d450c216da9d
.dword 0x3fe21f931653caae
.dword 0x3feeccd5e7a7fd73
.dword 0x3fe2d450c216da9d
.dword 0x3fe21f931653caae
.dword 0x3feeccd5e7a7fd73
.dword 0x3fe2d450c216da9d
.dword 0x3fe21f931653caae
.dword 0x3feeccd5e7a7fd73
.dword 0x3fe2d450c216da9d
.dword 0x3fe21f931653caae
.dword 0x3feeccd5e7a7fd73
.dword 0x3fe2d450c216da9d
.dword 0x3fe21f931653caae
.dword 0x3fee24df705c768a
.dword 0x3fe0bb86c2177a06
.dword 0x3fdf862c46484c52
.dword 0x3fee24df705c768a
.dword 0x3fe0bb86c2177a06
.dword 0x3fdf862c46484c52
.dword 0x3fee24df705c768a
.dword 0x3fe0bb86c2177a06
.dword 0x3fdf862c46484c52
.dword 0x3fee24df705c768a
.dword 0x3fe0bb86c2177a06
.dword 0x3fdf862c46484c52
.dword 0x3fee24df705c768a
.dword 0x3fe0bb86c2177a06
.dword 0x3fdf862c46484c52
.dword 0x3fddb41bf73f38c0
.dword 0x3ff5de031eb83486
.dword 0x3fe44c46c1ab399f
.dword 0x3fddb41bf73f38c0
.dword 0x3ff5de031eb83486
.dword 0x3fe44c46c1ab399f
.dword 0x3fddb41bf73f38c0
.dword 0x3ff5de031eb83486
.dword 0x3fe44c46c1ab399f
.dword 0x3fddb41bf73f38c0
.dword 0x3ff5de031eb83486
.dword 0x3fe44c46c1ab399f
.dword 0x3fddb41bf73f38c0
.dword 0x3ff5de031eb83486
.dword 0x3fe44c46c1ab399f
.dword 0x3fd65716ef9d1c02
.dword 0x4005421a51b61623
.dword 0x3fedae9a18b703e0
.dword 0x3fd65716ef9d1c02
.dword 0x4005421a51b61623
.dword 0x3fedae9a18b703e0
.dword 0x3fd65716ef9d1c02
.dword 0x4005421a51b61623
.dword 0x3fedae9a18b703e0
.dword 0x3fd65716ef9d1c02
.dword 0x4005421a51b61623
.dword 0x3fedae9a18b703e0
.dword 0x3fd65716ef9d1c02
.dword 0x4005421a51b61623
.dword 0x3fedae9a18b703e0
.dword 0x3fe5a329783562c9
.dword 0x3ff417e0c661f3f1
.dword 0x3feb2c3e5a6bb364
.dword 0x3fe5a329783562c9
.dword 0x3ff417e0c661f3f1
.dword 0x3feb2c3e5a6bb364
.dword 0x3fe5a329783562c9
.dword 0x3ff417e0c661f3f1
.dword 0x3feb2c3e5a6bb364
.dword 0x3fe5a329783562c9
.dword 0x3ff417e0c661f3f1
.dword 0x3feb2c3e5a6bb364
.dword 0x3fe6d761a60ec568
.dword 0x3ff551524634d31f
.dword 0x3fee6ec7fc5a3584
.dword 0x3fe6d761a60ec568
.dword 0x3ff551524634d31f
.dword 0x3fee6ec7fc5a3584
.dword 0x3fe6d761a60ec568
.dword 0x3ff551524634d31f
.dword 0x3fee6ec7fc5a3584
.dword 0x3fcfa8931dc8682c
.dword 0x3ff6ff7eeafae67b
.dword 0x3fd6c0aa090b4eae
.dword 0x3fcfa8931dc8682c
.dword 0x3ff6ff7eeafae67b
.dword 0x3fd6c0aa090b4eae
.dword 0x3fcfa8931dc8682c
.dword 0x3ff6ff7eeafae67b
.dword 0x3fd6c0aa090b4eae
.dword 0x3fcfa8931dc8682c
.dword 0x3ff6ff7eeafae67b
.dword 0x3fd6c0aa090b4eae
.dword 0x3fcfa8931dc8682c
.dword 0x3ff6ff7eeafae67b
.dword 0x3fd6c0aa090b4eae
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_8:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_9:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_10:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_11:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_12:
    .fill 162*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
