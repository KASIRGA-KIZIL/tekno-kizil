
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:16 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V FD extension for the fnmsub_b6 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmsub_b6)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd == rs3 != rs2, rs1==f27, rs2==f7, rs3==f27, rd==f27, fs1 == 0 and fe1 == 0x39a and fm1 == 0xe038bcc967e53 and fs2 == 1 and fe2 == 0x41d and fm2 == 0x10f0cde8ed0f1 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2b4fc34ef8713 and rm_val == 0  
// opcode: fnmsub.d ; op1:f27; op2:f7; op3:f27; dest:f27; op1val:0x39ae038bcc967e53; op2val:0xc1d10f0cde8ed0f1; op3val:0x39ae038bcc967e53; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f27, f27, f7, f27, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f22, rs2==f30, rs3==f23, rd==f0, fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xff8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62ff03f3d2 and rm_val == 4  
// opcode: fnmsub.d ; op1:f22; op2:f30; op3:f23; dest:f0; op1val:0x39b3c701a3548e1d; op2val:0xc64ff8ce40f090d9; op3val:0x395dae62ff03f3d2; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f0, f22, f30, f23, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f8, rs2==f6, rs3==f9, rd==f8, fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xff8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62ff03f3d2 and rm_val == 3  
// opcode: fnmsub.d ; op1:f8; op2:f6; op3:f9; dest:f8; op1val:0x39b3c701a3548e1d; op2val:0xc64ff8ce40f090d9; op3val:0x395dae62ff03f3d2; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f8, f8, f6, f9, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==f4, rs2==f20, rs3==f20, rd==f20, fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xff8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62ff03f3d2 and rm_val == 2  
// opcode: fnmsub.d ; op1:f4; op2:f20; op3:f20; dest:f20; op1val:0x39b3c701a3548e1d; op2val:0xc64ff8ce40f090d9; op3val:0xc64ff8ce40f090d9; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f20, f4, f20, f20, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f13, rs2==f3, rs3==f13, rd==f19, fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xff8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62ff03f3d2 and rm_val == 1  
// opcode: fnmsub.d ; op1:f13; op2:f3; op3:f13; dest:f19; op1val:0x39b3c701a3548e1d; op2val:0xc64ff8ce40f090d9; op3val:0x39b3c701a3548e1d; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f19, f13, f3, f13, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f12, rs2==f0, rs3==f11, rd==f11, fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xff8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62ff03f3d2 and rm_val == 0  
// opcode: fnmsub.d ; op1:f12; op2:f0; op3:f11; dest:f11; op1val:0x39b3c701a3548e1d; op2val:0xc64ff8ce40f090d9; op3val:0x395dae62ff03f3d2; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f11, f12, f0, f11, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f1, rs2==f1, rs3==f1, rd==f7, fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27f73b38190cd and rm_val == 4  
// opcode: fnmsub.d ; op1:f1; op2:f1; op3:f1; dest:f7; op1val:0x39ac95b3e1b9233b; op2val:0x39ac95b3e1b9233b; op3val:0x39ac95b3e1b9233b; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f7, f1, f1, f1, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rs2 == rd != rs3, rs1==f17, rs2==f17, rs3==f26, rd==f17, fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27f73b38190cd and rm_val == 3  
// opcode: fnmsub.d ; op1:f17; op2:f17; op3:f26; dest:f17; op1val:0x39ac95b3e1b9233b; op2val:0x39ac95b3e1b9233b; op3val:0x39727f73b38190cd; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f17, f17, f17, f26, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f29, rs2==f29, rs3==f29, rd==f29, fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27f73b38190cd and rm_val == 2  
// opcode: fnmsub.d ; op1:f29; op2:f29; op3:f29; dest:f29; op1val:0x39ac95b3e1b9233b; op2val:0x39ac95b3e1b9233b; op3val:0x39ac95b3e1b9233b; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f29, f29, f29, f29, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f21, rs2==f28, rs3==f28, rd==f25, fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27f73b38190cd and rm_val == 1  
// opcode: fnmsub.d ; op1:f21; op2:f28; op3:f28; dest:f25; op1val:0x39ac95b3e1b9233b; op2val:0xc6561ef112e7ddd2; op3val:0xc6561ef112e7ddd2; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f25, f21, f28, f28, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f31, rs2==f31, rs3==f12, rd==f2, fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27f73b38190cd and rm_val == 0  
// opcode: fnmsub.d ; op1:f31; op2:f31; op3:f12; dest:f2; op1val:0x39ac95b3e1b9233b; op2val:0x39ac95b3e1b9233b; op3val:0x39727f73b38190cd; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f2, f31, f31, f12, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f30, rs2==f9, rs3==f18, rd==f9, fs1 == 0 and fe1 == 0x399 and fm1 == 0x99ec4260f18a4 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x8ae3826fd6bf0 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38541e6f2f8cc and rm_val == 4  
// opcode: fnmsub.d ; op1:f30; op2:f9; op3:f18; dest:f9; op1val:0x39999ec4260f18a4; op2val:0xc668ae3826fd6bf0; op3val:0x39a38541e6f2f8cc; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f9, f30, f9, f18, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f18, rs2==f23, rs3==f10, rd==f5, fs1 == 0 and fe1 == 0x399 and fm1 == 0x99ec4260f18a4 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x8ae3826fd6bf0 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38541e6f2f8cc and rm_val == 3  
// opcode: fnmsub.d ; op1:f18; op2:f23; op3:f10; dest:f5; op1val:0x39999ec4260f18a4; op2val:0xc668ae3826fd6bf0; op3val:0x39a38541e6f2f8cc; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f5, f18, f23, f10, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f24, rs2==f27, rs3==f0, rd==f6, fs1 == 0 and fe1 == 0x399 and fm1 == 0x99ec4260f18a4 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x8ae3826fd6bf0 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38541e6f2f8cc and rm_val == 2  
// opcode: fnmsub.d ; op1:f24; op2:f27; op3:f0; dest:f6; op1val:0x39999ec4260f18a4; op2val:0xc668ae3826fd6bf0; op3val:0x39a38541e6f2f8cc; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f6, f24, f27, f0, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f7, rs2==f10, rs3==f25, rd==f30, fs1 == 0 and fe1 == 0x399 and fm1 == 0x99ec4260f18a4 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x8ae3826fd6bf0 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38541e6f2f8cc and rm_val == 1  
// opcode: fnmsub.d ; op1:f7; op2:f10; op3:f25; dest:f30; op1val:0x39999ec4260f18a4; op2val:0xc668ae3826fd6bf0; op3val:0x39a38541e6f2f8cc; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f30, f7, f10, f25, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f28, rs2==f24, rs3==f15, rd==f13, fs1 == 0 and fe1 == 0x399 and fm1 == 0x99ec4260f18a4 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x8ae3826fd6bf0 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38541e6f2f8cc and rm_val == 0  
// opcode: fnmsub.d ; op1:f28; op2:f24; op3:f15; dest:f13; op1val:0x39999ec4260f18a4; op2val:0xc668ae3826fd6bf0; op3val:0x39a38541e6f2f8cc; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f28, f24, f15, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f11, rs2==f15, rs3==f16, rd==f14, fs1 == 0 and fe1 == 0x39b and fm1 == 0x099fd23cef832 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x30b463f83caec and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38057ebfc111a and rm_val == 4  
// opcode: fnmsub.d ; op1:f11; op2:f15; op3:f16; dest:f14; op1val:0x39b099fd23cef832; op2val:0xc6530b463f83caec; op3val:0x39a38057ebfc111a; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f14, f11, f15, f16, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f10, rs2==f11, rs3==f8, rd==f24, fs1 == 0 and fe1 == 0x39b and fm1 == 0x099fd23cef832 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x30b463f83caec and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38057ebfc111a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f8; dest:f24; op1val:0x39b099fd23cef832; op2val:0xc6530b463f83caec; op3val:0x39a38057ebfc111a; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f24, f10, f11, f8, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f16, rs2==f22, rs3==f21, rd==f28, fs1 == 0 and fe1 == 0x39b and fm1 == 0x099fd23cef832 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x30b463f83caec and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38057ebfc111a and rm_val == 2  
// opcode: fnmsub.d ; op1:f16; op2:f22; op3:f21; dest:f28; op1val:0x39b099fd23cef832; op2val:0xc6530b463f83caec; op3val:0x39a38057ebfc111a; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f28, f16, f22, f21, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f25, rs2==f21, rs3==f4, rd==f15, fs1 == 0 and fe1 == 0x39b and fm1 == 0x099fd23cef832 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x30b463f83caec and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38057ebfc111a and rm_val == 1  
// opcode: fnmsub.d ; op1:f25; op2:f21; op3:f4; dest:f15; op1val:0x39b099fd23cef832; op2val:0xc6530b463f83caec; op3val:0x39a38057ebfc111a; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f15, f25, f21, f4, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f5, rs2==f18, rs3==f3, rd==f16, fs1 == 0 and fe1 == 0x39b and fm1 == 0x099fd23cef832 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x30b463f83caec and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38057ebfc111a and rm_val == 0  
// opcode: fnmsub.d ; op1:f5; op2:f18; op3:f3; dest:f16; op1val:0x39b099fd23cef832; op2val:0xc6530b463f83caec; op3val:0x39a38057ebfc111a; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f16, f5, f18, f3, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f14, rs2==f4, rs3==f6, rd==f31, fs1 == 0 and fe1 == 0x399 and fm1 == 0xb69d7df6648b9 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x710e89f183b2f and fs3 == 0 and fe3 == 0x399 and fm3 == 0x925930a7283d5 and rm_val == 4  
// opcode: fnmsub.d ; op1:f14; op2:f4; op3:f6; dest:f31; op1val:0x399b69d7df6648b9; op2val:0xc66710e89f183b2f; op3val:0x399925930a7283d5; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f31, f14, f4, f6, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f6, rs2==f8, rs3==f30, rd==f3, fs1 == 0 and fe1 == 0x399 and fm1 == 0xb69d7df6648b9 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x710e89f183b2f and fs3 == 0 and fe3 == 0x399 and fm3 == 0x925930a7283d5 and rm_val == 3  
// opcode: fnmsub.d ; op1:f6; op2:f8; op3:f30; dest:f3; op1val:0x399b69d7df6648b9; op2val:0xc66710e89f183b2f; op3val:0x399925930a7283d5; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f3, f6, f8, f30, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f2, rs2==f13, rs3==f22, rd==f1, fs1 == 0 and fe1 == 0x399 and fm1 == 0xb69d7df6648b9 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x710e89f183b2f and fs3 == 0 and fe3 == 0x399 and fm3 == 0x925930a7283d5 and rm_val == 2  
// opcode: fnmsub.d ; op1:f2; op2:f13; op3:f22; dest:f1; op1val:0x399b69d7df6648b9; op2val:0xc66710e89f183b2f; op3val:0x399925930a7283d5; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f1, f2, f13, f22, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f23, rs2==f5, rs3==f7, rd==f26, fs1 == 0 and fe1 == 0x399 and fm1 == 0xb69d7df6648b9 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x710e89f183b2f and fs3 == 0 and fe3 == 0x399 and fm3 == 0x925930a7283d5 and rm_val == 1  
// opcode: fnmsub.d ; op1:f23; op2:f5; op3:f7; dest:f26; op1val:0x399b69d7df6648b9; op2val:0xc66710e89f183b2f; op3val:0x399925930a7283d5; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f26, f23, f5, f7, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f19, rs2==f2, rs3==f31, rd==f21, fs1 == 0 and fe1 == 0x399 and fm1 == 0xb69d7df6648b9 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x710e89f183b2f and fs3 == 0 and fe3 == 0x399 and fm3 == 0x925930a7283d5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f19; op2:f2; op3:f31; dest:f21; op1val:0x399b69d7df6648b9; op2val:0xc66710e89f183b2f; op3val:0x399925930a7283d5; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f21, f19, f2, f31, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f20, rs2==f25, rs3==f17, rd==f18, fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1ff8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and rm_val == 4  
// opcode: fnmsub.d ; op1:f20; op2:f25; op3:f17; dest:f18; op1val:0x393190efde47be0e; op2val:0xc6d1ff8cc931a9a9; op3val:0x39ab80125e1b1046; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f18, f20, f25, f17, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f0, rs2==f12, rs3==f24, rd==f23, fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1ff8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and rm_val == 3  
// opcode: fnmsub.d ; op1:f0; op2:f12; op3:f24; dest:f23; op1val:0x393190efde47be0e; op2val:0xc6d1ff8cc931a9a9; op3val:0x39ab80125e1b1046; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f23, f0, f12, f24, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f26, rs2==f19, rs3==f5, rd==f4, fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1ff8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and rm_val == 2  
// opcode: fnmsub.d ; op1:f26; op2:f19; op3:f5; dest:f4; op1val:0x393190efde47be0e; op2val:0xc6d1ff8cc931a9a9; op3val:0x39ab80125e1b1046; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f4, f26, f19, f5, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f15, rs2==f16, rs3==f14, rd==f22, fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1ff8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and rm_val == 1  
// opcode: fnmsub.d ; op1:f15; op2:f16; op3:f14; dest:f22; op1val:0x393190efde47be0e; op2val:0xc6d1ff8cc931a9a9; op3val:0x39ab80125e1b1046; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f22, f15, f16, f14, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f3, rs2==f14, rs3==f19, rd==f10, fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1ff8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and rm_val == 0  
// opcode: fnmsub.d ; op1:f3; op2:f14; op3:f19; dest:f10; op1val:0x393190efde47be0e; op2val:0xc6d1ff8cc931a9a9; op3val:0x39ab80125e1b1046; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f10, f3, f14, f19, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f9, rs2==f26, rs3==f2, rd==f12, fs1 == 0 and fe1 == 0x399 and fm1 == 0x872fbd0697864 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x9dcd6cdb373ca and fs3 == 0 and fe3 == 0x39a and fm3 == 0x8770d62dcf522 and rm_val == 4  
// opcode: fnmsub.d ; op1:f9; op2:f26; op3:f2; dest:f12; op1val:0x399872fbd0697864; op2val:0xc669dcd6cdb373ca; op3val:0x39a8770d62dcf522; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f12, f9, f26, f2, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x872fbd0697864 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x9dcd6cdb373ca and fs3 == 0 and fe3 == 0x39a and fm3 == 0x8770d62dcf522 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399872fbd0697864; op2val:0xc669dcd6cdb373ca; op3val:0x39a8770d62dcf522; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x872fbd0697864 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x9dcd6cdb373ca and fs3 == 0 and fe3 == 0x39a and fm3 == 0x8770d62dcf522 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399872fbd0697864; op2val:0xc669dcd6cdb373ca; op3val:0x39a8770d62dcf522; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x872fbd0697864 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x9dcd6cdb373ca and fs3 == 0 and fe3 == 0x39a and fm3 == 0x8770d62dcf522 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399872fbd0697864; op2val:0xc669dcd6cdb373ca; op3val:0x39a8770d62dcf522; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x872fbd0697864 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x9dcd6cdb373ca and fs3 == 0 and fe3 == 0x39a and fm3 == 0x8770d62dcf522 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399872fbd0697864; op2val:0xc669dcd6cdb373ca; op3val:0x39a8770d62dcf522; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0x7a4387525b0f4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd2951553b9cee and fs3 == 0 and fe3 == 0x397 and fm3 == 0x523987d918460 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3987a4387525b0f4; op2val:0xbfdd2951553b9cee; op3val:0x397523987d918460; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0x7a4387525b0f4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd2951553b9cee and fs3 == 0 and fe3 == 0x397 and fm3 == 0x523987d918460 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3987a4387525b0f4; op2val:0xbfdd2951553b9cee; op3val:0x397523987d918460; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0x7a4387525b0f4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd2951553b9cee and fs3 == 0 and fe3 == 0x397 and fm3 == 0x523987d918460 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3987a4387525b0f4; op2val:0xbfdd2951553b9cee; op3val:0x397523987d918460; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0x7a4387525b0f4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd2951553b9cee and fs3 == 0 and fe3 == 0x397 and fm3 == 0x523987d918460 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3987a4387525b0f4; op2val:0xbfdd2951553b9cee; op3val:0x397523987d918460; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0x7a4387525b0f4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd2951553b9cee and fs3 == 0 and fe3 == 0x397 and fm3 == 0x523987d918460 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3987a4387525b0f4; op2val:0xbfdd2951553b9cee; op3val:0x397523987d918460; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xd4d9f1794d731 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf524488086933 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xaed8b7f6659fc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399d4d9f1794d731; op2val:0xbfdf524488086933; op3val:0x398aed8b7f6659fc; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xd4d9f1794d731 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf524488086933 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xaed8b7f6659fc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399d4d9f1794d731; op2val:0xbfdf524488086933; op3val:0x398aed8b7f6659fc; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xd4d9f1794d731 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf524488086933 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xaed8b7f6659fc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399d4d9f1794d731; op2val:0xbfdf524488086933; op3val:0x398aed8b7f6659fc; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xd4d9f1794d731 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf524488086933 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xaed8b7f6659fc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399d4d9f1794d731; op2val:0xbfdf524488086933; op3val:0x398aed8b7f6659fc; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xd4d9f1794d731 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf524488086933 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xaed8b7f6659fc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399d4d9f1794d731; op2val:0xbfdf524488086933; op3val:0x398aed8b7f6659fc; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2209275762c5c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf55704cec8e60 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x83d9a457c5398 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b2209275762c5c; op2val:0xbfdf55704cec8e60; op3val:0x39983d9a457c5398; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2209275762c5c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf55704cec8e60 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x83d9a457c5398 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b2209275762c5c; op2val:0xbfdf55704cec8e60; op3val:0x39983d9a457c5398; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2209275762c5c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf55704cec8e60 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x83d9a457c5398 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b2209275762c5c; op2val:0xbfdf55704cec8e60; op3val:0x39983d9a457c5398; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2209275762c5c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf55704cec8e60 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x83d9a457c5398 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b2209275762c5c; op2val:0xbfdf55704cec8e60; op3val:0x39983d9a457c5398; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2209275762c5c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf55704cec8e60 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x83d9a457c5398 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b2209275762c5c; op2val:0xbfdf55704cec8e60; op3val:0x39983d9a457c5398; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc040934d45782 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x7df9ce01785ce and fs3 == 0 and fe3 == 0x39b and fm3 == 0x39ab057fa02c0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ac040934d45782; op2val:0xc017df9ce01785ce; op3val:0x39b39ab057fa02c0; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc040934d45782 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x7df9ce01785ce and fs3 == 0 and fe3 == 0x39b and fm3 == 0x39ab057fa02c0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ac040934d45782; op2val:0xc017df9ce01785ce; op3val:0x39b39ab057fa02c0; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc040934d45782 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x7df9ce01785ce and fs3 == 0 and fe3 == 0x39b and fm3 == 0x39ab057fa02c0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ac040934d45782; op2val:0xc017df9ce01785ce; op3val:0x39b39ab057fa02c0; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc040934d45782 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x7df9ce01785ce and fs3 == 0 and fe3 == 0x39b and fm3 == 0x39ab057fa02c0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ac040934d45782; op2val:0xc017df9ce01785ce; op3val:0x39b39ab057fa02c0; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc040934d45782 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x7df9ce01785ce and fs3 == 0 and fe3 == 0x39b and fm3 == 0x39ab057fa02c0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ac040934d45782; op2val:0xc017df9ce01785ce; op3val:0x39b39ab057fa02c0; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x09d1aa79c23a7 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xb2b2b55701cc8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x315d3a4ddb3be and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39909d1aa79c23a7; op2val:0xc08b2b2b55701cc8; op3val:0x39b315d3a4ddb3be; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x09d1aa79c23a7 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xb2b2b55701cc8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x315d3a4ddb3be and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39909d1aa79c23a7; op2val:0xc08b2b2b55701cc8; op3val:0x39b315d3a4ddb3be; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x09d1aa79c23a7 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xb2b2b55701cc8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x315d3a4ddb3be and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39909d1aa79c23a7; op2val:0xc08b2b2b55701cc8; op3val:0x39b315d3a4ddb3be; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x09d1aa79c23a7 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xb2b2b55701cc8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x315d3a4ddb3be and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39909d1aa79c23a7; op2val:0xc08b2b2b55701cc8; op3val:0x39b315d3a4ddb3be; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x09d1aa79c23a7 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xb2b2b55701cc8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x315d3a4ddb3be and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39909d1aa79c23a7; op2val:0xc08b2b2b55701cc8; op3val:0x39b315d3a4ddb3be; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5df9ddc92c784 and fs2 == 1 and fe2 == 0x40f and fm2 == 0x7685a045f0410 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb7efe7e5707bd and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a5df9ddc92c784; op2val:0xc0f7685a045f0410; op3val:0x39ab7efe7e5707bd; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5df9ddc92c784 and fs2 == 1 and fe2 == 0x40f and fm2 == 0x7685a045f0410 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb7efe7e5707bd and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a5df9ddc92c784; op2val:0xc0f7685a045f0410; op3val:0x39ab7efe7e5707bd; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5df9ddc92c784 and fs2 == 1 and fe2 == 0x40f and fm2 == 0x7685a045f0410 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb7efe7e5707bd and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a5df9ddc92c784; op2val:0xc0f7685a045f0410; op3val:0x39ab7efe7e5707bd; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5df9ddc92c784 and fs2 == 1 and fe2 == 0x40f and fm2 == 0x7685a045f0410 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb7efe7e5707bd and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a5df9ddc92c784; op2val:0xc0f7685a045f0410; op3val:0x39ab7efe7e5707bd; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5df9ddc92c784 and fs2 == 1 and fe2 == 0x40f and fm2 == 0x7685a045f0410 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb7efe7e5707bd and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a5df9ddc92c784; op2val:0xc0f7685a045f0410; op3val:0x39ab7efe7e5707bd; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x778a21cf93979 and fs2 == 1 and fe2 == 0x41e and fm2 == 0x5d05ec080509a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3804775d28375 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399778a21cf93979; op2val:0xc1e5d05ec080509a; op3val:0x39b3804775d28375; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x778a21cf93979 and fs2 == 1 and fe2 == 0x41e and fm2 == 0x5d05ec080509a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3804775d28375 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399778a21cf93979; op2val:0xc1e5d05ec080509a; op3val:0x39b3804775d28375; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x778a21cf93979 and fs2 == 1 and fe2 == 0x41e and fm2 == 0x5d05ec080509a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3804775d28375 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399778a21cf93979; op2val:0xc1e5d05ec080509a; op3val:0x39b3804775d28375; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x778a21cf93979 and fs2 == 1 and fe2 == 0x41e and fm2 == 0x5d05ec080509a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3804775d28375 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399778a21cf93979; op2val:0xc1e5d05ec080509a; op3val:0x39b3804775d28375; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x778a21cf93979 and fs2 == 1 and fe2 == 0x41e and fm2 == 0x5d05ec080509a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3804775d28375 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399778a21cf93979; op2val:0xc1e5d05ec080509a; op3val:0x39b3804775d28375; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3ed05a43970e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc750f043d5c8d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1b1ccd357d197 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3ed05a43970e3; op2val:0xbfec750f043d5c8d; op3val:0x39b1b1ccd357d197; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3ed05a43970e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc750f043d5c8d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1b1ccd357d197 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3ed05a43970e3; op2val:0xbfec750f043d5c8d; op3val:0x39b1b1ccd357d197; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3ed05a43970e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc750f043d5c8d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1b1ccd357d197 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3ed05a43970e3; op2val:0xbfec750f043d5c8d; op3val:0x39b1b1ccd357d197; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3ed05a43970e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc750f043d5c8d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1b1ccd357d197 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3ed05a43970e3; op2val:0xbfec750f043d5c8d; op3val:0x39b1b1ccd357d197; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3ed05a43970e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc750f043d5c8d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1b1ccd357d197 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3ed05a43970e3; op2val:0xbfec750f043d5c8d; op3val:0x39b1b1ccd357d197; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x0fe3d26689661 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x14930996ec6a3 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x17b5e6929a8da and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3990fe3d26689661; op2val:0xbff14930996ec6a3; op3val:0x39917b5e6929a8da; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x0fe3d26689661 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x14930996ec6a3 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x17b5e6929a8da and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3990fe3d26689661; op2val:0xbff14930996ec6a3; op3val:0x39917b5e6929a8da; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x0fe3d26689661 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x14930996ec6a3 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x17b5e6929a8da and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3990fe3d26689661; op2val:0xbff14930996ec6a3; op3val:0x39917b5e6929a8da; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x0fe3d26689661 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x14930996ec6a3 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x17b5e6929a8da and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3990fe3d26689661; op2val:0xbff14930996ec6a3; op3val:0x39917b5e6929a8da; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x0fe3d26689661 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x14930996ec6a3 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x17b5e6929a8da and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3990fe3d26689661; op2val:0xbff14930996ec6a3; op3val:0x39917b5e6929a8da; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649f5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39226e649f5a74b6; op2val:0xc081c94a0c1e1fa9; op3val:0x39b1ac979514b6d7; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649f5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39226e649f5a74b6; op2val:0xc081c94a0c1e1fa9; op3val:0x39b1ac979514b6d7; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649f5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39226e649f5a74b6; op2val:0xc081c94a0c1e1fa9; op3val:0x39b1ac979514b6d7; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649f5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39226e649f5a74b6; op2val:0xc081c94a0c1e1fa9; op3val:0x39b1ac979514b6d7; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649f5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39226e649f5a74b6; op2val:0xc081c94a0c1e1fa9; op3val:0x39b1ac979514b6d7; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x90bfe5a4042c4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x54331d75479b6 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x48ee155ea078a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a90bfe5a4042c4; op2val:0xc0154331d75479b6; op3val:0x39848ee155ea078a; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x90bfe5a4042c4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x54331d75479b6 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x48ee155ea078a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a90bfe5a4042c4; op2val:0xc0154331d75479b6; op3val:0x39848ee155ea078a; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x90bfe5a4042c4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x54331d75479b6 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x48ee155ea078a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a90bfe5a4042c4; op2val:0xc0154331d75479b6; op3val:0x39848ee155ea078a; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x90bfe5a4042c4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x54331d75479b6 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x48ee155ea078a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a90bfe5a4042c4; op2val:0xc0154331d75479b6; op3val:0x39848ee155ea078a; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x90bfe5a4042c4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x54331d75479b6 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x48ee155ea078a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a90bfe5a4042c4; op2val:0xc0154331d75479b6; op3val:0x39848ee155ea078a; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02b0619073291 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xbcaaa53f7565d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x6842c4cac9ea4 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b02b0619073291; op2val:0xc06bcaaa53f7565d; op3val:0x3986842c4cac9ea4; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02b0619073291 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xbcaaa53f7565d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x6842c4cac9ea4 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b02b0619073291; op2val:0xc06bcaaa53f7565d; op3val:0x3986842c4cac9ea4; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02b0619073291 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xbcaaa53f7565d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x6842c4cac9ea4 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b02b0619073291; op2val:0xc06bcaaa53f7565d; op3val:0x3986842c4cac9ea4; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02b0619073291 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xbcaaa53f7565d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x6842c4cac9ea4 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b02b0619073291; op2val:0xc06bcaaa53f7565d; op3val:0x3986842c4cac9ea4; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02b0619073291 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xbcaaa53f7565d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x6842c4cac9ea4 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b02b0619073291; op2val:0xc06bcaaa53f7565d; op3val:0x3986842c4cac9ea4; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xf0fbf6a2f168e and fs2 == 1 and fe2 == 0x40f and fm2 == 0x07bc4c532d3b5 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9e5b31936c644 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39af0fbf6a2f168e; op2val:0xc0f07bc4c532d3b5; op3val:0x3989e5b31936c644; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xf0fbf6a2f168e and fs2 == 1 and fe2 == 0x40f and fm2 == 0x07bc4c532d3b5 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9e5b31936c644 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39af0fbf6a2f168e; op2val:0xc0f07bc4c532d3b5; op3val:0x3989e5b31936c644; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xf0fbf6a2f168e and fs2 == 1 and fe2 == 0x40f and fm2 == 0x07bc4c532d3b5 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9e5b31936c644 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39af0fbf6a2f168e; op2val:0xc0f07bc4c532d3b5; op3val:0x3989e5b31936c644; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xf0fbf6a2f168e and fs2 == 1 and fe2 == 0x40f and fm2 == 0x07bc4c532d3b5 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9e5b31936c644 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39af0fbf6a2f168e; op2val:0xc0f07bc4c532d3b5; op3val:0x3989e5b31936c644; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xf0fbf6a2f168e and fs2 == 1 and fe2 == 0x40f and fm2 == 0x07bc4c532d3b5 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9e5b31936c644 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39af0fbf6a2f168e; op2val:0xc0f07bc4c532d3b5; op3val:0x3989e5b31936c644; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6ac9f241360fd and fs2 == 1 and fe2 == 0x41e and fm2 == 0x694a403ead2c3 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x295efec093b53 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3996ac9f241360fd; op2val:0xc1e694a403ead2c3; op3val:0x39b295efec093b53; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6ac9f241360fd and fs2 == 1 and fe2 == 0x41e and fm2 == 0x694a403ead2c3 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x295efec093b53 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3996ac9f241360fd; op2val:0xc1e694a403ead2c3; op3val:0x39b295efec093b53; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6ac9f241360fd and fs2 == 1 and fe2 == 0x41e and fm2 == 0x694a403ead2c3 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x295efec093b53 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3996ac9f241360fd; op2val:0xc1e694a403ead2c3; op3val:0x39b295efec093b53; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6ac9f241360fd and fs2 == 1 and fe2 == 0x41e and fm2 == 0x694a403ead2c3 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x295efec093b53 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3996ac9f241360fd; op2val:0xc1e694a403ead2c3; op3val:0x39b295efec093b53; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6ac9f241360fd and fs2 == 1 and fe2 == 0x41e and fm2 == 0x694a403ead2c3 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x295efec093b53 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3996ac9f241360fd; op2val:0xc1e694a403ead2c3; op3val:0x39b295efec093b53; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x395105efde4ed531; op2val:0xc0309f209cec78cd; op3val:0x3991954d45efc2a6; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x395105efde4ed531; op2val:0xc0309f209cec78cd; op3val:0x3991954d45efc2a6; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x395105efde4ed531; op2val:0xc0309f209cec78cd; op3val:0x3991954d45efc2a6; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x395105efde4ed531; op2val:0xc0309f209cec78cd; op3val:0x3991954d45efc2a6; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x395105efde4ed531; op2val:0xc0309f209cec78cd; op3val:0x3991954d45efc2a6; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x60ebc50708520 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x134c2c0ceb740 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x7482563cd9d1d and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a60ebc50708520; op2val:0xbff134c2c0ceb740; op3val:0x39a7482563cd9d1d; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x60ebc50708520 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x134c2c0ceb740 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x7482563cd9d1d and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a60ebc50708520; op2val:0xbff134c2c0ceb740; op3val:0x39a7482563cd9d1d; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x60ebc50708520 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x134c2c0ceb740 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x7482563cd9d1d and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a60ebc50708520; op2val:0xbff134c2c0ceb740; op3val:0x39a7482563cd9d1d; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x60ebc50708520 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x134c2c0ceb740 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x7482563cd9d1d and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a60ebc50708520; op2val:0xbff134c2c0ceb740; op3val:0x39a7482563cd9d1d; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x60ebc50708520 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x134c2c0ceb740 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x7482563cd9d1d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a60ebc50708520; op2val:0xbff134c2c0ceb740; op3val:0x39a7482563cd9d1d; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x307176ba846d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa49e942239fe4 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x4011e0c68bb1b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a307176ba846d7; op2val:0xbfea49e942239fe4; op3val:0x3994011e0c68bb1b; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x307176ba846d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa49e942239fe4 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x4011e0c68bb1b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a307176ba846d7; op2val:0xbfea49e942239fe4; op3val:0x3994011e0c68bb1b; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x307176ba846d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa49e942239fe4 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x4011e0c68bb1b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a307176ba846d7; op2val:0xbfea49e942239fe4; op3val:0x3994011e0c68bb1b; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x307176ba846d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa49e942239fe4 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x4011e0c68bb1b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a307176ba846d7; op2val:0xbfea49e942239fe4; op3val:0x3994011e0c68bb1b; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x307176ba846d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa49e942239fe4 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x4011e0c68bb1b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a307176ba846d7; op2val:0xbfea49e942239fe4; op3val:0x3994011e0c68bb1b; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x245be27b17194 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd068f21781b7d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x25e644cd05d18 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b245be27b17194; op2val:0xc00d068f21781b7d; op3val:0x39825e644cd05d18; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x245be27b17194 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd068f21781b7d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x25e644cd05d18 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b245be27b17194; op2val:0xc00d068f21781b7d; op3val:0x39825e644cd05d18; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x245be27b17194 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd068f21781b7d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x25e644cd05d18 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b245be27b17194; op2val:0xc00d068f21781b7d; op3val:0x39825e644cd05d18; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x245be27b17194 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd068f21781b7d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x25e644cd05d18 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b245be27b17194; op2val:0xc00d068f21781b7d; op3val:0x39825e644cd05d18; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x245be27b17194 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd068f21781b7d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x25e644cd05d18 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b245be27b17194; op2val:0xc00d068f21781b7d; op3val:0x39825e644cd05d18; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x322302882cdc2 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x78d4762bbf263 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xa53564a0699a4 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b322302882cdc2; op2val:0xc0678d4762bbf263; op3val:0x39aa53564a0699a4; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x322302882cdc2 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x78d4762bbf263 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xa53564a0699a4 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b322302882cdc2; op2val:0xc0678d4762bbf263; op3val:0x39aa53564a0699a4; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x322302882cdc2 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x78d4762bbf263 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xa53564a0699a4 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b322302882cdc2; op2val:0xc0678d4762bbf263; op3val:0x39aa53564a0699a4; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x322302882cdc2 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x78d4762bbf263 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xa53564a0699a4 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b322302882cdc2; op2val:0xc0678d4762bbf263; op3val:0x39aa53564a0699a4; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x322302882cdc2 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x78d4762bbf263 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xa53564a0699a4 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b322302882cdc2; op2val:0xc0678d4762bbf263; op3val:0x39aa53564a0699a4; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d351f7784365 and fs2 == 1 and fe2 == 0x413 and fm2 == 0xb328b8cd61a2b and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2e34d55d8fb3c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3962d351f7784365; op2val:0xc13b328b8cd61a2b; op3val:0x39a2e34d55d8fb3c; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d351f7784365 and fs2 == 1 and fe2 == 0x413 and fm2 == 0xb328b8cd61a2b and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2e34d55d8fb3c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3962d351f7784365; op2val:0xc13b328b8cd61a2b; op3val:0x39a2e34d55d8fb3c; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d351f7784365 and fs2 == 1 and fe2 == 0x413 and fm2 == 0xb328b8cd61a2b and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2e34d55d8fb3c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3962d351f7784365; op2val:0xc13b328b8cd61a2b; op3val:0x39a2e34d55d8fb3c; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d351f7784365 and fs2 == 1 and fe2 == 0x413 and fm2 == 0xb328b8cd61a2b and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2e34d55d8fb3c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3962d351f7784365; op2val:0xc13b328b8cd61a2b; op3val:0x39a2e34d55d8fb3c; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d351f7784365 and fs2 == 1 and fe2 == 0x413 and fm2 == 0xb328b8cd61a2b and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2e34d55d8fb3c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3962d351f7784365; op2val:0xc13b328b8cd61a2b; op3val:0x39a2e34d55d8fb3c; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xe038bcc967e53 and fs2 == 1 and fe2 == 0x41d and fm2 == 0x10f0cde8ed0f1 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2b4fc34ef8713 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ae038bcc967e53; op2val:0xc1d10f0cde8ed0f1; op3val:0x39b2b4fc34ef8713; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xe038bcc967e53 and fs2 == 1 and fe2 == 0x41d and fm2 == 0x10f0cde8ed0f1 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2b4fc34ef8713 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ae038bcc967e53; op2val:0xc1d10f0cde8ed0f1; op3val:0x39b2b4fc34ef8713; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xe038bcc967e53 and fs2 == 1 and fe2 == 0x41d and fm2 == 0x10f0cde8ed0f1 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2b4fc34ef8713 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ae038bcc967e53; op2val:0xc1d10f0cde8ed0f1; op3val:0x39b2b4fc34ef8713; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xe038bcc967e53 and fs2 == 1 and fe2 == 0x41d and fm2 == 0x10f0cde8ed0f1 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2b4fc34ef8713 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ae038bcc967e53; op2val:0xc1d10f0cde8ed0f1; op3val:0x39b2b4fc34ef8713; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xe038bcc967e53 and fs2 == 1 and fe2 == 0x41d and fm2 == 0x10f0cde8ed0f1 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2b4fc34ef8713 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ae038bcc967e53; op2val:0xc1d10f0cde8ed0f1; op3val:0x39b2b4fc34ef8713; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xff8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62ff03f3d2 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3c701a3548e1d; op2val:0xc64ff8ce40f090d9; op3val:0x395dae62ff03f3d2; valaddr_reg:x16; val_offset:1344; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xff8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62ff03f3d2 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3c701a3548e1d; op2val:0xc64ff8ce40f090d9; op3val:0x395dae62ff03f3d2; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xff8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62ff03f3d2 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3c701a3548e1d; op2val:0xc64ff8ce40f090d9; op3val:0x395dae62ff03f3d2; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27f73b38190cd and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ac95b3e1b9233b; op2val:0xc6561ef112e7ddd2; op3val:0x39727f73b38190cd; valaddr_reg:x16; val_offset:1416; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27f73b38190cd and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ac95b3e1b9233b; op2val:0xc6561ef112e7ddd2; op3val:0x39727f73b38190cd; valaddr_reg:x16; val_offset:1440; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27f73b38190cd and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ac95b3e1b9233b; op2val:0xc6561ef112e7ddd2; op3val:0x39727f73b38190cd; valaddr_reg:x16; val_offset:1464; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27f73b38190cd and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ac95b3e1b9233b; op2val:0xc6561ef112e7ddd2; op3val:0x39727f73b38190cd; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27f73b38190cd and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ac95b3e1b9233b; op2val:0xc6561ef112e7ddd2; op3val:0x39727f73b38190cd; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x39ae038bcc967e53
.dword 0xc1d10f0cde8ed0f1
.dword 0x39ae038bcc967e53
.dword 0x39b3c701a3548e1d
.dword 0xc64ff8ce40f090d9
.dword 0x395dae62ff03f3d2
.dword 0x39b3c701a3548e1d
.dword 0xc64ff8ce40f090d9
.dword 0x395dae62ff03f3d2
.dword 0x39b3c701a3548e1d
.dword 0xc64ff8ce40f090d9
.dword 0xc64ff8ce40f090d9
.dword 0x39b3c701a3548e1d
.dword 0xc64ff8ce40f090d9
.dword 0x39b3c701a3548e1d
.dword 0x39b3c701a3548e1d
.dword 0xc64ff8ce40f090d9
.dword 0x395dae62ff03f3d2
.dword 0x39ac95b3e1b9233b
.dword 0x39ac95b3e1b9233b
.dword 0x39ac95b3e1b9233b
.dword 0x39ac95b3e1b9233b
.dword 0x39ac95b3e1b9233b
.dword 0x39727f73b38190cd
.dword 0x39ac95b3e1b9233b
.dword 0x39ac95b3e1b9233b
.dword 0x39ac95b3e1b9233b
.dword 0x39ac95b3e1b9233b
.dword 0xc6561ef112e7ddd2
.dword 0xc6561ef112e7ddd2
.dword 0x39ac95b3e1b9233b
.dword 0x39ac95b3e1b9233b
.dword 0x39727f73b38190cd
.dword 0x39999ec4260f18a4
.dword 0xc668ae3826fd6bf0
.dword 0x39a38541e6f2f8cc
.dword 0x39999ec4260f18a4
.dword 0xc668ae3826fd6bf0
.dword 0x39a38541e6f2f8cc
.dword 0x39999ec4260f18a4
.dword 0xc668ae3826fd6bf0
.dword 0x39a38541e6f2f8cc
.dword 0x39999ec4260f18a4
.dword 0xc668ae3826fd6bf0
.dword 0x39a38541e6f2f8cc
.dword 0x39999ec4260f18a4
.dword 0xc668ae3826fd6bf0
.dword 0x39a38541e6f2f8cc
.dword 0x39b099fd23cef832
.dword 0xc6530b463f83caec
.dword 0x39a38057ebfc111a
.dword 0x39b099fd23cef832
.dword 0xc6530b463f83caec
.dword 0x39a38057ebfc111a
.dword 0x39b099fd23cef832
.dword 0xc6530b463f83caec
.dword 0x39a38057ebfc111a
.dword 0x39b099fd23cef832
.dword 0xc6530b463f83caec
.dword 0x39a38057ebfc111a
.dword 0x39b099fd23cef832
.dword 0xc6530b463f83caec
.dword 0x39a38057ebfc111a
.dword 0x399b69d7df6648b9
.dword 0xc66710e89f183b2f
.dword 0x399925930a7283d5
.dword 0x399b69d7df6648b9
.dword 0xc66710e89f183b2f
.dword 0x399925930a7283d5
.dword 0x399b69d7df6648b9
.dword 0xc66710e89f183b2f
.dword 0x399925930a7283d5
.dword 0x399b69d7df6648b9
.dword 0xc66710e89f183b2f
.dword 0x399925930a7283d5
.dword 0x399b69d7df6648b9
.dword 0xc66710e89f183b2f
.dword 0x399925930a7283d5
.dword 0x393190efde47be0e
.dword 0xc6d1ff8cc931a9a9
.dword 0x39ab80125e1b1046
.dword 0x393190efde47be0e
.dword 0xc6d1ff8cc931a9a9
.dword 0x39ab80125e1b1046
.dword 0x393190efde47be0e
.dword 0xc6d1ff8cc931a9a9
.dword 0x39ab80125e1b1046
.dword 0x393190efde47be0e
.dword 0xc6d1ff8cc931a9a9
.dword 0x39ab80125e1b1046
.dword 0x393190efde47be0e
.dword 0xc6d1ff8cc931a9a9
.dword 0x39ab80125e1b1046
.dword 0x399872fbd0697864
.dword 0xc669dcd6cdb373ca
.dword 0x39a8770d62dcf522
.dword 0x399872fbd0697864
.dword 0xc669dcd6cdb373ca
.dword 0x39a8770d62dcf522
.dword 0x399872fbd0697864
.dword 0xc669dcd6cdb373ca
.dword 0x39a8770d62dcf522
.dword 0x399872fbd0697864
.dword 0xc669dcd6cdb373ca
.dword 0x39a8770d62dcf522
.dword 0x399872fbd0697864
.dword 0xc669dcd6cdb373ca
.dword 0x39a8770d62dcf522
.dword 0x3987a4387525b0f4
.dword 0xbfdd2951553b9cee
.dword 0x397523987d918460
.dword 0x3987a4387525b0f4
.dword 0xbfdd2951553b9cee
.dword 0x397523987d918460
.dword 0x3987a4387525b0f4
.dword 0xbfdd2951553b9cee
.dword 0x397523987d918460
.dword 0x3987a4387525b0f4
.dword 0xbfdd2951553b9cee
.dword 0x397523987d918460
.dword 0x3987a4387525b0f4
.dword 0xbfdd2951553b9cee
.dword 0x397523987d918460
.dword 0x399d4d9f1794d731
.dword 0xbfdf524488086933
.dword 0x398aed8b7f6659fc
.dword 0x399d4d9f1794d731
.dword 0xbfdf524488086933
.dword 0x398aed8b7f6659fc
.dword 0x399d4d9f1794d731
.dword 0xbfdf524488086933
.dword 0x398aed8b7f6659fc
.dword 0x399d4d9f1794d731
.dword 0xbfdf524488086933
.dword 0x398aed8b7f6659fc
.dword 0x399d4d9f1794d731
.dword 0xbfdf524488086933
.dword 0x398aed8b7f6659fc
.dword 0x39b2209275762c5c
.dword 0xbfdf55704cec8e60
.dword 0x39983d9a457c5398
.dword 0x39b2209275762c5c
.dword 0xbfdf55704cec8e60
.dword 0x39983d9a457c5398
.dword 0x39b2209275762c5c
.dword 0xbfdf55704cec8e60
.dword 0x39983d9a457c5398
.dword 0x39b2209275762c5c
.dword 0xbfdf55704cec8e60
.dword 0x39983d9a457c5398
.dword 0x39b2209275762c5c
.dword 0xbfdf55704cec8e60
.dword 0x39983d9a457c5398
.dword 0x39ac040934d45782
.dword 0xc017df9ce01785ce
.dword 0x39b39ab057fa02c0
.dword 0x39ac040934d45782
.dword 0xc017df9ce01785ce
.dword 0x39b39ab057fa02c0
.dword 0x39ac040934d45782
.dword 0xc017df9ce01785ce
.dword 0x39b39ab057fa02c0
.dword 0x39ac040934d45782
.dword 0xc017df9ce01785ce
.dword 0x39b39ab057fa02c0
.dword 0x39ac040934d45782
.dword 0xc017df9ce01785ce
.dword 0x39b39ab057fa02c0
.dword 0x39909d1aa79c23a7
.dword 0xc08b2b2b55701cc8
.dword 0x39b315d3a4ddb3be
.dword 0x39909d1aa79c23a7
.dword 0xc08b2b2b55701cc8
.dword 0x39b315d3a4ddb3be
.dword 0x39909d1aa79c23a7
.dword 0xc08b2b2b55701cc8
.dword 0x39b315d3a4ddb3be
.dword 0x39909d1aa79c23a7
.dword 0xc08b2b2b55701cc8
.dword 0x39b315d3a4ddb3be
.dword 0x39909d1aa79c23a7
.dword 0xc08b2b2b55701cc8
.dword 0x39b315d3a4ddb3be
.dword 0x39a5df9ddc92c784
.dword 0xc0f7685a045f0410
.dword 0x39ab7efe7e5707bd
.dword 0x39a5df9ddc92c784
.dword 0xc0f7685a045f0410
.dword 0x39ab7efe7e5707bd
.dword 0x39a5df9ddc92c784
.dword 0xc0f7685a045f0410
.dword 0x39ab7efe7e5707bd
.dword 0x39a5df9ddc92c784
.dword 0xc0f7685a045f0410
.dword 0x39ab7efe7e5707bd
.dword 0x39a5df9ddc92c784
.dword 0xc0f7685a045f0410
.dword 0x39ab7efe7e5707bd
.dword 0x399778a21cf93979
.dword 0xc1e5d05ec080509a
.dword 0x39b3804775d28375
.dword 0x399778a21cf93979
.dword 0xc1e5d05ec080509a
.dword 0x39b3804775d28375
.dword 0x399778a21cf93979
.dword 0xc1e5d05ec080509a
.dword 0x39b3804775d28375
.dword 0x399778a21cf93979
.dword 0xc1e5d05ec080509a
.dword 0x39b3804775d28375
.dword 0x399778a21cf93979
.dword 0xc1e5d05ec080509a
.dword 0x39b3804775d28375
.dword 0x39b3ed05a43970e3
.dword 0xbfec750f043d5c8d
.dword 0x39b1b1ccd357d197
.dword 0x39b3ed05a43970e3
.dword 0xbfec750f043d5c8d
.dword 0x39b1b1ccd357d197
.dword 0x39b3ed05a43970e3
.dword 0xbfec750f043d5c8d
.dword 0x39b1b1ccd357d197
.dword 0x39b3ed05a43970e3
.dword 0xbfec750f043d5c8d
.dword 0x39b1b1ccd357d197
.dword 0x39b3ed05a43970e3
.dword 0xbfec750f043d5c8d
.dword 0x39b1b1ccd357d197
.dword 0x3990fe3d26689661
.dword 0xbff14930996ec6a3
.dword 0x39917b5e6929a8da
.dword 0x3990fe3d26689661
.dword 0xbff14930996ec6a3
.dword 0x39917b5e6929a8da
.dword 0x3990fe3d26689661
.dword 0xbff14930996ec6a3
.dword 0x39917b5e6929a8da
.dword 0x3990fe3d26689661
.dword 0xbff14930996ec6a3
.dword 0x39917b5e6929a8da
.dword 0x3990fe3d26689661
.dword 0xbff14930996ec6a3
.dword 0x39917b5e6929a8da
.dword 0x39226e649f5a74b6
.dword 0xc081c94a0c1e1fa9
.dword 0x39b1ac979514b6d7
.dword 0x39226e649f5a74b6
.dword 0xc081c94a0c1e1fa9
.dword 0x39b1ac979514b6d7
.dword 0x39226e649f5a74b6
.dword 0xc081c94a0c1e1fa9
.dword 0x39b1ac979514b6d7
.dword 0x39226e649f5a74b6
.dword 0xc081c94a0c1e1fa9
.dword 0x39b1ac979514b6d7
.dword 0x39226e649f5a74b6
.dword 0xc081c94a0c1e1fa9
.dword 0x39b1ac979514b6d7
.dword 0x39a90bfe5a4042c4
.dword 0xc0154331d75479b6
.dword 0x39848ee155ea078a
.dword 0x39a90bfe5a4042c4
.dword 0xc0154331d75479b6
.dword 0x39848ee155ea078a
.dword 0x39a90bfe5a4042c4
.dword 0xc0154331d75479b6
.dword 0x39848ee155ea078a
.dword 0x39a90bfe5a4042c4
.dword 0xc0154331d75479b6
.dword 0x39848ee155ea078a
.dword 0x39a90bfe5a4042c4
.dword 0xc0154331d75479b6
.dword 0x39848ee155ea078a
.dword 0x39b02b0619073291
.dword 0xc06bcaaa53f7565d
.dword 0x3986842c4cac9ea4
.dword 0x39b02b0619073291
.dword 0xc06bcaaa53f7565d
.dword 0x3986842c4cac9ea4
.dword 0x39b02b0619073291
.dword 0xc06bcaaa53f7565d
.dword 0x3986842c4cac9ea4
.dword 0x39b02b0619073291
.dword 0xc06bcaaa53f7565d
.dword 0x3986842c4cac9ea4
.dword 0x39b02b0619073291
.dword 0xc06bcaaa53f7565d
.dword 0x3986842c4cac9ea4
.dword 0x39af0fbf6a2f168e
.dword 0xc0f07bc4c532d3b5
.dword 0x3989e5b31936c644
.dword 0x39af0fbf6a2f168e
.dword 0xc0f07bc4c532d3b5
.dword 0x3989e5b31936c644
.dword 0x39af0fbf6a2f168e
.dword 0xc0f07bc4c532d3b5
.dword 0x3989e5b31936c644
.dword 0x39af0fbf6a2f168e
.dword 0xc0f07bc4c532d3b5
.dword 0x3989e5b31936c644
.dword 0x39af0fbf6a2f168e
.dword 0xc0f07bc4c532d3b5
.dword 0x3989e5b31936c644
.dword 0x3996ac9f241360fd
.dword 0xc1e694a403ead2c3
.dword 0x39b295efec093b53
.dword 0x3996ac9f241360fd
.dword 0xc1e694a403ead2c3
.dword 0x39b295efec093b53
.dword 0x3996ac9f241360fd
.dword 0xc1e694a403ead2c3
.dword 0x39b295efec093b53
.dword 0x3996ac9f241360fd
.dword 0xc1e694a403ead2c3
.dword 0x39b295efec093b53
.dword 0x3996ac9f241360fd
.dword 0xc1e694a403ead2c3
.dword 0x39b295efec093b53
.dword 0x395105efde4ed531
.dword 0xc0309f209cec78cd
.dword 0x3991954d45efc2a6
.dword 0x395105efde4ed531
.dword 0xc0309f209cec78cd
.dword 0x3991954d45efc2a6
.dword 0x395105efde4ed531
.dword 0xc0309f209cec78cd
.dword 0x3991954d45efc2a6
.dword 0x395105efde4ed531
.dword 0xc0309f209cec78cd
.dword 0x3991954d45efc2a6
.dword 0x395105efde4ed531
.dword 0xc0309f209cec78cd
.dword 0x3991954d45efc2a6
.dword 0x39a60ebc50708520
.dword 0xbff134c2c0ceb740
.dword 0x39a7482563cd9d1d
.dword 0x39a60ebc50708520
.dword 0xbff134c2c0ceb740
.dword 0x39a7482563cd9d1d
.dword 0x39a60ebc50708520
.dword 0xbff134c2c0ceb740
.dword 0x39a7482563cd9d1d
.dword 0x39a60ebc50708520
.dword 0xbff134c2c0ceb740
.dword 0x39a7482563cd9d1d
.dword 0x39a60ebc50708520
.dword 0xbff134c2c0ceb740
.dword 0x39a7482563cd9d1d
.dword 0x39a307176ba846d7
.dword 0xbfea49e942239fe4
.dword 0x3994011e0c68bb1b
.dword 0x39a307176ba846d7
.dword 0xbfea49e942239fe4
.dword 0x3994011e0c68bb1b
.dword 0x39a307176ba846d7
.dword 0xbfea49e942239fe4
.dword 0x3994011e0c68bb1b
.dword 0x39a307176ba846d7
.dword 0xbfea49e942239fe4
.dword 0x3994011e0c68bb1b
.dword 0x39a307176ba846d7
.dword 0xbfea49e942239fe4
.dword 0x3994011e0c68bb1b
.dword 0x39b245be27b17194
.dword 0xc00d068f21781b7d
.dword 0x39825e644cd05d18
.dword 0x39b245be27b17194
.dword 0xc00d068f21781b7d
.dword 0x39825e644cd05d18
.dword 0x39b245be27b17194
.dword 0xc00d068f21781b7d
.dword 0x39825e644cd05d18
.dword 0x39b245be27b17194
.dword 0xc00d068f21781b7d
.dword 0x39825e644cd05d18
.dword 0x39b245be27b17194
.dword 0xc00d068f21781b7d
.dword 0x39825e644cd05d18
.dword 0x39b322302882cdc2
.dword 0xc0678d4762bbf263
.dword 0x39aa53564a0699a4
.dword 0x39b322302882cdc2
.dword 0xc0678d4762bbf263
.dword 0x39aa53564a0699a4
.dword 0x39b322302882cdc2
.dword 0xc0678d4762bbf263
.dword 0x39aa53564a0699a4
.dword 0x39b322302882cdc2
.dword 0xc0678d4762bbf263
.dword 0x39aa53564a0699a4
.dword 0x39b322302882cdc2
.dword 0xc0678d4762bbf263
.dword 0x39aa53564a0699a4
.dword 0x3962d351f7784365
.dword 0xc13b328b8cd61a2b
.dword 0x39a2e34d55d8fb3c
.dword 0x3962d351f7784365
.dword 0xc13b328b8cd61a2b
.dword 0x39a2e34d55d8fb3c
.dword 0x3962d351f7784365
.dword 0xc13b328b8cd61a2b
.dword 0x39a2e34d55d8fb3c
.dword 0x3962d351f7784365
.dword 0xc13b328b8cd61a2b
.dword 0x39a2e34d55d8fb3c
.dword 0x3962d351f7784365
.dword 0xc13b328b8cd61a2b
.dword 0x39a2e34d55d8fb3c
.dword 0x39ae038bcc967e53
.dword 0xc1d10f0cde8ed0f1
.dword 0x39b2b4fc34ef8713
.dword 0x39ae038bcc967e53
.dword 0xc1d10f0cde8ed0f1
.dword 0x39b2b4fc34ef8713
.dword 0x39ae038bcc967e53
.dword 0xc1d10f0cde8ed0f1
.dword 0x39b2b4fc34ef8713
.dword 0x39ae038bcc967e53
.dword 0xc1d10f0cde8ed0f1
.dword 0x39b2b4fc34ef8713
.dword 0x39ae038bcc967e53
.dword 0xc1d10f0cde8ed0f1
.dword 0x39b2b4fc34ef8713
.dword 0x39b3c701a3548e1d
.dword 0xc64ff8ce40f090d9
.dword 0x395dae62ff03f3d2
.dword 0x39b3c701a3548e1d
.dword 0xc64ff8ce40f090d9
.dword 0x395dae62ff03f3d2
.dword 0x39b3c701a3548e1d
.dword 0xc64ff8ce40f090d9
.dword 0x395dae62ff03f3d2
.dword 0x39ac95b3e1b9233b
.dword 0xc6561ef112e7ddd2
.dword 0x39727f73b38190cd
.dword 0x39ac95b3e1b9233b
.dword 0xc6561ef112e7ddd2
.dword 0x39727f73b38190cd
.dword 0x39ac95b3e1b9233b
.dword 0xc6561ef112e7ddd2
.dword 0x39727f73b38190cd
.dword 0x39ac95b3e1b9233b
.dword 0xc6561ef112e7ddd2
.dword 0x39727f73b38190cd
.dword 0x39ac95b3e1b9233b
.dword 0xc6561ef112e7ddd2
.dword 0x39727f73b38190cd
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 44*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
