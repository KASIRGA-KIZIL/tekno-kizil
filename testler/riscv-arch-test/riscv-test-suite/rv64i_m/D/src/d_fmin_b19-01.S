
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 13:39:01 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmin.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmin.d instruction of the RISC-V FD extension for the fmin_b19 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmin_b19)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2, rs1==f1, rs2==f6, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f1; op2:f6; dest:f1; op1val:0x7feb0580f98a7dbd; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f1, f1, f6, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 != rd, rs1==f9, rs2==f9, rd==f14, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f9; op2:f9; dest:f14; op1val:0x0; op2val:0x0; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f14, f9, f9, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_2:
// rs1 == rs2 == rd, rs1==f30, rs2==f30, rd==f30, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f30; op2:f30; dest:f30; op1val:0x0; op2val:0x0; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f30, f30, f30, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_3:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f20, rs2==f24, rd==f18, fs1 == 1 and fe1 == 0x400 and fm1 == 0x16a3ffd234a38 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f20; op2:f24; dest:f18; op1val:0xc0016a3ffd234a38; op2val:0x0; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f18, f20, f24, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_4:
// rs2 == rd != rs1, rs1==f10, rs2==f15, rd==f15, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x16a3ffd234a38 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f15; dest:f15; op1val:0x0; op2val:0xc0016a3ffd234a38; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f15, f10, f15, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_5:
// rs1==f14, rs2==f23, rd==f13, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f14; op2:f23; dest:f13; op1val:0x0; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f13, f14, f23, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_6:
// rs1==f28, rs2==f10, rd==f22, fs1 == 1 and fe1 == 0x3ff and fm1 == 0xaaecfe8e63ec3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f28; op2:f10; dest:f22; op1val:0xbffaaecfe8e63ec3; op2val:0x0; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f22, f28, f10, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_7:
// rs1==f7, rs2==f11, rd==f27, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaaecfe8e63ec3 and rm_val == 0  
// opcode: fmin.d ; op1:f7; op2:f11; dest:f27; op1val:0x0; op2val:0xbffaaecfe8e63ec3; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f27, f7, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_8:
// rs1==f0, rs2==f2, rd==f17, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f0; op2:f2; dest:f17; op1val:0x0; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f17, f0, f2, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_9:
// rs1==f29, rs2==f8, rd==f9, fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1a23c57d41a27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f29; op2:f8; dest:f9; op1val:0xbff1a23c57d41a27; op2val:0x0; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f9, f29, f8, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_10:
// rs1==f13, rs2==f21, rd==f25, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1a23c57d41a27 and rm_val == 0  
// opcode: fmin.d ; op1:f13; op2:f21; dest:f25; op1val:0x0; op2val:0xbff1a23c57d41a27; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f25, f13, f21, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_11:
// rs1==f18, rs2==f31, rd==f16, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f18; op2:f31; dest:f16; op1val:0x0; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f16, f18, f31, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_12:
// rs1==f5, rs2==f1, rd==f21, fs1 == 1 and fe1 == 0x3ff and fm1 == 0x8cd8a372f0f06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f5; op2:f1; dest:f21; op1val:0xbff8cd8a372f0f06; op2val:0x0; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f21, f5, f1, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_13:
// rs1==f2, rs2==f19, rd==f10, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8cd8a372f0f06 and rm_val == 0  
// opcode: fmin.d ; op1:f2; op2:f19; dest:f10; op1val:0x0; op2val:0xbff8cd8a372f0f06; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f10, f2, f19, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_14:
// rs1==f23, rs2==f26, rd==f5, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f23; op2:f26; dest:f5; op1val:0x0; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f5, f23, f26, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_15:
// rs1==f25, rs2==f12, rd==f20, fs1 == 1 and fe1 == 0x3ff and fm1 == 0xa6229168cb10d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f25; op2:f12; dest:f20; op1val:0xbffa6229168cb10d; op2val:0x0; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f20, f25, f12, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_16:
// rs1==f24, rs2==f14, rd==f0, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa6229168cb10d and rm_val == 0  
// opcode: fmin.d ; op1:f24; op2:f14; dest:f0; op1val:0x0; op2val:0xbffa6229168cb10d; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f0, f24, f14, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_17:
// rs1==f26, rs2==f18, rd==f23, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f26; op2:f18; dest:f23; op1val:0x0; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f23, f26, f18, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_18:
// rs1==f31, rs2==f28, rd==f3, fs1 == 0 and fe1 == 0x3ff and fm1 == 0xcd83dac71068d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f31; op2:f28; dest:f3; op1val:0x3ffcd83dac71068d; op2val:0x0; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f3, f31, f28, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_19:
// rs1==f3, rs2==f7, rd==f24, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcd83dac71068d and rm_val == 0  
// opcode: fmin.d ; op1:f3; op2:f7; dest:f24; op1val:0x0; op2val:0x3ffcd83dac71068d; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f24, f3, f7, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_20:
// rs1==f19, rs2==f25, rd==f11, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f19; op2:f25; dest:f11; op1val:0x0; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f11, f19, f25, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_21:
// rs1==f17, rs2==f3, rd==f29, fs1 == 0 and fe1 == 0x3ff and fm1 == 0x603c137f0d51f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f17; op2:f3; dest:f29; op1val:0x3ff603c137f0d51f; op2val:0x0; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f29, f17, f3, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_22:
// rs1==f12, rs2==f0, rd==f7, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x603c137f0d51f and rm_val == 0  
// opcode: fmin.d ; op1:f12; op2:f0; dest:f7; op1val:0x0; op2val:0x3ff603c137f0d51f; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f7, f12, f0, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_23:
// rs1==f8, rs2==f22, rd==f26, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f8; op2:f22; dest:f26; op1val:0x0; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f26, f8, f22, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_24:
// rs1==f11, rs2==f16, rd==f4, fs1 == 0 and fe1 == 0x400 and fm1 == 0x02a39e584db8a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f11; op2:f16; dest:f4; op1val:0x40002a39e584db8a; op2val:0x0; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f4, f11, f16, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_25:
// rs1==f15, rs2==f4, rd==f12, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x02a39e584db8a and rm_val == 0  
// opcode: fmin.d ; op1:f15; op2:f4; dest:f12; op1val:0x0; op2val:0x40002a39e584db8a; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f15, f4, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_26:
// rs1==f4, rs2==f29, rd==f19, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f4; op2:f29; dest:f19; op1val:0x0; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f19, f4, f29, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_27:
// rs1==f22, rs2==f27, rd==f31, fs1 == 0 and fe1 == 0x3ff and fm1 == 0xbe776c4b9309a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f22; op2:f27; dest:f31; op1val:0x3ffbe776c4b9309a; op2val:0x0; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f31, f22, f27, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_28:
// rs1==f27, rs2==f20, rd==f6, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbe776c4b9309a and rm_val == 0  
// opcode: fmin.d ; op1:f27; op2:f20; dest:f6; op1val:0x0; op2val:0x3ffbe776c4b9309a; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f6, f27, f20, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_29:
// rs1==f6, rs2==f13, rd==f8, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f6; op2:f13; dest:f8; op1val:0x0; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f8, f6, f13, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_30:
// rs1==f16, rs2==f5, rd==f28, fs1 == 0 and fe1 == 0x402 and fm1 == 0x2b74f7c4aeb28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f16; op2:f5; dest:f28; op1val:0x4022b74f7c4aeb28; op2val:0x0; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f28, f16, f5, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_31:
// rs1==f21, rs2==f17, rd==f2, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x2b74f7c4aeb28 and rm_val == 0  
// opcode: fmin.d ; op1:f21; op2:f17; dest:f2; op1val:0x0; op2val:0x4022b74f7c4aeb28; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f2, f21, f17, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_33:
// fs1 == 1 and fe1 == 0x400 and fm1 == 0x8c1d44531ee36 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc008c1d44531ee36; op2val:0x0; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8c1d44531ee36 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0xc008c1d44531ee36; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_36:
// fs1 == 1 and fe1 == 0x401 and fm1 == 0x18f3f99f3a7ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc0118f3f99f3a7ab; op2val:0x0; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x18f3f99f3a7ab and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0xc0118f3f99f3a7ab; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_39:
// fs1 == 1 and fe1 == 0x401 and fm1 == 0xdf542c221f050 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc01df542c221f050; op2val:0x0; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf542c221f050 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0xc01df542c221f050; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_42:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x11dadc9e4eb85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff11dadc9e4eb85; op2val:0x0; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x11dadc9e4eb85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0xbff11dadc9e4eb85; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_45:
// fs1 == 1 and fe1 == 0x401 and fm1 == 0x167aab18a177e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc01167aab18a177e; op2val:0x0; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x167aab18a177e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0xc01167aab18a177e; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xa2ac7f4a5aece and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffa2ac7f4a5aece; op2val:0x0; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa2ac7f4a5aece and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x3ffa2ac7f4a5aece; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x401 and fm1 == 0x4442d6ffe75f4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x4014442d6ffe75f4; op2val:0x0; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4442d6ffe75f4 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x4014442d6ffe75f4; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x402 and fm1 == 0x122b0391ed653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x402122b0391ed653; op2val:0x0; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x122b0391ed653 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x402122b0391ed653; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x402 and fm1 == 0x261de7cadff67 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x402261de7cadff67; op2val:0x0; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x261de7cadff67 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x402261de7cadff67; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x849c649169268 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff849c649169268; op2val:0x0; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x849c649169268 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x3ff849c649169268; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_62:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_63:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x16a3ffd234a38 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xc0016a3ffd234a38; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_64:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x0; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_65:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfa7485d0f8ece and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x800fa7485d0f8ece; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_66:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_67:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x132fe1b33da32 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfa7485d0f8ece and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800132fe1b33da32; op2val:0x800fa7485d0f8ece; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_68:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 1 and fe2 == 0x000 and fm2 == 0x132fe1b33da32 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x800132fe1b33da32; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_69:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_70:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_71:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0cae158f8de83 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfa7485d0f8ece and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000cae158f8de83; op2val:0x800fa7485d0f8ece; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_72:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0cae158f8de83 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x8000cae158f8de83; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_73:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_74:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_75:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x11d5cf49b3fa7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfa7485d0f8ece and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x80011d5cf49b3fa7; op2val:0x800fa7485d0f8ece; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_76:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 1 and fe2 == 0x000 and fm2 == 0x11d5cf49b3fa7 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x80011d5cf49b3fa7; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_77:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_78:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_79:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x12f8c3601c4a9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfa7485d0f8ece and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x80012f8c3601c4a9; op2val:0x800fa7485d0f8ece; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_80:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 1 and fe2 == 0x000 and fm2 == 0x12f8c3601c4a9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x80012f8c3601c4a9; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_81:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_82:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x14bdd6f520473 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfa7485d0f8ece and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x14bdd6f520473; op2val:0x800fa7485d0f8ece; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_84:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 0 and fe2 == 0x000 and fm2 == 0x14bdd6f520473 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x14bdd6f520473; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_85:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_86:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0fd48b05c2121 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfa7485d0f8ece and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfd48b05c2121; op2val:0x800fa7485d0f8ece; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_88:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0fd48b05c2121 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0xfd48b05c2121; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_89:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_90:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x173f689a4c8c6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfa7485d0f8ece and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x173f689a4c8c6; op2val:0x800fa7485d0f8ece; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_92:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 0 and fe2 == 0x000 and fm2 == 0x173f689a4c8c6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x173f689a4c8c6; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_93:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_94:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1410b3d2a7d0c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfa7485d0f8ece and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x1410b3d2a7d0c; op2val:0x800fa7485d0f8ece; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_96:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfa7485d0f8ece and fs2 == 0 and fe2 == 0x000 and fm2 == 0x1410b3d2a7d0c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fa7485d0f8ece; op2val:0x1410b3d2a7d0c; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_97:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_98:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_100:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x8ccc238a4b367 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xff88ccc238a4b367; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_101:
// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x8ccc238a4b367 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff88ccc238a4b367; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_102:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x239ac7113abba and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x8ccc238a4b367 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800239ac7113abba; op2val:0xff88ccc238a4b367; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_103:
// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x8ccc238a4b367 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x239ac7113abba and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff88ccc238a4b367; op2val:0x800239ac7113abba; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_104:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_105:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xefff2c6cde040 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xffbefff2c6cde040; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_106:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_107:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x3281b93f72b1c and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xefff2c6cde040 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8003281b93f72b1c; op2val:0xffbefff2c6cde040; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_108:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x3281b93f72b1c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0x8003281b93f72b1c; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_109:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_110:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_111:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x562b29f60d7ba and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xefff2c6cde040 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800562b29f60d7ba; op2val:0xffbefff2c6cde040; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_112:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x562b29f60d7ba and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0x800562b29f60d7ba; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_113:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_114:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_115:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_116:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0c4ec3fe9a819 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000c4ec3fe9a819; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_117:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0c4ec3fe9a819 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0x8000c4ec3fe9a819; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_118:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_119:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_120:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x320fdfdfa4c3c and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xefff2c6cde040 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800320fdfdfa4c3c; op2val:0xffbefff2c6cde040; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_121:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x320fdfdfa4c3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0x800320fdfdfa4c3c; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_122:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_123:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x12d0f0ec06819 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x12d0f0ec06819; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_125:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x12d0f0ec06819 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0x12d0f0ec06819; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_126:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3a4acd3b9460c and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xefff2c6cde040 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3a4acd3b9460c; op2val:0xffbefff2c6cde040; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_129:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x3a4acd3b9460c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0x3a4acd3b9460c; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_130:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_131:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6292f14fe32c9 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xefff2c6cde040 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6292f14fe32c9; op2val:0xffbefff2c6cde040; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_133:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6292f14fe32c9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0x6292f14fe32c9; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_134:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_135:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x69bf113fe2b81 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xefff2c6cde040 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x69bf113fe2b81; op2val:0xffbefff2c6cde040; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_137:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xefff2c6cde040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x69bf113fe2b81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffbefff2c6cde040; op2val:0x69bf113fe2b81; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_138:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_139:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x11770f6c9c8eb and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x11770f6c9c8eb; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_141:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x11770f6c9c8eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0x11770f6c9c8eb; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_142:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x190ba6fb4c17b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800190ba6fb4c17b; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_143:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_144:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaaecfe8e63ec3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xbffaaecfe8e63ec3; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_145:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x0; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_146:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x132fe1b33da32 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x800132fe1b33da32; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_147:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x132fe1b33da32 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800132fe1b33da32; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_148:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_149:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_150:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_151:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_152:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_153:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_154:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_155:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_157:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_159:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_161:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_163:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x132fe1b33da32 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800132fe1b33da32; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 1 and fe2 == 0x000 and fm2 == 0x132fe1b33da32 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x800132fe1b33da32; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_165:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x132fe1b33da32 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x0d2a72a33d1eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800132fe1b33da32; op2val:0x30d2a72a33d1eb; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_166:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_167:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x2ffb31f1aecb4 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xff82ffb31f1aecb4; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_168:
// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x2ffb31f1aecb4 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff82ffb31f1aecb4; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_169:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x2ffb31f1aecb4 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0xff82ffb31f1aecb4; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_170:
// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x2ffb31f1aecb4 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x640bc6ac4b541 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff82ffb31f1aecb4; op2val:0x801640bc6ac4b541; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_171:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_172:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x7bf9fe6e1a7e1 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xffb7bf9fe6e1a7e1; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_173:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_174:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x7bf9fe6e1a7e1 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0xffb7bf9fe6e1a7e1; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_175:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf9113c7a7af1a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0x801f9113c7a7af1a; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_176:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_177:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_178:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x7bf9fe6e1a7e1 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0xffb7bf9fe6e1a7e1; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_179:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xaed7d1ce436a0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0x802aed7d1ce436a0; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_180:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_181:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xdaf87e09a11da and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xffedaf87e09a11da; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_182:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xdaf87e09a11da and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffedaf87e09a11da; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_183:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xdaf87e09a11da and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0xffedaf87e09a11da; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_184:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xdaf87e09a11da and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7b13a7f2090fc and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffedaf87e09a11da; op2val:0x8007b13a7f2090fc; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_185:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_186:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_187:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x7bf9fe6e1a7e1 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0xffb7bf9fe6e1a7e1; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_188:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf49ebebc6fa5a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0x801f49ebebc6fa5a; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_189:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_190:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xdaf87e09a11da and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffedaf87e09a11da; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xdaf87e09a11da and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0xffedaf87e09a11da; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_192:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xdaf87e09a11da and fs2 == 0 and fe2 == 0x000 and fm2 == 0xbc296938410f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffedaf87e09a11da; op2val:0xbc296938410f6; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_193:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_194:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x7bf9fe6e1a7e1 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0xffb7bf9fe6e1a7e1; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_196:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x23760229e5e3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0x223760229e5e3c; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_197:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_198:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x7bf9fe6e1a7e1 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0xffb7bf9fe6e1a7e1; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_200:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xecdeb68f6fdee and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0x2ecdeb68f6fdee; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_201:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_202:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x7bf9fe6e1a7e1 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0xffb7bf9fe6e1a7e1; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_204:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7bf9fe6e1a7e1 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x085dab1fb6cc3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb7bf9fe6e1a7e1; op2val:0x3085dab1fb6cc3; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_205:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_206:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xdaf87e09a11da and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffedaf87e09a11da; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xdaf87e09a11da and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0xffedaf87e09a11da; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_208:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xdaf87e09a11da and fs2 == 0 and fe2 == 0x000 and fm2 == 0xaea69a3e1d929 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffedaf87e09a11da; op2val:0xaea69a3e1d929; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_209:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbfded100685f6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bfded100685f6; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_210:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_211:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1a23c57d41a27 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xbff1a23c57d41a27; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_212:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x0; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_213:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0cae158f8de83 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x8000cae158f8de83; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_214:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0cae158f8de83 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000cae158f8de83; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_215:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_216:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_217:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_218:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_219:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_220:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_222:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_224:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_226:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_228:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0cae158f8de83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000cae158f8de83; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0cae158f8de83 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x8000cae158f8de83; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_230:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0cae158f8de83 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x0d2a72a33d1eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000cae158f8de83; op2val:0x30d2a72a33d1eb; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_231:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_232:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0x91c7c2bd493e3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xff791c7c2bd493e3; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_233:
// fs1 == 1 and fe1 == 0x7f7 and fm1 == 0x91c7c2bd493e3 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff791c7c2bd493e3; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_234:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0x91c7c2bd493e3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0xff791c7c2bd493e3; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_235:
// fs1 == 1 and fe1 == 0x7f7 and fm1 == 0x91c7c2bd493e3 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x640bc6ac4b541 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff791c7c2bd493e3; op2val:0x801640bc6ac4b541; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_236:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_237:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf639b36c9b8db and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xffaf639b36c9b8db; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_238:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_239:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf639b36c9b8db and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0xffaf639b36c9b8db; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_240:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf9113c7a7af1a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0x801f9113c7a7af1a; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_241:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_242:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_243:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf639b36c9b8db and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0xffaf639b36c9b8db; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_244:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 1 and fe2 == 0x002 and fm2 == 0xaed7d1ce436a0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0x802aed7d1ce436a0; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_245:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_246:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x39e41023e1389 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xffe39e41023e1389; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_247:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x39e41023e1389 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe39e41023e1389; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_248:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x39e41023e1389 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0xffe39e41023e1389; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_249:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x39e41023e1389 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7b13a7f2090fc and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe39e41023e1389; op2val:0x8007b13a7f2090fc; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_250:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_251:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_252:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf639b36c9b8db and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0xffaf639b36c9b8db; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_253:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf49ebebc6fa5a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0x801f49ebebc6fa5a; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_255:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x39e41023e1389 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe39e41023e1389; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x39e41023e1389 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0xffe39e41023e1389; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_257:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x39e41023e1389 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xbc296938410f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe39e41023e1389; op2val:0xbc296938410f6; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_259:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf639b36c9b8db and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0xffaf639b36c9b8db; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_261:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 0 and fe2 == 0x002 and fm2 == 0x23760229e5e3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0x223760229e5e3c; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_262:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_263:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf639b36c9b8db and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0xffaf639b36c9b8db; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_265:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 0 and fe2 == 0x002 and fm2 == 0xecdeb68f6fdee and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0x2ecdeb68f6fdee; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_266:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_267:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf639b36c9b8db and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0xffaf639b36c9b8db; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_269:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf639b36c9b8db and fs2 == 0 and fe2 == 0x003 and fm2 == 0x085dab1fb6cc3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffaf639b36c9b8db; op2val:0x3085dab1fb6cc3; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_270:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_271:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x39e41023e1389 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe39e41023e1389; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x39e41023e1389 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0xffe39e41023e1389; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_273:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x39e41023e1389 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xaea69a3e1d929 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe39e41023e1389; op2val:0xaea69a3e1d929; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_274:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7eccd79b8b11e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007eccd79b8b11e; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_275:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_276:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8cd8a372f0f06 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xbff8cd8a372f0f06; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_277:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x0; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_278:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x11d5cf49b3fa7 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x80011d5cf49b3fa7; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_279:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x11d5cf49b3fa7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x80011d5cf49b3fa7; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_280:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_281:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_282:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_283:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_284:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_285:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_286:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_287:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_288:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_289:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_290:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_291:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x11d5cf49b3fa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x80011d5cf49b3fa7; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_292:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 1 and fe2 == 0x000 and fm2 == 0x11d5cf49b3fa7 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x80011d5cf49b3fa7; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_293:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x11d5cf49b3fa7 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x0d2a72a33d1eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x80011d5cf49b3fa7; op2val:0x30d2a72a33d1eb; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_294:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_295:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x1a905c15b6463 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xff81a905c15b6463; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_296:
// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x1a905c15b6463 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff81a905c15b6463; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_297:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x1a905c15b6463 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0xff81a905c15b6463; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_298:
// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x1a905c15b6463 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x640bc6ac4b541 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff81a905c15b6463; op2val:0x801640bc6ac4b541; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_299:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_300:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x6134731b23d7b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xffb6134731b23d7b; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_301:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_302:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x6134731b23d7b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0xffb6134731b23d7b; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_303:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf9113c7a7af1a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0x801f9113c7a7af1a; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_304:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_305:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_306:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x6134731b23d7b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0xffb6134731b23d7b; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_307:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 1 and fe2 == 0x002 and fm2 == 0xaed7d1ce436a0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0x802aed7d1ce436a0; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_308:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_309:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb9818fe1eccda and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xffeb9818fe1eccda; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_310:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb9818fe1eccda and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffeb9818fe1eccda; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_311:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb9818fe1eccda and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0xffeb9818fe1eccda; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_312:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb9818fe1eccda and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7b13a7f2090fc and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffeb9818fe1eccda; op2val:0x8007b13a7f2090fc; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_313:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_314:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_315:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x6134731b23d7b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0xffb6134731b23d7b; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_316:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf49ebebc6fa5a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0x801f49ebebc6fa5a; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_317:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_318:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb9818fe1eccda and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffeb9818fe1eccda; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_319:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb9818fe1eccda and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0xffeb9818fe1eccda; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_320:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb9818fe1eccda and fs2 == 0 and fe2 == 0x000 and fm2 == 0xbc296938410f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffeb9818fe1eccda; op2val:0xbc296938410f6; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_321:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_322:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_323:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x6134731b23d7b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0xffb6134731b23d7b; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_324:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 0 and fe2 == 0x002 and fm2 == 0x23760229e5e3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0x223760229e5e3c; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_325:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_326:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_327:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x6134731b23d7b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0xffb6134731b23d7b; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_328:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 0 and fe2 == 0x002 and fm2 == 0xecdeb68f6fdee and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0x2ecdeb68f6fdee; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_329:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_330:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_331:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x6134731b23d7b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0xffb6134731b23d7b; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_332:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x6134731b23d7b and fs2 == 0 and fe2 == 0x003 and fm2 == 0x085dab1fb6cc3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb6134731b23d7b; op2val:0x3085dab1fb6cc3; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_333:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_334:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb9818fe1eccda and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffeb9818fe1eccda; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_335:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb9818fe1eccda and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0xffeb9818fe1eccda; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_336:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb9818fe1eccda and fs2 == 0 and fe2 == 0x000 and fm2 == 0xaea69a3e1d929 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffeb9818fe1eccda; op2val:0xaea69a3e1d929; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_337:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb25a18e107c85 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800b25a18e107c85; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_338:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_339:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa6229168cb10d and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xbffa6229168cb10d; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_340:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x0; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_341:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x12f8c3601c4a9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x80012f8c3601c4a9; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_342:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x12f8c3601c4a9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x80012f8c3601c4a9; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_343:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_344:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_345:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_346:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_347:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_348:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_349:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_350:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_351:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_352:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x12f8c3601c4a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x80012f8c3601c4a9; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_353:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 1 and fe2 == 0x000 and fm2 == 0x12f8c3601c4a9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x80012f8c3601c4a9; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_354:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x12f8c3601c4a9 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x0d2a72a33d1eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x80012f8c3601c4a9; op2val:0x30d2a72a33d1eb; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_355:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_356:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x2c91f356ca801 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xff82c91f356ca801; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_357:
// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x2c91f356ca801 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff82c91f356ca801; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_358:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x2c91f356ca801 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0xff82c91f356ca801; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_359:
// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x2c91f356ca801 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x640bc6ac4b541 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff82c91f356ca801; op2val:0x801640bc6ac4b541; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_360:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_361:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x77b6702c7d202 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xffb77b6702c7d202; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_362:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_363:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x77b6702c7d202 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0xffb77b6702c7d202; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_364:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf9113c7a7af1a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0x801f9113c7a7af1a; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_365:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_366:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_367:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x77b6702c7d202 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0xffb77b6702c7d202; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_368:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xaed7d1ce436a0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0x802aed7d1ce436a0; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_369:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_370:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd5a40c379c682 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xffed5a40c379c682; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_371:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xd5a40c379c682 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffed5a40c379c682; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_372:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd5a40c379c682 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0xffed5a40c379c682; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_373:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xd5a40c379c682 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7b13a7f2090fc and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffed5a40c379c682; op2val:0x8007b13a7f2090fc; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_374:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_375:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_376:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x77b6702c7d202 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0xffb77b6702c7d202; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_377:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf49ebebc6fa5a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0x801f49ebebc6fa5a; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_378:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_379:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xd5a40c379c682 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffed5a40c379c682; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_380:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd5a40c379c682 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0xffed5a40c379c682; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_4)

inst_381:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xd5a40c379c682 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xbc296938410f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffed5a40c379c682; op2val:0xbc296938410f6; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_382:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_383:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_384:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x77b6702c7d202 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0xffb77b6702c7d202; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_385:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x23760229e5e3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0x223760229e5e3c; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_386:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_387:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_388:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x77b6702c7d202 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0xffb77b6702c7d202; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_389:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xecdeb68f6fdee and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0x2ecdeb68f6fdee; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_390:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_391:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_392:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x77b6702c7d202 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0xffb77b6702c7d202; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_393:
// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x77b6702c7d202 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x085dab1fb6cc3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffb77b6702c7d202; op2val:0x3085dab1fb6cc3; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_394:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_395:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xd5a40c379c682 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffed5a40c379c682; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_396:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd5a40c379c682 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0xffed5a40c379c682; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_397:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xd5a40c379c682 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xaea69a3e1d929 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffed5a40c379c682; op2val:0xaea69a3e1d929; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_398:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbdb7a1c11ae96 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800bdb7a1c11ae96; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_399:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_400:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcd83dac71068d and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x3ffcd83dac71068d; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_401:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x0; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_402:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x14bdd6f520473 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x14bdd6f520473; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_403:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x14bdd6f520473 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x14bdd6f520473; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_404:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_405:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_406:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_407:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_408:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_409:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_410:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_411:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x14bdd6f520473 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x14bdd6f520473; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_412:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x14bdd6f520473 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x14bdd6f520473; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_413:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x14bdd6f520473 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x0d2a72a33d1eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x14bdd6f520473; op2val:0x30d2a72a33d1eb; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_414:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_415:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x489c109b1e4b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x7f8489c109b1e4b9; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_416:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x489c109b1e4b9 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f8489c109b1e4b9; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_417:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x489c109b1e4b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0x7f8489c109b1e4b9; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_418:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x489c109b1e4b9 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x640bc6ac4b541 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f8489c109b1e4b9; op2val:0x801640bc6ac4b541; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_419:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_420:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9ac314c1e5de7 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x7fb9ac314c1e5de7; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_421:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_422:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9ac314c1e5de7 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0x7fb9ac314c1e5de7; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_423:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf9113c7a7af1a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0x801f9113c7a7af1a; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_424:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_425:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_426:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9ac314c1e5de7 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0x7fb9ac314c1e5de7; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_427:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xaed7d1ce436a0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0x802aed7d1ce436a0; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_428:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_429:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_430:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_431:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_432:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7b13a7f2090fc and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0x8007b13a7f2090fc; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_433:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_434:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_435:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9ac314c1e5de7 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0x7fb9ac314c1e5de7; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_436:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf49ebebc6fa5a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0x801f49ebebc6fa5a; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_437:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_438:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_439:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_440:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xbc296938410f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0xbc296938410f6; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_441:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_442:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_443:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9ac314c1e5de7 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0x7fb9ac314c1e5de7; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_444:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x23760229e5e3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0x223760229e5e3c; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_445:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_446:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_447:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9ac314c1e5de7 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0x7fb9ac314c1e5de7; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_448:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xecdeb68f6fdee and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0x2ecdeb68f6fdee; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_449:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_450:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_451:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9ac314c1e5de7 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0x7fb9ac314c1e5de7; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_452:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9ac314c1e5de7 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x085dab1fb6cc3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb9ac314c1e5de7; op2val:0x3085dab1fb6cc3; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_453:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_454:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_455:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_456:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xaea69a3e1d929 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0xaea69a3e1d929; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_457:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xcf6a659342c81 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xcf6a659342c81; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_458:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_459:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x603c137f0d51f and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x3ff603c137f0d51f; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_460:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x0; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_461:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0fd48b05c2121 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0xfd48b05c2121; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_462:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0fd48b05c2121 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfd48b05c2121; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_463:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_464:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_465:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_466:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_467:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_468:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0fd48b05c2121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfd48b05c2121; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_469:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0fd48b05c2121 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0xfd48b05c2121; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_470:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0fd48b05c2121 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x0d2a72a33d1eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfd48b05c2121; op2val:0x30d2a72a33d1eb; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_471:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_472:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x7f7 and fm2 == 0xf5994c8042e0c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x7f7f5994c8042e0c; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_473:
// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0xf5994c8042e0c and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f7f5994c8042e0c; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_474:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 0 and fe2 == 0x7f7 and fm2 == 0xf5994c8042e0c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0x7f7f5994c8042e0c; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_475:
// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0xf5994c8042e0c and fs2 == 1 and fe2 == 0x001 and fm2 == 0x640bc6ac4b541 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f7f5994c8042e0c; op2val:0x801640bc6ac4b541; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_476:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_477:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x397fcfd029cc8 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x7fb397fcfd029cc8; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_478:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_479:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x397fcfd029cc8 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0x7fb397fcfd029cc8; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_480:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf9113c7a7af1a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0x801f9113c7a7af1a; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_481:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_482:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_483:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x397fcfd029cc8 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0x7fb397fcfd029cc8; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_484:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xaed7d1ce436a0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0x802aed7d1ce436a0; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_485:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_486:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x87dfc3c4343fa and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x7fe87dfc3c4343fa; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_487:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x87dfc3c4343fa and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe87dfc3c4343fa; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_488:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x87dfc3c4343fa and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0x7fe87dfc3c4343fa; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_489:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x87dfc3c4343fa and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7b13a7f2090fc and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe87dfc3c4343fa; op2val:0x8007b13a7f2090fc; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_490:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_491:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_492:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x397fcfd029cc8 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0x7fb397fcfd029cc8; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_493:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf49ebebc6fa5a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0x801f49ebebc6fa5a; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_494:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_495:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x87dfc3c4343fa and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe87dfc3c4343fa; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_496:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x87dfc3c4343fa and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0x7fe87dfc3c4343fa; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_497:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x87dfc3c4343fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0xbc296938410f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe87dfc3c4343fa; op2val:0xbc296938410f6; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_498:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_499:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_500:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x397fcfd029cc8 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0x7fb397fcfd029cc8; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_501:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x23760229e5e3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0x223760229e5e3c; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_502:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_503:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_504:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x397fcfd029cc8 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0x7fb397fcfd029cc8; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_505:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xecdeb68f6fdee and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0x2ecdeb68f6fdee; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_506:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_507:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_5)

inst_508:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x397fcfd029cc8 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0x7fb397fcfd029cc8; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x397fcfd029cc8 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x085dab1fb6cc3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb397fcfd029cc8; op2val:0x3085dab1fb6cc3; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_510:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_511:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x87dfc3c4343fa and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe87dfc3c4343fa; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_512:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x87dfc3c4343fa and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0x7fe87dfc3c4343fa; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_513:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x87dfc3c4343fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0xaea69a3e1d929 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe87dfc3c4343fa; op2val:0xaea69a3e1d929; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_514:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x9e4d6e3994b4b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x9e4d6e3994b4b; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_515:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_516:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x02a39e584db8a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x40002a39e584db8a; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_517:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x0; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_518:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x173f689a4c8c6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x173f689a4c8c6; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_519:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x173f689a4c8c6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x173f689a4c8c6; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_520:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_521:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_522:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_523:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x173f689a4c8c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x173f689a4c8c6; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_524:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x173f689a4c8c6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x173f689a4c8c6; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_525:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x173f689a4c8c6 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x0d2a72a33d1eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x173f689a4c8c6; op2val:0x30d2a72a33d1eb; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_526:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_527:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x7050797e15889 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x7f87050797e15889; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_528:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x7050797e15889 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f87050797e15889; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_529:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x7050797e15889 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0x7f87050797e15889; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_530:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x7050797e15889 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x640bc6ac4b541 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f87050797e15889; op2val:0x801640bc6ac4b541; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_531:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_532:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xcc6497dd9aeac and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x7fbcc6497dd9aeac; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_533:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_534:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xcc6497dd9aeac and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0x7fbcc6497dd9aeac; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_535:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf9113c7a7af1a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0x801f9113c7a7af1a; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_536:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_537:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_538:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xcc6497dd9aeac and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0x7fbcc6497dd9aeac; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_539:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 1 and fe2 == 0x002 and fm2 == 0xaed7d1ce436a0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0x802aed7d1ce436a0; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_540:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_541:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_542:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_543:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_544:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xcc6497dd9aeac and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0x7fbcc6497dd9aeac; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_545:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf49ebebc6fa5a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0x801f49ebebc6fa5a; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_546:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_547:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_548:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_549:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xcc6497dd9aeac and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0x7fbcc6497dd9aeac; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_550:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 0 and fe2 == 0x002 and fm2 == 0x23760229e5e3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0x223760229e5e3c; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_551:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_552:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_553:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xcc6497dd9aeac and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0x7fbcc6497dd9aeac; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_554:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 0 and fe2 == 0x002 and fm2 == 0xecdeb68f6fdee and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0x2ecdeb68f6fdee; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_555:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_556:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_557:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xcc6497dd9aeac and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0x7fbcc6497dd9aeac; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_558:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc6497dd9aeac and fs2 == 0 and fe2 == 0x003 and fm2 == 0x085dab1fb6cc3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fbcc6497dd9aeac; op2val:0x3085dab1fb6cc3; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_559:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_560:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xe87a1606fd7b9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xe87a1606fd7b9; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_561:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_562:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbe776c4b9309a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x3ffbe776c4b9309a; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_563:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x0; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_564:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x1410b3d2a7d0c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x1410b3d2a7d0c; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_565:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1410b3d2a7d0c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x1410b3d2a7d0c; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_566:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_567:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1410b3d2a7d0c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x1410b3d2a7d0c; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_568:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x1410b3d2a7d0c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x1410b3d2a7d0c; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_569:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1410b3d2a7d0c and fs2 == 0 and fe2 == 0x003 and fm2 == 0x0d2a72a33d1eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x1410b3d2a7d0c; op2val:0x30d2a72a33d1eb; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_570:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_571:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x3de50ae3ae740 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x7f83de50ae3ae740; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_572:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x3de50ae3ae740 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f83de50ae3ae740; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_573:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x3de50ae3ae740 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0x7f83de50ae3ae740; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_574:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x3de50ae3ae740 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x640bc6ac4b541 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f83de50ae3ae740; op2val:0x801640bc6ac4b541; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_575:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_576:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x8d5e4d9c9a110 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x7fb8d5e4d9c9a110; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_577:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_578:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x8d5e4d9c9a110 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0x7fb8d5e4d9c9a110; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_579:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf9113c7a7af1a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0x801f9113c7a7af1a; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_580:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_581:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_582:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x8d5e4d9c9a110 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0x7fb8d5e4d9c9a110; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_583:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xaed7d1ce436a0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0x802aed7d1ce436a0; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_584:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_585:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xf0b5e103c0954 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x7fef0b5e103c0954; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_586:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf0b5e103c0954 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fef0b5e103c0954; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_587:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xf0b5e103c0954 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0x7fef0b5e103c0954; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_588:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf0b5e103c0954 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7b13a7f2090fc and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fef0b5e103c0954; op2val:0x8007b13a7f2090fc; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_589:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_590:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_591:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x8d5e4d9c9a110 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0x7fb8d5e4d9c9a110; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_592:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf49ebebc6fa5a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0x801f49ebebc6fa5a; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_593:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_594:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf0b5e103c0954 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fef0b5e103c0954; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_595:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xf0b5e103c0954 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0x7fef0b5e103c0954; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_596:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf0b5e103c0954 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xbc296938410f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fef0b5e103c0954; op2val:0xbc296938410f6; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_597:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_598:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_599:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x8d5e4d9c9a110 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0x7fb8d5e4d9c9a110; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_600:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x23760229e5e3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0x223760229e5e3c; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_601:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_602:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_603:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x8d5e4d9c9a110 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0x7fb8d5e4d9c9a110; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_604:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xecdeb68f6fdee and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0x2ecdeb68f6fdee; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_605:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_606:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_607:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x8d5e4d9c9a110 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0x7fb8d5e4d9c9a110; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_608:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d5e4d9c9a110 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x085dab1fb6cc3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb8d5e4d9c9a110; op2val:0x3085dab1fb6cc3; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_609:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_610:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf0b5e103c0954 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fef0b5e103c0954; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_611:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xf0b5e103c0954 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0x7fef0b5e103c0954; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_612:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf0b5e103c0954 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xaea69a3e1d929 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fef0b5e103c0954; op2val:0xaea69a3e1d929; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_613:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc8a7063a8e27a and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xc8a7063a8e27a; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_614:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_615:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x402 and fm2 == 0x2b74f7c4aeb28 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x4022b74f7c4aeb28; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_616:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x0; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_617:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x003 and fm2 == 0x0d2a72a33d1eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x30d2a72a33d1eb; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_618:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_619:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_620:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_621:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_622:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_623:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_624:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_625:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_626:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_627:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_628:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_629:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_630:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_631:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_632:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x0d2a72a33d1eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x30d2a72a33d1eb; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_633:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_634:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x7fa and fm2 == 0xaa70d788e33e4 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x7faaa70d788e33e4; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_6)

inst_635:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xaa70d788e33e4 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7faaa70d788e33e4; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_636:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x239ac7113abba and fs2 == 0 and fe2 == 0x7fa and fm2 == 0xaa70d788e33e4 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800239ac7113abba; op2val:0x7faaa70d788e33e4; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_637:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xaa70d788e33e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x239ac7113abba and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7faaa70d788e33e4; op2val:0x800239ac7113abba; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_638:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_639:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0a8686b58e06e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x7fe0a8686b58e06e; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_640:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_641:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x3281b93f72b1c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0a8686b58e06e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8003281b93f72b1c; op2val:0x7fe0a8686b58e06e; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_642:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x3281b93f72b1c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0x8003281b93f72b1c; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_643:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_644:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_645:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x562b29f60d7ba and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0a8686b58e06e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800562b29f60d7ba; op2val:0x7fe0a8686b58e06e; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_646:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x562b29f60d7ba and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0x800562b29f60d7ba; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_647:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_648:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_649:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0c4ec3fe9a819 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000c4ec3fe9a819; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_650:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0c4ec3fe9a819 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0x8000c4ec3fe9a819; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_651:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_652:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_653:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x320fdfdfa4c3c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0a8686b58e06e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800320fdfdfa4c3c; op2val:0x7fe0a8686b58e06e; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_654:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x320fdfdfa4c3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0x800320fdfdfa4c3c; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_655:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_656:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x12d0f0ec06819 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x12d0f0ec06819; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_657:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x12d0f0ec06819 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0x12d0f0ec06819; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_658:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_659:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_660:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3a4acd3b9460c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0a8686b58e06e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3a4acd3b9460c; op2val:0x7fe0a8686b58e06e; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_661:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x3a4acd3b9460c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0x3a4acd3b9460c; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_662:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_663:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_664:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6292f14fe32c9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0a8686b58e06e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6292f14fe32c9; op2val:0x7fe0a8686b58e06e; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_665:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6292f14fe32c9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0x6292f14fe32c9; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_666:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_667:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_668:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x69bf113fe2b81 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0a8686b58e06e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x69bf113fe2b81; op2val:0x7fe0a8686b58e06e; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_669:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a8686b58e06e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x69bf113fe2b81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0a8686b58e06e; op2val:0x69bf113fe2b81; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_670:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_671:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x11770f6c9c8eb and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x11770f6c9c8eb; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_672:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x11770f6c9c8eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0x11770f6c9c8eb; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_673:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6baa94414ba5e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6baa94414ba5e; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_674:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_675:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8c1d44531ee36 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0xc008c1d44531ee36; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_676:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x0; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_677:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x239ac7113abba and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x800239ac7113abba; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_678:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x239ac7113abba and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800239ac7113abba; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_679:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_680:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x640bc6ac4b541 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x801640bc6ac4b541; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_681:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_682:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_683:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_684:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_685:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_686:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_687:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_688:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_689:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_690:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_691:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_692:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_693:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_694:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_695:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x640bc6ac4b541 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801640bc6ac4b541; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_696:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_697:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x239ac7113abba and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800239ac7113abba; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_698:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_699:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x608daef2c2520 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0xffc608daef2c2520; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_700:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_701:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x901723ec94233 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x608daef2c2520 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff9901723ec94233; op2val:0xffc608daef2c2520; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_702:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x901723ec94233 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0xff9901723ec94233; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_703:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_704:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_705:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0x554b1e717e738 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x608daef2c2520 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffa554b1e717e738; op2val:0xffc608daef2c2520; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_706:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x554b1e717e738 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0xffa554b1e717e738; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_707:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_708:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_709:
// fs1 == 1 and fe1 == 0x7f7 and fm1 == 0x85fb7c2fa882b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff785fb7c2fa882b; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_710:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0x85fb7c2fa882b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0xff785fb7c2fa882b; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_711:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_712:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_713:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x8c9148167a613 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x608daef2c2520 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff98c9148167a613; op2val:0xffc608daef2c2520; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_714:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x8c9148167a613 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0xff98c9148167a613; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_715:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_716:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x2a1b0c15d0559 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f82a1b0c15d0559; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_717:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x2a1b0c15d0559 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0x7f82a1b0c15d0559; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_718:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_719:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_720:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xcdc35c1c9eb3f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x608daef2c2520 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f9cdc35c1c9eb3f; op2val:0xffc608daef2c2520; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_721:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 0 and fe2 == 0x7f9 and fm2 == 0xcdc35c1c9eb3f and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0x7f9cdc35c1c9eb3f; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_722:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_723:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_724:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x866da024aa0c9 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x608daef2c2520 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fa866da024aa0c9; op2val:0xffc608daef2c2520; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_725:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 0 and fe2 == 0x7fa and fm2 == 0x866da024aa0c9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0x7fa866da024aa0c9; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_726:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_727:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_728:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xa2d6149828b3c and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x608daef2c2520 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7faa2d6149828b3c; op2val:0xffc608daef2c2520; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_729:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x608daef2c2520 and fs2 == 0 and fe2 == 0x7fa and fm2 == 0xa2d6149828b3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffc608daef2c2520; op2val:0x7faa2d6149828b3c; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_730:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_731:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x14b33d2e7fe8d and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f814b33d2e7fe8d; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_732:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x14b33d2e7fe8d and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0x7f814b33d2e7fe8d; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_733:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x1a0af25bcea80 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff91a0af25bcea80; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_734:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_735:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x18f3f99f3a7ab and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0xc0118f3f99f3a7ab; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_736:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x0; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_737:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x3281b93f72b1c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x8003281b93f72b1c; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_738:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x3281b93f72b1c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8003281b93f72b1c; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_739:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_740:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf9113c7a7af1a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x801f9113c7a7af1a; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_741:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_742:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_743:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_744:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_745:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_746:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_747:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_748:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_749:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_750:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_751:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_752:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_753:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_754:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_755:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf9113c7a7af1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f9113c7a7af1a; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_756:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_757:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x3281b93f72b1c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8003281b93f72b1c; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_758:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_759:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x901723ec94233 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0xff9901723ec94233; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_760:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x901723ec94233 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff9901723ec94233; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_761:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_7)

inst_762:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_763:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_764:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_765:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xe77a5b3b92a36 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffae77a5b3b92a36; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_766:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xe77a5b3b92a36 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0xffae77a5b3b92a36; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_767:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_768:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_769:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_770:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x74a1cf1b446af and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb74a1cf1b446af; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_771:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x74a1cf1b446af and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0x7fb74a1cf1b446af; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_772:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_773:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_774:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_775:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_776:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_777:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_778:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_779:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x59e00c7a1fe31 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb59e00c7a1fe31; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_780:
// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x59e00c7a1fe31 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xfff0000000000000; op2val:0x7fb59e00c7a1fe31; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_781:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xf41cece7b92c0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcf41cece7b92c0; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_782:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_783:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf542c221f050 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0xc01df542c221f050; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_784:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x0; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_785:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x562b29f60d7ba and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x800562b29f60d7ba; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_786:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x562b29f60d7ba and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800562b29f60d7ba; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_787:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_788:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xaed7d1ce436a0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x802aed7d1ce436a0; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_789:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_790:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_791:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_792:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_793:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_794:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_795:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_796:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_797:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_798:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_799:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_800:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_801:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_802:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_803:
// fs1 == 1 and fe1 == 0x002 and fm1 == 0xaed7d1ce436a0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x802aed7d1ce436a0; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_804:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_805:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x562b29f60d7ba and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800562b29f60d7ba; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_806:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_807:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x554b1e717e738 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0xffa554b1e717e738; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_808:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0x554b1e717e738 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffa554b1e717e738; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_809:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_810:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_811:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_812:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_813:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_814:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_815:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_816:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_817:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_818:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_819:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_820:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_821:
// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xaa9de60dde106 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffdaa9de60dde106; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_822:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_823:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x11dadc9e4eb85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0xbff11dadc9e4eb85; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_824:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x0; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_825:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0c4ec3fe9a819 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x8000c4ec3fe9a819; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_826:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0c4ec3fe9a819 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000c4ec3fe9a819; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_827:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_828:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7b13a7f2090fc and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x8007b13a7f2090fc; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_829:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_830:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_831:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_832:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_833:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_834:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_835:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_836:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_837:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_838:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_839:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_840:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_841:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_842:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_843:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7b13a7f2090fc and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8007b13a7f2090fc; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_844:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_845:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0c4ec3fe9a819 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000c4ec3fe9a819; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_846:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_847:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0x85fb7c2fa882b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0xff785fb7c2fa882b; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_848:
// fs1 == 1 and fe1 == 0x7f7 and fm1 == 0x85fb7c2fa882b and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff785fb7c2fa882b; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_849:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_850:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xe77a5b3b92a36 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0xffae77a5b3b92a36; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_851:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xe77a5b3b92a36 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffae77a5b3b92a36; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_852:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_853:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xe77a5b3b92a36 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffae77a5b3b92a36; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_854:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_855:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xe77a5b3b92a36 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffae77a5b3b92a36; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_856:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_857:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_858:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_859:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xe77a5b3b92a36 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffae77a5b3b92a36; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_860:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xe77a5b3b92a36 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0xffae77a5b3b92a36; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_861:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xe77a5b3b92a36 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffae77a5b3b92a36; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_862:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_863:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xe77a5b3b92a36 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffae77a5b3b92a36; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_864:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_865:
// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xe77a5b3b92a36 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffae77a5b3b92a36; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_866:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_867:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x30ac79053ba62 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffe30ac79053ba62; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_868:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_869:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_870:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x167aab18a177e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0xc01167aab18a177e; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_871:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x0; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_872:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x320fdfdfa4c3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x800320fdfdfa4c3c; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_873:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x320fdfdfa4c3c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800320fdfdfa4c3c; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_874:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_875:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xf49ebebc6fa5a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x801f49ebebc6fa5a; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_876:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_877:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_878:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_879:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_880:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_881:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_882:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_883:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_884:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_885:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_886:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_887:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_888:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_8)

inst_889:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_890:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0xf49ebebc6fa5a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x801f49ebebc6fa5a; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_891:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_892:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x320fdfdfa4c3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x800320fdfdfa4c3c; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_893:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_894:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x8c9148167a613 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0xff98c9148167a613; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_895:
// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0x8c9148167a613 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xff98c9148167a613; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_896:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_897:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_898:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_899:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_900:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_901:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_902:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_903:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_904:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_905:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_906:
// fs1 == 1 and fe1 == 0x7fc and fm1 == 0xefb59a1c18f98 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xffcefb59a1c18f98; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_907:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_908:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa2ac7f4a5aece and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x3ffa2ac7f4a5aece; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_909:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x0; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_910:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x12d0f0ec06819 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x12d0f0ec06819; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_911:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x12d0f0ec06819 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x12d0f0ec06819; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_912:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_913:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xbc296938410f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0xbc296938410f6; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_914:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_915:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_916:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_917:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_918:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_919:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_920:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_921:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_922:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_923:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_924:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_925:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_926:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_927:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_928:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xbc296938410f6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xbc296938410f6; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_929:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_930:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x12d0f0ec06819 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x12d0f0ec06819; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_931:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_932:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x2a1b0c15d0559 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x7f82a1b0c15d0559; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_933:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x2a1b0c15d0559 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f82a1b0c15d0559; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_934:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_935:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x74a1cf1b446af and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x7fb74a1cf1b446af; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_936:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x74a1cf1b446af and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb74a1cf1b446af; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_937:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_938:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x74a1cf1b446af and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb74a1cf1b446af; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_939:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_940:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x74a1cf1b446af and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb74a1cf1b446af; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_941:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_942:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x74a1cf1b446af and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb74a1cf1b446af; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_943:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x74a1cf1b446af and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0x7fb74a1cf1b446af; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_944:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x74a1cf1b446af and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb74a1cf1b446af; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_945:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_946:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x74a1cf1b446af and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb74a1cf1b446af; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_947:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_948:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x74a1cf1b446af and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb74a1cf1b446af; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_949:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_950:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fed1ca42e21585b; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_951:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_952:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_953:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4442d6ffe75f4 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x4014442d6ffe75f4; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_954:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x0; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_955:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x3a4acd3b9460c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x3a4acd3b9460c; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_956:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3a4acd3b9460c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3a4acd3b9460c; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_957:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_958:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x23760229e5e3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x223760229e5e3c; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_959:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_960:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_961:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_962:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_963:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_964:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_965:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_966:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_967:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_968:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_969:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_970:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_971:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_972:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_973:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0x23760229e5e3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x223760229e5e3c; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_974:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_975:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3a4acd3b9460c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3a4acd3b9460c; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_976:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_977:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x7f9 and fm2 == 0xcdc35c1c9eb3f and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x7f9cdc35c1c9eb3f; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_978:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xcdc35c1c9eb3f and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f9cdc35c1c9eb3f; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_979:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_980:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_981:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_982:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_983:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_984:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_985:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_986:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_987:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x59e00c7a1fe31 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb59e00c7a1fe31; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_988:
// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x59e00c7a1fe31 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7ff0000000000000; op2val:0x7fb59e00c7a1fe31; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_989:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fd209a1991e3307; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_990:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_991:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x402 and fm2 == 0x122b0391ed653 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x402122b0391ed653; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_992:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x0; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_993:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6292f14fe32c9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x6292f14fe32c9; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_994:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6292f14fe32c9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6292f14fe32c9; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_995:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_996:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x002 and fm2 == 0xecdeb68f6fdee and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x2ecdeb68f6fdee; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_997:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_998:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_999:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_1000:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_1001:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_1002:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_1003:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_1004:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_1005:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_1006:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_1007:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_1008:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_1009:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_1010:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_1011:
// fs1 == 0 and fe1 == 0x002 and fm1 == 0xecdeb68f6fdee and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x2ecdeb68f6fdee; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_1012:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_1013:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x6292f14fe32c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x6292f14fe32c9; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_1014:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_1015:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x7fa and fm2 == 0x866da024aa0c9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x7fa866da024aa0c9; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_9)

inst_1016:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x866da024aa0c9 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fa866da024aa0c9; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_1018:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_1019:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_1020:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_1021:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_1022:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_1023:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fde809082dd48fb; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_1024:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_1025:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x261de7cadff67 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x402261de7cadff67; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_1026:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x0; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_1027:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x69bf113fe2b81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x69bf113fe2b81; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_1028:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x69bf113fe2b81 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x69bf113fe2b81; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_1029:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_1030:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x085dab1fb6cc3 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x3085dab1fb6cc3; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_1031:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1032:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_1033:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_1034:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_1035:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_1036:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_1037:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_1038:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_1039:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_1040:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_1041:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_1042:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_1043:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_1044:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_1045:
// fs1 == 0 and fe1 == 0x003 and fm1 == 0x085dab1fb6cc3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x3085dab1fb6cc3; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_1046:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_1047:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x69bf113fe2b81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x69bf113fe2b81; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_1048:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_1049:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x7fa and fm2 == 0xa2d6149828b3c and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x7faa2d6149828b3c; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_1050:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xa2d6149828b3c and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7faa2d6149828b3c; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_1051:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_1052:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_1053:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30ac79053ba62 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0xffe30ac79053ba62; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_1054:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x7fed1ca42e21585b; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe05c5ccdf19706; op2val:0x7feb0580f98a7dbd; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x849c649169268 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x3ff849c649169268; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x0; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x11770f6c9c8eb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x11770f6c9c8eb; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x11770f6c9c8eb and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x11770f6c9c8eb; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0xaea69a3e1d929 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0xaea69a3e1d929; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbfded100685f6 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x800bfded100685f6; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7eccd79b8b11e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x8007eccd79b8b11e; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb25a18e107c85 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x800b25a18e107c85; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbdb7a1c11ae96 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x800bdb7a1c11ae96; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0xcf6a659342c81 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0xcf6a659342c81; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x9e4d6e3994b4b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x9e4d6e3994b4b; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0xe87a1606fd7b9 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0xe87a1606fd7b9; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xaea69a3e1d929 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0xaea69a3e1d929; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc8a7063a8e27a and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0xc8a7063a8e27a; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x11770f6c9c8eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x11770f6c9c8eb; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x6baa94414ba5e and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x6baa94414ba5e; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x14b33d2e7fe8d and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x7f814b33d2e7fe8d; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x14b33d2e7fe8d and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7f814b33d2e7fe8d; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x1a0af25bcea80 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0xff91a0af25bcea80; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x59e00c7a1fe31 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x7fb59e00c7a1fe31; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x59e00c7a1fe31 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb59e00c7a1fe31; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf41cece7b92c0 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0xffcf41cece7b92c0; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x59e00c7a1fe31 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb59e00c7a1fe31; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaa9de60dde106 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0xffdaa9de60dde106; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x59e00c7a1fe31 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb59e00c7a1fe31; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xefb59a1c18f98 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0xffcefb59a1c18f98; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x59e00c7a1fe31 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb59e00c7a1fe31; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x7fd209a1991e3307; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x59e00c7a1fe31 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb59e00c7a1fe31; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x7fde809082dd48fb; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x59e00c7a1fe31 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fb59e00c7a1fe31; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x7fe05c5ccdf19706; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x0; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x190ba6fb4c17b and rm_val == 0  
// opcode: fmin.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x800190ba6fb4c17b; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmin.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7feb0580f98a7dbd
.dword 0x7feb0580f98a7dbd
.dword 0x0
.dword 0x0
.dword 0x0
.dword 0x0
.dword 0xc0016a3ffd234a38
.dword 0x0
.dword 0x0
.dword 0xc0016a3ffd234a38
.dword 0x0
.dword 0x800bfded100685f6
.dword 0xbffaaecfe8e63ec3
.dword 0x0
.dword 0x0
.dword 0xbffaaecfe8e63ec3
.dword 0x0
.dword 0x8007eccd79b8b11e
.dword 0xbff1a23c57d41a27
.dword 0x0
.dword 0x0
.dword 0xbff1a23c57d41a27
.dword 0x0
.dword 0x800b25a18e107c85
.dword 0xbff8cd8a372f0f06
.dword 0x0
.dword 0x0
.dword 0xbff8cd8a372f0f06
.dword 0x0
.dword 0x800bdb7a1c11ae96
.dword 0xbffa6229168cb10d
.dword 0x0
.dword 0x0
.dword 0xbffa6229168cb10d
.dword 0x0
.dword 0xcf6a659342c81
.dword 0x3ffcd83dac71068d
.dword 0x0
.dword 0x0
.dword 0x3ffcd83dac71068d
.dword 0x0
.dword 0x9e4d6e3994b4b
.dword 0x3ff603c137f0d51f
.dword 0x0
.dword 0x0
.dword 0x3ff603c137f0d51f
.dword 0x0
.dword 0xe87a1606fd7b9
.dword 0x40002a39e584db8a
.dword 0x0
.dword 0x0
.dword 0x40002a39e584db8a
.dword 0x0
.dword 0xc8a7063a8e27a
.dword 0x3ffbe776c4b9309a
.dword 0x0
.dword 0x0
.dword 0x3ffbe776c4b9309a
.dword 0x0
.dword 0x6baa94414ba5e
.dword 0x4022b74f7c4aeb28
.dword 0x0
.dword 0x0
.dword 0x4022b74f7c4aeb28
.dword 0x0
.dword 0xff91a0af25bcea80
.dword 0xc008c1d44531ee36
.dword 0x0
.dword 0x0
.dword 0xc008c1d44531ee36
.dword 0x0
.dword 0xffcf41cece7b92c0
.dword 0xc0118f3f99f3a7ab
.dword 0x0
.dword 0x0
.dword 0xc0118f3f99f3a7ab
.dword 0x0
.dword 0xffdaa9de60dde106
.dword 0xc01df542c221f050
.dword 0x0
.dword 0x0
.dword 0xc01df542c221f050
.dword 0x0
.dword 0xffe30ac79053ba62
.dword 0xbff11dadc9e4eb85
.dword 0x0
.dword 0x0
.dword 0xbff11dadc9e4eb85
.dword 0x0
.dword 0xffcefb59a1c18f98
.dword 0xc01167aab18a177e
.dword 0x0
.dword 0x0
.dword 0xc01167aab18a177e
.dword 0x0
.dword 0x7fed1ca42e21585b
.dword 0x3ffa2ac7f4a5aece
.dword 0x0
.dword 0x0
.dword 0x3ffa2ac7f4a5aece
.dword 0x0
.dword 0x7fd209a1991e3307
.dword 0x4014442d6ffe75f4
.dword 0x0
.dword 0x0
.dword 0x4014442d6ffe75f4
.dword 0x0
.dword 0x7fde809082dd48fb
.dword 0x402122b0391ed653
.dword 0x0
.dword 0x0
.dword 0x402122b0391ed653
.dword 0x0
.dword 0x7fe05c5ccdf19706
.dword 0x402261de7cadff67
.dword 0x0
.dword 0x0
.dword 0x402261de7cadff67
.dword 0x0
.dword 0x7feb0580f98a7dbd
.dword 0x3ff849c649169268
.dword 0x0
.dword 0x0
.dword 0x3ff849c649169268
.dword 0x800190ba6fb4c17b
.dword 0x800190ba6fb4c17b
.dword 0x800190ba6fb4c17b
.dword 0xc0016a3ffd234a38
.dword 0x800190ba6fb4c17b
.dword 0x0
.dword 0x800190ba6fb4c17b
.dword 0x800fa7485d0f8ece
.dword 0x800fa7485d0f8ece
.dword 0x800bfded100685f6
.dword 0x800132fe1b33da32
.dword 0x800fa7485d0f8ece
.dword 0x800fa7485d0f8ece
.dword 0x800132fe1b33da32
.dword 0x800190ba6fb4c17b
.dword 0x800bfded100685f6
.dword 0x800fa7485d0f8ece
.dword 0x8007eccd79b8b11e
.dword 0x8000cae158f8de83
.dword 0x800fa7485d0f8ece
.dword 0x800fa7485d0f8ece
.dword 0x8000cae158f8de83
.dword 0x800190ba6fb4c17b
.dword 0x8007eccd79b8b11e
.dword 0x800fa7485d0f8ece
.dword 0x800b25a18e107c85
.dword 0x80011d5cf49b3fa7
.dword 0x800fa7485d0f8ece
.dword 0x800fa7485d0f8ece
.dword 0x80011d5cf49b3fa7
.dword 0x800190ba6fb4c17b
.dword 0x800b25a18e107c85
.dword 0x800fa7485d0f8ece
.dword 0x800bdb7a1c11ae96
.dword 0x80012f8c3601c4a9
.dword 0x800fa7485d0f8ece
.dword 0x800fa7485d0f8ece
.dword 0x80012f8c3601c4a9
.dword 0x800190ba6fb4c17b
.dword 0x800bdb7a1c11ae96
.dword 0x800fa7485d0f8ece
.dword 0xcf6a659342c81
.dword 0x14bdd6f520473
.dword 0x800fa7485d0f8ece
.dword 0x800fa7485d0f8ece
.dword 0x14bdd6f520473
.dword 0x800190ba6fb4c17b
.dword 0xcf6a659342c81
.dword 0x800fa7485d0f8ece
.dword 0x9e4d6e3994b4b
.dword 0xfd48b05c2121
.dword 0x800fa7485d0f8ece
.dword 0x800fa7485d0f8ece
.dword 0xfd48b05c2121
.dword 0x800190ba6fb4c17b
.dword 0x9e4d6e3994b4b
.dword 0x800fa7485d0f8ece
.dword 0xe87a1606fd7b9
.dword 0x173f689a4c8c6
.dword 0x800fa7485d0f8ece
.dword 0x800fa7485d0f8ece
.dword 0x173f689a4c8c6
.dword 0x800190ba6fb4c17b
.dword 0xe87a1606fd7b9
.dword 0x800fa7485d0f8ece
.dword 0xc8a7063a8e27a
.dword 0x1410b3d2a7d0c
.dword 0x800fa7485d0f8ece
.dword 0x800fa7485d0f8ece
.dword 0x1410b3d2a7d0c
.dword 0x800190ba6fb4c17b
.dword 0xc8a7063a8e27a
.dword 0x800190ba6fb4c17b
.dword 0x6baa94414ba5e
.dword 0x6baa94414ba5e
.dword 0x800190ba6fb4c17b
.dword 0x800190ba6fb4c17b
.dword 0xff88ccc238a4b367
.dword 0xff88ccc238a4b367
.dword 0xff91a0af25bcea80
.dword 0x800239ac7113abba
.dword 0xff88ccc238a4b367
.dword 0xff88ccc238a4b367
.dword 0x800239ac7113abba
.dword 0x800190ba6fb4c17b
.dword 0xff91a0af25bcea80
.dword 0x800190ba6fb4c17b
.dword 0xffbefff2c6cde040
.dword 0xffbefff2c6cde040
.dword 0xffcf41cece7b92c0
.dword 0x8003281b93f72b1c
.dword 0xffbefff2c6cde040
.dword 0xffbefff2c6cde040
.dword 0x8003281b93f72b1c
.dword 0x800190ba6fb4c17b
.dword 0xffcf41cece7b92c0
.dword 0xffbefff2c6cde040
.dword 0xffdaa9de60dde106
.dword 0x800562b29f60d7ba
.dword 0xffbefff2c6cde040
.dword 0xffbefff2c6cde040
.dword 0x800562b29f60d7ba
.dword 0x800190ba6fb4c17b
.dword 0xffdaa9de60dde106
.dword 0x800190ba6fb4c17b
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xffe30ac79053ba62
.dword 0x8000c4ec3fe9a819
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x8000c4ec3fe9a819
.dword 0x800190ba6fb4c17b
.dword 0xffe30ac79053ba62
.dword 0xffbefff2c6cde040
.dword 0xffcefb59a1c18f98
.dword 0x800320fdfdfa4c3c
.dword 0xffbefff2c6cde040
.dword 0xffbefff2c6cde040
.dword 0x800320fdfdfa4c3c
.dword 0x800190ba6fb4c17b
.dword 0xffcefb59a1c18f98
.dword 0xfff0000000000000
.dword 0x7fed1ca42e21585b
.dword 0x12d0f0ec06819
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x12d0f0ec06819
.dword 0x800190ba6fb4c17b
.dword 0x7fed1ca42e21585b
.dword 0xffbefff2c6cde040
.dword 0x7fd209a1991e3307
.dword 0x3a4acd3b9460c
.dword 0xffbefff2c6cde040
.dword 0xffbefff2c6cde040
.dword 0x3a4acd3b9460c
.dword 0x800190ba6fb4c17b
.dword 0x7fd209a1991e3307
.dword 0xffbefff2c6cde040
.dword 0x7fde809082dd48fb
.dword 0x6292f14fe32c9
.dword 0xffbefff2c6cde040
.dword 0xffbefff2c6cde040
.dword 0x6292f14fe32c9
.dword 0x800190ba6fb4c17b
.dword 0x7fde809082dd48fb
.dword 0xffbefff2c6cde040
.dword 0x7fe05c5ccdf19706
.dword 0x69bf113fe2b81
.dword 0xffbefff2c6cde040
.dword 0xffbefff2c6cde040
.dword 0x69bf113fe2b81
.dword 0x800190ba6fb4c17b
.dword 0x7fe05c5ccdf19706
.dword 0xfff0000000000000
.dword 0x7feb0580f98a7dbd
.dword 0x11770f6c9c8eb
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x11770f6c9c8eb
.dword 0x800190ba6fb4c17b
.dword 0x7feb0580f98a7dbd
.dword 0x800bfded100685f6
.dword 0x800bfded100685f6
.dword 0x800bfded100685f6
.dword 0xbffaaecfe8e63ec3
.dword 0x800bfded100685f6
.dword 0x0
.dword 0x800bfded100685f6
.dword 0x800132fe1b33da32
.dword 0x800132fe1b33da32
.dword 0x800190ba6fb4c17b
.dword 0x800bfded100685f6
.dword 0x800190ba6fb4c17b
.dword 0x800bfded100685f6
.dword 0x8007eccd79b8b11e
.dword 0x8007eccd79b8b11e
.dword 0x800bfded100685f6
.dword 0x800bfded100685f6
.dword 0x800b25a18e107c85
.dword 0x800b25a18e107c85
.dword 0x800bfded100685f6
.dword 0x800bfded100685f6
.dword 0x800bdb7a1c11ae96
.dword 0x800bdb7a1c11ae96
.dword 0x800bfded100685f6
.dword 0x800bfded100685f6
.dword 0xcf6a659342c81
.dword 0xcf6a659342c81
.dword 0x800bfded100685f6
.dword 0x800bfded100685f6
.dword 0x9e4d6e3994b4b
.dword 0x9e4d6e3994b4b
.dword 0x800bfded100685f6
.dword 0x800bfded100685f6
.dword 0xe87a1606fd7b9
.dword 0xe87a1606fd7b9
.dword 0x800bfded100685f6
.dword 0x800bfded100685f6
.dword 0xc8a7063a8e27a
.dword 0xc8a7063a8e27a
.dword 0x800bfded100685f6
.dword 0x800132fe1b33da32
.dword 0x6baa94414ba5e
.dword 0x30d2a72a33d1eb
.dword 0x800132fe1b33da32
.dword 0x800132fe1b33da32
.dword 0x30d2a72a33d1eb
.dword 0x800bfded100685f6
.dword 0x6baa94414ba5e
.dword 0x800bfded100685f6
.dword 0xff82ffb31f1aecb4
.dword 0xff82ffb31f1aecb4
.dword 0xff91a0af25bcea80
.dword 0x801640bc6ac4b541
.dword 0xff82ffb31f1aecb4
.dword 0xff82ffb31f1aecb4
.dword 0x801640bc6ac4b541
.dword 0x800bfded100685f6
.dword 0xff91a0af25bcea80
.dword 0x800bfded100685f6
.dword 0xffb7bf9fe6e1a7e1
.dword 0xffb7bf9fe6e1a7e1
.dword 0xffcf41cece7b92c0
.dword 0x801f9113c7a7af1a
.dword 0xffb7bf9fe6e1a7e1
.dword 0xffb7bf9fe6e1a7e1
.dword 0x801f9113c7a7af1a
.dword 0x800bfded100685f6
.dword 0xffcf41cece7b92c0
.dword 0xffb7bf9fe6e1a7e1
.dword 0xffdaa9de60dde106
.dword 0x802aed7d1ce436a0
.dword 0xffb7bf9fe6e1a7e1
.dword 0xffb7bf9fe6e1a7e1
.dword 0x802aed7d1ce436a0
.dword 0x800bfded100685f6
.dword 0xffdaa9de60dde106
.dword 0x800bfded100685f6
.dword 0xffedaf87e09a11da
.dword 0xffedaf87e09a11da
.dword 0xffe30ac79053ba62
.dword 0x8007b13a7f2090fc
.dword 0xffedaf87e09a11da
.dword 0xffedaf87e09a11da
.dword 0x8007b13a7f2090fc
.dword 0x800bfded100685f6
.dword 0xffe30ac79053ba62
.dword 0xffb7bf9fe6e1a7e1
.dword 0xffcefb59a1c18f98
.dword 0x801f49ebebc6fa5a
.dword 0xffb7bf9fe6e1a7e1
.dword 0xffb7bf9fe6e1a7e1
.dword 0x801f49ebebc6fa5a
.dword 0x800bfded100685f6
.dword 0xffcefb59a1c18f98
.dword 0xffedaf87e09a11da
.dword 0x7fed1ca42e21585b
.dword 0xbc296938410f6
.dword 0xffedaf87e09a11da
.dword 0xffedaf87e09a11da
.dword 0xbc296938410f6
.dword 0x800bfded100685f6
.dword 0x7fed1ca42e21585b
.dword 0xffb7bf9fe6e1a7e1
.dword 0x7fd209a1991e3307
.dword 0x223760229e5e3c
.dword 0xffb7bf9fe6e1a7e1
.dword 0xffb7bf9fe6e1a7e1
.dword 0x223760229e5e3c
.dword 0x800bfded100685f6
.dword 0x7fd209a1991e3307
.dword 0xffb7bf9fe6e1a7e1
.dword 0x7fde809082dd48fb
.dword 0x2ecdeb68f6fdee
.dword 0xffb7bf9fe6e1a7e1
.dword 0xffb7bf9fe6e1a7e1
.dword 0x2ecdeb68f6fdee
.dword 0x800bfded100685f6
.dword 0x7fde809082dd48fb
.dword 0xffb7bf9fe6e1a7e1
.dword 0x7fe05c5ccdf19706
.dword 0x3085dab1fb6cc3
.dword 0xffb7bf9fe6e1a7e1
.dword 0xffb7bf9fe6e1a7e1
.dword 0x3085dab1fb6cc3
.dword 0x800bfded100685f6
.dword 0x7fe05c5ccdf19706
.dword 0xffedaf87e09a11da
.dword 0x7feb0580f98a7dbd
.dword 0xaea69a3e1d929
.dword 0xffedaf87e09a11da
.dword 0xffedaf87e09a11da
.dword 0xaea69a3e1d929
.dword 0x800bfded100685f6
.dword 0x7feb0580f98a7dbd
.dword 0x8007eccd79b8b11e
.dword 0x8007eccd79b8b11e
.dword 0x8007eccd79b8b11e
.dword 0xbff1a23c57d41a27
.dword 0x8007eccd79b8b11e
.dword 0x0
.dword 0x8007eccd79b8b11e
.dword 0x8000cae158f8de83
.dword 0x8000cae158f8de83
.dword 0x800190ba6fb4c17b
.dword 0x8007eccd79b8b11e
.dword 0x800190ba6fb4c17b
.dword 0x8007eccd79b8b11e
.dword 0x800b25a18e107c85
.dword 0x800b25a18e107c85
.dword 0x8007eccd79b8b11e
.dword 0x8007eccd79b8b11e
.dword 0x800bdb7a1c11ae96
.dword 0x800bdb7a1c11ae96
.dword 0x8007eccd79b8b11e
.dword 0x8007eccd79b8b11e
.dword 0xcf6a659342c81
.dword 0xcf6a659342c81
.dword 0x8007eccd79b8b11e
.dword 0x8007eccd79b8b11e
.dword 0x9e4d6e3994b4b
.dword 0x9e4d6e3994b4b
.dword 0x8007eccd79b8b11e
.dword 0x8007eccd79b8b11e
.dword 0xe87a1606fd7b9
.dword 0xe87a1606fd7b9
.dword 0x8007eccd79b8b11e
.dword 0x8007eccd79b8b11e
.dword 0xc8a7063a8e27a
.dword 0xc8a7063a8e27a
.dword 0x8007eccd79b8b11e
.dword 0x8000cae158f8de83
.dword 0x6baa94414ba5e
.dword 0x30d2a72a33d1eb
.dword 0x8000cae158f8de83
.dword 0x8000cae158f8de83
.dword 0x30d2a72a33d1eb
.dword 0x8007eccd79b8b11e
.dword 0x6baa94414ba5e
.dword 0x8007eccd79b8b11e
.dword 0xff791c7c2bd493e3
.dword 0xff791c7c2bd493e3
.dword 0xff91a0af25bcea80
.dword 0x801640bc6ac4b541
.dword 0xff791c7c2bd493e3
.dword 0xff791c7c2bd493e3
.dword 0x801640bc6ac4b541
.dword 0x8007eccd79b8b11e
.dword 0xff91a0af25bcea80
.dword 0x8007eccd79b8b11e
.dword 0xffaf639b36c9b8db
.dword 0xffaf639b36c9b8db
.dword 0xffcf41cece7b92c0
.dword 0x801f9113c7a7af1a
.dword 0xffaf639b36c9b8db
.dword 0xffaf639b36c9b8db
.dword 0x801f9113c7a7af1a
.dword 0x8007eccd79b8b11e
.dword 0xffcf41cece7b92c0
.dword 0xffaf639b36c9b8db
.dword 0xffdaa9de60dde106
.dword 0x802aed7d1ce436a0
.dword 0xffaf639b36c9b8db
.dword 0xffaf639b36c9b8db
.dword 0x802aed7d1ce436a0
.dword 0x8007eccd79b8b11e
.dword 0xffdaa9de60dde106
.dword 0x8007eccd79b8b11e
.dword 0xffe39e41023e1389
.dword 0xffe39e41023e1389
.dword 0xffe30ac79053ba62
.dword 0x8007b13a7f2090fc
.dword 0xffe39e41023e1389
.dword 0xffe39e41023e1389
.dword 0x8007b13a7f2090fc
.dword 0x8007eccd79b8b11e
.dword 0xffe30ac79053ba62
.dword 0xffaf639b36c9b8db
.dword 0xffcefb59a1c18f98
.dword 0x801f49ebebc6fa5a
.dword 0xffaf639b36c9b8db
.dword 0xffaf639b36c9b8db
.dword 0x801f49ebebc6fa5a
.dword 0x8007eccd79b8b11e
.dword 0xffcefb59a1c18f98
.dword 0xffe39e41023e1389
.dword 0x7fed1ca42e21585b
.dword 0xbc296938410f6
.dword 0xffe39e41023e1389
.dword 0xffe39e41023e1389
.dword 0xbc296938410f6
.dword 0x8007eccd79b8b11e
.dword 0x7fed1ca42e21585b
.dword 0xffaf639b36c9b8db
.dword 0x7fd209a1991e3307
.dword 0x223760229e5e3c
.dword 0xffaf639b36c9b8db
.dword 0xffaf639b36c9b8db
.dword 0x223760229e5e3c
.dword 0x8007eccd79b8b11e
.dword 0x7fd209a1991e3307
.dword 0xffaf639b36c9b8db
.dword 0x7fde809082dd48fb
.dword 0x2ecdeb68f6fdee
.dword 0xffaf639b36c9b8db
.dword 0xffaf639b36c9b8db
.dword 0x2ecdeb68f6fdee
.dword 0x8007eccd79b8b11e
.dword 0x7fde809082dd48fb
.dword 0xffaf639b36c9b8db
.dword 0x7fe05c5ccdf19706
.dword 0x3085dab1fb6cc3
.dword 0xffaf639b36c9b8db
.dword 0xffaf639b36c9b8db
.dword 0x3085dab1fb6cc3
.dword 0x8007eccd79b8b11e
.dword 0x7fe05c5ccdf19706
.dword 0xffe39e41023e1389
.dword 0x7feb0580f98a7dbd
.dword 0xaea69a3e1d929
.dword 0xffe39e41023e1389
.dword 0xffe39e41023e1389
.dword 0xaea69a3e1d929
.dword 0x8007eccd79b8b11e
.dword 0x7feb0580f98a7dbd
.dword 0x800b25a18e107c85
.dword 0x800b25a18e107c85
.dword 0x800b25a18e107c85
.dword 0xbff8cd8a372f0f06
.dword 0x800b25a18e107c85
.dword 0x0
.dword 0x800b25a18e107c85
.dword 0x80011d5cf49b3fa7
.dword 0x80011d5cf49b3fa7
.dword 0x800190ba6fb4c17b
.dword 0x800b25a18e107c85
.dword 0x800190ba6fb4c17b
.dword 0x800b25a18e107c85
.dword 0x800bdb7a1c11ae96
.dword 0x800bdb7a1c11ae96
.dword 0x800b25a18e107c85
.dword 0x800b25a18e107c85
.dword 0xcf6a659342c81
.dword 0xcf6a659342c81
.dword 0x800b25a18e107c85
.dword 0x800b25a18e107c85
.dword 0x9e4d6e3994b4b
.dword 0x9e4d6e3994b4b
.dword 0x800b25a18e107c85
.dword 0x800b25a18e107c85
.dword 0xe87a1606fd7b9
.dword 0xe87a1606fd7b9
.dword 0x800b25a18e107c85
.dword 0x800b25a18e107c85
.dword 0xc8a7063a8e27a
.dword 0xc8a7063a8e27a
.dword 0x800b25a18e107c85
.dword 0x80011d5cf49b3fa7
.dword 0x6baa94414ba5e
.dword 0x30d2a72a33d1eb
.dword 0x80011d5cf49b3fa7
.dword 0x80011d5cf49b3fa7
.dword 0x30d2a72a33d1eb
.dword 0x800b25a18e107c85
.dword 0x6baa94414ba5e
.dword 0x800b25a18e107c85
.dword 0xff81a905c15b6463
.dword 0xff81a905c15b6463
.dword 0xff91a0af25bcea80
.dword 0x801640bc6ac4b541
.dword 0xff81a905c15b6463
.dword 0xff81a905c15b6463
.dword 0x801640bc6ac4b541
.dword 0x800b25a18e107c85
.dword 0xff91a0af25bcea80
.dword 0x800b25a18e107c85
.dword 0xffb6134731b23d7b
.dword 0xffb6134731b23d7b
.dword 0xffcf41cece7b92c0
.dword 0x801f9113c7a7af1a
.dword 0xffb6134731b23d7b
.dword 0xffb6134731b23d7b
.dword 0x801f9113c7a7af1a
.dword 0x800b25a18e107c85
.dword 0xffcf41cece7b92c0
.dword 0xffb6134731b23d7b
.dword 0xffdaa9de60dde106
.dword 0x802aed7d1ce436a0
.dword 0xffb6134731b23d7b
.dword 0xffb6134731b23d7b
.dword 0x802aed7d1ce436a0
.dword 0x800b25a18e107c85
.dword 0xffdaa9de60dde106
.dword 0x800b25a18e107c85
.dword 0xffeb9818fe1eccda
.dword 0xffeb9818fe1eccda
.dword 0xffe30ac79053ba62
.dword 0x8007b13a7f2090fc
.dword 0xffeb9818fe1eccda
.dword 0xffeb9818fe1eccda
.dword 0x8007b13a7f2090fc
.dword 0x800b25a18e107c85
.dword 0xffe30ac79053ba62
.dword 0xffb6134731b23d7b
.dword 0xffcefb59a1c18f98
.dword 0x801f49ebebc6fa5a
.dword 0xffb6134731b23d7b
.dword 0xffb6134731b23d7b
.dword 0x801f49ebebc6fa5a
.dword 0x800b25a18e107c85
.dword 0xffcefb59a1c18f98
.dword 0xffeb9818fe1eccda
.dword 0x7fed1ca42e21585b
.dword 0xbc296938410f6
.dword 0xffeb9818fe1eccda
.dword 0xffeb9818fe1eccda
.dword 0xbc296938410f6
.dword 0x800b25a18e107c85
.dword 0x7fed1ca42e21585b
.dword 0xffb6134731b23d7b
.dword 0x7fd209a1991e3307
.dword 0x223760229e5e3c
.dword 0xffb6134731b23d7b
.dword 0xffb6134731b23d7b
.dword 0x223760229e5e3c
.dword 0x800b25a18e107c85
.dword 0x7fd209a1991e3307
.dword 0xffb6134731b23d7b
.dword 0x7fde809082dd48fb
.dword 0x2ecdeb68f6fdee
.dword 0xffb6134731b23d7b
.dword 0xffb6134731b23d7b
.dword 0x2ecdeb68f6fdee
.dword 0x800b25a18e107c85
.dword 0x7fde809082dd48fb
.dword 0xffb6134731b23d7b
.dword 0x7fe05c5ccdf19706
.dword 0x3085dab1fb6cc3
.dword 0xffb6134731b23d7b
.dword 0xffb6134731b23d7b
.dword 0x3085dab1fb6cc3
.dword 0x800b25a18e107c85
.dword 0x7fe05c5ccdf19706
.dword 0xffeb9818fe1eccda
.dword 0x7feb0580f98a7dbd
.dword 0xaea69a3e1d929
.dword 0xffeb9818fe1eccda
.dword 0xffeb9818fe1eccda
.dword 0xaea69a3e1d929
.dword 0x800b25a18e107c85
.dword 0x7feb0580f98a7dbd
.dword 0x800bdb7a1c11ae96
.dword 0x800bdb7a1c11ae96
.dword 0x800bdb7a1c11ae96
.dword 0xbffa6229168cb10d
.dword 0x800bdb7a1c11ae96
.dword 0x0
.dword 0x800bdb7a1c11ae96
.dword 0x80012f8c3601c4a9
.dword 0x80012f8c3601c4a9
.dword 0x800190ba6fb4c17b
.dword 0x800bdb7a1c11ae96
.dword 0x800190ba6fb4c17b
.dword 0x800bdb7a1c11ae96
.dword 0xcf6a659342c81
.dword 0xcf6a659342c81
.dword 0x800bdb7a1c11ae96
.dword 0x800bdb7a1c11ae96
.dword 0x9e4d6e3994b4b
.dword 0x9e4d6e3994b4b
.dword 0x800bdb7a1c11ae96
.dword 0x800bdb7a1c11ae96
.dword 0xe87a1606fd7b9
.dword 0xe87a1606fd7b9
.dword 0x800bdb7a1c11ae96
.dword 0x800bdb7a1c11ae96
.dword 0xc8a7063a8e27a
.dword 0xc8a7063a8e27a
.dword 0x800bdb7a1c11ae96
.dword 0x80012f8c3601c4a9
.dword 0x6baa94414ba5e
.dword 0x30d2a72a33d1eb
.dword 0x80012f8c3601c4a9
.dword 0x80012f8c3601c4a9
.dword 0x30d2a72a33d1eb
.dword 0x800bdb7a1c11ae96
.dword 0x6baa94414ba5e
.dword 0x800bdb7a1c11ae96
.dword 0xff82c91f356ca801
.dword 0xff82c91f356ca801
.dword 0xff91a0af25bcea80
.dword 0x801640bc6ac4b541
.dword 0xff82c91f356ca801
.dword 0xff82c91f356ca801
.dword 0x801640bc6ac4b541
.dword 0x800bdb7a1c11ae96
.dword 0xff91a0af25bcea80
.dword 0x800bdb7a1c11ae96
.dword 0xffb77b6702c7d202
.dword 0xffb77b6702c7d202
.dword 0xffcf41cece7b92c0
.dword 0x801f9113c7a7af1a
.dword 0xffb77b6702c7d202
.dword 0xffb77b6702c7d202
.dword 0x801f9113c7a7af1a
.dword 0x800bdb7a1c11ae96
.dword 0xffcf41cece7b92c0
.dword 0xffb77b6702c7d202
.dword 0xffdaa9de60dde106
.dword 0x802aed7d1ce436a0
.dword 0xffb77b6702c7d202
.dword 0xffb77b6702c7d202
.dword 0x802aed7d1ce436a0
.dword 0x800bdb7a1c11ae96
.dword 0xffdaa9de60dde106
.dword 0x800bdb7a1c11ae96
.dword 0xffed5a40c379c682
.dword 0xffed5a40c379c682
.dword 0xffe30ac79053ba62
.dword 0x8007b13a7f2090fc
.dword 0xffed5a40c379c682
.dword 0xffed5a40c379c682
.dword 0x8007b13a7f2090fc
.dword 0x800bdb7a1c11ae96
.dword 0xffe30ac79053ba62
.dword 0xffb77b6702c7d202
.dword 0xffcefb59a1c18f98
.dword 0x801f49ebebc6fa5a
.dword 0xffb77b6702c7d202
.dword 0xffb77b6702c7d202
.dword 0x801f49ebebc6fa5a
.dword 0x800bdb7a1c11ae96
.dword 0xffcefb59a1c18f98
.dword 0xffed5a40c379c682
.dword 0x7fed1ca42e21585b
.dword 0xbc296938410f6
.dword 0xffed5a40c379c682
.dword 0xffed5a40c379c682
.dword 0xbc296938410f6
.dword 0x800bdb7a1c11ae96
.dword 0x7fed1ca42e21585b
.dword 0xffb77b6702c7d202
.dword 0x7fd209a1991e3307
.dword 0x223760229e5e3c
.dword 0xffb77b6702c7d202
.dword 0xffb77b6702c7d202
.dword 0x223760229e5e3c
.dword 0x800bdb7a1c11ae96
.dword 0x7fd209a1991e3307
.dword 0xffb77b6702c7d202
.dword 0x7fde809082dd48fb
.dword 0x2ecdeb68f6fdee
.dword 0xffb77b6702c7d202
.dword 0xffb77b6702c7d202
.dword 0x2ecdeb68f6fdee
.dword 0x800bdb7a1c11ae96
.dword 0x7fde809082dd48fb
.dword 0xffb77b6702c7d202
.dword 0x7fe05c5ccdf19706
.dword 0x3085dab1fb6cc3
.dword 0xffb77b6702c7d202
.dword 0xffb77b6702c7d202
.dword 0x3085dab1fb6cc3
.dword 0x800bdb7a1c11ae96
.dword 0x7fe05c5ccdf19706
.dword 0xffed5a40c379c682
.dword 0x7feb0580f98a7dbd
.dword 0xaea69a3e1d929
.dword 0xffed5a40c379c682
.dword 0xffed5a40c379c682
.dword 0xaea69a3e1d929
.dword 0x800bdb7a1c11ae96
.dword 0x7feb0580f98a7dbd
.dword 0xcf6a659342c81
.dword 0xcf6a659342c81
.dword 0xcf6a659342c81
.dword 0x3ffcd83dac71068d
.dword 0xcf6a659342c81
.dword 0x0
.dword 0xcf6a659342c81
.dword 0x14bdd6f520473
.dword 0x14bdd6f520473
.dword 0x800190ba6fb4c17b
.dword 0xcf6a659342c81
.dword 0x800190ba6fb4c17b
.dword 0xcf6a659342c81
.dword 0x9e4d6e3994b4b
.dword 0x9e4d6e3994b4b
.dword 0xcf6a659342c81
.dword 0xcf6a659342c81
.dword 0xe87a1606fd7b9
.dword 0xe87a1606fd7b9
.dword 0xcf6a659342c81
.dword 0xcf6a659342c81
.dword 0xc8a7063a8e27a
.dword 0xc8a7063a8e27a
.dword 0xcf6a659342c81
.dword 0x14bdd6f520473
.dword 0x6baa94414ba5e
.dword 0x30d2a72a33d1eb
.dword 0x14bdd6f520473
.dword 0x14bdd6f520473
.dword 0x30d2a72a33d1eb
.dword 0xcf6a659342c81
.dword 0x6baa94414ba5e
.dword 0xcf6a659342c81
.dword 0x7f8489c109b1e4b9
.dword 0x7f8489c109b1e4b9
.dword 0xff91a0af25bcea80
.dword 0x801640bc6ac4b541
.dword 0x7f8489c109b1e4b9
.dword 0x7f8489c109b1e4b9
.dword 0x801640bc6ac4b541
.dword 0xcf6a659342c81
.dword 0xff91a0af25bcea80
.dword 0xcf6a659342c81
.dword 0x7fb9ac314c1e5de7
.dword 0x7fb9ac314c1e5de7
.dword 0xffcf41cece7b92c0
.dword 0x801f9113c7a7af1a
.dword 0x7fb9ac314c1e5de7
.dword 0x7fb9ac314c1e5de7
.dword 0x801f9113c7a7af1a
.dword 0xcf6a659342c81
.dword 0xffcf41cece7b92c0
.dword 0x7fb9ac314c1e5de7
.dword 0xffdaa9de60dde106
.dword 0x802aed7d1ce436a0
.dword 0x7fb9ac314c1e5de7
.dword 0x7fb9ac314c1e5de7
.dword 0x802aed7d1ce436a0
.dword 0xcf6a659342c81
.dword 0xffdaa9de60dde106
.dword 0xcf6a659342c81
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0xffe30ac79053ba62
.dword 0x8007b13a7f2090fc
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x8007b13a7f2090fc
.dword 0xcf6a659342c81
.dword 0xffe30ac79053ba62
.dword 0x7fb9ac314c1e5de7
.dword 0xffcefb59a1c18f98
.dword 0x801f49ebebc6fa5a
.dword 0x7fb9ac314c1e5de7
.dword 0x7fb9ac314c1e5de7
.dword 0x801f49ebebc6fa5a
.dword 0xcf6a659342c81
.dword 0xffcefb59a1c18f98
.dword 0x7ff0000000000000
.dword 0x7fed1ca42e21585b
.dword 0xbc296938410f6
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0xbc296938410f6
.dword 0xcf6a659342c81
.dword 0x7fed1ca42e21585b
.dword 0x7fb9ac314c1e5de7
.dword 0x7fd209a1991e3307
.dword 0x223760229e5e3c
.dword 0x7fb9ac314c1e5de7
.dword 0x7fb9ac314c1e5de7
.dword 0x223760229e5e3c
.dword 0xcf6a659342c81
.dword 0x7fd209a1991e3307
.dword 0x7fb9ac314c1e5de7
.dword 0x7fde809082dd48fb
.dword 0x2ecdeb68f6fdee
.dword 0x7fb9ac314c1e5de7
.dword 0x7fb9ac314c1e5de7
.dword 0x2ecdeb68f6fdee
.dword 0xcf6a659342c81
.dword 0x7fde809082dd48fb
.dword 0x7fb9ac314c1e5de7
.dword 0x7fe05c5ccdf19706
.dword 0x3085dab1fb6cc3
.dword 0x7fb9ac314c1e5de7
.dword 0x7fb9ac314c1e5de7
.dword 0x3085dab1fb6cc3
.dword 0xcf6a659342c81
.dword 0x7fe05c5ccdf19706
.dword 0x7ff0000000000000
.dword 0x7feb0580f98a7dbd
.dword 0xaea69a3e1d929
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0xaea69a3e1d929
.dword 0xcf6a659342c81
.dword 0x7feb0580f98a7dbd
.dword 0x9e4d6e3994b4b
.dword 0x9e4d6e3994b4b
.dword 0x9e4d6e3994b4b
.dword 0x3ff603c137f0d51f
.dword 0x9e4d6e3994b4b
.dword 0x0
.dword 0x9e4d6e3994b4b
.dword 0xfd48b05c2121
.dword 0xfd48b05c2121
.dword 0x800190ba6fb4c17b
.dword 0x9e4d6e3994b4b
.dword 0x800190ba6fb4c17b
.dword 0x9e4d6e3994b4b
.dword 0xe87a1606fd7b9
.dword 0xe87a1606fd7b9
.dword 0x9e4d6e3994b4b
.dword 0x9e4d6e3994b4b
.dword 0xc8a7063a8e27a
.dword 0xc8a7063a8e27a
.dword 0x9e4d6e3994b4b
.dword 0xfd48b05c2121
.dword 0x6baa94414ba5e
.dword 0x30d2a72a33d1eb
.dword 0xfd48b05c2121
.dword 0xfd48b05c2121
.dword 0x30d2a72a33d1eb
.dword 0x9e4d6e3994b4b
.dword 0x6baa94414ba5e
.dword 0x9e4d6e3994b4b
.dword 0x7f7f5994c8042e0c
.dword 0x7f7f5994c8042e0c
.dword 0xff91a0af25bcea80
.dword 0x801640bc6ac4b541
.dword 0x7f7f5994c8042e0c
.dword 0x7f7f5994c8042e0c
.dword 0x801640bc6ac4b541
.dword 0x9e4d6e3994b4b
.dword 0xff91a0af25bcea80
.dword 0x9e4d6e3994b4b
.dword 0x7fb397fcfd029cc8
.dword 0x7fb397fcfd029cc8
.dword 0xffcf41cece7b92c0
.dword 0x801f9113c7a7af1a
.dword 0x7fb397fcfd029cc8
.dword 0x7fb397fcfd029cc8
.dword 0x801f9113c7a7af1a
.dword 0x9e4d6e3994b4b
.dword 0xffcf41cece7b92c0
.dword 0x7fb397fcfd029cc8
.dword 0xffdaa9de60dde106
.dword 0x802aed7d1ce436a0
.dword 0x7fb397fcfd029cc8
.dword 0x7fb397fcfd029cc8
.dword 0x802aed7d1ce436a0
.dword 0x9e4d6e3994b4b
.dword 0xffdaa9de60dde106
.dword 0x9e4d6e3994b4b
.dword 0x7fe87dfc3c4343fa
.dword 0x7fe87dfc3c4343fa
.dword 0xffe30ac79053ba62
.dword 0x8007b13a7f2090fc
.dword 0x7fe87dfc3c4343fa
.dword 0x7fe87dfc3c4343fa
.dword 0x8007b13a7f2090fc
.dword 0x9e4d6e3994b4b
.dword 0xffe30ac79053ba62
.dword 0x7fb397fcfd029cc8
.dword 0xffcefb59a1c18f98
.dword 0x801f49ebebc6fa5a
.dword 0x7fb397fcfd029cc8
.dword 0x7fb397fcfd029cc8
.dword 0x801f49ebebc6fa5a
.dword 0x9e4d6e3994b4b
.dword 0xffcefb59a1c18f98
.dword 0x7fe87dfc3c4343fa
.dword 0x7fed1ca42e21585b
.dword 0xbc296938410f6
.dword 0x7fe87dfc3c4343fa
.dword 0x7fe87dfc3c4343fa
.dword 0xbc296938410f6
.dword 0x9e4d6e3994b4b
.dword 0x7fed1ca42e21585b
.dword 0x7fb397fcfd029cc8
.dword 0x7fd209a1991e3307
.dword 0x223760229e5e3c
.dword 0x7fb397fcfd029cc8
.dword 0x7fb397fcfd029cc8
.dword 0x223760229e5e3c
.dword 0x9e4d6e3994b4b
.dword 0x7fd209a1991e3307
.dword 0x7fb397fcfd029cc8
.dword 0x7fde809082dd48fb
.dword 0x2ecdeb68f6fdee
.dword 0x7fb397fcfd029cc8
.dword 0x7fb397fcfd029cc8
.dword 0x2ecdeb68f6fdee
.dword 0x9e4d6e3994b4b
.dword 0x7fde809082dd48fb
.dword 0x7fb397fcfd029cc8
.dword 0x7fe05c5ccdf19706
.dword 0x3085dab1fb6cc3
.dword 0x7fb397fcfd029cc8
.dword 0x7fb397fcfd029cc8
.dword 0x3085dab1fb6cc3
.dword 0x9e4d6e3994b4b
.dword 0x7fe05c5ccdf19706
.dword 0x7fe87dfc3c4343fa
.dword 0x7feb0580f98a7dbd
.dword 0xaea69a3e1d929
.dword 0x7fe87dfc3c4343fa
.dword 0x7fe87dfc3c4343fa
.dword 0xaea69a3e1d929
.dword 0x9e4d6e3994b4b
.dword 0x7feb0580f98a7dbd
.dword 0xe87a1606fd7b9
.dword 0xe87a1606fd7b9
.dword 0xe87a1606fd7b9
.dword 0x40002a39e584db8a
.dword 0xe87a1606fd7b9
.dword 0x0
.dword 0xe87a1606fd7b9
.dword 0x173f689a4c8c6
.dword 0x173f689a4c8c6
.dword 0x800190ba6fb4c17b
.dword 0xe87a1606fd7b9
.dword 0x800190ba6fb4c17b
.dword 0xe87a1606fd7b9
.dword 0xc8a7063a8e27a
.dword 0xc8a7063a8e27a
.dword 0xe87a1606fd7b9
.dword 0x173f689a4c8c6
.dword 0x6baa94414ba5e
.dword 0x30d2a72a33d1eb
.dword 0x173f689a4c8c6
.dword 0x173f689a4c8c6
.dword 0x30d2a72a33d1eb
.dword 0xe87a1606fd7b9
.dword 0x6baa94414ba5e
.dword 0xe87a1606fd7b9
.dword 0x7f87050797e15889
.dword 0x7f87050797e15889
.dword 0xff91a0af25bcea80
.dword 0x801640bc6ac4b541
.dword 0x7f87050797e15889
.dword 0x7f87050797e15889
.dword 0x801640bc6ac4b541
.dword 0xe87a1606fd7b9
.dword 0xff91a0af25bcea80
.dword 0xe87a1606fd7b9
.dword 0x7fbcc6497dd9aeac
.dword 0x7fbcc6497dd9aeac
.dword 0xffcf41cece7b92c0
.dword 0x801f9113c7a7af1a
.dword 0x7fbcc6497dd9aeac
.dword 0x7fbcc6497dd9aeac
.dword 0x801f9113c7a7af1a
.dword 0xe87a1606fd7b9
.dword 0xffcf41cece7b92c0
.dword 0x7fbcc6497dd9aeac
.dword 0xffdaa9de60dde106
.dword 0x802aed7d1ce436a0
.dword 0x7fbcc6497dd9aeac
.dword 0x7fbcc6497dd9aeac
.dword 0x802aed7d1ce436a0
.dword 0xe87a1606fd7b9
.dword 0xffdaa9de60dde106
.dword 0xe87a1606fd7b9
.dword 0x7ff0000000000000
.dword 0xe87a1606fd7b9
.dword 0xffe30ac79053ba62
.dword 0x7fbcc6497dd9aeac
.dword 0xffcefb59a1c18f98
.dword 0x801f49ebebc6fa5a
.dword 0x7fbcc6497dd9aeac
.dword 0x7fbcc6497dd9aeac
.dword 0x801f49ebebc6fa5a
.dword 0xe87a1606fd7b9
.dword 0xffcefb59a1c18f98
.dword 0xe87a1606fd7b9
.dword 0x7fed1ca42e21585b
.dword 0x7fbcc6497dd9aeac
.dword 0x7fd209a1991e3307
.dword 0x223760229e5e3c
.dword 0x7fbcc6497dd9aeac
.dword 0x7fbcc6497dd9aeac
.dword 0x223760229e5e3c
.dword 0xe87a1606fd7b9
.dword 0x7fd209a1991e3307
.dword 0x7fbcc6497dd9aeac
.dword 0x7fde809082dd48fb
.dword 0x2ecdeb68f6fdee
.dword 0x7fbcc6497dd9aeac
.dword 0x7fbcc6497dd9aeac
.dword 0x2ecdeb68f6fdee
.dword 0xe87a1606fd7b9
.dword 0x7fde809082dd48fb
.dword 0x7fbcc6497dd9aeac
.dword 0x7fe05c5ccdf19706
.dword 0x3085dab1fb6cc3
.dword 0x7fbcc6497dd9aeac
.dword 0x7fbcc6497dd9aeac
.dword 0x3085dab1fb6cc3
.dword 0xe87a1606fd7b9
.dword 0x7fe05c5ccdf19706
.dword 0xe87a1606fd7b9
.dword 0x7feb0580f98a7dbd
.dword 0xc8a7063a8e27a
.dword 0xc8a7063a8e27a
.dword 0xc8a7063a8e27a
.dword 0x3ffbe776c4b9309a
.dword 0xc8a7063a8e27a
.dword 0x0
.dword 0xc8a7063a8e27a
.dword 0x1410b3d2a7d0c
.dword 0x1410b3d2a7d0c
.dword 0x800190ba6fb4c17b
.dword 0xc8a7063a8e27a
.dword 0x800190ba6fb4c17b
.dword 0x1410b3d2a7d0c
.dword 0x6baa94414ba5e
.dword 0x30d2a72a33d1eb
.dword 0x1410b3d2a7d0c
.dword 0x1410b3d2a7d0c
.dword 0x30d2a72a33d1eb
.dword 0xc8a7063a8e27a
.dword 0x6baa94414ba5e
.dword 0xc8a7063a8e27a
.dword 0x7f83de50ae3ae740
.dword 0x7f83de50ae3ae740
.dword 0xff91a0af25bcea80
.dword 0x801640bc6ac4b541
.dword 0x7f83de50ae3ae740
.dword 0x7f83de50ae3ae740
.dword 0x801640bc6ac4b541
.dword 0xc8a7063a8e27a
.dword 0xff91a0af25bcea80
.dword 0xc8a7063a8e27a
.dword 0x7fb8d5e4d9c9a110
.dword 0x7fb8d5e4d9c9a110
.dword 0xffcf41cece7b92c0
.dword 0x801f9113c7a7af1a
.dword 0x7fb8d5e4d9c9a110
.dword 0x7fb8d5e4d9c9a110
.dword 0x801f9113c7a7af1a
.dword 0xc8a7063a8e27a
.dword 0xffcf41cece7b92c0
.dword 0x7fb8d5e4d9c9a110
.dword 0xffdaa9de60dde106
.dword 0x802aed7d1ce436a0
.dword 0x7fb8d5e4d9c9a110
.dword 0x7fb8d5e4d9c9a110
.dword 0x802aed7d1ce436a0
.dword 0xc8a7063a8e27a
.dword 0xffdaa9de60dde106
.dword 0xc8a7063a8e27a
.dword 0x7fef0b5e103c0954
.dword 0x7fef0b5e103c0954
.dword 0xffe30ac79053ba62
.dword 0x8007b13a7f2090fc
.dword 0x7fef0b5e103c0954
.dword 0x7fef0b5e103c0954
.dword 0x8007b13a7f2090fc
.dword 0xc8a7063a8e27a
.dword 0xffe30ac79053ba62
.dword 0x7fb8d5e4d9c9a110
.dword 0xffcefb59a1c18f98
.dword 0x801f49ebebc6fa5a
.dword 0x7fb8d5e4d9c9a110
.dword 0x7fb8d5e4d9c9a110
.dword 0x801f49ebebc6fa5a
.dword 0xc8a7063a8e27a
.dword 0xffcefb59a1c18f98
.dword 0x7fef0b5e103c0954
.dword 0x7fed1ca42e21585b
.dword 0xbc296938410f6
.dword 0x7fef0b5e103c0954
.dword 0x7fef0b5e103c0954
.dword 0xbc296938410f6
.dword 0xc8a7063a8e27a
.dword 0x7fed1ca42e21585b
.dword 0x7fb8d5e4d9c9a110
.dword 0x7fd209a1991e3307
.dword 0x223760229e5e3c
.dword 0x7fb8d5e4d9c9a110
.dword 0x7fb8d5e4d9c9a110
.dword 0x223760229e5e3c
.dword 0xc8a7063a8e27a
.dword 0x7fd209a1991e3307
.dword 0x7fb8d5e4d9c9a110
.dword 0x7fde809082dd48fb
.dword 0x2ecdeb68f6fdee
.dword 0x7fb8d5e4d9c9a110
.dword 0x7fb8d5e4d9c9a110
.dword 0x2ecdeb68f6fdee
.dword 0xc8a7063a8e27a
.dword 0x7fde809082dd48fb
.dword 0x7fb8d5e4d9c9a110
.dword 0x7fe05c5ccdf19706
.dword 0x3085dab1fb6cc3
.dword 0x7fb8d5e4d9c9a110
.dword 0x7fb8d5e4d9c9a110
.dword 0x3085dab1fb6cc3
.dword 0xc8a7063a8e27a
.dword 0x7fe05c5ccdf19706
.dword 0x7fef0b5e103c0954
.dword 0x7feb0580f98a7dbd
.dword 0xaea69a3e1d929
.dword 0x7fef0b5e103c0954
.dword 0x7fef0b5e103c0954
.dword 0xaea69a3e1d929
.dword 0xc8a7063a8e27a
.dword 0x7feb0580f98a7dbd
.dword 0x6baa94414ba5e
.dword 0x6baa94414ba5e
.dword 0x6baa94414ba5e
.dword 0x4022b74f7c4aeb28
.dword 0x6baa94414ba5e
.dword 0x0
.dword 0x6baa94414ba5e
.dword 0x30d2a72a33d1eb
.dword 0x30d2a72a33d1eb
.dword 0x800bfded100685f6
.dword 0x6baa94414ba5e
.dword 0x800bfded100685f6
.dword 0x30d2a72a33d1eb
.dword 0x8007eccd79b8b11e
.dword 0x6baa94414ba5e
.dword 0x8007eccd79b8b11e
.dword 0x30d2a72a33d1eb
.dword 0x800b25a18e107c85
.dword 0x6baa94414ba5e
.dword 0x800b25a18e107c85
.dword 0x30d2a72a33d1eb
.dword 0x800bdb7a1c11ae96
.dword 0x6baa94414ba5e
.dword 0x800bdb7a1c11ae96
.dword 0x30d2a72a33d1eb
.dword 0xcf6a659342c81
.dword 0x6baa94414ba5e
.dword 0xcf6a659342c81
.dword 0x30d2a72a33d1eb
.dword 0x9e4d6e3994b4b
.dword 0x6baa94414ba5e
.dword 0x9e4d6e3994b4b
.dword 0x30d2a72a33d1eb
.dword 0xe87a1606fd7b9
.dword 0x6baa94414ba5e
.dword 0xe87a1606fd7b9
.dword 0x30d2a72a33d1eb
.dword 0xc8a7063a8e27a
.dword 0x6baa94414ba5e
.dword 0xc8a7063a8e27a
.dword 0x6baa94414ba5e
.dword 0x7faaa70d788e33e4
.dword 0x7faaa70d788e33e4
.dword 0xff91a0af25bcea80
.dword 0x800239ac7113abba
.dword 0x7faaa70d788e33e4
.dword 0x7faaa70d788e33e4
.dword 0x800239ac7113abba
.dword 0x6baa94414ba5e
.dword 0xff91a0af25bcea80
.dword 0x6baa94414ba5e
.dword 0x7fe0a8686b58e06e
.dword 0x7fe0a8686b58e06e
.dword 0xffcf41cece7b92c0
.dword 0x8003281b93f72b1c
.dword 0x7fe0a8686b58e06e
.dword 0x7fe0a8686b58e06e
.dword 0x8003281b93f72b1c
.dword 0x6baa94414ba5e
.dword 0xffcf41cece7b92c0
.dword 0x7fe0a8686b58e06e
.dword 0xffdaa9de60dde106
.dword 0x800562b29f60d7ba
.dword 0x7fe0a8686b58e06e
.dword 0x7fe0a8686b58e06e
.dword 0x800562b29f60d7ba
.dword 0x6baa94414ba5e
.dword 0xffdaa9de60dde106
.dword 0x6baa94414ba5e
.dword 0x7ff0000000000000
.dword 0x8000c4ec3fe9a819
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x8000c4ec3fe9a819
.dword 0x6baa94414ba5e
.dword 0xffe30ac79053ba62
.dword 0x7fe0a8686b58e06e
.dword 0xffcefb59a1c18f98
.dword 0x800320fdfdfa4c3c
.dword 0x7fe0a8686b58e06e
.dword 0x7fe0a8686b58e06e
.dword 0x800320fdfdfa4c3c
.dword 0x6baa94414ba5e
.dword 0xffcefb59a1c18f98
.dword 0x12d0f0ec06819
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x12d0f0ec06819
.dword 0x6baa94414ba5e
.dword 0x7fed1ca42e21585b
.dword 0x7fe0a8686b58e06e
.dword 0x7fd209a1991e3307
.dword 0x3a4acd3b9460c
.dword 0x7fe0a8686b58e06e
.dword 0x7fe0a8686b58e06e
.dword 0x3a4acd3b9460c
.dword 0x6baa94414ba5e
.dword 0x7fd209a1991e3307
.dword 0x7fe0a8686b58e06e
.dword 0x7fde809082dd48fb
.dword 0x6292f14fe32c9
.dword 0x7fe0a8686b58e06e
.dword 0x7fe0a8686b58e06e
.dword 0x6292f14fe32c9
.dword 0x6baa94414ba5e
.dword 0x7fde809082dd48fb
.dword 0x7fe0a8686b58e06e
.dword 0x7fe05c5ccdf19706
.dword 0x69bf113fe2b81
.dword 0x7fe0a8686b58e06e
.dword 0x7fe0a8686b58e06e
.dword 0x69bf113fe2b81
.dword 0x6baa94414ba5e
.dword 0x7fe05c5ccdf19706
.dword 0x11770f6c9c8eb
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x11770f6c9c8eb
.dword 0x6baa94414ba5e
.dword 0x7feb0580f98a7dbd
.dword 0xff91a0af25bcea80
.dword 0xff91a0af25bcea80
.dword 0xff91a0af25bcea80
.dword 0xc008c1d44531ee36
.dword 0xff91a0af25bcea80
.dword 0x0
.dword 0xff91a0af25bcea80
.dword 0x800239ac7113abba
.dword 0x800239ac7113abba
.dword 0x800190ba6fb4c17b
.dword 0xff91a0af25bcea80
.dword 0x800190ba6fb4c17b
.dword 0xff91a0af25bcea80
.dword 0x801640bc6ac4b541
.dword 0x801640bc6ac4b541
.dword 0x800bfded100685f6
.dword 0xff91a0af25bcea80
.dword 0x800bfded100685f6
.dword 0x801640bc6ac4b541
.dword 0x8007eccd79b8b11e
.dword 0xff91a0af25bcea80
.dword 0x8007eccd79b8b11e
.dword 0x801640bc6ac4b541
.dword 0x800b25a18e107c85
.dword 0xff91a0af25bcea80
.dword 0x800b25a18e107c85
.dword 0x801640bc6ac4b541
.dword 0x800bdb7a1c11ae96
.dword 0xff91a0af25bcea80
.dword 0x800bdb7a1c11ae96
.dword 0x801640bc6ac4b541
.dword 0xcf6a659342c81
.dword 0xff91a0af25bcea80
.dword 0xcf6a659342c81
.dword 0x801640bc6ac4b541
.dword 0x9e4d6e3994b4b
.dword 0xff91a0af25bcea80
.dword 0x9e4d6e3994b4b
.dword 0x801640bc6ac4b541
.dword 0xe87a1606fd7b9
.dword 0xff91a0af25bcea80
.dword 0xe87a1606fd7b9
.dword 0x801640bc6ac4b541
.dword 0xc8a7063a8e27a
.dword 0xff91a0af25bcea80
.dword 0xc8a7063a8e27a
.dword 0x800239ac7113abba
.dword 0x6baa94414ba5e
.dword 0xff91a0af25bcea80
.dword 0x6baa94414ba5e
.dword 0xff91a0af25bcea80
.dword 0xffc608daef2c2520
.dword 0xffc608daef2c2520
.dword 0xffcf41cece7b92c0
.dword 0xff9901723ec94233
.dword 0xffc608daef2c2520
.dword 0xffc608daef2c2520
.dword 0xff9901723ec94233
.dword 0xff91a0af25bcea80
.dword 0xffcf41cece7b92c0
.dword 0xffc608daef2c2520
.dword 0xffdaa9de60dde106
.dword 0xffa554b1e717e738
.dword 0xffc608daef2c2520
.dword 0xffc608daef2c2520
.dword 0xffa554b1e717e738
.dword 0xff91a0af25bcea80
.dword 0xffdaa9de60dde106
.dword 0xff91a0af25bcea80
.dword 0xfff0000000000000
.dword 0xff785fb7c2fa882b
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xff785fb7c2fa882b
.dword 0xff91a0af25bcea80
.dword 0xffe30ac79053ba62
.dword 0xffc608daef2c2520
.dword 0xffcefb59a1c18f98
.dword 0xff98c9148167a613
.dword 0xffc608daef2c2520
.dword 0xffc608daef2c2520
.dword 0xff98c9148167a613
.dword 0xff91a0af25bcea80
.dword 0xffcefb59a1c18f98
.dword 0x7f82a1b0c15d0559
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7f82a1b0c15d0559
.dword 0xff91a0af25bcea80
.dword 0x7fed1ca42e21585b
.dword 0xffc608daef2c2520
.dword 0x7fd209a1991e3307
.dword 0x7f9cdc35c1c9eb3f
.dword 0xffc608daef2c2520
.dword 0xffc608daef2c2520
.dword 0x7f9cdc35c1c9eb3f
.dword 0xff91a0af25bcea80
.dword 0x7fd209a1991e3307
.dword 0xffc608daef2c2520
.dword 0x7fde809082dd48fb
.dword 0x7fa866da024aa0c9
.dword 0xffc608daef2c2520
.dword 0xffc608daef2c2520
.dword 0x7fa866da024aa0c9
.dword 0xff91a0af25bcea80
.dword 0x7fde809082dd48fb
.dword 0xffc608daef2c2520
.dword 0x7fe05c5ccdf19706
.dword 0x7faa2d6149828b3c
.dword 0xffc608daef2c2520
.dword 0xffc608daef2c2520
.dword 0x7faa2d6149828b3c
.dword 0xff91a0af25bcea80
.dword 0x7fe05c5ccdf19706
.dword 0x7f814b33d2e7fe8d
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7f814b33d2e7fe8d
.dword 0xff91a0af25bcea80
.dword 0x7feb0580f98a7dbd
.dword 0xffcf41cece7b92c0
.dword 0xffcf41cece7b92c0
.dword 0xffcf41cece7b92c0
.dword 0xc0118f3f99f3a7ab
.dword 0xffcf41cece7b92c0
.dword 0x0
.dword 0xffcf41cece7b92c0
.dword 0x8003281b93f72b1c
.dword 0x8003281b93f72b1c
.dword 0x800190ba6fb4c17b
.dword 0xffcf41cece7b92c0
.dword 0x800190ba6fb4c17b
.dword 0xffcf41cece7b92c0
.dword 0x801f9113c7a7af1a
.dword 0x801f9113c7a7af1a
.dword 0x800bfded100685f6
.dword 0xffcf41cece7b92c0
.dword 0x800bfded100685f6
.dword 0x801f9113c7a7af1a
.dword 0x8007eccd79b8b11e
.dword 0xffcf41cece7b92c0
.dword 0x8007eccd79b8b11e
.dword 0x801f9113c7a7af1a
.dword 0x800b25a18e107c85
.dword 0xffcf41cece7b92c0
.dword 0x800b25a18e107c85
.dword 0x801f9113c7a7af1a
.dword 0x800bdb7a1c11ae96
.dword 0xffcf41cece7b92c0
.dword 0x800bdb7a1c11ae96
.dword 0x801f9113c7a7af1a
.dword 0xcf6a659342c81
.dword 0xffcf41cece7b92c0
.dword 0xcf6a659342c81
.dword 0x801f9113c7a7af1a
.dword 0x9e4d6e3994b4b
.dword 0xffcf41cece7b92c0
.dword 0x9e4d6e3994b4b
.dword 0x801f9113c7a7af1a
.dword 0xe87a1606fd7b9
.dword 0xffcf41cece7b92c0
.dword 0xe87a1606fd7b9
.dword 0x801f9113c7a7af1a
.dword 0xc8a7063a8e27a
.dword 0xffcf41cece7b92c0
.dword 0xc8a7063a8e27a
.dword 0x8003281b93f72b1c
.dword 0x6baa94414ba5e
.dword 0xffcf41cece7b92c0
.dword 0x6baa94414ba5e
.dword 0xffcf41cece7b92c0
.dword 0xff9901723ec94233
.dword 0xff9901723ec94233
.dword 0xff91a0af25bcea80
.dword 0xffcf41cece7b92c0
.dword 0xff91a0af25bcea80
.dword 0xffcf41cece7b92c0
.dword 0xffdaa9de60dde106
.dword 0xffdaa9de60dde106
.dword 0xffcf41cece7b92c0
.dword 0xffcf41cece7b92c0
.dword 0xfff0000000000000
.dword 0xffae77a5b3b92a36
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xffae77a5b3b92a36
.dword 0xffcf41cece7b92c0
.dword 0xffe30ac79053ba62
.dword 0xffcf41cece7b92c0
.dword 0xffcefb59a1c18f98
.dword 0xffcefb59a1c18f98
.dword 0xffcf41cece7b92c0
.dword 0x7fb74a1cf1b446af
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7fb74a1cf1b446af
.dword 0xffcf41cece7b92c0
.dword 0x7fed1ca42e21585b
.dword 0xffcf41cece7b92c0
.dword 0x7fd209a1991e3307
.dword 0x7fd209a1991e3307
.dword 0xffcf41cece7b92c0
.dword 0xffcf41cece7b92c0
.dword 0x7fde809082dd48fb
.dword 0x7fde809082dd48fb
.dword 0xffcf41cece7b92c0
.dword 0xffcf41cece7b92c0
.dword 0x7fe05c5ccdf19706
.dword 0x7fe05c5ccdf19706
.dword 0xffcf41cece7b92c0
.dword 0x7fb59e00c7a1fe31
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7fb59e00c7a1fe31
.dword 0xffcf41cece7b92c0
.dword 0x7feb0580f98a7dbd
.dword 0xffdaa9de60dde106
.dword 0xffdaa9de60dde106
.dword 0xffdaa9de60dde106
.dword 0xc01df542c221f050
.dword 0xffdaa9de60dde106
.dword 0x0
.dword 0xffdaa9de60dde106
.dword 0x800562b29f60d7ba
.dword 0x800562b29f60d7ba
.dword 0x800190ba6fb4c17b
.dword 0xffdaa9de60dde106
.dword 0x800190ba6fb4c17b
.dword 0xffdaa9de60dde106
.dword 0x802aed7d1ce436a0
.dword 0x802aed7d1ce436a0
.dword 0x800bfded100685f6
.dword 0xffdaa9de60dde106
.dword 0x800bfded100685f6
.dword 0x802aed7d1ce436a0
.dword 0x8007eccd79b8b11e
.dword 0xffdaa9de60dde106
.dword 0x8007eccd79b8b11e
.dword 0x802aed7d1ce436a0
.dword 0x800b25a18e107c85
.dword 0xffdaa9de60dde106
.dword 0x800b25a18e107c85
.dword 0x802aed7d1ce436a0
.dword 0x800bdb7a1c11ae96
.dword 0xffdaa9de60dde106
.dword 0x800bdb7a1c11ae96
.dword 0x802aed7d1ce436a0
.dword 0xcf6a659342c81
.dword 0xffdaa9de60dde106
.dword 0xcf6a659342c81
.dword 0x802aed7d1ce436a0
.dword 0x9e4d6e3994b4b
.dword 0xffdaa9de60dde106
.dword 0x9e4d6e3994b4b
.dword 0x802aed7d1ce436a0
.dword 0xe87a1606fd7b9
.dword 0xffdaa9de60dde106
.dword 0xe87a1606fd7b9
.dword 0x802aed7d1ce436a0
.dword 0xc8a7063a8e27a
.dword 0xffdaa9de60dde106
.dword 0xc8a7063a8e27a
.dword 0x800562b29f60d7ba
.dword 0x6baa94414ba5e
.dword 0xffdaa9de60dde106
.dword 0x6baa94414ba5e
.dword 0xffdaa9de60dde106
.dword 0xffa554b1e717e738
.dword 0xffa554b1e717e738
.dword 0xff91a0af25bcea80
.dword 0xffdaa9de60dde106
.dword 0xff91a0af25bcea80
.dword 0xffdaa9de60dde106
.dword 0xfff0000000000000
.dword 0xffdaa9de60dde106
.dword 0xffe30ac79053ba62
.dword 0xffdaa9de60dde106
.dword 0xffcefb59a1c18f98
.dword 0xffcefb59a1c18f98
.dword 0xffdaa9de60dde106
.dword 0xffdaa9de60dde106
.dword 0x7fed1ca42e21585b
.dword 0xffdaa9de60dde106
.dword 0x7fd209a1991e3307
.dword 0x7fd209a1991e3307
.dword 0xffdaa9de60dde106
.dword 0xffdaa9de60dde106
.dword 0x7fde809082dd48fb
.dword 0x7fde809082dd48fb
.dword 0xffdaa9de60dde106
.dword 0xffdaa9de60dde106
.dword 0x7fe05c5ccdf19706
.dword 0x7fe05c5ccdf19706
.dword 0xffdaa9de60dde106
.dword 0xffdaa9de60dde106
.dword 0x7feb0580f98a7dbd
.dword 0xffe30ac79053ba62
.dword 0xffe30ac79053ba62
.dword 0xffe30ac79053ba62
.dword 0xbff11dadc9e4eb85
.dword 0xffe30ac79053ba62
.dword 0x0
.dword 0xffe30ac79053ba62
.dword 0x8000c4ec3fe9a819
.dword 0x8000c4ec3fe9a819
.dword 0x800190ba6fb4c17b
.dword 0xffe30ac79053ba62
.dword 0x800190ba6fb4c17b
.dword 0xffe30ac79053ba62
.dword 0x8007b13a7f2090fc
.dword 0x8007b13a7f2090fc
.dword 0x800bfded100685f6
.dword 0xffe30ac79053ba62
.dword 0x800bfded100685f6
.dword 0x8007b13a7f2090fc
.dword 0x8007eccd79b8b11e
.dword 0xffe30ac79053ba62
.dword 0x8007eccd79b8b11e
.dword 0x8007b13a7f2090fc
.dword 0x800b25a18e107c85
.dword 0xffe30ac79053ba62
.dword 0x800b25a18e107c85
.dword 0x8007b13a7f2090fc
.dword 0x800bdb7a1c11ae96
.dword 0xffe30ac79053ba62
.dword 0x800bdb7a1c11ae96
.dword 0x8007b13a7f2090fc
.dword 0xcf6a659342c81
.dword 0xffe30ac79053ba62
.dword 0xcf6a659342c81
.dword 0x8007b13a7f2090fc
.dword 0x9e4d6e3994b4b
.dword 0xffe30ac79053ba62
.dword 0x9e4d6e3994b4b
.dword 0x8007b13a7f2090fc
.dword 0xe87a1606fd7b9
.dword 0xffe30ac79053ba62
.dword 0xe87a1606fd7b9
.dword 0x8007b13a7f2090fc
.dword 0xc8a7063a8e27a
.dword 0xffe30ac79053ba62
.dword 0xc8a7063a8e27a
.dword 0x8000c4ec3fe9a819
.dword 0x6baa94414ba5e
.dword 0xffe30ac79053ba62
.dword 0x6baa94414ba5e
.dword 0xffe30ac79053ba62
.dword 0xff785fb7c2fa882b
.dword 0xff785fb7c2fa882b
.dword 0xff91a0af25bcea80
.dword 0xffe30ac79053ba62
.dword 0xff91a0af25bcea80
.dword 0xffe30ac79053ba62
.dword 0xffae77a5b3b92a36
.dword 0xffae77a5b3b92a36
.dword 0xffcf41cece7b92c0
.dword 0xffe30ac79053ba62
.dword 0xffcf41cece7b92c0
.dword 0xffae77a5b3b92a36
.dword 0xffdaa9de60dde106
.dword 0xffe30ac79053ba62
.dword 0xffdaa9de60dde106
.dword 0xffae77a5b3b92a36
.dword 0xffcefb59a1c18f98
.dword 0xffe30ac79053ba62
.dword 0xffcefb59a1c18f98
.dword 0xffe30ac79053ba62
.dword 0x7fed1ca42e21585b
.dword 0x7fed1ca42e21585b
.dword 0xffe30ac79053ba62
.dword 0xffae77a5b3b92a36
.dword 0x7fd209a1991e3307
.dword 0x7ff0000000000000
.dword 0xffae77a5b3b92a36
.dword 0xffae77a5b3b92a36
.dword 0x7ff0000000000000
.dword 0xffe30ac79053ba62
.dword 0x7fd209a1991e3307
.dword 0xffae77a5b3b92a36
.dword 0x7fde809082dd48fb
.dword 0xffe30ac79053ba62
.dword 0x7fde809082dd48fb
.dword 0xffae77a5b3b92a36
.dword 0x7fe05c5ccdf19706
.dword 0xffe30ac79053ba62
.dword 0x7fe05c5ccdf19706
.dword 0xffe30ac79053ba62
.dword 0x7feb0580f98a7dbd
.dword 0x7feb0580f98a7dbd
.dword 0xffe30ac79053ba62
.dword 0xffcefb59a1c18f98
.dword 0xffcefb59a1c18f98
.dword 0xffcefb59a1c18f98
.dword 0xc01167aab18a177e
.dword 0xffcefb59a1c18f98
.dword 0x0
.dword 0xffcefb59a1c18f98
.dword 0x800320fdfdfa4c3c
.dword 0x800320fdfdfa4c3c
.dword 0x800190ba6fb4c17b
.dword 0xffcefb59a1c18f98
.dword 0x800190ba6fb4c17b
.dword 0xffcefb59a1c18f98
.dword 0x801f49ebebc6fa5a
.dword 0x801f49ebebc6fa5a
.dword 0x800bfded100685f6
.dword 0xffcefb59a1c18f98
.dword 0x800bfded100685f6
.dword 0x801f49ebebc6fa5a
.dword 0x8007eccd79b8b11e
.dword 0xffcefb59a1c18f98
.dword 0x8007eccd79b8b11e
.dword 0x801f49ebebc6fa5a
.dword 0x800b25a18e107c85
.dword 0xffcefb59a1c18f98
.dword 0x800b25a18e107c85
.dword 0x801f49ebebc6fa5a
.dword 0x800bdb7a1c11ae96
.dword 0xffcefb59a1c18f98
.dword 0x800bdb7a1c11ae96
.dword 0x801f49ebebc6fa5a
.dword 0xcf6a659342c81
.dword 0xffcefb59a1c18f98
.dword 0xcf6a659342c81
.dword 0x801f49ebebc6fa5a
.dword 0x9e4d6e3994b4b
.dword 0xffcefb59a1c18f98
.dword 0x9e4d6e3994b4b
.dword 0x801f49ebebc6fa5a
.dword 0xe87a1606fd7b9
.dword 0xffcefb59a1c18f98
.dword 0xe87a1606fd7b9
.dword 0x801f49ebebc6fa5a
.dword 0xc8a7063a8e27a
.dword 0xffcefb59a1c18f98
.dword 0xc8a7063a8e27a
.dword 0x800320fdfdfa4c3c
.dword 0x6baa94414ba5e
.dword 0xffcefb59a1c18f98
.dword 0x6baa94414ba5e
.dword 0xffcefb59a1c18f98
.dword 0xff98c9148167a613
.dword 0xff98c9148167a613
.dword 0xff91a0af25bcea80
.dword 0xffcefb59a1c18f98
.dword 0xff91a0af25bcea80
.dword 0xffcefb59a1c18f98
.dword 0xfff0000000000000
.dword 0xffcefb59a1c18f98
.dword 0xffe30ac79053ba62
.dword 0xffcefb59a1c18f98
.dword 0x7fed1ca42e21585b
.dword 0xffcefb59a1c18f98
.dword 0x7fd209a1991e3307
.dword 0x7fd209a1991e3307
.dword 0xffcefb59a1c18f98
.dword 0xffcefb59a1c18f98
.dword 0x7fde809082dd48fb
.dword 0x7fde809082dd48fb
.dword 0xffcefb59a1c18f98
.dword 0xffcefb59a1c18f98
.dword 0x7fe05c5ccdf19706
.dword 0x7fe05c5ccdf19706
.dword 0xffcefb59a1c18f98
.dword 0xffcefb59a1c18f98
.dword 0x7feb0580f98a7dbd
.dword 0x7fed1ca42e21585b
.dword 0x7fed1ca42e21585b
.dword 0x7fed1ca42e21585b
.dword 0x3ffa2ac7f4a5aece
.dword 0x7fed1ca42e21585b
.dword 0x0
.dword 0x7fed1ca42e21585b
.dword 0x12d0f0ec06819
.dword 0x12d0f0ec06819
.dword 0x800190ba6fb4c17b
.dword 0x7fed1ca42e21585b
.dword 0x800190ba6fb4c17b
.dword 0x7fed1ca42e21585b
.dword 0xbc296938410f6
.dword 0xbc296938410f6
.dword 0x800bfded100685f6
.dword 0x7fed1ca42e21585b
.dword 0x800bfded100685f6
.dword 0xbc296938410f6
.dword 0x8007eccd79b8b11e
.dword 0x7fed1ca42e21585b
.dword 0x8007eccd79b8b11e
.dword 0xbc296938410f6
.dword 0x800b25a18e107c85
.dword 0x7fed1ca42e21585b
.dword 0x800b25a18e107c85
.dword 0xbc296938410f6
.dword 0x800bdb7a1c11ae96
.dword 0x7fed1ca42e21585b
.dword 0x800bdb7a1c11ae96
.dword 0xbc296938410f6
.dword 0xcf6a659342c81
.dword 0x7fed1ca42e21585b
.dword 0xcf6a659342c81
.dword 0xbc296938410f6
.dword 0x9e4d6e3994b4b
.dword 0x7fed1ca42e21585b
.dword 0x9e4d6e3994b4b
.dword 0xbc296938410f6
.dword 0xe87a1606fd7b9
.dword 0x7fed1ca42e21585b
.dword 0xe87a1606fd7b9
.dword 0xbc296938410f6
.dword 0xc8a7063a8e27a
.dword 0x7fed1ca42e21585b
.dword 0xc8a7063a8e27a
.dword 0x12d0f0ec06819
.dword 0x6baa94414ba5e
.dword 0x7fed1ca42e21585b
.dword 0x6baa94414ba5e
.dword 0x7fed1ca42e21585b
.dword 0x7f82a1b0c15d0559
.dword 0x7f82a1b0c15d0559
.dword 0xff91a0af25bcea80
.dword 0x7fed1ca42e21585b
.dword 0xff91a0af25bcea80
.dword 0x7fed1ca42e21585b
.dword 0x7fb74a1cf1b446af
.dword 0x7fb74a1cf1b446af
.dword 0xffcf41cece7b92c0
.dword 0x7fed1ca42e21585b
.dword 0xffcf41cece7b92c0
.dword 0x7fb74a1cf1b446af
.dword 0xffdaa9de60dde106
.dword 0x7fed1ca42e21585b
.dword 0xffdaa9de60dde106
.dword 0x7fb74a1cf1b446af
.dword 0xffcefb59a1c18f98
.dword 0x7fed1ca42e21585b
.dword 0xffcefb59a1c18f98
.dword 0x7fb74a1cf1b446af
.dword 0x7fd209a1991e3307
.dword 0x7ff0000000000000
.dword 0x7fb74a1cf1b446af
.dword 0x7fb74a1cf1b446af
.dword 0x7ff0000000000000
.dword 0x7fed1ca42e21585b
.dword 0x7fd209a1991e3307
.dword 0x7fb74a1cf1b446af
.dword 0x7fde809082dd48fb
.dword 0x7fed1ca42e21585b
.dword 0x7fde809082dd48fb
.dword 0x7fb74a1cf1b446af
.dword 0x7fe05c5ccdf19706
.dword 0x7fed1ca42e21585b
.dword 0x7fe05c5ccdf19706
.dword 0x7fed1ca42e21585b
.dword 0x7feb0580f98a7dbd
.dword 0x7feb0580f98a7dbd
.dword 0x7fed1ca42e21585b
.dword 0x7fd209a1991e3307
.dword 0x7fd209a1991e3307
.dword 0x7fd209a1991e3307
.dword 0x4014442d6ffe75f4
.dword 0x7fd209a1991e3307
.dword 0x0
.dword 0x7fd209a1991e3307
.dword 0x3a4acd3b9460c
.dword 0x3a4acd3b9460c
.dword 0x800190ba6fb4c17b
.dword 0x7fd209a1991e3307
.dword 0x800190ba6fb4c17b
.dword 0x7fd209a1991e3307
.dword 0x223760229e5e3c
.dword 0x223760229e5e3c
.dword 0x800bfded100685f6
.dword 0x7fd209a1991e3307
.dword 0x800bfded100685f6
.dword 0x223760229e5e3c
.dword 0x8007eccd79b8b11e
.dword 0x7fd209a1991e3307
.dword 0x8007eccd79b8b11e
.dword 0x223760229e5e3c
.dword 0x800b25a18e107c85
.dword 0x7fd209a1991e3307
.dword 0x800b25a18e107c85
.dword 0x223760229e5e3c
.dword 0x800bdb7a1c11ae96
.dword 0x7fd209a1991e3307
.dword 0x800bdb7a1c11ae96
.dword 0x223760229e5e3c
.dword 0xcf6a659342c81
.dword 0x7fd209a1991e3307
.dword 0xcf6a659342c81
.dword 0x223760229e5e3c
.dword 0x9e4d6e3994b4b
.dword 0x7fd209a1991e3307
.dword 0x9e4d6e3994b4b
.dword 0x223760229e5e3c
.dword 0xe87a1606fd7b9
.dword 0x7fd209a1991e3307
.dword 0xe87a1606fd7b9
.dword 0x223760229e5e3c
.dword 0xc8a7063a8e27a
.dword 0x7fd209a1991e3307
.dword 0xc8a7063a8e27a
.dword 0x3a4acd3b9460c
.dword 0x6baa94414ba5e
.dword 0x7fd209a1991e3307
.dword 0x6baa94414ba5e
.dword 0x7fd209a1991e3307
.dword 0x7f9cdc35c1c9eb3f
.dword 0x7f9cdc35c1c9eb3f
.dword 0xff91a0af25bcea80
.dword 0x7fd209a1991e3307
.dword 0xff91a0af25bcea80
.dword 0x7fd209a1991e3307
.dword 0x7ff0000000000000
.dword 0x7fd209a1991e3307
.dword 0xffe30ac79053ba62
.dword 0x7fd209a1991e3307
.dword 0x7fed1ca42e21585b
.dword 0x7fd209a1991e3307
.dword 0x7fde809082dd48fb
.dword 0x7fde809082dd48fb
.dword 0x7fd209a1991e3307
.dword 0x7fd209a1991e3307
.dword 0x7fe05c5ccdf19706
.dword 0x7fe05c5ccdf19706
.dword 0x7fd209a1991e3307
.dword 0x7fb59e00c7a1fe31
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x7fb59e00c7a1fe31
.dword 0x7fd209a1991e3307
.dword 0x7feb0580f98a7dbd
.dword 0x7fde809082dd48fb
.dword 0x7fde809082dd48fb
.dword 0x7fde809082dd48fb
.dword 0x402122b0391ed653
.dword 0x7fde809082dd48fb
.dword 0x0
.dword 0x7fde809082dd48fb
.dword 0x6292f14fe32c9
.dword 0x6292f14fe32c9
.dword 0x800190ba6fb4c17b
.dword 0x7fde809082dd48fb
.dword 0x800190ba6fb4c17b
.dword 0x7fde809082dd48fb
.dword 0x2ecdeb68f6fdee
.dword 0x2ecdeb68f6fdee
.dword 0x800bfded100685f6
.dword 0x7fde809082dd48fb
.dword 0x800bfded100685f6
.dword 0x2ecdeb68f6fdee
.dword 0x8007eccd79b8b11e
.dword 0x7fde809082dd48fb
.dword 0x8007eccd79b8b11e
.dword 0x2ecdeb68f6fdee
.dword 0x800b25a18e107c85
.dword 0x7fde809082dd48fb
.dword 0x800b25a18e107c85
.dword 0x2ecdeb68f6fdee
.dword 0x800bdb7a1c11ae96
.dword 0x7fde809082dd48fb
.dword 0x800bdb7a1c11ae96
.dword 0x2ecdeb68f6fdee
.dword 0xcf6a659342c81
.dword 0x7fde809082dd48fb
.dword 0xcf6a659342c81
.dword 0x2ecdeb68f6fdee
.dword 0x9e4d6e3994b4b
.dword 0x7fde809082dd48fb
.dword 0x9e4d6e3994b4b
.dword 0x2ecdeb68f6fdee
.dword 0xe87a1606fd7b9
.dword 0x7fde809082dd48fb
.dword 0xe87a1606fd7b9
.dword 0x2ecdeb68f6fdee
.dword 0xc8a7063a8e27a
.dword 0x7fde809082dd48fb
.dword 0xc8a7063a8e27a
.dword 0x6292f14fe32c9
.dword 0x6baa94414ba5e
.dword 0x7fde809082dd48fb
.dword 0x6baa94414ba5e
.dword 0x7fde809082dd48fb
.dword 0x7fa866da024aa0c9
.dword 0x7fa866da024aa0c9
.dword 0xff91a0af25bcea80
.dword 0x7fde809082dd48fb
.dword 0xff91a0af25bcea80
.dword 0x7fde809082dd48fb
.dword 0x7ff0000000000000
.dword 0x7fde809082dd48fb
.dword 0xffe30ac79053ba62
.dword 0x7fde809082dd48fb
.dword 0x7fed1ca42e21585b
.dword 0x7fde809082dd48fb
.dword 0x7fe05c5ccdf19706
.dword 0x7fe05c5ccdf19706
.dword 0x7fde809082dd48fb
.dword 0x7fde809082dd48fb
.dword 0x7feb0580f98a7dbd
.dword 0x7fe05c5ccdf19706
.dword 0x7fe05c5ccdf19706
.dword 0x7fe05c5ccdf19706
.dword 0x402261de7cadff67
.dword 0x7fe05c5ccdf19706
.dword 0x0
.dword 0x7fe05c5ccdf19706
.dword 0x69bf113fe2b81
.dword 0x69bf113fe2b81
.dword 0x800190ba6fb4c17b
.dword 0x7fe05c5ccdf19706
.dword 0x800190ba6fb4c17b
.dword 0x7fe05c5ccdf19706
.dword 0x3085dab1fb6cc3
.dword 0x3085dab1fb6cc3
.dword 0x800bfded100685f6
.dword 0x7fe05c5ccdf19706
.dword 0x800bfded100685f6
.dword 0x3085dab1fb6cc3
.dword 0x8007eccd79b8b11e
.dword 0x7fe05c5ccdf19706
.dword 0x8007eccd79b8b11e
.dword 0x3085dab1fb6cc3
.dword 0x800b25a18e107c85
.dword 0x7fe05c5ccdf19706
.dword 0x800b25a18e107c85
.dword 0x3085dab1fb6cc3
.dword 0x800bdb7a1c11ae96
.dword 0x7fe05c5ccdf19706
.dword 0x800bdb7a1c11ae96
.dword 0x3085dab1fb6cc3
.dword 0xcf6a659342c81
.dword 0x7fe05c5ccdf19706
.dword 0xcf6a659342c81
.dword 0x3085dab1fb6cc3
.dword 0x9e4d6e3994b4b
.dword 0x7fe05c5ccdf19706
.dword 0x9e4d6e3994b4b
.dword 0x3085dab1fb6cc3
.dword 0xe87a1606fd7b9
.dword 0x7fe05c5ccdf19706
.dword 0xe87a1606fd7b9
.dword 0x3085dab1fb6cc3
.dword 0xc8a7063a8e27a
.dword 0x7fe05c5ccdf19706
.dword 0xc8a7063a8e27a
.dword 0x69bf113fe2b81
.dword 0x6baa94414ba5e
.dword 0x7fe05c5ccdf19706
.dword 0x6baa94414ba5e
.dword 0x7fe05c5ccdf19706
.dword 0x7faa2d6149828b3c
.dword 0x7faa2d6149828b3c
.dword 0xff91a0af25bcea80
.dword 0x7fe05c5ccdf19706
.dword 0xff91a0af25bcea80
.dword 0x7fe05c5ccdf19706
.dword 0x7ff0000000000000
.dword 0x7fe05c5ccdf19706
.dword 0xffe30ac79053ba62
.dword 0x7fe05c5ccdf19706
.dword 0x7fed1ca42e21585b
.dword 0x7fe05c5ccdf19706
.dword 0x7feb0580f98a7dbd
.dword 0x7feb0580f98a7dbd
.dword 0x3ff849c649169268
.dword 0x7feb0580f98a7dbd
.dword 0x0
.dword 0x7feb0580f98a7dbd
.dword 0x11770f6c9c8eb
.dword 0x11770f6c9c8eb
.dword 0x800190ba6fb4c17b
.dword 0x7feb0580f98a7dbd
.dword 0x800190ba6fb4c17b
.dword 0x7feb0580f98a7dbd
.dword 0xaea69a3e1d929
.dword 0xaea69a3e1d929
.dword 0x800bfded100685f6
.dword 0x7feb0580f98a7dbd
.dword 0x800bfded100685f6
.dword 0xaea69a3e1d929
.dword 0x8007eccd79b8b11e
.dword 0x7feb0580f98a7dbd
.dword 0x8007eccd79b8b11e
.dword 0xaea69a3e1d929
.dword 0x800b25a18e107c85
.dword 0x7feb0580f98a7dbd
.dword 0x800b25a18e107c85
.dword 0xaea69a3e1d929
.dword 0x800bdb7a1c11ae96
.dword 0x7feb0580f98a7dbd
.dword 0x800bdb7a1c11ae96
.dword 0xaea69a3e1d929
.dword 0xcf6a659342c81
.dword 0x7feb0580f98a7dbd
.dword 0xcf6a659342c81
.dword 0xaea69a3e1d929
.dword 0x9e4d6e3994b4b
.dword 0x7feb0580f98a7dbd
.dword 0x9e4d6e3994b4b
.dword 0xaea69a3e1d929
.dword 0xe87a1606fd7b9
.dword 0x7feb0580f98a7dbd
.dword 0xe87a1606fd7b9
.dword 0xaea69a3e1d929
.dword 0xc8a7063a8e27a
.dword 0x7feb0580f98a7dbd
.dword 0xc8a7063a8e27a
.dword 0x11770f6c9c8eb
.dword 0x6baa94414ba5e
.dword 0x7feb0580f98a7dbd
.dword 0x6baa94414ba5e
.dword 0x7feb0580f98a7dbd
.dword 0x7f814b33d2e7fe8d
.dword 0x7f814b33d2e7fe8d
.dword 0xff91a0af25bcea80
.dword 0x7feb0580f98a7dbd
.dword 0xff91a0af25bcea80
.dword 0x7feb0580f98a7dbd
.dword 0x7fb59e00c7a1fe31
.dword 0x7fb59e00c7a1fe31
.dword 0xffcf41cece7b92c0
.dword 0x7feb0580f98a7dbd
.dword 0xffcf41cece7b92c0
.dword 0x7fb59e00c7a1fe31
.dword 0xffdaa9de60dde106
.dword 0x7feb0580f98a7dbd
.dword 0xffdaa9de60dde106
.dword 0x7fb59e00c7a1fe31
.dword 0xffcefb59a1c18f98
.dword 0x7feb0580f98a7dbd
.dword 0xffcefb59a1c18f98
.dword 0x7fb59e00c7a1fe31
.dword 0x7fd209a1991e3307
.dword 0x7feb0580f98a7dbd
.dword 0x7fd209a1991e3307
.dword 0x7fb59e00c7a1fe31
.dword 0x7fde809082dd48fb
.dword 0x7feb0580f98a7dbd
.dword 0x7fde809082dd48fb
.dword 0x7fb59e00c7a1fe31
.dword 0x7fe05c5ccdf19706
.dword 0x7feb0580f98a7dbd
.dword 0x7fe05c5ccdf19706
.dword 0x0
.dword 0x0
.dword 0x0
.dword 0x800190ba6fb4c17b
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_8:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_9:
    .fill 164*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
