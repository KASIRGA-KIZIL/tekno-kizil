
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:16 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V FD extension for the fnmsub_b5 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmsub_b5)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd == rs3 != rs2, rs1==f8, rs2==f23, rs3==f8, rd==f8, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd04b295ed34fb and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0fa8eca9ef80d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xecb1ef58060d8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f8; op2:f23; op3:f8; dest:f8; op1val:0x7fcd04b295ed34fb; op2val:0xc010fa8eca9ef80d; op3val:0x7fcd04b295ed34fb; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f8, f8, f23, f8, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f13, rs2==f7, rs3==f11, rd==f27, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5c7b4891b239f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x47af1b2ab65ea and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe0fd6f3db629 and rm_val == 4  
// opcode: fnmsub.d ; op1:f13; op2:f7; op3:f11; dest:f27; op1val:0x7fc5c7b4891b239f; op2val:0xc0047af1b2ab65ea; op3val:0x7fdbe0fd6f3db629; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f27, f13, f7, f11, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f26, rs2==f28, rs3==f24, rd==f26, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5c7b4891b239f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x47af1b2ab65ea and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe0fd6f3db629 and rm_val == 3  
// opcode: fnmsub.d ; op1:f26; op2:f28; op3:f24; dest:f26; op1val:0x7fc5c7b4891b239f; op2val:0xc0047af1b2ab65ea; op3val:0x7fdbe0fd6f3db629; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f26, f26, f28, f24, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==f4, rs2==f5, rs3==f5, rd==f5, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5c7b4891b239f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x47af1b2ab65ea and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe0fd6f3db629 and rm_val == 2  
// opcode: fnmsub.d ; op1:f4; op2:f5; op3:f5; dest:f5; op1val:0x7fc5c7b4891b239f; op2val:0xc0047af1b2ab65ea; op3val:0xc0047af1b2ab65ea; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f5, f4, f5, f5, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f22, rs2==f26, rs3==f22, rd==f24, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5c7b4891b239f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x47af1b2ab65ea and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe0fd6f3db629 and rm_val == 1  
// opcode: fnmsub.d ; op1:f22; op2:f26; op3:f22; dest:f24; op1val:0x7fc5c7b4891b239f; op2val:0xc0047af1b2ab65ea; op3val:0x7fc5c7b4891b239f; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f24, f22, f26, f22, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f21, rs2==f17, rs3==f3, rd==f3, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5c7b4891b239f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x47af1b2ab65ea and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe0fd6f3db629 and rm_val == 0  
// opcode: fnmsub.d ; op1:f21; op2:f17; op3:f3; dest:f3; op1val:0x7fc5c7b4891b239f; op2val:0xc0047af1b2ab65ea; op3val:0x7fdbe0fd6f3db629; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f3, f21, f17, f3, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f30, rs2==f30, rs3==f30, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x875216d859565 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9f644cd82c7b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5e04fe6b0f0bd and rm_val == 4  
// opcode: fnmsub.d ; op1:f30; op2:f30; op3:f30; dest:f1; op1val:0x7fe875216d859565; op2val:0x7fe875216d859565; op3val:0x7fe875216d859565; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f1, f30, f30, f30, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rs2 == rd != rs3, rs1==f31, rs2==f31, rs3==f9, rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x875216d859565 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9f644cd82c7b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5e04fe6b0f0bd and rm_val == 3  
// opcode: fnmsub.d ; op1:f31; op2:f31; op3:f9; dest:f31; op1val:0x7fe875216d859565; op2val:0x7fe875216d859565; op3val:0x7fd5e04fe6b0f0bd; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f31, f31, f31, f9, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f25, rs2==f25, rs3==f25, rd==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x875216d859565 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9f644cd82c7b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5e04fe6b0f0bd and rm_val == 2  
// opcode: fnmsub.d ; op1:f25; op2:f25; op3:f25; dest:f25; op1val:0x7fe875216d859565; op2val:0x7fe875216d859565; op3val:0x7fe875216d859565; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f25, f25, f25, f25, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f28, rs2==f4, rs3==f4, rd==f30, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x875216d859565 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9f644cd82c7b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5e04fe6b0f0bd and rm_val == 1  
// opcode: fnmsub.d ; op1:f28; op2:f4; op3:f4; dest:f30; op1val:0x7fe875216d859565; op2val:0xbfdc9f644cd82c7b; op3val:0xbfdc9f644cd82c7b; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f30, f28, f4, f4, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f16, rs2==f16, rs3==f28, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x875216d859565 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9f644cd82c7b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5e04fe6b0f0bd and rm_val == 0  
// opcode: fnmsub.d ; op1:f16; op2:f16; op3:f28; dest:f0; op1val:0x7fe875216d859565; op2val:0x7fe875216d859565; op3val:0x7fd5e04fe6b0f0bd; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f0, f16, f16, f28, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f14, rs2==f15, rs3==f12, rd==f15, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x333eee8ee8eaf and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x68e01fd522def and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0xb11d7cbe20aff and rm_val == 4  
// opcode: fnmsub.d ; op1:f14; op2:f15; op3:f12; dest:f15; op1val:0x7fd333eee8ee8eaf; op2val:0xbfa68e01fd522def; op3val:0x7f8b11d7cbe20aff; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f15, f14, f15, f12, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f18, rs2==f13, rs3==f20, rd==f6, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x333eee8ee8eaf and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x68e01fd522def and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0xb11d7cbe20aff and rm_val == 3  
// opcode: fnmsub.d ; op1:f18; op2:f13; op3:f20; dest:f6; op1val:0x7fd333eee8ee8eaf; op2val:0xbfa68e01fd522def; op3val:0x7f8b11d7cbe20aff; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f6, f18, f13, f20, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f20, rs2==f18, rs3==f21, rd==f28, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x333eee8ee8eaf and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x68e01fd522def and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0xb11d7cbe20aff and rm_val == 2  
// opcode: fnmsub.d ; op1:f20; op2:f18; op3:f21; dest:f28; op1val:0x7fd333eee8ee8eaf; op2val:0xbfa68e01fd522def; op3val:0x7f8b11d7cbe20aff; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f28, f20, f18, f21, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f23, rs2==f1, rs3==f15, rd==f10, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x333eee8ee8eaf and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x68e01fd522def and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0xb11d7cbe20aff and rm_val == 1  
// opcode: fnmsub.d ; op1:f23; op2:f1; op3:f15; dest:f10; op1val:0x7fd333eee8ee8eaf; op2val:0xbfa68e01fd522def; op3val:0x7f8b11d7cbe20aff; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f10, f23, f1, f15, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f5, rs2==f3, rs3==f31, rd==f16, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x333eee8ee8eaf and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x68e01fd522def and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0xb11d7cbe20aff and rm_val == 0  
// opcode: fnmsub.d ; op1:f5; op2:f3; op3:f31; dest:f16; op1val:0x7fd333eee8ee8eaf; op2val:0xbfa68e01fd522def; op3val:0x7f8b11d7cbe20aff; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f16, f5, f3, f31, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f15, rs2==f29, rs3==f26, rd==f18, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9d4da5f91b60b and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe625ff0c95f03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x886f608a4881b and rm_val == 4  
// opcode: fnmsub.d ; op1:f15; op2:f29; op3:f26; dest:f18; op1val:0x7fc9d4da5f91b60b; op2val:0xc00e625ff0c95f03; op3val:0x7fe886f608a4881b; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f18, f15, f29, f26, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f29, rs2==f8, rs3==f17, rd==f14, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9d4da5f91b60b and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe625ff0c95f03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x886f608a4881b and rm_val == 3  
// opcode: fnmsub.d ; op1:f29; op2:f8; op3:f17; dest:f14; op1val:0x7fc9d4da5f91b60b; op2val:0xc00e625ff0c95f03; op3val:0x7fe886f608a4881b; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f14, f29, f8, f17, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f6, rs2==f11, rs3==f18, rd==f17, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9d4da5f91b60b and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe625ff0c95f03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x886f608a4881b and rm_val == 2  
// opcode: fnmsub.d ; op1:f6; op2:f11; op3:f18; dest:f17; op1val:0x7fc9d4da5f91b60b; op2val:0xc00e625ff0c95f03; op3val:0x7fe886f608a4881b; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f17, f6, f11, f18, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f10, rs2==f9, rs3==f23, rd==f13, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9d4da5f91b60b and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe625ff0c95f03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x886f608a4881b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f9; op3:f23; dest:f13; op1val:0x7fc9d4da5f91b60b; op2val:0xc00e625ff0c95f03; op3val:0x7fe886f608a4881b; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f9, f23, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f7, rs2==f12, rs3==f19, rd==f9, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9d4da5f91b60b and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe625ff0c95f03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x886f608a4881b and rm_val == 0  
// opcode: fnmsub.d ; op1:f7; op2:f12; op3:f19; dest:f9; op1val:0x7fc9d4da5f91b60b; op2val:0xc00e625ff0c95f03; op3val:0x7fe886f608a4881b; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f9, f7, f12, f19, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f17, rs2==f22, rs3==f29, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x538b347688f39 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78504afaff593 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf31ef401a3fa0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f17; op2:f22; op3:f29; dest:f4; op1val:0x7fe538b347688f39; op2val:0xbff78504afaff593; op3val:0x7fef31ef401a3fa0; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f4, f17, f22, f29, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f0, rs2==f20, rs3==f2, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x538b347688f39 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78504afaff593 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf31ef401a3fa0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f0; op2:f20; op3:f2; dest:f7; op1val:0x7fe538b347688f39; op2val:0xbff78504afaff593; op3val:0x7fef31ef401a3fa0; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f7, f0, f20, f2, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f24, rs2==f14, rs3==f10, rd==f12, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x538b347688f39 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78504afaff593 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf31ef401a3fa0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f24; op2:f14; op3:f10; dest:f12; op1val:0x7fe538b347688f39; op2val:0xbff78504afaff593; op3val:0x7fef31ef401a3fa0; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f12, f24, f14, f10, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f3, rs2==f27, rs3==f16, rd==f2, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x538b347688f39 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78504afaff593 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf31ef401a3fa0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f3; op2:f27; op3:f16; dest:f2; op1val:0x7fe538b347688f39; op2val:0xbff78504afaff593; op3val:0x7fef31ef401a3fa0; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f2, f3, f27, f16, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f27, rs2==f21, rs3==f14, rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x538b347688f39 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78504afaff593 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf31ef401a3fa0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f27; op2:f21; op3:f14; dest:f29; op1val:0x7fe538b347688f39; op2val:0xbff78504afaff593; op3val:0x7fef31ef401a3fa0; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f29, f27, f21, f14, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f9, rs2==f2, rs3==f7, rd==f19, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x95c6370ee1ae1 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xad6f9f65ea471 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x54570beebb313 and rm_val == 4  
// opcode: fnmsub.d ; op1:f9; op2:f2; op3:f7; dest:f19; op1val:0x7fd95c6370ee1ae1; op2val:0xbfdad6f9f65ea471; op3val:0x7fc54570beebb313; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f19, f9, f2, f7, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f12, rs2==f10, rs3==f1, rd==f11, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x95c6370ee1ae1 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xad6f9f65ea471 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x54570beebb313 and rm_val == 3  
// opcode: fnmsub.d ; op1:f12; op2:f10; op3:f1; dest:f11; op1val:0x7fd95c6370ee1ae1; op2val:0xbfdad6f9f65ea471; op3val:0x7fc54570beebb313; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f11, f12, f10, f1, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f1, rs2==f24, rs3==f0, rd==f21, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x95c6370ee1ae1 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xad6f9f65ea471 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x54570beebb313 and rm_val == 2  
// opcode: fnmsub.d ; op1:f1; op2:f24; op3:f0; dest:f21; op1val:0x7fd95c6370ee1ae1; op2val:0xbfdad6f9f65ea471; op3val:0x7fc54570beebb313; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f21, f1, f24, f0, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f2, rs2==f19, rs3==f27, rd==f23, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x95c6370ee1ae1 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xad6f9f65ea471 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x54570beebb313 and rm_val == 1  
// opcode: fnmsub.d ; op1:f2; op2:f19; op3:f27; dest:f23; op1val:0x7fd95c6370ee1ae1; op2val:0xbfdad6f9f65ea471; op3val:0x7fc54570beebb313; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f23, f2, f19, f27, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f19, rs2==f0, rs3==f6, rd==f22, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x95c6370ee1ae1 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xad6f9f65ea471 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x54570beebb313 and rm_val == 0  
// opcode: fnmsub.d ; op1:f19; op2:f0; op3:f6; dest:f22; op1val:0x7fd95c6370ee1ae1; op2val:0xbfdad6f9f65ea471; op3val:0x7fc54570beebb313; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f22, f19, f0, f6, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f11, rs2==f6, rs3==f13, rd==f20, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc86e74daaecf7 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x929c385f420b3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x66e9fda84e08f and rm_val == 4  
// opcode: fnmsub.d ; op1:f11; op2:f6; op3:f13; dest:f20; op1val:0x7fec86e74daaecf7; op2val:0xbfc929c385f420b3; op3val:0x7fc66e9fda84e08f; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f20, f11, f6, f13, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc86e74daaecf7 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x929c385f420b3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x66e9fda84e08f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec86e74daaecf7; op2val:0xbfc929c385f420b3; op3val:0x7fc66e9fda84e08f; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc86e74daaecf7 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x929c385f420b3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x66e9fda84e08f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec86e74daaecf7; op2val:0xbfc929c385f420b3; op3val:0x7fc66e9fda84e08f; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc86e74daaecf7 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x929c385f420b3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x66e9fda84e08f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec86e74daaecf7; op2val:0xbfc929c385f420b3; op3val:0x7fc66e9fda84e08f; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc86e74daaecf7 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x929c385f420b3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x66e9fda84e08f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec86e74daaecf7; op2val:0xbfc929c385f420b3; op3val:0x7fc66e9fda84e08f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1b5321f55711f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd81f8e726306f5; op2val:0xc001b5321f55711f; op3val:0x7feab2b7e6d25349; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1b5321f55711f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd81f8e726306f5; op2val:0xc001b5321f55711f; op3val:0x7feab2b7e6d25349; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1b5321f55711f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd81f8e726306f5; op2val:0xc001b5321f55711f; op3val:0x7feab2b7e6d25349; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1b5321f55711f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd81f8e726306f5; op2val:0xc001b5321f55711f; op3val:0x7feab2b7e6d25349; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1b5321f55711f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd81f8e726306f5; op2val:0xc001b5321f55711f; op3val:0x7feab2b7e6d25349; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9632c0ae546d6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd113f1b844ec29; op2val:0xbff9632c0ae546d6; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9632c0ae546d6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd113f1b844ec29; op2val:0xbff9632c0ae546d6; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9632c0ae546d6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd113f1b844ec29; op2val:0xbff9632c0ae546d6; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9632c0ae546d6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd113f1b844ec29; op2val:0xbff9632c0ae546d6; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9632c0ae546d6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd113f1b844ec29; op2val:0xbff9632c0ae546d6; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x867824bb36ebf and fs2 == 1 and fe2 == 0x403 and fm2 == 0xccdc644a53a6b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221f1 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8867824bb36ebf; op2val:0xc03ccdc644a53a6b; op3val:0x7fd5f78051c221f1; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x867824bb36ebf and fs2 == 1 and fe2 == 0x403 and fm2 == 0xccdc644a53a6b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221f1 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8867824bb36ebf; op2val:0xc03ccdc644a53a6b; op3val:0x7fd5f78051c221f1; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x867824bb36ebf and fs2 == 1 and fe2 == 0x403 and fm2 == 0xccdc644a53a6b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221f1 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8867824bb36ebf; op2val:0xc03ccdc644a53a6b; op3val:0x7fd5f78051c221f1; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x867824bb36ebf and fs2 == 1 and fe2 == 0x403 and fm2 == 0xccdc644a53a6b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221f1 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8867824bb36ebf; op2val:0xc03ccdc644a53a6b; op3val:0x7fd5f78051c221f1; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x867824bb36ebf and fs2 == 1 and fe2 == 0x403 and fm2 == 0xccdc644a53a6b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221f1 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8867824bb36ebf; op2val:0xc03ccdc644a53a6b; op3val:0x7fd5f78051c221f1; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1bda5c4f32f02 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf37aa6e86c68b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc277c8581da67; op2val:0xbff1bda5c4f32f02; op3val:0x7fcf37aa6e86c68b; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1bda5c4f32f02 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf37aa6e86c68b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc277c8581da67; op2val:0xbff1bda5c4f32f02; op3val:0x7fcf37aa6e86c68b; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1bda5c4f32f02 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf37aa6e86c68b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc277c8581da67; op2val:0xbff1bda5c4f32f02; op3val:0x7fcf37aa6e86c68b; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1bda5c4f32f02 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf37aa6e86c68b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc277c8581da67; op2val:0xbff1bda5c4f32f02; op3val:0x7fcf37aa6e86c68b; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1bda5c4f32f02 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf37aa6e86c68b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc277c8581da67; op2val:0xbff1bda5c4f32f02; op3val:0x7fcf37aa6e86c68b; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x61d074b685728 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe03cc30fa6fa7d; op2val:0xbff61d074b685728; op3val:0x7fe67101be2e03ab; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x61d074b685728 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe03cc30fa6fa7d; op2val:0xbff61d074b685728; op3val:0x7fe67101be2e03ab; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x61d074b685728 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe03cc30fa6fa7d; op2val:0xbff61d074b685728; op3val:0x7fe67101be2e03ab; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x61d074b685728 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe03cc30fa6fa7d; op2val:0xbff61d074b685728; op3val:0x7fe67101be2e03ab; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x61d074b685728 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe03cc30fa6fa7d; op2val:0xbff61d074b685728; op3val:0x7fe67101be2e03ab; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x402 and fm2 == 0x94afcaf5ecd01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ef36d4887 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb248a2b9dc22bf; op2val:0xc0294afcaf5ecd01; op3val:0x7fece72ef36d4887; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x402 and fm2 == 0x94afcaf5ecd01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ef36d4887 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb248a2b9dc22bf; op2val:0xc0294afcaf5ecd01; op3val:0x7fece72ef36d4887; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x402 and fm2 == 0x94afcaf5ecd01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ef36d4887 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb248a2b9dc22bf; op2val:0xc0294afcaf5ecd01; op3val:0x7fece72ef36d4887; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x402 and fm2 == 0x94afcaf5ecd01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ef36d4887 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb248a2b9dc22bf; op2val:0xc0294afcaf5ecd01; op3val:0x7fece72ef36d4887; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x402 and fm2 == 0x94afcaf5ecd01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ef36d4887 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb248a2b9dc22bf; op2val:0xc0294afcaf5ecd01; op3val:0x7fece72ef36d4887; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xedab53b8874e2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0eb469d232dd1; op2val:0xbfeedab53b8874e2; op3val:0x7fe05034d6a0d355; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xedab53b8874e2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0eb469d232dd1; op2val:0xbfeedab53b8874e2; op3val:0x7fe05034d6a0d355; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xedab53b8874e2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0eb469d232dd1; op2val:0xbfeedab53b8874e2; op3val:0x7fe05034d6a0d355; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xedab53b8874e2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0eb469d232dd1; op2val:0xbfeedab53b8874e2; op3val:0x7fe05034d6a0d355; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xedab53b8874e2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0eb469d232dd1; op2val:0xbfeedab53b8874e2; op3val:0x7fe05034d6a0d355; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4f0cf23 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x84fbc0814218a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc94c88e4f0cf23; op2val:0xbfe84fbc0814218a; op3val:0x7fc3387045b11b73; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4f0cf23 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x84fbc0814218a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc94c88e4f0cf23; op2val:0xbfe84fbc0814218a; op3val:0x7fc3387045b11b73; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4f0cf23 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x84fbc0814218a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc94c88e4f0cf23; op2val:0xbfe84fbc0814218a; op3val:0x7fc3387045b11b73; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4f0cf23 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x84fbc0814218a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc94c88e4f0cf23; op2val:0xbfe84fbc0814218a; op3val:0x7fc3387045b11b73; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4f0cf23 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x84fbc0814218a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc94c88e4f0cf23; op2val:0xbfe84fbc0814218a; op3val:0x7fc3387045b11b73; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4f5fa80c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x31b2b3b624731 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ef61b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feafde4f5fa80c8; op2val:0xbfe31b2b3b624731; op3val:0x7fe01daaa27ef61b; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4f5fa80c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x31b2b3b624731 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ef61b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feafde4f5fa80c8; op2val:0xbfe31b2b3b624731; op3val:0x7fe01daaa27ef61b; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4f5fa80c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x31b2b3b624731 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ef61b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feafde4f5fa80c8; op2val:0xbfe31b2b3b624731; op3val:0x7fe01daaa27ef61b; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4f5fa80c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x31b2b3b624731 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ef61b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feafde4f5fa80c8; op2val:0xbfe31b2b3b624731; op3val:0x7fe01daaa27ef61b; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4f5fa80c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x31b2b3b624731 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ef61b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feafde4f5fa80c8; op2val:0xbfe31b2b3b624731; op3val:0x7fe01daaa27ef61b; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677f9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5a5ded36db380 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe677f9a96d9966; op2val:0xbff5a5ded36db380; op3val:0x7fee6665d6935c36; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677f9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5a5ded36db380 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe677f9a96d9966; op2val:0xbff5a5ded36db380; op3val:0x7fee6665d6935c36; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677f9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5a5ded36db380 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe677f9a96d9966; op2val:0xbff5a5ded36db380; op3val:0x7fee6665d6935c36; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677f9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5a5ded36db380 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe677f9a96d9966; op2val:0xbff5a5ded36db380; op3val:0x7fee6665d6935c36; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677f9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5a5ded36db380 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe677f9a96d9966; op2val:0xbff5a5ded36db380; op3val:0x7fee6665d6935c36; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc4805d18fc4ef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb8fd64f104922f; op2val:0xc01c4805d18fc4ef; op3val:0x7fe615f701415147; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc4805d18fc4ef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb8fd64f104922f; op2val:0xc01c4805d18fc4ef; op3val:0x7fe615f701415147; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc4805d18fc4ef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb8fd64f104922f; op2val:0xc01c4805d18fc4ef; op3val:0x7fe615f701415147; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc4805d18fc4ef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb8fd64f104922f; op2val:0xc01c4805d18fc4ef; op3val:0x7fe615f701415147; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc4805d18fc4ef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb8fd64f104922f; op2val:0xc01c4805d18fc4ef; op3val:0x7fe615f701415147; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6a65d1abb3471 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc146e28288654f; op2val:0xc016a65d1abb3471; op3val:0x7fe8751b6a67be4c; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6a65d1abb3471 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc146e28288654f; op2val:0xc016a65d1abb3471; op3val:0x7fe8751b6a67be4c; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6a65d1abb3471 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc146e28288654f; op2val:0xc016a65d1abb3471; op3val:0x7fe8751b6a67be4c; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6a65d1abb3471 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc146e28288654f; op2val:0xc016a65d1abb3471; op3val:0x7fe8751b6a67be4c; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6a65d1abb3471 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc146e28288654f; op2val:0xc016a65d1abb3471; op3val:0x7fe8751b6a67be4c; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3b18a1995caa2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6d41e8ed71efb; op2val:0xc003b18a1995caa2; op3val:0x7fec1933e5b458c9; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3b18a1995caa2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6d41e8ed71efb; op2val:0xc003b18a1995caa2; op3val:0x7fec1933e5b458c9; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3b18a1995caa2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6d41e8ed71efb; op2val:0xc003b18a1995caa2; op3val:0x7fec1933e5b458c9; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3b18a1995caa2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6d41e8ed71efb; op2val:0xc003b18a1995caa2; op3val:0x7fec1933e5b458c9; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3b18a1995caa2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6d41e8ed71efb; op2val:0xc003b18a1995caa2; op3val:0x7fec1933e5b458c9; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1f8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4c08cd7bbcd8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec30d25dc7d1f8; op2val:0xbfd4c08cd7bbcd8a; op3val:0x7fd248247c756437; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1f8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4c08cd7bbcd8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec30d25dc7d1f8; op2val:0xbfd4c08cd7bbcd8a; op3val:0x7fd248247c756437; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1f8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4c08cd7bbcd8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec30d25dc7d1f8; op2val:0xbfd4c08cd7bbcd8a; op3val:0x7fd248247c756437; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1f8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4c08cd7bbcd8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec30d25dc7d1f8; op2val:0xbfd4c08cd7bbcd8a; op3val:0x7fd248247c756437; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1f8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4c08cd7bbcd8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec30d25dc7d1f8; op2val:0xbfd4c08cd7bbcd8a; op3val:0x7fd248247c756437; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x42510ee6b949c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe286daddd336a6; op2val:0xbff42510ee6b949c; op3val:0x7fe7537d0a566421; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x42510ee6b949c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe286daddd336a6; op2val:0xbff42510ee6b949c; op3val:0x7fe7537d0a566421; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x42510ee6b949c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe286daddd336a6; op2val:0xbff42510ee6b949c; op3val:0x7fe7537d0a566421; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x42510ee6b949c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe286daddd336a6; op2val:0xbff42510ee6b949c; op3val:0x7fe7537d0a566421; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x42510ee6b949c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe286daddd336a6; op2val:0xbff42510ee6b949c; op3val:0x7fe7537d0a566421; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325f0f1f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3855081369ebd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febf70f5c4 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8d035325f0f1f; op2val:0xc013855081369ebd; op3val:0x7fee45febf70f5c4; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325f0f1f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3855081369ebd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febf70f5c4 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8d035325f0f1f; op2val:0xc013855081369ebd; op3val:0x7fee45febf70f5c4; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325f0f1f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3855081369ebd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febf70f5c4 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8d035325f0f1f; op2val:0xc013855081369ebd; op3val:0x7fee45febf70f5c4; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325f0f1f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3855081369ebd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febf70f5c4 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8d035325f0f1f; op2val:0xc013855081369ebd; op3val:0x7fee45febf70f5c4; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325f0f1f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3855081369ebd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febf70f5c4 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8d035325f0f1f; op2val:0xc013855081369ebd; op3val:0x7fee45febf70f5c4; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x087705042c4de and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee460da8265d2d; op2val:0xbfe087705042c4de; op3val:0x7fdf46513d9d53ab; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x087705042c4de and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee460da8265d2d; op2val:0xbfe087705042c4de; op3val:0x7fdf46513d9d53ab; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x087705042c4de and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee460da8265d2d; op2val:0xbfe087705042c4de; op3val:0x7fdf46513d9d53ab; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x087705042c4de and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee460da8265d2d; op2val:0xbfe087705042c4de; op3val:0x7fdf46513d9d53ab; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x087705042c4de and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee460da8265d2d; op2val:0xbfe087705042c4de; op3val:0x7fdf46513d9d53ab; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcfc38ddf1affa and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc23193c9b51c5f; op2val:0xbfdcfc38ddf1affa; op3val:0x7fb07ac811455a27; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcfc38ddf1affa and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc23193c9b51c5f; op2val:0xbfdcfc38ddf1affa; op3val:0x7fb07ac811455a27; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcfc38ddf1affa and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc23193c9b51c5f; op2val:0xbfdcfc38ddf1affa; op3val:0x7fb07ac811455a27; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcfc38ddf1affa and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc23193c9b51c5f; op2val:0xbfdcfc38ddf1affa; op3val:0x7fb07ac811455a27; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcfc38ddf1affa and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc23193c9b51c5f; op2val:0xbfdcfc38ddf1affa; op3val:0x7fb07ac811455a27; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4a5335300308c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd8104cd4e803; op2val:0xbfe4a5335300308c; op3val:0x7fe29bf2873bcb4b; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4a5335300308c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd8104cd4e803; op2val:0xbfe4a5335300308c; op3val:0x7fe29bf2873bcb4b; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4a5335300308c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd8104cd4e803; op2val:0xbfe4a5335300308c; op3val:0x7fe29bf2873bcb4b; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4a5335300308c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd8104cd4e803; op2val:0xbfe4a5335300308c; op3val:0x7fe29bf2873bcb4b; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4a5335300308c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd8104cd4e803; op2val:0xbfe4a5335300308c; op3val:0x7fe29bf2873bcb4b; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4e465e00c7596 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfd85c073a2591; op2val:0xbff4e465e00c7596; op3val:0x7fe4ca84761136ef; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4e465e00c7596 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfd85c073a2591; op2val:0xbff4e465e00c7596; op3val:0x7fe4ca84761136ef; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4e465e00c7596 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfd85c073a2591; op2val:0xbff4e465e00c7596; op3val:0x7fe4ca84761136ef; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4e465e00c7596 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfd85c073a2591; op2val:0xbff4e465e00c7596; op3val:0x7fe4ca84761136ef; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4e465e00c7596 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfd85c073a2591; op2val:0xbff4e465e00c7596; op3val:0x7fe4ca84761136ef; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x05747d4624e5b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a8fa51e01729; op2val:0xc0005747d4624e5b; op3val:0x7fe61f2260581ec6; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x05747d4624e5b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a8fa51e01729; op2val:0xc0005747d4624e5b; op3val:0x7fe61f2260581ec6; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x05747d4624e5b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a8fa51e01729; op2val:0xc0005747d4624e5b; op3val:0x7fe61f2260581ec6; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x05747d4624e5b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a8fa51e01729; op2val:0xc0005747d4624e5b; op3val:0x7fe61f2260581ec6; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x05747d4624e5b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a8fa51e01729; op2val:0xc0005747d4624e5b; op3val:0x7fe61f2260581ec6; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0f9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc07f8eef0e1ce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8242100dca0f9; op2val:0xbffc07f8eef0e1ce; op3val:0x7fe525a0943b7292; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0f9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc07f8eef0e1ce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8242100dca0f9; op2val:0xbffc07f8eef0e1ce; op3val:0x7fe525a0943b7292; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0f9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc07f8eef0e1ce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8242100dca0f9; op2val:0xbffc07f8eef0e1ce; op3val:0x7fe525a0943b7292; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0f9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc07f8eef0e1ce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8242100dca0f9; op2val:0xbffc07f8eef0e1ce; op3val:0x7fe525a0943b7292; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0f9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc07f8eef0e1ce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8242100dca0f9; op2val:0xbffc07f8eef0e1ce; op3val:0x7fe525a0943b7292; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22f7 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x3a902b464b971 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb026946c5d22f7; op2val:0xc023a902b464b971; op3val:0x7fe3d86a7b5170e5; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22f7 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x3a902b464b971 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb026946c5d22f7; op2val:0xc023a902b464b971; op3val:0x7fe3d86a7b5170e5; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22f7 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x3a902b464b971 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb026946c5d22f7; op2val:0xc023a902b464b971; op3val:0x7fe3d86a7b5170e5; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22f7 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x3a902b464b971 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb026946c5d22f7; op2val:0xc023a902b464b971; op3val:0x7fe3d86a7b5170e5; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22f7 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x3a902b464b971 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb026946c5d22f7; op2val:0xc023a902b464b971; op3val:0x7fe3d86a7b5170e5; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6ff9b and fs2 == 1 and fe2 == 0x400 and fm2 == 0xeb474ec646f44 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd088ea90c6ff9b; op2val:0xc00eb474ec646f44; op3val:0x7fefbb34f341c62f; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6ff9b and fs2 == 1 and fe2 == 0x400 and fm2 == 0xeb474ec646f44 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd088ea90c6ff9b; op2val:0xc00eb474ec646f44; op3val:0x7fefbb34f341c62f; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6ff9b and fs2 == 1 and fe2 == 0x400 and fm2 == 0xeb474ec646f44 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd088ea90c6ff9b; op2val:0xc00eb474ec646f44; op3val:0x7fefbb34f341c62f; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6ff9b and fs2 == 1 and fe2 == 0x400 and fm2 == 0xeb474ec646f44 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd088ea90c6ff9b; op2val:0xc00eb474ec646f44; op3val:0x7fefbb34f341c62f; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6ff9b and fs2 == 1 and fe2 == 0x400 and fm2 == 0xeb474ec646f44 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd088ea90c6ff9b; op2val:0xc00eb474ec646f44; op3val:0x7fefbb34f341c62f; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3338f0c18cf59 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd842c58dceda19; op2val:0xbfd3338f0c18cf59; op3val:0x7fbd1d785536fc77; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3338f0c18cf59 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd842c58dceda19; op2val:0xbfd3338f0c18cf59; op3val:0x7fbd1d785536fc77; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3338f0c18cf59 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd842c58dceda19; op2val:0xbfd3338f0c18cf59; op3val:0x7fbd1d785536fc77; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3338f0c18cf59 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd842c58dceda19; op2val:0xbfd3338f0c18cf59; op3val:0x7fbd1d785536fc77; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3338f0c18cf59 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd842c58dceda19; op2val:0xbfd3338f0c18cf59; op3val:0x7fbd1d785536fc77; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1b3be19e7ca6e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5f3a506a8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda172a2bcb69dd; op2val:0xc001b3be19e7ca6e; op3val:0x7fecddb5f3a506a8; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1b3be19e7ca6e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5f3a506a8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda172a2bcb69dd; op2val:0xc001b3be19e7ca6e; op3val:0x7fecddb5f3a506a8; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1b3be19e7ca6e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5f3a506a8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda172a2bcb69dd; op2val:0xc001b3be19e7ca6e; op3val:0x7fecddb5f3a506a8; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1b3be19e7ca6e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5f3a506a8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda172a2bcb69dd; op2val:0xc001b3be19e7ca6e; op3val:0x7fecddb5f3a506a8; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1b3be19e7ca6e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5f3a506a8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda172a2bcb69dd; op2val:0xc001b3be19e7ca6e; op3val:0x7fecddb5f3a506a8; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x402 and fm2 == 0xab0378616b563 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f947899d9bfab7f; op2val:0xc02ab0378616b563; op3val:0x7fd112b7d42952fb; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x402 and fm2 == 0xab0378616b563 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f947899d9bfab7f; op2val:0xc02ab0378616b563; op3val:0x7fd112b7d42952fb; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x402 and fm2 == 0xab0378616b563 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f947899d9bfab7f; op2val:0xc02ab0378616b563; op3val:0x7fd112b7d42952fb; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x402 and fm2 == 0xab0378616b563 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f947899d9bfab7f; op2val:0xc02ab0378616b563; op3val:0x7fd112b7d42952fb; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x402 and fm2 == 0xab0378616b563 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f947899d9bfab7f; op2val:0xc02ab0378616b563; op3val:0x7fd112b7d42952fb; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cf85ef57 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4eacecd7619ad and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdf9b50c24f6a7 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6edc5cf85ef57; op2val:0xc004eacecd7619ad; op3val:0x7fcdf9b50c24f6a7; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cf85ef57 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4eacecd7619ad and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdf9b50c24f6a7 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6edc5cf85ef57; op2val:0xc004eacecd7619ad; op3val:0x7fcdf9b50c24f6a7; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cf85ef57 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4eacecd7619ad and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdf9b50c24f6a7 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6edc5cf85ef57; op2val:0xc004eacecd7619ad; op3val:0x7fcdf9b50c24f6a7; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cf85ef57 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4eacecd7619ad and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdf9b50c24f6a7 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6edc5cf85ef57; op2val:0xc004eacecd7619ad; op3val:0x7fcdf9b50c24f6a7; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cf85ef57 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4eacecd7619ad and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdf9b50c24f6a7 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6edc5cf85ef57; op2val:0xc004eacecd7619ad; op3val:0x7fcdf9b50c24f6a7; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x89b052e5b805f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x14820ad9ea9fd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa93a1599c5921 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc89b052e5b805f; op2val:0xc0114820ad9ea9fd; op3val:0x7fea93a1599c5921; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x89b052e5b805f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x14820ad9ea9fd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa93a1599c5921 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc89b052e5b805f; op2val:0xc0114820ad9ea9fd; op3val:0x7fea93a1599c5921; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x89b052e5b805f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x14820ad9ea9fd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa93a1599c5921 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc89b052e5b805f; op2val:0xc0114820ad9ea9fd; op3val:0x7fea93a1599c5921; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x89b052e5b805f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x14820ad9ea9fd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa93a1599c5921 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc89b052e5b805f; op2val:0xc0114820ad9ea9fd; op3val:0x7fea93a1599c5921; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x89b052e5b805f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x14820ad9ea9fd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa93a1599c5921 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc89b052e5b805f; op2val:0xc0114820ad9ea9fd; op3val:0x7fea93a1599c5921; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd001f2b1fb2eb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x17a4c0d8855cc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xfadcbe495c283 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd001f2b1fb2eb; op2val:0xbff17a4c0d8855cc; op3val:0x7fdfadcbe495c283; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd001f2b1fb2eb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x17a4c0d8855cc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xfadcbe495c283 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd001f2b1fb2eb; op2val:0xbff17a4c0d8855cc; op3val:0x7fdfadcbe495c283; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd001f2b1fb2eb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x17a4c0d8855cc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xfadcbe495c283 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd001f2b1fb2eb; op2val:0xbff17a4c0d8855cc; op3val:0x7fdfadcbe495c283; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd001f2b1fb2eb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x17a4c0d8855cc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xfadcbe495c283 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd001f2b1fb2eb; op2val:0xbff17a4c0d8855cc; op3val:0x7fdfadcbe495c283; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd001f2b1fb2eb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x17a4c0d8855cc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xfadcbe495c283 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd001f2b1fb2eb; op2val:0xbff17a4c0d8855cc; op3val:0x7fdfadcbe495c283; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48a2fac1f0550 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e3ce0c418e1e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd627293e6330d and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe48a2fac1f0550; op2val:0xbfe6e3ce0c418e1e; op3val:0x7fdd627293e6330d; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48a2fac1f0550 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e3ce0c418e1e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd627293e6330d and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe48a2fac1f0550; op2val:0xbfe6e3ce0c418e1e; op3val:0x7fdd627293e6330d; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48a2fac1f0550 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e3ce0c418e1e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd627293e6330d and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe48a2fac1f0550; op2val:0xbfe6e3ce0c418e1e; op3val:0x7fdd627293e6330d; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48a2fac1f0550 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e3ce0c418e1e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd627293e6330d and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe48a2fac1f0550; op2val:0xbfe6e3ce0c418e1e; op3val:0x7fdd627293e6330d; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48a2fac1f0550 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e3ce0c418e1e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd627293e6330d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe48a2fac1f0550; op2val:0xbfe6e3ce0c418e1e; op3val:0x7fdd627293e6330d; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xff8dc6a068355 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xad386c0f8fa8c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xacd8aa6694f1f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feff8dc6a068355; op2val:0xbfcad386c0f8fa8c; op3val:0x7fcacd8aa6694f1f; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xff8dc6a068355 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xad386c0f8fa8c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xacd8aa6694f1f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feff8dc6a068355; op2val:0xbfcad386c0f8fa8c; op3val:0x7fcacd8aa6694f1f; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xff8dc6a068355 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xad386c0f8fa8c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xacd8aa6694f1f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feff8dc6a068355; op2val:0xbfcad386c0f8fa8c; op3val:0x7fcacd8aa6694f1f; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xff8dc6a068355 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xad386c0f8fa8c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xacd8aa6694f1f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feff8dc6a068355; op2val:0xbfcad386c0f8fa8c; op3val:0x7fcacd8aa6694f1f; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xff8dc6a068355 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xad386c0f8fa8c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xacd8aa6694f1f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feff8dc6a068355; op2val:0xbfcad386c0f8fa8c; op3val:0x7fcacd8aa6694f1f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ceb3a4610497 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x73ce7e402e9c5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xfac256cfaefff and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5ceb3a4610497; op2val:0xc0073ce7e402e9c5; op3val:0x7fcfac256cfaefff; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ceb3a4610497 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x73ce7e402e9c5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xfac256cfaefff and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5ceb3a4610497; op2val:0xc0073ce7e402e9c5; op3val:0x7fcfac256cfaefff; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ceb3a4610497 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x73ce7e402e9c5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xfac256cfaefff and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5ceb3a4610497; op2val:0xc0073ce7e402e9c5; op3val:0x7fcfac256cfaefff; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ceb3a4610497 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x73ce7e402e9c5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xfac256cfaefff and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5ceb3a4610497; op2val:0xc0073ce7e402e9c5; op3val:0x7fcfac256cfaefff; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ceb3a4610497 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x73ce7e402e9c5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xfac256cfaefff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5ceb3a4610497; op2val:0xc0073ce7e402e9c5; op3val:0x7fcfac256cfaefff; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x02b9c63170177 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x65108518b1961 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x68ddc382cd441 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc02b9c63170177; op2val:0xc0165108518b1961; op3val:0x7fe68ddc382cd441; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x02b9c63170177 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x65108518b1961 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x68ddc382cd441 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc02b9c63170177; op2val:0xc0165108518b1961; op3val:0x7fe68ddc382cd441; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x02b9c63170177 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x65108518b1961 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x68ddc382cd441 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc02b9c63170177; op2val:0xc0165108518b1961; op3val:0x7fe68ddc382cd441; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x02b9c63170177 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x65108518b1961 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x68ddc382cd441 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc02b9c63170177; op2val:0xc0165108518b1961; op3val:0x7fe68ddc382cd441; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x02b9c63170177 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x65108518b1961 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x68ddc382cd441 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc02b9c63170177; op2val:0xc0165108518b1961; op3val:0x7fe68ddc382cd441; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd04b295ed34fb and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0fa8eca9ef80d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xecb1ef58060d8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd04b295ed34fb; op2val:0xc010fa8eca9ef80d; op3val:0x7feecb1ef58060d8; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd04b295ed34fb and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0fa8eca9ef80d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xecb1ef58060d8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd04b295ed34fb; op2val:0xc010fa8eca9ef80d; op3val:0x7feecb1ef58060d8; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd04b295ed34fb and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0fa8eca9ef80d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xecb1ef58060d8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd04b295ed34fb; op2val:0xc010fa8eca9ef80d; op3val:0x7feecb1ef58060d8; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd04b295ed34fb and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0fa8eca9ef80d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xecb1ef58060d8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd04b295ed34fb; op2val:0xc010fa8eca9ef80d; op3val:0x7feecb1ef58060d8; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd04b295ed34fb and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0fa8eca9ef80d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xecb1ef58060d8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd04b295ed34fb; op2val:0xc010fa8eca9ef80d; op3val:0x7feecb1ef58060d8; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5c7b4891b239f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x47af1b2ab65ea and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe0fd6f3db629 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5c7b4891b239f; op2val:0xc0047af1b2ab65ea; op3val:0x7fdbe0fd6f3db629; valaddr_reg:x16; val_offset:984; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5c7b4891b239f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x47af1b2ab65ea and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe0fd6f3db629 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5c7b4891b239f; op2val:0xc0047af1b2ab65ea; op3val:0x7fdbe0fd6f3db629; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x875216d859565 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9f644cd82c7b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5e04fe6b0f0bd and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe875216d859565; op2val:0xbfdc9f644cd82c7b; op3val:0x7fd5e04fe6b0f0bd; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x875216d859565 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9f644cd82c7b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5e04fe6b0f0bd and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe875216d859565; op2val:0xbfdc9f644cd82c7b; op3val:0x7fd5e04fe6b0f0bd; valaddr_reg:x16; val_offset:1056; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x875216d859565 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9f644cd82c7b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5e04fe6b0f0bd and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe875216d859565; op2val:0xbfdc9f644cd82c7b; op3val:0x7fd5e04fe6b0f0bd; valaddr_reg:x16; val_offset:1080; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x875216d859565 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9f644cd82c7b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5e04fe6b0f0bd and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe875216d859565; op2val:0xbfdc9f644cd82c7b; op3val:0x7fd5e04fe6b0f0bd; valaddr_reg:x16; val_offset:1104; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x875216d859565 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9f644cd82c7b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5e04fe6b0f0bd and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe875216d859565; op2val:0xbfdc9f644cd82c7b; op3val:0x7fd5e04fe6b0f0bd; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 1440, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fcd04b295ed34fb
.dword 0xc010fa8eca9ef80d
.dword 0x7fcd04b295ed34fb
.dword 0x7fc5c7b4891b239f
.dword 0xc0047af1b2ab65ea
.dword 0x7fdbe0fd6f3db629
.dword 0x7fc5c7b4891b239f
.dword 0xc0047af1b2ab65ea
.dword 0x7fdbe0fd6f3db629
.dword 0x7fc5c7b4891b239f
.dword 0xc0047af1b2ab65ea
.dword 0xc0047af1b2ab65ea
.dword 0x7fc5c7b4891b239f
.dword 0xc0047af1b2ab65ea
.dword 0x7fc5c7b4891b239f
.dword 0x7fc5c7b4891b239f
.dword 0xc0047af1b2ab65ea
.dword 0x7fdbe0fd6f3db629
.dword 0x7fe875216d859565
.dword 0x7fe875216d859565
.dword 0x7fe875216d859565
.dword 0x7fe875216d859565
.dword 0x7fe875216d859565
.dword 0x7fd5e04fe6b0f0bd
.dword 0x7fe875216d859565
.dword 0x7fe875216d859565
.dword 0x7fe875216d859565
.dword 0x7fe875216d859565
.dword 0xbfdc9f644cd82c7b
.dword 0xbfdc9f644cd82c7b
.dword 0x7fe875216d859565
.dword 0x7fe875216d859565
.dword 0x7fd5e04fe6b0f0bd
.dword 0x7fd333eee8ee8eaf
.dword 0xbfa68e01fd522def
.dword 0x7f8b11d7cbe20aff
.dword 0x7fd333eee8ee8eaf
.dword 0xbfa68e01fd522def
.dword 0x7f8b11d7cbe20aff
.dword 0x7fd333eee8ee8eaf
.dword 0xbfa68e01fd522def
.dword 0x7f8b11d7cbe20aff
.dword 0x7fd333eee8ee8eaf
.dword 0xbfa68e01fd522def
.dword 0x7f8b11d7cbe20aff
.dword 0x7fd333eee8ee8eaf
.dword 0xbfa68e01fd522def
.dword 0x7f8b11d7cbe20aff
.dword 0x7fc9d4da5f91b60b
.dword 0xc00e625ff0c95f03
.dword 0x7fe886f608a4881b
.dword 0x7fc9d4da5f91b60b
.dword 0xc00e625ff0c95f03
.dword 0x7fe886f608a4881b
.dword 0x7fc9d4da5f91b60b
.dword 0xc00e625ff0c95f03
.dword 0x7fe886f608a4881b
.dword 0x7fc9d4da5f91b60b
.dword 0xc00e625ff0c95f03
.dword 0x7fe886f608a4881b
.dword 0x7fc9d4da5f91b60b
.dword 0xc00e625ff0c95f03
.dword 0x7fe886f608a4881b
.dword 0x7fe538b347688f39
.dword 0xbff78504afaff593
.dword 0x7fef31ef401a3fa0
.dword 0x7fe538b347688f39
.dword 0xbff78504afaff593
.dword 0x7fef31ef401a3fa0
.dword 0x7fe538b347688f39
.dword 0xbff78504afaff593
.dword 0x7fef31ef401a3fa0
.dword 0x7fe538b347688f39
.dword 0xbff78504afaff593
.dword 0x7fef31ef401a3fa0
.dword 0x7fe538b347688f39
.dword 0xbff78504afaff593
.dword 0x7fef31ef401a3fa0
.dword 0x7fd95c6370ee1ae1
.dword 0xbfdad6f9f65ea471
.dword 0x7fc54570beebb313
.dword 0x7fd95c6370ee1ae1
.dword 0xbfdad6f9f65ea471
.dword 0x7fc54570beebb313
.dword 0x7fd95c6370ee1ae1
.dword 0xbfdad6f9f65ea471
.dword 0x7fc54570beebb313
.dword 0x7fd95c6370ee1ae1
.dword 0xbfdad6f9f65ea471
.dword 0x7fc54570beebb313
.dword 0x7fd95c6370ee1ae1
.dword 0xbfdad6f9f65ea471
.dword 0x7fc54570beebb313
.dword 0x7fec86e74daaecf7
.dword 0xbfc929c385f420b3
.dword 0x7fc66e9fda84e08f
.dword 0x7fec86e74daaecf7
.dword 0xbfc929c385f420b3
.dword 0x7fc66e9fda84e08f
.dword 0x7fec86e74daaecf7
.dword 0xbfc929c385f420b3
.dword 0x7fc66e9fda84e08f
.dword 0x7fec86e74daaecf7
.dword 0xbfc929c385f420b3
.dword 0x7fc66e9fda84e08f
.dword 0x7fec86e74daaecf7
.dword 0xbfc929c385f420b3
.dword 0x7fc66e9fda84e08f
.dword 0x7fd81f8e726306f5
.dword 0xc001b5321f55711f
.dword 0x7feab2b7e6d25349
.dword 0x7fd81f8e726306f5
.dword 0xc001b5321f55711f
.dword 0x7feab2b7e6d25349
.dword 0x7fd81f8e726306f5
.dword 0xc001b5321f55711f
.dword 0x7feab2b7e6d25349
.dword 0x7fd81f8e726306f5
.dword 0xc001b5321f55711f
.dword 0x7feab2b7e6d25349
.dword 0x7fd81f8e726306f5
.dword 0xc001b5321f55711f
.dword 0x7feab2b7e6d25349
.dword 0x7fd113f1b844ec29
.dword 0xbff9632c0ae546d6
.dword 0x7fdb19041a09c655
.dword 0x7fd113f1b844ec29
.dword 0xbff9632c0ae546d6
.dword 0x7fdb19041a09c655
.dword 0x7fd113f1b844ec29
.dword 0xbff9632c0ae546d6
.dword 0x7fdb19041a09c655
.dword 0x7fd113f1b844ec29
.dword 0xbff9632c0ae546d6
.dword 0x7fdb19041a09c655
.dword 0x7fd113f1b844ec29
.dword 0xbff9632c0ae546d6
.dword 0x7fdb19041a09c655
.dword 0x7f8867824bb36ebf
.dword 0xc03ccdc644a53a6b
.dword 0x7fd5f78051c221f1
.dword 0x7f8867824bb36ebf
.dword 0xc03ccdc644a53a6b
.dword 0x7fd5f78051c221f1
.dword 0x7f8867824bb36ebf
.dword 0xc03ccdc644a53a6b
.dword 0x7fd5f78051c221f1
.dword 0x7f8867824bb36ebf
.dword 0xc03ccdc644a53a6b
.dword 0x7fd5f78051c221f1
.dword 0x7f8867824bb36ebf
.dword 0xc03ccdc644a53a6b
.dword 0x7fd5f78051c221f1
.dword 0x7fcc277c8581da67
.dword 0xbff1bda5c4f32f02
.dword 0x7fcf37aa6e86c68b
.dword 0x7fcc277c8581da67
.dword 0xbff1bda5c4f32f02
.dword 0x7fcf37aa6e86c68b
.dword 0x7fcc277c8581da67
.dword 0xbff1bda5c4f32f02
.dword 0x7fcf37aa6e86c68b
.dword 0x7fcc277c8581da67
.dword 0xbff1bda5c4f32f02
.dword 0x7fcf37aa6e86c68b
.dword 0x7fcc277c8581da67
.dword 0xbff1bda5c4f32f02
.dword 0x7fcf37aa6e86c68b
.dword 0x7fe03cc30fa6fa7d
.dword 0xbff61d074b685728
.dword 0x7fe67101be2e03ab
.dword 0x7fe03cc30fa6fa7d
.dword 0xbff61d074b685728
.dword 0x7fe67101be2e03ab
.dword 0x7fe03cc30fa6fa7d
.dword 0xbff61d074b685728
.dword 0x7fe67101be2e03ab
.dword 0x7fe03cc30fa6fa7d
.dword 0xbff61d074b685728
.dword 0x7fe67101be2e03ab
.dword 0x7fe03cc30fa6fa7d
.dword 0xbff61d074b685728
.dword 0x7fe67101be2e03ab
.dword 0x7fb248a2b9dc22bf
.dword 0xc0294afcaf5ecd01
.dword 0x7fece72ef36d4887
.dword 0x7fb248a2b9dc22bf
.dword 0xc0294afcaf5ecd01
.dword 0x7fece72ef36d4887
.dword 0x7fb248a2b9dc22bf
.dword 0xc0294afcaf5ecd01
.dword 0x7fece72ef36d4887
.dword 0x7fb248a2b9dc22bf
.dword 0xc0294afcaf5ecd01
.dword 0x7fece72ef36d4887
.dword 0x7fb248a2b9dc22bf
.dword 0xc0294afcaf5ecd01
.dword 0x7fece72ef36d4887
.dword 0x7fe0eb469d232dd1
.dword 0xbfeedab53b8874e2
.dword 0x7fe05034d6a0d355
.dword 0x7fe0eb469d232dd1
.dword 0xbfeedab53b8874e2
.dword 0x7fe05034d6a0d355
.dword 0x7fe0eb469d232dd1
.dword 0xbfeedab53b8874e2
.dword 0x7fe05034d6a0d355
.dword 0x7fe0eb469d232dd1
.dword 0xbfeedab53b8874e2
.dword 0x7fe05034d6a0d355
.dword 0x7fe0eb469d232dd1
.dword 0xbfeedab53b8874e2
.dword 0x7fe05034d6a0d355
.dword 0x7fc94c88e4f0cf23
.dword 0xbfe84fbc0814218a
.dword 0x7fc3387045b11b73
.dword 0x7fc94c88e4f0cf23
.dword 0xbfe84fbc0814218a
.dword 0x7fc3387045b11b73
.dword 0x7fc94c88e4f0cf23
.dword 0xbfe84fbc0814218a
.dword 0x7fc3387045b11b73
.dword 0x7fc94c88e4f0cf23
.dword 0xbfe84fbc0814218a
.dword 0x7fc3387045b11b73
.dword 0x7fc94c88e4f0cf23
.dword 0xbfe84fbc0814218a
.dword 0x7fc3387045b11b73
.dword 0x7feafde4f5fa80c8
.dword 0xbfe31b2b3b624731
.dword 0x7fe01daaa27ef61b
.dword 0x7feafde4f5fa80c8
.dword 0xbfe31b2b3b624731
.dword 0x7fe01daaa27ef61b
.dword 0x7feafde4f5fa80c8
.dword 0xbfe31b2b3b624731
.dword 0x7fe01daaa27ef61b
.dword 0x7feafde4f5fa80c8
.dword 0xbfe31b2b3b624731
.dword 0x7fe01daaa27ef61b
.dword 0x7feafde4f5fa80c8
.dword 0xbfe31b2b3b624731
.dword 0x7fe01daaa27ef61b
.dword 0x7fe677f9a96d9966
.dword 0xbff5a5ded36db380
.dword 0x7fee6665d6935c36
.dword 0x7fe677f9a96d9966
.dword 0xbff5a5ded36db380
.dword 0x7fee6665d6935c36
.dword 0x7fe677f9a96d9966
.dword 0xbff5a5ded36db380
.dword 0x7fee6665d6935c36
.dword 0x7fe677f9a96d9966
.dword 0xbff5a5ded36db380
.dword 0x7fee6665d6935c36
.dword 0x7fe677f9a96d9966
.dword 0xbff5a5ded36db380
.dword 0x7fee6665d6935c36
.dword 0x7fb8fd64f104922f
.dword 0xc01c4805d18fc4ef
.dword 0x7fe615f701415147
.dword 0x7fb8fd64f104922f
.dword 0xc01c4805d18fc4ef
.dword 0x7fe615f701415147
.dword 0x7fb8fd64f104922f
.dword 0xc01c4805d18fc4ef
.dword 0x7fe615f701415147
.dword 0x7fb8fd64f104922f
.dword 0xc01c4805d18fc4ef
.dword 0x7fe615f701415147
.dword 0x7fb8fd64f104922f
.dword 0xc01c4805d18fc4ef
.dword 0x7fe615f701415147
.dword 0x7fc146e28288654f
.dword 0xc016a65d1abb3471
.dword 0x7fe8751b6a67be4c
.dword 0x7fc146e28288654f
.dword 0xc016a65d1abb3471
.dword 0x7fe8751b6a67be4c
.dword 0x7fc146e28288654f
.dword 0xc016a65d1abb3471
.dword 0x7fe8751b6a67be4c
.dword 0x7fc146e28288654f
.dword 0xc016a65d1abb3471
.dword 0x7fe8751b6a67be4c
.dword 0x7fc146e28288654f
.dword 0xc016a65d1abb3471
.dword 0x7fe8751b6a67be4c
.dword 0x7fd6d41e8ed71efb
.dword 0xc003b18a1995caa2
.dword 0x7fec1933e5b458c9
.dword 0x7fd6d41e8ed71efb
.dword 0xc003b18a1995caa2
.dword 0x7fec1933e5b458c9
.dword 0x7fd6d41e8ed71efb
.dword 0xc003b18a1995caa2
.dword 0x7fec1933e5b458c9
.dword 0x7fd6d41e8ed71efb
.dword 0xc003b18a1995caa2
.dword 0x7fec1933e5b458c9
.dword 0x7fd6d41e8ed71efb
.dword 0xc003b18a1995caa2
.dword 0x7fec1933e5b458c9
.dword 0x7fec30d25dc7d1f8
.dword 0xbfd4c08cd7bbcd8a
.dword 0x7fd248247c756437
.dword 0x7fec30d25dc7d1f8
.dword 0xbfd4c08cd7bbcd8a
.dword 0x7fd248247c756437
.dword 0x7fec30d25dc7d1f8
.dword 0xbfd4c08cd7bbcd8a
.dword 0x7fd248247c756437
.dword 0x7fec30d25dc7d1f8
.dword 0xbfd4c08cd7bbcd8a
.dword 0x7fd248247c756437
.dword 0x7fec30d25dc7d1f8
.dword 0xbfd4c08cd7bbcd8a
.dword 0x7fd248247c756437
.dword 0x7fe286daddd336a6
.dword 0xbff42510ee6b949c
.dword 0x7fe7537d0a566421
.dword 0x7fe286daddd336a6
.dword 0xbff42510ee6b949c
.dword 0x7fe7537d0a566421
.dword 0x7fe286daddd336a6
.dword 0xbff42510ee6b949c
.dword 0x7fe7537d0a566421
.dword 0x7fe286daddd336a6
.dword 0xbff42510ee6b949c
.dword 0x7fe7537d0a566421
.dword 0x7fe286daddd336a6
.dword 0xbff42510ee6b949c
.dword 0x7fe7537d0a566421
.dword 0x7fc8d035325f0f1f
.dword 0xc013855081369ebd
.dword 0x7fee45febf70f5c4
.dword 0x7fc8d035325f0f1f
.dword 0xc013855081369ebd
.dword 0x7fee45febf70f5c4
.dword 0x7fc8d035325f0f1f
.dword 0xc013855081369ebd
.dword 0x7fee45febf70f5c4
.dword 0x7fc8d035325f0f1f
.dword 0xc013855081369ebd
.dword 0x7fee45febf70f5c4
.dword 0x7fc8d035325f0f1f
.dword 0xc013855081369ebd
.dword 0x7fee45febf70f5c4
.dword 0x7fee460da8265d2d
.dword 0xbfe087705042c4de
.dword 0x7fdf46513d9d53ab
.dword 0x7fee460da8265d2d
.dword 0xbfe087705042c4de
.dword 0x7fdf46513d9d53ab
.dword 0x7fee460da8265d2d
.dword 0xbfe087705042c4de
.dword 0x7fdf46513d9d53ab
.dword 0x7fee460da8265d2d
.dword 0xbfe087705042c4de
.dword 0x7fdf46513d9d53ab
.dword 0x7fee460da8265d2d
.dword 0xbfe087705042c4de
.dword 0x7fdf46513d9d53ab
.dword 0x7fc23193c9b51c5f
.dword 0xbfdcfc38ddf1affa
.dword 0x7fb07ac811455a27
.dword 0x7fc23193c9b51c5f
.dword 0xbfdcfc38ddf1affa
.dword 0x7fb07ac811455a27
.dword 0x7fc23193c9b51c5f
.dword 0xbfdcfc38ddf1affa
.dword 0x7fb07ac811455a27
.dword 0x7fc23193c9b51c5f
.dword 0xbfdcfc38ddf1affa
.dword 0x7fb07ac811455a27
.dword 0x7fc23193c9b51c5f
.dword 0xbfdcfc38ddf1affa
.dword 0x7fb07ac811455a27
.dword 0x7fecd8104cd4e803
.dword 0xbfe4a5335300308c
.dword 0x7fe29bf2873bcb4b
.dword 0x7fecd8104cd4e803
.dword 0xbfe4a5335300308c
.dword 0x7fe29bf2873bcb4b
.dword 0x7fecd8104cd4e803
.dword 0xbfe4a5335300308c
.dword 0x7fe29bf2873bcb4b
.dword 0x7fecd8104cd4e803
.dword 0xbfe4a5335300308c
.dword 0x7fe29bf2873bcb4b
.dword 0x7fecd8104cd4e803
.dword 0xbfe4a5335300308c
.dword 0x7fe29bf2873bcb4b
.dword 0x7fdfd85c073a2591
.dword 0xbff4e465e00c7596
.dword 0x7fe4ca84761136ef
.dword 0x7fdfd85c073a2591
.dword 0xbff4e465e00c7596
.dword 0x7fe4ca84761136ef
.dword 0x7fdfd85c073a2591
.dword 0xbff4e465e00c7596
.dword 0x7fe4ca84761136ef
.dword 0x7fdfd85c073a2591
.dword 0xbff4e465e00c7596
.dword 0x7fe4ca84761136ef
.dword 0x7fdfd85c073a2591
.dword 0xbff4e465e00c7596
.dword 0x7fe4ca84761136ef
.dword 0x7fd5a8fa51e01729
.dword 0xc0005747d4624e5b
.dword 0x7fe61f2260581ec6
.dword 0x7fd5a8fa51e01729
.dword 0xc0005747d4624e5b
.dword 0x7fe61f2260581ec6
.dword 0x7fd5a8fa51e01729
.dword 0xc0005747d4624e5b
.dword 0x7fe61f2260581ec6
.dword 0x7fd5a8fa51e01729
.dword 0xc0005747d4624e5b
.dword 0x7fe61f2260581ec6
.dword 0x7fd5a8fa51e01729
.dword 0xc0005747d4624e5b
.dword 0x7fe61f2260581ec6
.dword 0x7fd8242100dca0f9
.dword 0xbffc07f8eef0e1ce
.dword 0x7fe525a0943b7292
.dword 0x7fd8242100dca0f9
.dword 0xbffc07f8eef0e1ce
.dword 0x7fe525a0943b7292
.dword 0x7fd8242100dca0f9
.dword 0xbffc07f8eef0e1ce
.dword 0x7fe525a0943b7292
.dword 0x7fd8242100dca0f9
.dword 0xbffc07f8eef0e1ce
.dword 0x7fe525a0943b7292
.dword 0x7fd8242100dca0f9
.dword 0xbffc07f8eef0e1ce
.dword 0x7fe525a0943b7292
.dword 0x7fb026946c5d22f7
.dword 0xc023a902b464b971
.dword 0x7fe3d86a7b5170e5
.dword 0x7fb026946c5d22f7
.dword 0xc023a902b464b971
.dword 0x7fe3d86a7b5170e5
.dword 0x7fb026946c5d22f7
.dword 0xc023a902b464b971
.dword 0x7fe3d86a7b5170e5
.dword 0x7fb026946c5d22f7
.dword 0xc023a902b464b971
.dword 0x7fe3d86a7b5170e5
.dword 0x7fb026946c5d22f7
.dword 0xc023a902b464b971
.dword 0x7fe3d86a7b5170e5
.dword 0x7fd088ea90c6ff9b
.dword 0xc00eb474ec646f44
.dword 0x7fefbb34f341c62f
.dword 0x7fd088ea90c6ff9b
.dword 0xc00eb474ec646f44
.dword 0x7fefbb34f341c62f
.dword 0x7fd088ea90c6ff9b
.dword 0xc00eb474ec646f44
.dword 0x7fefbb34f341c62f
.dword 0x7fd088ea90c6ff9b
.dword 0xc00eb474ec646f44
.dword 0x7fefbb34f341c62f
.dword 0x7fd088ea90c6ff9b
.dword 0xc00eb474ec646f44
.dword 0x7fefbb34f341c62f
.dword 0x7fd842c58dceda19
.dword 0xbfd3338f0c18cf59
.dword 0x7fbd1d785536fc77
.dword 0x7fd842c58dceda19
.dword 0xbfd3338f0c18cf59
.dword 0x7fbd1d785536fc77
.dword 0x7fd842c58dceda19
.dword 0xbfd3338f0c18cf59
.dword 0x7fbd1d785536fc77
.dword 0x7fd842c58dceda19
.dword 0xbfd3338f0c18cf59
.dword 0x7fbd1d785536fc77
.dword 0x7fd842c58dceda19
.dword 0xbfd3338f0c18cf59
.dword 0x7fbd1d785536fc77
.dword 0x7fda172a2bcb69dd
.dword 0xc001b3be19e7ca6e
.dword 0x7fecddb5f3a506a8
.dword 0x7fda172a2bcb69dd
.dword 0xc001b3be19e7ca6e
.dword 0x7fecddb5f3a506a8
.dword 0x7fda172a2bcb69dd
.dword 0xc001b3be19e7ca6e
.dword 0x7fecddb5f3a506a8
.dword 0x7fda172a2bcb69dd
.dword 0xc001b3be19e7ca6e
.dword 0x7fecddb5f3a506a8
.dword 0x7fda172a2bcb69dd
.dword 0xc001b3be19e7ca6e
.dword 0x7fecddb5f3a506a8
.dword 0x7f947899d9bfab7f
.dword 0xc02ab0378616b563
.dword 0x7fd112b7d42952fb
.dword 0x7f947899d9bfab7f
.dword 0xc02ab0378616b563
.dword 0x7fd112b7d42952fb
.dword 0x7f947899d9bfab7f
.dword 0xc02ab0378616b563
.dword 0x7fd112b7d42952fb
.dword 0x7f947899d9bfab7f
.dword 0xc02ab0378616b563
.dword 0x7fd112b7d42952fb
.dword 0x7f947899d9bfab7f
.dword 0xc02ab0378616b563
.dword 0x7fd112b7d42952fb
.dword 0x7fb6edc5cf85ef57
.dword 0xc004eacecd7619ad
.dword 0x7fcdf9b50c24f6a7
.dword 0x7fb6edc5cf85ef57
.dword 0xc004eacecd7619ad
.dword 0x7fcdf9b50c24f6a7
.dword 0x7fb6edc5cf85ef57
.dword 0xc004eacecd7619ad
.dword 0x7fcdf9b50c24f6a7
.dword 0x7fb6edc5cf85ef57
.dword 0xc004eacecd7619ad
.dword 0x7fcdf9b50c24f6a7
.dword 0x7fb6edc5cf85ef57
.dword 0xc004eacecd7619ad
.dword 0x7fcdf9b50c24f6a7
.dword 0x7fc89b052e5b805f
.dword 0xc0114820ad9ea9fd
.dword 0x7fea93a1599c5921
.dword 0x7fc89b052e5b805f
.dword 0xc0114820ad9ea9fd
.dword 0x7fea93a1599c5921
.dword 0x7fc89b052e5b805f
.dword 0xc0114820ad9ea9fd
.dword 0x7fea93a1599c5921
.dword 0x7fc89b052e5b805f
.dword 0xc0114820ad9ea9fd
.dword 0x7fea93a1599c5921
.dword 0x7fc89b052e5b805f
.dword 0xc0114820ad9ea9fd
.dword 0x7fea93a1599c5921
.dword 0x7fdd001f2b1fb2eb
.dword 0xbff17a4c0d8855cc
.dword 0x7fdfadcbe495c283
.dword 0x7fdd001f2b1fb2eb
.dword 0xbff17a4c0d8855cc
.dword 0x7fdfadcbe495c283
.dword 0x7fdd001f2b1fb2eb
.dword 0xbff17a4c0d8855cc
.dword 0x7fdfadcbe495c283
.dword 0x7fdd001f2b1fb2eb
.dword 0xbff17a4c0d8855cc
.dword 0x7fdfadcbe495c283
.dword 0x7fdd001f2b1fb2eb
.dword 0xbff17a4c0d8855cc
.dword 0x7fdfadcbe495c283
.dword 0x7fe48a2fac1f0550
.dword 0xbfe6e3ce0c418e1e
.dword 0x7fdd627293e6330d
.dword 0x7fe48a2fac1f0550
.dword 0xbfe6e3ce0c418e1e
.dword 0x7fdd627293e6330d
.dword 0x7fe48a2fac1f0550
.dword 0xbfe6e3ce0c418e1e
.dword 0x7fdd627293e6330d
.dword 0x7fe48a2fac1f0550
.dword 0xbfe6e3ce0c418e1e
.dword 0x7fdd627293e6330d
.dword 0x7fe48a2fac1f0550
.dword 0xbfe6e3ce0c418e1e
.dword 0x7fdd627293e6330d
.dword 0x7feff8dc6a068355
.dword 0xbfcad386c0f8fa8c
.dword 0x7fcacd8aa6694f1f
.dword 0x7feff8dc6a068355
.dword 0xbfcad386c0f8fa8c
.dword 0x7fcacd8aa6694f1f
.dword 0x7feff8dc6a068355
.dword 0xbfcad386c0f8fa8c
.dword 0x7fcacd8aa6694f1f
.dword 0x7feff8dc6a068355
.dword 0xbfcad386c0f8fa8c
.dword 0x7fcacd8aa6694f1f
.dword 0x7feff8dc6a068355
.dword 0xbfcad386c0f8fa8c
.dword 0x7fcacd8aa6694f1f
.dword 0x7fb5ceb3a4610497
.dword 0xc0073ce7e402e9c5
.dword 0x7fcfac256cfaefff
.dword 0x7fb5ceb3a4610497
.dword 0xc0073ce7e402e9c5
.dword 0x7fcfac256cfaefff
.dword 0x7fb5ceb3a4610497
.dword 0xc0073ce7e402e9c5
.dword 0x7fcfac256cfaefff
.dword 0x7fb5ceb3a4610497
.dword 0xc0073ce7e402e9c5
.dword 0x7fcfac256cfaefff
.dword 0x7fb5ceb3a4610497
.dword 0xc0073ce7e402e9c5
.dword 0x7fcfac256cfaefff
.dword 0x7fc02b9c63170177
.dword 0xc0165108518b1961
.dword 0x7fe68ddc382cd441
.dword 0x7fc02b9c63170177
.dword 0xc0165108518b1961
.dword 0x7fe68ddc382cd441
.dword 0x7fc02b9c63170177
.dword 0xc0165108518b1961
.dword 0x7fe68ddc382cd441
.dword 0x7fc02b9c63170177
.dword 0xc0165108518b1961
.dword 0x7fe68ddc382cd441
.dword 0x7fc02b9c63170177
.dword 0xc0165108518b1961
.dword 0x7fe68ddc382cd441
.dword 0x7fcd04b295ed34fb
.dword 0xc010fa8eca9ef80d
.dword 0x7feecb1ef58060d8
.dword 0x7fcd04b295ed34fb
.dword 0xc010fa8eca9ef80d
.dword 0x7feecb1ef58060d8
.dword 0x7fcd04b295ed34fb
.dword 0xc010fa8eca9ef80d
.dword 0x7feecb1ef58060d8
.dword 0x7fcd04b295ed34fb
.dword 0xc010fa8eca9ef80d
.dword 0x7feecb1ef58060d8
.dword 0x7fcd04b295ed34fb
.dword 0xc010fa8eca9ef80d
.dword 0x7feecb1ef58060d8
.dword 0x7fc5c7b4891b239f
.dword 0xc0047af1b2ab65ea
.dword 0x7fdbe0fd6f3db629
.dword 0x7fc5c7b4891b239f
.dword 0xc0047af1b2ab65ea
.dword 0x7fdbe0fd6f3db629
.dword 0x7fe875216d859565
.dword 0xbfdc9f644cd82c7b
.dword 0x7fd5e04fe6b0f0bd
.dword 0x7fe875216d859565
.dword 0xbfdc9f644cd82c7b
.dword 0x7fd5e04fe6b0f0bd
.dword 0x7fe875216d859565
.dword 0xbfdc9f644cd82c7b
.dword 0x7fd5e04fe6b0f0bd
.dword 0x7fe875216d859565
.dword 0xbfdc9f644cd82c7b
.dword 0x7fd5e04fe6b0f0bd
.dword 0x7fe875216d859565
.dword 0xbfdc9f644cd82c7b
.dword 0x7fd5e04fe6b0f0bd
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 182*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
