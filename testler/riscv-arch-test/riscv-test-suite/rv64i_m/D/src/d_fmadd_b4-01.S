
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:52:58 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmadd1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V FD extension for the fmadd_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmadd_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f3, rs2==f5, rs3==f5, rd==f15, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bf9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x912c42162d7e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and rm_val == 0  
// opcode: fmadd.d ; op1:f3; op2:f5; op3:f5; dest:f15; op1val:0x7fe1667d2c686bf9; op2val:0x3fe912c42162d7e8; op3val:0x3fe912c42162d7e8; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f15, f3, f5, f5, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rs3 == rd, rs1==f21, rs2==f21, rs3==f21, rd==f21, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 4  
// opcode: fmadd.d ; op1:f21; op2:f21; op3:f21; dest:f21; op1val:0x7fc7285ea9faba7f; op2val:0x7fc7285ea9faba7f; op3val:0x7fc7285ea9faba7f; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f21, f21, f21, f21, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f31, rs2==f30, rs3==f3, rd==f20, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 3  
// opcode: fmadd.d ; op1:f31; op2:f30; op3:f3; dest:f20; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d; op3val:0x7fee90d56fd14cc8; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f20, f31, f30, f3, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f22, rs2==f28, rs3==f22, rd==f14, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 2  
// opcode: fmadd.d ; op1:f22; op2:f28; op3:f22; dest:f14; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d; op3val:0x7fc7285ea9faba7f; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f14, f22, f28, f22, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f18, rs2==f18, rs3==f19, rd==f28, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 1  
// opcode: fmadd.d ; op1:f18; op2:f18; op3:f19; dest:f28; op1val:0x7fc7285ea9faba7f; op2val:0x7fc7285ea9faba7f; op3val:0x7fee90d56fd14cc8; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f28, f18, f18, f19, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f12, rs2==f8, rs3==f8, rd==f8, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 0  
// opcode: fmadd.d ; op1:f12; op2:f8; op3:f8; dest:f8; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d; op3val:0xc032e8909705103d; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f8, f12, f8, f8, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f9, rs2==f9, rs3==f9, rd==f22, fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xff8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 4  
// opcode: fmadd.d ; op1:f9; op2:f9; op3:f9; dest:f22; op1val:0x7f8297b073ec28bf; op2val:0x7f8297b073ec28bf; op3val:0x7f8297b073ec28bf; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f22, f9, f9, f9, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f13, rs2==f23, rs3==f12, rd==f13, fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xff8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 3  
// opcode: fmadd.d ; op1:f13; op2:f23; op3:f12; dest:f13; op1val:0x7f8297b073ec28bf; op2val:0x407ff8a642c3925c; op3val:0x7fa7ec9ded4be93f; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f13, f23, f12, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f26, rs2==f19, rs3==f30, rd==f30, fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xff8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 2  
// opcode: fmadd.d ; op1:f26; op2:f19; op3:f30; dest:f30; op1val:0x7f8297b073ec28bf; op2val:0x407ff8a642c3925c; op3val:0x7fa7ec9ded4be93f; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f30, f26, f19, f30, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rd == rs3 != rs2, rs1==f7, rs2==f2, rs3==f7, rd==f7, fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xff8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 1  
// opcode: fmadd.d ; op1:f7; op2:f2; op3:f7; dest:f7; op1val:0x7f8297b073ec28bf; op2val:0x407ff8a642c3925c; op3val:0x7f8297b073ec28bf; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f7, f7, f2, f7, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f15, rs2==f17, rs3==f26, rd==f17, fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xff8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 0  
// opcode: fmadd.d ; op1:f15; op2:f17; op3:f26; dest:f17; op1val:0x7f8297b073ec28bf; op2val:0x407ff8a642c3925c; op3val:0x7fa7ec9ded4be93f; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f17, f15, f17, f26, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs1 == rs2 == rd != rs3, rs1==f6, rs2==f6, rs3==f23, rd==f6, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2af7840cd0fd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and rm_val == 4  
// opcode: fmadd.d ; op1:f6; op2:f6; op3:f23; dest:f6; op1val:0x7fd76f910302cbdd; op2val:0x7fd76f910302cbdd; op3val:0x7fe28339eb5d6c77; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f6, f6, f6, f23, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f1, rs2==f15, rs3==f28, rd==f24, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2af7840cd0fd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and rm_val == 3  
// opcode: fmadd.d ; op1:f1; op2:f15; op3:f28; dest:f24; op1val:0x7fd76f910302cbdd; op2val:0xc012af7840cd0fd6; op3val:0x7fe28339eb5d6c77; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f24, f1, f15, f28, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f27, rs2==f31, rs3==f1, rd==f18, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2af7840cd0fd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and rm_val == 2  
// opcode: fmadd.d ; op1:f27; op2:f31; op3:f1; dest:f18; op1val:0x7fd76f910302cbdd; op2val:0xc012af7840cd0fd6; op3val:0x7fe28339eb5d6c77; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f18, f27, f31, f1, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f16, rs2==f1, rs3==f31, rd==f9, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2af7840cd0fd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and rm_val == 1  
// opcode: fmadd.d ; op1:f16; op2:f1; op3:f31; dest:f9; op1val:0x7fd76f910302cbdd; op2val:0xc012af7840cd0fd6; op3val:0x7fe28339eb5d6c77; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f9, f16, f1, f31, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f17, rs2==f7, rs3==f0, rd==f23, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2af7840cd0fd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and rm_val == 0  
// opcode: fmadd.d ; op1:f17; op2:f7; op3:f0; dest:f23; op1val:0x7fd76f910302cbdd; op2val:0xc012af7840cd0fd6; op3val:0x7fe28339eb5d6c77; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f23, f17, f7, f0, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f23, rs2==f13, rs3==f16, rd==f5, fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2804bc647cadf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x90d9b84a2ad4d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526f5ace10b and rm_val == 4  
// opcode: fmadd.d ; op1:f23; op2:f13; op3:f16; dest:f5; op1val:0x7f92804bc647cadf; op2val:0x40190d9b84a2ad4d; op3val:0x7fe93526f5ace10b; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f5, f23, f13, f16, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f10, rs2==f20, rs3==f27, rd==f25, fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2804bc647cadf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x90d9b84a2ad4d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526f5ace10b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f20; op3:f27; dest:f25; op1val:0x7f92804bc647cadf; op2val:0x40190d9b84a2ad4d; op3val:0x7fe93526f5ace10b; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f25, f10, f20, f27, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f20, rs2==f16, rs3==f6, rd==f29, fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2804bc647cadf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x90d9b84a2ad4d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526f5ace10b and rm_val == 2  
// opcode: fmadd.d ; op1:f20; op2:f16; op3:f6; dest:f29; op1val:0x7f92804bc647cadf; op2val:0x40190d9b84a2ad4d; op3val:0x7fe93526f5ace10b; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f29, f20, f16, f6, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f5, rs2==f14, rs3==f24, rd==f3, fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2804bc647cadf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x90d9b84a2ad4d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526f5ace10b and rm_val == 1  
// opcode: fmadd.d ; op1:f5; op2:f14; op3:f24; dest:f3; op1val:0x7f92804bc647cadf; op2val:0x40190d9b84a2ad4d; op3val:0x7fe93526f5ace10b; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f3, f5, f14, f24, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f29, rs2==f26, rs3==f14, rd==f19, fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2804bc647cadf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x90d9b84a2ad4d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526f5ace10b and rm_val == 0  
// opcode: fmadd.d ; op1:f29; op2:f26; op3:f14; dest:f19; op1val:0x7f92804bc647cadf; op2val:0x40190d9b84a2ad4d; op3val:0x7fe93526f5ace10b; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f19, f29, f26, f14, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f4, rs2==f11, rs3==f20, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfe0ac40de451e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dff43 and rm_val == 4  
// opcode: fmadd.d ; op1:f4; op2:f11; op3:f20; dest:f1; op1val:0x7fe7fe52216e3a3d; op2val:0xbfffe0ac40de451e; op3val:0x7feb0943a59dff43; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f1, f4, f11, f20, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f11, rs2==f12, rs3==f18, rd==f2, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfe0ac40de451e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dff43 and rm_val == 3  
// opcode: fmadd.d ; op1:f11; op2:f12; op3:f18; dest:f2; op1val:0x7fe7fe52216e3a3d; op2val:0xbfffe0ac40de451e; op3val:0x7feb0943a59dff43; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f2, f11, f12, f18, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f30, rs2==f29, rs3==f4, rd==f26, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfe0ac40de451e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dff43 and rm_val == 2  
// opcode: fmadd.d ; op1:f30; op2:f29; op3:f4; dest:f26; op1val:0x7fe7fe52216e3a3d; op2val:0xbfffe0ac40de451e; op3val:0x7feb0943a59dff43; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f26, f30, f29, f4, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f28, rs2==f10, rs3==f17, rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfe0ac40de451e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dff43 and rm_val == 1  
// opcode: fmadd.d ; op1:f28; op2:f10; op3:f17; dest:f31; op1val:0x7fe7fe52216e3a3d; op2val:0xbfffe0ac40de451e; op3val:0x7feb0943a59dff43; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f31, f28, f10, f17, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f14, rs2==f24, rs3==f15, rd==f16, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfe0ac40de451e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dff43 and rm_val == 0  
// opcode: fmadd.d ; op1:f14; op2:f24; op3:f15; dest:f16; op1val:0x7fe7fe52216e3a3d; op2val:0xbfffe0ac40de451e; op3val:0x7feb0943a59dff43; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f16, f14, f24, f15, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f2, rs2==f27, rs3==f25, rd==f12, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe353964a8812d and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x76a11f9800e5f and rm_val == 4  
// opcode: fmadd.d ; op1:f2; op2:f27; op3:f25; dest:f12; op1val:0x7fef3403ffc18c4e; op2val:0x3fee353964a8812d; op3val:0x7f976a11f9800e5f; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f12, f2, f27, f25, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f8, rs2==f4, rs3==f13, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe353964a8812d and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x76a11f9800e5f and rm_val == 3  
// opcode: fmadd.d ; op1:f8; op2:f4; op3:f13; dest:f0; op1val:0x7fef3403ffc18c4e; op2val:0x3fee353964a8812d; op3val:0x7f976a11f9800e5f; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f0, f8, f4, f13, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f24, rs2==f25, rs3==f11, rd==f27, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe353964a8812d and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x76a11f9800e5f and rm_val == 2  
// opcode: fmadd.d ; op1:f24; op2:f25; op3:f11; dest:f27; op1val:0x7fef3403ffc18c4e; op2val:0x3fee353964a8812d; op3val:0x7f976a11f9800e5f; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f27, f24, f25, f11, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f25, rs2==f22, rs3==f2, rd==f10, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe353964a8812d and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x76a11f9800e5f and rm_val == 1  
// opcode: fmadd.d ; op1:f25; op2:f22; op3:f2; dest:f10; op1val:0x7fef3403ffc18c4e; op2val:0x3fee353964a8812d; op3val:0x7f976a11f9800e5f; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f10, f25, f22, f2, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f0, rs2==f3, rs3==f29, rd==f11, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe353964a8812d and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x76a11f9800e5f and rm_val == 0  
// opcode: fmadd.d ; op1:f0; op2:f3; op3:f29; dest:f11; op1val:0x7fef3403ffc18c4e; op2val:0x3fee353964a8812d; op3val:0x7f976a11f9800e5f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f11, f0, f3, f29, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f19, rs2==f0, rs3==f10, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7bba9ce426aa5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2f39d065486f and rm_val == 4  
// opcode: fmadd.d ; op1:f19; op2:f0; op3:f10; dest:f4; op1val:0x7fe68ca648b458d1; op2val:0xbfe7bba9ce426aa5; op3val:0x7fad2f39d065486f; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f4, f19, f0, f10, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7bba9ce426aa5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2f39d065486f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68ca648b458d1; op2val:0xbfe7bba9ce426aa5; op3val:0x7fad2f39d065486f; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7bba9ce426aa5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2f39d065486f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68ca648b458d1; op2val:0xbfe7bba9ce426aa5; op3val:0x7fad2f39d065486f; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7bba9ce426aa5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2f39d065486f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68ca648b458d1; op2val:0xbfe7bba9ce426aa5; op3val:0x7fad2f39d065486f; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7bba9ce426aa5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2f39d065486f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68ca648b458d1; op2val:0xbfe7bba9ce426aa5; op3val:0x7fad2f39d065486f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35f0bec2723e1 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd435f4497a6a63; op2val:0xbfe35f0bec2723e1; op3val:0x7fdecc4833c7c22d; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35f0bec2723e1 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd435f4497a6a63; op2val:0xbfe35f0bec2723e1; op3val:0x7fdecc4833c7c22d; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35f0bec2723e1 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd435f4497a6a63; op2val:0xbfe35f0bec2723e1; op3val:0x7fdecc4833c7c22d; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35f0bec2723e1 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd435f4497a6a63; op2val:0xbfe35f0bec2723e1; op3val:0x7fdecc4833c7c22d; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35f0bec2723e1 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd435f4497a6a63; op2val:0xbfe35f0bec2723e1; op3val:0x7fdecc4833c7c22d; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6668ceb51c07e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea314cd13968e7; op2val:0xbfe6668ceb51c07e; op3val:0x7fdec4877592448b; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6668ceb51c07e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea314cd13968e7; op2val:0xbfe6668ceb51c07e; op3val:0x7fdec4877592448b; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6668ceb51c07e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea314cd13968e7; op2val:0xbfe6668ceb51c07e; op3val:0x7fdec4877592448b; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6668ceb51c07e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea314cd13968e7; op2val:0xbfe6668ceb51c07e; op3val:0x7fdec4877592448b; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6668ceb51c07e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea314cd13968e7; op2val:0xbfe6668ceb51c07e; op3val:0x7fdec4877592448b; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x658d473310be9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a01a288736c5; op2val:0xbfe658d473310be9; op3val:0x7fd3d659cad7c271; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x658d473310be9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a01a288736c5; op2val:0xbfe658d473310be9; op3val:0x7fd3d659cad7c271; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x658d473310be9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a01a288736c5; op2val:0xbfe658d473310be9; op3val:0x7fd3d659cad7c271; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x658d473310be9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a01a288736c5; op2val:0xbfe658d473310be9; op3val:0x7fd3d659cad7c271; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x658d473310be9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a01a288736c5; op2val:0xbfe658d473310be9; op3val:0x7fd3d659cad7c271; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f6bb6ea62484dff; op2val:0xc06c87d5180d6de7; op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f6bb6ea62484dff; op2val:0xc06c87d5180d6de7; op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f6bb6ea62484dff; op2val:0xc06c87d5180d6de7; op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f6bb6ea62484dff; op2val:0xc06c87d5180d6de7; op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f6bb6ea62484dff; op2val:0xc06c87d5180d6de7; op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbcc84701e68b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34977ae8a092b; op2val:0xbffbcc84701e68b6; op3val:0x7fe34cad56583569; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbcc84701e68b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34977ae8a092b; op2val:0xbffbcc84701e68b6; op3val:0x7fe34cad56583569; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbcc84701e68b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34977ae8a092b; op2val:0xbffbcc84701e68b6; op3val:0x7fe34cad56583569; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbcc84701e68b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34977ae8a092b; op2val:0xbffbcc84701e68b6; op3val:0x7fe34cad56583569; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbcc84701e68b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34977ae8a092b; op2val:0xbffbcc84701e68b6; op3val:0x7fe34cad56583569; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe9917808601d0 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acff0a9e8d47 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2a65c343892db; op2val:0xbfee9917808601d0; op3val:0x7fb0acff0a9e8d47; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe9917808601d0 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acff0a9e8d47 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2a65c343892db; op2val:0xbfee9917808601d0; op3val:0x7fb0acff0a9e8d47; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe9917808601d0 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acff0a9e8d47 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2a65c343892db; op2val:0xbfee9917808601d0; op3val:0x7fb0acff0a9e8d47; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe9917808601d0 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acff0a9e8d47 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2a65c343892db; op2val:0xbfee9917808601d0; op3val:0x7fb0acff0a9e8d47; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe9917808601d0 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acff0a9e8d47 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2a65c343892db; op2val:0xbfee9917808601d0; op3val:0x7fb0acff0a9e8d47; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25e6811887cb1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71dbc6351ba9b; op2val:0xbfd25e6811887cb1; op3val:0x7fc53e0c4ef901b7; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25e6811887cb1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71dbc6351ba9b; op2val:0xbfd25e6811887cb1; op3val:0x7fc53e0c4ef901b7; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25e6811887cb1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71dbc6351ba9b; op2val:0xbfd25e6811887cb1; op3val:0x7fc53e0c4ef901b7; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25e6811887cb1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71dbc6351ba9b; op2val:0xbfd25e6811887cb1; op3val:0x7fc53e0c4ef901b7; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25e6811887cb1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71dbc6351ba9b; op2val:0xbfd25e6811887cb1; op3val:0x7fc53e0c4ef901b7; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91b45c5ab1967 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31f5b782c2cff and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec998825886bbc; op2val:0x3fe91b45c5ab1967; op3val:0x7fd31f5b782c2cff; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91b45c5ab1967 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31f5b782c2cff and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec998825886bbc; op2val:0x3fe91b45c5ab1967; op3val:0x7fd31f5b782c2cff; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91b45c5ab1967 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31f5b782c2cff and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec998825886bbc; op2val:0x3fe91b45c5ab1967; op3val:0x7fd31f5b782c2cff; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91b45c5ab1967 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31f5b782c2cff and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec998825886bbc; op2val:0x3fe91b45c5ab1967; op3val:0x7fd31f5b782c2cff; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91b45c5ab1967 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31f5b782c2cff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec998825886bbc; op2val:0x3fe91b45c5ab1967; op3val:0x7fd31f5b782c2cff; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x8c98532405521 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe619bd20c99aa7; op2val:0x3fa8c98532405521; op3val:0x7feeee1847dc4239; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x8c98532405521 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe619bd20c99aa7; op2val:0x3fa8c98532405521; op3val:0x7feeee1847dc4239; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x8c98532405521 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe619bd20c99aa7; op2val:0x3fa8c98532405521; op3val:0x7feeee1847dc4239; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x8c98532405521 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe619bd20c99aa7; op2val:0x3fa8c98532405521; op3val:0x7feeee1847dc4239; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x8c98532405521 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe619bd20c99aa7; op2val:0x3fa8c98532405521; op3val:0x7feeee1847dc4239; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x272646c589bef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca363712e81d63; op2val:0x3fd272646c589bef; op3val:0x7fee1c79b3dfcd57; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x272646c589bef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca363712e81d63; op2val:0x3fd272646c589bef; op3val:0x7fee1c79b3dfcd57; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x272646c589bef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca363712e81d63; op2val:0x3fd272646c589bef; op3val:0x7fee1c79b3dfcd57; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x272646c589bef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca363712e81d63; op2val:0x3fd272646c589bef; op3val:0x7fee1c79b3dfcd57; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x272646c589bef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca363712e81d63; op2val:0x3fd272646c589bef; op3val:0x7fee1c79b3dfcd57; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31e7826018085 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bf69 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1415193812551; op2val:0x3fe31e7826018085; op3val:0x7fe5b0c98a80bf69; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31e7826018085 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bf69 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1415193812551; op2val:0x3fe31e7826018085; op3val:0x7fe5b0c98a80bf69; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31e7826018085 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bf69 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1415193812551; op2val:0x3fe31e7826018085; op3val:0x7fe5b0c98a80bf69; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31e7826018085 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bf69 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1415193812551; op2val:0x3fe31e7826018085; op3val:0x7fe5b0c98a80bf69; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31e7826018085 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bf69 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1415193812551; op2val:0x3fe31e7826018085; op3val:0x7fe5b0c98a80bf69; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283f9d2825ba3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x10b2cf635997b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd283f9d2825ba3; op2val:0x3fc10b2cf635997b; op3val:0x7feec46d7ccba9a3; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283f9d2825ba3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x10b2cf635997b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd283f9d2825ba3; op2val:0x3fc10b2cf635997b; op3val:0x7feec46d7ccba9a3; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283f9d2825ba3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x10b2cf635997b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd283f9d2825ba3; op2val:0x3fc10b2cf635997b; op3val:0x7feec46d7ccba9a3; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283f9d2825ba3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x10b2cf635997b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd283f9d2825ba3; op2val:0x3fc10b2cf635997b; op3val:0x7feec46d7ccba9a3; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283f9d2825ba3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x10b2cf635997b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd283f9d2825ba3; op2val:0x3fc10b2cf635997b; op3val:0x7feec46d7ccba9a3; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6ffe64a9d644 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x09fc0f75fdd31 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef6ffe64a9d644; op2val:0x3fc09fc0f75fdd31; op3val:0x7febeac3b0aa7ae7; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6ffe64a9d644 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x09fc0f75fdd31 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef6ffe64a9d644; op2val:0x3fc09fc0f75fdd31; op3val:0x7febeac3b0aa7ae7; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6ffe64a9d644 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x09fc0f75fdd31 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef6ffe64a9d644; op2val:0x3fc09fc0f75fdd31; op3val:0x7febeac3b0aa7ae7; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6ffe64a9d644 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x09fc0f75fdd31 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef6ffe64a9d644; op2val:0x3fc09fc0f75fdd31; op3val:0x7febeac3b0aa7ae7; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6ffe64a9d644 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x09fc0f75fdd31 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef6ffe64a9d644; op2val:0x3fc09fc0f75fdd31; op3val:0x7febeac3b0aa7ae7; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xdf6c8944627b9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30f5cae37 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcacf777c60a3c7; op2val:0x400df6c8944627b9; op3val:0x7fcb94e30f5cae37; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xdf6c8944627b9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30f5cae37 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcacf777c60a3c7; op2val:0x400df6c8944627b9; op3val:0x7fcb94e30f5cae37; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xdf6c8944627b9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30f5cae37 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcacf777c60a3c7; op2val:0x400df6c8944627b9; op3val:0x7fcb94e30f5cae37; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xdf6c8944627b9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30f5cae37 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcacf777c60a3c7; op2val:0x400df6c8944627b9; op3val:0x7fcb94e30f5cae37; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xdf6c8944627b9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30f5cae37 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcacf777c60a3c7; op2val:0x400df6c8944627b9; op3val:0x7fcb94e30f5cae37; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f5d144fc758c3ff; op2val:0x40521d08b2b77735; op3val:0x7febe28c340570cd; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f5d144fc758c3ff; op2val:0x40521d08b2b77735; op3val:0x7febe28c340570cd; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f5d144fc758c3ff; op2val:0x40521d08b2b77735; op3val:0x7febe28c340570cd; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f5d144fc758c3ff; op2val:0x40521d08b2b77735; op3val:0x7febe28c340570cd; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f5d144fc758c3ff; op2val:0x40521d08b2b77735; op3val:0x7febe28c340570cd; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a139015a7821 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3c22bc9c78300; op2val:0x3ff6a139015a7821; op3val:0x7fc037ae321da893; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a139015a7821 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3c22bc9c78300; op2val:0x3ff6a139015a7821; op3val:0x7fc037ae321da893; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a139015a7821 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3c22bc9c78300; op2val:0x3ff6a139015a7821; op3val:0x7fc037ae321da893; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a139015a7821 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3c22bc9c78300; op2val:0x3ff6a139015a7821; op3val:0x7fc037ae321da893; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a139015a7821 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3c22bc9c78300; op2val:0x3ff6a139015a7821; op3val:0x7fc037ae321da893; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1494ae586f255 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9823a6849a878; op2val:0x3ff1494ae586f255; op3val:0x7fc1c32179e3068f; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1494ae586f255 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9823a6849a878; op2val:0x3ff1494ae586f255; op3val:0x7fc1c32179e3068f; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1494ae586f255 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9823a6849a878; op2val:0x3ff1494ae586f255; op3val:0x7fc1c32179e3068f; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1494ae586f255 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9823a6849a878; op2val:0x3ff1494ae586f255; op3val:0x7fc1c32179e3068f; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1494ae586f255 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9823a6849a878; op2val:0x3ff1494ae586f255; op3val:0x7fc1c32179e3068f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18f6cbc59783a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe880d2a98ec8a6; op2val:0x3ff18f6cbc59783a; op3val:0x7fc46de92c30d8b3; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18f6cbc59783a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe880d2a98ec8a6; op2val:0x3ff18f6cbc59783a; op3val:0x7fc46de92c30d8b3; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18f6cbc59783a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe880d2a98ec8a6; op2val:0x3ff18f6cbc59783a; op3val:0x7fc46de92c30d8b3; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18f6cbc59783a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe880d2a98ec8a6; op2val:0x3ff18f6cbc59783a; op3val:0x7fc46de92c30d8b3; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18f6cbc59783a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe880d2a98ec8a6; op2val:0x3ff18f6cbc59783a; op3val:0x7fc46de92c30d8b3; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3280e91a916a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1e30a0174e413; op2val:0x3fd3280e91a916a6; op3val:0x7fed52b387784731; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3280e91a916a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1e30a0174e413; op2val:0x3fd3280e91a916a6; op3val:0x7fed52b387784731; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3280e91a916a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1e30a0174e413; op2val:0x3fd3280e91a916a6; op3val:0x7fed52b387784731; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3280e91a916a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1e30a0174e413; op2val:0x3fd3280e91a916a6; op3val:0x7fed52b387784731; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3280e91a916a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1e30a0174e413; op2val:0x3fd3280e91a916a6; op3val:0x7fed52b387784731; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xadb9cbb2edaff and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddd0bd50d5455 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8adb9cbb2edaff; op2val:0x404ddd0bd50d5455; op3val:0x7fcbbdcd5687c963; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xadb9cbb2edaff and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddd0bd50d5455 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8adb9cbb2edaff; op2val:0x404ddd0bd50d5455; op3val:0x7fcbbdcd5687c963; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xadb9cbb2edaff and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddd0bd50d5455 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8adb9cbb2edaff; op2val:0x404ddd0bd50d5455; op3val:0x7fcbbdcd5687c963; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xadb9cbb2edaff and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddd0bd50d5455 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8adb9cbb2edaff; op2val:0x404ddd0bd50d5455; op3val:0x7fcbbdcd5687c963; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xadb9cbb2edaff and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddd0bd50d5455 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8adb9cbb2edaff; op2val:0x404ddd0bd50d5455; op3val:0x7fcbbdcd5687c963; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bf9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x912c42162d7e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1667d2c686bf9; op2val:0x3fe912c42162d7e8; op3val:0x7fe25db9e8ff508c; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bf9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x912c42162d7e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1667d2c686bf9; op2val:0x3fe912c42162d7e8; op3val:0x7fe25db9e8ff508c; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bf9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x912c42162d7e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1667d2c686bf9; op2val:0x3fe912c42162d7e8; op3val:0x7fe25db9e8ff508c; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bf9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x912c42162d7e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1667d2c686bf9; op2val:0x3fe912c42162d7e8; op3val:0x7fe25db9e8ff508c; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bf9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x912c42162d7e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1667d2c686bf9; op2val:0x3fe912c42162d7e8; op3val:0x7fe25db9e8ff508c; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d; op3val:0x7fee90d56fd14cc8; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d; op3val:0x7fee90d56fd14cc8; valaddr_reg:x16; val_offset:1368; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d; op3val:0x7fee90d56fd14cc8; valaddr_reg:x16; val_offset:1392; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d; op3val:0x7fee90d56fd14cc8; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xff8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8297b073ec28bf; op2val:0x407ff8a642c3925c; op3val:0x7fa7ec9ded4be93f; valaddr_reg:x16; val_offset:1440; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xff8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8297b073ec28bf; op2val:0x407ff8a642c3925c; op3val:0x7fa7ec9ded4be93f; valaddr_reg:x16; val_offset:1464; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2af7840cd0fd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd76f910302cbdd; op2val:0xc012af7840cd0fd6; op3val:0x7fe28339eb5d6c77; valaddr_reg:x16; val_offset:1488; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1488, x17, x15, 320, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fe1667d2c686bf9
.dword 0x3fe912c42162d7e8
.dword 0x3fe912c42162d7e8
.dword 0x7fc7285ea9faba7f
.dword 0x7fc7285ea9faba7f
.dword 0x7fc7285ea9faba7f
.dword 0x7fc7285ea9faba7f
.dword 0xc032e8909705103d
.dword 0x7fee90d56fd14cc8
.dword 0x7fc7285ea9faba7f
.dword 0xc032e8909705103d
.dword 0x7fc7285ea9faba7f
.dword 0x7fc7285ea9faba7f
.dword 0x7fc7285ea9faba7f
.dword 0x7fee90d56fd14cc8
.dword 0x7fc7285ea9faba7f
.dword 0xc032e8909705103d
.dword 0xc032e8909705103d
.dword 0x7f8297b073ec28bf
.dword 0x7f8297b073ec28bf
.dword 0x7f8297b073ec28bf
.dword 0x7f8297b073ec28bf
.dword 0x407ff8a642c3925c
.dword 0x7fa7ec9ded4be93f
.dword 0x7f8297b073ec28bf
.dword 0x407ff8a642c3925c
.dword 0x7fa7ec9ded4be93f
.dword 0x7f8297b073ec28bf
.dword 0x407ff8a642c3925c
.dword 0x7f8297b073ec28bf
.dword 0x7f8297b073ec28bf
.dword 0x407ff8a642c3925c
.dword 0x7fa7ec9ded4be93f
.dword 0x7fd76f910302cbdd
.dword 0x7fd76f910302cbdd
.dword 0x7fe28339eb5d6c77
.dword 0x7fd76f910302cbdd
.dword 0xc012af7840cd0fd6
.dword 0x7fe28339eb5d6c77
.dword 0x7fd76f910302cbdd
.dword 0xc012af7840cd0fd6
.dword 0x7fe28339eb5d6c77
.dword 0x7fd76f910302cbdd
.dword 0xc012af7840cd0fd6
.dword 0x7fe28339eb5d6c77
.dword 0x7fd76f910302cbdd
.dword 0xc012af7840cd0fd6
.dword 0x7fe28339eb5d6c77
.dword 0x7f92804bc647cadf
.dword 0x40190d9b84a2ad4d
.dword 0x7fe93526f5ace10b
.dword 0x7f92804bc647cadf
.dword 0x40190d9b84a2ad4d
.dword 0x7fe93526f5ace10b
.dword 0x7f92804bc647cadf
.dword 0x40190d9b84a2ad4d
.dword 0x7fe93526f5ace10b
.dword 0x7f92804bc647cadf
.dword 0x40190d9b84a2ad4d
.dword 0x7fe93526f5ace10b
.dword 0x7f92804bc647cadf
.dword 0x40190d9b84a2ad4d
.dword 0x7fe93526f5ace10b
.dword 0x7fe7fe52216e3a3d
.dword 0xbfffe0ac40de451e
.dword 0x7feb0943a59dff43
.dword 0x7fe7fe52216e3a3d
.dword 0xbfffe0ac40de451e
.dword 0x7feb0943a59dff43
.dword 0x7fe7fe52216e3a3d
.dword 0xbfffe0ac40de451e
.dword 0x7feb0943a59dff43
.dword 0x7fe7fe52216e3a3d
.dword 0xbfffe0ac40de451e
.dword 0x7feb0943a59dff43
.dword 0x7fe7fe52216e3a3d
.dword 0xbfffe0ac40de451e
.dword 0x7feb0943a59dff43
.dword 0x7fef3403ffc18c4e
.dword 0x3fee353964a8812d
.dword 0x7f976a11f9800e5f
.dword 0x7fef3403ffc18c4e
.dword 0x3fee353964a8812d
.dword 0x7f976a11f9800e5f
.dword 0x7fef3403ffc18c4e
.dword 0x3fee353964a8812d
.dword 0x7f976a11f9800e5f
.dword 0x7fef3403ffc18c4e
.dword 0x3fee353964a8812d
.dword 0x7f976a11f9800e5f
.dword 0x7fef3403ffc18c4e
.dword 0x3fee353964a8812d
.dword 0x7f976a11f9800e5f
.dword 0x7fe68ca648b458d1
.dword 0xbfe7bba9ce426aa5
.dword 0x7fad2f39d065486f
.dword 0x7fe68ca648b458d1
.dword 0xbfe7bba9ce426aa5
.dword 0x7fad2f39d065486f
.dword 0x7fe68ca648b458d1
.dword 0xbfe7bba9ce426aa5
.dword 0x7fad2f39d065486f
.dword 0x7fe68ca648b458d1
.dword 0xbfe7bba9ce426aa5
.dword 0x7fad2f39d065486f
.dword 0x7fe68ca648b458d1
.dword 0xbfe7bba9ce426aa5
.dword 0x7fad2f39d065486f
.dword 0x7fd435f4497a6a63
.dword 0xbfe35f0bec2723e1
.dword 0x7fdecc4833c7c22d
.dword 0x7fd435f4497a6a63
.dword 0xbfe35f0bec2723e1
.dword 0x7fdecc4833c7c22d
.dword 0x7fd435f4497a6a63
.dword 0xbfe35f0bec2723e1
.dword 0x7fdecc4833c7c22d
.dword 0x7fd435f4497a6a63
.dword 0xbfe35f0bec2723e1
.dword 0x7fdecc4833c7c22d
.dword 0x7fd435f4497a6a63
.dword 0xbfe35f0bec2723e1
.dword 0x7fdecc4833c7c22d
.dword 0x7fea314cd13968e7
.dword 0xbfe6668ceb51c07e
.dword 0x7fdec4877592448b
.dword 0x7fea314cd13968e7
.dword 0xbfe6668ceb51c07e
.dword 0x7fdec4877592448b
.dword 0x7fea314cd13968e7
.dword 0xbfe6668ceb51c07e
.dword 0x7fdec4877592448b
.dword 0x7fea314cd13968e7
.dword 0xbfe6668ceb51c07e
.dword 0x7fdec4877592448b
.dword 0x7fea314cd13968e7
.dword 0xbfe6668ceb51c07e
.dword 0x7fdec4877592448b
.dword 0x7fd5a01a288736c5
.dword 0xbfe658d473310be9
.dword 0x7fd3d659cad7c271
.dword 0x7fd5a01a288736c5
.dword 0xbfe658d473310be9
.dword 0x7fd3d659cad7c271
.dword 0x7fd5a01a288736c5
.dword 0xbfe658d473310be9
.dword 0x7fd3d659cad7c271
.dword 0x7fd5a01a288736c5
.dword 0xbfe658d473310be9
.dword 0x7fd3d659cad7c271
.dword 0x7fd5a01a288736c5
.dword 0xbfe658d473310be9
.dword 0x7fd3d659cad7c271
.dword 0x7f6bb6ea62484dff
.dword 0xc06c87d5180d6de7
.dword 0x7fe5b1a32ad4a90d
.dword 0x7f6bb6ea62484dff
.dword 0xc06c87d5180d6de7
.dword 0x7fe5b1a32ad4a90d
.dword 0x7f6bb6ea62484dff
.dword 0xc06c87d5180d6de7
.dword 0x7fe5b1a32ad4a90d
.dword 0x7f6bb6ea62484dff
.dword 0xc06c87d5180d6de7
.dword 0x7fe5b1a32ad4a90d
.dword 0x7f6bb6ea62484dff
.dword 0xc06c87d5180d6de7
.dword 0x7fe5b1a32ad4a90d
.dword 0x7fd34977ae8a092b
.dword 0xbffbcc84701e68b6
.dword 0x7fe34cad56583569
.dword 0x7fd34977ae8a092b
.dword 0xbffbcc84701e68b6
.dword 0x7fe34cad56583569
.dword 0x7fd34977ae8a092b
.dword 0xbffbcc84701e68b6
.dword 0x7fe34cad56583569
.dword 0x7fd34977ae8a092b
.dword 0xbffbcc84701e68b6
.dword 0x7fe34cad56583569
.dword 0x7fd34977ae8a092b
.dword 0xbffbcc84701e68b6
.dword 0x7fe34cad56583569
.dword 0x7fc2a65c343892db
.dword 0xbfee9917808601d0
.dword 0x7fb0acff0a9e8d47
.dword 0x7fc2a65c343892db
.dword 0xbfee9917808601d0
.dword 0x7fb0acff0a9e8d47
.dword 0x7fc2a65c343892db
.dword 0xbfee9917808601d0
.dword 0x7fb0acff0a9e8d47
.dword 0x7fc2a65c343892db
.dword 0xbfee9917808601d0
.dword 0x7fb0acff0a9e8d47
.dword 0x7fc2a65c343892db
.dword 0xbfee9917808601d0
.dword 0x7fb0acff0a9e8d47
.dword 0x7fd71dbc6351ba9b
.dword 0xbfd25e6811887cb1
.dword 0x7fc53e0c4ef901b7
.dword 0x7fd71dbc6351ba9b
.dword 0xbfd25e6811887cb1
.dword 0x7fc53e0c4ef901b7
.dword 0x7fd71dbc6351ba9b
.dword 0xbfd25e6811887cb1
.dword 0x7fc53e0c4ef901b7
.dword 0x7fd71dbc6351ba9b
.dword 0xbfd25e6811887cb1
.dword 0x7fc53e0c4ef901b7
.dword 0x7fd71dbc6351ba9b
.dword 0xbfd25e6811887cb1
.dword 0x7fc53e0c4ef901b7
.dword 0x7fec998825886bbc
.dword 0x3fe91b45c5ab1967
.dword 0x7fd31f5b782c2cff
.dword 0x7fec998825886bbc
.dword 0x3fe91b45c5ab1967
.dword 0x7fd31f5b782c2cff
.dword 0x7fec998825886bbc
.dword 0x3fe91b45c5ab1967
.dword 0x7fd31f5b782c2cff
.dword 0x7fec998825886bbc
.dword 0x3fe91b45c5ab1967
.dword 0x7fd31f5b782c2cff
.dword 0x7fec998825886bbc
.dword 0x3fe91b45c5ab1967
.dword 0x7fd31f5b782c2cff
.dword 0x7fe619bd20c99aa7
.dword 0x3fa8c98532405521
.dword 0x7feeee1847dc4239
.dword 0x7fe619bd20c99aa7
.dword 0x3fa8c98532405521
.dword 0x7feeee1847dc4239
.dword 0x7fe619bd20c99aa7
.dword 0x3fa8c98532405521
.dword 0x7feeee1847dc4239
.dword 0x7fe619bd20c99aa7
.dword 0x3fa8c98532405521
.dword 0x7feeee1847dc4239
.dword 0x7fe619bd20c99aa7
.dword 0x3fa8c98532405521
.dword 0x7feeee1847dc4239
.dword 0x7fca363712e81d63
.dword 0x3fd272646c589bef
.dword 0x7fee1c79b3dfcd57
.dword 0x7fca363712e81d63
.dword 0x3fd272646c589bef
.dword 0x7fee1c79b3dfcd57
.dword 0x7fca363712e81d63
.dword 0x3fd272646c589bef
.dword 0x7fee1c79b3dfcd57
.dword 0x7fca363712e81d63
.dword 0x3fd272646c589bef
.dword 0x7fee1c79b3dfcd57
.dword 0x7fca363712e81d63
.dword 0x3fd272646c589bef
.dword 0x7fee1c79b3dfcd57
.dword 0x7fe1415193812551
.dword 0x3fe31e7826018085
.dword 0x7fe5b0c98a80bf69
.dword 0x7fe1415193812551
.dword 0x3fe31e7826018085
.dword 0x7fe5b0c98a80bf69
.dword 0x7fe1415193812551
.dword 0x3fe31e7826018085
.dword 0x7fe5b0c98a80bf69
.dword 0x7fe1415193812551
.dword 0x3fe31e7826018085
.dword 0x7fe5b0c98a80bf69
.dword 0x7fe1415193812551
.dword 0x3fe31e7826018085
.dword 0x7fe5b0c98a80bf69
.dword 0x7fd283f9d2825ba3
.dword 0x3fc10b2cf635997b
.dword 0x7feec46d7ccba9a3
.dword 0x7fd283f9d2825ba3
.dword 0x3fc10b2cf635997b
.dword 0x7feec46d7ccba9a3
.dword 0x7fd283f9d2825ba3
.dword 0x3fc10b2cf635997b
.dword 0x7feec46d7ccba9a3
.dword 0x7fd283f9d2825ba3
.dword 0x3fc10b2cf635997b
.dword 0x7feec46d7ccba9a3
.dword 0x7fd283f9d2825ba3
.dword 0x3fc10b2cf635997b
.dword 0x7feec46d7ccba9a3
.dword 0x7fef6ffe64a9d644
.dword 0x3fc09fc0f75fdd31
.dword 0x7febeac3b0aa7ae7
.dword 0x7fef6ffe64a9d644
.dword 0x3fc09fc0f75fdd31
.dword 0x7febeac3b0aa7ae7
.dword 0x7fef6ffe64a9d644
.dword 0x3fc09fc0f75fdd31
.dword 0x7febeac3b0aa7ae7
.dword 0x7fef6ffe64a9d644
.dword 0x3fc09fc0f75fdd31
.dword 0x7febeac3b0aa7ae7
.dword 0x7fef6ffe64a9d644
.dword 0x3fc09fc0f75fdd31
.dword 0x7febeac3b0aa7ae7
.dword 0x7fcacf777c60a3c7
.dword 0x400df6c8944627b9
.dword 0x7fcb94e30f5cae37
.dword 0x7fcacf777c60a3c7
.dword 0x400df6c8944627b9
.dword 0x7fcb94e30f5cae37
.dword 0x7fcacf777c60a3c7
.dword 0x400df6c8944627b9
.dword 0x7fcb94e30f5cae37
.dword 0x7fcacf777c60a3c7
.dword 0x400df6c8944627b9
.dword 0x7fcb94e30f5cae37
.dword 0x7fcacf777c60a3c7
.dword 0x400df6c8944627b9
.dword 0x7fcb94e30f5cae37
.dword 0x7f5d144fc758c3ff
.dword 0x40521d08b2b77735
.dword 0x7febe28c340570cd
.dword 0x7f5d144fc758c3ff
.dword 0x40521d08b2b77735
.dword 0x7febe28c340570cd
.dword 0x7f5d144fc758c3ff
.dword 0x40521d08b2b77735
.dword 0x7febe28c340570cd
.dword 0x7f5d144fc758c3ff
.dword 0x40521d08b2b77735
.dword 0x7febe28c340570cd
.dword 0x7f5d144fc758c3ff
.dword 0x40521d08b2b77735
.dword 0x7febe28c340570cd
.dword 0x7fe3c22bc9c78300
.dword 0x3ff6a139015a7821
.dword 0x7fc037ae321da893
.dword 0x7fe3c22bc9c78300
.dword 0x3ff6a139015a7821
.dword 0x7fc037ae321da893
.dword 0x7fe3c22bc9c78300
.dword 0x3ff6a139015a7821
.dword 0x7fc037ae321da893
.dword 0x7fe3c22bc9c78300
.dword 0x3ff6a139015a7821
.dword 0x7fc037ae321da893
.dword 0x7fe3c22bc9c78300
.dword 0x3ff6a139015a7821
.dword 0x7fc037ae321da893
.dword 0x7fe9823a6849a878
.dword 0x3ff1494ae586f255
.dword 0x7fc1c32179e3068f
.dword 0x7fe9823a6849a878
.dword 0x3ff1494ae586f255
.dword 0x7fc1c32179e3068f
.dword 0x7fe9823a6849a878
.dword 0x3ff1494ae586f255
.dword 0x7fc1c32179e3068f
.dword 0x7fe9823a6849a878
.dword 0x3ff1494ae586f255
.dword 0x7fc1c32179e3068f
.dword 0x7fe9823a6849a878
.dword 0x3ff1494ae586f255
.dword 0x7fc1c32179e3068f
.dword 0x7fe880d2a98ec8a6
.dword 0x3ff18f6cbc59783a
.dword 0x7fc46de92c30d8b3
.dword 0x7fe880d2a98ec8a6
.dword 0x3ff18f6cbc59783a
.dword 0x7fc46de92c30d8b3
.dword 0x7fe880d2a98ec8a6
.dword 0x3ff18f6cbc59783a
.dword 0x7fc46de92c30d8b3
.dword 0x7fe880d2a98ec8a6
.dword 0x3ff18f6cbc59783a
.dword 0x7fc46de92c30d8b3
.dword 0x7fe880d2a98ec8a6
.dword 0x3ff18f6cbc59783a
.dword 0x7fc46de92c30d8b3
.dword 0x7fd1e30a0174e413
.dword 0x3fd3280e91a916a6
.dword 0x7fed52b387784731
.dword 0x7fd1e30a0174e413
.dword 0x3fd3280e91a916a6
.dword 0x7fed52b387784731
.dword 0x7fd1e30a0174e413
.dword 0x3fd3280e91a916a6
.dword 0x7fed52b387784731
.dword 0x7fd1e30a0174e413
.dword 0x3fd3280e91a916a6
.dword 0x7fed52b387784731
.dword 0x7fd1e30a0174e413
.dword 0x3fd3280e91a916a6
.dword 0x7fed52b387784731
.dword 0x7f8adb9cbb2edaff
.dword 0x404ddd0bd50d5455
.dword 0x7fcbbdcd5687c963
.dword 0x7f8adb9cbb2edaff
.dword 0x404ddd0bd50d5455
.dword 0x7fcbbdcd5687c963
.dword 0x7f8adb9cbb2edaff
.dword 0x404ddd0bd50d5455
.dword 0x7fcbbdcd5687c963
.dword 0x7f8adb9cbb2edaff
.dword 0x404ddd0bd50d5455
.dword 0x7fcbbdcd5687c963
.dword 0x7f8adb9cbb2edaff
.dword 0x404ddd0bd50d5455
.dword 0x7fcbbdcd5687c963
.dword 0x7fe1667d2c686bf9
.dword 0x3fe912c42162d7e8
.dword 0x7fe25db9e8ff508c
.dword 0x7fe1667d2c686bf9
.dword 0x3fe912c42162d7e8
.dword 0x7fe25db9e8ff508c
.dword 0x7fe1667d2c686bf9
.dword 0x3fe912c42162d7e8
.dword 0x7fe25db9e8ff508c
.dword 0x7fe1667d2c686bf9
.dword 0x3fe912c42162d7e8
.dword 0x7fe25db9e8ff508c
.dword 0x7fe1667d2c686bf9
.dword 0x3fe912c42162d7e8
.dword 0x7fe25db9e8ff508c
.dword 0x7fc7285ea9faba7f
.dword 0xc032e8909705103d
.dword 0x7fee90d56fd14cc8
.dword 0x7fc7285ea9faba7f
.dword 0xc032e8909705103d
.dword 0x7fee90d56fd14cc8
.dword 0x7fc7285ea9faba7f
.dword 0xc032e8909705103d
.dword 0x7fee90d56fd14cc8
.dword 0x7fc7285ea9faba7f
.dword 0xc032e8909705103d
.dword 0x7fee90d56fd14cc8
.dword 0x7f8297b073ec28bf
.dword 0x407ff8a642c3925c
.dword 0x7fa7ec9ded4be93f
.dword 0x7f8297b073ec28bf
.dword 0x407ff8a642c3925c
.dword 0x7fa7ec9ded4be93f
.dword 0x7fd76f910302cbdd
.dword 0xc012af7840cd0fd6
.dword 0x7fe28339eb5d6c77
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 42*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
