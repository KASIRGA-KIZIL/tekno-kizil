
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:53:03 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmadd1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V FD extension for the fnmadd_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmadd_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f19, rs2==f8, rs3==f17, rd==f17, fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa73d506d1a204 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb91be181b3554 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x6ca35beb5fcac and rm_val == 0  
// opcode: fnmadd.d ; op1:f19; op2:f8; op3:f17; dest:f17; op1val:0x3fca73d506d1a204; op2val:0x3feb91be181b3554; op3val:0x3fc6ca35beb5fcac; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f17, f19, f8, f17, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==f16, rs2==f16, rs3==f16, rd==f2, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e3a41309a3d1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb292f6ebd7683 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcab9e46280b2f and rm_val == 4  
// opcode: fnmadd.d ; op1:f16; op2:f16; op3:f16; dest:f2; op1val:0x3fe0e3a41309a3d1; op2val:0x3fe0e3a41309a3d1; op3val:0x3fe0e3a41309a3d1; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f2, f16, f16, f16, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f12, rs2==f13, rs3==f12, rd==f19, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e3a41309a3d1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb292f6ebd7683 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcab9e46280b2f and rm_val == 3  
// opcode: fnmadd.d ; op1:f12; op2:f13; op3:f12; dest:f19; op1val:0x3fe0e3a41309a3d1; op2val:0x3ffb292f6ebd7683; op3val:0x3fe0e3a41309a3d1; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f19, f12, f13, f12, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==f25, rs2==f23, rs3==f25, rd==f25, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e3a41309a3d1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb292f6ebd7683 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcab9e46280b2f and rm_val == 2  
// opcode: fnmadd.d ; op1:f25; op2:f23; op3:f25; dest:f25; op1val:0x3fe0e3a41309a3d1; op2val:0x3ffb292f6ebd7683; op3val:0x3fe0e3a41309a3d1; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f25, f25, f23, f25, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f6, rs2==f31, rs3==f13, rd==f7, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e3a41309a3d1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb292f6ebd7683 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcab9e46280b2f and rm_val == 1  
// opcode: fnmadd.d ; op1:f6; op2:f31; op3:f13; dest:f7; op1val:0x3fe0e3a41309a3d1; op2val:0x3ffb292f6ebd7683; op3val:0x3fecab9e46280b2f; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f7, f6, f31, f13, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f3, rs2==f11, rs3==f11, rd==f11, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e3a41309a3d1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb292f6ebd7683 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcab9e46280b2f and rm_val == 0  
// opcode: fnmadd.d ; op1:f3; op2:f11; op3:f11; dest:f11; op1val:0x3fe0e3a41309a3d1; op2val:0x3ffb292f6ebd7683; op3val:0x3ffb292f6ebd7683; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f11, f3, f11, f11, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==f0, rs2==f0, rs3==f4, rd==f0, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e269ed73198 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2e718544a6a4f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa472e92af06e8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f0; op2:f0; op3:f4; dest:f0; op1val:0x3fe63e269ed73198; op2val:0x3fe63e269ed73198; op3val:0x3fda472e92af06e8; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f0, f0, f0, f4, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f29, rs2==f28, rs3==f23, rd==f28, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e269ed73198 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2e718544a6a4f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa472e92af06e8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f29; op2:f28; op3:f23; dest:f28; op1val:0x3fe63e269ed73198; op2val:0x3fe2e718544a6a4f; op3val:0x3fda472e92af06e8; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f28, f29, f28, f23, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f10, rs2==f10, rs3==f9, rd==f23, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e269ed73198 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2e718544a6a4f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa472e92af06e8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f10; op3:f9; dest:f23; op1val:0x3fe63e269ed73198; op2val:0x3fe63e269ed73198; op3val:0x3fda472e92af06e8; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f23, f10, f10, f9, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 == rd, rs1==f30, rs2==f30, rs3==f30, rd==f30, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e269ed73198 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2e718544a6a4f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa472e92af06e8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f30; op2:f30; op3:f30; dest:f30; op1val:0x3fe63e269ed73198; op2val:0x3fe63e269ed73198; op3val:0x3fe63e269ed73198; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f30, f30, f30, f30, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f23, rs2==f6, rs3==f6, rd==f26, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e269ed73198 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2e718544a6a4f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa472e92af06e8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f23; op2:f6; op3:f6; dest:f26; op1val:0x3fe63e269ed73198; op2val:0x3fe2e718544a6a4f; op3val:0x3fe2e718544a6a4f; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f26, f23, f6, f6, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f8, rs2==f7, rs3==f2, rd==f8, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d7149d717096 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6565156fc5e51 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4d602e8fd2fc and rm_val == 4  
// opcode: fnmadd.d ; op1:f8; op2:f7; op3:f2; dest:f8; op1val:0x3fe2d7149d717096; op2val:0x3fe6565156fc5e51; op3val:0x3fda4d602e8fd2fc; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f8, f8, f7, f2, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f5, rs2==f24, rs3==f7, rd==f4, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d7149d717096 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6565156fc5e51 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4d602e8fd2fc and rm_val == 3  
// opcode: fnmadd.d ; op1:f5; op2:f24; op3:f7; dest:f4; op1val:0x3fe2d7149d717096; op2val:0x3fe6565156fc5e51; op3val:0x3fda4d602e8fd2fc; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f4, f5, f24, f7, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f14, rs2==f27, rs3==f29, rd==f3, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d7149d717096 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6565156fc5e51 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4d602e8fd2fc and rm_val == 2  
// opcode: fnmadd.d ; op1:f14; op2:f27; op3:f29; dest:f3; op1val:0x3fe2d7149d717096; op2val:0x3fe6565156fc5e51; op3val:0x3fda4d602e8fd2fc; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f3, f14, f27, f29, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f7, rs2==f14, rs3==f27, rd==f15, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d7149d717096 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6565156fc5e51 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4d602e8fd2fc and rm_val == 1  
// opcode: fnmadd.d ; op1:f7; op2:f14; op3:f27; dest:f15; op1val:0x3fe2d7149d717096; op2val:0x3fe6565156fc5e51; op3val:0x3fda4d602e8fd2fc; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f15, f7, f14, f27, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f2, rs2==f26, rs3==f22, rd==f27, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d7149d717096 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6565156fc5e51 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4d602e8fd2fc and rm_val == 0  
// opcode: fnmadd.d ; op1:f2; op2:f26; op3:f22; dest:f27; op1val:0x3fe2d7149d717096; op2val:0x3fe6565156fc5e51; op3val:0x3fda4d602e8fd2fc; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f27, f2, f26, f22, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f15, rs2==f17, rs3==f3, rd==f31, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x414b779aa5cdd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x361ae363eb33a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x853321e2bcea8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f15; op2:f17; op3:f3; dest:f31; op1val:0x3fe414b779aa5cdd; op2val:0x3fc361ae363eb33a; op3val:0x3fb853321e2bcea8; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f31, f15, f17, f3, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f4, rs2==f2, rs3==f20, rd==f24, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x414b779aa5cdd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x361ae363eb33a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x853321e2bcea8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f4; op2:f2; op3:f20; dest:f24; op1val:0x3fe414b779aa5cdd; op2val:0x3fc361ae363eb33a; op3val:0x3fb853321e2bcea8; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f24, f4, f2, f20, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f11, rs2==f20, rs3==f24, rd==f22, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x414b779aa5cdd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x361ae363eb33a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x853321e2bcea8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f11; op2:f20; op3:f24; dest:f22; op1val:0x3fe414b779aa5cdd; op2val:0x3fc361ae363eb33a; op3val:0x3fb853321e2bcea8; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f22, f11, f20, f24, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f1, rs2==f3, rs3==f26, rd==f21, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x414b779aa5cdd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x361ae363eb33a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x853321e2bcea8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f1; op2:f3; op3:f26; dest:f21; op1val:0x3fe414b779aa5cdd; op2val:0x3fc361ae363eb33a; op3val:0x3fb853321e2bcea8; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f21, f1, f3, f26, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f9, rs2==f21, rs3==f15, rd==f16, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x414b779aa5cdd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x361ae363eb33a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x853321e2bcea8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f9; op2:f21; op3:f15; dest:f16; op1val:0x3fe414b779aa5cdd; op2val:0x3fc361ae363eb33a; op3val:0x3fb853321e2bcea8; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f16, f9, f21, f15, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f28, rs2==f29, rs3==f5, rd==f14, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x475ada5e6e7a2 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcc2293c66a361 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2631bbb4c9440 and rm_val == 4  
// opcode: fnmadd.d ; op1:f28; op2:f29; op3:f5; dest:f14; op1val:0x3fe475ada5e6e7a2; op2val:0x3fdcc2293c66a361; op3val:0x3fd2631bbb4c9440; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f14, f28, f29, f5, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f31, rs2==f18, rs3==f8, rd==f10, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x475ada5e6e7a2 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcc2293c66a361 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2631bbb4c9440 and rm_val == 3  
// opcode: fnmadd.d ; op1:f31; op2:f18; op3:f8; dest:f10; op1val:0x3fe475ada5e6e7a2; op2val:0x3fdcc2293c66a361; op3val:0x3fd2631bbb4c9440; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f10, f31, f18, f8, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f22, rs2==f15, rs3==f31, rd==f20, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x475ada5e6e7a2 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcc2293c66a361 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2631bbb4c9440 and rm_val == 2  
// opcode: fnmadd.d ; op1:f22; op2:f15; op3:f31; dest:f20; op1val:0x3fe475ada5e6e7a2; op2val:0x3fdcc2293c66a361; op3val:0x3fd2631bbb4c9440; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f20, f22, f15, f31, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f20, rs2==f9, rs3==f28, rd==f18, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x475ada5e6e7a2 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcc2293c66a361 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2631bbb4c9440 and rm_val == 1  
// opcode: fnmadd.d ; op1:f20; op2:f9; op3:f28; dest:f18; op1val:0x3fe475ada5e6e7a2; op2val:0x3fdcc2293c66a361; op3val:0x3fd2631bbb4c9440; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f18, f20, f9, f28, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f21, rs2==f19, rs3==f10, rd==f1, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x475ada5e6e7a2 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcc2293c66a361 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2631bbb4c9440 and rm_val == 0  
// opcode: fnmadd.d ; op1:f21; op2:f19; op3:f10; dest:f1; op1val:0x3fe475ada5e6e7a2; op2val:0x3fdcc2293c66a361; op3val:0x3fd2631bbb4c9440; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f1, f21, f19, f10, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f18, rs2==f1, rs3==f21, rd==f9, fs1 == 0 and fe1 == 0x3fb and fm1 == 0x725ecb20be3d8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xb92d6784a83ba and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3f237e2c963c6 and rm_val == 4  
// opcode: fnmadd.d ; op1:f18; op2:f1; op3:f21; dest:f9; op1val:0x3fb725ecb20be3d8; op2val:0x401b92d6784a83ba; op3val:0x3fe3f237e2c963c6; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f9, f18, f1, f21, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f13, rs2==f22, rs3==f1, rd==f12, fs1 == 0 and fe1 == 0x3fb and fm1 == 0x725ecb20be3d8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xb92d6784a83ba and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3f237e2c963c6 and rm_val == 3  
// opcode: fnmadd.d ; op1:f13; op2:f22; op3:f1; dest:f12; op1val:0x3fb725ecb20be3d8; op2val:0x401b92d6784a83ba; op3val:0x3fe3f237e2c963c6; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f12, f13, f22, f1, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f27, rs2==f4, rs3==f14, rd==f6, fs1 == 0 and fe1 == 0x3fb and fm1 == 0x725ecb20be3d8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xb92d6784a83ba and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3f237e2c963c6 and rm_val == 2  
// opcode: fnmadd.d ; op1:f27; op2:f4; op3:f14; dest:f6; op1val:0x3fb725ecb20be3d8; op2val:0x401b92d6784a83ba; op3val:0x3fe3f237e2c963c6; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f6, f27, f4, f14, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f17, rs2==f5, rs3==f18, rd==f29, fs1 == 0 and fe1 == 0x3fb and fm1 == 0x725ecb20be3d8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xb92d6784a83ba and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3f237e2c963c6 and rm_val == 1  
// opcode: fnmadd.d ; op1:f17; op2:f5; op3:f18; dest:f29; op1val:0x3fb725ecb20be3d8; op2val:0x401b92d6784a83ba; op3val:0x3fe3f237e2c963c6; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f29, f17, f5, f18, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f26, rs2==f25, rs3==f0, rd==f13, fs1 == 0 and fe1 == 0x3fb and fm1 == 0x725ecb20be3d8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xb92d6784a83ba and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3f237e2c963c6 and rm_val == 0  
// opcode: fnmadd.d ; op1:f26; op2:f25; op3:f0; dest:f13; op1val:0x3fb725ecb20be3d8; op2val:0x401b92d6784a83ba; op3val:0x3fe3f237e2c963c6; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f26, f25, f0, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f24, rs2==f12, rs3==f19, rd==f5, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0084b356b6583 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7da384554ea59 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7e69580024edf and rm_val == 4  
// opcode: fnmadd.d ; op1:f24; op2:f12; op3:f19; dest:f5; op1val:0x3fe0084b356b6583; op2val:0x3ff7da384554ea59; op3val:0x3fe7e69580024edf; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f5, f24, f12, f19, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0084b356b6583 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7da384554ea59 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7e69580024edf and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0084b356b6583; op2val:0x3ff7da384554ea59; op3val:0x3fe7e69580024edf; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0084b356b6583 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7da384554ea59 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7e69580024edf and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0084b356b6583; op2val:0x3ff7da384554ea59; op3val:0x3fe7e69580024edf; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0084b356b6583 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7da384554ea59 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7e69580024edf and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0084b356b6583; op2val:0x3ff7da384554ea59; op3val:0x3fe7e69580024edf; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0084b356b6583 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7da384554ea59 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7e69580024edf and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0084b356b6583; op2val:0x3ff7da384554ea59; op3val:0x3fe7e69580024edf; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8db1435eb6450 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa3432a1fcbbc6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45a8bc0c9010c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb8db1435eb6450; op2val:0x401a3432a1fcbbc6; op3val:0x3fe45a8bc0c9010c; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8db1435eb6450 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa3432a1fcbbc6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45a8bc0c9010c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb8db1435eb6450; op2val:0x401a3432a1fcbbc6; op3val:0x3fe45a8bc0c9010c; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8db1435eb6450 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa3432a1fcbbc6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45a8bc0c9010c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb8db1435eb6450; op2val:0x401a3432a1fcbbc6; op3val:0x3fe45a8bc0c9010c; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8db1435eb6450 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa3432a1fcbbc6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45a8bc0c9010c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb8db1435eb6450; op2val:0x401a3432a1fcbbc6; op3val:0x3fe45a8bc0c9010c; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8db1435eb6450 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa3432a1fcbbc6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45a8bc0c9010c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb8db1435eb6450; op2val:0x401a3432a1fcbbc6; op3val:0x3fe45a8bc0c9010c; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc2d2b5053b5c6 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9dcfb84c11eb6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c5ddd7b9c1b8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec2d2b5053b5c6; op2val:0x3fd9dcfb84c11eb6; op3val:0x3fd6c5ddd7b9c1b8; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc2d2b5053b5c6 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9dcfb84c11eb6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c5ddd7b9c1b8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec2d2b5053b5c6; op2val:0x3fd9dcfb84c11eb6; op3val:0x3fd6c5ddd7b9c1b8; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc2d2b5053b5c6 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9dcfb84c11eb6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c5ddd7b9c1b8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec2d2b5053b5c6; op2val:0x3fd9dcfb84c11eb6; op3val:0x3fd6c5ddd7b9c1b8; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc2d2b5053b5c6 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9dcfb84c11eb6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c5ddd7b9c1b8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec2d2b5053b5c6; op2val:0x3fd9dcfb84c11eb6; op3val:0x3fd6c5ddd7b9c1b8; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc2d2b5053b5c6 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9dcfb84c11eb6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c5ddd7b9c1b8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec2d2b5053b5c6; op2val:0x3fd9dcfb84c11eb6; op3val:0x3fd6c5ddd7b9c1b8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34f6e5011964f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x66e23421677c8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb12245202bb8e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34f6e5011964f; op2val:0x3fe66e23421677c8; op3val:0x3fdb12245202bb8e; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34f6e5011964f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x66e23421677c8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb12245202bb8e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34f6e5011964f; op2val:0x3fe66e23421677c8; op3val:0x3fdb12245202bb8e; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34f6e5011964f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x66e23421677c8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb12245202bb8e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34f6e5011964f; op2val:0x3fe66e23421677c8; op3val:0x3fdb12245202bb8e; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34f6e5011964f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x66e23421677c8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb12245202bb8e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34f6e5011964f; op2val:0x3fe66e23421677c8; op3val:0x3fdb12245202bb8e; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34f6e5011964f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x66e23421677c8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb12245202bb8e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34f6e5011964f; op2val:0x3fe66e23421677c8; op3val:0x3fdb12245202bb8e; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d35fafc88834 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x20c696cc00970 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2fad90b061980 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d35fafc88834; op2val:0x40020c696cc00970; op3val:0x3fe2fad90b061980; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d35fafc88834 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x20c696cc00970 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2fad90b061980 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d35fafc88834; op2val:0x40020c696cc00970; op3val:0x3fe2fad90b061980; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d35fafc88834 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x20c696cc00970 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2fad90b061980 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d35fafc88834; op2val:0x40020c696cc00970; op3val:0x3fe2fad90b061980; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d35fafc88834 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x20c696cc00970 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2fad90b061980 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d35fafc88834; op2val:0x40020c696cc00970; op3val:0x3fe2fad90b061980; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d35fafc88834 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x20c696cc00970 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2fad90b061980 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d35fafc88834; op2val:0x40020c696cc00970; op3val:0x3fe2fad90b061980; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d5f151b8d426 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xbb28a2b2bcee8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x65ca938c61258 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d5f151b8d426; op2val:0x3fbbb28a2b2bcee8; op3val:0x3fb65ca938c61258; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d5f151b8d426 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xbb28a2b2bcee8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x65ca938c61258 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d5f151b8d426; op2val:0x3fbbb28a2b2bcee8; op3val:0x3fb65ca938c61258; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d5f151b8d426 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xbb28a2b2bcee8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x65ca938c61258 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d5f151b8d426; op2val:0x3fbbb28a2b2bcee8; op3val:0x3fb65ca938c61258; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d5f151b8d426 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xbb28a2b2bcee8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x65ca938c61258 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d5f151b8d426; op2val:0x3fbbb28a2b2bcee8; op3val:0x3fb65ca938c61258; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d5f151b8d426 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xbb28a2b2bcee8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x65ca938c61258 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d5f151b8d426; op2val:0x3fbbb28a2b2bcee8; op3val:0x3fb65ca938c61258; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa174a114b9ec4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfb40ce08049fb and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9d95d4129f19a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda174a114b9ec4; op2val:0x3fefb40ce08049fb; op3val:0x3fd9d95d4129f19a; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa174a114b9ec4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfb40ce08049fb and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9d95d4129f19a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda174a114b9ec4; op2val:0x3fefb40ce08049fb; op3val:0x3fd9d95d4129f19a; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa174a114b9ec4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfb40ce08049fb and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9d95d4129f19a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda174a114b9ec4; op2val:0x3fefb40ce08049fb; op3val:0x3fd9d95d4129f19a; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa174a114b9ec4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfb40ce08049fb and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9d95d4129f19a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda174a114b9ec4; op2val:0x3fefb40ce08049fb; op3val:0x3fd9d95d4129f19a; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa174a114b9ec4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfb40ce08049fb and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9d95d4129f19a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda174a114b9ec4; op2val:0x3fefb40ce08049fb; op3val:0x3fd9d95d4129f19a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbe810b9d74f6a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9ddbe487c391e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x68eadb5cd7728 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbe810b9d74f6a; op2val:0x3fe9ddbe487c391e; op3val:0x3fd68eadb5cd7728; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbe810b9d74f6a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9ddbe487c391e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x68eadb5cd7728 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbe810b9d74f6a; op2val:0x3fe9ddbe487c391e; op3val:0x3fd68eadb5cd7728; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbe810b9d74f6a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9ddbe487c391e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x68eadb5cd7728 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbe810b9d74f6a; op2val:0x3fe9ddbe487c391e; op3val:0x3fd68eadb5cd7728; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbe810b9d74f6a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9ddbe487c391e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x68eadb5cd7728 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbe810b9d74f6a; op2val:0x3fe9ddbe487c391e; op3val:0x3fd68eadb5cd7728; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbe810b9d74f6a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9ddbe487c391e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x68eadb5cd7728 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbe810b9d74f6a; op2val:0x3fe9ddbe487c391e; op3val:0x3fd68eadb5cd7728; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8de6f81a66055 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xab321be03e5e0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4bff112232436 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8de6f81a66055; op2val:0x3feab321be03e5e0; op3val:0x3fe4bff112232436; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8de6f81a66055 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xab321be03e5e0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4bff112232436 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8de6f81a66055; op2val:0x3feab321be03e5e0; op3val:0x3fe4bff112232436; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8de6f81a66055 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xab321be03e5e0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4bff112232436 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8de6f81a66055; op2val:0x3feab321be03e5e0; op3val:0x3fe4bff112232436; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8de6f81a66055 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xab321be03e5e0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4bff112232436 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8de6f81a66055; op2val:0x3feab321be03e5e0; op3val:0x3fe4bff112232436; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8de6f81a66055 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xab321be03e5e0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4bff112232436 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8de6f81a66055; op2val:0x3feab321be03e5e0; op3val:0x3fe4bff112232436; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x52aede96c55d4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4d1a62e846eed and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb8b06026f7918 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd52aede96c55d4; op2val:0x4004d1a62e846eed; op3val:0x3feb8b06026f7918; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x52aede96c55d4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4d1a62e846eed and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb8b06026f7918 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd52aede96c55d4; op2val:0x4004d1a62e846eed; op3val:0x3feb8b06026f7918; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x52aede96c55d4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4d1a62e846eed and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb8b06026f7918 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd52aede96c55d4; op2val:0x4004d1a62e846eed; op3val:0x3feb8b06026f7918; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x52aede96c55d4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4d1a62e846eed and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb8b06026f7918 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd52aede96c55d4; op2val:0x4004d1a62e846eed; op3val:0x3feb8b06026f7918; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x52aede96c55d4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4d1a62e846eed and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb8b06026f7918 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd52aede96c55d4; op2val:0x4004d1a62e846eed; op3val:0x3feb8b06026f7918; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa533c45df4e40 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x14074223c3412 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc627c0f1da8d3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea533c45df4e40; op2val:0x3ff14074223c3412; op3val:0x3fec627c0f1da8d3; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa533c45df4e40 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x14074223c3412 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc627c0f1da8d3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea533c45df4e40; op2val:0x3ff14074223c3412; op3val:0x3fec627c0f1da8d3; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa533c45df4e40 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x14074223c3412 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc627c0f1da8d3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea533c45df4e40; op2val:0x3ff14074223c3412; op3val:0x3fec627c0f1da8d3; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa533c45df4e40 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x14074223c3412 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc627c0f1da8d3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea533c45df4e40; op2val:0x3ff14074223c3412; op3val:0x3fec627c0f1da8d3; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa533c45df4e40 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x14074223c3412 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc627c0f1da8d3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea533c45df4e40; op2val:0x3ff14074223c3412; op3val:0x3fec627c0f1da8d3; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8a9a2445e183a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0c177cdef7182 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9d3d924cc27a5 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8a9a2445e183a; op2val:0x4000c177cdef7182; op3val:0x3fe9d3d924cc27a5; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8a9a2445e183a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0c177cdef7182 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9d3d924cc27a5 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8a9a2445e183a; op2val:0x4000c177cdef7182; op3val:0x3fe9d3d924cc27a5; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8a9a2445e183a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0c177cdef7182 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9d3d924cc27a5 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8a9a2445e183a; op2val:0x4000c177cdef7182; op3val:0x3fe9d3d924cc27a5; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8a9a2445e183a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0c177cdef7182 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9d3d924cc27a5 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8a9a2445e183a; op2val:0x4000c177cdef7182; op3val:0x3fe9d3d924cc27a5; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8a9a2445e183a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0c177cdef7182 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9d3d924cc27a5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8a9a2445e183a; op2val:0x4000c177cdef7182; op3val:0x3fe9d3d924cc27a5; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x063ea9231d3f5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x526cd83c3d305 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5aae3b424b81a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe063ea9231d3f5; op2val:0x3ff526cd83c3d305; op3val:0x3fe5aae3b424b81a; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x063ea9231d3f5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x526cd83c3d305 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5aae3b424b81a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe063ea9231d3f5; op2val:0x3ff526cd83c3d305; op3val:0x3fe5aae3b424b81a; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x063ea9231d3f5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x526cd83c3d305 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5aae3b424b81a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe063ea9231d3f5; op2val:0x3ff526cd83c3d305; op3val:0x3fe5aae3b424b81a; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x063ea9231d3f5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x526cd83c3d305 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5aae3b424b81a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe063ea9231d3f5; op2val:0x3ff526cd83c3d305; op3val:0x3fe5aae3b424b81a; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x063ea9231d3f5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x526cd83c3d305 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5aae3b424b81a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe063ea9231d3f5; op2val:0x3ff526cd83c3d305; op3val:0x3fe5aae3b424b81a; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38e3564325f64 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4516c3ae1ff79 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8d546f36a542c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38e3564325f64; op2val:0x3ff4516c3ae1ff79; op3val:0x3fd8d546f36a542c; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38e3564325f64 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4516c3ae1ff79 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8d546f36a542c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38e3564325f64; op2val:0x3ff4516c3ae1ff79; op3val:0x3fd8d546f36a542c; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38e3564325f64 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4516c3ae1ff79 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8d546f36a542c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38e3564325f64; op2val:0x3ff4516c3ae1ff79; op3val:0x3fd8d546f36a542c; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38e3564325f64 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4516c3ae1ff79 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8d546f36a542c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38e3564325f64; op2val:0x3ff4516c3ae1ff79; op3val:0x3fd8d546f36a542c; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38e3564325f64 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4516c3ae1ff79 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8d546f36a542c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38e3564325f64; op2val:0x3ff4516c3ae1ff79; op3val:0x3fd8d546f36a542c; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x586ea1c6e30fb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb98985e75f4fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2907ce067b592 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe586ea1c6e30fb; op2val:0x3feb98985e75f4fd; op3val:0x3fe2907ce067b592; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x586ea1c6e30fb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb98985e75f4fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2907ce067b592 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe586ea1c6e30fb; op2val:0x3feb98985e75f4fd; op3val:0x3fe2907ce067b592; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x586ea1c6e30fb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb98985e75f4fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2907ce067b592 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe586ea1c6e30fb; op2val:0x3feb98985e75f4fd; op3val:0x3fe2907ce067b592; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x586ea1c6e30fb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb98985e75f4fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2907ce067b592 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe586ea1c6e30fb; op2val:0x3feb98985e75f4fd; op3val:0x3fe2907ce067b592; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x586ea1c6e30fb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb98985e75f4fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2907ce067b592 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe586ea1c6e30fb; op2val:0x3feb98985e75f4fd; op3val:0x3fe2907ce067b592; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf3d53f4d3c995 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9a5dd26d34fa2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x909d5b59eca2c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef3d53f4d3c995; op2val:0x3fe9a5dd26d34fa2; op3val:0x3fe909d5b59eca2c; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf3d53f4d3c995 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9a5dd26d34fa2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x909d5b59eca2c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef3d53f4d3c995; op2val:0x3fe9a5dd26d34fa2; op3val:0x3fe909d5b59eca2c; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf3d53f4d3c995 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9a5dd26d34fa2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x909d5b59eca2c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef3d53f4d3c995; op2val:0x3fe9a5dd26d34fa2; op3val:0x3fe909d5b59eca2c; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf3d53f4d3c995 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9a5dd26d34fa2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x909d5b59eca2c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef3d53f4d3c995; op2val:0x3fe9a5dd26d34fa2; op3val:0x3fe909d5b59eca2c; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf3d53f4d3c995 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9a5dd26d34fa2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x909d5b59eca2c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef3d53f4d3c995; op2val:0x3fe9a5dd26d34fa2; op3val:0x3fe909d5b59eca2c; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbaeb31b628abb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0aaea87f19c76 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcd6691094ff93 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febaeb31b628abb; op2val:0x3ff0aaea87f19c76; op3val:0x3fecd6691094ff93; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbaeb31b628abb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0aaea87f19c76 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcd6691094ff93 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febaeb31b628abb; op2val:0x3ff0aaea87f19c76; op3val:0x3fecd6691094ff93; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbaeb31b628abb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0aaea87f19c76 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcd6691094ff93 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febaeb31b628abb; op2val:0x3ff0aaea87f19c76; op3val:0x3fecd6691094ff93; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbaeb31b628abb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0aaea87f19c76 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcd6691094ff93 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febaeb31b628abb; op2val:0x3ff0aaea87f19c76; op3val:0x3fecd6691094ff93; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbaeb31b628abb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0aaea87f19c76 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcd6691094ff93 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febaeb31b628abb; op2val:0x3ff0aaea87f19c76; op3val:0x3fecd6691094ff93; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x72dc474f1a36b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x236788e996ded and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa6266207068e8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe72dc474f1a36b; op2val:0x3ff236788e996ded; op3val:0x3fea6266207068e8; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x72dc474f1a36b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x236788e996ded and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa6266207068e8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe72dc474f1a36b; op2val:0x3ff236788e996ded; op3val:0x3fea6266207068e8; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x72dc474f1a36b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x236788e996ded and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa6266207068e8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe72dc474f1a36b; op2val:0x3ff236788e996ded; op3val:0x3fea6266207068e8; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x72dc474f1a36b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x236788e996ded and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa6266207068e8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe72dc474f1a36b; op2val:0x3ff236788e996ded; op3val:0x3fea6266207068e8; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x72dc474f1a36b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x236788e996ded and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa6266207068e8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe72dc474f1a36b; op2val:0x3ff236788e996ded; op3val:0x3fea6266207068e8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x05be08f26408d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd1d7173263cb0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdc4a189163399 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe05be08f26408d; op2val:0x3ffd1d7173263cb0; op3val:0x3fedc4a189163399; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x05be08f26408d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd1d7173263cb0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdc4a189163399 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe05be08f26408d; op2val:0x3ffd1d7173263cb0; op3val:0x3fedc4a189163399; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x05be08f26408d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd1d7173263cb0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdc4a189163399 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe05be08f26408d; op2val:0x3ffd1d7173263cb0; op3val:0x3fedc4a189163399; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x05be08f26408d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd1d7173263cb0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdc4a189163399 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe05be08f26408d; op2val:0x3ffd1d7173263cb0; op3val:0x3fedc4a189163399; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x05be08f26408d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd1d7173263cb0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdc4a189163399 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe05be08f26408d; op2val:0x3ffd1d7173263cb0; op3val:0x3fedc4a189163399; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc338003e04edb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5d5f08a852bff and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x33e56caf892c2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec338003e04edb; op2val:0x3fe5d5f08a852bff; op3val:0x3fe33e56caf892c2; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc338003e04edb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5d5f08a852bff and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x33e56caf892c2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec338003e04edb; op2val:0x3fe5d5f08a852bff; op3val:0x3fe33e56caf892c2; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc338003e04edb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5d5f08a852bff and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x33e56caf892c2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec338003e04edb; op2val:0x3fe5d5f08a852bff; op3val:0x3fe33e56caf892c2; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc338003e04edb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5d5f08a852bff and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x33e56caf892c2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec338003e04edb; op2val:0x3fe5d5f08a852bff; op3val:0x3fe33e56caf892c2; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc338003e04edb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5d5f08a852bff and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x33e56caf892c2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec338003e04edb; op2val:0x3fe5d5f08a852bff; op3val:0x3fe33e56caf892c2; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa67c9d09ff3c8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0c42c021d53ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbab89d9c3f858 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca67c9d09ff3c8; op2val:0x4010c42c021d53ac; op3val:0x3febab89d9c3f858; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa67c9d09ff3c8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0c42c021d53ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbab89d9c3f858 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca67c9d09ff3c8; op2val:0x4010c42c021d53ac; op3val:0x3febab89d9c3f858; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa67c9d09ff3c8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0c42c021d53ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbab89d9c3f858 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca67c9d09ff3c8; op2val:0x4010c42c021d53ac; op3val:0x3febab89d9c3f858; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa67c9d09ff3c8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0c42c021d53ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbab89d9c3f858 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca67c9d09ff3c8; op2val:0x4010c42c021d53ac; op3val:0x3febab89d9c3f858; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa67c9d09ff3c8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0c42c021d53ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbab89d9c3f858 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca67c9d09ff3c8; op2val:0x4010c42c021d53ac; op3val:0x3febab89d9c3f858; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x954b43f9b9e68 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x20b0d1d765829 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc90c9c6f223d8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb954b43f9b9e68; op2val:0x40220b0d1d765829; op3val:0x3fec90c9c6f223d8; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x954b43f9b9e68 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x20b0d1d765829 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc90c9c6f223d8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb954b43f9b9e68; op2val:0x40220b0d1d765829; op3val:0x3fec90c9c6f223d8; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x954b43f9b9e68 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x20b0d1d765829 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc90c9c6f223d8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb954b43f9b9e68; op2val:0x40220b0d1d765829; op3val:0x3fec90c9c6f223d8; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x954b43f9b9e68 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x20b0d1d765829 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc90c9c6f223d8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb954b43f9b9e68; op2val:0x40220b0d1d765829; op3val:0x3fec90c9c6f223d8; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x954b43f9b9e68 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x20b0d1d765829 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc90c9c6f223d8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb954b43f9b9e68; op2val:0x40220b0d1d765829; op3val:0x3fec90c9c6f223d8; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6f8428ac99be4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x848273750ba06 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x16dfca415383c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6f8428ac99be4; op2val:0x3fd848273750ba06; op3val:0x3fc16dfca415383c; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6f8428ac99be4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x848273750ba06 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x16dfca415383c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6f8428ac99be4; op2val:0x3fd848273750ba06; op3val:0x3fc16dfca415383c; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6f8428ac99be4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x848273750ba06 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x16dfca415383c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6f8428ac99be4; op2val:0x3fd848273750ba06; op3val:0x3fc16dfca415383c; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6f8428ac99be4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x848273750ba06 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x16dfca415383c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6f8428ac99be4; op2val:0x3fd848273750ba06; op3val:0x3fc16dfca415383c; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6f8428ac99be4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x848273750ba06 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x16dfca415383c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6f8428ac99be4; op2val:0x3fd848273750ba06; op3val:0x3fc16dfca415383c; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb17a4ef1f15ce and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0581fe4addef5 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xbacdcfb492790 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb17a4ef1f15ce; op2val:0x3fd0581fe4addef5; op3val:0x3fcbacdcfb492790; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb17a4ef1f15ce and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0581fe4addef5 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xbacdcfb492790 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb17a4ef1f15ce; op2val:0x3fd0581fe4addef5; op3val:0x3fcbacdcfb492790; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb17a4ef1f15ce and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0581fe4addef5 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xbacdcfb492790 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb17a4ef1f15ce; op2val:0x3fd0581fe4addef5; op3val:0x3fcbacdcfb492790; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb17a4ef1f15ce and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0581fe4addef5 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xbacdcfb492790 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb17a4ef1f15ce; op2val:0x3fd0581fe4addef5; op3val:0x3fcbacdcfb492790; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb17a4ef1f15ce and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0581fe4addef5 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xbacdcfb492790 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb17a4ef1f15ce; op2val:0x3fd0581fe4addef5; op3val:0x3fcbacdcfb492790; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf043b0baa0bfe and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0df416b4ece61 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x05a8269e8c67c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf043b0baa0bfe; op2val:0x3fd0df416b4ece61; op3val:0x3fc05a8269e8c67c; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf043b0baa0bfe and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0df416b4ece61 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x05a8269e8c67c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf043b0baa0bfe; op2val:0x3fd0df416b4ece61; op3val:0x3fc05a8269e8c67c; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf043b0baa0bfe and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0df416b4ece61 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x05a8269e8c67c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf043b0baa0bfe; op2val:0x3fd0df416b4ece61; op3val:0x3fc05a8269e8c67c; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf043b0baa0bfe and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0df416b4ece61 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x05a8269e8c67c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf043b0baa0bfe; op2val:0x3fd0df416b4ece61; op3val:0x3fc05a8269e8c67c; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf043b0baa0bfe and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0df416b4ece61 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x05a8269e8c67c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf043b0baa0bfe; op2val:0x3fd0df416b4ece61; op3val:0x3fc05a8269e8c67c; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf84af44508b85 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xed603a2c4b68e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5f2f38e643a3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef84af44508b85; op2val:0x3feed603a2c4b68e; op3val:0x3fee5f2f38e643a3; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf84af44508b85 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xed603a2c4b68e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5f2f38e643a3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef84af44508b85; op2val:0x3feed603a2c4b68e; op3val:0x3fee5f2f38e643a3; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf84af44508b85 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xed603a2c4b68e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5f2f38e643a3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef84af44508b85; op2val:0x3feed603a2c4b68e; op3val:0x3fee5f2f38e643a3; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf84af44508b85 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xed603a2c4b68e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5f2f38e643a3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef84af44508b85; op2val:0x3feed603a2c4b68e; op3val:0x3fee5f2f38e643a3; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf84af44508b85 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xed603a2c4b68e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5f2f38e643a3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef84af44508b85; op2val:0x3feed603a2c4b68e; op3val:0x3fee5f2f38e643a3; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb3015f61331b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc9bbc395d47d3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84e640ceea60f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb3015f61331b8; op2val:0x401c9bbc395d47d3; op3val:0x3fe84e640ceea60f; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb3015f61331b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc9bbc395d47d3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84e640ceea60f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb3015f61331b8; op2val:0x401c9bbc395d47d3; op3val:0x3fe84e640ceea60f; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb3015f61331b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc9bbc395d47d3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84e640ceea60f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb3015f61331b8; op2val:0x401c9bbc395d47d3; op3val:0x3fe84e640ceea60f; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb3015f61331b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc9bbc395d47d3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84e640ceea60f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb3015f61331b8; op2val:0x401c9bbc395d47d3; op3val:0x3fe84e640ceea60f; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb3015f61331b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc9bbc395d47d3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84e640ceea60f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb3015f61331b8; op2val:0x401c9bbc395d47d3; op3val:0x3fe84e640ceea60f; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0244f8a366e40 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x154672f569e38 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x17bbb3df18916 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0244f8a366e40; op2val:0x3fe154672f569e38; op3val:0x3fd17bbb3df18916; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0244f8a366e40 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x154672f569e38 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x17bbb3df18916 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0244f8a366e40; op2val:0x3fe154672f569e38; op3val:0x3fd17bbb3df18916; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0244f8a366e40 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x154672f569e38 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x17bbb3df18916 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0244f8a366e40; op2val:0x3fe154672f569e38; op3val:0x3fd17bbb3df18916; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0244f8a366e40 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x154672f569e38 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x17bbb3df18916 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0244f8a366e40; op2val:0x3fe154672f569e38; op3val:0x3fd17bbb3df18916; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0244f8a366e40 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x154672f569e38 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x17bbb3df18916 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0244f8a366e40; op2val:0x3fe154672f569e38; op3val:0x3fd17bbb3df18916; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x097594f14cd9c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x620e618e1177e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6f23818cb03c8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd097594f14cd9c; op2val:0x400620e618e1177e; op3val:0x3fe6f23818cb03c8; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x097594f14cd9c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x620e618e1177e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6f23818cb03c8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd097594f14cd9c; op2val:0x400620e618e1177e; op3val:0x3fe6f23818cb03c8; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x097594f14cd9c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x620e618e1177e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6f23818cb03c8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd097594f14cd9c; op2val:0x400620e618e1177e; op3val:0x3fe6f23818cb03c8; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x097594f14cd9c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x620e618e1177e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6f23818cb03c8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd097594f14cd9c; op2val:0x400620e618e1177e; op3val:0x3fe6f23818cb03c8; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x097594f14cd9c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x620e618e1177e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6f23818cb03c8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd097594f14cd9c; op2val:0x400620e618e1177e; op3val:0x3fe6f23818cb03c8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2daa2a2acbe34 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xeb492c92904fe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2175cc7607cd2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2daa2a2acbe34; op2val:0x3ffeb492c92904fe; op3val:0x3fd2175cc7607cd2; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2daa2a2acbe34 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xeb492c92904fe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2175cc7607cd2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2daa2a2acbe34; op2val:0x3ffeb492c92904fe; op3val:0x3fd2175cc7607cd2; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2daa2a2acbe34 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xeb492c92904fe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2175cc7607cd2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2daa2a2acbe34; op2val:0x3ffeb492c92904fe; op3val:0x3fd2175cc7607cd2; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2daa2a2acbe34 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xeb492c92904fe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2175cc7607cd2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2daa2a2acbe34; op2val:0x3ffeb492c92904fe; op3val:0x3fd2175cc7607cd2; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2daa2a2acbe34 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xeb492c92904fe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2175cc7607cd2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2daa2a2acbe34; op2val:0x3ffeb492c92904fe; op3val:0x3fd2175cc7607cd2; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x392a09262d18e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x54846121f9fbd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa08dc4a5e944e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe392a09262d18e; op2val:0x3fe54846121f9fbd; op3val:0x3fda08dc4a5e944e; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x392a09262d18e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x54846121f9fbd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa08dc4a5e944e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe392a09262d18e; op2val:0x3fe54846121f9fbd; op3val:0x3fda08dc4a5e944e; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x392a09262d18e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x54846121f9fbd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa08dc4a5e944e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe392a09262d18e; op2val:0x3fe54846121f9fbd; op3val:0x3fda08dc4a5e944e; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x392a09262d18e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x54846121f9fbd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa08dc4a5e944e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe392a09262d18e; op2val:0x3fe54846121f9fbd; op3val:0x3fda08dc4a5e944e; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x392a09262d18e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x54846121f9fbd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa08dc4a5e944e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe392a09262d18e; op2val:0x3fe54846121f9fbd; op3val:0x3fda08dc4a5e944e; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x77d81e523ec79 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe1ccde7bb6b01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x61acebe9de6b8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe77d81e523ec79; op2val:0x3fee1ccde7bb6b01; op3val:0x3fe61acebe9de6b8; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x77d81e523ec79 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe1ccde7bb6b01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x61acebe9de6b8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe77d81e523ec79; op2val:0x3fee1ccde7bb6b01; op3val:0x3fe61acebe9de6b8; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x77d81e523ec79 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe1ccde7bb6b01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x61acebe9de6b8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe77d81e523ec79; op2val:0x3fee1ccde7bb6b01; op3val:0x3fe61acebe9de6b8; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x77d81e523ec79 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe1ccde7bb6b01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x61acebe9de6b8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe77d81e523ec79; op2val:0x3fee1ccde7bb6b01; op3val:0x3fe61acebe9de6b8; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x77d81e523ec79 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe1ccde7bb6b01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x61acebe9de6b8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe77d81e523ec79; op2val:0x3fee1ccde7bb6b01; op3val:0x3fe61acebe9de6b8; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x79417de97ea95 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5b04e5384195b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff62fc7bf2f12 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe79417de97ea95; op2val:0x3ff5b04e5384195b; op3val:0x3feff62fc7bf2f12; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x79417de97ea95 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5b04e5384195b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff62fc7bf2f12 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe79417de97ea95; op2val:0x3ff5b04e5384195b; op3val:0x3feff62fc7bf2f12; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x79417de97ea95 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5b04e5384195b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff62fc7bf2f12 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe79417de97ea95; op2val:0x3ff5b04e5384195b; op3val:0x3feff62fc7bf2f12; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x79417de97ea95 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5b04e5384195b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff62fc7bf2f12 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe79417de97ea95; op2val:0x3ff5b04e5384195b; op3val:0x3feff62fc7bf2f12; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x79417de97ea95 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5b04e5384195b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff62fc7bf2f12 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe79417de97ea95; op2val:0x3ff5b04e5384195b; op3val:0x3feff62fc7bf2f12; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdd942bf467a1e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc3fb83d5b5d53 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa5989fd41698f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddd942bf467a1e; op2val:0x3ffc3fb83d5b5d53; op3val:0x3fea5989fd41698f; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdd942bf467a1e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc3fb83d5b5d53 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa5989fd41698f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddd942bf467a1e; op2val:0x3ffc3fb83d5b5d53; op3val:0x3fea5989fd41698f; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdd942bf467a1e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc3fb83d5b5d53 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa5989fd41698f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddd942bf467a1e; op2val:0x3ffc3fb83d5b5d53; op3val:0x3fea5989fd41698f; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdd942bf467a1e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc3fb83d5b5d53 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa5989fd41698f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddd942bf467a1e; op2val:0x3ffc3fb83d5b5d53; op3val:0x3fea5989fd41698f; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdd942bf467a1e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc3fb83d5b5d53 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa5989fd41698f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fddd942bf467a1e; op2val:0x3ffc3fb83d5b5d53; op3val:0x3fea5989fd41698f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc6c2a0bc1c69a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x439ccfefef77e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1f6f106471c5b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec6c2a0bc1c69a; op2val:0x3fe439ccfefef77e; op3val:0x3fe1f6f106471c5b; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc6c2a0bc1c69a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x439ccfefef77e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1f6f106471c5b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec6c2a0bc1c69a; op2val:0x3fe439ccfefef77e; op3val:0x3fe1f6f106471c5b; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc6c2a0bc1c69a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x439ccfefef77e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1f6f106471c5b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec6c2a0bc1c69a; op2val:0x3fe439ccfefef77e; op3val:0x3fe1f6f106471c5b; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc6c2a0bc1c69a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x439ccfefef77e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1f6f106471c5b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec6c2a0bc1c69a; op2val:0x3fe439ccfefef77e; op3val:0x3fe1f6f106471c5b; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc6c2a0bc1c69a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x439ccfefef77e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1f6f106471c5b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec6c2a0bc1c69a; op2val:0x3fe439ccfefef77e; op3val:0x3fe1f6f106471c5b; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf817ff78a6296 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdf65ee0519153 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7fece95716fa and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf817ff78a6296; op2val:0x3ffdf65ee0519153; op3val:0x3fed7fece95716fa; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf817ff78a6296 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdf65ee0519153 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7fece95716fa and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf817ff78a6296; op2val:0x3ffdf65ee0519153; op3val:0x3fed7fece95716fa; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf817ff78a6296 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdf65ee0519153 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7fece95716fa and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf817ff78a6296; op2val:0x3ffdf65ee0519153; op3val:0x3fed7fece95716fa; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf817ff78a6296 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdf65ee0519153 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7fece95716fa and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf817ff78a6296; op2val:0x3ffdf65ee0519153; op3val:0x3fed7fece95716fa; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf817ff78a6296 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdf65ee0519153 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7fece95716fa and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf817ff78a6296; op2val:0x3ffdf65ee0519153; op3val:0x3fed7fece95716fa; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5d0c95cbaf8c5 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9cca3ea55126 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x58d26c82583dc and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5d0c95cbaf8c5; op2val:0x3fdf9cca3ea55126; op3val:0x3fd58d26c82583dc; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5d0c95cbaf8c5 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9cca3ea55126 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x58d26c82583dc and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5d0c95cbaf8c5; op2val:0x3fdf9cca3ea55126; op3val:0x3fd58d26c82583dc; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5d0c95cbaf8c5 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9cca3ea55126 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x58d26c82583dc and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5d0c95cbaf8c5; op2val:0x3fdf9cca3ea55126; op3val:0x3fd58d26c82583dc; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5d0c95cbaf8c5 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9cca3ea55126 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x58d26c82583dc and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5d0c95cbaf8c5; op2val:0x3fdf9cca3ea55126; op3val:0x3fd58d26c82583dc; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5d0c95cbaf8c5 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9cca3ea55126 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x58d26c82583dc and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5d0c95cbaf8c5; op2val:0x3fdf9cca3ea55126; op3val:0x3fd58d26c82583dc; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x71dace7c18228 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf083514df46ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66aad43f79c3a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe71dace7c18228; op2val:0x3fdf083514df46ab; op3val:0x3fd66aad43f79c3a; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x71dace7c18228 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf083514df46ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66aad43f79c3a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe71dace7c18228; op2val:0x3fdf083514df46ab; op3val:0x3fd66aad43f79c3a; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x71dace7c18228 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf083514df46ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66aad43f79c3a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe71dace7c18228; op2val:0x3fdf083514df46ab; op3val:0x3fd66aad43f79c3a; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x71dace7c18228 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf083514df46ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66aad43f79c3a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe71dace7c18228; op2val:0x3fdf083514df46ab; op3val:0x3fd66aad43f79c3a; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x71dace7c18228 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf083514df46ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66aad43f79c3a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe71dace7c18228; op2val:0x3fdf083514df46ab; op3val:0x3fd66aad43f79c3a; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa969c6b6f5848 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x020dc59b54699 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xacd37d03fff64 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba969c6b6f5848; op2val:0x402020dc59b54699; op3val:0x3feacd37d03fff64; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa969c6b6f5848 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x020dc59b54699 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xacd37d03fff64 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba969c6b6f5848; op2val:0x402020dc59b54699; op3val:0x3feacd37d03fff64; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa969c6b6f5848 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x020dc59b54699 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xacd37d03fff64 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba969c6b6f5848; op2val:0x402020dc59b54699; op3val:0x3feacd37d03fff64; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa969c6b6f5848 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x020dc59b54699 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xacd37d03fff64 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba969c6b6f5848; op2val:0x402020dc59b54699; op3val:0x3feacd37d03fff64; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa969c6b6f5848 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x020dc59b54699 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xacd37d03fff64 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba969c6b6f5848; op2val:0x402020dc59b54699; op3val:0x3feacd37d03fff64; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xc04b6784e7e00 and fs2 == 0 and fe2 == 0x405 and fm2 == 0x0a056aef1100b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd1d7d64afb902 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c04b6784e7e00; op2val:0x4050a056aef1100b; op3val:0x3fdd1d7d64afb902; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xc04b6784e7e00 and fs2 == 0 and fe2 == 0x405 and fm2 == 0x0a056aef1100b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd1d7d64afb902 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c04b6784e7e00; op2val:0x4050a056aef1100b; op3val:0x3fdd1d7d64afb902; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xc04b6784e7e00 and fs2 == 0 and fe2 == 0x405 and fm2 == 0x0a056aef1100b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd1d7d64afb902 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c04b6784e7e00; op2val:0x4050a056aef1100b; op3val:0x3fdd1d7d64afb902; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xc04b6784e7e00 and fs2 == 0 and fe2 == 0x405 and fm2 == 0x0a056aef1100b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd1d7d64afb902 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c04b6784e7e00; op2val:0x4050a056aef1100b; op3val:0x3fdd1d7d64afb902; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xc04b6784e7e00 and fs2 == 0 and fe2 == 0x405 and fm2 == 0x0a056aef1100b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd1d7d64afb902 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c04b6784e7e00; op2val:0x4050a056aef1100b; op3val:0x3fdd1d7d64afb902; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25d7941010993 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x189a353af736a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4214cab9f4122 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe25d7941010993; op2val:0x3ff189a353af736a; op3val:0x3fe4214cab9f4122; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25d7941010993 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x189a353af736a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4214cab9f4122 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe25d7941010993; op2val:0x3ff189a353af736a; op3val:0x3fe4214cab9f4122; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25d7941010993 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x189a353af736a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4214cab9f4122 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe25d7941010993; op2val:0x3ff189a353af736a; op3val:0x3fe4214cab9f4122; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25d7941010993 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x189a353af736a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4214cab9f4122 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe25d7941010993; op2val:0x3ff189a353af736a; op3val:0x3fe4214cab9f4122; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25d7941010993 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x189a353af736a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4214cab9f4122 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe25d7941010993; op2val:0x3ff189a353af736a; op3val:0x3fe4214cab9f4122; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xe7c6951c796c0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x77d1c840f63bc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6609cd8daeb54 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9e7c6951c796c0; op2val:0x40377d1c840f63bc; op3val:0x3fe6609cd8daeb54; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xe7c6951c796c0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x77d1c840f63bc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6609cd8daeb54 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9e7c6951c796c0; op2val:0x40377d1c840f63bc; op3val:0x3fe6609cd8daeb54; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xe7c6951c796c0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x77d1c840f63bc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6609cd8daeb54 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9e7c6951c796c0; op2val:0x40377d1c840f63bc; op3val:0x3fe6609cd8daeb54; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xe7c6951c796c0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x77d1c840f63bc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6609cd8daeb54 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9e7c6951c796c0; op2val:0x40377d1c840f63bc; op3val:0x3fe6609cd8daeb54; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xe7c6951c796c0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x77d1c840f63bc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6609cd8daeb54 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9e7c6951c796c0; op2val:0x40377d1c840f63bc; op3val:0x3fe6609cd8daeb54; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ecd48dea67bc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6e55860bfda0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77febf5703455 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ecd48dea67bc; op2val:0x3fef6e55860bfda0; op3val:0x3fe77febf5703455; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ecd48dea67bc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6e55860bfda0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77febf5703455 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ecd48dea67bc; op2val:0x3fef6e55860bfda0; op3val:0x3fe77febf5703455; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ecd48dea67bc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6e55860bfda0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77febf5703455 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ecd48dea67bc; op2val:0x3fef6e55860bfda0; op3val:0x3fe77febf5703455; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ecd48dea67bc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6e55860bfda0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77febf5703455 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ecd48dea67bc; op2val:0x3fef6e55860bfda0; op3val:0x3fe77febf5703455; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ecd48dea67bc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6e55860bfda0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77febf5703455 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ecd48dea67bc; op2val:0x3fef6e55860bfda0; op3val:0x3fe77febf5703455; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6c8cd4bf85f98 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd4f0a5b7cc5f8 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4de412790aa6c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6c8cd4bf85f98; op2val:0x3fdd4f0a5b7cc5f8; op3val:0x3fc4de412790aa6c; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6c8cd4bf85f98 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd4f0a5b7cc5f8 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4de412790aa6c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6c8cd4bf85f98; op2val:0x3fdd4f0a5b7cc5f8; op3val:0x3fc4de412790aa6c; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6c8cd4bf85f98 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd4f0a5b7cc5f8 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4de412790aa6c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6c8cd4bf85f98; op2val:0x3fdd4f0a5b7cc5f8; op3val:0x3fc4de412790aa6c; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6c8cd4bf85f98 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd4f0a5b7cc5f8 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4de412790aa6c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6c8cd4bf85f98; op2val:0x3fdd4f0a5b7cc5f8; op3val:0x3fc4de412790aa6c; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6c8cd4bf85f98 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd4f0a5b7cc5f8 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4de412790aa6c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6c8cd4bf85f98; op2val:0x3fdd4f0a5b7cc5f8; op3val:0x3fc4de412790aa6c; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc76b2f8c7f200 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x29e88495ff83a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x08fc7f9599a23 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c76b2f8c7f200; op2val:0x40329e88495ff83a; op3val:0x3fe08fc7f9599a23; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc76b2f8c7f200 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x29e88495ff83a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x08fc7f9599a23 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c76b2f8c7f200; op2val:0x40329e88495ff83a; op3val:0x3fe08fc7f9599a23; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc76b2f8c7f200 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x29e88495ff83a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x08fc7f9599a23 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c76b2f8c7f200; op2val:0x40329e88495ff83a; op3val:0x3fe08fc7f9599a23; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc76b2f8c7f200 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x29e88495ff83a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x08fc7f9599a23 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c76b2f8c7f200; op2val:0x40329e88495ff83a; op3val:0x3fe08fc7f9599a23; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc76b2f8c7f200 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x29e88495ff83a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x08fc7f9599a23 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c76b2f8c7f200; op2val:0x40329e88495ff83a; op3val:0x3fe08fc7f9599a23; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7624ee71fde98 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xfb0bece076f3b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x728649020d5f2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7624ee71fde98; op2val:0x3fdfb0bece076f3b; op3val:0x3fd728649020d5f2; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7624ee71fde98 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xfb0bece076f3b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x728649020d5f2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7624ee71fde98; op2val:0x3fdfb0bece076f3b; op3val:0x3fd728649020d5f2; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7624ee71fde98 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xfb0bece076f3b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x728649020d5f2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7624ee71fde98; op2val:0x3fdfb0bece076f3b; op3val:0x3fd728649020d5f2; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7624ee71fde98 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xfb0bece076f3b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x728649020d5f2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7624ee71fde98; op2val:0x3fdfb0bece076f3b; op3val:0x3fd728649020d5f2; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7624ee71fde98 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xfb0bece076f3b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x728649020d5f2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7624ee71fde98; op2val:0x3fdfb0bece076f3b; op3val:0x3fd728649020d5f2; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x862db765ea056 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x06b92ef147ff9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x906d0847cbe1c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd862db765ea056; op2val:0x3ff06b92ef147ff9; op3val:0x3fd906d0847cbe1c; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x862db765ea056 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x06b92ef147ff9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x906d0847cbe1c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd862db765ea056; op2val:0x3ff06b92ef147ff9; op3val:0x3fd906d0847cbe1c; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x862db765ea056 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x06b92ef147ff9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x906d0847cbe1c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd862db765ea056; op2val:0x3ff06b92ef147ff9; op3val:0x3fd906d0847cbe1c; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x862db765ea056 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x06b92ef147ff9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x906d0847cbe1c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd862db765ea056; op2val:0x3ff06b92ef147ff9; op3val:0x3fd906d0847cbe1c; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x862db765ea056 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x06b92ef147ff9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x906d0847cbe1c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd862db765ea056; op2val:0x3ff06b92ef147ff9; op3val:0x3fd906d0847cbe1c; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x23dfd77c83f6f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7522c92a43ba1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa96cce0dfaf22 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe23dfd77c83f6f; op2val:0x3fe7522c92a43ba1; op3val:0x3fda96cce0dfaf22; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x23dfd77c83f6f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7522c92a43ba1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa96cce0dfaf22 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe23dfd77c83f6f; op2val:0x3fe7522c92a43ba1; op3val:0x3fda96cce0dfaf22; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x23dfd77c83f6f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7522c92a43ba1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa96cce0dfaf22 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe23dfd77c83f6f; op2val:0x3fe7522c92a43ba1; op3val:0x3fda96cce0dfaf22; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x23dfd77c83f6f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7522c92a43ba1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa96cce0dfaf22 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe23dfd77c83f6f; op2val:0x3fe7522c92a43ba1; op3val:0x3fda96cce0dfaf22; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x23dfd77c83f6f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7522c92a43ba1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa96cce0dfaf22 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe23dfd77c83f6f; op2val:0x3fe7522c92a43ba1; op3val:0x3fda96cce0dfaf22; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x604848221dffe and fs2 == 0 and fe2 == 0x400 and fm2 == 0x53730b4699b7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd31e0781d7728 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd604848221dffe; op2val:0x40053730b4699b7b; op3val:0x3fed31e0781d7728; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x604848221dffe and fs2 == 0 and fe2 == 0x400 and fm2 == 0x53730b4699b7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd31e0781d7728 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd604848221dffe; op2val:0x40053730b4699b7b; op3val:0x3fed31e0781d7728; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x604848221dffe and fs2 == 0 and fe2 == 0x400 and fm2 == 0x53730b4699b7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd31e0781d7728 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd604848221dffe; op2val:0x40053730b4699b7b; op3val:0x3fed31e0781d7728; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x604848221dffe and fs2 == 0 and fe2 == 0x400 and fm2 == 0x53730b4699b7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd31e0781d7728 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd604848221dffe; op2val:0x40053730b4699b7b; op3val:0x3fed31e0781d7728; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x604848221dffe and fs2 == 0 and fe2 == 0x400 and fm2 == 0x53730b4699b7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd31e0781d7728 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd604848221dffe; op2val:0x40053730b4699b7b; op3val:0x3fed31e0781d7728; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcfe2013058ea6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a2667ddbcc1c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x481d96b822c39 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcfe2013058ea6; op2val:0x3ff6a2667ddbcc1c; op3val:0x3fe481d96b822c39; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcfe2013058ea6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a2667ddbcc1c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x481d96b822c39 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcfe2013058ea6; op2val:0x3ff6a2667ddbcc1c; op3val:0x3fe481d96b822c39; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 368, x18)

inst_278:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcfe2013058ea6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a2667ddbcc1c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x481d96b822c39 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcfe2013058ea6; op2val:0x3ff6a2667ddbcc1c; op3val:0x3fe481d96b822c39; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 384, x18)

inst_279:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcfe2013058ea6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a2667ddbcc1c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x481d96b822c39 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcfe2013058ea6; op2val:0x3ff6a2667ddbcc1c; op3val:0x3fe481d96b822c39; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 400, x18)

inst_280:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcfe2013058ea6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a2667ddbcc1c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x481d96b822c39 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcfe2013058ea6; op2val:0x3ff6a2667ddbcc1c; op3val:0x3fe481d96b822c39; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_281:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8ef771e18e80e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x948a0662241b4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3b3acd870c123 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8ef771e18e80e; op2val:0x3fe948a0662241b4; op3val:0x3fe3b3acd870c123; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 432, x18)

inst_282:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8ef771e18e80e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x948a0662241b4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3b3acd870c123 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8ef771e18e80e; op2val:0x3fe948a0662241b4; op3val:0x3fe3b3acd870c123; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 448, x18)

inst_283:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8ef771e18e80e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x948a0662241b4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3b3acd870c123 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8ef771e18e80e; op2val:0x3fe948a0662241b4; op3val:0x3fe3b3acd870c123; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 464, x18)

inst_284:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8ef771e18e80e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x948a0662241b4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3b3acd870c123 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8ef771e18e80e; op2val:0x3fe948a0662241b4; op3val:0x3fe3b3acd870c123; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 480, x18)

inst_285:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8ef771e18e80e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x948a0662241b4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3b3acd870c123 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8ef771e18e80e; op2val:0x3fe948a0662241b4; op3val:0x3fe3b3acd870c123; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 496, x18)

inst_286:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa22984a1709c7 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7b6b85e8df37c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x35e18cb8b2ab8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea22984a1709c7; op2val:0x3fb7b6b85e8df37c; op3val:0x3fb35e18cb8b2ab8; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 512, x18)

inst_287:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa22984a1709c7 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7b6b85e8df37c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x35e18cb8b2ab8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea22984a1709c7; op2val:0x3fb7b6b85e8df37c; op3val:0x3fb35e18cb8b2ab8; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 528, x18)

inst_288:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa22984a1709c7 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7b6b85e8df37c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x35e18cb8b2ab8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea22984a1709c7; op2val:0x3fb7b6b85e8df37c; op3val:0x3fb35e18cb8b2ab8; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 544, x18)

inst_289:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa22984a1709c7 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7b6b85e8df37c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x35e18cb8b2ab8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea22984a1709c7; op2val:0x3fb7b6b85e8df37c; op3val:0x3fb35e18cb8b2ab8; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 560, x18)

inst_290:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa22984a1709c7 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7b6b85e8df37c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x35e18cb8b2ab8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea22984a1709c7; op2val:0x3fb7b6b85e8df37c; op3val:0x3fb35e18cb8b2ab8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 576, x18)

inst_291:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4911935b1199c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x44a66a665204e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa15028a99cc65 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4911935b1199c; op2val:0x3ff44a66a665204e; op3val:0x3fea15028a99cc65; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 592, x18)

inst_292:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4911935b1199c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x44a66a665204e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa15028a99cc65 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4911935b1199c; op2val:0x3ff44a66a665204e; op3val:0x3fea15028a99cc65; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 608, x18)

inst_293:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4911935b1199c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x44a66a665204e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa15028a99cc65 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4911935b1199c; op2val:0x3ff44a66a665204e; op3val:0x3fea15028a99cc65; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 624, x18)

inst_294:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4911935b1199c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x44a66a665204e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa15028a99cc65 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4911935b1199c; op2val:0x3ff44a66a665204e; op3val:0x3fea15028a99cc65; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 640, x18)

inst_295:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4911935b1199c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x44a66a665204e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa15028a99cc65 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4911935b1199c; op2val:0x3ff44a66a665204e; op3val:0x3fea15028a99cc65; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 656, x18)

inst_296:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd1ddd54bd498c and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x195938a733f67 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xfffedc5830a70 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed1ddd54bd498c; op2val:0x3fc195938a733f67; op3val:0x3fbfffedc5830a70; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 672, x18)

inst_297:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd1ddd54bd498c and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x195938a733f67 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xfffedc5830a70 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed1ddd54bd498c; op2val:0x3fc195938a733f67; op3val:0x3fbfffedc5830a70; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 688, x18)

inst_298:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd1ddd54bd498c and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x195938a733f67 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xfffedc5830a70 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed1ddd54bd498c; op2val:0x3fc195938a733f67; op3val:0x3fbfffedc5830a70; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 704, x18)

inst_299:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd1ddd54bd498c and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x195938a733f67 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xfffedc5830a70 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed1ddd54bd498c; op2val:0x3fc195938a733f67; op3val:0x3fbfffedc5830a70; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 720, x18)

inst_300:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd1ddd54bd498c and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x195938a733f67 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xfffedc5830a70 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed1ddd54bd498c; op2val:0x3fc195938a733f67; op3val:0x3fbfffedc5830a70; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 736, x18)

inst_301:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x161cc16a09f24 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7e3d0bfffc7b9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9f413a7fa65aa and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd161cc16a09f24; op2val:0x3ff7e3d0bfffc7b9; op3val:0x3fd9f413a7fa65aa; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 752, x18)

inst_302:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x161cc16a09f24 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7e3d0bfffc7b9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9f413a7fa65aa and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd161cc16a09f24; op2val:0x3ff7e3d0bfffc7b9; op3val:0x3fd9f413a7fa65aa; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 768, x18)

inst_303:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x161cc16a09f24 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7e3d0bfffc7b9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9f413a7fa65aa and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd161cc16a09f24; op2val:0x3ff7e3d0bfffc7b9; op3val:0x3fd9f413a7fa65aa; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 784, x18)

inst_304:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x161cc16a09f24 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7e3d0bfffc7b9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9f413a7fa65aa and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd161cc16a09f24; op2val:0x3ff7e3d0bfffc7b9; op3val:0x3fd9f413a7fa65aa; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 800, x18)

inst_305:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x161cc16a09f24 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7e3d0bfffc7b9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9f413a7fa65aa and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd161cc16a09f24; op2val:0x3ff7e3d0bfffc7b9; op3val:0x3fd9f413a7fa65aa; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 816, x18)

inst_306:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe31fd14064850 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa88296f8fd225 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x909192d2b92a8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe31fd14064850; op2val:0x401a88296f8fd225; op3val:0x3fe909192d2b92a8; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 832, x18)

inst_307:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe31fd14064850 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa88296f8fd225 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x909192d2b92a8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe31fd14064850; op2val:0x401a88296f8fd225; op3val:0x3fe909192d2b92a8; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 848, x18)

inst_308:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe31fd14064850 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa88296f8fd225 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x909192d2b92a8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe31fd14064850; op2val:0x401a88296f8fd225; op3val:0x3fe909192d2b92a8; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 864, x18)

inst_309:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe31fd14064850 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa88296f8fd225 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x909192d2b92a8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe31fd14064850; op2val:0x401a88296f8fd225; op3val:0x3fe909192d2b92a8; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 880, x18)

inst_310:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe31fd14064850 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa88296f8fd225 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x909192d2b92a8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe31fd14064850; op2val:0x401a88296f8fd225; op3val:0x3fe909192d2b92a8; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 896, x18)

inst_311:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1722eb5945782 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1766d2924fd51 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x30a72c023e4d2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1722eb5945782; op2val:0x3ff1766d2924fd51; op3val:0x3fd30a72c023e4d2; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 912, x18)

inst_312:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1722eb5945782 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1766d2924fd51 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x30a72c023e4d2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1722eb5945782; op2val:0x3ff1766d2924fd51; op3val:0x3fd30a72c023e4d2; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 928, x18)

inst_313:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1722eb5945782 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1766d2924fd51 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x30a72c023e4d2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1722eb5945782; op2val:0x3ff1766d2924fd51; op3val:0x3fd30a72c023e4d2; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 944, x18)

inst_314:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1722eb5945782 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1766d2924fd51 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x30a72c023e4d2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1722eb5945782; op2val:0x3ff1766d2924fd51; op3val:0x3fd30a72c023e4d2; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 960, x18)

inst_315:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1722eb5945782 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1766d2924fd51 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x30a72c023e4d2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1722eb5945782; op2val:0x3ff1766d2924fd51; op3val:0x3fd30a72c023e4d2; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 976, x18)

inst_316:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb12509ee3433b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1cfd7451f90cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe231ed6e8cedc and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb12509ee3433b; op2val:0x3ff1cfd7451f90cd; op3val:0x3fee231ed6e8cedc; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 992, x18)

inst_317:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb12509ee3433b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1cfd7451f90cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe231ed6e8cedc and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb12509ee3433b; op2val:0x3ff1cfd7451f90cd; op3val:0x3fee231ed6e8cedc; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1008, x18)

inst_318:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb12509ee3433b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1cfd7451f90cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe231ed6e8cedc and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb12509ee3433b; op2val:0x3ff1cfd7451f90cd; op3val:0x3fee231ed6e8cedc; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1024, x18)

inst_319:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb12509ee3433b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1cfd7451f90cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe231ed6e8cedc and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb12509ee3433b; op2val:0x3ff1cfd7451f90cd; op3val:0x3fee231ed6e8cedc; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1040, x18)

inst_320:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb12509ee3433b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1cfd7451f90cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe231ed6e8cedc and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb12509ee3433b; op2val:0x3ff1cfd7451f90cd; op3val:0x3fee231ed6e8cedc; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1056, x18)

inst_321:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x948e2edb7b64b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc2e5360274d40 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x64461373cc6d4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe948e2edb7b64b; op2val:0x3fec2e5360274d40; op3val:0x3fe64461373cc6d4; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1072, x18)

inst_322:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x948e2edb7b64b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc2e5360274d40 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x64461373cc6d4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe948e2edb7b64b; op2val:0x3fec2e5360274d40; op3val:0x3fe64461373cc6d4; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1088, x18)

inst_323:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x948e2edb7b64b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc2e5360274d40 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x64461373cc6d4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe948e2edb7b64b; op2val:0x3fec2e5360274d40; op3val:0x3fe64461373cc6d4; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1104, x18)

inst_324:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x948e2edb7b64b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc2e5360274d40 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x64461373cc6d4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe948e2edb7b64b; op2val:0x3fec2e5360274d40; op3val:0x3fe64461373cc6d4; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1120, x18)

inst_325:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x948e2edb7b64b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc2e5360274d40 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x64461373cc6d4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe948e2edb7b64b; op2val:0x3fec2e5360274d40; op3val:0x3fe64461373cc6d4; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1136, x18)

inst_326:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeddb692b7858e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x05b51bb26c762 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8de13c90551e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeddb692b7858e; op2val:0x3ff05b51bb26c762; op3val:0x3fef8de13c90551e; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1152, x18)

inst_327:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeddb692b7858e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x05b51bb26c762 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8de13c90551e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeddb692b7858e; op2val:0x3ff05b51bb26c762; op3val:0x3fef8de13c90551e; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1168, x18)

inst_328:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeddb692b7858e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x05b51bb26c762 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8de13c90551e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeddb692b7858e; op2val:0x3ff05b51bb26c762; op3val:0x3fef8de13c90551e; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1184, x18)

inst_329:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeddb692b7858e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x05b51bb26c762 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8de13c90551e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeddb692b7858e; op2val:0x3ff05b51bb26c762; op3val:0x3fef8de13c90551e; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1200, x18)

inst_330:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeddb692b7858e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x05b51bb26c762 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf8de13c90551e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeddb692b7858e; op2val:0x3ff05b51bb26c762; op3val:0x3fef8de13c90551e; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1216, x18)

inst_331:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xda553f5f63602 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca8ec0a0eff89 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa8d281c9f8123 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdda553f5f63602; op2val:0x3ffca8ec0a0eff89; op3val:0x3fea8d281c9f8123; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1232, x18)

inst_332:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xda553f5f63602 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca8ec0a0eff89 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa8d281c9f8123 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdda553f5f63602; op2val:0x3ffca8ec0a0eff89; op3val:0x3fea8d281c9f8123; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1248, x18)

inst_333:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xda553f5f63602 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca8ec0a0eff89 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa8d281c9f8123 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdda553f5f63602; op2val:0x3ffca8ec0a0eff89; op3val:0x3fea8d281c9f8123; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1264, x18)

inst_334:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xda553f5f63602 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca8ec0a0eff89 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa8d281c9f8123 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdda553f5f63602; op2val:0x3ffca8ec0a0eff89; op3val:0x3fea8d281c9f8123; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1280, x18)

inst_335:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xda553f5f63602 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca8ec0a0eff89 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa8d281c9f8123 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdda553f5f63602; op2val:0x3ffca8ec0a0eff89; op3val:0x3fea8d281c9f8123; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1296, x18)

inst_336:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf00d605d72788 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0ab6b88a0bc7f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0267fa9c5b56e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf00d605d72788; op2val:0x4010ab6b88a0bc7f; op3val:0x3fe0267fa9c5b56e; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1312, x18)

inst_337:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf00d605d72788 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0ab6b88a0bc7f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0267fa9c5b56e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf00d605d72788; op2val:0x4010ab6b88a0bc7f; op3val:0x3fe0267fa9c5b56e; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1328, x18)

inst_338:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf00d605d72788 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0ab6b88a0bc7f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0267fa9c5b56e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf00d605d72788; op2val:0x4010ab6b88a0bc7f; op3val:0x3fe0267fa9c5b56e; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1344, x18)

inst_339:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf00d605d72788 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0ab6b88a0bc7f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0267fa9c5b56e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf00d605d72788; op2val:0x4010ab6b88a0bc7f; op3val:0x3fe0267fa9c5b56e; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1360, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf00d605d72788 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0ab6b88a0bc7f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0267fa9c5b56e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf00d605d72788; op2val:0x4010ab6b88a0bc7f; op3val:0x3fe0267fa9c5b56e; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1376, x18)

inst_341:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83082d83b1d44 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x518bc07d0e43f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe510c5e464c2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd83082d83b1d44; op2val:0x400518bc07d0e43f; op3val:0x3fefe510c5e464c2; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1392, x18)

inst_342:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83082d83b1d44 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x518bc07d0e43f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe510c5e464c2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd83082d83b1d44; op2val:0x400518bc07d0e43f; op3val:0x3fefe510c5e464c2; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1408, x18)

inst_343:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83082d83b1d44 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x518bc07d0e43f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe510c5e464c2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd83082d83b1d44; op2val:0x400518bc07d0e43f; op3val:0x3fefe510c5e464c2; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1424, x18)

inst_344:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83082d83b1d44 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x518bc07d0e43f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe510c5e464c2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd83082d83b1d44; op2val:0x400518bc07d0e43f; op3val:0x3fefe510c5e464c2; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1440, x18)

inst_345:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83082d83b1d44 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x518bc07d0e43f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe510c5e464c2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd83082d83b1d44; op2val:0x400518bc07d0e43f; op3val:0x3fefe510c5e464c2; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1456, x18)

inst_346:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0334f9600ade2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x564b6fef8cac8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5a952701e2ad0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0334f9600ade2; op2val:0x3ff564b6fef8cac8; op3val:0x3fd5a952701e2ad0; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1472, x18)

inst_347:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0334f9600ade2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x564b6fef8cac8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5a952701e2ad0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0334f9600ade2; op2val:0x3ff564b6fef8cac8; op3val:0x3fd5a952701e2ad0; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1488, x18)

inst_348:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0334f9600ade2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x564b6fef8cac8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5a952701e2ad0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0334f9600ade2; op2val:0x3ff564b6fef8cac8; op3val:0x3fd5a952701e2ad0; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1504, x18)

inst_349:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0334f9600ade2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x564b6fef8cac8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5a952701e2ad0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0334f9600ade2; op2val:0x3ff564b6fef8cac8; op3val:0x3fd5a952701e2ad0; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1520, x18)

inst_350:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0334f9600ade2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x564b6fef8cac8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5a952701e2ad0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0334f9600ade2; op2val:0x3ff564b6fef8cac8; op3val:0x3fd5a952701e2ad0; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1536, x18)

inst_351:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x20670f9d80ef2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb1b01d638ddb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe894b95ff7ccb and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd20670f9d80ef2; op2val:0x400b1b01d638ddb3; op3val:0x3fee894b95ff7ccb; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1552, x18)

inst_352:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x20670f9d80ef2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb1b01d638ddb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe894b95ff7ccb and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd20670f9d80ef2; op2val:0x400b1b01d638ddb3; op3val:0x3fee894b95ff7ccb; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1568, x18)

inst_353:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x20670f9d80ef2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb1b01d638ddb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe894b95ff7ccb and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd20670f9d80ef2; op2val:0x400b1b01d638ddb3; op3val:0x3fee894b95ff7ccb; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1584, x18)

inst_354:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x20670f9d80ef2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb1b01d638ddb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe894b95ff7ccb and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd20670f9d80ef2; op2val:0x400b1b01d638ddb3; op3val:0x3fee894b95ff7ccb; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1600, x18)

inst_355:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x20670f9d80ef2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb1b01d638ddb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe894b95ff7ccb and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd20670f9d80ef2; op2val:0x400b1b01d638ddb3; op3val:0x3fee894b95ff7ccb; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1616, x18)

inst_356:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1816ca1c6eb32 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x195bd899914d1 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x33d580ee4cbe0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1816ca1c6eb32; op2val:0x3fa195bd899914d1; op3val:0x3f933d580ee4cbe0; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1632, x18)

inst_357:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1816ca1c6eb32 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x195bd899914d1 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x33d580ee4cbe0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1816ca1c6eb32; op2val:0x3fa195bd899914d1; op3val:0x3f933d580ee4cbe0; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1648, x18)

inst_358:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1816ca1c6eb32 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x195bd899914d1 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x33d580ee4cbe0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1816ca1c6eb32; op2val:0x3fa195bd899914d1; op3val:0x3f933d580ee4cbe0; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1664, x18)

inst_359:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1816ca1c6eb32 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x195bd899914d1 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x33d580ee4cbe0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1816ca1c6eb32; op2val:0x3fa195bd899914d1; op3val:0x3f933d580ee4cbe0; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1680, x18)

inst_360:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1816ca1c6eb32 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x195bd899914d1 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x33d580ee4cbe0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1816ca1c6eb32; op2val:0x3fa195bd899914d1; op3val:0x3f933d580ee4cbe0; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1696, x18)

inst_361:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd21feea7d7bb4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x04ccd4e2d0338 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xdadd637411c58 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd21feea7d7bb4; op2val:0x3fd04ccd4e2d0338; op3val:0x3fbdadd637411c58; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1712, x18)

inst_362:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd21feea7d7bb4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x04ccd4e2d0338 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xdadd637411c58 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd21feea7d7bb4; op2val:0x3fd04ccd4e2d0338; op3val:0x3fbdadd637411c58; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1728, x18)

inst_363:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd21feea7d7bb4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x04ccd4e2d0338 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xdadd637411c58 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd21feea7d7bb4; op2val:0x3fd04ccd4e2d0338; op3val:0x3fbdadd637411c58; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1744, x18)

inst_364:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd21feea7d7bb4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x04ccd4e2d0338 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xdadd637411c58 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd21feea7d7bb4; op2val:0x3fd04ccd4e2d0338; op3val:0x3fbdadd637411c58; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1760, x18)

inst_365:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd21feea7d7bb4 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x04ccd4e2d0338 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xdadd637411c58 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd21feea7d7bb4; op2val:0x3fd04ccd4e2d0338; op3val:0x3fbdadd637411c58; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1776, x18)

inst_366:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd527dd1cc27ca and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6d7ad37f30e31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ee5776d2a4eb and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd527dd1cc27ca; op2val:0x3ff6d7ad37f30e31; op3val:0x3fe4ee5776d2a4eb; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1792, x18)

inst_367:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd527dd1cc27ca and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6d7ad37f30e31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ee5776d2a4eb and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd527dd1cc27ca; op2val:0x3ff6d7ad37f30e31; op3val:0x3fe4ee5776d2a4eb; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1808, x18)

inst_368:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd527dd1cc27ca and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6d7ad37f30e31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ee5776d2a4eb and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd527dd1cc27ca; op2val:0x3ff6d7ad37f30e31; op3val:0x3fe4ee5776d2a4eb; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1824, x18)

inst_369:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd527dd1cc27ca and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6d7ad37f30e31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ee5776d2a4eb and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd527dd1cc27ca; op2val:0x3ff6d7ad37f30e31; op3val:0x3fe4ee5776d2a4eb; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1840, x18)

inst_370:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd527dd1cc27ca and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6d7ad37f30e31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ee5776d2a4eb and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd527dd1cc27ca; op2val:0x3ff6d7ad37f30e31; op3val:0x3fe4ee5776d2a4eb; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1856, x18)

inst_371:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1fc9952ad2d28 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x532caaade6494 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d4a270cb3b2b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1fc9952ad2d28; op2val:0x3ff532caaade6494; op3val:0x3fe7d4a270cb3b2b; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1872, x18)

inst_372:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1fc9952ad2d28 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x532caaade6494 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d4a270cb3b2b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1fc9952ad2d28; op2val:0x3ff532caaade6494; op3val:0x3fe7d4a270cb3b2b; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1888, x18)

inst_373:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1fc9952ad2d28 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x532caaade6494 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d4a270cb3b2b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1fc9952ad2d28; op2val:0x3ff532caaade6494; op3val:0x3fe7d4a270cb3b2b; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1904, x18)

inst_374:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1fc9952ad2d28 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x532caaade6494 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d4a270cb3b2b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1fc9952ad2d28; op2val:0x3ff532caaade6494; op3val:0x3fe7d4a270cb3b2b; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1920, x18)

inst_375:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1fc9952ad2d28 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x532caaade6494 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d4a270cb3b2b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1fc9952ad2d28; op2val:0x3ff532caaade6494; op3val:0x3fe7d4a270cb3b2b; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1936, x18)

inst_376:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x65c71065dc980 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9541317f0f601 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1b2f84d47e9d8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f865c71065dc980; op2val:0x4029541317f0f601; op3val:0x3fc1b2f84d47e9d8; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1952, x18)

inst_377:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x65c71065dc980 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9541317f0f601 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1b2f84d47e9d8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f865c71065dc980; op2val:0x4029541317f0f601; op3val:0x3fc1b2f84d47e9d8; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1968, x18)

inst_378:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x65c71065dc980 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9541317f0f601 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1b2f84d47e9d8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f865c71065dc980; op2val:0x4029541317f0f601; op3val:0x3fc1b2f84d47e9d8; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1984, x18)

inst_379:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x65c71065dc980 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9541317f0f601 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1b2f84d47e9d8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f865c71065dc980; op2val:0x4029541317f0f601; op3val:0x3fc1b2f84d47e9d8; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2000, x18)

inst_380:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x65c71065dc980 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9541317f0f601 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1b2f84d47e9d8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f865c71065dc980; op2val:0x4029541317f0f601; op3val:0x3fc1b2f84d47e9d8; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_381:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2e13826695a58 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64aa7000f4ad8 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa4dc3e74e9fdc and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2e13826695a58; op2val:0x3fe64aa7000f4ad8; op3val:0x3fca4dc3e74e9fdc; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 0, x18)

inst_382:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2e13826695a58 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64aa7000f4ad8 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa4dc3e74e9fdc and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2e13826695a58; op2val:0x3fe64aa7000f4ad8; op3val:0x3fca4dc3e74e9fdc; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 16, x18)

inst_383:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2e13826695a58 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64aa7000f4ad8 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa4dc3e74e9fdc and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2e13826695a58; op2val:0x3fe64aa7000f4ad8; op3val:0x3fca4dc3e74e9fdc; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 32, x18)

inst_384:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2e13826695a58 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64aa7000f4ad8 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa4dc3e74e9fdc and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2e13826695a58; op2val:0x3fe64aa7000f4ad8; op3val:0x3fca4dc3e74e9fdc; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 48, x18)

inst_385:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2e13826695a58 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64aa7000f4ad8 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa4dc3e74e9fdc and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2e13826695a58; op2val:0x3fe64aa7000f4ad8; op3val:0x3fca4dc3e74e9fdc; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 64, x18)

inst_386:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbf773a164ce0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe414f79a5a6d1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc2036926735eb and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedbf773a164ce0; op2val:0x3fee414f79a5a6d1; op3val:0x3fec2036926735eb; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 80, x18)

inst_387:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbf773a164ce0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe414f79a5a6d1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc2036926735eb and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedbf773a164ce0; op2val:0x3fee414f79a5a6d1; op3val:0x3fec2036926735eb; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 96, x18)

inst_388:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbf773a164ce0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe414f79a5a6d1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc2036926735eb and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedbf773a164ce0; op2val:0x3fee414f79a5a6d1; op3val:0x3fec2036926735eb; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 112, x18)

inst_389:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbf773a164ce0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe414f79a5a6d1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc2036926735eb and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedbf773a164ce0; op2val:0x3fee414f79a5a6d1; op3val:0x3fec2036926735eb; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 128, x18)

inst_390:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbf773a164ce0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe414f79a5a6d1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc2036926735eb and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedbf773a164ce0; op2val:0x3fee414f79a5a6d1; op3val:0x3fec2036926735eb; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 144, x18)

inst_391:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x494dd4b96e2d8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9ddcbb31ee340 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a2f3fef05664 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd494dd4b96e2d8; op2val:0x3ff9ddcbb31ee340; op3val:0x3fe0a2f3fef05664; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 160, x18)

inst_392:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x494dd4b96e2d8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9ddcbb31ee340 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a2f3fef05664 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd494dd4b96e2d8; op2val:0x3ff9ddcbb31ee340; op3val:0x3fe0a2f3fef05664; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 176, x18)

inst_393:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x494dd4b96e2d8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9ddcbb31ee340 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a2f3fef05664 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd494dd4b96e2d8; op2val:0x3ff9ddcbb31ee340; op3val:0x3fe0a2f3fef05664; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 192, x18)

inst_394:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x494dd4b96e2d8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9ddcbb31ee340 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a2f3fef05664 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd494dd4b96e2d8; op2val:0x3ff9ddcbb31ee340; op3val:0x3fe0a2f3fef05664; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 208, x18)

inst_395:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x494dd4b96e2d8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9ddcbb31ee340 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a2f3fef05664 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd494dd4b96e2d8; op2val:0x3ff9ddcbb31ee340; op3val:0x3fe0a2f3fef05664; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 224, x18)

inst_396:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x81ad61d700e80 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4b97acb7a28c5 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xf38faefad98e0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f781ad61d700e80; op2val:0x4014b97acb7a28c5; op3val:0x3f9f38faefad98e0; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 240, x18)

inst_397:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x81ad61d700e80 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4b97acb7a28c5 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xf38faefad98e0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f781ad61d700e80; op2val:0x4014b97acb7a28c5; op3val:0x3f9f38faefad98e0; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 256, x18)

inst_398:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x81ad61d700e80 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4b97acb7a28c5 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xf38faefad98e0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f781ad61d700e80; op2val:0x4014b97acb7a28c5; op3val:0x3f9f38faefad98e0; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 272, x18)

inst_399:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x81ad61d700e80 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4b97acb7a28c5 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xf38faefad98e0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f781ad61d700e80; op2val:0x4014b97acb7a28c5; op3val:0x3f9f38faefad98e0; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 288, x18)

inst_400:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x81ad61d700e80 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4b97acb7a28c5 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xf38faefad98e0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f781ad61d700e80; op2val:0x4014b97acb7a28c5; op3val:0x3f9f38faefad98e0; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 304, x18)

inst_401:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1bc4be6818665 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc824f5560b86e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf99f6ac6dd324 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1bc4be6818665; op2val:0x3ffc824f5560b86e; op3val:0x3fef99f6ac6dd324; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 320, x18)

inst_402:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1bc4be6818665 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc824f5560b86e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf99f6ac6dd324 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1bc4be6818665; op2val:0x3ffc824f5560b86e; op3val:0x3fef99f6ac6dd324; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 336, x18)

inst_403:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1bc4be6818665 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc824f5560b86e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf99f6ac6dd324 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1bc4be6818665; op2val:0x3ffc824f5560b86e; op3val:0x3fef99f6ac6dd324; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 352, x18)

inst_404:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1bc4be6818665 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc824f5560b86e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf99f6ac6dd324 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1bc4be6818665; op2val:0x3ffc824f5560b86e; op3val:0x3fef99f6ac6dd324; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 368, x18)

inst_405:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1bc4be6818665 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc824f5560b86e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf99f6ac6dd324 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1bc4be6818665; op2val:0x3ffc824f5560b86e; op3val:0x3fef99f6ac6dd324; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 384, x18)

inst_406:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4badefd9616c8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6220ad27f8d27 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcad0dbc0e8dad and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4badefd9616c8; op2val:0x4016220ad27f8d27; op3val:0x3fecad0dbc0e8dad; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 400, x18)

inst_407:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4badefd9616c8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6220ad27f8d27 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcad0dbc0e8dad and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4badefd9616c8; op2val:0x4016220ad27f8d27; op3val:0x3fecad0dbc0e8dad; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 416, x18)

inst_408:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4badefd9616c8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6220ad27f8d27 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcad0dbc0e8dad and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4badefd9616c8; op2val:0x4016220ad27f8d27; op3val:0x3fecad0dbc0e8dad; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 432, x18)

inst_409:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4badefd9616c8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6220ad27f8d27 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcad0dbc0e8dad and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4badefd9616c8; op2val:0x4016220ad27f8d27; op3val:0x3fecad0dbc0e8dad; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 448, x18)

inst_410:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4badefd9616c8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6220ad27f8d27 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcad0dbc0e8dad and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4badefd9616c8; op2val:0x4016220ad27f8d27; op3val:0x3fecad0dbc0e8dad; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 464, x18)

inst_411:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf619e38378434 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe8fb23321392e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdf86f50e385a4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef619e38378434; op2val:0x3fde8fb23321392e; op3val:0x3fddf86f50e385a4; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 480, x18)

inst_412:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf619e38378434 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe8fb23321392e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdf86f50e385a4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef619e38378434; op2val:0x3fde8fb23321392e; op3val:0x3fddf86f50e385a4; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 496, x18)

inst_413:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf619e38378434 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe8fb23321392e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdf86f50e385a4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef619e38378434; op2val:0x3fde8fb23321392e; op3val:0x3fddf86f50e385a4; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 512, x18)

inst_414:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf619e38378434 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe8fb23321392e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdf86f50e385a4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef619e38378434; op2val:0x3fde8fb23321392e; op3val:0x3fddf86f50e385a4; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 528, x18)

inst_415:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf619e38378434 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe8fb23321392e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdf86f50e385a4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef619e38378434; op2val:0x3fde8fb23321392e; op3val:0x3fddf86f50e385a4; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 544, x18)

inst_416:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fdd5d9063fad and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1f2468c92b50d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x30efd64d99356 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fdd5d9063fad; op2val:0x3ff1f2468c92b50d; op3val:0x3fe30efd64d99356; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 560, x18)

inst_417:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fdd5d9063fad and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1f2468c92b50d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x30efd64d99356 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fdd5d9063fad; op2val:0x3ff1f2468c92b50d; op3val:0x3fe30efd64d99356; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 576, x18)

inst_418:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fdd5d9063fad and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1f2468c92b50d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x30efd64d99356 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fdd5d9063fad; op2val:0x3ff1f2468c92b50d; op3val:0x3fe30efd64d99356; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 592, x18)

inst_419:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fdd5d9063fad and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1f2468c92b50d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x30efd64d99356 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fdd5d9063fad; op2val:0x3ff1f2468c92b50d; op3val:0x3fe30efd64d99356; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 608, x18)

inst_420:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fdd5d9063fad and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1f2468c92b50d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x30efd64d99356 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fdd5d9063fad; op2val:0x3ff1f2468c92b50d; op3val:0x3fe30efd64d99356; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 624, x18)

inst_421:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb49433e84bab8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x8f8a758950ee5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x54af8e9e791b6 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb49433e84bab8; op2val:0x3fd8f8a758950ee5; op3val:0x3fd54af8e9e791b6; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 640, x18)

inst_422:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb49433e84bab8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x8f8a758950ee5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x54af8e9e791b6 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb49433e84bab8; op2val:0x3fd8f8a758950ee5; op3val:0x3fd54af8e9e791b6; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 656, x18)

inst_423:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb49433e84bab8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x8f8a758950ee5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x54af8e9e791b6 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb49433e84bab8; op2val:0x3fd8f8a758950ee5; op3val:0x3fd54af8e9e791b6; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 672, x18)

inst_424:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb49433e84bab8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x8f8a758950ee5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x54af8e9e791b6 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb49433e84bab8; op2val:0x3fd8f8a758950ee5; op3val:0x3fd54af8e9e791b6; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 688, x18)
addi x16,x16,2040

inst_425:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb49433e84bab8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x8f8a758950ee5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x54af8e9e791b6 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb49433e84bab8; op2val:0x3fd8f8a758950ee5; op3val:0x3fd54af8e9e791b6; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 704, x18)

inst_426:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40f21d76ea1e3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x112c27406b2d0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x56798c3e857c8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40f21d76ea1e3; op2val:0x3fd112c27406b2d0; op3val:0x3fc56798c3e857c8; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 720, x18)

inst_427:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40f21d76ea1e3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x112c27406b2d0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x56798c3e857c8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40f21d76ea1e3; op2val:0x3fd112c27406b2d0; op3val:0x3fc56798c3e857c8; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 736, x18)

inst_428:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40f21d76ea1e3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x112c27406b2d0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x56798c3e857c8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40f21d76ea1e3; op2val:0x3fd112c27406b2d0; op3val:0x3fc56798c3e857c8; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 752, x18)

inst_429:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40f21d76ea1e3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x112c27406b2d0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x56798c3e857c8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40f21d76ea1e3; op2val:0x3fd112c27406b2d0; op3val:0x3fc56798c3e857c8; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 768, x18)

inst_430:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40f21d76ea1e3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x112c27406b2d0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x56798c3e857c8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40f21d76ea1e3; op2val:0x3fd112c27406b2d0; op3val:0x3fc56798c3e857c8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 784, x18)

inst_431:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcbcfca50cc95e and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x76ce5c2521c31 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x509a1c241b248 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecbcfca50cc95e; op2val:0x3fc76ce5c2521c31; op3val:0x3fc509a1c241b248; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 800, x18)

inst_432:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcbcfca50cc95e and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x76ce5c2521c31 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x509a1c241b248 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecbcfca50cc95e; op2val:0x3fc76ce5c2521c31; op3val:0x3fc509a1c241b248; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 816, x18)

inst_433:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcbcfca50cc95e and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x76ce5c2521c31 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x509a1c241b248 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecbcfca50cc95e; op2val:0x3fc76ce5c2521c31; op3val:0x3fc509a1c241b248; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 832, x18)

inst_434:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcbcfca50cc95e and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x76ce5c2521c31 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x509a1c241b248 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecbcfca50cc95e; op2val:0x3fc76ce5c2521c31; op3val:0x3fc509a1c241b248; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 848, x18)

inst_435:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcbcfca50cc95e and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x76ce5c2521c31 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x509a1c241b248 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecbcfca50cc95e; op2val:0x3fc76ce5c2521c31; op3val:0x3fc509a1c241b248; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 864, x18)

inst_436:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b5b05443f732 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x38b115e720279 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x81311354ffb0a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b5b05443f732; op2val:0x3fe38b115e720279; op3val:0x3fd81311354ffb0a; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 880, x18)

inst_437:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b5b05443f732 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x38b115e720279 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x81311354ffb0a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b5b05443f732; op2val:0x3fe38b115e720279; op3val:0x3fd81311354ffb0a; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 896, x18)

inst_438:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b5b05443f732 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x38b115e720279 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x81311354ffb0a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b5b05443f732; op2val:0x3fe38b115e720279; op3val:0x3fd81311354ffb0a; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 912, x18)

inst_439:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b5b05443f732 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x38b115e720279 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x81311354ffb0a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b5b05443f732; op2val:0x3fe38b115e720279; op3val:0x3fd81311354ffb0a; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 928, x18)

inst_440:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b5b05443f732 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x38b115e720279 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x81311354ffb0a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b5b05443f732; op2val:0x3fe38b115e720279; op3val:0x3fd81311354ffb0a; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 944, x18)

inst_441:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73600106e1897 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x897158e2cee55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1d6167f305c26 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73600106e1897; op2val:0x3fd897158e2cee55; op3val:0x3fd1d6167f305c26; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 960, x18)

inst_442:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73600106e1897 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x897158e2cee55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1d6167f305c26 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73600106e1897; op2val:0x3fd897158e2cee55; op3val:0x3fd1d6167f305c26; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 976, x18)

inst_443:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73600106e1897 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x897158e2cee55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1d6167f305c26 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73600106e1897; op2val:0x3fd897158e2cee55; op3val:0x3fd1d6167f305c26; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 992, x18)

inst_444:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73600106e1897 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x897158e2cee55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1d6167f305c26 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73600106e1897; op2val:0x3fd897158e2cee55; op3val:0x3fd1d6167f305c26; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1008, x18)

inst_445:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73600106e1897 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x897158e2cee55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1d6167f305c26 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73600106e1897; op2val:0x3fd897158e2cee55; op3val:0x3fd1d6167f305c26; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1024, x18)

inst_446:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16a89d6ba44db and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb98ac0da36867 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe09f7fff47111 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16a89d6ba44db; op2val:0x3ffb98ac0da36867; op3val:0x3fee09f7fff47111; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1040, x18)

inst_447:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16a89d6ba44db and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb98ac0da36867 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe09f7fff47111 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16a89d6ba44db; op2val:0x3ffb98ac0da36867; op3val:0x3fee09f7fff47111; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1056, x18)

inst_448:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16a89d6ba44db and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb98ac0da36867 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe09f7fff47111 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16a89d6ba44db; op2val:0x3ffb98ac0da36867; op3val:0x3fee09f7fff47111; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1072, x18)

inst_449:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16a89d6ba44db and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb98ac0da36867 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe09f7fff47111 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16a89d6ba44db; op2val:0x3ffb98ac0da36867; op3val:0x3fee09f7fff47111; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1088, x18)

inst_450:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16a89d6ba44db and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb98ac0da36867 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe09f7fff47111 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16a89d6ba44db; op2val:0x3ffb98ac0da36867; op3val:0x3fee09f7fff47111; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1104, x18)

inst_451:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0b41d614d395 and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0xadeea251f4089 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xa1166bd02df80 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0b41d614d395; op2val:0x3f7adeea251f4089; op3val:0x3f7a1166bd02df80; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1120, x18)

inst_452:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0b41d614d395 and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0xadeea251f4089 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xa1166bd02df80 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0b41d614d395; op2val:0x3f7adeea251f4089; op3val:0x3f7a1166bd02df80; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1136, x18)

inst_453:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0b41d614d395 and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0xadeea251f4089 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xa1166bd02df80 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0b41d614d395; op2val:0x3f7adeea251f4089; op3val:0x3f7a1166bd02df80; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1152, x18)

inst_454:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0b41d614d395 and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0xadeea251f4089 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xa1166bd02df80 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0b41d614d395; op2val:0x3f7adeea251f4089; op3val:0x3f7a1166bd02df80; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1168, x18)

inst_455:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0b41d614d395 and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0xadeea251f4089 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xa1166bd02df80 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0b41d614d395; op2val:0x3f7adeea251f4089; op3val:0x3f7a1166bd02df80; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1184, x18)

inst_456:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff37023c16bab and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xe26a414c97520 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xe1ace0b0fce00 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff37023c16bab; op2val:0x3fbe26a414c97520; op3val:0x3fbe1ace0b0fce00; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1200, x18)

inst_457:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff37023c16bab and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xe26a414c97520 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xe1ace0b0fce00 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff37023c16bab; op2val:0x3fbe26a414c97520; op3val:0x3fbe1ace0b0fce00; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1216, x18)

inst_458:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff37023c16bab and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xe26a414c97520 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xe1ace0b0fce00 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff37023c16bab; op2val:0x3fbe26a414c97520; op3val:0x3fbe1ace0b0fce00; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1232, x18)

inst_459:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff37023c16bab and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xe26a414c97520 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xe1ace0b0fce00 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff37023c16bab; op2val:0x3fbe26a414c97520; op3val:0x3fbe1ace0b0fce00; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1248, x18)

inst_460:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff37023c16bab and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xe26a414c97520 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xe1ace0b0fce00 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff37023c16bab; op2val:0x3fbe26a414c97520; op3val:0x3fbe1ace0b0fce00; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1264, x18)

inst_461:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x69c8e1dd0a5f0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0709fe2da1c7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x73bb7f4fd3778 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb69c8e1dd0a5f0; op2val:0x4020709fe2da1c7b; op3val:0x3fe73bb7f4fd3778; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1280, x18)

inst_462:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x69c8e1dd0a5f0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0709fe2da1c7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x73bb7f4fd3778 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb69c8e1dd0a5f0; op2val:0x4020709fe2da1c7b; op3val:0x3fe73bb7f4fd3778; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1296, x18)

inst_463:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x69c8e1dd0a5f0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0709fe2da1c7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x73bb7f4fd3778 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb69c8e1dd0a5f0; op2val:0x4020709fe2da1c7b; op3val:0x3fe73bb7f4fd3778; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1312, x18)

inst_464:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x69c8e1dd0a5f0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0709fe2da1c7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x73bb7f4fd3778 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb69c8e1dd0a5f0; op2val:0x4020709fe2da1c7b; op3val:0x3fe73bb7f4fd3778; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1328, x18)

inst_465:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x69c8e1dd0a5f0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0709fe2da1c7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x73bb7f4fd3778 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb69c8e1dd0a5f0; op2val:0x4020709fe2da1c7b; op3val:0x3fe73bb7f4fd3778; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1344, x18)

inst_466:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd987b557882a0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9e1a4afa79843 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7efd0cde4167e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d987b557882a0; op2val:0x4029e1a4afa79843; op3val:0x3fd7efd0cde4167e; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1360, x18)

inst_467:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd987b557882a0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9e1a4afa79843 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7efd0cde4167e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d987b557882a0; op2val:0x4029e1a4afa79843; op3val:0x3fd7efd0cde4167e; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1376, x18)

inst_468:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd987b557882a0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9e1a4afa79843 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7efd0cde4167e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d987b557882a0; op2val:0x4029e1a4afa79843; op3val:0x3fd7efd0cde4167e; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1392, x18)

inst_469:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd987b557882a0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9e1a4afa79843 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7efd0cde4167e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d987b557882a0; op2val:0x4029e1a4afa79843; op3val:0x3fd7efd0cde4167e; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1408, x18)

inst_470:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd987b557882a0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9e1a4afa79843 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7efd0cde4167e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d987b557882a0; op2val:0x4029e1a4afa79843; op3val:0x3fd7efd0cde4167e; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1424, x18)

inst_471:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb65ee1d07fb8e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3e27200f05a28 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x10666ded7d6d4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb65ee1d07fb8e; op2val:0x3fe3e27200f05a28; op3val:0x3fd10666ded7d6d4; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1440, x18)

inst_472:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb65ee1d07fb8e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3e27200f05a28 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x10666ded7d6d4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb65ee1d07fb8e; op2val:0x3fe3e27200f05a28; op3val:0x3fd10666ded7d6d4; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1456, x18)

inst_473:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb65ee1d07fb8e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3e27200f05a28 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x10666ded7d6d4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb65ee1d07fb8e; op2val:0x3fe3e27200f05a28; op3val:0x3fd10666ded7d6d4; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1472, x18)

inst_474:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb65ee1d07fb8e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3e27200f05a28 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x10666ded7d6d4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb65ee1d07fb8e; op2val:0x3fe3e27200f05a28; op3val:0x3fd10666ded7d6d4; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1488, x18)

inst_475:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb65ee1d07fb8e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3e27200f05a28 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x10666ded7d6d4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb65ee1d07fb8e; op2val:0x3fe3e27200f05a28; op3val:0x3fd10666ded7d6d4; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1504, x18)

inst_476:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16c0f201d8250 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x711042f6528dc and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x91ddd1cdbe5c0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16c0f201d8250; op2val:0x3fd711042f6528dc; op3val:0x3fc91ddd1cdbe5c0; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1520, x18)

inst_477:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16c0f201d8250 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x711042f6528dc and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x91ddd1cdbe5c0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16c0f201d8250; op2val:0x3fd711042f6528dc; op3val:0x3fc91ddd1cdbe5c0; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1536, x18)

inst_478:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16c0f201d8250 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x711042f6528dc and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x91ddd1cdbe5c0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16c0f201d8250; op2val:0x3fd711042f6528dc; op3val:0x3fc91ddd1cdbe5c0; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1552, x18)

inst_479:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16c0f201d8250 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x711042f6528dc and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x91ddd1cdbe5c0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16c0f201d8250; op2val:0x3fd711042f6528dc; op3val:0x3fc91ddd1cdbe5c0; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1568, x18)

inst_480:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16c0f201d8250 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x711042f6528dc and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x91ddd1cdbe5c0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16c0f201d8250; op2val:0x3fd711042f6528dc; op3val:0x3fc91ddd1cdbe5c0; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1584, x18)

inst_481:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc76af8d181cfc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xbc3b0b0de2c98 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8b23486e80ffe and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec76af8d181cfc; op2val:0x3fdbc3b0b0de2c98; op3val:0x3fd8b23486e80ffe; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1600, x18)

inst_482:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc76af8d181cfc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xbc3b0b0de2c98 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8b23486e80ffe and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec76af8d181cfc; op2val:0x3fdbc3b0b0de2c98; op3val:0x3fd8b23486e80ffe; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1616, x18)

inst_483:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc76af8d181cfc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xbc3b0b0de2c98 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8b23486e80ffe and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec76af8d181cfc; op2val:0x3fdbc3b0b0de2c98; op3val:0x3fd8b23486e80ffe; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1632, x18)

inst_484:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc76af8d181cfc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xbc3b0b0de2c98 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8b23486e80ffe and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec76af8d181cfc; op2val:0x3fdbc3b0b0de2c98; op3val:0x3fd8b23486e80ffe; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1648, x18)

inst_485:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc76af8d181cfc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xbc3b0b0de2c98 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8b23486e80ffe and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec76af8d181cfc; op2val:0x3fdbc3b0b0de2c98; op3val:0x3fd8b23486e80ffe; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1664, x18)

inst_486:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0b4f120943222 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x09e0c2e0f16fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x159f8a582b8e1 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0b4f120943222; op2val:0x40009e0c2e0f16fd; op3val:0x3fe159f8a582b8e1; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1680, x18)

inst_487:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0b4f120943222 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x09e0c2e0f16fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x159f8a582b8e1 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0b4f120943222; op2val:0x40009e0c2e0f16fd; op3val:0x3fe159f8a582b8e1; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1696, x18)

inst_488:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0b4f120943222 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x09e0c2e0f16fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x159f8a582b8e1 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0b4f120943222; op2val:0x40009e0c2e0f16fd; op3val:0x3fe159f8a582b8e1; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1712, x18)

inst_489:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0b4f120943222 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x09e0c2e0f16fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x159f8a582b8e1 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0b4f120943222; op2val:0x40009e0c2e0f16fd; op3val:0x3fe159f8a582b8e1; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1728, x18)

inst_490:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0b4f120943222 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x09e0c2e0f16fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x159f8a582b8e1 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0b4f120943222; op2val:0x40009e0c2e0f16fd; op3val:0x3fe159f8a582b8e1; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1744, x18)

inst_491:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7c065aefef96a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x83aa4db4551a4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1fbd35855b568 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7c065aefef96a; op2val:0x3fd83aa4db4551a4; op3val:0x3fc1fbd35855b568; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1760, x18)

inst_492:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7c065aefef96a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x83aa4db4551a4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1fbd35855b568 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7c065aefef96a; op2val:0x3fd83aa4db4551a4; op3val:0x3fc1fbd35855b568; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1776, x18)

inst_493:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7c065aefef96a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x83aa4db4551a4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1fbd35855b568 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7c065aefef96a; op2val:0x3fd83aa4db4551a4; op3val:0x3fc1fbd35855b568; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1792, x18)

inst_494:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7c065aefef96a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x83aa4db4551a4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1fbd35855b568 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7c065aefef96a; op2val:0x3fd83aa4db4551a4; op3val:0x3fc1fbd35855b568; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1808, x18)

inst_495:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7c065aefef96a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x83aa4db4551a4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1fbd35855b568 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7c065aefef96a; op2val:0x3fd83aa4db4551a4; op3val:0x3fc1fbd35855b568; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1824, x18)

inst_496:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa654f4023bad6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfa79e34521fb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa1c67fb1902b0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea654f4023bad6; op2val:0x3fefa79e34521fb3; op3val:0x3fea1c67fb1902b0; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1840, x18)

inst_497:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa654f4023bad6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfa79e34521fb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa1c67fb1902b0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea654f4023bad6; op2val:0x3fefa79e34521fb3; op3val:0x3fea1c67fb1902b0; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1856, x18)

inst_498:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa654f4023bad6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfa79e34521fb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa1c67fb1902b0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea654f4023bad6; op2val:0x3fefa79e34521fb3; op3val:0x3fea1c67fb1902b0; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1872, x18)

inst_499:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa654f4023bad6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfa79e34521fb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa1c67fb1902b0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea654f4023bad6; op2val:0x3fefa79e34521fb3; op3val:0x3fea1c67fb1902b0; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1888, x18)

inst_500:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa654f4023bad6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfa79e34521fb3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa1c67fb1902b0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea654f4023bad6; op2val:0x3fefa79e34521fb3; op3val:0x3fea1c67fb1902b0; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1904, x18)

inst_501:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1690a317382ca and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x396656d35dbcb and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x55063382f4ef0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1690a317382ca; op2val:0x3fd396656d35dbcb; op3val:0x3fb55063382f4ef0; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1920, x18)

inst_502:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1690a317382ca and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x396656d35dbcb and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x55063382f4ef0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1690a317382ca; op2val:0x3fd396656d35dbcb; op3val:0x3fb55063382f4ef0; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1936, x18)

inst_503:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1690a317382ca and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x396656d35dbcb and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x55063382f4ef0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1690a317382ca; op2val:0x3fd396656d35dbcb; op3val:0x3fb55063382f4ef0; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1952, x18)

inst_504:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1690a317382ca and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x396656d35dbcb and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x55063382f4ef0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1690a317382ca; op2val:0x3fd396656d35dbcb; op3val:0x3fb55063382f4ef0; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1968, x18)

inst_505:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1690a317382ca and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x396656d35dbcb and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x55063382f4ef0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1690a317382ca; op2val:0x3fd396656d35dbcb; op3val:0x3fb55063382f4ef0; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1984, x18)

inst_506:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4c4484aa587ac and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c0d2dd31a09c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xaef9f701b0fca and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4c4484aa587ac; op2val:0x3ff4c0d2dd31a09c; op3val:0x3feaef9f701b0fca; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2000, x18)

inst_507:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4c4484aa587ac and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c0d2dd31a09c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xaef9f701b0fca and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4c4484aa587ac; op2val:0x3ff4c0d2dd31a09c; op3val:0x3feaef9f701b0fca; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_508:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4c4484aa587ac and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c0d2dd31a09c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xaef9f701b0fca and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4c4484aa587ac; op2val:0x3ff4c0d2dd31a09c; op3val:0x3feaef9f701b0fca; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4c4484aa587ac and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c0d2dd31a09c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xaef9f701b0fca and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4c4484aa587ac; op2val:0x3ff4c0d2dd31a09c; op3val:0x3feaef9f701b0fca; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 16, x18)
addi x16,x16,2040

inst_510:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4c4484aa587ac and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c0d2dd31a09c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xaef9f701b0fca and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4c4484aa587ac; op2val:0x3ff4c0d2dd31a09c; op3val:0x3feaef9f701b0fca; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 32, x18)

inst_511:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x57254e9f5d270 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4e458f7905430 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc00fe9f22b17b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd57254e9f5d270; op2val:0x4004e458f7905430; op3val:0x3fec00fe9f22b17b; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 48, x18)

inst_512:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x57254e9f5d270 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4e458f7905430 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc00fe9f22b17b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd57254e9f5d270; op2val:0x4004e458f7905430; op3val:0x3fec00fe9f22b17b; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 64, x18)

inst_513:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x57254e9f5d270 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4e458f7905430 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc00fe9f22b17b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd57254e9f5d270; op2val:0x4004e458f7905430; op3val:0x3fec00fe9f22b17b; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 80, x18)

inst_514:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x57254e9f5d270 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4e458f7905430 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc00fe9f22b17b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd57254e9f5d270; op2val:0x4004e458f7905430; op3val:0x3fec00fe9f22b17b; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 96, x18)

inst_515:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x57254e9f5d270 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4e458f7905430 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc00fe9f22b17b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd57254e9f5d270; op2val:0x4004e458f7905430; op3val:0x3fec00fe9f22b17b; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 112, x18)

inst_516:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd3a017fa76c8a and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x669a5924fe285 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x4785e95674f20 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed3a017fa76c8a; op2val:0x3f9669a5924fe285; op3val:0x3f94785e95674f20; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 128, x18)

inst_517:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd3a017fa76c8a and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x669a5924fe285 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x4785e95674f20 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed3a017fa76c8a; op2val:0x3f9669a5924fe285; op3val:0x3f94785e95674f20; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 144, x18)

inst_518:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd3a017fa76c8a and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x669a5924fe285 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x4785e95674f20 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed3a017fa76c8a; op2val:0x3f9669a5924fe285; op3val:0x3f94785e95674f20; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 160, x18)

inst_519:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd3a017fa76c8a and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x669a5924fe285 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x4785e95674f20 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed3a017fa76c8a; op2val:0x3f9669a5924fe285; op3val:0x3f94785e95674f20; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 176, x18)

inst_520:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd3a017fa76c8a and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x669a5924fe285 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x4785e95674f20 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed3a017fa76c8a; op2val:0x3f9669a5924fe285; op3val:0x3f94785e95674f20; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 192, x18)

inst_521:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fed819e0543e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6a1f6e69afc0a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc48d21084754c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fed819e0543e; op2val:0x3fe6a1f6e69afc0a; op3val:0x3fcc48d21084754c; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 208, x18)

inst_522:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fed819e0543e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6a1f6e69afc0a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc48d21084754c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fed819e0543e; op2val:0x3fe6a1f6e69afc0a; op3val:0x3fcc48d21084754c; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 224, x18)

inst_523:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fed819e0543e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6a1f6e69afc0a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc48d21084754c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fed819e0543e; op2val:0x3fe6a1f6e69afc0a; op3val:0x3fcc48d21084754c; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 240, x18)

inst_524:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fed819e0543e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6a1f6e69afc0a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc48d21084754c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fed819e0543e; op2val:0x3fe6a1f6e69afc0a; op3val:0x3fcc48d21084754c; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 256, x18)

inst_525:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fed819e0543e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6a1f6e69afc0a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc48d21084754c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fed819e0543e; op2val:0x3fe6a1f6e69afc0a; op3val:0x3fcc48d21084754c; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 272, x18)

inst_526:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfabd4ebf2ad70 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca8cd03d1e9a8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5d6b54def6d9 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfabd4ebf2ad70; op2val:0x3ffca8cd03d1e9a8; op3val:0x3fec5d6b54def6d9; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 288, x18)

inst_527:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfabd4ebf2ad70 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca8cd03d1e9a8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5d6b54def6d9 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfabd4ebf2ad70; op2val:0x3ffca8cd03d1e9a8; op3val:0x3fec5d6b54def6d9; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 304, x18)

inst_528:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfabd4ebf2ad70 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca8cd03d1e9a8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5d6b54def6d9 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfabd4ebf2ad70; op2val:0x3ffca8cd03d1e9a8; op3val:0x3fec5d6b54def6d9; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 320, x18)

inst_529:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfabd4ebf2ad70 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca8cd03d1e9a8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5d6b54def6d9 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfabd4ebf2ad70; op2val:0x3ffca8cd03d1e9a8; op3val:0x3fec5d6b54def6d9; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 336, x18)

inst_530:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfabd4ebf2ad70 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca8cd03d1e9a8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5d6b54def6d9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfabd4ebf2ad70; op2val:0x3ffca8cd03d1e9a8; op3val:0x3fec5d6b54def6d9; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 352, x18)

inst_531:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f11f58160e72 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x81c29c07fd297 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0943ccb85c2d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1f11f58160e72; op2val:0x40081c29c07fd297; op3val:0x3feb0943ccb85c2d; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 368, x18)

inst_532:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f11f58160e72 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x81c29c07fd297 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0943ccb85c2d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1f11f58160e72; op2val:0x40081c29c07fd297; op3val:0x3feb0943ccb85c2d; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 384, x18)

inst_533:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f11f58160e72 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x81c29c07fd297 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0943ccb85c2d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1f11f58160e72; op2val:0x40081c29c07fd297; op3val:0x3feb0943ccb85c2d; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 400, x18)

inst_534:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f11f58160e72 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x81c29c07fd297 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0943ccb85c2d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1f11f58160e72; op2val:0x40081c29c07fd297; op3val:0x3feb0943ccb85c2d; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 416, x18)

inst_535:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f11f58160e72 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x81c29c07fd297 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0943ccb85c2d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1f11f58160e72; op2val:0x40081c29c07fd297; op3val:0x3feb0943ccb85c2d; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 432, x18)

inst_536:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7fb9bda4e751 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc856b9693b8ce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x96695331bd7e4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec7fb9bda4e751; op2val:0x3fdc856b9693b8ce; op3val:0x3fd96695331bd7e4; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 448, x18)

inst_537:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7fb9bda4e751 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc856b9693b8ce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x96695331bd7e4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec7fb9bda4e751; op2val:0x3fdc856b9693b8ce; op3val:0x3fd96695331bd7e4; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 464, x18)

inst_538:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7fb9bda4e751 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc856b9693b8ce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x96695331bd7e4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec7fb9bda4e751; op2val:0x3fdc856b9693b8ce; op3val:0x3fd96695331bd7e4; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 480, x18)

inst_539:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7fb9bda4e751 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc856b9693b8ce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x96695331bd7e4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec7fb9bda4e751; op2val:0x3fdc856b9693b8ce; op3val:0x3fd96695331bd7e4; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 496, x18)

inst_540:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7fb9bda4e751 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc856b9693b8ce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x96695331bd7e4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec7fb9bda4e751; op2val:0x3fdc856b9693b8ce; op3val:0x3fd96695331bd7e4; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 512, x18)

inst_541:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xddd671af42724 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdc76904032308 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbcac04bd5cc94 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feddd671af42724; op2val:0x3fedc76904032308; op3val:0x3febcac04bd5cc94; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 528, x18)

inst_542:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xddd671af42724 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdc76904032308 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbcac04bd5cc94 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feddd671af42724; op2val:0x3fedc76904032308; op3val:0x3febcac04bd5cc94; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 544, x18)

inst_543:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xddd671af42724 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdc76904032308 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbcac04bd5cc94 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feddd671af42724; op2val:0x3fedc76904032308; op3val:0x3febcac04bd5cc94; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 560, x18)

inst_544:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xddd671af42724 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdc76904032308 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbcac04bd5cc94 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feddd671af42724; op2val:0x3fedc76904032308; op3val:0x3febcac04bd5cc94; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 576, x18)

inst_545:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xddd671af42724 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdc76904032308 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbcac04bd5cc94 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feddd671af42724; op2val:0x3fedc76904032308; op3val:0x3febcac04bd5cc94; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 592, x18)

inst_546:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x66f87c2b09628 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x275a2083544cb and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9e26b80875d3c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd66f87c2b09628; op2val:0x3fe275a2083544cb; op3val:0x3fc9e26b80875d3c; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 608, x18)

inst_547:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x66f87c2b09628 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x275a2083544cb and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9e26b80875d3c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd66f87c2b09628; op2val:0x3fe275a2083544cb; op3val:0x3fc9e26b80875d3c; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 624, x18)

inst_548:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x66f87c2b09628 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x275a2083544cb and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9e26b80875d3c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd66f87c2b09628; op2val:0x3fe275a2083544cb; op3val:0x3fc9e26b80875d3c; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 640, x18)

inst_549:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x66f87c2b09628 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x275a2083544cb and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9e26b80875d3c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd66f87c2b09628; op2val:0x3fe275a2083544cb; op3val:0x3fc9e26b80875d3c; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 656, x18)

inst_550:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x66f87c2b09628 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x275a2083544cb and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9e26b80875d3c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd66f87c2b09628; op2val:0x3fe275a2083544cb; op3val:0x3fc9e26b80875d3c; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 672, x18)

inst_551:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa21e33ce1ff66 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4cf9df696f979 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0feba3ba1c5b8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda21e33ce1ff66; op2val:0x3fd4cf9df696f979; op3val:0x3fc0feba3ba1c5b8; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 688, x18)

inst_552:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa21e33ce1ff66 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4cf9df696f979 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0feba3ba1c5b8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda21e33ce1ff66; op2val:0x3fd4cf9df696f979; op3val:0x3fc0feba3ba1c5b8; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 704, x18)

inst_553:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa21e33ce1ff66 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4cf9df696f979 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0feba3ba1c5b8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda21e33ce1ff66; op2val:0x3fd4cf9df696f979; op3val:0x3fc0feba3ba1c5b8; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 720, x18)

inst_554:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa21e33ce1ff66 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4cf9df696f979 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0feba3ba1c5b8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda21e33ce1ff66; op2val:0x3fd4cf9df696f979; op3val:0x3fc0feba3ba1c5b8; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 736, x18)

inst_555:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa21e33ce1ff66 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4cf9df696f979 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0feba3ba1c5b8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda21e33ce1ff66; op2val:0x3fd4cf9df696f979; op3val:0x3fc0feba3ba1c5b8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 752, x18)

inst_556:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x6e2ab57b59a00 and fs2 == 0 and fe2 == 0x403 and fm2 == 0xc54fb75a805c3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4431cc49a0808 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f76e2ab57b59a00; op2val:0x403c54fb75a805c3; op3val:0x3fc4431cc49a0808; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 768, x18)

inst_557:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x6e2ab57b59a00 and fs2 == 0 and fe2 == 0x403 and fm2 == 0xc54fb75a805c3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4431cc49a0808 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f76e2ab57b59a00; op2val:0x403c54fb75a805c3; op3val:0x3fc4431cc49a0808; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 784, x18)

inst_558:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x6e2ab57b59a00 and fs2 == 0 and fe2 == 0x403 and fm2 == 0xc54fb75a805c3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4431cc49a0808 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f76e2ab57b59a00; op2val:0x403c54fb75a805c3; op3val:0x3fc4431cc49a0808; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 800, x18)

inst_559:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x6e2ab57b59a00 and fs2 == 0 and fe2 == 0x403 and fm2 == 0xc54fb75a805c3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4431cc49a0808 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f76e2ab57b59a00; op2val:0x403c54fb75a805c3; op3val:0x3fc4431cc49a0808; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 816, x18)

inst_560:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x6e2ab57b59a00 and fs2 == 0 and fe2 == 0x403 and fm2 == 0xc54fb75a805c3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4431cc49a0808 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f76e2ab57b59a00; op2val:0x403c54fb75a805c3; op3val:0x3fc4431cc49a0808; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 832, x18)

inst_561:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x061da1050c869 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3de73522f9190 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x457f6b877d62c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe061da1050c869; op2val:0x3ff3de73522f9190; op3val:0x3fe457f6b877d62c; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 848, x18)

inst_562:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x061da1050c869 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3de73522f9190 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x457f6b877d62c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe061da1050c869; op2val:0x3ff3de73522f9190; op3val:0x3fe457f6b877d62c; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 864, x18)

inst_563:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x061da1050c869 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3de73522f9190 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x457f6b877d62c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe061da1050c869; op2val:0x3ff3de73522f9190; op3val:0x3fe457f6b877d62c; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 880, x18)

inst_564:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x061da1050c869 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3de73522f9190 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x457f6b877d62c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe061da1050c869; op2val:0x3ff3de73522f9190; op3val:0x3fe457f6b877d62c; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 896, x18)

inst_565:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x061da1050c869 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3de73522f9190 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x457f6b877d62c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe061da1050c869; op2val:0x3ff3de73522f9190; op3val:0x3fe457f6b877d62c; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 912, x18)

inst_566:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xeb3bfcbcd1550 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdd3e1e063ea3d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc9e2fc08057f8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdeb3bfcbcd1550; op2val:0x3fddd3e1e063ea3d; op3val:0x3fcc9e2fc08057f8; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 928, x18)

inst_567:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xeb3bfcbcd1550 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdd3e1e063ea3d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc9e2fc08057f8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdeb3bfcbcd1550; op2val:0x3fddd3e1e063ea3d; op3val:0x3fcc9e2fc08057f8; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 944, x18)

inst_568:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xeb3bfcbcd1550 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdd3e1e063ea3d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc9e2fc08057f8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdeb3bfcbcd1550; op2val:0x3fddd3e1e063ea3d; op3val:0x3fcc9e2fc08057f8; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 960, x18)

inst_569:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xeb3bfcbcd1550 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdd3e1e063ea3d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc9e2fc08057f8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdeb3bfcbcd1550; op2val:0x3fddd3e1e063ea3d; op3val:0x3fcc9e2fc08057f8; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 976, x18)

inst_570:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xeb3bfcbcd1550 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdd3e1e063ea3d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc9e2fc08057f8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdeb3bfcbcd1550; op2val:0x3fddd3e1e063ea3d; op3val:0x3fcc9e2fc08057f8; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 992, x18)

inst_571:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xebb83a091dab8 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8805384bc0131 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x787e0fcc721b0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdebb83a091dab8; op2val:0x3fb8805384bc0131; op3val:0x3fa787e0fcc721b0; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1008, x18)

inst_572:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xebb83a091dab8 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8805384bc0131 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x787e0fcc721b0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdebb83a091dab8; op2val:0x3fb8805384bc0131; op3val:0x3fa787e0fcc721b0; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1024, x18)

inst_573:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xebb83a091dab8 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8805384bc0131 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x787e0fcc721b0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdebb83a091dab8; op2val:0x3fb8805384bc0131; op3val:0x3fa787e0fcc721b0; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1040, x18)

inst_574:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xebb83a091dab8 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8805384bc0131 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x787e0fcc721b0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdebb83a091dab8; op2val:0x3fb8805384bc0131; op3val:0x3fa787e0fcc721b0; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1056, x18)

inst_575:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xebb83a091dab8 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8805384bc0131 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x787e0fcc721b0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdebb83a091dab8; op2val:0x3fb8805384bc0131; op3val:0x3fa787e0fcc721b0; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1072, x18)

inst_576:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6eeec22c7d000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd1e726c40bda2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4de57fda3ae70 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6eeec22c7d000; op2val:0x3ffd1e726c40bda2; op3val:0x3fc4de57fda3ae70; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1088, x18)

inst_577:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6eeec22c7d000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd1e726c40bda2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4de57fda3ae70 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6eeec22c7d000; op2val:0x3ffd1e726c40bda2; op3val:0x3fc4de57fda3ae70; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1104, x18)

inst_578:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6eeec22c7d000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd1e726c40bda2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4de57fda3ae70 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6eeec22c7d000; op2val:0x3ffd1e726c40bda2; op3val:0x3fc4de57fda3ae70; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1120, x18)

inst_579:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6eeec22c7d000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd1e726c40bda2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4de57fda3ae70 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6eeec22c7d000; op2val:0x3ffd1e726c40bda2; op3val:0x3fc4de57fda3ae70; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1136, x18)

inst_580:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6eeec22c7d000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd1e726c40bda2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4de57fda3ae70 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6eeec22c7d000; op2val:0x3ffd1e726c40bda2; op3val:0x3fc4de57fda3ae70; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1152, x18)

inst_581:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3d3bd725a4731 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x692b78bd43028 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf8f410fcd4a2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3d3bd725a4731; op2val:0x3ff692b78bd43028; op3val:0x3febf8f410fcd4a2; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1168, x18)

inst_582:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3d3bd725a4731 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x692b78bd43028 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf8f410fcd4a2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3d3bd725a4731; op2val:0x3ff692b78bd43028; op3val:0x3febf8f410fcd4a2; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1184, x18)

inst_583:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3d3bd725a4731 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x692b78bd43028 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf8f410fcd4a2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3d3bd725a4731; op2val:0x3ff692b78bd43028; op3val:0x3febf8f410fcd4a2; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1200, x18)

inst_584:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3d3bd725a4731 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x692b78bd43028 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf8f410fcd4a2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3d3bd725a4731; op2val:0x3ff692b78bd43028; op3val:0x3febf8f410fcd4a2; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1216, x18)

inst_585:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3d3bd725a4731 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x692b78bd43028 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf8f410fcd4a2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3d3bd725a4731; op2val:0x3ff692b78bd43028; op3val:0x3febf8f410fcd4a2; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1232, x18)

inst_586:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2c8dd4b740698 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8d3162be43595 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd251edf391baf and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2c8dd4b740698; op2val:0x4028d3162be43595; op3val:0x3fed251edf391baf; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1248, x18)

inst_587:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2c8dd4b740698 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8d3162be43595 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd251edf391baf and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2c8dd4b740698; op2val:0x4028d3162be43595; op3val:0x3fed251edf391baf; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1264, x18)

inst_588:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2c8dd4b740698 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8d3162be43595 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd251edf391baf and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2c8dd4b740698; op2val:0x4028d3162be43595; op3val:0x3fed251edf391baf; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1280, x18)

inst_589:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2c8dd4b740698 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8d3162be43595 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd251edf391baf and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2c8dd4b740698; op2val:0x4028d3162be43595; op3val:0x3fed251edf391baf; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1296, x18)

inst_590:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2c8dd4b740698 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8d3162be43595 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd251edf391baf and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2c8dd4b740698; op2val:0x4028d3162be43595; op3val:0x3fed251edf391baf; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1312, x18)

inst_591:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x828ef8b098dee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3a572b24d172f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xdaa6fcc4bbaa4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd828ef8b098dee; op2val:0x3fe3a572b24d172f; op3val:0x3fcdaa6fcc4bbaa4; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1328, x18)

inst_592:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x828ef8b098dee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3a572b24d172f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xdaa6fcc4bbaa4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd828ef8b098dee; op2val:0x3fe3a572b24d172f; op3val:0x3fcdaa6fcc4bbaa4; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1344, x18)

inst_593:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x828ef8b098dee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3a572b24d172f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xdaa6fcc4bbaa4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd828ef8b098dee; op2val:0x3fe3a572b24d172f; op3val:0x3fcdaa6fcc4bbaa4; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1360, x18)

inst_594:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x828ef8b098dee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3a572b24d172f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xdaa6fcc4bbaa4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd828ef8b098dee; op2val:0x3fe3a572b24d172f; op3val:0x3fcdaa6fcc4bbaa4; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1376, x18)
addi x16,x16,2040

inst_595:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x828ef8b098dee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3a572b24d172f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xdaa6fcc4bbaa4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd828ef8b098dee; op2val:0x3fe3a572b24d172f; op3val:0x3fcdaa6fcc4bbaa4; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1392, x18)

inst_596:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e11574b1ce4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x51e88a0ec1c83 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd5be9125e914b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe63e11574b1ce4; op2val:0x3ff51e88a0ec1c83; op3val:0x3fed5be9125e914b; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1408, x18)

inst_597:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e11574b1ce4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x51e88a0ec1c83 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd5be9125e914b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe63e11574b1ce4; op2val:0x3ff51e88a0ec1c83; op3val:0x3fed5be9125e914b; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1424, x18)

inst_598:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e11574b1ce4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x51e88a0ec1c83 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd5be9125e914b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe63e11574b1ce4; op2val:0x3ff51e88a0ec1c83; op3val:0x3fed5be9125e914b; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1440, x18)

inst_599:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e11574b1ce4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x51e88a0ec1c83 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd5be9125e914b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe63e11574b1ce4; op2val:0x3ff51e88a0ec1c83; op3val:0x3fed5be9125e914b; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1456, x18)

inst_600:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e11574b1ce4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x51e88a0ec1c83 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd5be9125e914b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe63e11574b1ce4; op2val:0x3ff51e88a0ec1c83; op3val:0x3fed5be9125e914b; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1472, x18)

inst_601:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46341571b5618 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8fa8908f35c64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfd41f7ce13ff5 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46341571b5618; op2val:0x3ff8fa8908f35c64; op3val:0x3fefd41f7ce13ff5; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1488, x18)

inst_602:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46341571b5618 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8fa8908f35c64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfd41f7ce13ff5 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46341571b5618; op2val:0x3ff8fa8908f35c64; op3val:0x3fefd41f7ce13ff5; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1504, x18)

inst_603:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46341571b5618 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8fa8908f35c64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfd41f7ce13ff5 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46341571b5618; op2val:0x3ff8fa8908f35c64; op3val:0x3fefd41f7ce13ff5; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1520, x18)

inst_604:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46341571b5618 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8fa8908f35c64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfd41f7ce13ff5 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46341571b5618; op2val:0x3ff8fa8908f35c64; op3val:0x3fefd41f7ce13ff5; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1536, x18)

inst_605:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46341571b5618 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8fa8908f35c64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfd41f7ce13ff5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46341571b5618; op2val:0x3ff8fa8908f35c64; op3val:0x3fefd41f7ce13ff5; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1552, x18)

inst_606:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x420dddda585dd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd80318fda4da2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x28e6bb5248300 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe420dddda585dd; op2val:0x3fcd80318fda4da2; op3val:0x3fc28e6bb5248300; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1568, x18)

inst_607:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x420dddda585dd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd80318fda4da2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x28e6bb5248300 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe420dddda585dd; op2val:0x3fcd80318fda4da2; op3val:0x3fc28e6bb5248300; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1584, x18)

inst_608:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x420dddda585dd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd80318fda4da2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x28e6bb5248300 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe420dddda585dd; op2val:0x3fcd80318fda4da2; op3val:0x3fc28e6bb5248300; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1600, x18)

inst_609:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x420dddda585dd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd80318fda4da2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x28e6bb5248300 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe420dddda585dd; op2val:0x3fcd80318fda4da2; op3val:0x3fc28e6bb5248300; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1616, x18)

inst_610:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x420dddda585dd and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xd80318fda4da2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x28e6bb5248300 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe420dddda585dd; op2val:0x3fcd80318fda4da2; op3val:0x3fc28e6bb5248300; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1632, x18)

inst_611:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7f111b6b8f93f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x28b6fe7e393b5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbbfd9aadb5bef and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7f111b6b8f93f; op2val:0x3ff28b6fe7e393b5; op3val:0x3febbfd9aadb5bef; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1648, x18)

inst_612:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7f111b6b8f93f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x28b6fe7e393b5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbbfd9aadb5bef and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7f111b6b8f93f; op2val:0x3ff28b6fe7e393b5; op3val:0x3febbfd9aadb5bef; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1664, x18)

inst_613:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7f111b6b8f93f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x28b6fe7e393b5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbbfd9aadb5bef and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7f111b6b8f93f; op2val:0x3ff28b6fe7e393b5; op3val:0x3febbfd9aadb5bef; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1680, x18)

inst_614:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7f111b6b8f93f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x28b6fe7e393b5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbbfd9aadb5bef and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7f111b6b8f93f; op2val:0x3ff28b6fe7e393b5; op3val:0x3febbfd9aadb5bef; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1696, x18)

inst_615:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7f111b6b8f93f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x28b6fe7e393b5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbbfd9aadb5bef and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7f111b6b8f93f; op2val:0x3ff28b6fe7e393b5; op3val:0x3febbfd9aadb5bef; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1712, x18)

inst_616:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x28f78cfd45220 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x244a5dfb763ca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5310a16546287 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc28f78cfd45220; op2val:0x401244a5dfb763ca; op3val:0x3fe5310a16546287; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1728, x18)

inst_617:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x28f78cfd45220 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x244a5dfb763ca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5310a16546287 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc28f78cfd45220; op2val:0x401244a5dfb763ca; op3val:0x3fe5310a16546287; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1744, x18)

inst_618:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x28f78cfd45220 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x244a5dfb763ca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5310a16546287 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc28f78cfd45220; op2val:0x401244a5dfb763ca; op3val:0x3fe5310a16546287; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1760, x18)

inst_619:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x28f78cfd45220 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x244a5dfb763ca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5310a16546287 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc28f78cfd45220; op2val:0x401244a5dfb763ca; op3val:0x3fe5310a16546287; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1776, x18)

inst_620:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x28f78cfd45220 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x244a5dfb763ca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5310a16546287 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc28f78cfd45220; op2val:0x401244a5dfb763ca; op3val:0x3fe5310a16546287; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1792, x18)

inst_621:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4b29cb1576348 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c6f631e36b2d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0ac3ad16ebde0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb4b29cb1576348; op2val:0x3ff9c6f631e36b2d; op3val:0x3fc0ac3ad16ebde0; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1808, x18)

inst_622:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4b29cb1576348 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c6f631e36b2d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0ac3ad16ebde0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb4b29cb1576348; op2val:0x3ff9c6f631e36b2d; op3val:0x3fc0ac3ad16ebde0; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1824, x18)

inst_623:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4b29cb1576348 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c6f631e36b2d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0ac3ad16ebde0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb4b29cb1576348; op2val:0x3ff9c6f631e36b2d; op3val:0x3fc0ac3ad16ebde0; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1840, x18)

inst_624:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4b29cb1576348 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c6f631e36b2d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0ac3ad16ebde0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb4b29cb1576348; op2val:0x3ff9c6f631e36b2d; op3val:0x3fc0ac3ad16ebde0; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1856, x18)

inst_625:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4b29cb1576348 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c6f631e36b2d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0ac3ad16ebde0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb4b29cb1576348; op2val:0x3ff9c6f631e36b2d; op3val:0x3fc0ac3ad16ebde0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1872, x18)

inst_626:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9c43d93929920 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0cdbd0b5dfd94 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0f9058eb05f7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9c43d93929920; op2val:0x4020cdbd0b5dfd94; op3val:0x3feb0f9058eb05f7; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1888, x18)

inst_627:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9c43d93929920 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0cdbd0b5dfd94 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0f9058eb05f7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9c43d93929920; op2val:0x4020cdbd0b5dfd94; op3val:0x3feb0f9058eb05f7; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1904, x18)

inst_628:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9c43d93929920 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0cdbd0b5dfd94 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0f9058eb05f7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9c43d93929920; op2val:0x4020cdbd0b5dfd94; op3val:0x3feb0f9058eb05f7; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1920, x18)

inst_629:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9c43d93929920 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0cdbd0b5dfd94 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0f9058eb05f7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9c43d93929920; op2val:0x4020cdbd0b5dfd94; op3val:0x3feb0f9058eb05f7; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1936, x18)

inst_630:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9c43d93929920 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0cdbd0b5dfd94 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0f9058eb05f7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9c43d93929920; op2val:0x4020cdbd0b5dfd94; op3val:0x3feb0f9058eb05f7; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1952, x18)

inst_631:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f21c0f23711a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x31ba3f37b74ae and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x43cc785b14748 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f21c0f23711a; op2val:0x3fd31ba3f37b74ae; op3val:0x3fc43cc785b14748; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1968, x18)

inst_632:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f21c0f23711a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x31ba3f37b74ae and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x43cc785b14748 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f21c0f23711a; op2val:0x3fd31ba3f37b74ae; op3val:0x3fc43cc785b14748; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1984, x18)

inst_633:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f21c0f23711a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x31ba3f37b74ae and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x43cc785b14748 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f21c0f23711a; op2val:0x3fd31ba3f37b74ae; op3val:0x3fc43cc785b14748; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2000, x18)

inst_634:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f21c0f23711a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x31ba3f37b74ae and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x43cc785b14748 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f21c0f23711a; op2val:0x3fd31ba3f37b74ae; op3val:0x3fc43cc785b14748; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_635:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f21c0f23711a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x31ba3f37b74ae and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x43cc785b14748 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f21c0f23711a; op2val:0x3fd31ba3f37b74ae; op3val:0x3fc43cc785b14748; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 0, x18)

inst_636:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3913db3ab0a14 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3b78f0844a256 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x81cf5634614ac and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3913db3ab0a14; op2val:0x3fe3b78f0844a256; op3val:0x3fc81cf5634614ac; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 16, x18)

inst_637:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3913db3ab0a14 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3b78f0844a256 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x81cf5634614ac and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3913db3ab0a14; op2val:0x3fe3b78f0844a256; op3val:0x3fc81cf5634614ac; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 32, x18)

inst_638:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3913db3ab0a14 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3b78f0844a256 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x81cf5634614ac and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3913db3ab0a14; op2val:0x3fe3b78f0844a256; op3val:0x3fc81cf5634614ac; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 48, x18)

inst_639:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3913db3ab0a14 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3b78f0844a256 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x81cf5634614ac and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3913db3ab0a14; op2val:0x3fe3b78f0844a256; op3val:0x3fc81cf5634614ac; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 64, x18)

inst_640:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3913db3ab0a14 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3b78f0844a256 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x81cf5634614ac and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3913db3ab0a14; op2val:0x3fe3b78f0844a256; op3val:0x3fc81cf5634614ac; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 80, x18)

inst_641:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x1b1f4a2164804 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb27015edf9013 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe077019dcb6c8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc1b1f4a2164804; op2val:0x400b27015edf9013; op3val:0x3fde077019dcb6c8; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 96, x18)

inst_642:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x1b1f4a2164804 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb27015edf9013 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe077019dcb6c8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc1b1f4a2164804; op2val:0x400b27015edf9013; op3val:0x3fde077019dcb6c8; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 112, x18)

inst_643:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x1b1f4a2164804 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb27015edf9013 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe077019dcb6c8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc1b1f4a2164804; op2val:0x400b27015edf9013; op3val:0x3fde077019dcb6c8; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 128, x18)

inst_644:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x1b1f4a2164804 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb27015edf9013 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe077019dcb6c8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc1b1f4a2164804; op2val:0x400b27015edf9013; op3val:0x3fde077019dcb6c8; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 144, x18)

inst_645:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x1b1f4a2164804 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xb27015edf9013 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe077019dcb6c8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc1b1f4a2164804; op2val:0x400b27015edf9013; op3val:0x3fde077019dcb6c8; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 160, x18)

inst_646:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa114284dadecc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4acb87d814d07 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d77ca20e1fc2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda114284dadecc; op2val:0x3ff4acb87d814d07; op3val:0x3fe0d77ca20e1fc2; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 176, x18)

inst_647:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa114284dadecc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4acb87d814d07 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d77ca20e1fc2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda114284dadecc; op2val:0x3ff4acb87d814d07; op3val:0x3fe0d77ca20e1fc2; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 192, x18)

inst_648:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa114284dadecc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4acb87d814d07 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d77ca20e1fc2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda114284dadecc; op2val:0x3ff4acb87d814d07; op3val:0x3fe0d77ca20e1fc2; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 208, x18)

inst_649:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa114284dadecc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4acb87d814d07 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d77ca20e1fc2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda114284dadecc; op2val:0x3ff4acb87d814d07; op3val:0x3fe0d77ca20e1fc2; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 224, x18)

inst_650:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa114284dadecc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4acb87d814d07 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d77ca20e1fc2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda114284dadecc; op2val:0x3ff4acb87d814d07; op3val:0x3fe0d77ca20e1fc2; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 240, x18)

inst_651:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf21b2aeb75d6a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf2c8ff8d2975 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc29aebb645d1a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf21b2aeb75d6a; op2val:0x3ffcf2c8ff8d2975; op3val:0x3fec29aebb645d1a; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 256, x18)

inst_652:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf21b2aeb75d6a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf2c8ff8d2975 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc29aebb645d1a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf21b2aeb75d6a; op2val:0x3ffcf2c8ff8d2975; op3val:0x3fec29aebb645d1a; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 272, x18)

inst_653:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf21b2aeb75d6a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf2c8ff8d2975 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc29aebb645d1a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf21b2aeb75d6a; op2val:0x3ffcf2c8ff8d2975; op3val:0x3fec29aebb645d1a; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 288, x18)

inst_654:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf21b2aeb75d6a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf2c8ff8d2975 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc29aebb645d1a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf21b2aeb75d6a; op2val:0x3ffcf2c8ff8d2975; op3val:0x3fec29aebb645d1a; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 304, x18)

inst_655:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf21b2aeb75d6a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf2c8ff8d2975 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc29aebb645d1a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf21b2aeb75d6a; op2val:0x3ffcf2c8ff8d2975; op3val:0x3fec29aebb645d1a; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 320, x18)

inst_656:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xa95ce8494dbc0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd587353ac4e00 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8613eeff562a4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faa95ce8494dbc0; op2val:0x400d587353ac4e00; op3val:0x3fc8613eeff562a4; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 336, x18)

inst_657:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xa95ce8494dbc0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd587353ac4e00 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8613eeff562a4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faa95ce8494dbc0; op2val:0x400d587353ac4e00; op3val:0x3fc8613eeff562a4; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 352, x18)

inst_658:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xa95ce8494dbc0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd587353ac4e00 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8613eeff562a4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faa95ce8494dbc0; op2val:0x400d587353ac4e00; op3val:0x3fc8613eeff562a4; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 368, x18)

inst_659:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xa95ce8494dbc0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd587353ac4e00 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8613eeff562a4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faa95ce8494dbc0; op2val:0x400d587353ac4e00; op3val:0x3fc8613eeff562a4; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 384, x18)

inst_660:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xa95ce8494dbc0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd587353ac4e00 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8613eeff562a4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faa95ce8494dbc0; op2val:0x400d587353ac4e00; op3val:0x3fc8613eeff562a4; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 400, x18)

inst_661:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x887509d2ebf38 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b2c8c8d10d56 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb21dad721ebae and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc887509d2ebf38; op2val:0x4001b2c8c8d10d56; op3val:0x3fdb21dad721ebae; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 416, x18)

inst_662:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x887509d2ebf38 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b2c8c8d10d56 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb21dad721ebae and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc887509d2ebf38; op2val:0x4001b2c8c8d10d56; op3val:0x3fdb21dad721ebae; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 432, x18)

inst_663:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x887509d2ebf38 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b2c8c8d10d56 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb21dad721ebae and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc887509d2ebf38; op2val:0x4001b2c8c8d10d56; op3val:0x3fdb21dad721ebae; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 448, x18)

inst_664:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x887509d2ebf38 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b2c8c8d10d56 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb21dad721ebae and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc887509d2ebf38; op2val:0x4001b2c8c8d10d56; op3val:0x3fdb21dad721ebae; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 464, x18)

inst_665:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x887509d2ebf38 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b2c8c8d10d56 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb21dad721ebae and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc887509d2ebf38; op2val:0x4001b2c8c8d10d56; op3val:0x3fdb21dad721ebae; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 480, x18)

inst_666:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d6c84cf7bddb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5dbf0586b27dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a68b6f94c286 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d6c84cf7bddb; op2val:0x3fe5dbf0586b27dc; op3val:0x3fe1a68b6f94c286; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 496, x18)

inst_667:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d6c84cf7bddb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5dbf0586b27dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a68b6f94c286 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d6c84cf7bddb; op2val:0x3fe5dbf0586b27dc; op3val:0x3fe1a68b6f94c286; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 512, x18)

inst_668:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d6c84cf7bddb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5dbf0586b27dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a68b6f94c286 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d6c84cf7bddb; op2val:0x3fe5dbf0586b27dc; op3val:0x3fe1a68b6f94c286; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 528, x18)

inst_669:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d6c84cf7bddb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5dbf0586b27dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a68b6f94c286 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d6c84cf7bddb; op2val:0x3fe5dbf0586b27dc; op3val:0x3fe1a68b6f94c286; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 544, x18)

inst_670:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d6c84cf7bddb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5dbf0586b27dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a68b6f94c286 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d6c84cf7bddb; op2val:0x3fe5dbf0586b27dc; op3val:0x3fe1a68b6f94c286; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 560, x18)

inst_671:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9f8ddecdc410 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x099acd554292f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xca8ddfef2cc40 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9f8ddecdc410; op2val:0x3fc099acd554292f; op3val:0x3fbca8ddfef2cc40; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 576, x18)

inst_672:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9f8ddecdc410 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x099acd554292f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xca8ddfef2cc40 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9f8ddecdc410; op2val:0x3fc099acd554292f; op3val:0x3fbca8ddfef2cc40; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 592, x18)

inst_673:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9f8ddecdc410 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x099acd554292f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xca8ddfef2cc40 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9f8ddecdc410; op2val:0x3fc099acd554292f; op3val:0x3fbca8ddfef2cc40; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 608, x18)

inst_674:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9f8ddecdc410 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x099acd554292f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xca8ddfef2cc40 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9f8ddecdc410; op2val:0x3fc099acd554292f; op3val:0x3fbca8ddfef2cc40; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 624, x18)

inst_675:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9f8ddecdc410 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x099acd554292f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xca8ddfef2cc40 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9f8ddecdc410; op2val:0x3fc099acd554292f; op3val:0x3fbca8ddfef2cc40; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 640, x18)

inst_676:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0a045fc492db6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x679c593af2a8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x75ae99afcc2bb and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0a045fc492db6; op2val:0x3ff679c593af2a8c; op3val:0x3fe75ae99afcc2bb; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 656, x18)

inst_677:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0a045fc492db6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x679c593af2a8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x75ae99afcc2bb and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0a045fc492db6; op2val:0x3ff679c593af2a8c; op3val:0x3fe75ae99afcc2bb; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 672, x18)

inst_678:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0a045fc492db6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x679c593af2a8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x75ae99afcc2bb and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0a045fc492db6; op2val:0x3ff679c593af2a8c; op3val:0x3fe75ae99afcc2bb; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 688, x18)

inst_679:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0a045fc492db6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x679c593af2a8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x75ae99afcc2bb and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0a045fc492db6; op2val:0x3ff679c593af2a8c; op3val:0x3fe75ae99afcc2bb; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 704, x18)
addi x16,x16,2040

inst_680:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0a045fc492db6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x679c593af2a8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x75ae99afcc2bb and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0a045fc492db6; op2val:0x3ff679c593af2a8c; op3val:0x3fe75ae99afcc2bb; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 720, x18)

inst_681:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbeee583dc04b2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb5b6b10bb56a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7e15e795b08fa and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbeee583dc04b2; op2val:0x3feb5b6b10bb56a2; op3val:0x3fd7e15e795b08fa; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 736, x18)

inst_682:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbeee583dc04b2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb5b6b10bb56a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7e15e795b08fa and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbeee583dc04b2; op2val:0x3feb5b6b10bb56a2; op3val:0x3fd7e15e795b08fa; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 752, x18)

inst_683:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbeee583dc04b2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb5b6b10bb56a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7e15e795b08fa and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbeee583dc04b2; op2val:0x3feb5b6b10bb56a2; op3val:0x3fd7e15e795b08fa; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 768, x18)

inst_684:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbeee583dc04b2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb5b6b10bb56a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7e15e795b08fa and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbeee583dc04b2; op2val:0x3feb5b6b10bb56a2; op3val:0x3fd7e15e795b08fa; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 784, x18)

inst_685:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbeee583dc04b2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb5b6b10bb56a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7e15e795b08fa and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbeee583dc04b2; op2val:0x3feb5b6b10bb56a2; op3val:0x3fd7e15e795b08fa; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 800, x18)

inst_686:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b70e8812730f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x518d6577aadd7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9feddc49137ae and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b70e8812730f; op2val:0x3fe518d6577aadd7; op3val:0x3fd9feddc49137ae; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 816, x18)

inst_687:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b70e8812730f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x518d6577aadd7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9feddc49137ae and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b70e8812730f; op2val:0x3fe518d6577aadd7; op3val:0x3fd9feddc49137ae; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 832, x18)

inst_688:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b70e8812730f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x518d6577aadd7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9feddc49137ae and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b70e8812730f; op2val:0x3fe518d6577aadd7; op3val:0x3fd9feddc49137ae; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 848, x18)

inst_689:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b70e8812730f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x518d6577aadd7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9feddc49137ae and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b70e8812730f; op2val:0x3fe518d6577aadd7; op3val:0x3fd9feddc49137ae; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 864, x18)

inst_690:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b70e8812730f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x518d6577aadd7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9feddc49137ae and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b70e8812730f; op2val:0x3fe518d6577aadd7; op3val:0x3fd9feddc49137ae; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 880, x18)

inst_691:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa2e57e7073430 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0xc8eb505dd966d and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x75d4eab253940 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea2e57e7073430; op2val:0x3f9c8eb505dd966d; op3val:0x3f975d4eab253940; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 896, x18)

inst_692:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa2e57e7073430 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0xc8eb505dd966d and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x75d4eab253940 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea2e57e7073430; op2val:0x3f9c8eb505dd966d; op3val:0x3f975d4eab253940; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 912, x18)

inst_693:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa2e57e7073430 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0xc8eb505dd966d and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x75d4eab253940 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea2e57e7073430; op2val:0x3f9c8eb505dd966d; op3val:0x3f975d4eab253940; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 928, x18)

inst_694:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa2e57e7073430 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0xc8eb505dd966d and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x75d4eab253940 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea2e57e7073430; op2val:0x3f9c8eb505dd966d; op3val:0x3f975d4eab253940; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 944, x18)

inst_695:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa2e57e7073430 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0xc8eb505dd966d and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x75d4eab253940 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea2e57e7073430; op2val:0x3f9c8eb505dd966d; op3val:0x3f975d4eab253940; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 960, x18)

inst_696:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbc38b337f0b3e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x56bb61e719328 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x295c735d121c2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febc38b337f0b3e; op2val:0x3fe56bb61e719328; op3val:0x3fe295c735d121c2; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 976, x18)

inst_697:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbc38b337f0b3e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x56bb61e719328 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x295c735d121c2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febc38b337f0b3e; op2val:0x3fe56bb61e719328; op3val:0x3fe295c735d121c2; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 992, x18)

inst_698:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbc38b337f0b3e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x56bb61e719328 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x295c735d121c2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febc38b337f0b3e; op2val:0x3fe56bb61e719328; op3val:0x3fe295c735d121c2; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1008, x18)

inst_699:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbc38b337f0b3e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x56bb61e719328 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x295c735d121c2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febc38b337f0b3e; op2val:0x3fe56bb61e719328; op3val:0x3fe295c735d121c2; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1024, x18)

inst_700:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbc38b337f0b3e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x56bb61e719328 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x295c735d121c2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febc38b337f0b3e; op2val:0x3fe56bb61e719328; op3val:0x3fe295c735d121c2; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1040, x18)

inst_701:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa3166bb120104 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc69a71909b85b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x741b4c314414a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda3166bb120104; op2val:0x3ffc69a71909b85b; op3val:0x3fe741b4c314414a; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1056, x18)

inst_702:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa3166bb120104 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc69a71909b85b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x741b4c314414a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda3166bb120104; op2val:0x3ffc69a71909b85b; op3val:0x3fe741b4c314414a; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1072, x18)

inst_703:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa3166bb120104 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc69a71909b85b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x741b4c314414a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda3166bb120104; op2val:0x3ffc69a71909b85b; op3val:0x3fe741b4c314414a; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1088, x18)

inst_704:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa3166bb120104 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc69a71909b85b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x741b4c314414a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda3166bb120104; op2val:0x3ffc69a71909b85b; op3val:0x3fe741b4c314414a; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1104, x18)

inst_705:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa3166bb120104 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc69a71909b85b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x741b4c314414a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda3166bb120104; op2val:0x3ffc69a71909b85b; op3val:0x3fe741b4c314414a; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1120, x18)

inst_706:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5f93dabc7e57c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x542ea40496169 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd3306c54aa3b1 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5f93dabc7e57c; op2val:0x401542ea40496169; op3val:0x3fed3306c54aa3b1; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1136, x18)

inst_707:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5f93dabc7e57c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x542ea40496169 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd3306c54aa3b1 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5f93dabc7e57c; op2val:0x401542ea40496169; op3val:0x3fed3306c54aa3b1; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1152, x18)

inst_708:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5f93dabc7e57c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x542ea40496169 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd3306c54aa3b1 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5f93dabc7e57c; op2val:0x401542ea40496169; op3val:0x3fed3306c54aa3b1; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1168, x18)

inst_709:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5f93dabc7e57c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x542ea40496169 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd3306c54aa3b1 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5f93dabc7e57c; op2val:0x401542ea40496169; op3val:0x3fed3306c54aa3b1; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1184, x18)

inst_710:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5f93dabc7e57c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x542ea40496169 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd3306c54aa3b1 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5f93dabc7e57c; op2val:0x401542ea40496169; op3val:0x3fed3306c54aa3b1; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_711:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdd239a60f6c26 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x11fec1eaf3e8b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfeadca6253e2d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedd239a60f6c26; op2val:0x3ff11fec1eaf3e8b; op3val:0x3fefeadca6253e2d; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1216, x18)

inst_712:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdd239a60f6c26 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x11fec1eaf3e8b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfeadca6253e2d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedd239a60f6c26; op2val:0x3ff11fec1eaf3e8b; op3val:0x3fefeadca6253e2d; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1232, x18)

inst_713:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdd239a60f6c26 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x11fec1eaf3e8b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfeadca6253e2d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedd239a60f6c26; op2val:0x3ff11fec1eaf3e8b; op3val:0x3fefeadca6253e2d; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1248, x18)

inst_714:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdd239a60f6c26 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x11fec1eaf3e8b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfeadca6253e2d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedd239a60f6c26; op2val:0x3ff11fec1eaf3e8b; op3val:0x3fefeadca6253e2d; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1264, x18)

inst_715:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdd239a60f6c26 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x11fec1eaf3e8b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfeadca6253e2d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedd239a60f6c26; op2val:0x3ff11fec1eaf3e8b; op3val:0x3fefeadca6253e2d; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1280, x18)

inst_716:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb8a0a63e0df83 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x268b076b3a4fa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfaf7caea7bcb4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb8a0a63e0df83; op2val:0x3ff268b076b3a4fa; op3val:0x3fefaf7caea7bcb4; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1296, x18)

inst_717:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb8a0a63e0df83 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x268b076b3a4fa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfaf7caea7bcb4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb8a0a63e0df83; op2val:0x3ff268b076b3a4fa; op3val:0x3fefaf7caea7bcb4; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1312, x18)

inst_718:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb8a0a63e0df83 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x268b076b3a4fa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfaf7caea7bcb4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb8a0a63e0df83; op2val:0x3ff268b076b3a4fa; op3val:0x3fefaf7caea7bcb4; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1328, x18)

inst_719:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb8a0a63e0df83 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x268b076b3a4fa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfaf7caea7bcb4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb8a0a63e0df83; op2val:0x3ff268b076b3a4fa; op3val:0x3fefaf7caea7bcb4; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1344, x18)

inst_720:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb8a0a63e0df83 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x268b076b3a4fa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfaf7caea7bcb4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb8a0a63e0df83; op2val:0x3ff268b076b3a4fa; op3val:0x3fefaf7caea7bcb4; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1360, x18)

inst_721:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x571cbd075fc78 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6a3d704d8d304 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe580fba9fbc58 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc571cbd075fc78; op2val:0x4016a3d704d8d304; op3val:0x3fee580fba9fbc58; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1376, x18)

inst_722:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x571cbd075fc78 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6a3d704d8d304 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe580fba9fbc58 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc571cbd075fc78; op2val:0x4016a3d704d8d304; op3val:0x3fee580fba9fbc58; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1392, x18)

inst_723:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x571cbd075fc78 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6a3d704d8d304 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe580fba9fbc58 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc571cbd075fc78; op2val:0x4016a3d704d8d304; op3val:0x3fee580fba9fbc58; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1408, x18)

inst_724:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x571cbd075fc78 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6a3d704d8d304 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe580fba9fbc58 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc571cbd075fc78; op2val:0x4016a3d704d8d304; op3val:0x3fee580fba9fbc58; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1424, x18)

inst_725:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x571cbd075fc78 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6a3d704d8d304 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe580fba9fbc58 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc571cbd075fc78; op2val:0x4016a3d704d8d304; op3val:0x3fee580fba9fbc58; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1440, x18)

inst_726:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xaaf0baa339640 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x5a8729a5e20c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x20f563541dd6d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faaaf0baa339640; op2val:0x4025a8729a5e20c2; op3val:0x3fe20f563541dd6d; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1456, x18)

inst_727:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xaaf0baa339640 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x5a8729a5e20c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x20f563541dd6d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faaaf0baa339640; op2val:0x4025a8729a5e20c2; op3val:0x3fe20f563541dd6d; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1472, x18)

inst_728:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xaaf0baa339640 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x5a8729a5e20c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x20f563541dd6d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faaaf0baa339640; op2val:0x4025a8729a5e20c2; op3val:0x3fe20f563541dd6d; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1488, x18)

inst_729:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xaaf0baa339640 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x5a8729a5e20c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x20f563541dd6d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faaaf0baa339640; op2val:0x4025a8729a5e20c2; op3val:0x3fe20f563541dd6d; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1504, x18)

inst_730:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xaaf0baa339640 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x5a8729a5e20c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x20f563541dd6d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faaaf0baa339640; op2val:0x4025a8729a5e20c2; op3val:0x3fe20f563541dd6d; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1520, x18)

inst_731:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1a83a28efc59 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x4b9343189713d and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4249649d941a8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1a83a28efc59; op2val:0x3fb4b9343189713d; op3val:0x3fb4249649d941a8; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1536, x18)

inst_732:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1a83a28efc59 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x4b9343189713d and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4249649d941a8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1a83a28efc59; op2val:0x3fb4b9343189713d; op3val:0x3fb4249649d941a8; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1552, x18)

inst_733:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1a83a28efc59 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x4b9343189713d and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4249649d941a8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1a83a28efc59; op2val:0x3fb4b9343189713d; op3val:0x3fb4249649d941a8; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1568, x18)

inst_734:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1a83a28efc59 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x4b9343189713d and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4249649d941a8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1a83a28efc59; op2val:0x3fb4b9343189713d; op3val:0x3fb4249649d941a8; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1584, x18)

inst_735:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1a83a28efc59 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x4b9343189713d and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4249649d941a8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1a83a28efc59; op2val:0x3fb4b9343189713d; op3val:0x3fb4249649d941a8; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1600, x18)

inst_736:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc408ee3185172 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xde1d1fca45333 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xa61e0cf2d8190 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec408ee3185172; op2val:0x3fade1d1fca45333; op3val:0x3faa61e0cf2d8190; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1616, x18)

inst_737:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc408ee3185172 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xde1d1fca45333 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xa61e0cf2d8190 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec408ee3185172; op2val:0x3fade1d1fca45333; op3val:0x3faa61e0cf2d8190; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1632, x18)

inst_738:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc408ee3185172 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xde1d1fca45333 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xa61e0cf2d8190 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec408ee3185172; op2val:0x3fade1d1fca45333; op3val:0x3faa61e0cf2d8190; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1648, x18)

inst_739:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc408ee3185172 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xde1d1fca45333 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xa61e0cf2d8190 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec408ee3185172; op2val:0x3fade1d1fca45333; op3val:0x3faa61e0cf2d8190; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1664, x18)

inst_740:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc408ee3185172 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xde1d1fca45333 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xa61e0cf2d8190 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec408ee3185172; op2val:0x3fade1d1fca45333; op3val:0x3faa61e0cf2d8190; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1680, x18)

inst_741:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef3c8c28d42c2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4efdfb75879aa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44062a13c1cbb and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef3c8c28d42c2; op2val:0x3fe4efdfb75879aa; op3val:0x3fe44062a13c1cbb; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1696, x18)

inst_742:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef3c8c28d42c2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4efdfb75879aa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44062a13c1cbb and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef3c8c28d42c2; op2val:0x3fe4efdfb75879aa; op3val:0x3fe44062a13c1cbb; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1712, x18)

inst_743:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef3c8c28d42c2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4efdfb75879aa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44062a13c1cbb and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef3c8c28d42c2; op2val:0x3fe4efdfb75879aa; op3val:0x3fe44062a13c1cbb; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1728, x18)

inst_744:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef3c8c28d42c2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4efdfb75879aa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44062a13c1cbb and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef3c8c28d42c2; op2val:0x3fe4efdfb75879aa; op3val:0x3fe44062a13c1cbb; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1744, x18)

inst_745:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef3c8c28d42c2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4efdfb75879aa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44062a13c1cbb and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef3c8c28d42c2; op2val:0x3fe4efdfb75879aa; op3val:0x3fe44062a13c1cbb; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1760, x18)

inst_746:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd009521a915b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc92ca2d8ff90e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9e58c62d638fa and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed009521a915b8; op2val:0x3fdc92ca2d8ff90e; op3val:0x3fd9e58c62d638fa; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1776, x18)

inst_747:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd009521a915b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc92ca2d8ff90e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9e58c62d638fa and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed009521a915b8; op2val:0x3fdc92ca2d8ff90e; op3val:0x3fd9e58c62d638fa; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1792, x18)

inst_748:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd009521a915b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc92ca2d8ff90e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9e58c62d638fa and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed009521a915b8; op2val:0x3fdc92ca2d8ff90e; op3val:0x3fd9e58c62d638fa; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1808, x18)

inst_749:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd009521a915b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc92ca2d8ff90e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9e58c62d638fa and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed009521a915b8; op2val:0x3fdc92ca2d8ff90e; op3val:0x3fd9e58c62d638fa; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1824, x18)

inst_750:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd009521a915b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc92ca2d8ff90e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9e58c62d638fa and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed009521a915b8; op2val:0x3fdc92ca2d8ff90e; op3val:0x3fd9e58c62d638fa; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1840, x18)

inst_751:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x43b2ba55a28ae and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6929bde22d68d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc8abd07b8ab18 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd43b2ba55a28ae; op2val:0x3fe6929bde22d68d; op3val:0x3fcc8abd07b8ab18; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1856, x18)

inst_752:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x43b2ba55a28ae and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6929bde22d68d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc8abd07b8ab18 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd43b2ba55a28ae; op2val:0x3fe6929bde22d68d; op3val:0x3fcc8abd07b8ab18; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1872, x18)

inst_753:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x43b2ba55a28ae and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6929bde22d68d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc8abd07b8ab18 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd43b2ba55a28ae; op2val:0x3fe6929bde22d68d; op3val:0x3fcc8abd07b8ab18; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1888, x18)

inst_754:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x43b2ba55a28ae and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6929bde22d68d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc8abd07b8ab18 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd43b2ba55a28ae; op2val:0x3fe6929bde22d68d; op3val:0x3fcc8abd07b8ab18; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1904, x18)

inst_755:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x43b2ba55a28ae and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6929bde22d68d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc8abd07b8ab18 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd43b2ba55a28ae; op2val:0x3fe6929bde22d68d; op3val:0x3fcc8abd07b8ab18; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1920, x18)

inst_756:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x404360ffea780 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddb38b4ee0625 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2acf149076dd8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7404360ffea780; op2val:0x404ddb38b4ee0625; op3val:0x3fd2acf149076dd8; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1936, x18)

inst_757:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x404360ffea780 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddb38b4ee0625 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2acf149076dd8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7404360ffea780; op2val:0x404ddb38b4ee0625; op3val:0x3fd2acf149076dd8; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1952, x18)

inst_758:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x404360ffea780 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddb38b4ee0625 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2acf149076dd8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7404360ffea780; op2val:0x404ddb38b4ee0625; op3val:0x3fd2acf149076dd8; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1968, x18)

inst_759:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x404360ffea780 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddb38b4ee0625 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2acf149076dd8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7404360ffea780; op2val:0x404ddb38b4ee0625; op3val:0x3fd2acf149076dd8; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1984, x18)

inst_760:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0x404360ffea780 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddb38b4ee0625 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2acf149076dd8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7404360ffea780; op2val:0x404ddb38b4ee0625; op3val:0x3fd2acf149076dd8; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2000, x18)

inst_761:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xacfbea44a62e8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x37ed2c48e0db8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0559bc8359ad2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcacfbea44a62e8; op2val:0x3ff37ed2c48e0db8; op3val:0x3fd0559bc8359ad2; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_762:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xacfbea44a62e8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x37ed2c48e0db8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0559bc8359ad2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcacfbea44a62e8; op2val:0x3ff37ed2c48e0db8; op3val:0x3fd0559bc8359ad2; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xacfbea44a62e8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x37ed2c48e0db8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0559bc8359ad2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcacfbea44a62e8; op2val:0x3ff37ed2c48e0db8; op3val:0x3fd0559bc8359ad2; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 16, x18)

inst_764:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xacfbea44a62e8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x37ed2c48e0db8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0559bc8359ad2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcacfbea44a62e8; op2val:0x3ff37ed2c48e0db8; op3val:0x3fd0559bc8359ad2; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 32, x18)
addi x16,x16,2040

inst_765:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xacfbea44a62e8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x37ed2c48e0db8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0559bc8359ad2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcacfbea44a62e8; op2val:0x3ff37ed2c48e0db8; op3val:0x3fd0559bc8359ad2; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 48, x18)

inst_766:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa193647e5242a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd3ba8ac046c11 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d7813de44fc0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda193647e5242a; op2val:0x3ffd3ba8ac046c11; op3val:0x3fe7d7813de44fc0; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 64, x18)

inst_767:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa193647e5242a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd3ba8ac046c11 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d7813de44fc0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda193647e5242a; op2val:0x3ffd3ba8ac046c11; op3val:0x3fe7d7813de44fc0; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 80, x18)

inst_768:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa193647e5242a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd3ba8ac046c11 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d7813de44fc0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda193647e5242a; op2val:0x3ffd3ba8ac046c11; op3val:0x3fe7d7813de44fc0; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 96, x18)

inst_769:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa193647e5242a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd3ba8ac046c11 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d7813de44fc0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda193647e5242a; op2val:0x3ffd3ba8ac046c11; op3val:0x3fe7d7813de44fc0; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 112, x18)

inst_770:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa193647e5242a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd3ba8ac046c11 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d7813de44fc0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda193647e5242a; op2val:0x3ffd3ba8ac046c11; op3val:0x3fe7d7813de44fc0; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 128, x18)

inst_771:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb31c955af3a98 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd992174cdd863 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x92740eee383f3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb31c955af3a98; op2val:0x400d992174cdd863; op3val:0x3fe92740eee383f3; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 144, x18)

inst_772:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb31c955af3a98 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd992174cdd863 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x92740eee383f3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb31c955af3a98; op2val:0x400d992174cdd863; op3val:0x3fe92740eee383f3; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 160, x18)

inst_773:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb31c955af3a98 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd992174cdd863 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x92740eee383f3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb31c955af3a98; op2val:0x400d992174cdd863; op3val:0x3fe92740eee383f3; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 176, x18)

inst_774:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb31c955af3a98 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd992174cdd863 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x92740eee383f3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb31c955af3a98; op2val:0x400d992174cdd863; op3val:0x3fe92740eee383f3; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 192, x18)

inst_775:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb31c955af3a98 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd992174cdd863 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x92740eee383f3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb31c955af3a98; op2val:0x400d992174cdd863; op3val:0x3fe92740eee383f3; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 208, x18)

inst_776:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2037185881204 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x925c94b822777 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc4febf76e30d8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2037185881204; op2val:0x3ff925c94b822777; op3val:0x3fcc4febf76e30d8; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 224, x18)

inst_777:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2037185881204 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x925c94b822777 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc4febf76e30d8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2037185881204; op2val:0x3ff925c94b822777; op3val:0x3fcc4febf76e30d8; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 240, x18)

inst_778:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2037185881204 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x925c94b822777 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc4febf76e30d8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2037185881204; op2val:0x3ff925c94b822777; op3val:0x3fcc4febf76e30d8; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 256, x18)

inst_779:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2037185881204 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x925c94b822777 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc4febf76e30d8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2037185881204; op2val:0x3ff925c94b822777; op3val:0x3fcc4febf76e30d8; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 272, x18)

inst_780:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2037185881204 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x925c94b822777 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc4febf76e30d8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2037185881204; op2val:0x3ff925c94b822777; op3val:0x3fcc4febf76e30d8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 288, x18)

inst_781:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1cfe49f127d25 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ef1eea9c3ec3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9880e2cbc9aed and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1cfe49f127d25; op2val:0x3ff6ef1eea9c3ec3; op3val:0x3fe9880e2cbc9aed; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 304, x18)

inst_782:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1cfe49f127d25 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ef1eea9c3ec3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9880e2cbc9aed and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1cfe49f127d25; op2val:0x3ff6ef1eea9c3ec3; op3val:0x3fe9880e2cbc9aed; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 320, x18)

inst_783:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1cfe49f127d25 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ef1eea9c3ec3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9880e2cbc9aed and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1cfe49f127d25; op2val:0x3ff6ef1eea9c3ec3; op3val:0x3fe9880e2cbc9aed; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 336, x18)

inst_784:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1cfe49f127d25 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ef1eea9c3ec3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9880e2cbc9aed and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1cfe49f127d25; op2val:0x3ff6ef1eea9c3ec3; op3val:0x3fe9880e2cbc9aed; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 352, x18)

inst_785:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1cfe49f127d25 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6ef1eea9c3ec3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9880e2cbc9aed and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1cfe49f127d25; op2val:0x3ff6ef1eea9c3ec3; op3val:0x3fe9880e2cbc9aed; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 368, x18)

inst_786:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6569842555b14 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x05771b83164cc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d0ade2fa2c95 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6569842555b14; op2val:0x40005771b83164cc; op3val:0x3fe6d0ade2fa2c95; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 384, x18)

inst_787:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6569842555b14 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x05771b83164cc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d0ade2fa2c95 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6569842555b14; op2val:0x40005771b83164cc; op3val:0x3fe6d0ade2fa2c95; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 400, x18)

inst_788:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6569842555b14 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x05771b83164cc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d0ade2fa2c95 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6569842555b14; op2val:0x40005771b83164cc; op3val:0x3fe6d0ade2fa2c95; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 416, x18)

inst_789:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6569842555b14 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x05771b83164cc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d0ade2fa2c95 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6569842555b14; op2val:0x40005771b83164cc; op3val:0x3fe6d0ade2fa2c95; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 432, x18)

inst_790:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6569842555b14 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x05771b83164cc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d0ade2fa2c95 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6569842555b14; op2val:0x40005771b83164cc; op3val:0x3fe6d0ade2fa2c95; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 448, x18)

inst_791:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4bd73480df80e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xab77da4b361b8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x150da8498ecc8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4bd73480df80e; op2val:0x3feab77da4b361b8; op3val:0x3fd150da8498ecc8; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 464, x18)

inst_792:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4bd73480df80e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xab77da4b361b8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x150da8498ecc8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4bd73480df80e; op2val:0x3feab77da4b361b8; op3val:0x3fd150da8498ecc8; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 480, x18)

inst_793:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4bd73480df80e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xab77da4b361b8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x150da8498ecc8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4bd73480df80e; op2val:0x3feab77da4b361b8; op3val:0x3fd150da8498ecc8; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 496, x18)

inst_794:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4bd73480df80e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xab77da4b361b8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x150da8498ecc8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4bd73480df80e; op2val:0x3feab77da4b361b8; op3val:0x3fd150da8498ecc8; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 512, x18)

inst_795:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4bd73480df80e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xab77da4b361b8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x150da8498ecc8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4bd73480df80e; op2val:0x3feab77da4b361b8; op3val:0x3fd150da8498ecc8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 528, x18)

inst_796:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x487eedf071008 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x8ed36a783bd36 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffc49f28c3a58 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb487eedf071008; op2val:0x4008ed36a783bd36; op3val:0x3fcffc49f28c3a58; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 544, x18)

inst_797:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x487eedf071008 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x8ed36a783bd36 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffc49f28c3a58 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb487eedf071008; op2val:0x4008ed36a783bd36; op3val:0x3fcffc49f28c3a58; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 560, x18)

inst_798:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x487eedf071008 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x8ed36a783bd36 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffc49f28c3a58 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb487eedf071008; op2val:0x4008ed36a783bd36; op3val:0x3fcffc49f28c3a58; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 576, x18)

inst_799:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x487eedf071008 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x8ed36a783bd36 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffc49f28c3a58 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb487eedf071008; op2val:0x4008ed36a783bd36; op3val:0x3fcffc49f28c3a58; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 592, x18)

inst_800:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x487eedf071008 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x8ed36a783bd36 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffc49f28c3a58 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb487eedf071008; op2val:0x4008ed36a783bd36; op3val:0x3fcffc49f28c3a58; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 608, x18)

inst_801:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x1273e693dc880 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xc5b0e1da72827 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe664b8d43a021 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f91273e693dc880; op2val:0x404c5b0e1da72827; op3val:0x3fee664b8d43a021; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 624, x18)

inst_802:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x1273e693dc880 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xc5b0e1da72827 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe664b8d43a021 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f91273e693dc880; op2val:0x404c5b0e1da72827; op3val:0x3fee664b8d43a021; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 640, x18)

inst_803:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x1273e693dc880 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xc5b0e1da72827 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe664b8d43a021 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f91273e693dc880; op2val:0x404c5b0e1da72827; op3val:0x3fee664b8d43a021; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 656, x18)

inst_804:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x1273e693dc880 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xc5b0e1da72827 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe664b8d43a021 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f91273e693dc880; op2val:0x404c5b0e1da72827; op3val:0x3fee664b8d43a021; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 672, x18)

inst_805:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x1273e693dc880 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xc5b0e1da72827 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe664b8d43a021 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f91273e693dc880; op2val:0x404c5b0e1da72827; op3val:0x3fee664b8d43a021; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 688, x18)

inst_806:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc287b4c2af288 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x024783d5d141f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc68a9fd313334 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec287b4c2af288; op2val:0x3ff024783d5d141f; op3val:0x3fec68a9fd313334; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 704, x18)

inst_807:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc287b4c2af288 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x024783d5d141f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc68a9fd313334 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec287b4c2af288; op2val:0x3ff024783d5d141f; op3val:0x3fec68a9fd313334; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 720, x18)

inst_808:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc287b4c2af288 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x024783d5d141f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc68a9fd313334 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec287b4c2af288; op2val:0x3ff024783d5d141f; op3val:0x3fec68a9fd313334; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 736, x18)

inst_809:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc287b4c2af288 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x024783d5d141f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc68a9fd313334 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec287b4c2af288; op2val:0x3ff024783d5d141f; op3val:0x3fec68a9fd313334; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 752, x18)

inst_810:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc287b4c2af288 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x024783d5d141f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc68a9fd313334 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec287b4c2af288; op2val:0x3ff024783d5d141f; op3val:0x3fec68a9fd313334; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 768, x18)

inst_811:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa9abae86cce36 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa118acb5fc403 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5ac4d747f1bb2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea9abae86cce36; op2val:0x3fda118acb5fc403; op3val:0x3fd5ac4d747f1bb2; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 784, x18)

inst_812:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa9abae86cce36 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa118acb5fc403 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5ac4d747f1bb2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea9abae86cce36; op2val:0x3fda118acb5fc403; op3val:0x3fd5ac4d747f1bb2; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 800, x18)

inst_813:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa9abae86cce36 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa118acb5fc403 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5ac4d747f1bb2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea9abae86cce36; op2val:0x3fda118acb5fc403; op3val:0x3fd5ac4d747f1bb2; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 816, x18)

inst_814:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa9abae86cce36 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa118acb5fc403 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5ac4d747f1bb2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea9abae86cce36; op2val:0x3fda118acb5fc403; op3val:0x3fd5ac4d747f1bb2; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 832, x18)

inst_815:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa9abae86cce36 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa118acb5fc403 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5ac4d747f1bb2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea9abae86cce36; op2val:0x3fda118acb5fc403; op3val:0x3fd5ac4d747f1bb2; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 848, x18)

inst_816:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1a78dc369aa80 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf805fdbd17127 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x161246f0f1eec and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1a78dc369aa80; op2val:0x3fdf805fdbd17127; op3val:0x3fc161246f0f1eec; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 864, x18)

inst_817:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1a78dc369aa80 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf805fdbd17127 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x161246f0f1eec and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1a78dc369aa80; op2val:0x3fdf805fdbd17127; op3val:0x3fc161246f0f1eec; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 880, x18)

inst_818:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1a78dc369aa80 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf805fdbd17127 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x161246f0f1eec and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1a78dc369aa80; op2val:0x3fdf805fdbd17127; op3val:0x3fc161246f0f1eec; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 896, x18)

inst_819:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1a78dc369aa80 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf805fdbd17127 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x161246f0f1eec and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1a78dc369aa80; op2val:0x3fdf805fdbd17127; op3val:0x3fc161246f0f1eec; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 912, x18)

inst_820:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1a78dc369aa80 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf805fdbd17127 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x161246f0f1eec and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1a78dc369aa80; op2val:0x3fdf805fdbd17127; op3val:0x3fc161246f0f1eec; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 928, x18)

inst_821:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x69ba9c3a10fd9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7f5457c198ba6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0ed2ae7b0d875 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe69ba9c3a10fd9; op2val:0x3fe7f5457c198ba6; op3val:0x3fe0ed2ae7b0d875; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 944, x18)

inst_822:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x69ba9c3a10fd9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7f5457c198ba6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0ed2ae7b0d875 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe69ba9c3a10fd9; op2val:0x3fe7f5457c198ba6; op3val:0x3fe0ed2ae7b0d875; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 960, x18)

inst_823:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x69ba9c3a10fd9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7f5457c198ba6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0ed2ae7b0d875 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe69ba9c3a10fd9; op2val:0x3fe7f5457c198ba6; op3val:0x3fe0ed2ae7b0d875; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 976, x18)

inst_824:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x69ba9c3a10fd9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7f5457c198ba6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0ed2ae7b0d875 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe69ba9c3a10fd9; op2val:0x3fe7f5457c198ba6; op3val:0x3fe0ed2ae7b0d875; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 992, x18)

inst_825:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x69ba9c3a10fd9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7f5457c198ba6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0ed2ae7b0d875 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe69ba9c3a10fd9; op2val:0x3fe7f5457c198ba6; op3val:0x3fe0ed2ae7b0d875; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1008, x18)

inst_826:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbd2045a7fa026 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x6e2c3fdfbbbc1 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3e588a190b7e8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbd2045a7fa026; op2val:0x3fc6e2c3fdfbbbc1; op3val:0x3fb3e588a190b7e8; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1024, x18)

inst_827:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbd2045a7fa026 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x6e2c3fdfbbbc1 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3e588a190b7e8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbd2045a7fa026; op2val:0x3fc6e2c3fdfbbbc1; op3val:0x3fb3e588a190b7e8; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1040, x18)

inst_828:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbd2045a7fa026 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x6e2c3fdfbbbc1 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3e588a190b7e8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbd2045a7fa026; op2val:0x3fc6e2c3fdfbbbc1; op3val:0x3fb3e588a190b7e8; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1056, x18)

inst_829:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbd2045a7fa026 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x6e2c3fdfbbbc1 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3e588a190b7e8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbd2045a7fa026; op2val:0x3fc6e2c3fdfbbbc1; op3val:0x3fb3e588a190b7e8; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1072, x18)

inst_830:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbd2045a7fa026 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x6e2c3fdfbbbc1 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3e588a190b7e8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbd2045a7fa026; op2val:0x3fc6e2c3fdfbbbc1; op3val:0x3fb3e588a190b7e8; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1088, x18)

inst_831:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb56fd497d90e0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd01701e6484ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c8100cf2074a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb56fd497d90e0; op2val:0x400d01701e6484ea; op3val:0x3fe8c8100cf2074a; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1104, x18)

inst_832:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb56fd497d90e0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd01701e6484ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c8100cf2074a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb56fd497d90e0; op2val:0x400d01701e6484ea; op3val:0x3fe8c8100cf2074a; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1120, x18)

inst_833:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb56fd497d90e0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd01701e6484ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c8100cf2074a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb56fd497d90e0; op2val:0x400d01701e6484ea; op3val:0x3fe8c8100cf2074a; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1136, x18)

inst_834:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb56fd497d90e0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd01701e6484ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c8100cf2074a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb56fd497d90e0; op2val:0x400d01701e6484ea; op3val:0x3fe8c8100cf2074a; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1152, x18)

inst_835:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb56fd497d90e0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd01701e6484ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c8100cf2074a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb56fd497d90e0; op2val:0x400d01701e6484ea; op3val:0x3fe8c8100cf2074a; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1168, x18)

inst_836:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef85fc3c2af94 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe3c96179fca73 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd437cbe33a224 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef85fc3c2af94; op2val:0x3fde3c96179fca73; op3val:0x3fdd437cbe33a224; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1184, x18)

inst_837:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef85fc3c2af94 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe3c96179fca73 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd437cbe33a224 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef85fc3c2af94; op2val:0x3fde3c96179fca73; op3val:0x3fdd437cbe33a224; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1200, x18)

inst_838:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef85fc3c2af94 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe3c96179fca73 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd437cbe33a224 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef85fc3c2af94; op2val:0x3fde3c96179fca73; op3val:0x3fdd437cbe33a224; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1216, x18)

inst_839:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef85fc3c2af94 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe3c96179fca73 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd437cbe33a224 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef85fc3c2af94; op2val:0x3fde3c96179fca73; op3val:0x3fdd437cbe33a224; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1232, x18)

inst_840:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef85fc3c2af94 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe3c96179fca73 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd437cbe33a224 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef85fc3c2af94; op2val:0x3fde3c96179fca73; op3val:0x3fdd437cbe33a224; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1248, x18)

inst_841:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb9a094e1988 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x67d0a7a1ec198 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x43c7ea59e15e2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feccb9a094e1988; op2val:0x3fe67d0a7a1ec198; op3val:0x3fe43c7ea59e15e2; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1264, x18)

inst_842:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb9a094e1988 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x67d0a7a1ec198 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x43c7ea59e15e2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feccb9a094e1988; op2val:0x3fe67d0a7a1ec198; op3val:0x3fe43c7ea59e15e2; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1280, x18)

inst_843:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb9a094e1988 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x67d0a7a1ec198 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x43c7ea59e15e2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feccb9a094e1988; op2val:0x3fe67d0a7a1ec198; op3val:0x3fe43c7ea59e15e2; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1296, x18)

inst_844:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb9a094e1988 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x67d0a7a1ec198 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x43c7ea59e15e2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feccb9a094e1988; op2val:0x3fe67d0a7a1ec198; op3val:0x3fe43c7ea59e15e2; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1312, x18)

inst_845:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb9a094e1988 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x67d0a7a1ec198 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x43c7ea59e15e2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feccb9a094e1988; op2val:0x3fe67d0a7a1ec198; op3val:0x3fe43c7ea59e15e2; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1328, x18)

inst_846:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc5542916582f3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4e2f61ec1bc22 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x27e3dabad83b6 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec5542916582f3; op2val:0x3fd4e2f61ec1bc22; op3val:0x3fd27e3dabad83b6; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1344, x18)

inst_847:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc5542916582f3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4e2f61ec1bc22 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x27e3dabad83b6 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec5542916582f3; op2val:0x3fd4e2f61ec1bc22; op3val:0x3fd27e3dabad83b6; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1360, x18)

inst_848:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc5542916582f3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4e2f61ec1bc22 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x27e3dabad83b6 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec5542916582f3; op2val:0x3fd4e2f61ec1bc22; op3val:0x3fd27e3dabad83b6; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1376, x18)

inst_849:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc5542916582f3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4e2f61ec1bc22 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x27e3dabad83b6 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec5542916582f3; op2val:0x3fd4e2f61ec1bc22; op3val:0x3fd27e3dabad83b6; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1392, x18)
addi x16,x16,2040

inst_850:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc5542916582f3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4e2f61ec1bc22 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x27e3dabad83b6 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec5542916582f3; op2val:0x3fd4e2f61ec1bc22; op3val:0x3fd27e3dabad83b6; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1408, x18)

inst_851:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeb95f861c7629 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0111a568f20fd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeda370f0d67e4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeb95f861c7629; op2val:0x3fd0111a568f20fd; op3val:0x3fceda370f0d67e4; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1424, x18)

inst_852:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeb95f861c7629 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0111a568f20fd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeda370f0d67e4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeb95f861c7629; op2val:0x3fd0111a568f20fd; op3val:0x3fceda370f0d67e4; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1440, x18)

inst_853:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeb95f861c7629 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0111a568f20fd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeda370f0d67e4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeb95f861c7629; op2val:0x3fd0111a568f20fd; op3val:0x3fceda370f0d67e4; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1456, x18)

inst_854:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeb95f861c7629 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0111a568f20fd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeda370f0d67e4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeb95f861c7629; op2val:0x3fd0111a568f20fd; op3val:0x3fceda370f0d67e4; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1472, x18)

inst_855:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xeb95f861c7629 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0111a568f20fd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeda370f0d67e4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feeb95f861c7629; op2val:0x3fd0111a568f20fd; op3val:0x3fceda370f0d67e4; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1488, x18)

inst_856:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b08c3fb3f140 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x86a62184a7c31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe0bbcb7f373e9 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b08c3fb3f140; op2val:0x3ff86a62184a7c31; op3val:0x3fee0bbcb7f373e9; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1504, x18)

inst_857:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b08c3fb3f140 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x86a62184a7c31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe0bbcb7f373e9 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b08c3fb3f140; op2val:0x3ff86a62184a7c31; op3val:0x3fee0bbcb7f373e9; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1520, x18)

inst_858:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b08c3fb3f140 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x86a62184a7c31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe0bbcb7f373e9 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b08c3fb3f140; op2val:0x3ff86a62184a7c31; op3val:0x3fee0bbcb7f373e9; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1536, x18)

inst_859:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b08c3fb3f140 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x86a62184a7c31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe0bbcb7f373e9 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b08c3fb3f140; op2val:0x3ff86a62184a7c31; op3val:0x3fee0bbcb7f373e9; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1552, x18)

inst_860:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b08c3fb3f140 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x86a62184a7c31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe0bbcb7f373e9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b08c3fb3f140; op2val:0x3ff86a62184a7c31; op3val:0x3fee0bbcb7f373e9; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1568, x18)

inst_861:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xabf756d3d3025 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcad4efb05bc11 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7f863d6ece360 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feabf756d3d3025; op2val:0x3fdcad4efb05bc11; op3val:0x3fd7f863d6ece360; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1584, x18)

inst_862:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xabf756d3d3025 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcad4efb05bc11 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7f863d6ece360 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feabf756d3d3025; op2val:0x3fdcad4efb05bc11; op3val:0x3fd7f863d6ece360; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1600, x18)

inst_863:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xabf756d3d3025 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcad4efb05bc11 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7f863d6ece360 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feabf756d3d3025; op2val:0x3fdcad4efb05bc11; op3val:0x3fd7f863d6ece360; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1616, x18)

inst_864:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xabf756d3d3025 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcad4efb05bc11 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7f863d6ece360 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feabf756d3d3025; op2val:0x3fdcad4efb05bc11; op3val:0x3fd7f863d6ece360; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1632, x18)

inst_865:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xabf756d3d3025 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcad4efb05bc11 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7f863d6ece360 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feabf756d3d3025; op2val:0x3fdcad4efb05bc11; op3val:0x3fd7f863d6ece360; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1648, x18)

inst_866:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x557177e84d056 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x50cb664dd723f and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xc13436ce02260 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd557177e84d056; op2val:0x3fb50cb664dd723f; op3val:0x3f9c13436ce02260; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1664, x18)

inst_867:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x557177e84d056 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x50cb664dd723f and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xc13436ce02260 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd557177e84d056; op2val:0x3fb50cb664dd723f; op3val:0x3f9c13436ce02260; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1680, x18)

inst_868:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x557177e84d056 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x50cb664dd723f and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xc13436ce02260 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd557177e84d056; op2val:0x3fb50cb664dd723f; op3val:0x3f9c13436ce02260; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1696, x18)

inst_869:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x557177e84d056 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x50cb664dd723f and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xc13436ce02260 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd557177e84d056; op2val:0x3fb50cb664dd723f; op3val:0x3f9c13436ce02260; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1712, x18)

inst_870:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x557177e84d056 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x50cb664dd723f and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xc13436ce02260 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd557177e84d056; op2val:0x3fb50cb664dd723f; op3val:0x3f9c13436ce02260; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1728, x18)

inst_871:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8ed4fa41d2b08 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9c9fc97013bf7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x416bd96e99329 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8ed4fa41d2b08; op2val:0x4009c9fc97013bf7; op3val:0x3fe416bd96e99329; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1744, x18)

inst_872:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8ed4fa41d2b08 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9c9fc97013bf7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x416bd96e99329 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8ed4fa41d2b08; op2val:0x4009c9fc97013bf7; op3val:0x3fe416bd96e99329; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1760, x18)

inst_873:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8ed4fa41d2b08 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9c9fc97013bf7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x416bd96e99329 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8ed4fa41d2b08; op2val:0x4009c9fc97013bf7; op3val:0x3fe416bd96e99329; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1776, x18)

inst_874:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8ed4fa41d2b08 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9c9fc97013bf7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x416bd96e99329 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8ed4fa41d2b08; op2val:0x4009c9fc97013bf7; op3val:0x3fe416bd96e99329; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1792, x18)

inst_875:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8ed4fa41d2b08 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9c9fc97013bf7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x416bd96e99329 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8ed4fa41d2b08; op2val:0x4009c9fc97013bf7; op3val:0x3fe416bd96e99329; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1808, x18)

inst_876:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x226f44e216580 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x404a6e250f952 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6b5f873a60a44 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd226f44e216580; op2val:0x3ff404a6e250f952; op3val:0x3fd6b5f873a60a44; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1824, x18)

inst_877:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x226f44e216580 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x404a6e250f952 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6b5f873a60a44 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd226f44e216580; op2val:0x3ff404a6e250f952; op3val:0x3fd6b5f873a60a44; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1840, x18)

inst_878:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x226f44e216580 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x404a6e250f952 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6b5f873a60a44 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd226f44e216580; op2val:0x3ff404a6e250f952; op3val:0x3fd6b5f873a60a44; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1856, x18)

inst_879:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x226f44e216580 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x404a6e250f952 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6b5f873a60a44 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd226f44e216580; op2val:0x3ff404a6e250f952; op3val:0x3fd6b5f873a60a44; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1872, x18)

inst_880:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x226f44e216580 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x404a6e250f952 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6b5f873a60a44 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd226f44e216580; op2val:0x3ff404a6e250f952; op3val:0x3fd6b5f873a60a44; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1888, x18)

inst_881:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcbb73b1332186 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8163e6a1ed26f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5a08faee8ef88 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcbb73b1332186; op2val:0x3fe8163e6a1ed26f; op3val:0x3fd5a08faee8ef88; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1904, x18)

inst_882:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcbb73b1332186 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8163e6a1ed26f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5a08faee8ef88 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcbb73b1332186; op2val:0x3fe8163e6a1ed26f; op3val:0x3fd5a08faee8ef88; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1920, x18)

inst_883:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcbb73b1332186 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8163e6a1ed26f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5a08faee8ef88 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcbb73b1332186; op2val:0x3fe8163e6a1ed26f; op3val:0x3fd5a08faee8ef88; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1936, x18)

inst_884:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcbb73b1332186 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8163e6a1ed26f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5a08faee8ef88 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcbb73b1332186; op2val:0x3fe8163e6a1ed26f; op3val:0x3fd5a08faee8ef88; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1952, x18)

inst_885:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcbb73b1332186 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8163e6a1ed26f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5a08faee8ef88 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcbb73b1332186; op2val:0x3fe8163e6a1ed26f; op3val:0x3fd5a08faee8ef88; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1968, x18)

inst_886:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34796909eda5c and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x0db4892c3492a and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x44fd1e0787200 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34796909eda5c; op2val:0x3f70db4892c3492a; op3val:0x3f644fd1e0787200; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1984, x18)

inst_887:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34796909eda5c and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x0db4892c3492a and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x44fd1e0787200 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34796909eda5c; op2val:0x3f70db4892c3492a; op3val:0x3f644fd1e0787200; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 2000, x18)

inst_888:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34796909eda5c and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x0db4892c3492a and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x44fd1e0787200 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34796909eda5c; op2val:0x3f70db4892c3492a; op3val:0x3f644fd1e0787200; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_8)

inst_889:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34796909eda5c and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x0db4892c3492a and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x44fd1e0787200 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34796909eda5c; op2val:0x3f70db4892c3492a; op3val:0x3f644fd1e0787200; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 0, x18)

inst_890:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34796909eda5c and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x0db4892c3492a and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x44fd1e0787200 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34796909eda5c; op2val:0x3f70db4892c3492a; op3val:0x3f644fd1e0787200; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 16, x18)

inst_891:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ce2f25e51222 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xce7a976d35582 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e3ca87f617e9 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ce2f25e51222; op2val:0x3fece7a976d35582; op3val:0x3fe1e3ca87f617e9; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 32, x18)

inst_892:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ce2f25e51222 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xce7a976d35582 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e3ca87f617e9 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ce2f25e51222; op2val:0x3fece7a976d35582; op3val:0x3fe1e3ca87f617e9; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 48, x18)

inst_893:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ce2f25e51222 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xce7a976d35582 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e3ca87f617e9 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ce2f25e51222; op2val:0x3fece7a976d35582; op3val:0x3fe1e3ca87f617e9; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 64, x18)

inst_894:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ce2f25e51222 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xce7a976d35582 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e3ca87f617e9 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ce2f25e51222; op2val:0x3fece7a976d35582; op3val:0x3fe1e3ca87f617e9; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 80, x18)

inst_895:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ce2f25e51222 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xce7a976d35582 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e3ca87f617e9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ce2f25e51222; op2val:0x3fece7a976d35582; op3val:0x3fe1e3ca87f617e9; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 96, x18)

inst_896:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9fab4c4f58420 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa986c6c1a342d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x59771c0948a72 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9fab4c4f58420; op2val:0x3fea986c6c1a342d; op3val:0x3fe59771c0948a72; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 112, x18)

inst_897:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9fab4c4f58420 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa986c6c1a342d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x59771c0948a72 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9fab4c4f58420; op2val:0x3fea986c6c1a342d; op3val:0x3fe59771c0948a72; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 128, x18)

inst_898:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9fab4c4f58420 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa986c6c1a342d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x59771c0948a72 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9fab4c4f58420; op2val:0x3fea986c6c1a342d; op3val:0x3fe59771c0948a72; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 144, x18)

inst_899:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9fab4c4f58420 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa986c6c1a342d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x59771c0948a72 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9fab4c4f58420; op2val:0x3fea986c6c1a342d; op3val:0x3fe59771c0948a72; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 160, x18)

inst_900:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9fab4c4f58420 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa986c6c1a342d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x59771c0948a72 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9fab4c4f58420; op2val:0x3fea986c6c1a342d; op3val:0x3fe59771c0948a72; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 176, x18)

inst_901:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb56a6431e5f40 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x02598f966223c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb96e404e81174 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb56a6431e5f40; op2val:0x40002598f966223c; op3val:0x3fdb96e404e81174; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 192, x18)

inst_902:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb56a6431e5f40 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x02598f966223c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb96e404e81174 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb56a6431e5f40; op2val:0x40002598f966223c; op3val:0x3fdb96e404e81174; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 208, x18)

inst_903:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb56a6431e5f40 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x02598f966223c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb96e404e81174 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb56a6431e5f40; op2val:0x40002598f966223c; op3val:0x3fdb96e404e81174; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 224, x18)

inst_904:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb56a6431e5f40 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x02598f966223c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb96e404e81174 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb56a6431e5f40; op2val:0x40002598f966223c; op3val:0x3fdb96e404e81174; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 240, x18)

inst_905:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb56a6431e5f40 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x02598f966223c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb96e404e81174 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcb56a6431e5f40; op2val:0x40002598f966223c; op3val:0x3fdb96e404e81174; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 256, x18)

inst_906:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x84f2ff9c1858d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2037f7a0de1b8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb5e667ff63e10 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe84f2ff9c1858d; op2val:0x3fe2037f7a0de1b8; op3val:0x3fdb5e667ff63e10; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 272, x18)

inst_907:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x84f2ff9c1858d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2037f7a0de1b8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb5e667ff63e10 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe84f2ff9c1858d; op2val:0x3fe2037f7a0de1b8; op3val:0x3fdb5e667ff63e10; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 288, x18)

inst_908:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x84f2ff9c1858d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2037f7a0de1b8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb5e667ff63e10 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe84f2ff9c1858d; op2val:0x3fe2037f7a0de1b8; op3val:0x3fdb5e667ff63e10; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 304, x18)

inst_909:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x84f2ff9c1858d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2037f7a0de1b8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb5e667ff63e10 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe84f2ff9c1858d; op2val:0x3fe2037f7a0de1b8; op3val:0x3fdb5e667ff63e10; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 320, x18)

inst_910:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x84f2ff9c1858d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2037f7a0de1b8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb5e667ff63e10 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe84f2ff9c1858d; op2val:0x3fe2037f7a0de1b8; op3val:0x3fdb5e667ff63e10; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 336, x18)

inst_911:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac73290f888b3 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa23204299f289 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5df3df406bb89 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feac73290f888b3; op2val:0x3fea23204299f289; op3val:0x3fe5df3df406bb89; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 352, x18)

inst_912:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac73290f888b3 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa23204299f289 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5df3df406bb89 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feac73290f888b3; op2val:0x3fea23204299f289; op3val:0x3fe5df3df406bb89; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 368, x18)

inst_913:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac73290f888b3 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa23204299f289 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5df3df406bb89 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feac73290f888b3; op2val:0x3fea23204299f289; op3val:0x3fe5df3df406bb89; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 384, x18)

inst_914:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac73290f888b3 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa23204299f289 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5df3df406bb89 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feac73290f888b3; op2val:0x3fea23204299f289; op3val:0x3fe5df3df406bb89; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 400, x18)

inst_915:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac73290f888b3 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa23204299f289 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5df3df406bb89 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feac73290f888b3; op2val:0x3fea23204299f289; op3val:0x3fe5df3df406bb89; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 416, x18)

inst_916:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6e4343bf90580 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9fbe4b6baa77b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2967a653c9031 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6e4343bf90580; op2val:0x4019fbe4b6baa77b; op3val:0x3fe2967a653c9031; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 432, x18)

inst_917:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6e4343bf90580 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9fbe4b6baa77b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2967a653c9031 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6e4343bf90580; op2val:0x4019fbe4b6baa77b; op3val:0x3fe2967a653c9031; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 448, x18)

inst_918:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6e4343bf90580 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9fbe4b6baa77b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2967a653c9031 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6e4343bf90580; op2val:0x4019fbe4b6baa77b; op3val:0x3fe2967a653c9031; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 464, x18)

inst_919:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6e4343bf90580 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9fbe4b6baa77b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2967a653c9031 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6e4343bf90580; op2val:0x4019fbe4b6baa77b; op3val:0x3fe2967a653c9031; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 480, x18)

inst_920:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6e4343bf90580 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9fbe4b6baa77b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2967a653c9031 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6e4343bf90580; op2val:0x4019fbe4b6baa77b; op3val:0x3fe2967a653c9031; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 496, x18)

inst_921:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8e8aff137bd98 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1ebe75e0b8349 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbe67cba473cbc and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8e8aff137bd98; op2val:0x3fe1ebe75e0b8349; op3val:0x3fdbe67cba473cbc; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 512, x18)

inst_922:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8e8aff137bd98 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1ebe75e0b8349 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbe67cba473cbc and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8e8aff137bd98; op2val:0x3fe1ebe75e0b8349; op3val:0x3fdbe67cba473cbc; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 528, x18)

inst_923:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8e8aff137bd98 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1ebe75e0b8349 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbe67cba473cbc and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8e8aff137bd98; op2val:0x3fe1ebe75e0b8349; op3val:0x3fdbe67cba473cbc; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 544, x18)

inst_924:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8e8aff137bd98 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1ebe75e0b8349 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbe67cba473cbc and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8e8aff137bd98; op2val:0x3fe1ebe75e0b8349; op3val:0x3fdbe67cba473cbc; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 560, x18)

inst_925:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8e8aff137bd98 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1ebe75e0b8349 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbe67cba473cbc and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8e8aff137bd98; op2val:0x3fe1ebe75e0b8349; op3val:0x3fdbe67cba473cbc; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 576, x18)

inst_926:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x392f888d033e8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4526452792ea5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8dc82a0383d47 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe392f888d033e8; op2val:0x3ff4526452792ea5; op3val:0x3fe8dc82a0383d47; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 592, x18)

inst_927:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x392f888d033e8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4526452792ea5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8dc82a0383d47 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe392f888d033e8; op2val:0x3ff4526452792ea5; op3val:0x3fe8dc82a0383d47; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 608, x18)

inst_928:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x392f888d033e8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4526452792ea5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8dc82a0383d47 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe392f888d033e8; op2val:0x3ff4526452792ea5; op3val:0x3fe8dc82a0383d47; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 624, x18)

inst_929:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x392f888d033e8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4526452792ea5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8dc82a0383d47 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe392f888d033e8; op2val:0x3ff4526452792ea5; op3val:0x3fe8dc82a0383d47; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 640, x18)

inst_930:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x392f888d033e8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4526452792ea5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8dc82a0383d47 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe392f888d033e8; op2val:0x3ff4526452792ea5; op3val:0x3fe8dc82a0383d47; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 656, x18)

inst_931:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2afe79f880e6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x044293842e79f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb9ebb31330ee6 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb2afe79f880e6; op2val:0x3fe044293842e79f; op3val:0x3fdb9ebb31330ee6; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 672, x18)

inst_932:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2afe79f880e6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x044293842e79f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb9ebb31330ee6 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb2afe79f880e6; op2val:0x3fe044293842e79f; op3val:0x3fdb9ebb31330ee6; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 688, x18)

inst_933:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2afe79f880e6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x044293842e79f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb9ebb31330ee6 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb2afe79f880e6; op2val:0x3fe044293842e79f; op3val:0x3fdb9ebb31330ee6; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 704, x18)

inst_934:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2afe79f880e6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x044293842e79f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb9ebb31330ee6 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb2afe79f880e6; op2val:0x3fe044293842e79f; op3val:0x3fdb9ebb31330ee6; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 720, x18)
addi x16,x16,2040

inst_935:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2afe79f880e6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x044293842e79f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb9ebb31330ee6 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb2afe79f880e6; op2val:0x3fe044293842e79f; op3val:0x3fdb9ebb31330ee6; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 736, x18)

inst_936:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb30bd3343e263 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb0d1c6a3fbf50 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6fc43950b44b0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb30bd3343e263; op2val:0x3feb0d1c6a3fbf50; op3val:0x3fe6fc43950b44b0; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 752, x18)

inst_937:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb30bd3343e263 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb0d1c6a3fbf50 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6fc43950b44b0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb30bd3343e263; op2val:0x3feb0d1c6a3fbf50; op3val:0x3fe6fc43950b44b0; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 768, x18)

inst_938:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb30bd3343e263 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb0d1c6a3fbf50 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6fc43950b44b0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb30bd3343e263; op2val:0x3feb0d1c6a3fbf50; op3val:0x3fe6fc43950b44b0; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 784, x18)

inst_939:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb30bd3343e263 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb0d1c6a3fbf50 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6fc43950b44b0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb30bd3343e263; op2val:0x3feb0d1c6a3fbf50; op3val:0x3fe6fc43950b44b0; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 800, x18)

inst_940:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb30bd3343e263 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb0d1c6a3fbf50 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6fc43950b44b0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb30bd3343e263; op2val:0x3feb0d1c6a3fbf50; op3val:0x3fe6fc43950b44b0; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 816, x18)

inst_941:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0657cb41dd4e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf53e1684b360b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe5f780a55d6f8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0657cb41dd4e; op2val:0x3fdf53e1684b360b; op3val:0x3fde5f780a55d6f8; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 832, x18)

inst_942:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0657cb41dd4e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf53e1684b360b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe5f780a55d6f8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0657cb41dd4e; op2val:0x3fdf53e1684b360b; op3val:0x3fde5f780a55d6f8; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 848, x18)

inst_943:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0657cb41dd4e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf53e1684b360b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe5f780a55d6f8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0657cb41dd4e; op2val:0x3fdf53e1684b360b; op3val:0x3fde5f780a55d6f8; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 864, x18)

inst_944:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0657cb41dd4e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf53e1684b360b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe5f780a55d6f8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0657cb41dd4e; op2val:0x3fdf53e1684b360b; op3val:0x3fde5f780a55d6f8; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 880, x18)

inst_945:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0657cb41dd4e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf53e1684b360b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe5f780a55d6f8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0657cb41dd4e; op2val:0x3fdf53e1684b360b; op3val:0x3fde5f780a55d6f8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 896, x18)

inst_946:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda2076e993049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x093e6659372e1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xeb3f2c82c09e0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feda2076e993049; op2val:0x3fe093e6659372e1; op3val:0x3fdeb3f2c82c09e0; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 912, x18)

inst_947:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda2076e993049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x093e6659372e1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xeb3f2c82c09e0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feda2076e993049; op2val:0x3fe093e6659372e1; op3val:0x3fdeb3f2c82c09e0; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 928, x18)

inst_948:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda2076e993049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x093e6659372e1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xeb3f2c82c09e0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feda2076e993049; op2val:0x3fe093e6659372e1; op3val:0x3fdeb3f2c82c09e0; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 944, x18)

inst_949:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda2076e993049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x093e6659372e1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xeb3f2c82c09e0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feda2076e993049; op2val:0x3fe093e6659372e1; op3val:0x3fdeb3f2c82c09e0; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 960, x18)

inst_950:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda2076e993049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x093e6659372e1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xeb3f2c82c09e0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feda2076e993049; op2val:0x3fe093e6659372e1; op3val:0x3fdeb3f2c82c09e0; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 976, x18)

inst_951:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02ccddd714043 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd46236260fb41 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd981ceb7ce01a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe02ccddd714043; op2val:0x3ffd46236260fb41; op3val:0x3fed981ceb7ce01a; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 992, x18)

inst_952:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02ccddd714043 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd46236260fb41 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd981ceb7ce01a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe02ccddd714043; op2val:0x3ffd46236260fb41; op3val:0x3fed981ceb7ce01a; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1008, x18)

inst_953:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02ccddd714043 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd46236260fb41 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd981ceb7ce01a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe02ccddd714043; op2val:0x3ffd46236260fb41; op3val:0x3fed981ceb7ce01a; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1024, x18)

inst_954:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02ccddd714043 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd46236260fb41 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd981ceb7ce01a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe02ccddd714043; op2val:0x3ffd46236260fb41; op3val:0x3fed981ceb7ce01a; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1040, x18)

inst_955:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02ccddd714043 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd46236260fb41 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd981ceb7ce01a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe02ccddd714043; op2val:0x3ffd46236260fb41; op3val:0x3fed981ceb7ce01a; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1056, x18)

inst_956:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcfbe52eea19fa and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2ef5cf17cda0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1267e71072593 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcfbe52eea19fa; op2val:0x3ff2ef5cf17cda0f; op3val:0x3fe1267e71072593; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1072, x18)

inst_957:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcfbe52eea19fa and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2ef5cf17cda0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1267e71072593 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcfbe52eea19fa; op2val:0x3ff2ef5cf17cda0f; op3val:0x3fe1267e71072593; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1088, x18)

inst_958:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcfbe52eea19fa and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2ef5cf17cda0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1267e71072593 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcfbe52eea19fa; op2val:0x3ff2ef5cf17cda0f; op3val:0x3fe1267e71072593; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1104, x18)

inst_959:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcfbe52eea19fa and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2ef5cf17cda0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1267e71072593 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcfbe52eea19fa; op2val:0x3ff2ef5cf17cda0f; op3val:0x3fe1267e71072593; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1120, x18)

inst_960:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcfbe52eea19fa and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2ef5cf17cda0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1267e71072593 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcfbe52eea19fa; op2val:0x3ff2ef5cf17cda0f; op3val:0x3fe1267e71072593; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1136, x18)

inst_961:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12ec74297ebc0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa664077ece2b4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc59d33e66c167 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12ec74297ebc0; op2val:0x400a664077ece2b4; op3val:0x3fec59d33e66c167; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1152, x18)

inst_962:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12ec74297ebc0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa664077ece2b4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc59d33e66c167 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12ec74297ebc0; op2val:0x400a664077ece2b4; op3val:0x3fec59d33e66c167; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1168, x18)

inst_963:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12ec74297ebc0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa664077ece2b4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc59d33e66c167 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12ec74297ebc0; op2val:0x400a664077ece2b4; op3val:0x3fec59d33e66c167; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1184, x18)

inst_964:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12ec74297ebc0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa664077ece2b4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc59d33e66c167 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12ec74297ebc0; op2val:0x400a664077ece2b4; op3val:0x3fec59d33e66c167; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1200, x18)

inst_965:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12ec74297ebc0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa664077ece2b4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc59d33e66c167 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12ec74297ebc0; op2val:0x400a664077ece2b4; op3val:0x3fec59d33e66c167; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1216, x18)

inst_966:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5023a30759f31 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x67ad467385c22 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd8457e35e9535 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5023a30759f31; op2val:0x3ff67ad467385c22; op3val:0x3fed8457e35e9535; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1232, x18)

inst_967:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5023a30759f31 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x67ad467385c22 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd8457e35e9535 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5023a30759f31; op2val:0x3ff67ad467385c22; op3val:0x3fed8457e35e9535; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1248, x18)

inst_968:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5023a30759f31 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x67ad467385c22 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd8457e35e9535 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5023a30759f31; op2val:0x3ff67ad467385c22; op3val:0x3fed8457e35e9535; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1264, x18)

inst_969:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5023a30759f31 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x67ad467385c22 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd8457e35e9535 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5023a30759f31; op2val:0x3ff67ad467385c22; op3val:0x3fed8457e35e9535; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1280, x18)

inst_970:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5023a30759f31 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x67ad467385c22 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd8457e35e9535 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5023a30759f31; op2val:0x3ff67ad467385c22; op3val:0x3fed8457e35e9535; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1296, x18)

inst_971:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x9b436f29ccf50 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x7d927b0aaa6ed and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x327f5748925be and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa9b436f29ccf50; op2val:0x4017d927b0aaa6ed; op3val:0x3fd327f5748925be; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1312, x18)

inst_972:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x9b436f29ccf50 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x7d927b0aaa6ed and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x327f5748925be and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa9b436f29ccf50; op2val:0x4017d927b0aaa6ed; op3val:0x3fd327f5748925be; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1328, x18)

inst_973:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x9b436f29ccf50 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x7d927b0aaa6ed and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x327f5748925be and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa9b436f29ccf50; op2val:0x4017d927b0aaa6ed; op3val:0x3fd327f5748925be; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1344, x18)

inst_974:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x9b436f29ccf50 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x7d927b0aaa6ed and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x327f5748925be and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa9b436f29ccf50; op2val:0x4017d927b0aaa6ed; op3val:0x3fd327f5748925be; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1360, x18)

inst_975:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x9b436f29ccf50 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x7d927b0aaa6ed and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x327f5748925be and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa9b436f29ccf50; op2val:0x4017d927b0aaa6ed; op3val:0x3fd327f5748925be; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1376, x18)

inst_976:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xc81f48532c680 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x0de481de515b5 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xe0e0023faf440 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c81f48532c680; op2val:0x4040de481de515b5; op3val:0x3fce0e0023faf440; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1392, x18)

inst_977:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xc81f48532c680 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x0de481de515b5 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xe0e0023faf440 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c81f48532c680; op2val:0x4040de481de515b5; op3val:0x3fce0e0023faf440; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1408, x18)

inst_978:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xc81f48532c680 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x0de481de515b5 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xe0e0023faf440 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c81f48532c680; op2val:0x4040de481de515b5; op3val:0x3fce0e0023faf440; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1424, x18)

inst_979:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xc81f48532c680 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x0de481de515b5 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xe0e0023faf440 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c81f48532c680; op2val:0x4040de481de515b5; op3val:0x3fce0e0023faf440; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1440, x18)

inst_980:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xc81f48532c680 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x0de481de515b5 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xe0e0023faf440 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c81f48532c680; op2val:0x4040de481de515b5; op3val:0x3fce0e0023faf440; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1456, x18)

inst_981:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x424f4f7df44f4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x817dc4f7e7cea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5579f4314275 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe424f4f7df44f4; op2val:0x3ff817dc4f7e7cea; op3val:0x3fee5579f4314275; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1472, x18)

inst_982:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x424f4f7df44f4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x817dc4f7e7cea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5579f4314275 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe424f4f7df44f4; op2val:0x3ff817dc4f7e7cea; op3val:0x3fee5579f4314275; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1488, x18)

inst_983:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x424f4f7df44f4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x817dc4f7e7cea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5579f4314275 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe424f4f7df44f4; op2val:0x3ff817dc4f7e7cea; op3val:0x3fee5579f4314275; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1504, x18)

inst_984:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x424f4f7df44f4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x817dc4f7e7cea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5579f4314275 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe424f4f7df44f4; op2val:0x3ff817dc4f7e7cea; op3val:0x3fee5579f4314275; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1520, x18)

inst_985:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x424f4f7df44f4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x817dc4f7e7cea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5579f4314275 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe424f4f7df44f4; op2val:0x3ff817dc4f7e7cea; op3val:0x3fee5579f4314275; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1536, x18)

inst_986:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef404650b37dc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb596b098e62b7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa7461eaa78bbf and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef404650b37dc; op2val:0x3feb596b098e62b7; op3val:0x3fea7461eaa78bbf; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1552, x18)

inst_987:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef404650b37dc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb596b098e62b7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa7461eaa78bbf and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef404650b37dc; op2val:0x3feb596b098e62b7; op3val:0x3fea7461eaa78bbf; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1568, x18)

inst_988:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef404650b37dc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb596b098e62b7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa7461eaa78bbf and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef404650b37dc; op2val:0x3feb596b098e62b7; op3val:0x3fea7461eaa78bbf; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1584, x18)

inst_989:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef404650b37dc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb596b098e62b7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa7461eaa78bbf and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef404650b37dc; op2val:0x3feb596b098e62b7; op3val:0x3fea7461eaa78bbf; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1600, x18)

inst_990:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef404650b37dc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb596b098e62b7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa7461eaa78bbf and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef404650b37dc; op2val:0x3feb596b098e62b7; op3val:0x3fea7461eaa78bbf; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1616, x18)

inst_991:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x721a03617a6ba and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x49017f0d68fa3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdba598209479a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd721a03617a6ba; op2val:0x3ff49017f0d68fa3; op3val:0x3fddba598209479a; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1632, x18)

inst_992:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x721a03617a6ba and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x49017f0d68fa3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdba598209479a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd721a03617a6ba; op2val:0x3ff49017f0d68fa3; op3val:0x3fddba598209479a; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1648, x18)

inst_993:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x721a03617a6ba and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x49017f0d68fa3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdba598209479a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd721a03617a6ba; op2val:0x3ff49017f0d68fa3; op3val:0x3fddba598209479a; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1664, x18)

inst_994:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x721a03617a6ba and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x49017f0d68fa3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdba598209479a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd721a03617a6ba; op2val:0x3ff49017f0d68fa3; op3val:0x3fddba598209479a; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1680, x18)

inst_995:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x721a03617a6ba and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x49017f0d68fa3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdba598209479a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd721a03617a6ba; op2val:0x3ff49017f0d68fa3; op3val:0x3fddba598209479a; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1696, x18)

inst_996:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4268b7006f33 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x9b4bb3296c3d9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x78122865344b8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4268b7006f33; op2val:0x3fc9b4bb3296c3d9; op3val:0x3fc78122865344b8; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1712, x18)

inst_997:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4268b7006f33 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x9b4bb3296c3d9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x78122865344b8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4268b7006f33; op2val:0x3fc9b4bb3296c3d9; op3val:0x3fc78122865344b8; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1728, x18)

inst_998:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4268b7006f33 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x9b4bb3296c3d9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x78122865344b8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4268b7006f33; op2val:0x3fc9b4bb3296c3d9; op3val:0x3fc78122865344b8; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1744, x18)

inst_999:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4268b7006f33 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x9b4bb3296c3d9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x78122865344b8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4268b7006f33; op2val:0x3fc9b4bb3296c3d9; op3val:0x3fc78122865344b8; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1760, x18)

inst_1000:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4268b7006f33 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x9b4bb3296c3d9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x78122865344b8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4268b7006f33; op2val:0x3fc9b4bb3296c3d9; op3val:0x3fc78122865344b8; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1776, x18)

inst_1001:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3ed20141d0ab0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8dfede6d1dade and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xefa91552515e2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb3ed20141d0ab0; op2val:0x4028dfede6d1dade; op3val:0x3feefa91552515e2; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1792, x18)

inst_1002:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3ed20141d0ab0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8dfede6d1dade and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xefa91552515e2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb3ed20141d0ab0; op2val:0x4028dfede6d1dade; op3val:0x3feefa91552515e2; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1808, x18)

inst_1003:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3ed20141d0ab0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8dfede6d1dade and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xefa91552515e2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb3ed20141d0ab0; op2val:0x4028dfede6d1dade; op3val:0x3feefa91552515e2; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1824, x18)

inst_1004:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3ed20141d0ab0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8dfede6d1dade and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xefa91552515e2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb3ed20141d0ab0; op2val:0x4028dfede6d1dade; op3val:0x3feefa91552515e2; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1840, x18)

inst_1005:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3ed20141d0ab0 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8dfede6d1dade and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xefa91552515e2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb3ed20141d0ab0; op2val:0x4028dfede6d1dade; op3val:0x3feefa91552515e2; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1856, x18)

inst_1006:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x14b89e1b8baa0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x0da81e9e68e4e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x237bb86391b08 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa14b89e1b8baa0; op2val:0x4030da81e9e68e4e; op3val:0x3fe237bb86391b08; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1872, x18)

inst_1007:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x14b89e1b8baa0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x0da81e9e68e4e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x237bb86391b08 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa14b89e1b8baa0; op2val:0x4030da81e9e68e4e; op3val:0x3fe237bb86391b08; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1888, x18)

inst_1008:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x14b89e1b8baa0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x0da81e9e68e4e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x237bb86391b08 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa14b89e1b8baa0; op2val:0x4030da81e9e68e4e; op3val:0x3fe237bb86391b08; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1904, x18)

inst_1009:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x14b89e1b8baa0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x0da81e9e68e4e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x237bb86391b08 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa14b89e1b8baa0; op2val:0x4030da81e9e68e4e; op3val:0x3fe237bb86391b08; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1920, x18)

inst_1010:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x14b89e1b8baa0 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x0da81e9e68e4e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x237bb86391b08 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa14b89e1b8baa0; op2val:0x4030da81e9e68e4e; op3val:0x3fe237bb86391b08; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1936, x18)

inst_1011:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x22a796b9663a4 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x44c6187ca64e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x70bd042e74e71 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc22a796b9663a4; op2val:0x40144c6187ca64e9; op3val:0x3fe70bd042e74e71; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1952, x18)

inst_1012:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x22a796b9663a4 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x44c6187ca64e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x70bd042e74e71 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc22a796b9663a4; op2val:0x40144c6187ca64e9; op3val:0x3fe70bd042e74e71; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1968, x18)

inst_1013:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x22a796b9663a4 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x44c6187ca64e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x70bd042e74e71 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc22a796b9663a4; op2val:0x40144c6187ca64e9; op3val:0x3fe70bd042e74e71; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1984, x18)

inst_1014:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x22a796b9663a4 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x44c6187ca64e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x70bd042e74e71 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc22a796b9663a4; op2val:0x40144c6187ca64e9; op3val:0x3fe70bd042e74e71; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 2000, x18)

inst_1015:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x22a796b9663a4 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x44c6187ca64e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x70bd042e74e71 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc22a796b9663a4; op2val:0x40144c6187ca64e9; op3val:0x3fe70bd042e74e71; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_9)

inst_1016:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xee364fdd51a90 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xe60a797998564 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd527aa1fd8971 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faee364fdd51a90; op2val:0x402e60a797998564; op3val:0x3fed527aa1fd8971; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xee364fdd51a90 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xe60a797998564 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd527aa1fd8971 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faee364fdd51a90; op2val:0x402e60a797998564; op3val:0x3fed527aa1fd8971; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 16, x18)

inst_1018:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xee364fdd51a90 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xe60a797998564 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd527aa1fd8971 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faee364fdd51a90; op2val:0x402e60a797998564; op3val:0x3fed527aa1fd8971; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 32, x18)

inst_1019:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xee364fdd51a90 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xe60a797998564 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd527aa1fd8971 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faee364fdd51a90; op2val:0x402e60a797998564; op3val:0x3fed527aa1fd8971; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 48, x18)
addi x16,x16,2040

inst_1020:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xee364fdd51a90 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xe60a797998564 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd527aa1fd8971 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faee364fdd51a90; op2val:0x402e60a797998564; op3val:0x3fed527aa1fd8971; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 64, x18)

inst_1021:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x67300d17ab200 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x048585eb4d47a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d882528f36fb and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f967300d17ab200; op2val:0x404048585eb4d47a; op3val:0x3fe6d882528f36fb; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 80, x18)

inst_1022:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x67300d17ab200 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x048585eb4d47a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d882528f36fb and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f967300d17ab200; op2val:0x404048585eb4d47a; op3val:0x3fe6d882528f36fb; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 96, x18)

inst_1023:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x67300d17ab200 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x048585eb4d47a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d882528f36fb and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f967300d17ab200; op2val:0x404048585eb4d47a; op3val:0x3fe6d882528f36fb; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 112, x18)

inst_1024:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x67300d17ab200 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x048585eb4d47a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d882528f36fb and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f967300d17ab200; op2val:0x404048585eb4d47a; op3val:0x3fe6d882528f36fb; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 128, x18)

inst_1025:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x67300d17ab200 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x048585eb4d47a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d882528f36fb and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f967300d17ab200; op2val:0x404048585eb4d47a; op3val:0x3fe6d882528f36fb; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 144, x18)

inst_1026:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf66a04ac9e63 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb50497c1cbcaf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x993164b54f2f4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf66a04ac9e63; op2val:0x3fcb50497c1cbcaf; op3val:0x3fc993164b54f2f4; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 160, x18)

inst_1027:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf66a04ac9e63 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb50497c1cbcaf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x993164b54f2f4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf66a04ac9e63; op2val:0x3fcb50497c1cbcaf; op3val:0x3fc993164b54f2f4; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 176, x18)

inst_1028:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf66a04ac9e63 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb50497c1cbcaf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x993164b54f2f4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf66a04ac9e63; op2val:0x3fcb50497c1cbcaf; op3val:0x3fc993164b54f2f4; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 192, x18)

inst_1029:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf66a04ac9e63 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb50497c1cbcaf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x993164b54f2f4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf66a04ac9e63; op2val:0x3fcb50497c1cbcaf; op3val:0x3fc993164b54f2f4; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 208, x18)

inst_1030:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf66a04ac9e63 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb50497c1cbcaf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x993164b54f2f4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf66a04ac9e63; op2val:0x3fcb50497c1cbcaf; op3val:0x3fc993164b54f2f4; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 224, x18)

inst_1031:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x727ac5e171c1d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x96e378bcbcfcd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x266bf3b5d8de2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe727ac5e171c1d; op2val:0x3fd96e378bcbcfcd; op3val:0x3fd266bf3b5d8de2; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 240, x18)

inst_1032:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x727ac5e171c1d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x96e378bcbcfcd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x266bf3b5d8de2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe727ac5e171c1d; op2val:0x3fd96e378bcbcfcd; op3val:0x3fd266bf3b5d8de2; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 256, x18)

inst_1033:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x727ac5e171c1d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x96e378bcbcfcd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x266bf3b5d8de2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe727ac5e171c1d; op2val:0x3fd96e378bcbcfcd; op3val:0x3fd266bf3b5d8de2; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 272, x18)

inst_1034:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x727ac5e171c1d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x96e378bcbcfcd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x266bf3b5d8de2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe727ac5e171c1d; op2val:0x3fd96e378bcbcfcd; op3val:0x3fd266bf3b5d8de2; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 288, x18)

inst_1035:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x727ac5e171c1d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x96e378bcbcfcd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x266bf3b5d8de2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe727ac5e171c1d; op2val:0x3fd96e378bcbcfcd; op3val:0x3fd266bf3b5d8de2; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 304, x18)

inst_1036:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc5a2d48f7e4c8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x3f84adc077a18 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b18815c400fe and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc5a2d48f7e4c8; op2val:0x4003f84adc077a18; op3val:0x3fe1b18815c400fe; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 320, x18)

inst_1037:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc5a2d48f7e4c8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x3f84adc077a18 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b18815c400fe and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc5a2d48f7e4c8; op2val:0x4003f84adc077a18; op3val:0x3fe1b18815c400fe; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 336, x18)

inst_1038:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc5a2d48f7e4c8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x3f84adc077a18 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b18815c400fe and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc5a2d48f7e4c8; op2val:0x4003f84adc077a18; op3val:0x3fe1b18815c400fe; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 352, x18)

inst_1039:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc5a2d48f7e4c8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x3f84adc077a18 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b18815c400fe and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc5a2d48f7e4c8; op2val:0x4003f84adc077a18; op3val:0x3fe1b18815c400fe; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 368, x18)

inst_1040:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc5a2d48f7e4c8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x3f84adc077a18 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b18815c400fe and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc5a2d48f7e4c8; op2val:0x4003f84adc077a18; op3val:0x3fe1b18815c400fe; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 384, x18)

inst_1041:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x75a90c21bb1b0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x883ff60324878 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e441b215561c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb75a90c21bb1b0; op2val:0x401883ff60324878; op3val:0x3fe1e441b215561c; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 400, x18)

inst_1042:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x75a90c21bb1b0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x883ff60324878 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e441b215561c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb75a90c21bb1b0; op2val:0x401883ff60324878; op3val:0x3fe1e441b215561c; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 416, x18)

inst_1043:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x75a90c21bb1b0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x883ff60324878 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e441b215561c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb75a90c21bb1b0; op2val:0x401883ff60324878; op3val:0x3fe1e441b215561c; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 432, x18)

inst_1044:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x75a90c21bb1b0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x883ff60324878 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e441b215561c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb75a90c21bb1b0; op2val:0x401883ff60324878; op3val:0x3fe1e441b215561c; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 448, x18)

inst_1045:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x75a90c21bb1b0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x883ff60324878 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1e441b215561c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb75a90c21bb1b0; op2val:0x401883ff60324878; op3val:0x3fe1e441b215561c; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 464, x18)

inst_1046:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9d1b28ba1cec and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x0ca68ebe491b3 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xcfa6fb3eacc70 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9d1b28ba1cec; op2val:0x3fb0ca68ebe491b3; op3val:0x3facfa6fb3eacc70; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 480, x18)

inst_1047:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9d1b28ba1cec and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x0ca68ebe491b3 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xcfa6fb3eacc70 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9d1b28ba1cec; op2val:0x3fb0ca68ebe491b3; op3val:0x3facfa6fb3eacc70; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 496, x18)

inst_1048:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9d1b28ba1cec and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x0ca68ebe491b3 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xcfa6fb3eacc70 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9d1b28ba1cec; op2val:0x3fb0ca68ebe491b3; op3val:0x3facfa6fb3eacc70; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 512, x18)

inst_1049:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9d1b28ba1cec and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x0ca68ebe491b3 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xcfa6fb3eacc70 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9d1b28ba1cec; op2val:0x3fb0ca68ebe491b3; op3val:0x3facfa6fb3eacc70; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 528, x18)

inst_1050:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9d1b28ba1cec and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x0ca68ebe491b3 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xcfa6fb3eacc70 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9d1b28ba1cec; op2val:0x3fb0ca68ebe491b3; op3val:0x3facfa6fb3eacc70; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 544, x18)

inst_1051:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x398c63fd675de and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5cea59e72bb75 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xab59e05cd0208 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd398c63fd675de; op2val:0x3fe5cea59e72bb75; op3val:0x3fcab59e05cd0208; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 560, x18)

inst_1052:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x398c63fd675de and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5cea59e72bb75 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xab59e05cd0208 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd398c63fd675de; op2val:0x3fe5cea59e72bb75; op3val:0x3fcab59e05cd0208; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 576, x18)

inst_1053:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x398c63fd675de and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5cea59e72bb75 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xab59e05cd0208 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd398c63fd675de; op2val:0x3fe5cea59e72bb75; op3val:0x3fcab59e05cd0208; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 592, x18)

inst_1054:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x398c63fd675de and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5cea59e72bb75 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xab59e05cd0208 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd398c63fd675de; op2val:0x3fe5cea59e72bb75; op3val:0x3fcab59e05cd0208; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 608, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x398c63fd675de and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5cea59e72bb75 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xab59e05cd0208 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd398c63fd675de; op2val:0x3fe5cea59e72bb75; op3val:0x3fcab59e05cd0208; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 624, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb510aeb102548 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x48b0c143b1155 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x189592a0050a0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb510aeb102548; op2val:0x40148b0c143b1155; op3val:0x3fe189592a0050a0; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 640, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb510aeb102548 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x48b0c143b1155 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x189592a0050a0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb510aeb102548; op2val:0x40148b0c143b1155; op3val:0x3fe189592a0050a0; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 656, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb510aeb102548 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x48b0c143b1155 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x189592a0050a0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb510aeb102548; op2val:0x40148b0c143b1155; op3val:0x3fe189592a0050a0; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 672, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb510aeb102548 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x48b0c143b1155 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x189592a0050a0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb510aeb102548; op2val:0x40148b0c143b1155; op3val:0x3fe189592a0050a0; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 688, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb510aeb102548 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x48b0c143b1155 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x189592a0050a0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb510aeb102548; op2val:0x40148b0c143b1155; op3val:0x3fe189592a0050a0; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 704, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6ae9917839a60 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0a99cdae1e5a0 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x79f0ba52bc060 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6ae9917839a60; op2val:0x3ff0a99cdae1e5a0; op3val:0x3fb79f0ba52bc060; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 720, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6ae9917839a60 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0a99cdae1e5a0 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x79f0ba52bc060 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6ae9917839a60; op2val:0x3ff0a99cdae1e5a0; op3val:0x3fb79f0ba52bc060; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 736, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6ae9917839a60 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0a99cdae1e5a0 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x79f0ba52bc060 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6ae9917839a60; op2val:0x3ff0a99cdae1e5a0; op3val:0x3fb79f0ba52bc060; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 752, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6ae9917839a60 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0a99cdae1e5a0 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x79f0ba52bc060 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6ae9917839a60; op2val:0x3ff0a99cdae1e5a0; op3val:0x3fb79f0ba52bc060; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 768, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6ae9917839a60 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0a99cdae1e5a0 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x79f0ba52bc060 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6ae9917839a60; op2val:0x3ff0a99cdae1e5a0; op3val:0x3fb79f0ba52bc060; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 784, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd539c6b5b1376 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xaab0cc0980b62 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x870b192f358dc and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed539c6b5b1376; op2val:0x3fdaab0cc0980b62; op3val:0x3fd870b192f358dc; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 800, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd539c6b5b1376 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xaab0cc0980b62 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x870b192f358dc and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed539c6b5b1376; op2val:0x3fdaab0cc0980b62; op3val:0x3fd870b192f358dc; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 816, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd539c6b5b1376 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xaab0cc0980b62 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x870b192f358dc and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed539c6b5b1376; op2val:0x3fdaab0cc0980b62; op3val:0x3fd870b192f358dc; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 832, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd539c6b5b1376 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xaab0cc0980b62 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x870b192f358dc and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed539c6b5b1376; op2val:0x3fdaab0cc0980b62; op3val:0x3fd870b192f358dc; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 848, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd539c6b5b1376 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xaab0cc0980b62 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x870b192f358dc and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed539c6b5b1376; op2val:0x3fdaab0cc0980b62; op3val:0x3fd870b192f358dc; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 864, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbef8fd1889579 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x88904d0ee291d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x56b49b1368b80 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febef8fd1889579; op2val:0x3fc88904d0ee291d; op3val:0x3fc56b49b1368b80; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 880, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbef8fd1889579 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x88904d0ee291d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x56b49b1368b80 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febef8fd1889579; op2val:0x3fc88904d0ee291d; op3val:0x3fc56b49b1368b80; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 896, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbef8fd1889579 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x88904d0ee291d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x56b49b1368b80 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febef8fd1889579; op2val:0x3fc88904d0ee291d; op3val:0x3fc56b49b1368b80; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 912, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbef8fd1889579 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x88904d0ee291d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x56b49b1368b80 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febef8fd1889579; op2val:0x3fc88904d0ee291d; op3val:0x3fc56b49b1368b80; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 928, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbef8fd1889579 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x88904d0ee291d and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x56b49b1368b80 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febef8fd1889579; op2val:0x3fc88904d0ee291d; op3val:0x3fc56b49b1368b80; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 944, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7bb3ae7c0d3b6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9c581f9a066ad and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31cbf0b96ad66 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7bb3ae7c0d3b6; op2val:0x3fe9c581f9a066ad; op3val:0x3fd31cbf0b96ad66; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 960, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7bb3ae7c0d3b6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9c581f9a066ad and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31cbf0b96ad66 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7bb3ae7c0d3b6; op2val:0x3fe9c581f9a066ad; op3val:0x3fd31cbf0b96ad66; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 976, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7bb3ae7c0d3b6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9c581f9a066ad and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31cbf0b96ad66 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7bb3ae7c0d3b6; op2val:0x3fe9c581f9a066ad; op3val:0x3fd31cbf0b96ad66; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 992, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7bb3ae7c0d3b6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9c581f9a066ad and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31cbf0b96ad66 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7bb3ae7c0d3b6; op2val:0x3fe9c581f9a066ad; op3val:0x3fd31cbf0b96ad66; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1008, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7bb3ae7c0d3b6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9c581f9a066ad and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31cbf0b96ad66 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7bb3ae7c0d3b6; op2val:0x3fe9c581f9a066ad; op3val:0x3fd31cbf0b96ad66; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1024, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x13173e11a86e0 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x7ec13e172c394 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x9b4c55dcac488 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe13173e11a86e0; op2val:0x3fc7ec13e172c394; op3val:0x3fb9b4c55dcac488; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1040, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x13173e11a86e0 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x7ec13e172c394 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x9b4c55dcac488 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe13173e11a86e0; op2val:0x3fc7ec13e172c394; op3val:0x3fb9b4c55dcac488; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1056, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x13173e11a86e0 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x7ec13e172c394 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x9b4c55dcac488 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe13173e11a86e0; op2val:0x3fc7ec13e172c394; op3val:0x3fb9b4c55dcac488; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1072, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x13173e11a86e0 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x7ec13e172c394 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x9b4c55dcac488 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe13173e11a86e0; op2val:0x3fc7ec13e172c394; op3val:0x3fb9b4c55dcac488; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1088, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x13173e11a86e0 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x7ec13e172c394 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x9b4c55dcac488 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe13173e11a86e0; op2val:0x3fc7ec13e172c394; op3val:0x3fb9b4c55dcac488; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1104, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca04e2fd1a601 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x95b5f9d22910a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6aefa7c2d4f84 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca04e2fd1a601; op2val:0x3fd95b5f9d22910a; op3val:0x3fd6aefa7c2d4f84; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1120, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca04e2fd1a601 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x95b5f9d22910a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6aefa7c2d4f84 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca04e2fd1a601; op2val:0x3fd95b5f9d22910a; op3val:0x3fd6aefa7c2d4f84; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1136, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca04e2fd1a601 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x95b5f9d22910a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6aefa7c2d4f84 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca04e2fd1a601; op2val:0x3fd95b5f9d22910a; op3val:0x3fd6aefa7c2d4f84; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1152, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca04e2fd1a601 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x95b5f9d22910a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6aefa7c2d4f84 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca04e2fd1a601; op2val:0x3fd95b5f9d22910a; op3val:0x3fd6aefa7c2d4f84; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1168, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xca04e2fd1a601 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x95b5f9d22910a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6aefa7c2d4f84 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feca04e2fd1a601; op2val:0x3fd95b5f9d22910a; op3val:0x3fd6aefa7c2d4f84; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1184, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7ceba02a79cc4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x369ae0b861013 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xce2bc8124ee1f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7ceba02a79cc4; op2val:0x400369ae0b861013; op3val:0x3fece2bc8124ee1f; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1200, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7ceba02a79cc4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x369ae0b861013 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xce2bc8124ee1f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7ceba02a79cc4; op2val:0x400369ae0b861013; op3val:0x3fece2bc8124ee1f; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1216, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7ceba02a79cc4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x369ae0b861013 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xce2bc8124ee1f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7ceba02a79cc4; op2val:0x400369ae0b861013; op3val:0x3fece2bc8124ee1f; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1232, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7ceba02a79cc4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x369ae0b861013 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xce2bc8124ee1f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7ceba02a79cc4; op2val:0x400369ae0b861013; op3val:0x3fece2bc8124ee1f; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1248, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7ceba02a79cc4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x369ae0b861013 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xce2bc8124ee1f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7ceba02a79cc4; op2val:0x400369ae0b861013; op3val:0x3fece2bc8124ee1f; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1264, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x92dca657411b0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x16695cd79e454 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6216b3d96a54 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd92dca657411b0; op2val:0x40016695cd79e454; op3val:0x3feb6216b3d96a54; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1280, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x92dca657411b0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x16695cd79e454 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6216b3d96a54 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd92dca657411b0; op2val:0x40016695cd79e454; op3val:0x3feb6216b3d96a54; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1296, x18)

inst_1098:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x92dca657411b0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x16695cd79e454 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6216b3d96a54 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd92dca657411b0; op2val:0x40016695cd79e454; op3val:0x3feb6216b3d96a54; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1312, x18)

inst_1099:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x92dca657411b0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x16695cd79e454 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6216b3d96a54 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd92dca657411b0; op2val:0x40016695cd79e454; op3val:0x3feb6216b3d96a54; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1328, x18)

inst_1100:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x92dca657411b0 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x16695cd79e454 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6216b3d96a54 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd92dca657411b0; op2val:0x40016695cd79e454; op3val:0x3feb6216b3d96a54; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1344, x18)

inst_1101:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb5c7fb946bf36 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc063e5e7707a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7f6466e0d993e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb5c7fb946bf36; op2val:0x3fdc063e5e7707a2; op3val:0x3fd7f6466e0d993e; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1360, x18)

inst_1102:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb5c7fb946bf36 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc063e5e7707a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7f6466e0d993e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb5c7fb946bf36; op2val:0x3fdc063e5e7707a2; op3val:0x3fd7f6466e0d993e; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1376, x18)

inst_1103:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb5c7fb946bf36 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc063e5e7707a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7f6466e0d993e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb5c7fb946bf36; op2val:0x3fdc063e5e7707a2; op3val:0x3fd7f6466e0d993e; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1392, x18)

inst_1104:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb5c7fb946bf36 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc063e5e7707a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7f6466e0d993e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb5c7fb946bf36; op2val:0x3fdc063e5e7707a2; op3val:0x3fd7f6466e0d993e; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1408, x18)
addi x16,x16,2040

inst_1105:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb5c7fb946bf36 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc063e5e7707a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7f6466e0d993e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb5c7fb946bf36; op2val:0x3fdc063e5e7707a2; op3val:0x3fd7f6466e0d993e; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1424, x18)

inst_1106:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb87b2842f44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6b0791c53642c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46ab9b026f34e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feccb87b2842f44; op2val:0x3fe6b0791c53642c; op3val:0x3fe46ab9b026f34e; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1440, x18)

inst_1107:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb87b2842f44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6b0791c53642c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46ab9b026f34e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feccb87b2842f44; op2val:0x3fe6b0791c53642c; op3val:0x3fe46ab9b026f34e; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1456, x18)

inst_1108:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb87b2842f44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6b0791c53642c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46ab9b026f34e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feccb87b2842f44; op2val:0x3fe6b0791c53642c; op3val:0x3fe46ab9b026f34e; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1472, x18)

inst_1109:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb87b2842f44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6b0791c53642c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46ab9b026f34e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feccb87b2842f44; op2val:0x3fe6b0791c53642c; op3val:0x3fe46ab9b026f34e; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1488, x18)

inst_1110:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb87b2842f44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6b0791c53642c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46ab9b026f34e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feccb87b2842f44; op2val:0x3fe6b0791c53642c; op3val:0x3fe46ab9b026f34e; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1504, x18)

inst_1111:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0440ae3b25c6e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0b7af39a76f6f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0fec743125d24 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0440ae3b25c6e; op2val:0x3ff0b7af39a76f6f; op3val:0x3fe0fec743125d24; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1520, x18)

inst_1112:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0440ae3b25c6e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0b7af39a76f6f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0fec743125d24 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0440ae3b25c6e; op2val:0x3ff0b7af39a76f6f; op3val:0x3fe0fec743125d24; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1536, x18)

inst_1113:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0440ae3b25c6e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0b7af39a76f6f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0fec743125d24 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0440ae3b25c6e; op2val:0x3ff0b7af39a76f6f; op3val:0x3fe0fec743125d24; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1552, x18)

inst_1114:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0440ae3b25c6e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0b7af39a76f6f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0fec743125d24 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0440ae3b25c6e; op2val:0x3ff0b7af39a76f6f; op3val:0x3fe0fec743125d24; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1568, x18)

inst_1115:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0440ae3b25c6e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0b7af39a76f6f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0fec743125d24 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0440ae3b25c6e; op2val:0x3ff0b7af39a76f6f; op3val:0x3fe0fec743125d24; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1584, x18)

inst_1116:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbdde073328efc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb692708a15a23 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7dec7679a2ddc and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbdde073328efc; op2val:0x3feb692708a15a23; op3val:0x3fc7dec7679a2ddc; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1600, x18)

inst_1117:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbdde073328efc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb692708a15a23 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7dec7679a2ddc and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbdde073328efc; op2val:0x3feb692708a15a23; op3val:0x3fc7dec7679a2ddc; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1616, x18)

inst_1118:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbdde073328efc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb692708a15a23 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7dec7679a2ddc and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbdde073328efc; op2val:0x3feb692708a15a23; op3val:0x3fc7dec7679a2ddc; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1632, x18)

inst_1119:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbdde073328efc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb692708a15a23 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7dec7679a2ddc and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbdde073328efc; op2val:0x3feb692708a15a23; op3val:0x3fc7dec7679a2ddc; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1648, x18)

inst_1120:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbdde073328efc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb692708a15a23 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7dec7679a2ddc and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbdde073328efc; op2val:0x3feb692708a15a23; op3val:0x3fc7dec7679a2ddc; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1664, x18)

inst_1121:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8bd85dfe1a426 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7eb337019232c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x27e0fccc66faa and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8bd85dfe1a426; op2val:0x3ff7eb337019232c; op3val:0x3fe27e0fccc66faa; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1680, x18)

inst_1122:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8bd85dfe1a426 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7eb337019232c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x27e0fccc66faa and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8bd85dfe1a426; op2val:0x3ff7eb337019232c; op3val:0x3fe27e0fccc66faa; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1696, x18)

inst_1123:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8bd85dfe1a426 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7eb337019232c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x27e0fccc66faa and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8bd85dfe1a426; op2val:0x3ff7eb337019232c; op3val:0x3fe27e0fccc66faa; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1712, x18)

inst_1124:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8bd85dfe1a426 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7eb337019232c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x27e0fccc66faa and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8bd85dfe1a426; op2val:0x3ff7eb337019232c; op3val:0x3fe27e0fccc66faa; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1728, x18)

inst_1125:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8bd85dfe1a426 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7eb337019232c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x27e0fccc66faa and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8bd85dfe1a426; op2val:0x3ff7eb337019232c; op3val:0x3fe27e0fccc66faa; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1744, x18)

inst_1126:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d5f62b61e808 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x0ae5d788a48c6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xaef83eec48e20 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d5f62b61e808; op2val:0x3fb0ae5d788a48c6; op3val:0x3faaef83eec48e20; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1760, x18)

inst_1127:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d5f62b61e808 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x0ae5d788a48c6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xaef83eec48e20 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d5f62b61e808; op2val:0x3fb0ae5d788a48c6; op3val:0x3faaef83eec48e20; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1776, x18)

inst_1128:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d5f62b61e808 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x0ae5d788a48c6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xaef83eec48e20 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d5f62b61e808; op2val:0x3fb0ae5d788a48c6; op3val:0x3faaef83eec48e20; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1792, x18)

inst_1129:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d5f62b61e808 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x0ae5d788a48c6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xaef83eec48e20 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d5f62b61e808; op2val:0x3fb0ae5d788a48c6; op3val:0x3faaef83eec48e20; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1808, x18)

inst_1130:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d5f62b61e808 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x0ae5d788a48c6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xaef83eec48e20 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d5f62b61e808; op2val:0x3fb0ae5d788a48c6; op3val:0x3faaef83eec48e20; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1824, x18)

inst_1131:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2c0c9469062fc and fs2 == 0 and fe2 == 0x401 and fm2 == 0x99a19b116c599 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe01d82c52a9ef and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2c0c9469062fc; op2val:0x40199a19b116c599; op3val:0x3fee01d82c52a9ef; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1840, x18)

inst_1132:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2c0c9469062fc and fs2 == 0 and fe2 == 0x401 and fm2 == 0x99a19b116c599 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe01d82c52a9ef and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2c0c9469062fc; op2val:0x40199a19b116c599; op3val:0x3fee01d82c52a9ef; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1856, x18)

inst_1133:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2c0c9469062fc and fs2 == 0 and fe2 == 0x401 and fm2 == 0x99a19b116c599 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe01d82c52a9ef and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2c0c9469062fc; op2val:0x40199a19b116c599; op3val:0x3fee01d82c52a9ef; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1872, x18)

inst_1134:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2c0c9469062fc and fs2 == 0 and fe2 == 0x401 and fm2 == 0x99a19b116c599 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe01d82c52a9ef and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2c0c9469062fc; op2val:0x40199a19b116c599; op3val:0x3fee01d82c52a9ef; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1888, x18)

inst_1135:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2c0c9469062fc and fs2 == 0 and fe2 == 0x401 and fm2 == 0x99a19b116c599 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe01d82c52a9ef and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2c0c9469062fc; op2val:0x40199a19b116c599; op3val:0x3fee01d82c52a9ef; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1904, x18)

inst_1136:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46a673811d035 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8b391e5a4472d and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf84bb6029ee80 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46a673811d035; op2val:0x3fb8b391e5a4472d; op3val:0x3faf84bb6029ee80; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1920, x18)

inst_1137:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46a673811d035 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8b391e5a4472d and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf84bb6029ee80 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46a673811d035; op2val:0x3fb8b391e5a4472d; op3val:0x3faf84bb6029ee80; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1936, x18)

inst_1138:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46a673811d035 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8b391e5a4472d and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf84bb6029ee80 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46a673811d035; op2val:0x3fb8b391e5a4472d; op3val:0x3faf84bb6029ee80; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1952, x18)

inst_1139:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46a673811d035 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8b391e5a4472d and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf84bb6029ee80 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46a673811d035; op2val:0x3fb8b391e5a4472d; op3val:0x3faf84bb6029ee80; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1968, x18)

inst_1140:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46a673811d035 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8b391e5a4472d and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf84bb6029ee80 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46a673811d035; op2val:0x3fb8b391e5a4472d; op3val:0x3faf84bb6029ee80; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1984, x18)

inst_1141:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc6955e545889b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x44a7f71d15a8a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x203fa6d0863c6 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec6955e545889b; op2val:0x3fd44a7f71d15a8a; op3val:0x3fd203fa6d0863c6; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 2000, x18)

inst_1142:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc6955e545889b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x44a7f71d15a8a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x203fa6d0863c6 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec6955e545889b; op2val:0x3fd44a7f71d15a8a; op3val:0x3fd203fa6d0863c6; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_10)

inst_1143:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc6955e545889b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x44a7f71d15a8a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x203fa6d0863c6 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec6955e545889b; op2val:0x3fd44a7f71d15a8a; op3val:0x3fd203fa6d0863c6; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 0, x18)

inst_1144:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc6955e545889b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x44a7f71d15a8a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x203fa6d0863c6 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec6955e545889b; op2val:0x3fd44a7f71d15a8a; op3val:0x3fd203fa6d0863c6; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 16, x18)

inst_1145:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc6955e545889b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x44a7f71d15a8a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x203fa6d0863c6 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec6955e545889b; op2val:0x3fd44a7f71d15a8a; op3val:0x3fd203fa6d0863c6; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 32, x18)

inst_1146:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf09512d8f663d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde1ec5085f9cb and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcfb9046e238e0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef09512d8f663d; op2val:0x3fcde1ec5085f9cb; op3val:0x3fccfb9046e238e0; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 48, x18)

inst_1147:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf09512d8f663d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde1ec5085f9cb and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcfb9046e238e0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef09512d8f663d; op2val:0x3fcde1ec5085f9cb; op3val:0x3fccfb9046e238e0; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 64, x18)

inst_1148:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf09512d8f663d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde1ec5085f9cb and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcfb9046e238e0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef09512d8f663d; op2val:0x3fcde1ec5085f9cb; op3val:0x3fccfb9046e238e0; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 80, x18)

inst_1149:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf09512d8f663d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde1ec5085f9cb and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcfb9046e238e0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef09512d8f663d; op2val:0x3fcde1ec5085f9cb; op3val:0x3fccfb9046e238e0; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 96, x18)

inst_1150:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf09512d8f663d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde1ec5085f9cb and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcfb9046e238e0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef09512d8f663d; op2val:0x3fcde1ec5085f9cb; op3val:0x3fccfb9046e238e0; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 112, x18)

inst_1151:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x19edd78243138 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb65ccbdc1a211 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe2c320b450a38 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe19edd78243138; op2val:0x3ffb65ccbdc1a211; op3val:0x3fee2c320b450a38; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 128, x18)

inst_1152:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x19edd78243138 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb65ccbdc1a211 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe2c320b450a38 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe19edd78243138; op2val:0x3ffb65ccbdc1a211; op3val:0x3fee2c320b450a38; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 144, x18)

inst_1153:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x19edd78243138 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb65ccbdc1a211 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe2c320b450a38 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe19edd78243138; op2val:0x3ffb65ccbdc1a211; op3val:0x3fee2c320b450a38; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 160, x18)

inst_1154:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x19edd78243138 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb65ccbdc1a211 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe2c320b450a38 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe19edd78243138; op2val:0x3ffb65ccbdc1a211; op3val:0x3fee2c320b450a38; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 176, x18)

inst_1155:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x19edd78243138 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb65ccbdc1a211 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe2c320b450a38 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe19edd78243138; op2val:0x3ffb65ccbdc1a211; op3val:0x3fee2c320b450a38; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 192, x18)

inst_1156:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6b1d9a9c2b433 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x66bacd1160028 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfcd45c9813ec6 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6b1d9a9c2b433; op2val:0x3ff66bacd1160028; op3val:0x3fefcd45c9813ec6; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 208, x18)

inst_1157:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6b1d9a9c2b433 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x66bacd1160028 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfcd45c9813ec6 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6b1d9a9c2b433; op2val:0x3ff66bacd1160028; op3val:0x3fefcd45c9813ec6; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 224, x18)

inst_1158:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6b1d9a9c2b433 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x66bacd1160028 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfcd45c9813ec6 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6b1d9a9c2b433; op2val:0x3ff66bacd1160028; op3val:0x3fefcd45c9813ec6; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 240, x18)

inst_1159:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6b1d9a9c2b433 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x66bacd1160028 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfcd45c9813ec6 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6b1d9a9c2b433; op2val:0x3ff66bacd1160028; op3val:0x3fefcd45c9813ec6; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 256, x18)

inst_1160:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6b1d9a9c2b433 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x66bacd1160028 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfcd45c9813ec6 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6b1d9a9c2b433; op2val:0x3ff66bacd1160028; op3val:0x3fefcd45c9813ec6; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 272, x18)

inst_1161:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa70972d7810b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3a3c76601fe91 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x03a2c05839000 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca70972d7810b8; op2val:0x3fd3a3c76601fe91; op3val:0x3fb03a2c05839000; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 288, x18)

inst_1162:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa70972d7810b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3a3c76601fe91 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x03a2c05839000 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca70972d7810b8; op2val:0x3fd3a3c76601fe91; op3val:0x3fb03a2c05839000; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 304, x18)

inst_1163:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa70972d7810b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3a3c76601fe91 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x03a2c05839000 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca70972d7810b8; op2val:0x3fd3a3c76601fe91; op3val:0x3fb03a2c05839000; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 320, x18)

inst_1164:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa70972d7810b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3a3c76601fe91 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x03a2c05839000 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca70972d7810b8; op2val:0x3fd3a3c76601fe91; op3val:0x3fb03a2c05839000; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 336, x18)

inst_1165:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa70972d7810b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3a3c76601fe91 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x03a2c05839000 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca70972d7810b8; op2val:0x3fd3a3c76601fe91; op3val:0x3fb03a2c05839000; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 352, x18)

inst_1166:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34147001995c5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb3a8f50c5ad6d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x06250751530e8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34147001995c5; op2val:0x3feb3a8f50c5ad6d; op3val:0x3fe06250751530e8; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 368, x18)

inst_1167:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34147001995c5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb3a8f50c5ad6d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x06250751530e8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34147001995c5; op2val:0x3feb3a8f50c5ad6d; op3val:0x3fe06250751530e8; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 384, x18)

inst_1168:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34147001995c5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb3a8f50c5ad6d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x06250751530e8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34147001995c5; op2val:0x3feb3a8f50c5ad6d; op3val:0x3fe06250751530e8; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 400, x18)

inst_1169:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34147001995c5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb3a8f50c5ad6d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x06250751530e8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34147001995c5; op2val:0x3feb3a8f50c5ad6d; op3val:0x3fe06250751530e8; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 416, x18)

inst_1170:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34147001995c5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb3a8f50c5ad6d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x06250751530e8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34147001995c5; op2val:0x3feb3a8f50c5ad6d; op3val:0x3fe06250751530e8; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 432, x18)

inst_1171:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x967eee5dfa224 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb67353a66f617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5c1a25d6a6506 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd967eee5dfa224; op2val:0x3ffb67353a66f617; op3val:0x3fe5c1a25d6a6506; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 448, x18)

inst_1172:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x967eee5dfa224 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb67353a66f617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5c1a25d6a6506 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd967eee5dfa224; op2val:0x3ffb67353a66f617; op3val:0x3fe5c1a25d6a6506; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 464, x18)

inst_1173:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x967eee5dfa224 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb67353a66f617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5c1a25d6a6506 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd967eee5dfa224; op2val:0x3ffb67353a66f617; op3val:0x3fe5c1a25d6a6506; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 480, x18)

inst_1174:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x967eee5dfa224 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb67353a66f617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5c1a25d6a6506 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd967eee5dfa224; op2val:0x3ffb67353a66f617; op3val:0x3fe5c1a25d6a6506; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 496, x18)

inst_1175:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x967eee5dfa224 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb67353a66f617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5c1a25d6a6506 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd967eee5dfa224; op2val:0x3ffb67353a66f617; op3val:0x3fe5c1a25d6a6506; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 512, x18)

inst_1176:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3b122ac2d8660 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x039233f6888d2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3f7751938e17e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb3b122ac2d8660; op2val:0x402039233f6888d2; op3val:0x3fe3f7751938e17e; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 528, x18)

inst_1177:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3b122ac2d8660 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x039233f6888d2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3f7751938e17e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb3b122ac2d8660; op2val:0x402039233f6888d2; op3val:0x3fe3f7751938e17e; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 544, x18)

inst_1178:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3b122ac2d8660 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x039233f6888d2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3f7751938e17e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb3b122ac2d8660; op2val:0x402039233f6888d2; op3val:0x3fe3f7751938e17e; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 560, x18)

inst_1179:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3b122ac2d8660 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x039233f6888d2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3f7751938e17e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb3b122ac2d8660; op2val:0x402039233f6888d2; op3val:0x3fe3f7751938e17e; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 576, x18)

inst_1180:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3b122ac2d8660 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x039233f6888d2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3f7751938e17e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb3b122ac2d8660; op2val:0x402039233f6888d2; op3val:0x3fe3f7751938e17e; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 592, x18)

inst_1181:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5cef5ceb21cc4 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x5f6687abecb2d and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xdef7f0b1f98a0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5cef5ceb21cc4; op2val:0x3fb5f6687abecb2d; op3val:0x3f9def7f0b1f98a0; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 608, x18)

inst_1182:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5cef5ceb21cc4 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x5f6687abecb2d and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xdef7f0b1f98a0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5cef5ceb21cc4; op2val:0x3fb5f6687abecb2d; op3val:0x3f9def7f0b1f98a0; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 624, x18)

inst_1183:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5cef5ceb21cc4 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x5f6687abecb2d and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xdef7f0b1f98a0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5cef5ceb21cc4; op2val:0x3fb5f6687abecb2d; op3val:0x3f9def7f0b1f98a0; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 640, x18)

inst_1184:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5cef5ceb21cc4 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x5f6687abecb2d and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xdef7f0b1f98a0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5cef5ceb21cc4; op2val:0x3fb5f6687abecb2d; op3val:0x3f9def7f0b1f98a0; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 656, x18)

inst_1185:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5cef5ceb21cc4 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x5f6687abecb2d and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xdef7f0b1f98a0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5cef5ceb21cc4; op2val:0x3fb5f6687abecb2d; op3val:0x3f9def7f0b1f98a0; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 672, x18)

inst_1186:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8fe3f5886191c and fs2 == 0 and fe2 == 0x400 and fm2 == 0xbb8b5f7c4ea65 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5a6c97e88ba40 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8fe3f5886191c; op2val:0x400bb8b5f7c4ea65; op3val:0x3fe5a6c97e88ba40; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 688, x18)

inst_1187:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8fe3f5886191c and fs2 == 0 and fe2 == 0x400 and fm2 == 0xbb8b5f7c4ea65 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5a6c97e88ba40 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8fe3f5886191c; op2val:0x400bb8b5f7c4ea65; op3val:0x3fe5a6c97e88ba40; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 704, x18)

inst_1188:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8fe3f5886191c and fs2 == 0 and fe2 == 0x400 and fm2 == 0xbb8b5f7c4ea65 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5a6c97e88ba40 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8fe3f5886191c; op2val:0x400bb8b5f7c4ea65; op3val:0x3fe5a6c97e88ba40; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 720, x18)

inst_1189:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8fe3f5886191c and fs2 == 0 and fe2 == 0x400 and fm2 == 0xbb8b5f7c4ea65 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5a6c97e88ba40 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8fe3f5886191c; op2val:0x400bb8b5f7c4ea65; op3val:0x3fe5a6c97e88ba40; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 736, x18)
addi x16,x16,2040

inst_1190:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8fe3f5886191c and fs2 == 0 and fe2 == 0x400 and fm2 == 0xbb8b5f7c4ea65 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5a6c97e88ba40 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8fe3f5886191c; op2val:0x400bb8b5f7c4ea65; op3val:0x3fe5a6c97e88ba40; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 752, x18)

inst_1191:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ebb306036e19 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d873a7324ee7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x637ec25764ddc and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ebb306036e19; op2val:0x3ff1d873a7324ee7; op3val:0x3fe637ec25764ddc; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 768, x18)

inst_1192:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ebb306036e19 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d873a7324ee7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x637ec25764ddc and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ebb306036e19; op2val:0x3ff1d873a7324ee7; op3val:0x3fe637ec25764ddc; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 784, x18)

inst_1193:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ebb306036e19 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d873a7324ee7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x637ec25764ddc and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ebb306036e19; op2val:0x3ff1d873a7324ee7; op3val:0x3fe637ec25764ddc; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 800, x18)

inst_1194:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ebb306036e19 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d873a7324ee7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x637ec25764ddc and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ebb306036e19; op2val:0x3ff1d873a7324ee7; op3val:0x3fe637ec25764ddc; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 816, x18)

inst_1195:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ebb306036e19 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d873a7324ee7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x637ec25764ddc and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ebb306036e19; op2val:0x3ff1d873a7324ee7; op3val:0x3fe637ec25764ddc; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 832, x18)

inst_1196:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0afcf02082b5b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa5202e140c2e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7338691d6a1e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0afcf02082b5b; op2val:0x3ffa5202e140c2e5; op3val:0x3feb7338691d6a1e; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 848, x18)

inst_1197:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0afcf02082b5b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa5202e140c2e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7338691d6a1e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0afcf02082b5b; op2val:0x3ffa5202e140c2e5; op3val:0x3feb7338691d6a1e; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 864, x18)

inst_1198:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0afcf02082b5b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa5202e140c2e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7338691d6a1e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0afcf02082b5b; op2val:0x3ffa5202e140c2e5; op3val:0x3feb7338691d6a1e; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 880, x18)

inst_1199:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0afcf02082b5b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa5202e140c2e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7338691d6a1e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0afcf02082b5b; op2val:0x3ffa5202e140c2e5; op3val:0x3feb7338691d6a1e; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 896, x18)

inst_1200:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0afcf02082b5b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa5202e140c2e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7338691d6a1e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0afcf02082b5b; op2val:0x3ffa5202e140c2e5; op3val:0x3feb7338691d6a1e; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 912, x18)

inst_1201:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76d0e55970e1b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6f62a5910687c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cf2f395ff628 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76d0e55970e1b; op2val:0x3fe6f62a5910687c; op3val:0x3fe0cf2f395ff628; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 928, x18)

inst_1202:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76d0e55970e1b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6f62a5910687c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cf2f395ff628 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76d0e55970e1b; op2val:0x3fe6f62a5910687c; op3val:0x3fe0cf2f395ff628; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 944, x18)

inst_1203:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76d0e55970e1b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6f62a5910687c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cf2f395ff628 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76d0e55970e1b; op2val:0x3fe6f62a5910687c; op3val:0x3fe0cf2f395ff628; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 960, x18)

inst_1204:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76d0e55970e1b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6f62a5910687c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cf2f395ff628 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76d0e55970e1b; op2val:0x3fe6f62a5910687c; op3val:0x3fe0cf2f395ff628; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 976, x18)

inst_1205:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76d0e55970e1b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6f62a5910687c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cf2f395ff628 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76d0e55970e1b; op2val:0x3fe6f62a5910687c; op3val:0x3fe0cf2f395ff628; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 992, x18)

inst_1206:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xee698f2811510 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9b41f5e2cf4ca and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8d216e41de434 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbee698f2811510; op2val:0x4009b41f5e2cf4ca; op3val:0x3fd8d216e41de434; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1008, x18)

inst_1207:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xee698f2811510 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9b41f5e2cf4ca and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8d216e41de434 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbee698f2811510; op2val:0x4009b41f5e2cf4ca; op3val:0x3fd8d216e41de434; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1024, x18)

inst_1208:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xee698f2811510 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9b41f5e2cf4ca and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8d216e41de434 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbee698f2811510; op2val:0x4009b41f5e2cf4ca; op3val:0x3fd8d216e41de434; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1040, x18)

inst_1209:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xee698f2811510 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9b41f5e2cf4ca and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8d216e41de434 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbee698f2811510; op2val:0x4009b41f5e2cf4ca; op3val:0x3fd8d216e41de434; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1056, x18)

inst_1210:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xee698f2811510 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9b41f5e2cf4ca and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8d216e41de434 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbee698f2811510; op2val:0x4009b41f5e2cf4ca; op3val:0x3fd8d216e41de434; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1072, x18)

inst_1211:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d8fa6c12e19d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x94f47f72ec063 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2dc98f04ad2e3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d8fa6c12e19d; op2val:0x3fe94f47f72ec063; op3val:0x3fe2dc98f04ad2e3; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1088, x18)

inst_1212:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d8fa6c12e19d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x94f47f72ec063 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2dc98f04ad2e3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d8fa6c12e19d; op2val:0x3fe94f47f72ec063; op3val:0x3fe2dc98f04ad2e3; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1104, x18)

inst_1213:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d8fa6c12e19d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x94f47f72ec063 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2dc98f04ad2e3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d8fa6c12e19d; op2val:0x3fe94f47f72ec063; op3val:0x3fe2dc98f04ad2e3; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1120, x18)

inst_1214:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d8fa6c12e19d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x94f47f72ec063 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2dc98f04ad2e3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d8fa6c12e19d; op2val:0x3fe94f47f72ec063; op3val:0x3fe2dc98f04ad2e3; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1136, x18)

inst_1215:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d8fa6c12e19d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x94f47f72ec063 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2dc98f04ad2e3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d8fa6c12e19d; op2val:0x3fe94f47f72ec063; op3val:0x3fe2dc98f04ad2e3; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1152, x18)

inst_1216:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18d0a26aea73f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0e5b0ff4e67cc and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x288feef75c7b0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe18d0a26aea73f; op2val:0x3fc0e5b0ff4e67cc; op3val:0x3fb288feef75c7b0; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1168, x18)

inst_1217:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18d0a26aea73f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0e5b0ff4e67cc and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x288feef75c7b0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe18d0a26aea73f; op2val:0x3fc0e5b0ff4e67cc; op3val:0x3fb288feef75c7b0; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1184, x18)

inst_1218:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18d0a26aea73f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0e5b0ff4e67cc and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x288feef75c7b0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe18d0a26aea73f; op2val:0x3fc0e5b0ff4e67cc; op3val:0x3fb288feef75c7b0; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1200, x18)

inst_1219:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18d0a26aea73f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0e5b0ff4e67cc and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x288feef75c7b0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe18d0a26aea73f; op2val:0x3fc0e5b0ff4e67cc; op3val:0x3fb288feef75c7b0; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1216, x18)

inst_1220:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18d0a26aea73f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0e5b0ff4e67cc and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x288feef75c7b0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe18d0a26aea73f; op2val:0x3fc0e5b0ff4e67cc; op3val:0x3fb288feef75c7b0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1232, x18)

inst_1221:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x472491b3ff084 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x29f6ab87092a6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7cc4a55fd32a2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe472491b3ff084; op2val:0x3ff29f6ab87092a6; op3val:0x3fe7cc4a55fd32a2; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1248, x18)

inst_1222:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x472491b3ff084 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x29f6ab87092a6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7cc4a55fd32a2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe472491b3ff084; op2val:0x3ff29f6ab87092a6; op3val:0x3fe7cc4a55fd32a2; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1264, x18)

inst_1223:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x472491b3ff084 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x29f6ab87092a6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7cc4a55fd32a2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe472491b3ff084; op2val:0x3ff29f6ab87092a6; op3val:0x3fe7cc4a55fd32a2; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1280, x18)

inst_1224:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x472491b3ff084 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x29f6ab87092a6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7cc4a55fd32a2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe472491b3ff084; op2val:0x3ff29f6ab87092a6; op3val:0x3fe7cc4a55fd32a2; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1296, x18)

inst_1225:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x472491b3ff084 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x29f6ab87092a6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7cc4a55fd32a2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe472491b3ff084; op2val:0x3ff29f6ab87092a6; op3val:0x3fe7cc4a55fd32a2; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1312, x18)

inst_1226:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc0c538efed5cd and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdfad1d4fdcd15 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4703f195f562 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec0c538efed5cd; op2val:0x3fddfad1d4fdcd15; op3val:0x3fda4703f195f562; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1328, x18)

inst_1227:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc0c538efed5cd and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdfad1d4fdcd15 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4703f195f562 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec0c538efed5cd; op2val:0x3fddfad1d4fdcd15; op3val:0x3fda4703f195f562; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1344, x18)

inst_1228:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc0c538efed5cd and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdfad1d4fdcd15 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4703f195f562 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec0c538efed5cd; op2val:0x3fddfad1d4fdcd15; op3val:0x3fda4703f195f562; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1360, x18)

inst_1229:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc0c538efed5cd and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdfad1d4fdcd15 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4703f195f562 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec0c538efed5cd; op2val:0x3fddfad1d4fdcd15; op3val:0x3fda4703f195f562; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1376, x18)

inst_1230:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc0c538efed5cd and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdfad1d4fdcd15 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa4703f195f562 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec0c538efed5cd; op2val:0x3fddfad1d4fdcd15; op3val:0x3fda4703f195f562; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1392, x18)

inst_1231:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa7ded33ed039c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e76778e3eca6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf4cd03dd925a9 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea7ded33ed039c; op2val:0x3ff2e76778e3eca6; op3val:0x3fef4cd03dd925a9; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1408, x18)

inst_1232:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa7ded33ed039c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e76778e3eca6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf4cd03dd925a9 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea7ded33ed039c; op2val:0x3ff2e76778e3eca6; op3val:0x3fef4cd03dd925a9; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1424, x18)

inst_1233:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa7ded33ed039c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e76778e3eca6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf4cd03dd925a9 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea7ded33ed039c; op2val:0x3ff2e76778e3eca6; op3val:0x3fef4cd03dd925a9; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1440, x18)

inst_1234:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa7ded33ed039c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e76778e3eca6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf4cd03dd925a9 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea7ded33ed039c; op2val:0x3ff2e76778e3eca6; op3val:0x3fef4cd03dd925a9; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1456, x18)

inst_1235:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa7ded33ed039c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e76778e3eca6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf4cd03dd925a9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea7ded33ed039c; op2val:0x3ff2e76778e3eca6; op3val:0x3fef4cd03dd925a9; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1472, x18)

inst_1236:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0650e791c0795 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xafa87df6fd291 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xba4edc08f0eb4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0650e791c0795; op2val:0x3fdafa87df6fd291; op3val:0x3fcba4edc08f0eb4; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1488, x18)

inst_1237:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0650e791c0795 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xafa87df6fd291 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xba4edc08f0eb4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0650e791c0795; op2val:0x3fdafa87df6fd291; op3val:0x3fcba4edc08f0eb4; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1504, x18)

inst_1238:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0650e791c0795 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xafa87df6fd291 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xba4edc08f0eb4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0650e791c0795; op2val:0x3fdafa87df6fd291; op3val:0x3fcba4edc08f0eb4; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1520, x18)

inst_1239:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0650e791c0795 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xafa87df6fd291 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xba4edc08f0eb4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0650e791c0795; op2val:0x3fdafa87df6fd291; op3val:0x3fcba4edc08f0eb4; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1536, x18)

inst_1240:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0650e791c0795 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xafa87df6fd291 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xba4edc08f0eb4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0650e791c0795; op2val:0x3fdafa87df6fd291; op3val:0x3fcba4edc08f0eb4; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1552, x18)

inst_1241:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x039156a8efdf2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x72bbcd1cdb810 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77e67a631cf2a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd039156a8efdf2; op2val:0x40072bbcd1cdb810; op3val:0x3fe77e67a631cf2a; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1568, x18)

inst_1242:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x039156a8efdf2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x72bbcd1cdb810 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77e67a631cf2a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd039156a8efdf2; op2val:0x40072bbcd1cdb810; op3val:0x3fe77e67a631cf2a; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1584, x18)

inst_1243:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x039156a8efdf2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x72bbcd1cdb810 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77e67a631cf2a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd039156a8efdf2; op2val:0x40072bbcd1cdb810; op3val:0x3fe77e67a631cf2a; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1600, x18)

inst_1244:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x039156a8efdf2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x72bbcd1cdb810 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77e67a631cf2a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd039156a8efdf2; op2val:0x40072bbcd1cdb810; op3val:0x3fe77e67a631cf2a; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1616, x18)

inst_1245:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x039156a8efdf2 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x72bbcd1cdb810 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x77e67a631cf2a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd039156a8efdf2; op2val:0x40072bbcd1cdb810; op3val:0x3fe77e67a631cf2a; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1632, x18)

inst_1246:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2e8f31c3cb28c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8bfc13d970350 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd400de33b3e3e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2e8f31c3cb28c; op2val:0x3ff8bfc13d970350; op3val:0x3fed400de33b3e3e; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1648, x18)

inst_1247:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2e8f31c3cb28c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8bfc13d970350 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd400de33b3e3e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2e8f31c3cb28c; op2val:0x3ff8bfc13d970350; op3val:0x3fed400de33b3e3e; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1664, x18)

inst_1248:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2e8f31c3cb28c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8bfc13d970350 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd400de33b3e3e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2e8f31c3cb28c; op2val:0x3ff8bfc13d970350; op3val:0x3fed400de33b3e3e; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1680, x18)

inst_1249:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2e8f31c3cb28c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8bfc13d970350 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd400de33b3e3e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2e8f31c3cb28c; op2val:0x3ff8bfc13d970350; op3val:0x3fed400de33b3e3e; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1696, x18)

inst_1250:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2e8f31c3cb28c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8bfc13d970350 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd400de33b3e3e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2e8f31c3cb28c; op2val:0x3ff8bfc13d970350; op3val:0x3fed400de33b3e3e; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1712, x18)

inst_1251:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee249ec94153 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1cd4a8de61447 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2d6410177bdda and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0ee249ec94153; op2val:0x3fe1cd4a8de61447; op3val:0x3fd2d6410177bdda; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1728, x18)

inst_1252:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee249ec94153 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1cd4a8de61447 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2d6410177bdda and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0ee249ec94153; op2val:0x3fe1cd4a8de61447; op3val:0x3fd2d6410177bdda; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1744, x18)

inst_1253:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee249ec94153 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1cd4a8de61447 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2d6410177bdda and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0ee249ec94153; op2val:0x3fe1cd4a8de61447; op3val:0x3fd2d6410177bdda; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1760, x18)

inst_1254:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee249ec94153 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1cd4a8de61447 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2d6410177bdda and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0ee249ec94153; op2val:0x3fe1cd4a8de61447; op3val:0x3fd2d6410177bdda; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1776, x18)

inst_1255:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee249ec94153 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1cd4a8de61447 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2d6410177bdda and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0ee249ec94153; op2val:0x3fe1cd4a8de61447; op3val:0x3fd2d6410177bdda; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1792, x18)

inst_1256:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa196eeec6c690 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2f670512177f2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xeee9b0c96b0b4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca196eeec6c690; op2val:0x4002f670512177f2; op3val:0x3fdeee9b0c96b0b4; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1808, x18)

inst_1257:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa196eeec6c690 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2f670512177f2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xeee9b0c96b0b4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca196eeec6c690; op2val:0x4002f670512177f2; op3val:0x3fdeee9b0c96b0b4; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1824, x18)

inst_1258:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa196eeec6c690 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2f670512177f2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xeee9b0c96b0b4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca196eeec6c690; op2val:0x4002f670512177f2; op3val:0x3fdeee9b0c96b0b4; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1840, x18)

inst_1259:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa196eeec6c690 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2f670512177f2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xeee9b0c96b0b4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca196eeec6c690; op2val:0x4002f670512177f2; op3val:0x3fdeee9b0c96b0b4; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1856, x18)

inst_1260:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa196eeec6c690 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2f670512177f2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xeee9b0c96b0b4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca196eeec6c690; op2val:0x4002f670512177f2; op3val:0x3fdeee9b0c96b0b4; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1872, x18)

inst_1261:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b095dcdd4728 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3891cc67599e2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x59949c9eb71ac and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b095dcdd4728; op2val:0x3fd3891cc67599e2; op3val:0x3fc59949c9eb71ac; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1888, x18)

inst_1262:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b095dcdd4728 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3891cc67599e2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x59949c9eb71ac and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b095dcdd4728; op2val:0x3fd3891cc67599e2; op3val:0x3fc59949c9eb71ac; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1904, x18)

inst_1263:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b095dcdd4728 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3891cc67599e2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x59949c9eb71ac and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b095dcdd4728; op2val:0x3fd3891cc67599e2; op3val:0x3fc59949c9eb71ac; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1920, x18)

inst_1264:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b095dcdd4728 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3891cc67599e2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x59949c9eb71ac and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b095dcdd4728; op2val:0x3fd3891cc67599e2; op3val:0x3fc59949c9eb71ac; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1936, x18)

inst_1265:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b095dcdd4728 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3891cc67599e2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x59949c9eb71ac and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b095dcdd4728; op2val:0x3fd3891cc67599e2; op3val:0x3fc59949c9eb71ac; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1952, x18)

inst_1266:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x51b29b1094462 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x571255803e91d and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc48e7d1b97280 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd51b29b1094462; op2val:0x3fd571255803e91d; op3val:0x3fbc48e7d1b97280; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1968, x18)

inst_1267:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x51b29b1094462 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x571255803e91d and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc48e7d1b97280 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd51b29b1094462; op2val:0x3fd571255803e91d; op3val:0x3fbc48e7d1b97280; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1984, x18)

inst_1268:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x51b29b1094462 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x571255803e91d and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc48e7d1b97280 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd51b29b1094462; op2val:0x3fd571255803e91d; op3val:0x3fbc48e7d1b97280; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 2000, x18)

inst_1269:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x51b29b1094462 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x571255803e91d and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc48e7d1b97280 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd51b29b1094462; op2val:0x3fd571255803e91d; op3val:0x3fbc48e7d1b97280; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_11)

inst_1270:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x51b29b1094462 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x571255803e91d and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc48e7d1b97280 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd51b29b1094462; op2val:0x3fd571255803e91d; op3val:0x3fbc48e7d1b97280; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 0, x18)

inst_1271:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x53de7f499c6e0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4c69963d1bf9e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xb950bacb2bcd8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f953de7f499c6e0; op2val:0x4014c69963d1bf9e; op3val:0x3fbb950bacb2bcd8; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 16, x18)

inst_1272:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x53de7f499c6e0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4c69963d1bf9e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xb950bacb2bcd8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f953de7f499c6e0; op2val:0x4014c69963d1bf9e; op3val:0x3fbb950bacb2bcd8; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 32, x18)

inst_1273:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x53de7f499c6e0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4c69963d1bf9e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xb950bacb2bcd8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f953de7f499c6e0; op2val:0x4014c69963d1bf9e; op3val:0x3fbb950bacb2bcd8; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 48, x18)

inst_1274:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x53de7f499c6e0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4c69963d1bf9e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xb950bacb2bcd8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f953de7f499c6e0; op2val:0x4014c69963d1bf9e; op3val:0x3fbb950bacb2bcd8; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 64, x18)
addi x16,x16,2040

inst_1275:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x53de7f499c6e0 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4c69963d1bf9e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xb950bacb2bcd8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f953de7f499c6e0; op2val:0x4014c69963d1bf9e; op3val:0x3fbb950bacb2bcd8; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 80, x18)

inst_1276:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x37bacc78502a0 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x3d525a8f21a1f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8266974c6ffc7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f937bacc78502a0; op2val:0x4043d525a8f21a1f; op3val:0x3fe8266974c6ffc7; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 96, x18)

inst_1277:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x37bacc78502a0 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x3d525a8f21a1f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8266974c6ffc7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f937bacc78502a0; op2val:0x4043d525a8f21a1f; op3val:0x3fe8266974c6ffc7; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 112, x18)

inst_1278:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x37bacc78502a0 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x3d525a8f21a1f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8266974c6ffc7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f937bacc78502a0; op2val:0x4043d525a8f21a1f; op3val:0x3fe8266974c6ffc7; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 128, x18)

inst_1279:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x37bacc78502a0 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x3d525a8f21a1f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8266974c6ffc7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f937bacc78502a0; op2val:0x4043d525a8f21a1f; op3val:0x3fe8266974c6ffc7; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 144, x18)

inst_1280:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x37bacc78502a0 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x3d525a8f21a1f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8266974c6ffc7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f937bacc78502a0; op2val:0x4043d525a8f21a1f; op3val:0x3fe8266974c6ffc7; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 160, x18)

inst_1281:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x03c6840036cda and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2fdd044d6814d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x34583cf9db703 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd03c6840036cda; op2val:0x4002fdd044d6814d; op3val:0x3fe34583cf9db703; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 176, x18)

inst_1282:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x03c6840036cda and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2fdd044d6814d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x34583cf9db703 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd03c6840036cda; op2val:0x4002fdd044d6814d; op3val:0x3fe34583cf9db703; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 192, x18)

inst_1283:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x03c6840036cda and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2fdd044d6814d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x34583cf9db703 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd03c6840036cda; op2val:0x4002fdd044d6814d; op3val:0x3fe34583cf9db703; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 208, x18)

inst_1284:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x03c6840036cda and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2fdd044d6814d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x34583cf9db703 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd03c6840036cda; op2val:0x4002fdd044d6814d; op3val:0x3fe34583cf9db703; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 224, x18)

inst_1285:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x03c6840036cda and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2fdd044d6814d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x34583cf9db703 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd03c6840036cda; op2val:0x4002fdd044d6814d; op3val:0x3fe34583cf9db703; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1286:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4716cb4233e4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x384a00c1f1cc5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x277b2359fd0d3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4716cb4233e4; op2val:0x3fe384a00c1f1cc5; op3val:0x3fe277b2359fd0d3; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 256, x18)

inst_1287:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4716cb4233e4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x384a00c1f1cc5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x277b2359fd0d3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4716cb4233e4; op2val:0x3fe384a00c1f1cc5; op3val:0x3fe277b2359fd0d3; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 272, x18)

inst_1288:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4716cb4233e4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x384a00c1f1cc5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x277b2359fd0d3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4716cb4233e4; op2val:0x3fe384a00c1f1cc5; op3val:0x3fe277b2359fd0d3; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 288, x18)

inst_1289:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4716cb4233e4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x384a00c1f1cc5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x277b2359fd0d3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4716cb4233e4; op2val:0x3fe384a00c1f1cc5; op3val:0x3fe277b2359fd0d3; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 304, x18)

inst_1290:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4716cb4233e4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x384a00c1f1cc5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x277b2359fd0d3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4716cb4233e4; op2val:0x3fe384a00c1f1cc5; op3val:0x3fe277b2359fd0d3; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 320, x18)

inst_1291:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbf0f84d48fb20 and fs2 == 0 and fe2 == 0x3f2 and fm2 == 0x2395b6ab51f79 and fs3 == 0 and fe3 == 0x3f1 and fm3 == 0xfd34170626000 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febf0f84d48fb20; op2val:0x3f22395b6ab51f79; op3val:0x3f1fd34170626000; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 336, x18)

inst_1292:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbf0f84d48fb20 and fs2 == 0 and fe2 == 0x3f2 and fm2 == 0x2395b6ab51f79 and fs3 == 0 and fe3 == 0x3f1 and fm3 == 0xfd34170626000 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febf0f84d48fb20; op2val:0x3f22395b6ab51f79; op3val:0x3f1fd34170626000; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 352, x18)

inst_1293:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbf0f84d48fb20 and fs2 == 0 and fe2 == 0x3f2 and fm2 == 0x2395b6ab51f79 and fs3 == 0 and fe3 == 0x3f1 and fm3 == 0xfd34170626000 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febf0f84d48fb20; op2val:0x3f22395b6ab51f79; op3val:0x3f1fd34170626000; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 368, x18)

inst_1294:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbf0f84d48fb20 and fs2 == 0 and fe2 == 0x3f2 and fm2 == 0x2395b6ab51f79 and fs3 == 0 and fe3 == 0x3f1 and fm3 == 0xfd34170626000 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febf0f84d48fb20; op2val:0x3f22395b6ab51f79; op3val:0x3f1fd34170626000; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 384, x18)

inst_1295:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbf0f84d48fb20 and fs2 == 0 and fe2 == 0x3f2 and fm2 == 0x2395b6ab51f79 and fs3 == 0 and fe3 == 0x3f1 and fm3 == 0xfd34170626000 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febf0f84d48fb20; op2val:0x3f22395b6ab51f79; op3val:0x3f1fd34170626000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 400, x18)

inst_1296:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ec4cc5e3f81e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6540ee126313 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x38bf49ed7e946 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ec4cc5e3f81e; op2val:0x3fef6540ee126313; op3val:0x3fe38bf49ed7e946; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 416, x18)

inst_1297:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ec4cc5e3f81e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6540ee126313 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x38bf49ed7e946 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ec4cc5e3f81e; op2val:0x3fef6540ee126313; op3val:0x3fe38bf49ed7e946; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 432, x18)

inst_1298:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ec4cc5e3f81e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6540ee126313 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x38bf49ed7e946 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ec4cc5e3f81e; op2val:0x3fef6540ee126313; op3val:0x3fe38bf49ed7e946; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 448, x18)

inst_1299:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ec4cc5e3f81e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6540ee126313 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x38bf49ed7e946 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ec4cc5e3f81e; op2val:0x3fef6540ee126313; op3val:0x3fe38bf49ed7e946; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 464, x18)

inst_1300:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ec4cc5e3f81e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf6540ee126313 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x38bf49ed7e946 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ec4cc5e3f81e; op2val:0x3fef6540ee126313; op3val:0x3fe38bf49ed7e946; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 480, x18)

inst_1301:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x84d92f30d11d4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd3c78c29d4ada and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6343a5680606e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd84d92f30d11d4; op2val:0x3ffd3c78c29d4ada; op3val:0x3fe6343a5680606e; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 496, x18)

inst_1302:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x84d92f30d11d4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd3c78c29d4ada and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6343a5680606e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd84d92f30d11d4; op2val:0x3ffd3c78c29d4ada; op3val:0x3fe6343a5680606e; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 512, x18)

inst_1303:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x84d92f30d11d4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd3c78c29d4ada and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6343a5680606e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd84d92f30d11d4; op2val:0x3ffd3c78c29d4ada; op3val:0x3fe6343a5680606e; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 528, x18)

inst_1304:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x84d92f30d11d4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd3c78c29d4ada and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6343a5680606e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd84d92f30d11d4; op2val:0x3ffd3c78c29d4ada; op3val:0x3fe6343a5680606e; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 544, x18)

inst_1305:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x84d92f30d11d4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd3c78c29d4ada and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6343a5680606e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd84d92f30d11d4; op2val:0x3ffd3c78c29d4ada; op3val:0x3fe6343a5680606e; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 560, x18)

inst_1306:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x558c8cdc4de4b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x2561abc745bef and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x876c2ca844068 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe558c8cdc4de4b; op2val:0x3fc2561abc745bef; op3val:0x3fb876c2ca844068; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 576, x18)

inst_1307:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x558c8cdc4de4b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x2561abc745bef and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x876c2ca844068 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe558c8cdc4de4b; op2val:0x3fc2561abc745bef; op3val:0x3fb876c2ca844068; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 592, x18)

inst_1308:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x558c8cdc4de4b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x2561abc745bef and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x876c2ca844068 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe558c8cdc4de4b; op2val:0x3fc2561abc745bef; op3val:0x3fb876c2ca844068; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 608, x18)

inst_1309:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x558c8cdc4de4b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x2561abc745bef and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x876c2ca844068 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe558c8cdc4de4b; op2val:0x3fc2561abc745bef; op3val:0x3fb876c2ca844068; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 624, x18)

inst_1310:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x558c8cdc4de4b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x2561abc745bef and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x876c2ca844068 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe558c8cdc4de4b; op2val:0x3fc2561abc745bef; op3val:0x3fb876c2ca844068; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 640, x18)

inst_1311:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc689c8d4b30ec and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1b71a1ed2a106 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf74413568760b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc689c8d4b30ec; op2val:0x4011b71a1ed2a106; op3val:0x3fef74413568760b; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 656, x18)

inst_1312:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc689c8d4b30ec and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1b71a1ed2a106 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf74413568760b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc689c8d4b30ec; op2val:0x4011b71a1ed2a106; op3val:0x3fef74413568760b; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 672, x18)

inst_1313:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc689c8d4b30ec and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1b71a1ed2a106 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf74413568760b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc689c8d4b30ec; op2val:0x4011b71a1ed2a106; op3val:0x3fef74413568760b; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 688, x18)

inst_1314:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc689c8d4b30ec and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1b71a1ed2a106 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf74413568760b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc689c8d4b30ec; op2val:0x4011b71a1ed2a106; op3val:0x3fef74413568760b; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 704, x18)

inst_1315:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc689c8d4b30ec and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1b71a1ed2a106 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf74413568760b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc689c8d4b30ec; op2val:0x4011b71a1ed2a106; op3val:0x3fef74413568760b; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 720, x18)

inst_1316:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3504d5bd2a7fc and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa2d7ff11ff3a5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf9969ff3eb932 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3504d5bd2a7fc; op2val:0x400a2d7ff11ff3a5; op3val:0x3fef9969ff3eb932; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 736, x18)

inst_1317:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3504d5bd2a7fc and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa2d7ff11ff3a5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf9969ff3eb932 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3504d5bd2a7fc; op2val:0x400a2d7ff11ff3a5; op3val:0x3fef9969ff3eb932; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 752, x18)

inst_1318:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3504d5bd2a7fc and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa2d7ff11ff3a5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf9969ff3eb932 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3504d5bd2a7fc; op2val:0x400a2d7ff11ff3a5; op3val:0x3fef9969ff3eb932; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 768, x18)

inst_1319:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3504d5bd2a7fc and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa2d7ff11ff3a5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf9969ff3eb932 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3504d5bd2a7fc; op2val:0x400a2d7ff11ff3a5; op3val:0x3fef9969ff3eb932; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 784, x18)

inst_1320:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3504d5bd2a7fc and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa2d7ff11ff3a5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf9969ff3eb932 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3504d5bd2a7fc; op2val:0x400a2d7ff11ff3a5; op3val:0x3fef9969ff3eb932; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 800, x18)

inst_1321:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9489eaca9fae8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5c86b81444854 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x13602f1fbf780 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9489eaca9fae8; op2val:0x3fc5c86b81444854; op3val:0x3fc13602f1fbf780; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 816, x18)

inst_1322:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9489eaca9fae8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5c86b81444854 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x13602f1fbf780 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9489eaca9fae8; op2val:0x3fc5c86b81444854; op3val:0x3fc13602f1fbf780; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 832, x18)

inst_1323:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9489eaca9fae8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5c86b81444854 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x13602f1fbf780 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9489eaca9fae8; op2val:0x3fc5c86b81444854; op3val:0x3fc13602f1fbf780; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 848, x18)

inst_1324:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9489eaca9fae8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5c86b81444854 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x13602f1fbf780 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9489eaca9fae8; op2val:0x3fc5c86b81444854; op3val:0x3fc13602f1fbf780; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 864, x18)

inst_1325:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9489eaca9fae8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5c86b81444854 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x13602f1fbf780 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9489eaca9fae8; op2val:0x3fc5c86b81444854; op3val:0x3fc13602f1fbf780; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 880, x18)

inst_1326:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0852ab71bea61 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xab650dd25ea8a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb94a3ad9c5211 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0852ab71bea61; op2val:0x3ffab650dd25ea8a; op3val:0x3feb94a3ad9c5211; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 896, x18)

inst_1327:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0852ab71bea61 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xab650dd25ea8a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb94a3ad9c5211 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0852ab71bea61; op2val:0x3ffab650dd25ea8a; op3val:0x3feb94a3ad9c5211; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 912, x18)

inst_1328:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0852ab71bea61 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xab650dd25ea8a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb94a3ad9c5211 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0852ab71bea61; op2val:0x3ffab650dd25ea8a; op3val:0x3feb94a3ad9c5211; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 928, x18)

inst_1329:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0852ab71bea61 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xab650dd25ea8a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb94a3ad9c5211 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0852ab71bea61; op2val:0x3ffab650dd25ea8a; op3val:0x3feb94a3ad9c5211; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 944, x18)

inst_1330:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0852ab71bea61 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xab650dd25ea8a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb94a3ad9c5211 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0852ab71bea61; op2val:0x3ffab650dd25ea8a; op3val:0x3feb94a3ad9c5211; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 960, x18)

inst_1331:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x601cbfd1fbd97 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2b33920db03cf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b8882a7b13f4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe601cbfd1fbd97; op2val:0x3ff2b33920db03cf; op3val:0x3fe9b8882a7b13f4; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 976, x18)

inst_1332:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x601cbfd1fbd97 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2b33920db03cf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b8882a7b13f4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe601cbfd1fbd97; op2val:0x3ff2b33920db03cf; op3val:0x3fe9b8882a7b13f4; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 992, x18)

inst_1333:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x601cbfd1fbd97 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2b33920db03cf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b8882a7b13f4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe601cbfd1fbd97; op2val:0x3ff2b33920db03cf; op3val:0x3fe9b8882a7b13f4; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1008, x18)

inst_1334:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x601cbfd1fbd97 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2b33920db03cf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b8882a7b13f4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe601cbfd1fbd97; op2val:0x3ff2b33920db03cf; op3val:0x3fe9b8882a7b13f4; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1024, x18)

inst_1335:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x601cbfd1fbd97 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2b33920db03cf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b8882a7b13f4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe601cbfd1fbd97; op2val:0x3ff2b33920db03cf; op3val:0x3fe9b8882a7b13f4; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1040, x18)

inst_1336:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc42f97d9131d2 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x8709186b9baa6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x595a60ddb5f4e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec42f97d9131d2; op2val:0x3fd8709186b9baa6; op3val:0x3fd595a60ddb5f4e; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1056, x18)

inst_1337:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc42f97d9131d2 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x8709186b9baa6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x595a60ddb5f4e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec42f97d9131d2; op2val:0x3fd8709186b9baa6; op3val:0x3fd595a60ddb5f4e; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1072, x18)

inst_1338:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc42f97d9131d2 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x8709186b9baa6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x595a60ddb5f4e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec42f97d9131d2; op2val:0x3fd8709186b9baa6; op3val:0x3fd595a60ddb5f4e; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1088, x18)

inst_1339:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc42f97d9131d2 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x8709186b9baa6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x595a60ddb5f4e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec42f97d9131d2; op2val:0x3fd8709186b9baa6; op3val:0x3fd595a60ddb5f4e; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1104, x18)

inst_1340:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc42f97d9131d2 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x8709186b9baa6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x595a60ddb5f4e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec42f97d9131d2; op2val:0x3fd8709186b9baa6; op3val:0x3fd595a60ddb5f4e; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1120, x18)

inst_1341:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xeb3272a48c640 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xfab8074446c94 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe6216866830ec and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbeb3272a48c640; op2val:0x400fab8074446c94; op3val:0x3fde6216866830ec; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1136, x18)

inst_1342:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xeb3272a48c640 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xfab8074446c94 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe6216866830ec and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbeb3272a48c640; op2val:0x400fab8074446c94; op3val:0x3fde6216866830ec; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1152, x18)

inst_1343:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xeb3272a48c640 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xfab8074446c94 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe6216866830ec and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbeb3272a48c640; op2val:0x400fab8074446c94; op3val:0x3fde6216866830ec; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1168, x18)

inst_1344:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xeb3272a48c640 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xfab8074446c94 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe6216866830ec and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbeb3272a48c640; op2val:0x400fab8074446c94; op3val:0x3fde6216866830ec; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1184, x18)

inst_1345:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xeb3272a48c640 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xfab8074446c94 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe6216866830ec and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbeb3272a48c640; op2val:0x400fab8074446c94; op3val:0x3fde6216866830ec; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1200, x18)

inst_1346:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa4b41870b1732 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b9ca041b16e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd2147c1ffd6ce and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda4b41870b1732; op2val:0x4001b9ca041b16e5; op3val:0x3fed2147c1ffd6ce; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1216, x18)

inst_1347:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa4b41870b1732 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b9ca041b16e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd2147c1ffd6ce and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda4b41870b1732; op2val:0x4001b9ca041b16e5; op3val:0x3fed2147c1ffd6ce; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1232, x18)

inst_1348:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa4b41870b1732 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b9ca041b16e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd2147c1ffd6ce and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda4b41870b1732; op2val:0x4001b9ca041b16e5; op3val:0x3fed2147c1ffd6ce; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1248, x18)

inst_1349:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa4b41870b1732 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b9ca041b16e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd2147c1ffd6ce and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda4b41870b1732; op2val:0x4001b9ca041b16e5; op3val:0x3fed2147c1ffd6ce; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1264, x18)

inst_1350:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa4b41870b1732 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b9ca041b16e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd2147c1ffd6ce and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda4b41870b1732; op2val:0x4001b9ca041b16e5; op3val:0x3fed2147c1ffd6ce; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1280, x18)

inst_1351:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x97cf9248fff6c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbf2f8c2a523a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x642f976920b14 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd97cf9248fff6c; op2val:0x3ffbf2f8c2a523a9; op3val:0x3fe642f976920b14; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1296, x18)

inst_1352:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x97cf9248fff6c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbf2f8c2a523a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x642f976920b14 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd97cf9248fff6c; op2val:0x3ffbf2f8c2a523a9; op3val:0x3fe642f976920b14; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1312, x18)

inst_1353:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x97cf9248fff6c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbf2f8c2a523a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x642f976920b14 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd97cf9248fff6c; op2val:0x3ffbf2f8c2a523a9; op3val:0x3fe642f976920b14; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1328, x18)

inst_1354:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x97cf9248fff6c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbf2f8c2a523a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x642f976920b14 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd97cf9248fff6c; op2val:0x3ffbf2f8c2a523a9; op3val:0x3fe642f976920b14; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1344, x18)

inst_1355:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x97cf9248fff6c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbf2f8c2a523a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x642f976920b14 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd97cf9248fff6c; op2val:0x3ffbf2f8c2a523a9; op3val:0x3fe642f976920b14; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1360, x18)

inst_1356:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf172ac977516d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x508a58ca75658 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46f9ab7053a10 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef172ac977516d; op2val:0x3fe508a58ca75658; op3val:0x3fe46f9ab7053a10; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1376, x18)

inst_1357:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf172ac977516d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x508a58ca75658 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46f9ab7053a10 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef172ac977516d; op2val:0x3fe508a58ca75658; op3val:0x3fe46f9ab7053a10; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1392, x18)

inst_1358:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf172ac977516d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x508a58ca75658 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46f9ab7053a10 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef172ac977516d; op2val:0x3fe508a58ca75658; op3val:0x3fe46f9ab7053a10; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1408, x18)

inst_1359:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf172ac977516d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x508a58ca75658 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46f9ab7053a10 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef172ac977516d; op2val:0x3fe508a58ca75658; op3val:0x3fe46f9ab7053a10; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1424, x18)
addi x16,x16,2040

inst_1360:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf172ac977516d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x508a58ca75658 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46f9ab7053a10 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef172ac977516d; op2val:0x3fe508a58ca75658; op3val:0x3fe46f9ab7053a10; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1440, x18)

inst_1361:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8e536f7f0e220 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xf188c984af6cc and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x831268ab6e3a0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8e536f7f0e220; op2val:0x3fbf188c984af6cc; op3val:0x3f9831268ab6e3a0; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1456, x18)

inst_1362:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8e536f7f0e220 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xf188c984af6cc and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x831268ab6e3a0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8e536f7f0e220; op2val:0x3fbf188c984af6cc; op3val:0x3f9831268ab6e3a0; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1472, x18)

inst_1363:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8e536f7f0e220 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xf188c984af6cc and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x831268ab6e3a0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8e536f7f0e220; op2val:0x3fbf188c984af6cc; op3val:0x3f9831268ab6e3a0; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1488, x18)

inst_1364:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8e536f7f0e220 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xf188c984af6cc and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x831268ab6e3a0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8e536f7f0e220; op2val:0x3fbf188c984af6cc; op3val:0x3f9831268ab6e3a0; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1504, x18)

inst_1365:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8e536f7f0e220 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xf188c984af6cc and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x831268ab6e3a0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8e536f7f0e220; op2val:0x3fbf188c984af6cc; op3val:0x3f9831268ab6e3a0; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1520, x18)

inst_1366:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6bf55e03d5f94 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb32a3bdb7d700 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3556fd0dc5900 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6bf55e03d5f94; op2val:0x3feb32a3bdb7d700; op3val:0x3fd3556fd0dc5900; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1536, x18)

inst_1367:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6bf55e03d5f94 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb32a3bdb7d700 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3556fd0dc5900 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6bf55e03d5f94; op2val:0x3feb32a3bdb7d700; op3val:0x3fd3556fd0dc5900; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1552, x18)

inst_1368:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6bf55e03d5f94 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb32a3bdb7d700 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3556fd0dc5900 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6bf55e03d5f94; op2val:0x3feb32a3bdb7d700; op3val:0x3fd3556fd0dc5900; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1568, x18)

inst_1369:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6bf55e03d5f94 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb32a3bdb7d700 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3556fd0dc5900 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6bf55e03d5f94; op2val:0x3feb32a3bdb7d700; op3val:0x3fd3556fd0dc5900; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1584, x18)

inst_1370:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6bf55e03d5f94 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb32a3bdb7d700 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3556fd0dc5900 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6bf55e03d5f94; op2val:0x3feb32a3bdb7d700; op3val:0x3fd3556fd0dc5900; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1600, x18)

inst_1371:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x72a4619cd0568 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5745c9c405eb7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf0ff493649790 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb72a4619cd0568; op2val:0x4015745c9c405eb7; op3val:0x3fdf0ff493649790; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1616, x18)

inst_1372:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x72a4619cd0568 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5745c9c405eb7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf0ff493649790 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb72a4619cd0568; op2val:0x4015745c9c405eb7; op3val:0x3fdf0ff493649790; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1632, x18)

inst_1373:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x72a4619cd0568 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5745c9c405eb7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf0ff493649790 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb72a4619cd0568; op2val:0x4015745c9c405eb7; op3val:0x3fdf0ff493649790; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1648, x18)

inst_1374:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x72a4619cd0568 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5745c9c405eb7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf0ff493649790 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb72a4619cd0568; op2val:0x4015745c9c405eb7; op3val:0x3fdf0ff493649790; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1664, x18)

inst_1375:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x72a4619cd0568 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5745c9c405eb7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf0ff493649790 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb72a4619cd0568; op2val:0x4015745c9c405eb7; op3val:0x3fdf0ff493649790; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1680, x18)

inst_1376:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x477c5460d9dfa and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xaebcbe73fbc59 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x13822455a5518 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe477c5460d9dfa; op2val:0x3fbaebcbe73fbc59; op3val:0x3fb13822455a5518; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1696, x18)

inst_1377:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x477c5460d9dfa and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xaebcbe73fbc59 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x13822455a5518 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe477c5460d9dfa; op2val:0x3fbaebcbe73fbc59; op3val:0x3fb13822455a5518; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1712, x18)

inst_1378:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x477c5460d9dfa and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xaebcbe73fbc59 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x13822455a5518 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe477c5460d9dfa; op2val:0x3fbaebcbe73fbc59; op3val:0x3fb13822455a5518; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1728, x18)

inst_1379:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x477c5460d9dfa and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xaebcbe73fbc59 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x13822455a5518 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe477c5460d9dfa; op2val:0x3fbaebcbe73fbc59; op3val:0x3fb13822455a5518; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1744, x18)

inst_1380:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x477c5460d9dfa and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xaebcbe73fbc59 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x13822455a5518 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe477c5460d9dfa; op2val:0x3fbaebcbe73fbc59; op3val:0x3fb13822455a5518; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1760, x18)

inst_1381:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9927004b039e3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb990c2fda8bc8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x60ddc68b2d704 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9927004b039e3; op2val:0x3fdb990c2fda8bc8; op3val:0x3fd60ddc68b2d704; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1776, x18)

inst_1382:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9927004b039e3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb990c2fda8bc8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x60ddc68b2d704 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9927004b039e3; op2val:0x3fdb990c2fda8bc8; op3val:0x3fd60ddc68b2d704; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1792, x18)

inst_1383:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9927004b039e3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb990c2fda8bc8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x60ddc68b2d704 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9927004b039e3; op2val:0x3fdb990c2fda8bc8; op3val:0x3fd60ddc68b2d704; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1808, x18)

inst_1384:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9927004b039e3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb990c2fda8bc8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x60ddc68b2d704 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9927004b039e3; op2val:0x3fdb990c2fda8bc8; op3val:0x3fd60ddc68b2d704; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1824, x18)

inst_1385:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9927004b039e3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb990c2fda8bc8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x60ddc68b2d704 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9927004b039e3; op2val:0x3fdb990c2fda8bc8; op3val:0x3fd60ddc68b2d704; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1840, x18)

inst_1386:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8e5a33d138740 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0ec009cc33766 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa54df58c723c8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8e5a33d138740; op2val:0x4020ec009cc33766; op3val:0x3fda54df58c723c8; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1856, x18)

inst_1387:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8e5a33d138740 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0ec009cc33766 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa54df58c723c8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8e5a33d138740; op2val:0x4020ec009cc33766; op3val:0x3fda54df58c723c8; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1872, x18)

inst_1388:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8e5a33d138740 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0ec009cc33766 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa54df58c723c8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8e5a33d138740; op2val:0x4020ec009cc33766; op3val:0x3fda54df58c723c8; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1888, x18)

inst_1389:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8e5a33d138740 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0ec009cc33766 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa54df58c723c8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8e5a33d138740; op2val:0x4020ec009cc33766; op3val:0x3fda54df58c723c8; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1904, x18)

inst_1390:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x8e5a33d138740 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0ec009cc33766 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa54df58c723c8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa8e5a33d138740; op2val:0x4020ec009cc33766; op3val:0x3fda54df58c723c8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1920, x18)

inst_1391:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x75d7d51a0f358 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf108304505770 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6ae9fcf9c1b9d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd75d7d51a0f358; op2val:0x3fff108304505770; op3val:0x3fe6ae9fcf9c1b9d; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1936, x18)

inst_1392:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x75d7d51a0f358 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf108304505770 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6ae9fcf9c1b9d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd75d7d51a0f358; op2val:0x3fff108304505770; op3val:0x3fe6ae9fcf9c1b9d; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1952, x18)

inst_1393:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x75d7d51a0f358 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf108304505770 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6ae9fcf9c1b9d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd75d7d51a0f358; op2val:0x3fff108304505770; op3val:0x3fe6ae9fcf9c1b9d; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1968, x18)

inst_1394:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x75d7d51a0f358 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf108304505770 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6ae9fcf9c1b9d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd75d7d51a0f358; op2val:0x3fff108304505770; op3val:0x3fe6ae9fcf9c1b9d; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1984, x18)

inst_1395:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x75d7d51a0f358 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf108304505770 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6ae9fcf9c1b9d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd75d7d51a0f358; op2val:0x3fff108304505770; op3val:0x3fe6ae9fcf9c1b9d; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 2000, x18)

inst_1396:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcffc04cfa4c29 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc597495f8b96c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b0d939326f54 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecffc04cfa4c29; op2val:0x3fec597495f8b96c; op3val:0x3fe9b0d939326f54; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_12)

inst_1397:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcffc04cfa4c29 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc597495f8b96c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b0d939326f54 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecffc04cfa4c29; op2val:0x3fec597495f8b96c; op3val:0x3fe9b0d939326f54; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 0, x18)

inst_1398:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcffc04cfa4c29 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc597495f8b96c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b0d939326f54 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecffc04cfa4c29; op2val:0x3fec597495f8b96c; op3val:0x3fe9b0d939326f54; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 16, x18)

inst_1399:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcffc04cfa4c29 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc597495f8b96c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b0d939326f54 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecffc04cfa4c29; op2val:0x3fec597495f8b96c; op3val:0x3fe9b0d939326f54; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 32, x18)

inst_1400:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcffc04cfa4c29 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc597495f8b96c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b0d939326f54 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecffc04cfa4c29; op2val:0x3fec597495f8b96c; op3val:0x3fe9b0d939326f54; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 48, x18)

inst_1401:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8fceb5bfe01b4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6bc2bc6f4fbe4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1c0d1e5339691 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8fceb5bfe01b4; op2val:0x4006bc2bc6f4fbe4; op3val:0x3fe1c0d1e5339691; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 64, x18)

inst_1402:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8fceb5bfe01b4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6bc2bc6f4fbe4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1c0d1e5339691 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8fceb5bfe01b4; op2val:0x4006bc2bc6f4fbe4; op3val:0x3fe1c0d1e5339691; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 80, x18)

inst_1403:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8fceb5bfe01b4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6bc2bc6f4fbe4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1c0d1e5339691 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8fceb5bfe01b4; op2val:0x4006bc2bc6f4fbe4; op3val:0x3fe1c0d1e5339691; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 96, x18)

inst_1404:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8fceb5bfe01b4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6bc2bc6f4fbe4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1c0d1e5339691 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8fceb5bfe01b4; op2val:0x4006bc2bc6f4fbe4; op3val:0x3fe1c0d1e5339691; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 112, x18)

inst_1405:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8fceb5bfe01b4 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6bc2bc6f4fbe4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1c0d1e5339691 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8fceb5bfe01b4; op2val:0x4006bc2bc6f4fbe4; op3val:0x3fe1c0d1e5339691; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 128, x18)

inst_1406:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd050a9a8d2b05 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xc306f8539197c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x99055f970dda8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed050a9a8d2b05; op2val:0x3fcc306f8539197c; op3val:0x3fc99055f970dda8; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 144, x18)

inst_1407:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd050a9a8d2b05 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xc306f8539197c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x99055f970dda8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed050a9a8d2b05; op2val:0x3fcc306f8539197c; op3val:0x3fc99055f970dda8; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 160, x18)

inst_1408:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd050a9a8d2b05 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xc306f8539197c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x99055f970dda8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed050a9a8d2b05; op2val:0x3fcc306f8539197c; op3val:0x3fc99055f970dda8; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 176, x18)

inst_1409:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd050a9a8d2b05 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xc306f8539197c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x99055f970dda8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed050a9a8d2b05; op2val:0x3fcc306f8539197c; op3val:0x3fc99055f970dda8; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 192, x18)

inst_1410:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd050a9a8d2b05 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xc306f8539197c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x99055f970dda8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed050a9a8d2b05; op2val:0x3fcc306f8539197c; op3val:0x3fc99055f970dda8; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 208, x18)

inst_1411:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3ee8e89346e7c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x111370f1260ef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x542e98009ff7f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3ee8e89346e7c; op2val:0x401111370f1260ef; op3val:0x3fe542e98009ff7f; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 224, x18)

inst_1412:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3ee8e89346e7c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x111370f1260ef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x542e98009ff7f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3ee8e89346e7c; op2val:0x401111370f1260ef; op3val:0x3fe542e98009ff7f; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 240, x18)

inst_1413:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3ee8e89346e7c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x111370f1260ef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x542e98009ff7f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3ee8e89346e7c; op2val:0x401111370f1260ef; op3val:0x3fe542e98009ff7f; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 256, x18)

inst_1414:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3ee8e89346e7c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x111370f1260ef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x542e98009ff7f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3ee8e89346e7c; op2val:0x401111370f1260ef; op3val:0x3fe542e98009ff7f; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 272, x18)

inst_1415:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3ee8e89346e7c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x111370f1260ef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x542e98009ff7f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3ee8e89346e7c; op2val:0x401111370f1260ef; op3val:0x3fe542e98009ff7f; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 288, x18)

inst_1416:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x92b53563d3f54 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9933d17862ef6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x41da82f4b8d7c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc92b53563d3f54; op2val:0x3ff9933d17862ef6; op3val:0x3fd41da82f4b8d7c; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 304, x18)

inst_1417:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x92b53563d3f54 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9933d17862ef6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x41da82f4b8d7c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc92b53563d3f54; op2val:0x3ff9933d17862ef6; op3val:0x3fd41da82f4b8d7c; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 320, x18)

inst_1418:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x92b53563d3f54 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9933d17862ef6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x41da82f4b8d7c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc92b53563d3f54; op2val:0x3ff9933d17862ef6; op3val:0x3fd41da82f4b8d7c; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 336, x18)

inst_1419:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x92b53563d3f54 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9933d17862ef6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x41da82f4b8d7c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc92b53563d3f54; op2val:0x3ff9933d17862ef6; op3val:0x3fd41da82f4b8d7c; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 352, x18)

inst_1420:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x92b53563d3f54 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9933d17862ef6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x41da82f4b8d7c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc92b53563d3f54; op2val:0x3ff9933d17862ef6; op3val:0x3fd41da82f4b8d7c; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 368, x18)

inst_1421:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8f1b1f456799c and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe26d29351eb24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x780d9fd5930ba and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8f1b1f456799c; op2val:0x400e26d29351eb24; op3val:0x3fe780d9fd5930ba; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 384, x18)

inst_1422:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8f1b1f456799c and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe26d29351eb24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x780d9fd5930ba and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8f1b1f456799c; op2val:0x400e26d29351eb24; op3val:0x3fe780d9fd5930ba; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 400, x18)

inst_1423:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8f1b1f456799c and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe26d29351eb24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x780d9fd5930ba and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8f1b1f456799c; op2val:0x400e26d29351eb24; op3val:0x3fe780d9fd5930ba; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 416, x18)

inst_1424:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8f1b1f456799c and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe26d29351eb24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x780d9fd5930ba and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8f1b1f456799c; op2val:0x400e26d29351eb24; op3val:0x3fe780d9fd5930ba; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 432, x18)

inst_1425:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8f1b1f456799c and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe26d29351eb24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x780d9fd5930ba and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8f1b1f456799c; op2val:0x400e26d29351eb24; op3val:0x3fe780d9fd5930ba; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 448, x18)

inst_1426:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d31161bf0f55 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b33f2352351c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc9191b267601e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d31161bf0f55; op2val:0x3fe1b33f2352351c; op3val:0x3fdc9191b267601e; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 464, x18)

inst_1427:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d31161bf0f55 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b33f2352351c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc9191b267601e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d31161bf0f55; op2val:0x3fe1b33f2352351c; op3val:0x3fdc9191b267601e; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 480, x18)

inst_1428:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d31161bf0f55 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b33f2352351c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc9191b267601e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d31161bf0f55; op2val:0x3fe1b33f2352351c; op3val:0x3fdc9191b267601e; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 496, x18)

inst_1429:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d31161bf0f55 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b33f2352351c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc9191b267601e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d31161bf0f55; op2val:0x3fe1b33f2352351c; op3val:0x3fdc9191b267601e; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 512, x18)

inst_1430:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d31161bf0f55 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b33f2352351c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc9191b267601e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d31161bf0f55; op2val:0x3fe1b33f2352351c; op3val:0x3fdc9191b267601e; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 528, x18)

inst_1431:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd8c6843af9d78 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x609757b7bde27 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x45943a73f0eb8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd8c6843af9d78; op2val:0x3fe609757b7bde27; op3val:0x3fd45943a73f0eb8; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 544, x18)

inst_1432:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd8c6843af9d78 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x609757b7bde27 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x45943a73f0eb8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd8c6843af9d78; op2val:0x3fe609757b7bde27; op3val:0x3fd45943a73f0eb8; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 560, x18)

inst_1433:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd8c6843af9d78 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x609757b7bde27 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x45943a73f0eb8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd8c6843af9d78; op2val:0x3fe609757b7bde27; op3val:0x3fd45943a73f0eb8; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 576, x18)

inst_1434:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd8c6843af9d78 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x609757b7bde27 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x45943a73f0eb8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd8c6843af9d78; op2val:0x3fe609757b7bde27; op3val:0x3fd45943a73f0eb8; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 592, x18)

inst_1435:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd8c6843af9d78 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x609757b7bde27 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x45943a73f0eb8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd8c6843af9d78; op2val:0x3fe609757b7bde27; op3val:0x3fd45943a73f0eb8; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 608, x18)

inst_1436:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x14a8cc9051ae8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x159fce3299375 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2c075905b92d5 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd14a8cc9051ae8; op2val:0x400159fce3299375; op3val:0x3fe2c075905b92d5; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 624, x18)

inst_1437:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x14a8cc9051ae8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x159fce3299375 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2c075905b92d5 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd14a8cc9051ae8; op2val:0x400159fce3299375; op3val:0x3fe2c075905b92d5; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 640, x18)

inst_1438:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x14a8cc9051ae8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x159fce3299375 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2c075905b92d5 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd14a8cc9051ae8; op2val:0x400159fce3299375; op3val:0x3fe2c075905b92d5; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 656, x18)

inst_1439:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x14a8cc9051ae8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x159fce3299375 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2c075905b92d5 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd14a8cc9051ae8; op2val:0x400159fce3299375; op3val:0x3fe2c075905b92d5; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 672, x18)

inst_1440:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x14a8cc9051ae8 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x159fce3299375 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2c075905b92d5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd14a8cc9051ae8; op2val:0x400159fce3299375; op3val:0x3fe2c075905b92d5; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 688, x18)

inst_1441:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7460eaa0b6d32 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x16e44d796fedf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x95ad55cd48dd8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7460eaa0b6d32; op2val:0x3fd16e44d796fedf; op3val:0x3fc95ad55cd48dd8; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 704, x18)

inst_1442:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7460eaa0b6d32 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x16e44d796fedf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x95ad55cd48dd8 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7460eaa0b6d32; op2val:0x3fd16e44d796fedf; op3val:0x3fc95ad55cd48dd8; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 720, x18)

inst_1443:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7460eaa0b6d32 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x16e44d796fedf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x95ad55cd48dd8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7460eaa0b6d32; op2val:0x3fd16e44d796fedf; op3val:0x3fc95ad55cd48dd8; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 736, x18)

inst_1444:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7460eaa0b6d32 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x16e44d796fedf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x95ad55cd48dd8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7460eaa0b6d32; op2val:0x3fd16e44d796fedf; op3val:0x3fc95ad55cd48dd8; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 752, x18)
addi x16,x16,2040

inst_1445:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7460eaa0b6d32 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x16e44d796fedf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x95ad55cd48dd8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7460eaa0b6d32; op2val:0x3fd16e44d796fedf; op3val:0x3fc95ad55cd48dd8; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 768, x18)

inst_1446:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40f11fab8f2f7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x777f661296c28 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd6c0ecfa656e4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40f11fab8f2f7; op2val:0x3fd777f661296c28; op3val:0x3fcd6c0ecfa656e4; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 784, x18)

inst_1447:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40f11fab8f2f7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x777f661296c28 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd6c0ecfa656e4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40f11fab8f2f7; op2val:0x3fd777f661296c28; op3val:0x3fcd6c0ecfa656e4; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 800, x18)

inst_1448:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40f11fab8f2f7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x777f661296c28 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd6c0ecfa656e4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40f11fab8f2f7; op2val:0x3fd777f661296c28; op3val:0x3fcd6c0ecfa656e4; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 816, x18)

inst_1449:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40f11fab8f2f7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x777f661296c28 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd6c0ecfa656e4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40f11fab8f2f7; op2val:0x3fd777f661296c28; op3val:0x3fcd6c0ecfa656e4; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 832, x18)

inst_1450:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40f11fab8f2f7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x777f661296c28 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd6c0ecfa656e4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40f11fab8f2f7; op2val:0x3fd777f661296c28; op3val:0x3fcd6c0ecfa656e4; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 848, x18)

inst_1451:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f3ad58234f50 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd070fc84aa2fd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xec125843e1c54 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f3ad58234f50; op2val:0x3fdd070fc84aa2fd; op3val:0x3fcec125843e1c54; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 864, x18)

inst_1452:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f3ad58234f50 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd070fc84aa2fd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xec125843e1c54 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f3ad58234f50; op2val:0x3fdd070fc84aa2fd; op3val:0x3fcec125843e1c54; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 880, x18)

inst_1453:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f3ad58234f50 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd070fc84aa2fd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xec125843e1c54 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f3ad58234f50; op2val:0x3fdd070fc84aa2fd; op3val:0x3fcec125843e1c54; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 896, x18)

inst_1454:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f3ad58234f50 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd070fc84aa2fd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xec125843e1c54 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f3ad58234f50; op2val:0x3fdd070fc84aa2fd; op3val:0x3fcec125843e1c54; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 912, x18)

inst_1455:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f3ad58234f50 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd070fc84aa2fd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xec125843e1c54 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f3ad58234f50; op2val:0x3fdd070fc84aa2fd; op3val:0x3fcec125843e1c54; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 928, x18)

inst_1456:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffc4caf6aed99 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x596e092b29af6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x59461734ee142 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffc4caf6aed99; op2val:0x3fd596e092b29af6; op3val:0x3fd59461734ee142; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 944, x18)

inst_1457:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffc4caf6aed99 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x596e092b29af6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x59461734ee142 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffc4caf6aed99; op2val:0x3fd596e092b29af6; op3val:0x3fd59461734ee142; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 960, x18)

inst_1458:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffc4caf6aed99 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x596e092b29af6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x59461734ee142 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffc4caf6aed99; op2val:0x3fd596e092b29af6; op3val:0x3fd59461734ee142; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 976, x18)

inst_1459:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffc4caf6aed99 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x596e092b29af6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x59461734ee142 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffc4caf6aed99; op2val:0x3fd596e092b29af6; op3val:0x3fd59461734ee142; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 992, x18)

inst_1460:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffc4caf6aed99 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x596e092b29af6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x59461734ee142 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffc4caf6aed99; op2val:0x3fd596e092b29af6; op3val:0x3fd59461734ee142; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1008, x18)

inst_1461:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07a98a8f37d6f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6f1035e4b87d0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7a0cbfbda4b24 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe07a98a8f37d6f; op2val:0x3ff6f1035e4b87d0; op3val:0x3fe7a0cbfbda4b24; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1024, x18)

inst_1462:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07a98a8f37d6f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6f1035e4b87d0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7a0cbfbda4b24 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe07a98a8f37d6f; op2val:0x3ff6f1035e4b87d0; op3val:0x3fe7a0cbfbda4b24; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1040, x18)

inst_1463:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07a98a8f37d6f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6f1035e4b87d0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7a0cbfbda4b24 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe07a98a8f37d6f; op2val:0x3ff6f1035e4b87d0; op3val:0x3fe7a0cbfbda4b24; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1056, x18)

inst_1464:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07a98a8f37d6f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6f1035e4b87d0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7a0cbfbda4b24 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe07a98a8f37d6f; op2val:0x3ff6f1035e4b87d0; op3val:0x3fe7a0cbfbda4b24; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1072, x18)

inst_1465:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07a98a8f37d6f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6f1035e4b87d0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7a0cbfbda4b24 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe07a98a8f37d6f; op2val:0x3ff6f1035e4b87d0; op3val:0x3fe7a0cbfbda4b24; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1088, x18)

inst_1466:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa73d506d1a204 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb91be181b3554 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x6ca35beb5fcac and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca73d506d1a204; op2val:0x3feb91be181b3554; op3val:0x3fc6ca35beb5fcac; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1104, x18)

inst_1467:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa73d506d1a204 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb91be181b3554 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x6ca35beb5fcac and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca73d506d1a204; op2val:0x3feb91be181b3554; op3val:0x3fc6ca35beb5fcac; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1120, x18)

inst_1468:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa73d506d1a204 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb91be181b3554 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x6ca35beb5fcac and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca73d506d1a204; op2val:0x3feb91be181b3554; op3val:0x3fc6ca35beb5fcac; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1136, x18)

inst_1469:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa73d506d1a204 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb91be181b3554 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x6ca35beb5fcac and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca73d506d1a204; op2val:0x3feb91be181b3554; op3val:0x3fc6ca35beb5fcac; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1152, x18)

inst_1470:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e3a41309a3d1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb292f6ebd7683 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcab9e46280b2f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e3a41309a3d1; op2val:0x3ffb292f6ebd7683; op3val:0x3fecab9e46280b2f; valaddr_reg:x16; val_offset:600; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 600, x17, x15, 1168, x18)

inst_1471:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e3a41309a3d1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb292f6ebd7683 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcab9e46280b2f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e3a41309a3d1; op2val:0x3ffb292f6ebd7683; op3val:0x3fecab9e46280b2f; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1184, x18)

inst_1472:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e3a41309a3d1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb292f6ebd7683 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcab9e46280b2f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e3a41309a3d1; op2val:0x3ffb292f6ebd7683; op3val:0x3fecab9e46280b2f; valaddr_reg:x16; val_offset:648; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 648, x17, x15, 1200, x18)

inst_1473:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e3a41309a3d1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb292f6ebd7683 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcab9e46280b2f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e3a41309a3d1; op2val:0x3ffb292f6ebd7683; op3val:0x3fecab9e46280b2f; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1216, x18)

inst_1474:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e269ed73198 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2e718544a6a4f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa472e92af06e8 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe63e269ed73198; op2val:0x3fe2e718544a6a4f; op3val:0x3fda472e92af06e8; valaddr_reg:x16; val_offset:696; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 696, x17, x15, 1232, x18)

inst_1475:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e269ed73198 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2e718544a6a4f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa472e92af06e8 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe63e269ed73198; op2val:0x3fe2e718544a6a4f; op3val:0x3fda472e92af06e8; valaddr_reg:x16; val_offset:720; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 720, x17, x15, 1248, x18)

inst_1476:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e269ed73198 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2e718544a6a4f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa472e92af06e8 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe63e269ed73198; op2val:0x3fe2e718544a6a4f; op3val:0x3fda472e92af06e8; valaddr_reg:x16; val_offset:744; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 744, x17, x15, 1264, x18)

inst_1477:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63e269ed73198 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2e718544a6a4f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa472e92af06e8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe63e269ed73198; op2val:0x3fe2e718544a6a4f; op3val:0x3fda472e92af06e8; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1280, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x3fca73d506d1a204
.dword 0x3feb91be181b3554
.dword 0x3fc6ca35beb5fcac
.dword 0x3fe0e3a41309a3d1
.dword 0x3fe0e3a41309a3d1
.dword 0x3fe0e3a41309a3d1
.dword 0x3fe0e3a41309a3d1
.dword 0x3ffb292f6ebd7683
.dword 0x3fe0e3a41309a3d1
.dword 0x3fe0e3a41309a3d1
.dword 0x3ffb292f6ebd7683
.dword 0x3fe0e3a41309a3d1
.dword 0x3fe0e3a41309a3d1
.dword 0x3ffb292f6ebd7683
.dword 0x3fecab9e46280b2f
.dword 0x3fe0e3a41309a3d1
.dword 0x3ffb292f6ebd7683
.dword 0x3ffb292f6ebd7683
.dword 0x3fe63e269ed73198
.dword 0x3fe63e269ed73198
.dword 0x3fda472e92af06e8
.dword 0x3fe63e269ed73198
.dword 0x3fe2e718544a6a4f
.dword 0x3fda472e92af06e8
.dword 0x3fe63e269ed73198
.dword 0x3fe63e269ed73198
.dword 0x3fda472e92af06e8
.dword 0x3fe63e269ed73198
.dword 0x3fe63e269ed73198
.dword 0x3fe63e269ed73198
.dword 0x3fe63e269ed73198
.dword 0x3fe2e718544a6a4f
.dword 0x3fe2e718544a6a4f
.dword 0x3fe2d7149d717096
.dword 0x3fe6565156fc5e51
.dword 0x3fda4d602e8fd2fc
.dword 0x3fe2d7149d717096
.dword 0x3fe6565156fc5e51
.dword 0x3fda4d602e8fd2fc
.dword 0x3fe2d7149d717096
.dword 0x3fe6565156fc5e51
.dword 0x3fda4d602e8fd2fc
.dword 0x3fe2d7149d717096
.dword 0x3fe6565156fc5e51
.dword 0x3fda4d602e8fd2fc
.dword 0x3fe2d7149d717096
.dword 0x3fe6565156fc5e51
.dword 0x3fda4d602e8fd2fc
.dword 0x3fe414b779aa5cdd
.dword 0x3fc361ae363eb33a
.dword 0x3fb853321e2bcea8
.dword 0x3fe414b779aa5cdd
.dword 0x3fc361ae363eb33a
.dword 0x3fb853321e2bcea8
.dword 0x3fe414b779aa5cdd
.dword 0x3fc361ae363eb33a
.dword 0x3fb853321e2bcea8
.dword 0x3fe414b779aa5cdd
.dword 0x3fc361ae363eb33a
.dword 0x3fb853321e2bcea8
.dword 0x3fe414b779aa5cdd
.dword 0x3fc361ae363eb33a
.dword 0x3fb853321e2bcea8
.dword 0x3fe475ada5e6e7a2
.dword 0x3fdcc2293c66a361
.dword 0x3fd2631bbb4c9440
.dword 0x3fe475ada5e6e7a2
.dword 0x3fdcc2293c66a361
.dword 0x3fd2631bbb4c9440
.dword 0x3fe475ada5e6e7a2
.dword 0x3fdcc2293c66a361
.dword 0x3fd2631bbb4c9440
.dword 0x3fe475ada5e6e7a2
.dword 0x3fdcc2293c66a361
.dword 0x3fd2631bbb4c9440
.dword 0x3fe475ada5e6e7a2
.dword 0x3fdcc2293c66a361
.dword 0x3fd2631bbb4c9440
.dword 0x3fb725ecb20be3d8
.dword 0x401b92d6784a83ba
.dword 0x3fe3f237e2c963c6
.dword 0x3fb725ecb20be3d8
.dword 0x401b92d6784a83ba
.dword 0x3fe3f237e2c963c6
.dword 0x3fb725ecb20be3d8
.dword 0x401b92d6784a83ba
.dword 0x3fe3f237e2c963c6
.dword 0x3fb725ecb20be3d8
.dword 0x401b92d6784a83ba
.dword 0x3fe3f237e2c963c6
.dword 0x3fb725ecb20be3d8
.dword 0x401b92d6784a83ba
.dword 0x3fe3f237e2c963c6
.dword 0x3fe0084b356b6583
.dword 0x3ff7da384554ea59
.dword 0x3fe7e69580024edf
.dword 0x3fe0084b356b6583
.dword 0x3ff7da384554ea59
.dword 0x3fe7e69580024edf
.dword 0x3fe0084b356b6583
.dword 0x3ff7da384554ea59
.dword 0x3fe7e69580024edf
.dword 0x3fe0084b356b6583
.dword 0x3ff7da384554ea59
.dword 0x3fe7e69580024edf
.dword 0x3fe0084b356b6583
.dword 0x3ff7da384554ea59
.dword 0x3fe7e69580024edf
.dword 0x3fb8db1435eb6450
.dword 0x401a3432a1fcbbc6
.dword 0x3fe45a8bc0c9010c
.dword 0x3fb8db1435eb6450
.dword 0x401a3432a1fcbbc6
.dword 0x3fe45a8bc0c9010c
.dword 0x3fb8db1435eb6450
.dword 0x401a3432a1fcbbc6
.dword 0x3fe45a8bc0c9010c
.dword 0x3fb8db1435eb6450
.dword 0x401a3432a1fcbbc6
.dword 0x3fe45a8bc0c9010c
.dword 0x3fb8db1435eb6450
.dword 0x401a3432a1fcbbc6
.dword 0x3fe45a8bc0c9010c
.dword 0x3fec2d2b5053b5c6
.dword 0x3fd9dcfb84c11eb6
.dword 0x3fd6c5ddd7b9c1b8
.dword 0x3fec2d2b5053b5c6
.dword 0x3fd9dcfb84c11eb6
.dword 0x3fd6c5ddd7b9c1b8
.dword 0x3fec2d2b5053b5c6
.dword 0x3fd9dcfb84c11eb6
.dword 0x3fd6c5ddd7b9c1b8
.dword 0x3fec2d2b5053b5c6
.dword 0x3fd9dcfb84c11eb6
.dword 0x3fd6c5ddd7b9c1b8
.dword 0x3fec2d2b5053b5c6
.dword 0x3fd9dcfb84c11eb6
.dword 0x3fd6c5ddd7b9c1b8
.dword 0x3fe34f6e5011964f
.dword 0x3fe66e23421677c8
.dword 0x3fdb12245202bb8e
.dword 0x3fe34f6e5011964f
.dword 0x3fe66e23421677c8
.dword 0x3fdb12245202bb8e
.dword 0x3fe34f6e5011964f
.dword 0x3fe66e23421677c8
.dword 0x3fdb12245202bb8e
.dword 0x3fe34f6e5011964f
.dword 0x3fe66e23421677c8
.dword 0x3fdb12245202bb8e
.dword 0x3fe34f6e5011964f
.dword 0x3fe66e23421677c8
.dword 0x3fdb12245202bb8e
.dword 0x3fd0d35fafc88834
.dword 0x40020c696cc00970
.dword 0x3fe2fad90b061980
.dword 0x3fd0d35fafc88834
.dword 0x40020c696cc00970
.dword 0x3fe2fad90b061980
.dword 0x3fd0d35fafc88834
.dword 0x40020c696cc00970
.dword 0x3fe2fad90b061980
.dword 0x3fd0d35fafc88834
.dword 0x40020c696cc00970
.dword 0x3fe2fad90b061980
.dword 0x3fd0d35fafc88834
.dword 0x40020c696cc00970
.dword 0x3fe2fad90b061980
.dword 0x3fe9d5f151b8d426
.dword 0x3fbbb28a2b2bcee8
.dword 0x3fb65ca938c61258
.dword 0x3fe9d5f151b8d426
.dword 0x3fbbb28a2b2bcee8
.dword 0x3fb65ca938c61258
.dword 0x3fe9d5f151b8d426
.dword 0x3fbbb28a2b2bcee8
.dword 0x3fb65ca938c61258
.dword 0x3fe9d5f151b8d426
.dword 0x3fbbb28a2b2bcee8
.dword 0x3fb65ca938c61258
.dword 0x3fe9d5f151b8d426
.dword 0x3fbbb28a2b2bcee8
.dword 0x3fb65ca938c61258
.dword 0x3fda174a114b9ec4
.dword 0x3fefb40ce08049fb
.dword 0x3fd9d95d4129f19a
.dword 0x3fda174a114b9ec4
.dword 0x3fefb40ce08049fb
.dword 0x3fd9d95d4129f19a
.dword 0x3fda174a114b9ec4
.dword 0x3fefb40ce08049fb
.dword 0x3fd9d95d4129f19a
.dword 0x3fda174a114b9ec4
.dword 0x3fefb40ce08049fb
.dword 0x3fd9d95d4129f19a
.dword 0x3fda174a114b9ec4
.dword 0x3fefb40ce08049fb
.dword 0x3fd9d95d4129f19a
.dword 0x3fdbe810b9d74f6a
.dword 0x3fe9ddbe487c391e
.dword 0x3fd68eadb5cd7728
.dword 0x3fdbe810b9d74f6a
.dword 0x3fe9ddbe487c391e
.dword 0x3fd68eadb5cd7728
.dword 0x3fdbe810b9d74f6a
.dword 0x3fe9ddbe487c391e
.dword 0x3fd68eadb5cd7728
.dword 0x3fdbe810b9d74f6a
.dword 0x3fe9ddbe487c391e
.dword 0x3fd68eadb5cd7728
.dword 0x3fdbe810b9d74f6a
.dword 0x3fe9ddbe487c391e
.dword 0x3fd68eadb5cd7728
.dword 0x3fe8de6f81a66055
.dword 0x3feab321be03e5e0
.dword 0x3fe4bff112232436
.dword 0x3fe8de6f81a66055
.dword 0x3feab321be03e5e0
.dword 0x3fe4bff112232436
.dword 0x3fe8de6f81a66055
.dword 0x3feab321be03e5e0
.dword 0x3fe4bff112232436
.dword 0x3fe8de6f81a66055
.dword 0x3feab321be03e5e0
.dword 0x3fe4bff112232436
.dword 0x3fe8de6f81a66055
.dword 0x3feab321be03e5e0
.dword 0x3fe4bff112232436
.dword 0x3fd52aede96c55d4
.dword 0x4004d1a62e846eed
.dword 0x3feb8b06026f7918
.dword 0x3fd52aede96c55d4
.dword 0x4004d1a62e846eed
.dword 0x3feb8b06026f7918
.dword 0x3fd52aede96c55d4
.dword 0x4004d1a62e846eed
.dword 0x3feb8b06026f7918
.dword 0x3fd52aede96c55d4
.dword 0x4004d1a62e846eed
.dword 0x3feb8b06026f7918
.dword 0x3fd52aede96c55d4
.dword 0x4004d1a62e846eed
.dword 0x3feb8b06026f7918
.dword 0x3fea533c45df4e40
.dword 0x3ff14074223c3412
.dword 0x3fec627c0f1da8d3
.dword 0x3fea533c45df4e40
.dword 0x3ff14074223c3412
.dword 0x3fec627c0f1da8d3
.dword 0x3fea533c45df4e40
.dword 0x3ff14074223c3412
.dword 0x3fec627c0f1da8d3
.dword 0x3fea533c45df4e40
.dword 0x3ff14074223c3412
.dword 0x3fec627c0f1da8d3
.dword 0x3fea533c45df4e40
.dword 0x3ff14074223c3412
.dword 0x3fec627c0f1da8d3
.dword 0x3fd8a9a2445e183a
.dword 0x4000c177cdef7182
.dword 0x3fe9d3d924cc27a5
.dword 0x3fd8a9a2445e183a
.dword 0x4000c177cdef7182
.dword 0x3fe9d3d924cc27a5
.dword 0x3fd8a9a2445e183a
.dword 0x4000c177cdef7182
.dword 0x3fe9d3d924cc27a5
.dword 0x3fd8a9a2445e183a
.dword 0x4000c177cdef7182
.dword 0x3fe9d3d924cc27a5
.dword 0x3fd8a9a2445e183a
.dword 0x4000c177cdef7182
.dword 0x3fe9d3d924cc27a5
.dword 0x3fe063ea9231d3f5
.dword 0x3ff526cd83c3d305
.dword 0x3fe5aae3b424b81a
.dword 0x3fe063ea9231d3f5
.dword 0x3ff526cd83c3d305
.dword 0x3fe5aae3b424b81a
.dword 0x3fe063ea9231d3f5
.dword 0x3ff526cd83c3d305
.dword 0x3fe5aae3b424b81a
.dword 0x3fe063ea9231d3f5
.dword 0x3ff526cd83c3d305
.dword 0x3fe5aae3b424b81a
.dword 0x3fe063ea9231d3f5
.dword 0x3ff526cd83c3d305
.dword 0x3fe5aae3b424b81a
.dword 0x3fd38e3564325f64
.dword 0x3ff4516c3ae1ff79
.dword 0x3fd8d546f36a542c
.dword 0x3fd38e3564325f64
.dword 0x3ff4516c3ae1ff79
.dword 0x3fd8d546f36a542c
.dword 0x3fd38e3564325f64
.dword 0x3ff4516c3ae1ff79
.dword 0x3fd8d546f36a542c
.dword 0x3fd38e3564325f64
.dword 0x3ff4516c3ae1ff79
.dword 0x3fd8d546f36a542c
.dword 0x3fd38e3564325f64
.dword 0x3ff4516c3ae1ff79
.dword 0x3fd8d546f36a542c
.dword 0x3fe586ea1c6e30fb
.dword 0x3feb98985e75f4fd
.dword 0x3fe2907ce067b592
.dword 0x3fe586ea1c6e30fb
.dword 0x3feb98985e75f4fd
.dword 0x3fe2907ce067b592
.dword 0x3fe586ea1c6e30fb
.dword 0x3feb98985e75f4fd
.dword 0x3fe2907ce067b592
.dword 0x3fe586ea1c6e30fb
.dword 0x3feb98985e75f4fd
.dword 0x3fe2907ce067b592
.dword 0x3fe586ea1c6e30fb
.dword 0x3feb98985e75f4fd
.dword 0x3fe2907ce067b592
.dword 0x3fef3d53f4d3c995
.dword 0x3fe9a5dd26d34fa2
.dword 0x3fe909d5b59eca2c
.dword 0x3fef3d53f4d3c995
.dword 0x3fe9a5dd26d34fa2
.dword 0x3fe909d5b59eca2c
.dword 0x3fef3d53f4d3c995
.dword 0x3fe9a5dd26d34fa2
.dword 0x3fe909d5b59eca2c
.dword 0x3fef3d53f4d3c995
.dword 0x3fe9a5dd26d34fa2
.dword 0x3fe909d5b59eca2c
.dword 0x3fef3d53f4d3c995
.dword 0x3fe9a5dd26d34fa2
.dword 0x3fe909d5b59eca2c
.dword 0x3febaeb31b628abb
.dword 0x3ff0aaea87f19c76
.dword 0x3fecd6691094ff93
.dword 0x3febaeb31b628abb
.dword 0x3ff0aaea87f19c76
.dword 0x3fecd6691094ff93
.dword 0x3febaeb31b628abb
.dword 0x3ff0aaea87f19c76
.dword 0x3fecd6691094ff93
.dword 0x3febaeb31b628abb
.dword 0x3ff0aaea87f19c76
.dword 0x3fecd6691094ff93
.dword 0x3febaeb31b628abb
.dword 0x3ff0aaea87f19c76
.dword 0x3fecd6691094ff93
.dword 0x3fe72dc474f1a36b
.dword 0x3ff236788e996ded
.dword 0x3fea6266207068e8
.dword 0x3fe72dc474f1a36b
.dword 0x3ff236788e996ded
.dword 0x3fea6266207068e8
.dword 0x3fe72dc474f1a36b
.dword 0x3ff236788e996ded
.dword 0x3fea6266207068e8
.dword 0x3fe72dc474f1a36b
.dword 0x3ff236788e996ded
.dword 0x3fea6266207068e8
.dword 0x3fe72dc474f1a36b
.dword 0x3ff236788e996ded
.dword 0x3fea6266207068e8
.dword 0x3fe05be08f26408d
.dword 0x3ffd1d7173263cb0
.dword 0x3fedc4a189163399
.dword 0x3fe05be08f26408d
.dword 0x3ffd1d7173263cb0
.dword 0x3fedc4a189163399
.dword 0x3fe05be08f26408d
.dword 0x3ffd1d7173263cb0
.dword 0x3fedc4a189163399
.dword 0x3fe05be08f26408d
.dword 0x3ffd1d7173263cb0
.dword 0x3fedc4a189163399
.dword 0x3fe05be08f26408d
.dword 0x3ffd1d7173263cb0
.dword 0x3fedc4a189163399
.dword 0x3fec338003e04edb
.dword 0x3fe5d5f08a852bff
.dword 0x3fe33e56caf892c2
.dword 0x3fec338003e04edb
.dword 0x3fe5d5f08a852bff
.dword 0x3fe33e56caf892c2
.dword 0x3fec338003e04edb
.dword 0x3fe5d5f08a852bff
.dword 0x3fe33e56caf892c2
.dword 0x3fec338003e04edb
.dword 0x3fe5d5f08a852bff
.dword 0x3fe33e56caf892c2
.dword 0x3fec338003e04edb
.dword 0x3fe5d5f08a852bff
.dword 0x3fe33e56caf892c2
.dword 0x3fca67c9d09ff3c8
.dword 0x4010c42c021d53ac
.dword 0x3febab89d9c3f858
.dword 0x3fca67c9d09ff3c8
.dword 0x4010c42c021d53ac
.dword 0x3febab89d9c3f858
.dword 0x3fca67c9d09ff3c8
.dword 0x4010c42c021d53ac
.dword 0x3febab89d9c3f858
.dword 0x3fca67c9d09ff3c8
.dword 0x4010c42c021d53ac
.dword 0x3febab89d9c3f858
.dword 0x3fca67c9d09ff3c8
.dword 0x4010c42c021d53ac
.dword 0x3febab89d9c3f858
.dword 0x3fb954b43f9b9e68
.dword 0x40220b0d1d765829
.dword 0x3fec90c9c6f223d8
.dword 0x3fb954b43f9b9e68
.dword 0x40220b0d1d765829
.dword 0x3fec90c9c6f223d8
.dword 0x3fb954b43f9b9e68
.dword 0x40220b0d1d765829
.dword 0x3fec90c9c6f223d8
.dword 0x3fb954b43f9b9e68
.dword 0x40220b0d1d765829
.dword 0x3fec90c9c6f223d8
.dword 0x3fb954b43f9b9e68
.dword 0x40220b0d1d765829
.dword 0x3fec90c9c6f223d8
.dword 0x3fd6f8428ac99be4
.dword 0x3fd848273750ba06
.dword 0x3fc16dfca415383c
.dword 0x3fd6f8428ac99be4
.dword 0x3fd848273750ba06
.dword 0x3fc16dfca415383c
.dword 0x3fd6f8428ac99be4
.dword 0x3fd848273750ba06
.dword 0x3fc16dfca415383c
.dword 0x3fd6f8428ac99be4
.dword 0x3fd848273750ba06
.dword 0x3fc16dfca415383c
.dword 0x3fd6f8428ac99be4
.dword 0x3fd848273750ba06
.dword 0x3fc16dfca415383c
.dword 0x3feb17a4ef1f15ce
.dword 0x3fd0581fe4addef5
.dword 0x3fcbacdcfb492790
.dword 0x3feb17a4ef1f15ce
.dword 0x3fd0581fe4addef5
.dword 0x3fcbacdcfb492790
.dword 0x3feb17a4ef1f15ce
.dword 0x3fd0581fe4addef5
.dword 0x3fcbacdcfb492790
.dword 0x3feb17a4ef1f15ce
.dword 0x3fd0581fe4addef5
.dword 0x3fcbacdcfb492790
.dword 0x3feb17a4ef1f15ce
.dword 0x3fd0581fe4addef5
.dword 0x3fcbacdcfb492790
.dword 0x3fdf043b0baa0bfe
.dword 0x3fd0df416b4ece61
.dword 0x3fc05a8269e8c67c
.dword 0x3fdf043b0baa0bfe
.dword 0x3fd0df416b4ece61
.dword 0x3fc05a8269e8c67c
.dword 0x3fdf043b0baa0bfe
.dword 0x3fd0df416b4ece61
.dword 0x3fc05a8269e8c67c
.dword 0x3fdf043b0baa0bfe
.dword 0x3fd0df416b4ece61
.dword 0x3fc05a8269e8c67c
.dword 0x3fdf043b0baa0bfe
.dword 0x3fd0df416b4ece61
.dword 0x3fc05a8269e8c67c
.dword 0x3fef84af44508b85
.dword 0x3feed603a2c4b68e
.dword 0x3fee5f2f38e643a3
.dword 0x3fef84af44508b85
.dword 0x3feed603a2c4b68e
.dword 0x3fee5f2f38e643a3
.dword 0x3fef84af44508b85
.dword 0x3feed603a2c4b68e
.dword 0x3fee5f2f38e643a3
.dword 0x3fef84af44508b85
.dword 0x3feed603a2c4b68e
.dword 0x3fee5f2f38e643a3
.dword 0x3fef84af44508b85
.dword 0x3feed603a2c4b68e
.dword 0x3fee5f2f38e643a3
.dword 0x3fbb3015f61331b8
.dword 0x401c9bbc395d47d3
.dword 0x3fe84e640ceea60f
.dword 0x3fbb3015f61331b8
.dword 0x401c9bbc395d47d3
.dword 0x3fe84e640ceea60f
.dword 0x3fbb3015f61331b8
.dword 0x401c9bbc395d47d3
.dword 0x3fe84e640ceea60f
.dword 0x3fbb3015f61331b8
.dword 0x401c9bbc395d47d3
.dword 0x3fe84e640ceea60f
.dword 0x3fbb3015f61331b8
.dword 0x401c9bbc395d47d3
.dword 0x3fe84e640ceea60f
.dword 0x3fe0244f8a366e40
.dword 0x3fe154672f569e38
.dword 0x3fd17bbb3df18916
.dword 0x3fe0244f8a366e40
.dword 0x3fe154672f569e38
.dword 0x3fd17bbb3df18916
.dword 0x3fe0244f8a366e40
.dword 0x3fe154672f569e38
.dword 0x3fd17bbb3df18916
.dword 0x3fe0244f8a366e40
.dword 0x3fe154672f569e38
.dword 0x3fd17bbb3df18916
.dword 0x3fe0244f8a366e40
.dword 0x3fe154672f569e38
.dword 0x3fd17bbb3df18916
.dword 0x3fd097594f14cd9c
.dword 0x400620e618e1177e
.dword 0x3fe6f23818cb03c8
.dword 0x3fd097594f14cd9c
.dword 0x400620e618e1177e
.dword 0x3fe6f23818cb03c8
.dword 0x3fd097594f14cd9c
.dword 0x400620e618e1177e
.dword 0x3fe6f23818cb03c8
.dword 0x3fd097594f14cd9c
.dword 0x400620e618e1177e
.dword 0x3fe6f23818cb03c8
.dword 0x3fd097594f14cd9c
.dword 0x400620e618e1177e
.dword 0x3fe6f23818cb03c8
.dword 0x3fc2daa2a2acbe34
.dword 0x3ffeb492c92904fe
.dword 0x3fd2175cc7607cd2
.dword 0x3fc2daa2a2acbe34
.dword 0x3ffeb492c92904fe
.dword 0x3fd2175cc7607cd2
.dword 0x3fc2daa2a2acbe34
.dword 0x3ffeb492c92904fe
.dword 0x3fd2175cc7607cd2
.dword 0x3fc2daa2a2acbe34
.dword 0x3ffeb492c92904fe
.dword 0x3fd2175cc7607cd2
.dword 0x3fc2daa2a2acbe34
.dword 0x3ffeb492c92904fe
.dword 0x3fd2175cc7607cd2
.dword 0x3fe392a09262d18e
.dword 0x3fe54846121f9fbd
.dword 0x3fda08dc4a5e944e
.dword 0x3fe392a09262d18e
.dword 0x3fe54846121f9fbd
.dword 0x3fda08dc4a5e944e
.dword 0x3fe392a09262d18e
.dword 0x3fe54846121f9fbd
.dword 0x3fda08dc4a5e944e
.dword 0x3fe392a09262d18e
.dword 0x3fe54846121f9fbd
.dword 0x3fda08dc4a5e944e
.dword 0x3fe392a09262d18e
.dword 0x3fe54846121f9fbd
.dword 0x3fda08dc4a5e944e
.dword 0x3fe77d81e523ec79
.dword 0x3fee1ccde7bb6b01
.dword 0x3fe61acebe9de6b8
.dword 0x3fe77d81e523ec79
.dword 0x3fee1ccde7bb6b01
.dword 0x3fe61acebe9de6b8
.dword 0x3fe77d81e523ec79
.dword 0x3fee1ccde7bb6b01
.dword 0x3fe61acebe9de6b8
.dword 0x3fe77d81e523ec79
.dword 0x3fee1ccde7bb6b01
.dword 0x3fe61acebe9de6b8
.dword 0x3fe77d81e523ec79
.dword 0x3fee1ccde7bb6b01
.dword 0x3fe61acebe9de6b8
.dword 0x3fe79417de97ea95
.dword 0x3ff5b04e5384195b
.dword 0x3feff62fc7bf2f12
.dword 0x3fe79417de97ea95
.dword 0x3ff5b04e5384195b
.dword 0x3feff62fc7bf2f12
.dword 0x3fe79417de97ea95
.dword 0x3ff5b04e5384195b
.dword 0x3feff62fc7bf2f12
.dword 0x3fe79417de97ea95
.dword 0x3ff5b04e5384195b
.dword 0x3feff62fc7bf2f12
.dword 0x3fe79417de97ea95
.dword 0x3ff5b04e5384195b
.dword 0x3feff62fc7bf2f12
.dword 0x3fddd942bf467a1e
.dword 0x3ffc3fb83d5b5d53
.dword 0x3fea5989fd41698f
.dword 0x3fddd942bf467a1e
.dword 0x3ffc3fb83d5b5d53
.dword 0x3fea5989fd41698f
.dword 0x3fddd942bf467a1e
.dword 0x3ffc3fb83d5b5d53
.dword 0x3fea5989fd41698f
.dword 0x3fddd942bf467a1e
.dword 0x3ffc3fb83d5b5d53
.dword 0x3fea5989fd41698f
.dword 0x3fddd942bf467a1e
.dword 0x3ffc3fb83d5b5d53
.dword 0x3fea5989fd41698f
.dword 0x3fec6c2a0bc1c69a
.dword 0x3fe439ccfefef77e
.dword 0x3fe1f6f106471c5b
.dword 0x3fec6c2a0bc1c69a
.dword 0x3fe439ccfefef77e
.dword 0x3fe1f6f106471c5b
.dword 0x3fec6c2a0bc1c69a
.dword 0x3fe439ccfefef77e
.dword 0x3fe1f6f106471c5b
.dword 0x3fec6c2a0bc1c69a
.dword 0x3fe439ccfefef77e
.dword 0x3fe1f6f106471c5b
.dword 0x3fec6c2a0bc1c69a
.dword 0x3fe439ccfefef77e
.dword 0x3fe1f6f106471c5b
.dword 0x3fdf817ff78a6296
.dword 0x3ffdf65ee0519153
.dword 0x3fed7fece95716fa
.dword 0x3fdf817ff78a6296
.dword 0x3ffdf65ee0519153
.dword 0x3fed7fece95716fa
.dword 0x3fdf817ff78a6296
.dword 0x3ffdf65ee0519153
.dword 0x3fed7fece95716fa
.dword 0x3fdf817ff78a6296
.dword 0x3ffdf65ee0519153
.dword 0x3fed7fece95716fa
.dword 0x3fdf817ff78a6296
.dword 0x3ffdf65ee0519153
.dword 0x3fed7fece95716fa
.dword 0x3fe5d0c95cbaf8c5
.dword 0x3fdf9cca3ea55126
.dword 0x3fd58d26c82583dc
.dword 0x3fe5d0c95cbaf8c5
.dword 0x3fdf9cca3ea55126
.dword 0x3fd58d26c82583dc
.dword 0x3fe5d0c95cbaf8c5
.dword 0x3fdf9cca3ea55126
.dword 0x3fd58d26c82583dc
.dword 0x3fe5d0c95cbaf8c5
.dword 0x3fdf9cca3ea55126
.dword 0x3fd58d26c82583dc
.dword 0x3fe5d0c95cbaf8c5
.dword 0x3fdf9cca3ea55126
.dword 0x3fd58d26c82583dc
.dword 0x3fe71dace7c18228
.dword 0x3fdf083514df46ab
.dword 0x3fd66aad43f79c3a
.dword 0x3fe71dace7c18228
.dword 0x3fdf083514df46ab
.dword 0x3fd66aad43f79c3a
.dword 0x3fe71dace7c18228
.dword 0x3fdf083514df46ab
.dword 0x3fd66aad43f79c3a
.dword 0x3fe71dace7c18228
.dword 0x3fdf083514df46ab
.dword 0x3fd66aad43f79c3a
.dword 0x3fe71dace7c18228
.dword 0x3fdf083514df46ab
.dword 0x3fd66aad43f79c3a
.dword 0x3fba969c6b6f5848
.dword 0x402020dc59b54699
.dword 0x3feacd37d03fff64
.dword 0x3fba969c6b6f5848
.dword 0x402020dc59b54699
.dword 0x3feacd37d03fff64
.dword 0x3fba969c6b6f5848
.dword 0x402020dc59b54699
.dword 0x3feacd37d03fff64
.dword 0x3fba969c6b6f5848
.dword 0x402020dc59b54699
.dword 0x3feacd37d03fff64
.dword 0x3fba969c6b6f5848
.dword 0x402020dc59b54699
.dword 0x3feacd37d03fff64
.dword 0x3f7c04b6784e7e00
.dword 0x4050a056aef1100b
.dword 0x3fdd1d7d64afb902
.dword 0x3f7c04b6784e7e00
.dword 0x4050a056aef1100b
.dword 0x3fdd1d7d64afb902
.dword 0x3f7c04b6784e7e00
.dword 0x4050a056aef1100b
.dword 0x3fdd1d7d64afb902
.dword 0x3f7c04b6784e7e00
.dword 0x4050a056aef1100b
.dword 0x3fdd1d7d64afb902
.dword 0x3f7c04b6784e7e00
.dword 0x4050a056aef1100b
.dword 0x3fdd1d7d64afb902
.dword 0x3fe25d7941010993
.dword 0x3ff189a353af736a
.dword 0x3fe4214cab9f4122
.dword 0x3fe25d7941010993
.dword 0x3ff189a353af736a
.dword 0x3fe4214cab9f4122
.dword 0x3fe25d7941010993
.dword 0x3ff189a353af736a
.dword 0x3fe4214cab9f4122
.dword 0x3fe25d7941010993
.dword 0x3ff189a353af736a
.dword 0x3fe4214cab9f4122
.dword 0x3fe25d7941010993
.dword 0x3ff189a353af736a
.dword 0x3fe4214cab9f4122
.dword 0x3f9e7c6951c796c0
.dword 0x40377d1c840f63bc
.dword 0x3fe6609cd8daeb54
.dword 0x3f9e7c6951c796c0
.dword 0x40377d1c840f63bc
.dword 0x3fe6609cd8daeb54
.dword 0x3f9e7c6951c796c0
.dword 0x40377d1c840f63bc
.dword 0x3fe6609cd8daeb54
.dword 0x3f9e7c6951c796c0
.dword 0x40377d1c840f63bc
.dword 0x3fe6609cd8daeb54
.dword 0x3f9e7c6951c796c0
.dword 0x40377d1c840f63bc
.dword 0x3fe6609cd8daeb54
.dword 0x3fe7ecd48dea67bc
.dword 0x3fef6e55860bfda0
.dword 0x3fe77febf5703455
.dword 0x3fe7ecd48dea67bc
.dword 0x3fef6e55860bfda0
.dword 0x3fe77febf5703455
.dword 0x3fe7ecd48dea67bc
.dword 0x3fef6e55860bfda0
.dword 0x3fe77febf5703455
.dword 0x3fe7ecd48dea67bc
.dword 0x3fef6e55860bfda0
.dword 0x3fe77febf5703455
.dword 0x3fe7ecd48dea67bc
.dword 0x3fef6e55860bfda0
.dword 0x3fe77febf5703455
.dword 0x3fd6c8cd4bf85f98
.dword 0x3fdd4f0a5b7cc5f8
.dword 0x3fc4de412790aa6c
.dword 0x3fd6c8cd4bf85f98
.dword 0x3fdd4f0a5b7cc5f8
.dword 0x3fc4de412790aa6c
.dword 0x3fd6c8cd4bf85f98
.dword 0x3fdd4f0a5b7cc5f8
.dword 0x3fc4de412790aa6c
.dword 0x3fd6c8cd4bf85f98
.dword 0x3fdd4f0a5b7cc5f8
.dword 0x3fc4de412790aa6c
.dword 0x3fd6c8cd4bf85f98
.dword 0x3fdd4f0a5b7cc5f8
.dword 0x3fc4de412790aa6c
.dword 0x3f9c76b2f8c7f200
.dword 0x40329e88495ff83a
.dword 0x3fe08fc7f9599a23
.dword 0x3f9c76b2f8c7f200
.dword 0x40329e88495ff83a
.dword 0x3fe08fc7f9599a23
.dword 0x3f9c76b2f8c7f200
.dword 0x40329e88495ff83a
.dword 0x3fe08fc7f9599a23
.dword 0x3f9c76b2f8c7f200
.dword 0x40329e88495ff83a
.dword 0x3fe08fc7f9599a23
.dword 0x3f9c76b2f8c7f200
.dword 0x40329e88495ff83a
.dword 0x3fe08fc7f9599a23
.dword 0x3fe7624ee71fde98
.dword 0x3fdfb0bece076f3b
.dword 0x3fd728649020d5f2
.dword 0x3fe7624ee71fde98
.dword 0x3fdfb0bece076f3b
.dword 0x3fd728649020d5f2
.dword 0x3fe7624ee71fde98
.dword 0x3fdfb0bece076f3b
.dword 0x3fd728649020d5f2
.dword 0x3fe7624ee71fde98
.dword 0x3fdfb0bece076f3b
.dword 0x3fd728649020d5f2
.dword 0x3fe7624ee71fde98
.dword 0x3fdfb0bece076f3b
.dword 0x3fd728649020d5f2
.dword 0x3fd862db765ea056
.dword 0x3ff06b92ef147ff9
.dword 0x3fd906d0847cbe1c
.dword 0x3fd862db765ea056
.dword 0x3ff06b92ef147ff9
.dword 0x3fd906d0847cbe1c
.dword 0x3fd862db765ea056
.dword 0x3ff06b92ef147ff9
.dword 0x3fd906d0847cbe1c
.dword 0x3fd862db765ea056
.dword 0x3ff06b92ef147ff9
.dword 0x3fd906d0847cbe1c
.dword 0x3fd862db765ea056
.dword 0x3ff06b92ef147ff9
.dword 0x3fd906d0847cbe1c
.dword 0x3fe23dfd77c83f6f
.dword 0x3fe7522c92a43ba1
.dword 0x3fda96cce0dfaf22
.dword 0x3fe23dfd77c83f6f
.dword 0x3fe7522c92a43ba1
.dword 0x3fda96cce0dfaf22
.dword 0x3fe23dfd77c83f6f
.dword 0x3fe7522c92a43ba1
.dword 0x3fda96cce0dfaf22
.dword 0x3fe23dfd77c83f6f
.dword 0x3fe7522c92a43ba1
.dword 0x3fda96cce0dfaf22
.dword 0x3fe23dfd77c83f6f
.dword 0x3fe7522c92a43ba1
.dword 0x3fda96cce0dfaf22
.dword 0x3fd604848221dffe
.dword 0x40053730b4699b7b
.dword 0x3fed31e0781d7728
.dword 0x3fd604848221dffe
.dword 0x40053730b4699b7b
.dword 0x3fed31e0781d7728
.dword 0x3fd604848221dffe
.dword 0x40053730b4699b7b
.dword 0x3fed31e0781d7728
.dword 0x3fd604848221dffe
.dword 0x40053730b4699b7b
.dword 0x3fed31e0781d7728
.dword 0x3fd604848221dffe
.dword 0x40053730b4699b7b
.dword 0x3fed31e0781d7728
.dword 0x3fdcfe2013058ea6
.dword 0x3ff6a2667ddbcc1c
.dword 0x3fe481d96b822c39
.dword 0x3fdcfe2013058ea6
.dword 0x3ff6a2667ddbcc1c
.dword 0x3fe481d96b822c39
.dword 0x3fdcfe2013058ea6
.dword 0x3ff6a2667ddbcc1c
.dword 0x3fe481d96b822c39
.dword 0x3fdcfe2013058ea6
.dword 0x3ff6a2667ddbcc1c
.dword 0x3fe481d96b822c39
.dword 0x3fdcfe2013058ea6
.dword 0x3ff6a2667ddbcc1c
.dword 0x3fe481d96b822c39
.dword 0x3fe8ef771e18e80e
.dword 0x3fe948a0662241b4
.dword 0x3fe3b3acd870c123
.dword 0x3fe8ef771e18e80e
.dword 0x3fe948a0662241b4
.dword 0x3fe3b3acd870c123
.dword 0x3fe8ef771e18e80e
.dword 0x3fe948a0662241b4
.dword 0x3fe3b3acd870c123
.dword 0x3fe8ef771e18e80e
.dword 0x3fe948a0662241b4
.dword 0x3fe3b3acd870c123
.dword 0x3fe8ef771e18e80e
.dword 0x3fe948a0662241b4
.dword 0x3fe3b3acd870c123
.dword 0x3fea22984a1709c7
.dword 0x3fb7b6b85e8df37c
.dword 0x3fb35e18cb8b2ab8
.dword 0x3fea22984a1709c7
.dword 0x3fb7b6b85e8df37c
.dword 0x3fb35e18cb8b2ab8
.dword 0x3fea22984a1709c7
.dword 0x3fb7b6b85e8df37c
.dword 0x3fb35e18cb8b2ab8
.dword 0x3fea22984a1709c7
.dword 0x3fb7b6b85e8df37c
.dword 0x3fb35e18cb8b2ab8
.dword 0x3fea22984a1709c7
.dword 0x3fb7b6b85e8df37c
.dword 0x3fb35e18cb8b2ab8
.dword 0x3fe4911935b1199c
.dword 0x3ff44a66a665204e
.dword 0x3fea15028a99cc65
.dword 0x3fe4911935b1199c
.dword 0x3ff44a66a665204e
.dword 0x3fea15028a99cc65
.dword 0x3fe4911935b1199c
.dword 0x3ff44a66a665204e
.dword 0x3fea15028a99cc65
.dword 0x3fe4911935b1199c
.dword 0x3ff44a66a665204e
.dword 0x3fea15028a99cc65
.dword 0x3fe4911935b1199c
.dword 0x3ff44a66a665204e
.dword 0x3fea15028a99cc65
.dword 0x3fed1ddd54bd498c
.dword 0x3fc195938a733f67
.dword 0x3fbfffedc5830a70
.dword 0x3fed1ddd54bd498c
.dword 0x3fc195938a733f67
.dword 0x3fbfffedc5830a70
.dword 0x3fed1ddd54bd498c
.dword 0x3fc195938a733f67
.dword 0x3fbfffedc5830a70
.dword 0x3fed1ddd54bd498c
.dword 0x3fc195938a733f67
.dword 0x3fbfffedc5830a70
.dword 0x3fed1ddd54bd498c
.dword 0x3fc195938a733f67
.dword 0x3fbfffedc5830a70
.dword 0x3fd161cc16a09f24
.dword 0x3ff7e3d0bfffc7b9
.dword 0x3fd9f413a7fa65aa
.dword 0x3fd161cc16a09f24
.dword 0x3ff7e3d0bfffc7b9
.dword 0x3fd9f413a7fa65aa
.dword 0x3fd161cc16a09f24
.dword 0x3ff7e3d0bfffc7b9
.dword 0x3fd9f413a7fa65aa
.dword 0x3fd161cc16a09f24
.dword 0x3ff7e3d0bfffc7b9
.dword 0x3fd9f413a7fa65aa
.dword 0x3fd161cc16a09f24
.dword 0x3ff7e3d0bfffc7b9
.dword 0x3fd9f413a7fa65aa
.dword 0x3fbe31fd14064850
.dword 0x401a88296f8fd225
.dword 0x3fe909192d2b92a8
.dword 0x3fbe31fd14064850
.dword 0x401a88296f8fd225
.dword 0x3fe909192d2b92a8
.dword 0x3fbe31fd14064850
.dword 0x401a88296f8fd225
.dword 0x3fe909192d2b92a8
.dword 0x3fbe31fd14064850
.dword 0x401a88296f8fd225
.dword 0x3fe909192d2b92a8
.dword 0x3fbe31fd14064850
.dword 0x401a88296f8fd225
.dword 0x3fe909192d2b92a8
.dword 0x3fd1722eb5945782
.dword 0x3ff1766d2924fd51
.dword 0x3fd30a72c023e4d2
.dword 0x3fd1722eb5945782
.dword 0x3ff1766d2924fd51
.dword 0x3fd30a72c023e4d2
.dword 0x3fd1722eb5945782
.dword 0x3ff1766d2924fd51
.dword 0x3fd30a72c023e4d2
.dword 0x3fd1722eb5945782
.dword 0x3ff1766d2924fd51
.dword 0x3fd30a72c023e4d2
.dword 0x3fd1722eb5945782
.dword 0x3ff1766d2924fd51
.dword 0x3fd30a72c023e4d2
.dword 0x3feb12509ee3433b
.dword 0x3ff1cfd7451f90cd
.dword 0x3fee231ed6e8cedc
.dword 0x3feb12509ee3433b
.dword 0x3ff1cfd7451f90cd
.dword 0x3fee231ed6e8cedc
.dword 0x3feb12509ee3433b
.dword 0x3ff1cfd7451f90cd
.dword 0x3fee231ed6e8cedc
.dword 0x3feb12509ee3433b
.dword 0x3ff1cfd7451f90cd
.dword 0x3fee231ed6e8cedc
.dword 0x3feb12509ee3433b
.dword 0x3ff1cfd7451f90cd
.dword 0x3fee231ed6e8cedc
.dword 0x3fe948e2edb7b64b
.dword 0x3fec2e5360274d40
.dword 0x3fe64461373cc6d4
.dword 0x3fe948e2edb7b64b
.dword 0x3fec2e5360274d40
.dword 0x3fe64461373cc6d4
.dword 0x3fe948e2edb7b64b
.dword 0x3fec2e5360274d40
.dword 0x3fe64461373cc6d4
.dword 0x3fe948e2edb7b64b
.dword 0x3fec2e5360274d40
.dword 0x3fe64461373cc6d4
.dword 0x3fe948e2edb7b64b
.dword 0x3fec2e5360274d40
.dword 0x3fe64461373cc6d4
.dword 0x3feeddb692b7858e
.dword 0x3ff05b51bb26c762
.dword 0x3fef8de13c90551e
.dword 0x3feeddb692b7858e
.dword 0x3ff05b51bb26c762
.dword 0x3fef8de13c90551e
.dword 0x3feeddb692b7858e
.dword 0x3ff05b51bb26c762
.dword 0x3fef8de13c90551e
.dword 0x3feeddb692b7858e
.dword 0x3ff05b51bb26c762
.dword 0x3fef8de13c90551e
.dword 0x3feeddb692b7858e
.dword 0x3ff05b51bb26c762
.dword 0x3fef8de13c90551e
.dword 0x3fdda553f5f63602
.dword 0x3ffca8ec0a0eff89
.dword 0x3fea8d281c9f8123
.dword 0x3fdda553f5f63602
.dword 0x3ffca8ec0a0eff89
.dword 0x3fea8d281c9f8123
.dword 0x3fdda553f5f63602
.dword 0x3ffca8ec0a0eff89
.dword 0x3fea8d281c9f8123
.dword 0x3fdda553f5f63602
.dword 0x3ffca8ec0a0eff89
.dword 0x3fea8d281c9f8123
.dword 0x3fdda553f5f63602
.dword 0x3ffca8ec0a0eff89
.dword 0x3fea8d281c9f8123
.dword 0x3fbf00d605d72788
.dword 0x4010ab6b88a0bc7f
.dword 0x3fe0267fa9c5b56e
.dword 0x3fbf00d605d72788
.dword 0x4010ab6b88a0bc7f
.dword 0x3fe0267fa9c5b56e
.dword 0x3fbf00d605d72788
.dword 0x4010ab6b88a0bc7f
.dword 0x3fe0267fa9c5b56e
.dword 0x3fbf00d605d72788
.dword 0x4010ab6b88a0bc7f
.dword 0x3fe0267fa9c5b56e
.dword 0x3fbf00d605d72788
.dword 0x4010ab6b88a0bc7f
.dword 0x3fe0267fa9c5b56e
.dword 0x3fd83082d83b1d44
.dword 0x400518bc07d0e43f
.dword 0x3fefe510c5e464c2
.dword 0x3fd83082d83b1d44
.dword 0x400518bc07d0e43f
.dword 0x3fefe510c5e464c2
.dword 0x3fd83082d83b1d44
.dword 0x400518bc07d0e43f
.dword 0x3fefe510c5e464c2
.dword 0x3fd83082d83b1d44
.dword 0x400518bc07d0e43f
.dword 0x3fefe510c5e464c2
.dword 0x3fd83082d83b1d44
.dword 0x400518bc07d0e43f
.dword 0x3fefe510c5e464c2
.dword 0x3fd0334f9600ade2
.dword 0x3ff564b6fef8cac8
.dword 0x3fd5a952701e2ad0
.dword 0x3fd0334f9600ade2
.dword 0x3ff564b6fef8cac8
.dword 0x3fd5a952701e2ad0
.dword 0x3fd0334f9600ade2
.dword 0x3ff564b6fef8cac8
.dword 0x3fd5a952701e2ad0
.dword 0x3fd0334f9600ade2
.dword 0x3ff564b6fef8cac8
.dword 0x3fd5a952701e2ad0
.dword 0x3fd0334f9600ade2
.dword 0x3ff564b6fef8cac8
.dword 0x3fd5a952701e2ad0
.dword 0x3fd20670f9d80ef2
.dword 0x400b1b01d638ddb3
.dword 0x3fee894b95ff7ccb
.dword 0x3fd20670f9d80ef2
.dword 0x400b1b01d638ddb3
.dword 0x3fee894b95ff7ccb
.dword 0x3fd20670f9d80ef2
.dword 0x400b1b01d638ddb3
.dword 0x3fee894b95ff7ccb
.dword 0x3fd20670f9d80ef2
.dword 0x400b1b01d638ddb3
.dword 0x3fee894b95ff7ccb
.dword 0x3fd20670f9d80ef2
.dword 0x400b1b01d638ddb3
.dword 0x3fee894b95ff7ccb
.dword 0x3fe1816ca1c6eb32
.dword 0x3fa195bd899914d1
.dword 0x3f933d580ee4cbe0
.dword 0x3fe1816ca1c6eb32
.dword 0x3fa195bd899914d1
.dword 0x3f933d580ee4cbe0
.dword 0x3fe1816ca1c6eb32
.dword 0x3fa195bd899914d1
.dword 0x3f933d580ee4cbe0
.dword 0x3fe1816ca1c6eb32
.dword 0x3fa195bd899914d1
.dword 0x3f933d580ee4cbe0
.dword 0x3fe1816ca1c6eb32
.dword 0x3fa195bd899914d1
.dword 0x3f933d580ee4cbe0
.dword 0x3fdd21feea7d7bb4
.dword 0x3fd04ccd4e2d0338
.dword 0x3fbdadd637411c58
.dword 0x3fdd21feea7d7bb4
.dword 0x3fd04ccd4e2d0338
.dword 0x3fbdadd637411c58
.dword 0x3fdd21feea7d7bb4
.dword 0x3fd04ccd4e2d0338
.dword 0x3fbdadd637411c58
.dword 0x3fdd21feea7d7bb4
.dword 0x3fd04ccd4e2d0338
.dword 0x3fbdadd637411c58
.dword 0x3fdd21feea7d7bb4
.dword 0x3fd04ccd4e2d0338
.dword 0x3fbdadd637411c58
.dword 0x3fdd527dd1cc27ca
.dword 0x3ff6d7ad37f30e31
.dword 0x3fe4ee5776d2a4eb
.dword 0x3fdd527dd1cc27ca
.dword 0x3ff6d7ad37f30e31
.dword 0x3fe4ee5776d2a4eb
.dword 0x3fdd527dd1cc27ca
.dword 0x3ff6d7ad37f30e31
.dword 0x3fe4ee5776d2a4eb
.dword 0x3fdd527dd1cc27ca
.dword 0x3ff6d7ad37f30e31
.dword 0x3fe4ee5776d2a4eb
.dword 0x3fdd527dd1cc27ca
.dword 0x3ff6d7ad37f30e31
.dword 0x3fe4ee5776d2a4eb
.dword 0x3fe1fc9952ad2d28
.dword 0x3ff532caaade6494
.dword 0x3fe7d4a270cb3b2b
.dword 0x3fe1fc9952ad2d28
.dword 0x3ff532caaade6494
.dword 0x3fe7d4a270cb3b2b
.dword 0x3fe1fc9952ad2d28
.dword 0x3ff532caaade6494
.dword 0x3fe7d4a270cb3b2b
.dword 0x3fe1fc9952ad2d28
.dword 0x3ff532caaade6494
.dword 0x3fe7d4a270cb3b2b
.dword 0x3fe1fc9952ad2d28
.dword 0x3ff532caaade6494
.dword 0x3fe7d4a270cb3b2b
.dword 0x3f865c71065dc980
.dword 0x4029541317f0f601
.dword 0x3fc1b2f84d47e9d8
.dword 0x3f865c71065dc980
.dword 0x4029541317f0f601
.dword 0x3fc1b2f84d47e9d8
.dword 0x3f865c71065dc980
.dword 0x4029541317f0f601
.dword 0x3fc1b2f84d47e9d8
.dword 0x3f865c71065dc980
.dword 0x4029541317f0f601
.dword 0x3fc1b2f84d47e9d8
.dword 0x3f865c71065dc980
.dword 0x4029541317f0f601
.dword 0x3fc1b2f84d47e9d8
.dword 0x3fd2e13826695a58
.dword 0x3fe64aa7000f4ad8
.dword 0x3fca4dc3e74e9fdc
.dword 0x3fd2e13826695a58
.dword 0x3fe64aa7000f4ad8
.dword 0x3fca4dc3e74e9fdc
.dword 0x3fd2e13826695a58
.dword 0x3fe64aa7000f4ad8
.dword 0x3fca4dc3e74e9fdc
.dword 0x3fd2e13826695a58
.dword 0x3fe64aa7000f4ad8
.dword 0x3fca4dc3e74e9fdc
.dword 0x3fd2e13826695a58
.dword 0x3fe64aa7000f4ad8
.dword 0x3fca4dc3e74e9fdc
.dword 0x3fedbf773a164ce0
.dword 0x3fee414f79a5a6d1
.dword 0x3fec2036926735eb
.dword 0x3fedbf773a164ce0
.dword 0x3fee414f79a5a6d1
.dword 0x3fec2036926735eb
.dword 0x3fedbf773a164ce0
.dword 0x3fee414f79a5a6d1
.dword 0x3fec2036926735eb
.dword 0x3fedbf773a164ce0
.dword 0x3fee414f79a5a6d1
.dword 0x3fec2036926735eb
.dword 0x3fedbf773a164ce0
.dword 0x3fee414f79a5a6d1
.dword 0x3fec2036926735eb
.dword 0x3fd494dd4b96e2d8
.dword 0x3ff9ddcbb31ee340
.dword 0x3fe0a2f3fef05664
.dword 0x3fd494dd4b96e2d8
.dword 0x3ff9ddcbb31ee340
.dword 0x3fe0a2f3fef05664
.dword 0x3fd494dd4b96e2d8
.dword 0x3ff9ddcbb31ee340
.dword 0x3fe0a2f3fef05664
.dword 0x3fd494dd4b96e2d8
.dword 0x3ff9ddcbb31ee340
.dword 0x3fe0a2f3fef05664
.dword 0x3fd494dd4b96e2d8
.dword 0x3ff9ddcbb31ee340
.dword 0x3fe0a2f3fef05664
.dword 0x3f781ad61d700e80
.dword 0x4014b97acb7a28c5
.dword 0x3f9f38faefad98e0
.dword 0x3f781ad61d700e80
.dword 0x4014b97acb7a28c5
.dword 0x3f9f38faefad98e0
.dword 0x3f781ad61d700e80
.dword 0x4014b97acb7a28c5
.dword 0x3f9f38faefad98e0
.dword 0x3f781ad61d700e80
.dword 0x4014b97acb7a28c5
.dword 0x3f9f38faefad98e0
.dword 0x3f781ad61d700e80
.dword 0x4014b97acb7a28c5
.dword 0x3f9f38faefad98e0
.dword 0x3fe1bc4be6818665
.dword 0x3ffc824f5560b86e
.dword 0x3fef99f6ac6dd324
.dword 0x3fe1bc4be6818665
.dword 0x3ffc824f5560b86e
.dword 0x3fef99f6ac6dd324
.dword 0x3fe1bc4be6818665
.dword 0x3ffc824f5560b86e
.dword 0x3fef99f6ac6dd324
.dword 0x3fe1bc4be6818665
.dword 0x3ffc824f5560b86e
.dword 0x3fef99f6ac6dd324
.dword 0x3fe1bc4be6818665
.dword 0x3ffc824f5560b86e
.dword 0x3fef99f6ac6dd324
.dword 0x3fc4badefd9616c8
.dword 0x4016220ad27f8d27
.dword 0x3fecad0dbc0e8dad
.dword 0x3fc4badefd9616c8
.dword 0x4016220ad27f8d27
.dword 0x3fecad0dbc0e8dad
.dword 0x3fc4badefd9616c8
.dword 0x4016220ad27f8d27
.dword 0x3fecad0dbc0e8dad
.dword 0x3fc4badefd9616c8
.dword 0x4016220ad27f8d27
.dword 0x3fecad0dbc0e8dad
.dword 0x3fc4badefd9616c8
.dword 0x4016220ad27f8d27
.dword 0x3fecad0dbc0e8dad
.dword 0x3fef619e38378434
.dword 0x3fde8fb23321392e
.dword 0x3fddf86f50e385a4
.dword 0x3fef619e38378434
.dword 0x3fde8fb23321392e
.dword 0x3fddf86f50e385a4
.dword 0x3fef619e38378434
.dword 0x3fde8fb23321392e
.dword 0x3fddf86f50e385a4
.dword 0x3fef619e38378434
.dword 0x3fde8fb23321392e
.dword 0x3fddf86f50e385a4
.dword 0x3fef619e38378434
.dword 0x3fde8fb23321392e
.dword 0x3fddf86f50e385a4
.dword 0x3fe0fdd5d9063fad
.dword 0x3ff1f2468c92b50d
.dword 0x3fe30efd64d99356
.dword 0x3fe0fdd5d9063fad
.dword 0x3ff1f2468c92b50d
.dword 0x3fe30efd64d99356
.dword 0x3fe0fdd5d9063fad
.dword 0x3ff1f2468c92b50d
.dword 0x3fe30efd64d99356
.dword 0x3fe0fdd5d9063fad
.dword 0x3ff1f2468c92b50d
.dword 0x3fe30efd64d99356
.dword 0x3fe0fdd5d9063fad
.dword 0x3ff1f2468c92b50d
.dword 0x3fe30efd64d99356
.dword 0x3feb49433e84bab8
.dword 0x3fd8f8a758950ee5
.dword 0x3fd54af8e9e791b6
.dword 0x3feb49433e84bab8
.dword 0x3fd8f8a758950ee5
.dword 0x3fd54af8e9e791b6
.dword 0x3feb49433e84bab8
.dword 0x3fd8f8a758950ee5
.dword 0x3fd54af8e9e791b6
.dword 0x3feb49433e84bab8
.dword 0x3fd8f8a758950ee5
.dword 0x3fd54af8e9e791b6
.dword 0x3feb49433e84bab8
.dword 0x3fd8f8a758950ee5
.dword 0x3fd54af8e9e791b6
.dword 0x3fe40f21d76ea1e3
.dword 0x3fd112c27406b2d0
.dword 0x3fc56798c3e857c8
.dword 0x3fe40f21d76ea1e3
.dword 0x3fd112c27406b2d0
.dword 0x3fc56798c3e857c8
.dword 0x3fe40f21d76ea1e3
.dword 0x3fd112c27406b2d0
.dword 0x3fc56798c3e857c8
.dword 0x3fe40f21d76ea1e3
.dword 0x3fd112c27406b2d0
.dword 0x3fc56798c3e857c8
.dword 0x3fe40f21d76ea1e3
.dword 0x3fd112c27406b2d0
.dword 0x3fc56798c3e857c8
.dword 0x3fecbcfca50cc95e
.dword 0x3fc76ce5c2521c31
.dword 0x3fc509a1c241b248
.dword 0x3fecbcfca50cc95e
.dword 0x3fc76ce5c2521c31
.dword 0x3fc509a1c241b248
.dword 0x3fecbcfca50cc95e
.dword 0x3fc76ce5c2521c31
.dword 0x3fc509a1c241b248
.dword 0x3fecbcfca50cc95e
.dword 0x3fc76ce5c2521c31
.dword 0x3fc509a1c241b248
.dword 0x3fecbcfca50cc95e
.dword 0x3fc76ce5c2521c31
.dword 0x3fc509a1c241b248
.dword 0x3fe3b5b05443f732
.dword 0x3fe38b115e720279
.dword 0x3fd81311354ffb0a
.dword 0x3fe3b5b05443f732
.dword 0x3fe38b115e720279
.dword 0x3fd81311354ffb0a
.dword 0x3fe3b5b05443f732
.dword 0x3fe38b115e720279
.dword 0x3fd81311354ffb0a
.dword 0x3fe3b5b05443f732
.dword 0x3fe38b115e720279
.dword 0x3fd81311354ffb0a
.dword 0x3fe3b5b05443f732
.dword 0x3fe38b115e720279
.dword 0x3fd81311354ffb0a
.dword 0x3fe73600106e1897
.dword 0x3fd897158e2cee55
.dword 0x3fd1d6167f305c26
.dword 0x3fe73600106e1897
.dword 0x3fd897158e2cee55
.dword 0x3fd1d6167f305c26
.dword 0x3fe73600106e1897
.dword 0x3fd897158e2cee55
.dword 0x3fd1d6167f305c26
.dword 0x3fe73600106e1897
.dword 0x3fd897158e2cee55
.dword 0x3fd1d6167f305c26
.dword 0x3fe73600106e1897
.dword 0x3fd897158e2cee55
.dword 0x3fd1d6167f305c26
.dword 0x3fe16a89d6ba44db
.dword 0x3ffb98ac0da36867
.dword 0x3fee09f7fff47111
.dword 0x3fe16a89d6ba44db
.dword 0x3ffb98ac0da36867
.dword 0x3fee09f7fff47111
.dword 0x3fe16a89d6ba44db
.dword 0x3ffb98ac0da36867
.dword 0x3fee09f7fff47111
.dword 0x3fe16a89d6ba44db
.dword 0x3ffb98ac0da36867
.dword 0x3fee09f7fff47111
.dword 0x3fe16a89d6ba44db
.dword 0x3ffb98ac0da36867
.dword 0x3fee09f7fff47111
.dword 0x3fef0b41d614d395
.dword 0x3f7adeea251f4089
.dword 0x3f7a1166bd02df80
.dword 0x3fef0b41d614d395
.dword 0x3f7adeea251f4089
.dword 0x3f7a1166bd02df80
.dword 0x3fef0b41d614d395
.dword 0x3f7adeea251f4089
.dword 0x3f7a1166bd02df80
.dword 0x3fef0b41d614d395
.dword 0x3f7adeea251f4089
.dword 0x3f7a1166bd02df80
.dword 0x3fef0b41d614d395
.dword 0x3f7adeea251f4089
.dword 0x3f7a1166bd02df80
.dword 0x3feff37023c16bab
.dword 0x3fbe26a414c97520
.dword 0x3fbe1ace0b0fce00
.dword 0x3feff37023c16bab
.dword 0x3fbe26a414c97520
.dword 0x3fbe1ace0b0fce00
.dword 0x3feff37023c16bab
.dword 0x3fbe26a414c97520
.dword 0x3fbe1ace0b0fce00
.dword 0x3feff37023c16bab
.dword 0x3fbe26a414c97520
.dword 0x3fbe1ace0b0fce00
.dword 0x3feff37023c16bab
.dword 0x3fbe26a414c97520
.dword 0x3fbe1ace0b0fce00
.dword 0x3fb69c8e1dd0a5f0
.dword 0x4020709fe2da1c7b
.dword 0x3fe73bb7f4fd3778
.dword 0x3fb69c8e1dd0a5f0
.dword 0x4020709fe2da1c7b
.dword 0x3fe73bb7f4fd3778
.dword 0x3fb69c8e1dd0a5f0
.dword 0x4020709fe2da1c7b
.dword 0x3fe73bb7f4fd3778
.dword 0x3fb69c8e1dd0a5f0
.dword 0x4020709fe2da1c7b
.dword 0x3fe73bb7f4fd3778
.dword 0x3fb69c8e1dd0a5f0
.dword 0x4020709fe2da1c7b
.dword 0x3fe73bb7f4fd3778
.dword 0x3f9d987b557882a0
.dword 0x4029e1a4afa79843
.dword 0x3fd7efd0cde4167e
.dword 0x3f9d987b557882a0
.dword 0x4029e1a4afa79843
.dword 0x3fd7efd0cde4167e
.dword 0x3f9d987b557882a0
.dword 0x4029e1a4afa79843
.dword 0x3fd7efd0cde4167e
.dword 0x3f9d987b557882a0
.dword 0x4029e1a4afa79843
.dword 0x3fd7efd0cde4167e
.dword 0x3f9d987b557882a0
.dword 0x4029e1a4afa79843
.dword 0x3fd7efd0cde4167e
.dword 0x3fdb65ee1d07fb8e
.dword 0x3fe3e27200f05a28
.dword 0x3fd10666ded7d6d4
.dword 0x3fdb65ee1d07fb8e
.dword 0x3fe3e27200f05a28
.dword 0x3fd10666ded7d6d4
.dword 0x3fdb65ee1d07fb8e
.dword 0x3fe3e27200f05a28
.dword 0x3fd10666ded7d6d4
.dword 0x3fdb65ee1d07fb8e
.dword 0x3fe3e27200f05a28
.dword 0x3fd10666ded7d6d4
.dword 0x3fdb65ee1d07fb8e
.dword 0x3fe3e27200f05a28
.dword 0x3fd10666ded7d6d4
.dword 0x3fe16c0f201d8250
.dword 0x3fd711042f6528dc
.dword 0x3fc91ddd1cdbe5c0
.dword 0x3fe16c0f201d8250
.dword 0x3fd711042f6528dc
.dword 0x3fc91ddd1cdbe5c0
.dword 0x3fe16c0f201d8250
.dword 0x3fd711042f6528dc
.dword 0x3fc91ddd1cdbe5c0
.dword 0x3fe16c0f201d8250
.dword 0x3fd711042f6528dc
.dword 0x3fc91ddd1cdbe5c0
.dword 0x3fe16c0f201d8250
.dword 0x3fd711042f6528dc
.dword 0x3fc91ddd1cdbe5c0
.dword 0x3fec76af8d181cfc
.dword 0x3fdbc3b0b0de2c98
.dword 0x3fd8b23486e80ffe
.dword 0x3fec76af8d181cfc
.dword 0x3fdbc3b0b0de2c98
.dword 0x3fd8b23486e80ffe
.dword 0x3fec76af8d181cfc
.dword 0x3fdbc3b0b0de2c98
.dword 0x3fd8b23486e80ffe
.dword 0x3fec76af8d181cfc
.dword 0x3fdbc3b0b0de2c98
.dword 0x3fd8b23486e80ffe
.dword 0x3fec76af8d181cfc
.dword 0x3fdbc3b0b0de2c98
.dword 0x3fd8b23486e80ffe
.dword 0x3fd0b4f120943222
.dword 0x40009e0c2e0f16fd
.dword 0x3fe159f8a582b8e1
.dword 0x3fd0b4f120943222
.dword 0x40009e0c2e0f16fd
.dword 0x3fe159f8a582b8e1
.dword 0x3fd0b4f120943222
.dword 0x40009e0c2e0f16fd
.dword 0x3fe159f8a582b8e1
.dword 0x3fd0b4f120943222
.dword 0x40009e0c2e0f16fd
.dword 0x3fe159f8a582b8e1
.dword 0x3fd0b4f120943222
.dword 0x40009e0c2e0f16fd
.dword 0x3fe159f8a582b8e1
.dword 0x3fd7c065aefef96a
.dword 0x3fd83aa4db4551a4
.dword 0x3fc1fbd35855b568
.dword 0x3fd7c065aefef96a
.dword 0x3fd83aa4db4551a4
.dword 0x3fc1fbd35855b568
.dword 0x3fd7c065aefef96a
.dword 0x3fd83aa4db4551a4
.dword 0x3fc1fbd35855b568
.dword 0x3fd7c065aefef96a
.dword 0x3fd83aa4db4551a4
.dword 0x3fc1fbd35855b568
.dword 0x3fd7c065aefef96a
.dword 0x3fd83aa4db4551a4
.dword 0x3fc1fbd35855b568
.dword 0x3fea654f4023bad6
.dword 0x3fefa79e34521fb3
.dword 0x3fea1c67fb1902b0
.dword 0x3fea654f4023bad6
.dword 0x3fefa79e34521fb3
.dword 0x3fea1c67fb1902b0
.dword 0x3fea654f4023bad6
.dword 0x3fefa79e34521fb3
.dword 0x3fea1c67fb1902b0
.dword 0x3fea654f4023bad6
.dword 0x3fefa79e34521fb3
.dword 0x3fea1c67fb1902b0
.dword 0x3fea654f4023bad6
.dword 0x3fefa79e34521fb3
.dword 0x3fea1c67fb1902b0
.dword 0x3fd1690a317382ca
.dword 0x3fd396656d35dbcb
.dword 0x3fb55063382f4ef0
.dword 0x3fd1690a317382ca
.dword 0x3fd396656d35dbcb
.dword 0x3fb55063382f4ef0
.dword 0x3fd1690a317382ca
.dword 0x3fd396656d35dbcb
.dword 0x3fb55063382f4ef0
.dword 0x3fd1690a317382ca
.dword 0x3fd396656d35dbcb
.dword 0x3fb55063382f4ef0
.dword 0x3fd1690a317382ca
.dword 0x3fd396656d35dbcb
.dword 0x3fb55063382f4ef0
.dword 0x3fe4c4484aa587ac
.dword 0x3ff4c0d2dd31a09c
.dword 0x3feaef9f701b0fca
.dword 0x3fe4c4484aa587ac
.dword 0x3ff4c0d2dd31a09c
.dword 0x3feaef9f701b0fca
.dword 0x3fe4c4484aa587ac
.dword 0x3ff4c0d2dd31a09c
.dword 0x3feaef9f701b0fca
.dword 0x3fe4c4484aa587ac
.dword 0x3ff4c0d2dd31a09c
.dword 0x3feaef9f701b0fca
.dword 0x3fe4c4484aa587ac
.dword 0x3ff4c0d2dd31a09c
.dword 0x3feaef9f701b0fca
.dword 0x3fd57254e9f5d270
.dword 0x4004e458f7905430
.dword 0x3fec00fe9f22b17b
.dword 0x3fd57254e9f5d270
.dword 0x4004e458f7905430
.dword 0x3fec00fe9f22b17b
.dword 0x3fd57254e9f5d270
.dword 0x4004e458f7905430
.dword 0x3fec00fe9f22b17b
.dword 0x3fd57254e9f5d270
.dword 0x4004e458f7905430
.dword 0x3fec00fe9f22b17b
.dword 0x3fd57254e9f5d270
.dword 0x4004e458f7905430
.dword 0x3fec00fe9f22b17b
.dword 0x3fed3a017fa76c8a
.dword 0x3f9669a5924fe285
.dword 0x3f94785e95674f20
.dword 0x3fed3a017fa76c8a
.dword 0x3f9669a5924fe285
.dword 0x3f94785e95674f20
.dword 0x3fed3a017fa76c8a
.dword 0x3f9669a5924fe285
.dword 0x3f94785e95674f20
.dword 0x3fed3a017fa76c8a
.dword 0x3f9669a5924fe285
.dword 0x3f94785e95674f20
.dword 0x3fed3a017fa76c8a
.dword 0x3f9669a5924fe285
.dword 0x3f94785e95674f20
.dword 0x3fd3fed819e0543e
.dword 0x3fe6a1f6e69afc0a
.dword 0x3fcc48d21084754c
.dword 0x3fd3fed819e0543e
.dword 0x3fe6a1f6e69afc0a
.dword 0x3fcc48d21084754c
.dword 0x3fd3fed819e0543e
.dword 0x3fe6a1f6e69afc0a
.dword 0x3fcc48d21084754c
.dword 0x3fd3fed819e0543e
.dword 0x3fe6a1f6e69afc0a
.dword 0x3fcc48d21084754c
.dword 0x3fd3fed819e0543e
.dword 0x3fe6a1f6e69afc0a
.dword 0x3fcc48d21084754c
.dword 0x3fdfabd4ebf2ad70
.dword 0x3ffca8cd03d1e9a8
.dword 0x3fec5d6b54def6d9
.dword 0x3fdfabd4ebf2ad70
.dword 0x3ffca8cd03d1e9a8
.dword 0x3fec5d6b54def6d9
.dword 0x3fdfabd4ebf2ad70
.dword 0x3ffca8cd03d1e9a8
.dword 0x3fec5d6b54def6d9
.dword 0x3fdfabd4ebf2ad70
.dword 0x3ffca8cd03d1e9a8
.dword 0x3fec5d6b54def6d9
.dword 0x3fdfabd4ebf2ad70
.dword 0x3ffca8cd03d1e9a8
.dword 0x3fec5d6b54def6d9
.dword 0x3fd1f11f58160e72
.dword 0x40081c29c07fd297
.dword 0x3feb0943ccb85c2d
.dword 0x3fd1f11f58160e72
.dword 0x40081c29c07fd297
.dword 0x3feb0943ccb85c2d
.dword 0x3fd1f11f58160e72
.dword 0x40081c29c07fd297
.dword 0x3feb0943ccb85c2d
.dword 0x3fd1f11f58160e72
.dword 0x40081c29c07fd297
.dword 0x3feb0943ccb85c2d
.dword 0x3fd1f11f58160e72
.dword 0x40081c29c07fd297
.dword 0x3feb0943ccb85c2d
.dword 0x3fec7fb9bda4e751
.dword 0x3fdc856b9693b8ce
.dword 0x3fd96695331bd7e4
.dword 0x3fec7fb9bda4e751
.dword 0x3fdc856b9693b8ce
.dword 0x3fd96695331bd7e4
.dword 0x3fec7fb9bda4e751
.dword 0x3fdc856b9693b8ce
.dword 0x3fd96695331bd7e4
.dword 0x3fec7fb9bda4e751
.dword 0x3fdc856b9693b8ce
.dword 0x3fd96695331bd7e4
.dword 0x3fec7fb9bda4e751
.dword 0x3fdc856b9693b8ce
.dword 0x3fd96695331bd7e4
.dword 0x3feddd671af42724
.dword 0x3fedc76904032308
.dword 0x3febcac04bd5cc94
.dword 0x3feddd671af42724
.dword 0x3fedc76904032308
.dword 0x3febcac04bd5cc94
.dword 0x3feddd671af42724
.dword 0x3fedc76904032308
.dword 0x3febcac04bd5cc94
.dword 0x3feddd671af42724
.dword 0x3fedc76904032308
.dword 0x3febcac04bd5cc94
.dword 0x3feddd671af42724
.dword 0x3fedc76904032308
.dword 0x3febcac04bd5cc94
.dword 0x3fd66f87c2b09628
.dword 0x3fe275a2083544cb
.dword 0x3fc9e26b80875d3c
.dword 0x3fd66f87c2b09628
.dword 0x3fe275a2083544cb
.dword 0x3fc9e26b80875d3c
.dword 0x3fd66f87c2b09628
.dword 0x3fe275a2083544cb
.dword 0x3fc9e26b80875d3c
.dword 0x3fd66f87c2b09628
.dword 0x3fe275a2083544cb
.dword 0x3fc9e26b80875d3c
.dword 0x3fd66f87c2b09628
.dword 0x3fe275a2083544cb
.dword 0x3fc9e26b80875d3c
.dword 0x3fda21e33ce1ff66
.dword 0x3fd4cf9df696f979
.dword 0x3fc0feba3ba1c5b8
.dword 0x3fda21e33ce1ff66
.dword 0x3fd4cf9df696f979
.dword 0x3fc0feba3ba1c5b8
.dword 0x3fda21e33ce1ff66
.dword 0x3fd4cf9df696f979
.dword 0x3fc0feba3ba1c5b8
.dword 0x3fda21e33ce1ff66
.dword 0x3fd4cf9df696f979
.dword 0x3fc0feba3ba1c5b8
.dword 0x3fda21e33ce1ff66
.dword 0x3fd4cf9df696f979
.dword 0x3fc0feba3ba1c5b8
.dword 0x3f76e2ab57b59a00
.dword 0x403c54fb75a805c3
.dword 0x3fc4431cc49a0808
.dword 0x3f76e2ab57b59a00
.dword 0x403c54fb75a805c3
.dword 0x3fc4431cc49a0808
.dword 0x3f76e2ab57b59a00
.dword 0x403c54fb75a805c3
.dword 0x3fc4431cc49a0808
.dword 0x3f76e2ab57b59a00
.dword 0x403c54fb75a805c3
.dword 0x3fc4431cc49a0808
.dword 0x3f76e2ab57b59a00
.dword 0x403c54fb75a805c3
.dword 0x3fc4431cc49a0808
.dword 0x3fe061da1050c869
.dword 0x3ff3de73522f9190
.dword 0x3fe457f6b877d62c
.dword 0x3fe061da1050c869
.dword 0x3ff3de73522f9190
.dword 0x3fe457f6b877d62c
.dword 0x3fe061da1050c869
.dword 0x3ff3de73522f9190
.dword 0x3fe457f6b877d62c
.dword 0x3fe061da1050c869
.dword 0x3ff3de73522f9190
.dword 0x3fe457f6b877d62c
.dword 0x3fe061da1050c869
.dword 0x3ff3de73522f9190
.dword 0x3fe457f6b877d62c
.dword 0x3fdeb3bfcbcd1550
.dword 0x3fddd3e1e063ea3d
.dword 0x3fcc9e2fc08057f8
.dword 0x3fdeb3bfcbcd1550
.dword 0x3fddd3e1e063ea3d
.dword 0x3fcc9e2fc08057f8
.dword 0x3fdeb3bfcbcd1550
.dword 0x3fddd3e1e063ea3d
.dword 0x3fcc9e2fc08057f8
.dword 0x3fdeb3bfcbcd1550
.dword 0x3fddd3e1e063ea3d
.dword 0x3fcc9e2fc08057f8
.dword 0x3fdeb3bfcbcd1550
.dword 0x3fddd3e1e063ea3d
.dword 0x3fcc9e2fc08057f8
.dword 0x3fdebb83a091dab8
.dword 0x3fb8805384bc0131
.dword 0x3fa787e0fcc721b0
.dword 0x3fdebb83a091dab8
.dword 0x3fb8805384bc0131
.dword 0x3fa787e0fcc721b0
.dword 0x3fdebb83a091dab8
.dword 0x3fb8805384bc0131
.dword 0x3fa787e0fcc721b0
.dword 0x3fdebb83a091dab8
.dword 0x3fb8805384bc0131
.dword 0x3fa787e0fcc721b0
.dword 0x3fdebb83a091dab8
.dword 0x3fb8805384bc0131
.dword 0x3fa787e0fcc721b0
.dword 0x3fb6eeec22c7d000
.dword 0x3ffd1e726c40bda2
.dword 0x3fc4de57fda3ae70
.dword 0x3fb6eeec22c7d000
.dword 0x3ffd1e726c40bda2
.dword 0x3fc4de57fda3ae70
.dword 0x3fb6eeec22c7d000
.dword 0x3ffd1e726c40bda2
.dword 0x3fc4de57fda3ae70
.dword 0x3fb6eeec22c7d000
.dword 0x3ffd1e726c40bda2
.dword 0x3fc4de57fda3ae70
.dword 0x3fb6eeec22c7d000
.dword 0x3ffd1e726c40bda2
.dword 0x3fc4de57fda3ae70
.dword 0x3fe3d3bd725a4731
.dword 0x3ff692b78bd43028
.dword 0x3febf8f410fcd4a2
.dword 0x3fe3d3bd725a4731
.dword 0x3ff692b78bd43028
.dword 0x3febf8f410fcd4a2
.dword 0x3fe3d3bd725a4731
.dword 0x3ff692b78bd43028
.dword 0x3febf8f410fcd4a2
.dword 0x3fe3d3bd725a4731
.dword 0x3ff692b78bd43028
.dword 0x3febf8f410fcd4a2
.dword 0x3fe3d3bd725a4731
.dword 0x3ff692b78bd43028
.dword 0x3febf8f410fcd4a2
.dword 0x3fb2c8dd4b740698
.dword 0x4028d3162be43595
.dword 0x3fed251edf391baf
.dword 0x3fb2c8dd4b740698
.dword 0x4028d3162be43595
.dword 0x3fed251edf391baf
.dword 0x3fb2c8dd4b740698
.dword 0x4028d3162be43595
.dword 0x3fed251edf391baf
.dword 0x3fb2c8dd4b740698
.dword 0x4028d3162be43595
.dword 0x3fed251edf391baf
.dword 0x3fb2c8dd4b740698
.dword 0x4028d3162be43595
.dword 0x3fed251edf391baf
.dword 0x3fd828ef8b098dee
.dword 0x3fe3a572b24d172f
.dword 0x3fcdaa6fcc4bbaa4
.dword 0x3fd828ef8b098dee
.dword 0x3fe3a572b24d172f
.dword 0x3fcdaa6fcc4bbaa4
.dword 0x3fd828ef8b098dee
.dword 0x3fe3a572b24d172f
.dword 0x3fcdaa6fcc4bbaa4
.dword 0x3fd828ef8b098dee
.dword 0x3fe3a572b24d172f
.dword 0x3fcdaa6fcc4bbaa4
.dword 0x3fd828ef8b098dee
.dword 0x3fe3a572b24d172f
.dword 0x3fcdaa6fcc4bbaa4
.dword 0x3fe63e11574b1ce4
.dword 0x3ff51e88a0ec1c83
.dword 0x3fed5be9125e914b
.dword 0x3fe63e11574b1ce4
.dword 0x3ff51e88a0ec1c83
.dword 0x3fed5be9125e914b
.dword 0x3fe63e11574b1ce4
.dword 0x3ff51e88a0ec1c83
.dword 0x3fed5be9125e914b
.dword 0x3fe63e11574b1ce4
.dword 0x3ff51e88a0ec1c83
.dword 0x3fed5be9125e914b
.dword 0x3fe63e11574b1ce4
.dword 0x3ff51e88a0ec1c83
.dword 0x3fed5be9125e914b
.dword 0x3fe46341571b5618
.dword 0x3ff8fa8908f35c64
.dword 0x3fefd41f7ce13ff5
.dword 0x3fe46341571b5618
.dword 0x3ff8fa8908f35c64
.dword 0x3fefd41f7ce13ff5
.dword 0x3fe46341571b5618
.dword 0x3ff8fa8908f35c64
.dword 0x3fefd41f7ce13ff5
.dword 0x3fe46341571b5618
.dword 0x3ff8fa8908f35c64
.dword 0x3fefd41f7ce13ff5
.dword 0x3fe46341571b5618
.dword 0x3ff8fa8908f35c64
.dword 0x3fefd41f7ce13ff5
.dword 0x3fe420dddda585dd
.dword 0x3fcd80318fda4da2
.dword 0x3fc28e6bb5248300
.dword 0x3fe420dddda585dd
.dword 0x3fcd80318fda4da2
.dword 0x3fc28e6bb5248300
.dword 0x3fe420dddda585dd
.dword 0x3fcd80318fda4da2
.dword 0x3fc28e6bb5248300
.dword 0x3fe420dddda585dd
.dword 0x3fcd80318fda4da2
.dword 0x3fc28e6bb5248300
.dword 0x3fe420dddda585dd
.dword 0x3fcd80318fda4da2
.dword 0x3fc28e6bb5248300
.dword 0x3fe7f111b6b8f93f
.dword 0x3ff28b6fe7e393b5
.dword 0x3febbfd9aadb5bef
.dword 0x3fe7f111b6b8f93f
.dword 0x3ff28b6fe7e393b5
.dword 0x3febbfd9aadb5bef
.dword 0x3fe7f111b6b8f93f
.dword 0x3ff28b6fe7e393b5
.dword 0x3febbfd9aadb5bef
.dword 0x3fe7f111b6b8f93f
.dword 0x3ff28b6fe7e393b5
.dword 0x3febbfd9aadb5bef
.dword 0x3fe7f111b6b8f93f
.dword 0x3ff28b6fe7e393b5
.dword 0x3febbfd9aadb5bef
.dword 0x3fc28f78cfd45220
.dword 0x401244a5dfb763ca
.dword 0x3fe5310a16546287
.dword 0x3fc28f78cfd45220
.dword 0x401244a5dfb763ca
.dword 0x3fe5310a16546287
.dword 0x3fc28f78cfd45220
.dword 0x401244a5dfb763ca
.dword 0x3fe5310a16546287
.dword 0x3fc28f78cfd45220
.dword 0x401244a5dfb763ca
.dword 0x3fe5310a16546287
.dword 0x3fc28f78cfd45220
.dword 0x401244a5dfb763ca
.dword 0x3fe5310a16546287
.dword 0x3fb4b29cb1576348
.dword 0x3ff9c6f631e36b2d
.dword 0x3fc0ac3ad16ebde0
.dword 0x3fb4b29cb1576348
.dword 0x3ff9c6f631e36b2d
.dword 0x3fc0ac3ad16ebde0
.dword 0x3fb4b29cb1576348
.dword 0x3ff9c6f631e36b2d
.dword 0x3fc0ac3ad16ebde0
.dword 0x3fb4b29cb1576348
.dword 0x3ff9c6f631e36b2d
.dword 0x3fc0ac3ad16ebde0
.dword 0x3fb4b29cb1576348
.dword 0x3ff9c6f631e36b2d
.dword 0x3fc0ac3ad16ebde0
.dword 0x3fb9c43d93929920
.dword 0x4020cdbd0b5dfd94
.dword 0x3feb0f9058eb05f7
.dword 0x3fb9c43d93929920
.dword 0x4020cdbd0b5dfd94
.dword 0x3feb0f9058eb05f7
.dword 0x3fb9c43d93929920
.dword 0x4020cdbd0b5dfd94
.dword 0x3feb0f9058eb05f7
.dword 0x3fb9c43d93929920
.dword 0x4020cdbd0b5dfd94
.dword 0x3feb0f9058eb05f7
.dword 0x3fb9c43d93929920
.dword 0x4020cdbd0b5dfd94
.dword 0x3feb0f9058eb05f7
.dword 0x3fe0f21c0f23711a
.dword 0x3fd31ba3f37b74ae
.dword 0x3fc43cc785b14748
.dword 0x3fe0f21c0f23711a
.dword 0x3fd31ba3f37b74ae
.dword 0x3fc43cc785b14748
.dword 0x3fe0f21c0f23711a
.dword 0x3fd31ba3f37b74ae
.dword 0x3fc43cc785b14748
.dword 0x3fe0f21c0f23711a
.dword 0x3fd31ba3f37b74ae
.dword 0x3fc43cc785b14748
.dword 0x3fe0f21c0f23711a
.dword 0x3fd31ba3f37b74ae
.dword 0x3fc43cc785b14748
.dword 0x3fd3913db3ab0a14
.dword 0x3fe3b78f0844a256
.dword 0x3fc81cf5634614ac
.dword 0x3fd3913db3ab0a14
.dword 0x3fe3b78f0844a256
.dword 0x3fc81cf5634614ac
.dword 0x3fd3913db3ab0a14
.dword 0x3fe3b78f0844a256
.dword 0x3fc81cf5634614ac
.dword 0x3fd3913db3ab0a14
.dword 0x3fe3b78f0844a256
.dword 0x3fc81cf5634614ac
.dword 0x3fd3913db3ab0a14
.dword 0x3fe3b78f0844a256
.dword 0x3fc81cf5634614ac
.dword 0x3fc1b1f4a2164804
.dword 0x400b27015edf9013
.dword 0x3fde077019dcb6c8
.dword 0x3fc1b1f4a2164804
.dword 0x400b27015edf9013
.dword 0x3fde077019dcb6c8
.dword 0x3fc1b1f4a2164804
.dword 0x400b27015edf9013
.dword 0x3fde077019dcb6c8
.dword 0x3fc1b1f4a2164804
.dword 0x400b27015edf9013
.dword 0x3fde077019dcb6c8
.dword 0x3fc1b1f4a2164804
.dword 0x400b27015edf9013
.dword 0x3fde077019dcb6c8
.dword 0x3fda114284dadecc
.dword 0x3ff4acb87d814d07
.dword 0x3fe0d77ca20e1fc2
.dword 0x3fda114284dadecc
.dword 0x3ff4acb87d814d07
.dword 0x3fe0d77ca20e1fc2
.dword 0x3fda114284dadecc
.dword 0x3ff4acb87d814d07
.dword 0x3fe0d77ca20e1fc2
.dword 0x3fda114284dadecc
.dword 0x3ff4acb87d814d07
.dword 0x3fe0d77ca20e1fc2
.dword 0x3fda114284dadecc
.dword 0x3ff4acb87d814d07
.dword 0x3fe0d77ca20e1fc2
.dword 0x3fdf21b2aeb75d6a
.dword 0x3ffcf2c8ff8d2975
.dword 0x3fec29aebb645d1a
.dword 0x3fdf21b2aeb75d6a
.dword 0x3ffcf2c8ff8d2975
.dword 0x3fec29aebb645d1a
.dword 0x3fdf21b2aeb75d6a
.dword 0x3ffcf2c8ff8d2975
.dword 0x3fec29aebb645d1a
.dword 0x3fdf21b2aeb75d6a
.dword 0x3ffcf2c8ff8d2975
.dword 0x3fec29aebb645d1a
.dword 0x3fdf21b2aeb75d6a
.dword 0x3ffcf2c8ff8d2975
.dword 0x3fec29aebb645d1a
.dword 0x3faa95ce8494dbc0
.dword 0x400d587353ac4e00
.dword 0x3fc8613eeff562a4
.dword 0x3faa95ce8494dbc0
.dword 0x400d587353ac4e00
.dword 0x3fc8613eeff562a4
.dword 0x3faa95ce8494dbc0
.dword 0x400d587353ac4e00
.dword 0x3fc8613eeff562a4
.dword 0x3faa95ce8494dbc0
.dword 0x400d587353ac4e00
.dword 0x3fc8613eeff562a4
.dword 0x3faa95ce8494dbc0
.dword 0x400d587353ac4e00
.dword 0x3fc8613eeff562a4
.dword 0x3fc887509d2ebf38
.dword 0x4001b2c8c8d10d56
.dword 0x3fdb21dad721ebae
.dword 0x3fc887509d2ebf38
.dword 0x4001b2c8c8d10d56
.dword 0x3fdb21dad721ebae
.dword 0x3fc887509d2ebf38
.dword 0x4001b2c8c8d10d56
.dword 0x3fdb21dad721ebae
.dword 0x3fc887509d2ebf38
.dword 0x4001b2c8c8d10d56
.dword 0x3fdb21dad721ebae
.dword 0x3fc887509d2ebf38
.dword 0x4001b2c8c8d10d56
.dword 0x3fdb21dad721ebae
.dword 0x3fe9d6c84cf7bddb
.dword 0x3fe5dbf0586b27dc
.dword 0x3fe1a68b6f94c286
.dword 0x3fe9d6c84cf7bddb
.dword 0x3fe5dbf0586b27dc
.dword 0x3fe1a68b6f94c286
.dword 0x3fe9d6c84cf7bddb
.dword 0x3fe5dbf0586b27dc
.dword 0x3fe1a68b6f94c286
.dword 0x3fe9d6c84cf7bddb
.dword 0x3fe5dbf0586b27dc
.dword 0x3fe1a68b6f94c286
.dword 0x3fe9d6c84cf7bddb
.dword 0x3fe5dbf0586b27dc
.dword 0x3fe1a68b6f94c286
.dword 0x3feb9f8ddecdc410
.dword 0x3fc099acd554292f
.dword 0x3fbca8ddfef2cc40
.dword 0x3feb9f8ddecdc410
.dword 0x3fc099acd554292f
.dword 0x3fbca8ddfef2cc40
.dword 0x3feb9f8ddecdc410
.dword 0x3fc099acd554292f
.dword 0x3fbca8ddfef2cc40
.dword 0x3feb9f8ddecdc410
.dword 0x3fc099acd554292f
.dword 0x3fbca8ddfef2cc40
.dword 0x3feb9f8ddecdc410
.dword 0x3fc099acd554292f
.dword 0x3fbca8ddfef2cc40
.dword 0x3fe0a045fc492db6
.dword 0x3ff679c593af2a8c
.dword 0x3fe75ae99afcc2bb
.dword 0x3fe0a045fc492db6
.dword 0x3ff679c593af2a8c
.dword 0x3fe75ae99afcc2bb
.dword 0x3fe0a045fc492db6
.dword 0x3ff679c593af2a8c
.dword 0x3fe75ae99afcc2bb
.dword 0x3fe0a045fc492db6
.dword 0x3ff679c593af2a8c
.dword 0x3fe75ae99afcc2bb
.dword 0x3fe0a045fc492db6
.dword 0x3ff679c593af2a8c
.dword 0x3fe75ae99afcc2bb
.dword 0x3fdbeee583dc04b2
.dword 0x3feb5b6b10bb56a2
.dword 0x3fd7e15e795b08fa
.dword 0x3fdbeee583dc04b2
.dword 0x3feb5b6b10bb56a2
.dword 0x3fd7e15e795b08fa
.dword 0x3fdbeee583dc04b2
.dword 0x3feb5b6b10bb56a2
.dword 0x3fd7e15e795b08fa
.dword 0x3fdbeee583dc04b2
.dword 0x3feb5b6b10bb56a2
.dword 0x3fd7e15e795b08fa
.dword 0x3fdbeee583dc04b2
.dword 0x3feb5b6b10bb56a2
.dword 0x3fd7e15e795b08fa
.dword 0x3fe3b70e8812730f
.dword 0x3fe518d6577aadd7
.dword 0x3fd9feddc49137ae
.dword 0x3fe3b70e8812730f
.dword 0x3fe518d6577aadd7
.dword 0x3fd9feddc49137ae
.dword 0x3fe3b70e8812730f
.dword 0x3fe518d6577aadd7
.dword 0x3fd9feddc49137ae
.dword 0x3fe3b70e8812730f
.dword 0x3fe518d6577aadd7
.dword 0x3fd9feddc49137ae
.dword 0x3fe3b70e8812730f
.dword 0x3fe518d6577aadd7
.dword 0x3fd9feddc49137ae
.dword 0x3fea2e57e7073430
.dword 0x3f9c8eb505dd966d
.dword 0x3f975d4eab253940
.dword 0x3fea2e57e7073430
.dword 0x3f9c8eb505dd966d
.dword 0x3f975d4eab253940
.dword 0x3fea2e57e7073430
.dword 0x3f9c8eb505dd966d
.dword 0x3f975d4eab253940
.dword 0x3fea2e57e7073430
.dword 0x3f9c8eb505dd966d
.dword 0x3f975d4eab253940
.dword 0x3fea2e57e7073430
.dword 0x3f9c8eb505dd966d
.dword 0x3f975d4eab253940
.dword 0x3febc38b337f0b3e
.dword 0x3fe56bb61e719328
.dword 0x3fe295c735d121c2
.dword 0x3febc38b337f0b3e
.dword 0x3fe56bb61e719328
.dword 0x3fe295c735d121c2
.dword 0x3febc38b337f0b3e
.dword 0x3fe56bb61e719328
.dword 0x3fe295c735d121c2
.dword 0x3febc38b337f0b3e
.dword 0x3fe56bb61e719328
.dword 0x3fe295c735d121c2
.dword 0x3febc38b337f0b3e
.dword 0x3fe56bb61e719328
.dword 0x3fe295c735d121c2
.dword 0x3fda3166bb120104
.dword 0x3ffc69a71909b85b
.dword 0x3fe741b4c314414a
.dword 0x3fda3166bb120104
.dword 0x3ffc69a71909b85b
.dword 0x3fe741b4c314414a
.dword 0x3fda3166bb120104
.dword 0x3ffc69a71909b85b
.dword 0x3fe741b4c314414a
.dword 0x3fda3166bb120104
.dword 0x3ffc69a71909b85b
.dword 0x3fe741b4c314414a
.dword 0x3fda3166bb120104
.dword 0x3ffc69a71909b85b
.dword 0x3fe741b4c314414a
.dword 0x3fc5f93dabc7e57c
.dword 0x401542ea40496169
.dword 0x3fed3306c54aa3b1
.dword 0x3fc5f93dabc7e57c
.dword 0x401542ea40496169
.dword 0x3fed3306c54aa3b1
.dword 0x3fc5f93dabc7e57c
.dword 0x401542ea40496169
.dword 0x3fed3306c54aa3b1
.dword 0x3fc5f93dabc7e57c
.dword 0x401542ea40496169
.dword 0x3fed3306c54aa3b1
.dword 0x3fc5f93dabc7e57c
.dword 0x401542ea40496169
.dword 0x3fed3306c54aa3b1
.dword 0x3fedd239a60f6c26
.dword 0x3ff11fec1eaf3e8b
.dword 0x3fefeadca6253e2d
.dword 0x3fedd239a60f6c26
.dword 0x3ff11fec1eaf3e8b
.dword 0x3fefeadca6253e2d
.dword 0x3fedd239a60f6c26
.dword 0x3ff11fec1eaf3e8b
.dword 0x3fefeadca6253e2d
.dword 0x3fedd239a60f6c26
.dword 0x3ff11fec1eaf3e8b
.dword 0x3fefeadca6253e2d
.dword 0x3fedd239a60f6c26
.dword 0x3ff11fec1eaf3e8b
.dword 0x3fefeadca6253e2d
.dword 0x3feb8a0a63e0df83
.dword 0x3ff268b076b3a4fa
.dword 0x3fefaf7caea7bcb4
.dword 0x3feb8a0a63e0df83
.dword 0x3ff268b076b3a4fa
.dword 0x3fefaf7caea7bcb4
.dword 0x3feb8a0a63e0df83
.dword 0x3ff268b076b3a4fa
.dword 0x3fefaf7caea7bcb4
.dword 0x3feb8a0a63e0df83
.dword 0x3ff268b076b3a4fa
.dword 0x3fefaf7caea7bcb4
.dword 0x3feb8a0a63e0df83
.dword 0x3ff268b076b3a4fa
.dword 0x3fefaf7caea7bcb4
.dword 0x3fc571cbd075fc78
.dword 0x4016a3d704d8d304
.dword 0x3fee580fba9fbc58
.dword 0x3fc571cbd075fc78
.dword 0x4016a3d704d8d304
.dword 0x3fee580fba9fbc58
.dword 0x3fc571cbd075fc78
.dword 0x4016a3d704d8d304
.dword 0x3fee580fba9fbc58
.dword 0x3fc571cbd075fc78
.dword 0x4016a3d704d8d304
.dword 0x3fee580fba9fbc58
.dword 0x3fc571cbd075fc78
.dword 0x4016a3d704d8d304
.dword 0x3fee580fba9fbc58
.dword 0x3faaaf0baa339640
.dword 0x4025a8729a5e20c2
.dword 0x3fe20f563541dd6d
.dword 0x3faaaf0baa339640
.dword 0x4025a8729a5e20c2
.dword 0x3fe20f563541dd6d
.dword 0x3faaaf0baa339640
.dword 0x4025a8729a5e20c2
.dword 0x3fe20f563541dd6d
.dword 0x3faaaf0baa339640
.dword 0x4025a8729a5e20c2
.dword 0x3fe20f563541dd6d
.dword 0x3faaaf0baa339640
.dword 0x4025a8729a5e20c2
.dword 0x3fe20f563541dd6d
.dword 0x3fef1a83a28efc59
.dword 0x3fb4b9343189713d
.dword 0x3fb4249649d941a8
.dword 0x3fef1a83a28efc59
.dword 0x3fb4b9343189713d
.dword 0x3fb4249649d941a8
.dword 0x3fef1a83a28efc59
.dword 0x3fb4b9343189713d
.dword 0x3fb4249649d941a8
.dword 0x3fef1a83a28efc59
.dword 0x3fb4b9343189713d
.dword 0x3fb4249649d941a8
.dword 0x3fef1a83a28efc59
.dword 0x3fb4b9343189713d
.dword 0x3fb4249649d941a8
.dword 0x3fec408ee3185172
.dword 0x3fade1d1fca45333
.dword 0x3faa61e0cf2d8190
.dword 0x3fec408ee3185172
.dword 0x3fade1d1fca45333
.dword 0x3faa61e0cf2d8190
.dword 0x3fec408ee3185172
.dword 0x3fade1d1fca45333
.dword 0x3faa61e0cf2d8190
.dword 0x3fec408ee3185172
.dword 0x3fade1d1fca45333
.dword 0x3faa61e0cf2d8190
.dword 0x3fec408ee3185172
.dword 0x3fade1d1fca45333
.dword 0x3faa61e0cf2d8190
.dword 0x3feef3c8c28d42c2
.dword 0x3fe4efdfb75879aa
.dword 0x3fe44062a13c1cbb
.dword 0x3feef3c8c28d42c2
.dword 0x3fe4efdfb75879aa
.dword 0x3fe44062a13c1cbb
.dword 0x3feef3c8c28d42c2
.dword 0x3fe4efdfb75879aa
.dword 0x3fe44062a13c1cbb
.dword 0x3feef3c8c28d42c2
.dword 0x3fe4efdfb75879aa
.dword 0x3fe44062a13c1cbb
.dword 0x3feef3c8c28d42c2
.dword 0x3fe4efdfb75879aa
.dword 0x3fe44062a13c1cbb
.dword 0x3fed009521a915b8
.dword 0x3fdc92ca2d8ff90e
.dword 0x3fd9e58c62d638fa
.dword 0x3fed009521a915b8
.dword 0x3fdc92ca2d8ff90e
.dword 0x3fd9e58c62d638fa
.dword 0x3fed009521a915b8
.dword 0x3fdc92ca2d8ff90e
.dword 0x3fd9e58c62d638fa
.dword 0x3fed009521a915b8
.dword 0x3fdc92ca2d8ff90e
.dword 0x3fd9e58c62d638fa
.dword 0x3fed009521a915b8
.dword 0x3fdc92ca2d8ff90e
.dword 0x3fd9e58c62d638fa
.dword 0x3fd43b2ba55a28ae
.dword 0x3fe6929bde22d68d
.dword 0x3fcc8abd07b8ab18
.dword 0x3fd43b2ba55a28ae
.dword 0x3fe6929bde22d68d
.dword 0x3fcc8abd07b8ab18
.dword 0x3fd43b2ba55a28ae
.dword 0x3fe6929bde22d68d
.dword 0x3fcc8abd07b8ab18
.dword 0x3fd43b2ba55a28ae
.dword 0x3fe6929bde22d68d
.dword 0x3fcc8abd07b8ab18
.dword 0x3fd43b2ba55a28ae
.dword 0x3fe6929bde22d68d
.dword 0x3fcc8abd07b8ab18
.dword 0x3f7404360ffea780
.dword 0x404ddb38b4ee0625
.dword 0x3fd2acf149076dd8
.dword 0x3f7404360ffea780
.dword 0x404ddb38b4ee0625
.dword 0x3fd2acf149076dd8
.dword 0x3f7404360ffea780
.dword 0x404ddb38b4ee0625
.dword 0x3fd2acf149076dd8
.dword 0x3f7404360ffea780
.dword 0x404ddb38b4ee0625
.dword 0x3fd2acf149076dd8
.dword 0x3f7404360ffea780
.dword 0x404ddb38b4ee0625
.dword 0x3fd2acf149076dd8
.dword 0x3fcacfbea44a62e8
.dword 0x3ff37ed2c48e0db8
.dword 0x3fd0559bc8359ad2
.dword 0x3fcacfbea44a62e8
.dword 0x3ff37ed2c48e0db8
.dword 0x3fd0559bc8359ad2
.dword 0x3fcacfbea44a62e8
.dword 0x3ff37ed2c48e0db8
.dword 0x3fd0559bc8359ad2
.dword 0x3fcacfbea44a62e8
.dword 0x3ff37ed2c48e0db8
.dword 0x3fd0559bc8359ad2
.dword 0x3fcacfbea44a62e8
.dword 0x3ff37ed2c48e0db8
.dword 0x3fd0559bc8359ad2
.dword 0x3fda193647e5242a
.dword 0x3ffd3ba8ac046c11
.dword 0x3fe7d7813de44fc0
.dword 0x3fda193647e5242a
.dword 0x3ffd3ba8ac046c11
.dword 0x3fe7d7813de44fc0
.dword 0x3fda193647e5242a
.dword 0x3ffd3ba8ac046c11
.dword 0x3fe7d7813de44fc0
.dword 0x3fda193647e5242a
.dword 0x3ffd3ba8ac046c11
.dword 0x3fe7d7813de44fc0
.dword 0x3fda193647e5242a
.dword 0x3ffd3ba8ac046c11
.dword 0x3fe7d7813de44fc0
.dword 0x3fcb31c955af3a98
.dword 0x400d992174cdd863
.dword 0x3fe92740eee383f3
.dword 0x3fcb31c955af3a98
.dword 0x400d992174cdd863
.dword 0x3fe92740eee383f3
.dword 0x3fcb31c955af3a98
.dword 0x400d992174cdd863
.dword 0x3fe92740eee383f3
.dword 0x3fcb31c955af3a98
.dword 0x400d992174cdd863
.dword 0x3fe92740eee383f3
.dword 0x3fcb31c955af3a98
.dword 0x400d992174cdd863
.dword 0x3fe92740eee383f3
.dword 0x3fc2037185881204
.dword 0x3ff925c94b822777
.dword 0x3fcc4febf76e30d8
.dword 0x3fc2037185881204
.dword 0x3ff925c94b822777
.dword 0x3fcc4febf76e30d8
.dword 0x3fc2037185881204
.dword 0x3ff925c94b822777
.dword 0x3fcc4febf76e30d8
.dword 0x3fc2037185881204
.dword 0x3ff925c94b822777
.dword 0x3fcc4febf76e30d8
.dword 0x3fc2037185881204
.dword 0x3ff925c94b822777
.dword 0x3fcc4febf76e30d8
.dword 0x3fe1cfe49f127d25
.dword 0x3ff6ef1eea9c3ec3
.dword 0x3fe9880e2cbc9aed
.dword 0x3fe1cfe49f127d25
.dword 0x3ff6ef1eea9c3ec3
.dword 0x3fe9880e2cbc9aed
.dword 0x3fe1cfe49f127d25
.dword 0x3ff6ef1eea9c3ec3
.dword 0x3fe9880e2cbc9aed
.dword 0x3fe1cfe49f127d25
.dword 0x3ff6ef1eea9c3ec3
.dword 0x3fe9880e2cbc9aed
.dword 0x3fe1cfe49f127d25
.dword 0x3ff6ef1eea9c3ec3
.dword 0x3fe9880e2cbc9aed
.dword 0x3fd6569842555b14
.dword 0x40005771b83164cc
.dword 0x3fe6d0ade2fa2c95
.dword 0x3fd6569842555b14
.dword 0x40005771b83164cc
.dword 0x3fe6d0ade2fa2c95
.dword 0x3fd6569842555b14
.dword 0x40005771b83164cc
.dword 0x3fe6d0ade2fa2c95
.dword 0x3fd6569842555b14
.dword 0x40005771b83164cc
.dword 0x3fe6d0ade2fa2c95
.dword 0x3fd6569842555b14
.dword 0x40005771b83164cc
.dword 0x3fe6d0ade2fa2c95
.dword 0x3fd4bd73480df80e
.dword 0x3feab77da4b361b8
.dword 0x3fd150da8498ecc8
.dword 0x3fd4bd73480df80e
.dword 0x3feab77da4b361b8
.dword 0x3fd150da8498ecc8
.dword 0x3fd4bd73480df80e
.dword 0x3feab77da4b361b8
.dword 0x3fd150da8498ecc8
.dword 0x3fd4bd73480df80e
.dword 0x3feab77da4b361b8
.dword 0x3fd150da8498ecc8
.dword 0x3fd4bd73480df80e
.dword 0x3feab77da4b361b8
.dword 0x3fd150da8498ecc8
.dword 0x3fb487eedf071008
.dword 0x4008ed36a783bd36
.dword 0x3fcffc49f28c3a58
.dword 0x3fb487eedf071008
.dword 0x4008ed36a783bd36
.dword 0x3fcffc49f28c3a58
.dword 0x3fb487eedf071008
.dword 0x4008ed36a783bd36
.dword 0x3fcffc49f28c3a58
.dword 0x3fb487eedf071008
.dword 0x4008ed36a783bd36
.dword 0x3fcffc49f28c3a58
.dword 0x3fb487eedf071008
.dword 0x4008ed36a783bd36
.dword 0x3fcffc49f28c3a58
.dword 0x3f91273e693dc880
.dword 0x404c5b0e1da72827
.dword 0x3fee664b8d43a021
.dword 0x3f91273e693dc880
.dword 0x404c5b0e1da72827
.dword 0x3fee664b8d43a021
.dword 0x3f91273e693dc880
.dword 0x404c5b0e1da72827
.dword 0x3fee664b8d43a021
.dword 0x3f91273e693dc880
.dword 0x404c5b0e1da72827
.dword 0x3fee664b8d43a021
.dword 0x3f91273e693dc880
.dword 0x404c5b0e1da72827
.dword 0x3fee664b8d43a021
.dword 0x3fec287b4c2af288
.dword 0x3ff024783d5d141f
.dword 0x3fec68a9fd313334
.dword 0x3fec287b4c2af288
.dword 0x3ff024783d5d141f
.dword 0x3fec68a9fd313334
.dword 0x3fec287b4c2af288
.dword 0x3ff024783d5d141f
.dword 0x3fec68a9fd313334
.dword 0x3fec287b4c2af288
.dword 0x3ff024783d5d141f
.dword 0x3fec68a9fd313334
.dword 0x3fec287b4c2af288
.dword 0x3ff024783d5d141f
.dword 0x3fec68a9fd313334
.dword 0x3fea9abae86cce36
.dword 0x3fda118acb5fc403
.dword 0x3fd5ac4d747f1bb2
.dword 0x3fea9abae86cce36
.dword 0x3fda118acb5fc403
.dword 0x3fd5ac4d747f1bb2
.dword 0x3fea9abae86cce36
.dword 0x3fda118acb5fc403
.dword 0x3fd5ac4d747f1bb2
.dword 0x3fea9abae86cce36
.dword 0x3fda118acb5fc403
.dword 0x3fd5ac4d747f1bb2
.dword 0x3fea9abae86cce36
.dword 0x3fda118acb5fc403
.dword 0x3fd5ac4d747f1bb2
.dword 0x3fd1a78dc369aa80
.dword 0x3fdf805fdbd17127
.dword 0x3fc161246f0f1eec
.dword 0x3fd1a78dc369aa80
.dword 0x3fdf805fdbd17127
.dword 0x3fc161246f0f1eec
.dword 0x3fd1a78dc369aa80
.dword 0x3fdf805fdbd17127
.dword 0x3fc161246f0f1eec
.dword 0x3fd1a78dc369aa80
.dword 0x3fdf805fdbd17127
.dword 0x3fc161246f0f1eec
.dword 0x3fd1a78dc369aa80
.dword 0x3fdf805fdbd17127
.dword 0x3fc161246f0f1eec
.dword 0x3fe69ba9c3a10fd9
.dword 0x3fe7f5457c198ba6
.dword 0x3fe0ed2ae7b0d875
.dword 0x3fe69ba9c3a10fd9
.dword 0x3fe7f5457c198ba6
.dword 0x3fe0ed2ae7b0d875
.dword 0x3fe69ba9c3a10fd9
.dword 0x3fe7f5457c198ba6
.dword 0x3fe0ed2ae7b0d875
.dword 0x3fe69ba9c3a10fd9
.dword 0x3fe7f5457c198ba6
.dword 0x3fe0ed2ae7b0d875
.dword 0x3fe69ba9c3a10fd9
.dword 0x3fe7f5457c198ba6
.dword 0x3fe0ed2ae7b0d875
.dword 0x3fdbd2045a7fa026
.dword 0x3fc6e2c3fdfbbbc1
.dword 0x3fb3e588a190b7e8
.dword 0x3fdbd2045a7fa026
.dword 0x3fc6e2c3fdfbbbc1
.dword 0x3fb3e588a190b7e8
.dword 0x3fdbd2045a7fa026
.dword 0x3fc6e2c3fdfbbbc1
.dword 0x3fb3e588a190b7e8
.dword 0x3fdbd2045a7fa026
.dword 0x3fc6e2c3fdfbbbc1
.dword 0x3fb3e588a190b7e8
.dword 0x3fdbd2045a7fa026
.dword 0x3fc6e2c3fdfbbbc1
.dword 0x3fb3e588a190b7e8
.dword 0x3fcb56fd497d90e0
.dword 0x400d01701e6484ea
.dword 0x3fe8c8100cf2074a
.dword 0x3fcb56fd497d90e0
.dword 0x400d01701e6484ea
.dword 0x3fe8c8100cf2074a
.dword 0x3fcb56fd497d90e0
.dword 0x400d01701e6484ea
.dword 0x3fe8c8100cf2074a
.dword 0x3fcb56fd497d90e0
.dword 0x400d01701e6484ea
.dword 0x3fe8c8100cf2074a
.dword 0x3fcb56fd497d90e0
.dword 0x400d01701e6484ea
.dword 0x3fe8c8100cf2074a
.dword 0x3feef85fc3c2af94
.dword 0x3fde3c96179fca73
.dword 0x3fdd437cbe33a224
.dword 0x3feef85fc3c2af94
.dword 0x3fde3c96179fca73
.dword 0x3fdd437cbe33a224
.dword 0x3feef85fc3c2af94
.dword 0x3fde3c96179fca73
.dword 0x3fdd437cbe33a224
.dword 0x3feef85fc3c2af94
.dword 0x3fde3c96179fca73
.dword 0x3fdd437cbe33a224
.dword 0x3feef85fc3c2af94
.dword 0x3fde3c96179fca73
.dword 0x3fdd437cbe33a224
.dword 0x3feccb9a094e1988
.dword 0x3fe67d0a7a1ec198
.dword 0x3fe43c7ea59e15e2
.dword 0x3feccb9a094e1988
.dword 0x3fe67d0a7a1ec198
.dword 0x3fe43c7ea59e15e2
.dword 0x3feccb9a094e1988
.dword 0x3fe67d0a7a1ec198
.dword 0x3fe43c7ea59e15e2
.dword 0x3feccb9a094e1988
.dword 0x3fe67d0a7a1ec198
.dword 0x3fe43c7ea59e15e2
.dword 0x3feccb9a094e1988
.dword 0x3fe67d0a7a1ec198
.dword 0x3fe43c7ea59e15e2
.dword 0x3fec5542916582f3
.dword 0x3fd4e2f61ec1bc22
.dword 0x3fd27e3dabad83b6
.dword 0x3fec5542916582f3
.dword 0x3fd4e2f61ec1bc22
.dword 0x3fd27e3dabad83b6
.dword 0x3fec5542916582f3
.dword 0x3fd4e2f61ec1bc22
.dword 0x3fd27e3dabad83b6
.dword 0x3fec5542916582f3
.dword 0x3fd4e2f61ec1bc22
.dword 0x3fd27e3dabad83b6
.dword 0x3fec5542916582f3
.dword 0x3fd4e2f61ec1bc22
.dword 0x3fd27e3dabad83b6
.dword 0x3feeb95f861c7629
.dword 0x3fd0111a568f20fd
.dword 0x3fceda370f0d67e4
.dword 0x3feeb95f861c7629
.dword 0x3fd0111a568f20fd
.dword 0x3fceda370f0d67e4
.dword 0x3feeb95f861c7629
.dword 0x3fd0111a568f20fd
.dword 0x3fceda370f0d67e4
.dword 0x3feeb95f861c7629
.dword 0x3fd0111a568f20fd
.dword 0x3fceda370f0d67e4
.dword 0x3feeb95f861c7629
.dword 0x3fd0111a568f20fd
.dword 0x3fceda370f0d67e4
.dword 0x3fe3b08c3fb3f140
.dword 0x3ff86a62184a7c31
.dword 0x3fee0bbcb7f373e9
.dword 0x3fe3b08c3fb3f140
.dword 0x3ff86a62184a7c31
.dword 0x3fee0bbcb7f373e9
.dword 0x3fe3b08c3fb3f140
.dword 0x3ff86a62184a7c31
.dword 0x3fee0bbcb7f373e9
.dword 0x3fe3b08c3fb3f140
.dword 0x3ff86a62184a7c31
.dword 0x3fee0bbcb7f373e9
.dword 0x3fe3b08c3fb3f140
.dword 0x3ff86a62184a7c31
.dword 0x3fee0bbcb7f373e9
.dword 0x3feabf756d3d3025
.dword 0x3fdcad4efb05bc11
.dword 0x3fd7f863d6ece360
.dword 0x3feabf756d3d3025
.dword 0x3fdcad4efb05bc11
.dword 0x3fd7f863d6ece360
.dword 0x3feabf756d3d3025
.dword 0x3fdcad4efb05bc11
.dword 0x3fd7f863d6ece360
.dword 0x3feabf756d3d3025
.dword 0x3fdcad4efb05bc11
.dword 0x3fd7f863d6ece360
.dword 0x3feabf756d3d3025
.dword 0x3fdcad4efb05bc11
.dword 0x3fd7f863d6ece360
.dword 0x3fd557177e84d056
.dword 0x3fb50cb664dd723f
.dword 0x3f9c13436ce02260
.dword 0x3fd557177e84d056
.dword 0x3fb50cb664dd723f
.dword 0x3f9c13436ce02260
.dword 0x3fd557177e84d056
.dword 0x3fb50cb664dd723f
.dword 0x3f9c13436ce02260
.dword 0x3fd557177e84d056
.dword 0x3fb50cb664dd723f
.dword 0x3f9c13436ce02260
.dword 0x3fd557177e84d056
.dword 0x3fb50cb664dd723f
.dword 0x3f9c13436ce02260
.dword 0x3fc8ed4fa41d2b08
.dword 0x4009c9fc97013bf7
.dword 0x3fe416bd96e99329
.dword 0x3fc8ed4fa41d2b08
.dword 0x4009c9fc97013bf7
.dword 0x3fe416bd96e99329
.dword 0x3fc8ed4fa41d2b08
.dword 0x4009c9fc97013bf7
.dword 0x3fe416bd96e99329
.dword 0x3fc8ed4fa41d2b08
.dword 0x4009c9fc97013bf7
.dword 0x3fe416bd96e99329
.dword 0x3fc8ed4fa41d2b08
.dword 0x4009c9fc97013bf7
.dword 0x3fe416bd96e99329
.dword 0x3fd226f44e216580
.dword 0x3ff404a6e250f952
.dword 0x3fd6b5f873a60a44
.dword 0x3fd226f44e216580
.dword 0x3ff404a6e250f952
.dword 0x3fd6b5f873a60a44
.dword 0x3fd226f44e216580
.dword 0x3ff404a6e250f952
.dword 0x3fd6b5f873a60a44
.dword 0x3fd226f44e216580
.dword 0x3ff404a6e250f952
.dword 0x3fd6b5f873a60a44
.dword 0x3fd226f44e216580
.dword 0x3ff404a6e250f952
.dword 0x3fd6b5f873a60a44
.dword 0x3fdcbb73b1332186
.dword 0x3fe8163e6a1ed26f
.dword 0x3fd5a08faee8ef88
.dword 0x3fdcbb73b1332186
.dword 0x3fe8163e6a1ed26f
.dword 0x3fd5a08faee8ef88
.dword 0x3fdcbb73b1332186
.dword 0x3fe8163e6a1ed26f
.dword 0x3fd5a08faee8ef88
.dword 0x3fdcbb73b1332186
.dword 0x3fe8163e6a1ed26f
.dword 0x3fd5a08faee8ef88
.dword 0x3fdcbb73b1332186
.dword 0x3fe8163e6a1ed26f
.dword 0x3fd5a08faee8ef88
.dword 0x3fe34796909eda5c
.dword 0x3f70db4892c3492a
.dword 0x3f644fd1e0787200
.dword 0x3fe34796909eda5c
.dword 0x3f70db4892c3492a
.dword 0x3f644fd1e0787200
.dword 0x3fe34796909eda5c
.dword 0x3f70db4892c3492a
.dword 0x3f644fd1e0787200
.dword 0x3fe34796909eda5c
.dword 0x3f70db4892c3492a
.dword 0x3f644fd1e0787200
.dword 0x3fe34796909eda5c
.dword 0x3f70db4892c3492a
.dword 0x3f644fd1e0787200
.dword 0x3fe3ce2f25e51222
.dword 0x3fece7a976d35582
.dword 0x3fe1e3ca87f617e9
.dword 0x3fe3ce2f25e51222
.dword 0x3fece7a976d35582
.dword 0x3fe1e3ca87f617e9
.dword 0x3fe3ce2f25e51222
.dword 0x3fece7a976d35582
.dword 0x3fe1e3ca87f617e9
.dword 0x3fe3ce2f25e51222
.dword 0x3fece7a976d35582
.dword 0x3fe1e3ca87f617e9
.dword 0x3fe3ce2f25e51222
.dword 0x3fece7a976d35582
.dword 0x3fe1e3ca87f617e9
.dword 0x3fe9fab4c4f58420
.dword 0x3fea986c6c1a342d
.dword 0x3fe59771c0948a72
.dword 0x3fe9fab4c4f58420
.dword 0x3fea986c6c1a342d
.dword 0x3fe59771c0948a72
.dword 0x3fe9fab4c4f58420
.dword 0x3fea986c6c1a342d
.dword 0x3fe59771c0948a72
.dword 0x3fe9fab4c4f58420
.dword 0x3fea986c6c1a342d
.dword 0x3fe59771c0948a72
.dword 0x3fe9fab4c4f58420
.dword 0x3fea986c6c1a342d
.dword 0x3fe59771c0948a72
.dword 0x3fcb56a6431e5f40
.dword 0x40002598f966223c
.dword 0x3fdb96e404e81174
.dword 0x3fcb56a6431e5f40
.dword 0x40002598f966223c
.dword 0x3fdb96e404e81174
.dword 0x3fcb56a6431e5f40
.dword 0x40002598f966223c
.dword 0x3fdb96e404e81174
.dword 0x3fcb56a6431e5f40
.dword 0x40002598f966223c
.dword 0x3fdb96e404e81174
.dword 0x3fcb56a6431e5f40
.dword 0x40002598f966223c
.dword 0x3fdb96e404e81174
.dword 0x3fe84f2ff9c1858d
.dword 0x3fe2037f7a0de1b8
.dword 0x3fdb5e667ff63e10
.dword 0x3fe84f2ff9c1858d
.dword 0x3fe2037f7a0de1b8
.dword 0x3fdb5e667ff63e10
.dword 0x3fe84f2ff9c1858d
.dword 0x3fe2037f7a0de1b8
.dword 0x3fdb5e667ff63e10
.dword 0x3fe84f2ff9c1858d
.dword 0x3fe2037f7a0de1b8
.dword 0x3fdb5e667ff63e10
.dword 0x3fe84f2ff9c1858d
.dword 0x3fe2037f7a0de1b8
.dword 0x3fdb5e667ff63e10
.dword 0x3feac73290f888b3
.dword 0x3fea23204299f289
.dword 0x3fe5df3df406bb89
.dword 0x3feac73290f888b3
.dword 0x3fea23204299f289
.dword 0x3fe5df3df406bb89
.dword 0x3feac73290f888b3
.dword 0x3fea23204299f289
.dword 0x3fe5df3df406bb89
.dword 0x3feac73290f888b3
.dword 0x3fea23204299f289
.dword 0x3fe5df3df406bb89
.dword 0x3feac73290f888b3
.dword 0x3fea23204299f289
.dword 0x3fe5df3df406bb89
.dword 0x3fb6e4343bf90580
.dword 0x4019fbe4b6baa77b
.dword 0x3fe2967a653c9031
.dword 0x3fb6e4343bf90580
.dword 0x4019fbe4b6baa77b
.dword 0x3fe2967a653c9031
.dword 0x3fb6e4343bf90580
.dword 0x4019fbe4b6baa77b
.dword 0x3fe2967a653c9031
.dword 0x3fb6e4343bf90580
.dword 0x4019fbe4b6baa77b
.dword 0x3fe2967a653c9031
.dword 0x3fb6e4343bf90580
.dword 0x4019fbe4b6baa77b
.dword 0x3fe2967a653c9031
.dword 0x3fe8e8aff137bd98
.dword 0x3fe1ebe75e0b8349
.dword 0x3fdbe67cba473cbc
.dword 0x3fe8e8aff137bd98
.dword 0x3fe1ebe75e0b8349
.dword 0x3fdbe67cba473cbc
.dword 0x3fe8e8aff137bd98
.dword 0x3fe1ebe75e0b8349
.dword 0x3fdbe67cba473cbc
.dword 0x3fe8e8aff137bd98
.dword 0x3fe1ebe75e0b8349
.dword 0x3fdbe67cba473cbc
.dword 0x3fe8e8aff137bd98
.dword 0x3fe1ebe75e0b8349
.dword 0x3fdbe67cba473cbc
.dword 0x3fe392f888d033e8
.dword 0x3ff4526452792ea5
.dword 0x3fe8dc82a0383d47
.dword 0x3fe392f888d033e8
.dword 0x3ff4526452792ea5
.dword 0x3fe8dc82a0383d47
.dword 0x3fe392f888d033e8
.dword 0x3ff4526452792ea5
.dword 0x3fe8dc82a0383d47
.dword 0x3fe392f888d033e8
.dword 0x3ff4526452792ea5
.dword 0x3fe8dc82a0383d47
.dword 0x3fe392f888d033e8
.dword 0x3ff4526452792ea5
.dword 0x3fe8dc82a0383d47
.dword 0x3feb2afe79f880e6
.dword 0x3fe044293842e79f
.dword 0x3fdb9ebb31330ee6
.dword 0x3feb2afe79f880e6
.dword 0x3fe044293842e79f
.dword 0x3fdb9ebb31330ee6
.dword 0x3feb2afe79f880e6
.dword 0x3fe044293842e79f
.dword 0x3fdb9ebb31330ee6
.dword 0x3feb2afe79f880e6
.dword 0x3fe044293842e79f
.dword 0x3fdb9ebb31330ee6
.dword 0x3feb2afe79f880e6
.dword 0x3fe044293842e79f
.dword 0x3fdb9ebb31330ee6
.dword 0x3feb30bd3343e263
.dword 0x3feb0d1c6a3fbf50
.dword 0x3fe6fc43950b44b0
.dword 0x3feb30bd3343e263
.dword 0x3feb0d1c6a3fbf50
.dword 0x3fe6fc43950b44b0
.dword 0x3feb30bd3343e263
.dword 0x3feb0d1c6a3fbf50
.dword 0x3fe6fc43950b44b0
.dword 0x3feb30bd3343e263
.dword 0x3feb0d1c6a3fbf50
.dword 0x3fe6fc43950b44b0
.dword 0x3feb30bd3343e263
.dword 0x3feb0d1c6a3fbf50
.dword 0x3fe6fc43950b44b0
.dword 0x3fef0657cb41dd4e
.dword 0x3fdf53e1684b360b
.dword 0x3fde5f780a55d6f8
.dword 0x3fef0657cb41dd4e
.dword 0x3fdf53e1684b360b
.dword 0x3fde5f780a55d6f8
.dword 0x3fef0657cb41dd4e
.dword 0x3fdf53e1684b360b
.dword 0x3fde5f780a55d6f8
.dword 0x3fef0657cb41dd4e
.dword 0x3fdf53e1684b360b
.dword 0x3fde5f780a55d6f8
.dword 0x3fef0657cb41dd4e
.dword 0x3fdf53e1684b360b
.dword 0x3fde5f780a55d6f8
.dword 0x3feda2076e993049
.dword 0x3fe093e6659372e1
.dword 0x3fdeb3f2c82c09e0
.dword 0x3feda2076e993049
.dword 0x3fe093e6659372e1
.dword 0x3fdeb3f2c82c09e0
.dword 0x3feda2076e993049
.dword 0x3fe093e6659372e1
.dword 0x3fdeb3f2c82c09e0
.dword 0x3feda2076e993049
.dword 0x3fe093e6659372e1
.dword 0x3fdeb3f2c82c09e0
.dword 0x3feda2076e993049
.dword 0x3fe093e6659372e1
.dword 0x3fdeb3f2c82c09e0
.dword 0x3fe02ccddd714043
.dword 0x3ffd46236260fb41
.dword 0x3fed981ceb7ce01a
.dword 0x3fe02ccddd714043
.dword 0x3ffd46236260fb41
.dword 0x3fed981ceb7ce01a
.dword 0x3fe02ccddd714043
.dword 0x3ffd46236260fb41
.dword 0x3fed981ceb7ce01a
.dword 0x3fe02ccddd714043
.dword 0x3ffd46236260fb41
.dword 0x3fed981ceb7ce01a
.dword 0x3fe02ccddd714043
.dword 0x3ffd46236260fb41
.dword 0x3fed981ceb7ce01a
.dword 0x3fdcfbe52eea19fa
.dword 0x3ff2ef5cf17cda0f
.dword 0x3fe1267e71072593
.dword 0x3fdcfbe52eea19fa
.dword 0x3ff2ef5cf17cda0f
.dword 0x3fe1267e71072593
.dword 0x3fdcfbe52eea19fa
.dword 0x3ff2ef5cf17cda0f
.dword 0x3fe1267e71072593
.dword 0x3fdcfbe52eea19fa
.dword 0x3ff2ef5cf17cda0f
.dword 0x3fe1267e71072593
.dword 0x3fdcfbe52eea19fa
.dword 0x3ff2ef5cf17cda0f
.dword 0x3fe1267e71072593
.dword 0x3fd12ec74297ebc0
.dword 0x400a664077ece2b4
.dword 0x3fec59d33e66c167
.dword 0x3fd12ec74297ebc0
.dword 0x400a664077ece2b4
.dword 0x3fec59d33e66c167
.dword 0x3fd12ec74297ebc0
.dword 0x400a664077ece2b4
.dword 0x3fec59d33e66c167
.dword 0x3fd12ec74297ebc0
.dword 0x400a664077ece2b4
.dword 0x3fec59d33e66c167
.dword 0x3fd12ec74297ebc0
.dword 0x400a664077ece2b4
.dword 0x3fec59d33e66c167
.dword 0x3fe5023a30759f31
.dword 0x3ff67ad467385c22
.dword 0x3fed8457e35e9535
.dword 0x3fe5023a30759f31
.dword 0x3ff67ad467385c22
.dword 0x3fed8457e35e9535
.dword 0x3fe5023a30759f31
.dword 0x3ff67ad467385c22
.dword 0x3fed8457e35e9535
.dword 0x3fe5023a30759f31
.dword 0x3ff67ad467385c22
.dword 0x3fed8457e35e9535
.dword 0x3fe5023a30759f31
.dword 0x3ff67ad467385c22
.dword 0x3fed8457e35e9535
.dword 0x3fa9b436f29ccf50
.dword 0x4017d927b0aaa6ed
.dword 0x3fd327f5748925be
.dword 0x3fa9b436f29ccf50
.dword 0x4017d927b0aaa6ed
.dword 0x3fd327f5748925be
.dword 0x3fa9b436f29ccf50
.dword 0x4017d927b0aaa6ed
.dword 0x3fd327f5748925be
.dword 0x3fa9b436f29ccf50
.dword 0x4017d927b0aaa6ed
.dword 0x3fd327f5748925be
.dword 0x3fa9b436f29ccf50
.dword 0x4017d927b0aaa6ed
.dword 0x3fd327f5748925be
.dword 0x3f7c81f48532c680
.dword 0x4040de481de515b5
.dword 0x3fce0e0023faf440
.dword 0x3f7c81f48532c680
.dword 0x4040de481de515b5
.dword 0x3fce0e0023faf440
.dword 0x3f7c81f48532c680
.dword 0x4040de481de515b5
.dword 0x3fce0e0023faf440
.dword 0x3f7c81f48532c680
.dword 0x4040de481de515b5
.dword 0x3fce0e0023faf440
.dword 0x3f7c81f48532c680
.dword 0x4040de481de515b5
.dword 0x3fce0e0023faf440
.dword 0x3fe424f4f7df44f4
.dword 0x3ff817dc4f7e7cea
.dword 0x3fee5579f4314275
.dword 0x3fe424f4f7df44f4
.dword 0x3ff817dc4f7e7cea
.dword 0x3fee5579f4314275
.dword 0x3fe424f4f7df44f4
.dword 0x3ff817dc4f7e7cea
.dword 0x3fee5579f4314275
.dword 0x3fe424f4f7df44f4
.dword 0x3ff817dc4f7e7cea
.dword 0x3fee5579f4314275
.dword 0x3fe424f4f7df44f4
.dword 0x3ff817dc4f7e7cea
.dword 0x3fee5579f4314275
.dword 0x3feef404650b37dc
.dword 0x3feb596b098e62b7
.dword 0x3fea7461eaa78bbf
.dword 0x3feef404650b37dc
.dword 0x3feb596b098e62b7
.dword 0x3fea7461eaa78bbf
.dword 0x3feef404650b37dc
.dword 0x3feb596b098e62b7
.dword 0x3fea7461eaa78bbf
.dword 0x3feef404650b37dc
.dword 0x3feb596b098e62b7
.dword 0x3fea7461eaa78bbf
.dword 0x3feef404650b37dc
.dword 0x3feb596b098e62b7
.dword 0x3fea7461eaa78bbf
.dword 0x3fd721a03617a6ba
.dword 0x3ff49017f0d68fa3
.dword 0x3fddba598209479a
.dword 0x3fd721a03617a6ba
.dword 0x3ff49017f0d68fa3
.dword 0x3fddba598209479a
.dword 0x3fd721a03617a6ba
.dword 0x3ff49017f0d68fa3
.dword 0x3fddba598209479a
.dword 0x3fd721a03617a6ba
.dword 0x3ff49017f0d68fa3
.dword 0x3fddba598209479a
.dword 0x3fd721a03617a6ba
.dword 0x3ff49017f0d68fa3
.dword 0x3fddba598209479a
.dword 0x3fed4268b7006f33
.dword 0x3fc9b4bb3296c3d9
.dword 0x3fc78122865344b8
.dword 0x3fed4268b7006f33
.dword 0x3fc9b4bb3296c3d9
.dword 0x3fc78122865344b8
.dword 0x3fed4268b7006f33
.dword 0x3fc9b4bb3296c3d9
.dword 0x3fc78122865344b8
.dword 0x3fed4268b7006f33
.dword 0x3fc9b4bb3296c3d9
.dword 0x3fc78122865344b8
.dword 0x3fed4268b7006f33
.dword 0x3fc9b4bb3296c3d9
.dword 0x3fc78122865344b8
.dword 0x3fb3ed20141d0ab0
.dword 0x4028dfede6d1dade
.dword 0x3feefa91552515e2
.dword 0x3fb3ed20141d0ab0
.dword 0x4028dfede6d1dade
.dword 0x3feefa91552515e2
.dword 0x3fb3ed20141d0ab0
.dword 0x4028dfede6d1dade
.dword 0x3feefa91552515e2
.dword 0x3fb3ed20141d0ab0
.dword 0x4028dfede6d1dade
.dword 0x3feefa91552515e2
.dword 0x3fb3ed20141d0ab0
.dword 0x4028dfede6d1dade
.dword 0x3feefa91552515e2
.dword 0x3fa14b89e1b8baa0
.dword 0x4030da81e9e68e4e
.dword 0x3fe237bb86391b08
.dword 0x3fa14b89e1b8baa0
.dword 0x4030da81e9e68e4e
.dword 0x3fe237bb86391b08
.dword 0x3fa14b89e1b8baa0
.dword 0x4030da81e9e68e4e
.dword 0x3fe237bb86391b08
.dword 0x3fa14b89e1b8baa0
.dword 0x4030da81e9e68e4e
.dword 0x3fe237bb86391b08
.dword 0x3fa14b89e1b8baa0
.dword 0x4030da81e9e68e4e
.dword 0x3fe237bb86391b08
.dword 0x3fc22a796b9663a4
.dword 0x40144c6187ca64e9
.dword 0x3fe70bd042e74e71
.dword 0x3fc22a796b9663a4
.dword 0x40144c6187ca64e9
.dword 0x3fe70bd042e74e71
.dword 0x3fc22a796b9663a4
.dword 0x40144c6187ca64e9
.dword 0x3fe70bd042e74e71
.dword 0x3fc22a796b9663a4
.dword 0x40144c6187ca64e9
.dword 0x3fe70bd042e74e71
.dword 0x3fc22a796b9663a4
.dword 0x40144c6187ca64e9
.dword 0x3fe70bd042e74e71
.dword 0x3faee364fdd51a90
.dword 0x402e60a797998564
.dword 0x3fed527aa1fd8971
.dword 0x3faee364fdd51a90
.dword 0x402e60a797998564
.dword 0x3fed527aa1fd8971
.dword 0x3faee364fdd51a90
.dword 0x402e60a797998564
.dword 0x3fed527aa1fd8971
.dword 0x3faee364fdd51a90
.dword 0x402e60a797998564
.dword 0x3fed527aa1fd8971
.dword 0x3faee364fdd51a90
.dword 0x402e60a797998564
.dword 0x3fed527aa1fd8971
.dword 0x3f967300d17ab200
.dword 0x404048585eb4d47a
.dword 0x3fe6d882528f36fb
.dword 0x3f967300d17ab200
.dword 0x404048585eb4d47a
.dword 0x3fe6d882528f36fb
.dword 0x3f967300d17ab200
.dword 0x404048585eb4d47a
.dword 0x3fe6d882528f36fb
.dword 0x3f967300d17ab200
.dword 0x404048585eb4d47a
.dword 0x3fe6d882528f36fb
.dword 0x3f967300d17ab200
.dword 0x404048585eb4d47a
.dword 0x3fe6d882528f36fb
.dword 0x3fedf66a04ac9e63
.dword 0x3fcb50497c1cbcaf
.dword 0x3fc993164b54f2f4
.dword 0x3fedf66a04ac9e63
.dword 0x3fcb50497c1cbcaf
.dword 0x3fc993164b54f2f4
.dword 0x3fedf66a04ac9e63
.dword 0x3fcb50497c1cbcaf
.dword 0x3fc993164b54f2f4
.dword 0x3fedf66a04ac9e63
.dword 0x3fcb50497c1cbcaf
.dword 0x3fc993164b54f2f4
.dword 0x3fedf66a04ac9e63
.dword 0x3fcb50497c1cbcaf
.dword 0x3fc993164b54f2f4
.dword 0x3fe727ac5e171c1d
.dword 0x3fd96e378bcbcfcd
.dword 0x3fd266bf3b5d8de2
.dword 0x3fe727ac5e171c1d
.dword 0x3fd96e378bcbcfcd
.dword 0x3fd266bf3b5d8de2
.dword 0x3fe727ac5e171c1d
.dword 0x3fd96e378bcbcfcd
.dword 0x3fd266bf3b5d8de2
.dword 0x3fe727ac5e171c1d
.dword 0x3fd96e378bcbcfcd
.dword 0x3fd266bf3b5d8de2
.dword 0x3fe727ac5e171c1d
.dword 0x3fd96e378bcbcfcd
.dword 0x3fd266bf3b5d8de2
.dword 0x3fcc5a2d48f7e4c8
.dword 0x4003f84adc077a18
.dword 0x3fe1b18815c400fe
.dword 0x3fcc5a2d48f7e4c8
.dword 0x4003f84adc077a18
.dword 0x3fe1b18815c400fe
.dword 0x3fcc5a2d48f7e4c8
.dword 0x4003f84adc077a18
.dword 0x3fe1b18815c400fe
.dword 0x3fcc5a2d48f7e4c8
.dword 0x4003f84adc077a18
.dword 0x3fe1b18815c400fe
.dword 0x3fcc5a2d48f7e4c8
.dword 0x4003f84adc077a18
.dword 0x3fe1b18815c400fe
.dword 0x3fb75a90c21bb1b0
.dword 0x401883ff60324878
.dword 0x3fe1e441b215561c
.dword 0x3fb75a90c21bb1b0
.dword 0x401883ff60324878
.dword 0x3fe1e441b215561c
.dword 0x3fb75a90c21bb1b0
.dword 0x401883ff60324878
.dword 0x3fe1e441b215561c
.dword 0x3fb75a90c21bb1b0
.dword 0x401883ff60324878
.dword 0x3fe1e441b215561c
.dword 0x3fb75a90c21bb1b0
.dword 0x401883ff60324878
.dword 0x3fe1e441b215561c
.dword 0x3feb9d1b28ba1cec
.dword 0x3fb0ca68ebe491b3
.dword 0x3facfa6fb3eacc70
.dword 0x3feb9d1b28ba1cec
.dword 0x3fb0ca68ebe491b3
.dword 0x3facfa6fb3eacc70
.dword 0x3feb9d1b28ba1cec
.dword 0x3fb0ca68ebe491b3
.dword 0x3facfa6fb3eacc70
.dword 0x3feb9d1b28ba1cec
.dword 0x3fb0ca68ebe491b3
.dword 0x3facfa6fb3eacc70
.dword 0x3feb9d1b28ba1cec
.dword 0x3fb0ca68ebe491b3
.dword 0x3facfa6fb3eacc70
.dword 0x3fd398c63fd675de
.dword 0x3fe5cea59e72bb75
.dword 0x3fcab59e05cd0208
.dword 0x3fd398c63fd675de
.dword 0x3fe5cea59e72bb75
.dword 0x3fcab59e05cd0208
.dword 0x3fd398c63fd675de
.dword 0x3fe5cea59e72bb75
.dword 0x3fcab59e05cd0208
.dword 0x3fd398c63fd675de
.dword 0x3fe5cea59e72bb75
.dword 0x3fcab59e05cd0208
.dword 0x3fd398c63fd675de
.dword 0x3fe5cea59e72bb75
.dword 0x3fcab59e05cd0208
.dword 0x3fbb510aeb102548
.dword 0x40148b0c143b1155
.dword 0x3fe189592a0050a0
.dword 0x3fbb510aeb102548
.dword 0x40148b0c143b1155
.dword 0x3fe189592a0050a0
.dword 0x3fbb510aeb102548
.dword 0x40148b0c143b1155
.dword 0x3fe189592a0050a0
.dword 0x3fbb510aeb102548
.dword 0x40148b0c143b1155
.dword 0x3fe189592a0050a0
.dword 0x3fbb510aeb102548
.dword 0x40148b0c143b1155
.dword 0x3fe189592a0050a0
.dword 0x3fb6ae9917839a60
.dword 0x3ff0a99cdae1e5a0
.dword 0x3fb79f0ba52bc060
.dword 0x3fb6ae9917839a60
.dword 0x3ff0a99cdae1e5a0
.dword 0x3fb79f0ba52bc060
.dword 0x3fb6ae9917839a60
.dword 0x3ff0a99cdae1e5a0
.dword 0x3fb79f0ba52bc060
.dword 0x3fb6ae9917839a60
.dword 0x3ff0a99cdae1e5a0
.dword 0x3fb79f0ba52bc060
.dword 0x3fb6ae9917839a60
.dword 0x3ff0a99cdae1e5a0
.dword 0x3fb79f0ba52bc060
.dword 0x3fed539c6b5b1376
.dword 0x3fdaab0cc0980b62
.dword 0x3fd870b192f358dc
.dword 0x3fed539c6b5b1376
.dword 0x3fdaab0cc0980b62
.dword 0x3fd870b192f358dc
.dword 0x3fed539c6b5b1376
.dword 0x3fdaab0cc0980b62
.dword 0x3fd870b192f358dc
.dword 0x3fed539c6b5b1376
.dword 0x3fdaab0cc0980b62
.dword 0x3fd870b192f358dc
.dword 0x3fed539c6b5b1376
.dword 0x3fdaab0cc0980b62
.dword 0x3fd870b192f358dc
.dword 0x3febef8fd1889579
.dword 0x3fc88904d0ee291d
.dword 0x3fc56b49b1368b80
.dword 0x3febef8fd1889579
.dword 0x3fc88904d0ee291d
.dword 0x3fc56b49b1368b80
.dword 0x3febef8fd1889579
.dword 0x3fc88904d0ee291d
.dword 0x3fc56b49b1368b80
.dword 0x3febef8fd1889579
.dword 0x3fc88904d0ee291d
.dword 0x3fc56b49b1368b80
.dword 0x3febef8fd1889579
.dword 0x3fc88904d0ee291d
.dword 0x3fc56b49b1368b80
.dword 0x3fd7bb3ae7c0d3b6
.dword 0x3fe9c581f9a066ad
.dword 0x3fd31cbf0b96ad66
.dword 0x3fd7bb3ae7c0d3b6
.dword 0x3fe9c581f9a066ad
.dword 0x3fd31cbf0b96ad66
.dword 0x3fd7bb3ae7c0d3b6
.dword 0x3fe9c581f9a066ad
.dword 0x3fd31cbf0b96ad66
.dword 0x3fd7bb3ae7c0d3b6
.dword 0x3fe9c581f9a066ad
.dword 0x3fd31cbf0b96ad66
.dword 0x3fd7bb3ae7c0d3b6
.dword 0x3fe9c581f9a066ad
.dword 0x3fd31cbf0b96ad66
.dword 0x3fe13173e11a86e0
.dword 0x3fc7ec13e172c394
.dword 0x3fb9b4c55dcac488
.dword 0x3fe13173e11a86e0
.dword 0x3fc7ec13e172c394
.dword 0x3fb9b4c55dcac488
.dword 0x3fe13173e11a86e0
.dword 0x3fc7ec13e172c394
.dword 0x3fb9b4c55dcac488
.dword 0x3fe13173e11a86e0
.dword 0x3fc7ec13e172c394
.dword 0x3fb9b4c55dcac488
.dword 0x3fe13173e11a86e0
.dword 0x3fc7ec13e172c394
.dword 0x3fb9b4c55dcac488
.dword 0x3feca04e2fd1a601
.dword 0x3fd95b5f9d22910a
.dword 0x3fd6aefa7c2d4f84
.dword 0x3feca04e2fd1a601
.dword 0x3fd95b5f9d22910a
.dword 0x3fd6aefa7c2d4f84
.dword 0x3feca04e2fd1a601
.dword 0x3fd95b5f9d22910a
.dword 0x3fd6aefa7c2d4f84
.dword 0x3feca04e2fd1a601
.dword 0x3fd95b5f9d22910a
.dword 0x3fd6aefa7c2d4f84
.dword 0x3feca04e2fd1a601
.dword 0x3fd95b5f9d22910a
.dword 0x3fd6aefa7c2d4f84
.dword 0x3fd7ceba02a79cc4
.dword 0x400369ae0b861013
.dword 0x3fece2bc8124ee1f
.dword 0x3fd7ceba02a79cc4
.dword 0x400369ae0b861013
.dword 0x3fece2bc8124ee1f
.dword 0x3fd7ceba02a79cc4
.dword 0x400369ae0b861013
.dword 0x3fece2bc8124ee1f
.dword 0x3fd7ceba02a79cc4
.dword 0x400369ae0b861013
.dword 0x3fece2bc8124ee1f
.dword 0x3fd7ceba02a79cc4
.dword 0x400369ae0b861013
.dword 0x3fece2bc8124ee1f
.dword 0x3fd92dca657411b0
.dword 0x40016695cd79e454
.dword 0x3feb6216b3d96a54
.dword 0x3fd92dca657411b0
.dword 0x40016695cd79e454
.dword 0x3feb6216b3d96a54
.dword 0x3fd92dca657411b0
.dword 0x40016695cd79e454
.dword 0x3feb6216b3d96a54
.dword 0x3fd92dca657411b0
.dword 0x40016695cd79e454
.dword 0x3feb6216b3d96a54
.dword 0x3fd92dca657411b0
.dword 0x40016695cd79e454
.dword 0x3feb6216b3d96a54
.dword 0x3feb5c7fb946bf36
.dword 0x3fdc063e5e7707a2
.dword 0x3fd7f6466e0d993e
.dword 0x3feb5c7fb946bf36
.dword 0x3fdc063e5e7707a2
.dword 0x3fd7f6466e0d993e
.dword 0x3feb5c7fb946bf36
.dword 0x3fdc063e5e7707a2
.dword 0x3fd7f6466e0d993e
.dword 0x3feb5c7fb946bf36
.dword 0x3fdc063e5e7707a2
.dword 0x3fd7f6466e0d993e
.dword 0x3feb5c7fb946bf36
.dword 0x3fdc063e5e7707a2
.dword 0x3fd7f6466e0d993e
.dword 0x3feccb87b2842f44
.dword 0x3fe6b0791c53642c
.dword 0x3fe46ab9b026f34e
.dword 0x3feccb87b2842f44
.dword 0x3fe6b0791c53642c
.dword 0x3fe46ab9b026f34e
.dword 0x3feccb87b2842f44
.dword 0x3fe6b0791c53642c
.dword 0x3fe46ab9b026f34e
.dword 0x3feccb87b2842f44
.dword 0x3fe6b0791c53642c
.dword 0x3fe46ab9b026f34e
.dword 0x3feccb87b2842f44
.dword 0x3fe6b0791c53642c
.dword 0x3fe46ab9b026f34e
.dword 0x3fe0440ae3b25c6e
.dword 0x3ff0b7af39a76f6f
.dword 0x3fe0fec743125d24
.dword 0x3fe0440ae3b25c6e
.dword 0x3ff0b7af39a76f6f
.dword 0x3fe0fec743125d24
.dword 0x3fe0440ae3b25c6e
.dword 0x3ff0b7af39a76f6f
.dword 0x3fe0fec743125d24
.dword 0x3fe0440ae3b25c6e
.dword 0x3ff0b7af39a76f6f
.dword 0x3fe0fec743125d24
.dword 0x3fe0440ae3b25c6e
.dword 0x3ff0b7af39a76f6f
.dword 0x3fe0fec743125d24
.dword 0x3fcbdde073328efc
.dword 0x3feb692708a15a23
.dword 0x3fc7dec7679a2ddc
.dword 0x3fcbdde073328efc
.dword 0x3feb692708a15a23
.dword 0x3fc7dec7679a2ddc
.dword 0x3fcbdde073328efc
.dword 0x3feb692708a15a23
.dword 0x3fc7dec7679a2ddc
.dword 0x3fcbdde073328efc
.dword 0x3feb692708a15a23
.dword 0x3fc7dec7679a2ddc
.dword 0x3fcbdde073328efc
.dword 0x3feb692708a15a23
.dword 0x3fc7dec7679a2ddc
.dword 0x3fd8bd85dfe1a426
.dword 0x3ff7eb337019232c
.dword 0x3fe27e0fccc66faa
.dword 0x3fd8bd85dfe1a426
.dword 0x3ff7eb337019232c
.dword 0x3fe27e0fccc66faa
.dword 0x3fd8bd85dfe1a426
.dword 0x3ff7eb337019232c
.dword 0x3fe27e0fccc66faa
.dword 0x3fd8bd85dfe1a426
.dword 0x3ff7eb337019232c
.dword 0x3fe27e0fccc66faa
.dword 0x3fd8bd85dfe1a426
.dword 0x3ff7eb337019232c
.dword 0x3fe27e0fccc66faa
.dword 0x3fe9d5f62b61e808
.dword 0x3fb0ae5d788a48c6
.dword 0x3faaef83eec48e20
.dword 0x3fe9d5f62b61e808
.dword 0x3fb0ae5d788a48c6
.dword 0x3faaef83eec48e20
.dword 0x3fe9d5f62b61e808
.dword 0x3fb0ae5d788a48c6
.dword 0x3faaef83eec48e20
.dword 0x3fe9d5f62b61e808
.dword 0x3fb0ae5d788a48c6
.dword 0x3faaef83eec48e20
.dword 0x3fe9d5f62b61e808
.dword 0x3fb0ae5d788a48c6
.dword 0x3faaef83eec48e20
.dword 0x3fc2c0c9469062fc
.dword 0x40199a19b116c599
.dword 0x3fee01d82c52a9ef
.dword 0x3fc2c0c9469062fc
.dword 0x40199a19b116c599
.dword 0x3fee01d82c52a9ef
.dword 0x3fc2c0c9469062fc
.dword 0x40199a19b116c599
.dword 0x3fee01d82c52a9ef
.dword 0x3fc2c0c9469062fc
.dword 0x40199a19b116c599
.dword 0x3fee01d82c52a9ef
.dword 0x3fc2c0c9469062fc
.dword 0x40199a19b116c599
.dword 0x3fee01d82c52a9ef
.dword 0x3fe46a673811d035
.dword 0x3fb8b391e5a4472d
.dword 0x3faf84bb6029ee80
.dword 0x3fe46a673811d035
.dword 0x3fb8b391e5a4472d
.dword 0x3faf84bb6029ee80
.dword 0x3fe46a673811d035
.dword 0x3fb8b391e5a4472d
.dword 0x3faf84bb6029ee80
.dword 0x3fe46a673811d035
.dword 0x3fb8b391e5a4472d
.dword 0x3faf84bb6029ee80
.dword 0x3fe46a673811d035
.dword 0x3fb8b391e5a4472d
.dword 0x3faf84bb6029ee80
.dword 0x3fec6955e545889b
.dword 0x3fd44a7f71d15a8a
.dword 0x3fd203fa6d0863c6
.dword 0x3fec6955e545889b
.dword 0x3fd44a7f71d15a8a
.dword 0x3fd203fa6d0863c6
.dword 0x3fec6955e545889b
.dword 0x3fd44a7f71d15a8a
.dword 0x3fd203fa6d0863c6
.dword 0x3fec6955e545889b
.dword 0x3fd44a7f71d15a8a
.dword 0x3fd203fa6d0863c6
.dword 0x3fec6955e545889b
.dword 0x3fd44a7f71d15a8a
.dword 0x3fd203fa6d0863c6
.dword 0x3fef09512d8f663d
.dword 0x3fcde1ec5085f9cb
.dword 0x3fccfb9046e238e0
.dword 0x3fef09512d8f663d
.dword 0x3fcde1ec5085f9cb
.dword 0x3fccfb9046e238e0
.dword 0x3fef09512d8f663d
.dword 0x3fcde1ec5085f9cb
.dword 0x3fccfb9046e238e0
.dword 0x3fef09512d8f663d
.dword 0x3fcde1ec5085f9cb
.dword 0x3fccfb9046e238e0
.dword 0x3fef09512d8f663d
.dword 0x3fcde1ec5085f9cb
.dword 0x3fccfb9046e238e0
.dword 0x3fe19edd78243138
.dword 0x3ffb65ccbdc1a211
.dword 0x3fee2c320b450a38
.dword 0x3fe19edd78243138
.dword 0x3ffb65ccbdc1a211
.dword 0x3fee2c320b450a38
.dword 0x3fe19edd78243138
.dword 0x3ffb65ccbdc1a211
.dword 0x3fee2c320b450a38
.dword 0x3fe19edd78243138
.dword 0x3ffb65ccbdc1a211
.dword 0x3fee2c320b450a38
.dword 0x3fe19edd78243138
.dword 0x3ffb65ccbdc1a211
.dword 0x3fee2c320b450a38
.dword 0x3fe6b1d9a9c2b433
.dword 0x3ff66bacd1160028
.dword 0x3fefcd45c9813ec6
.dword 0x3fe6b1d9a9c2b433
.dword 0x3ff66bacd1160028
.dword 0x3fefcd45c9813ec6
.dword 0x3fe6b1d9a9c2b433
.dword 0x3ff66bacd1160028
.dword 0x3fefcd45c9813ec6
.dword 0x3fe6b1d9a9c2b433
.dword 0x3ff66bacd1160028
.dword 0x3fefcd45c9813ec6
.dword 0x3fe6b1d9a9c2b433
.dword 0x3ff66bacd1160028
.dword 0x3fefcd45c9813ec6
.dword 0x3fca70972d7810b8
.dword 0x3fd3a3c76601fe91
.dword 0x3fb03a2c05839000
.dword 0x3fca70972d7810b8
.dword 0x3fd3a3c76601fe91
.dword 0x3fb03a2c05839000
.dword 0x3fca70972d7810b8
.dword 0x3fd3a3c76601fe91
.dword 0x3fb03a2c05839000
.dword 0x3fca70972d7810b8
.dword 0x3fd3a3c76601fe91
.dword 0x3fb03a2c05839000
.dword 0x3fca70972d7810b8
.dword 0x3fd3a3c76601fe91
.dword 0x3fb03a2c05839000
.dword 0x3fe34147001995c5
.dword 0x3feb3a8f50c5ad6d
.dword 0x3fe06250751530e8
.dword 0x3fe34147001995c5
.dword 0x3feb3a8f50c5ad6d
.dword 0x3fe06250751530e8
.dword 0x3fe34147001995c5
.dword 0x3feb3a8f50c5ad6d
.dword 0x3fe06250751530e8
.dword 0x3fe34147001995c5
.dword 0x3feb3a8f50c5ad6d
.dword 0x3fe06250751530e8
.dword 0x3fe34147001995c5
.dword 0x3feb3a8f50c5ad6d
.dword 0x3fe06250751530e8
.dword 0x3fd967eee5dfa224
.dword 0x3ffb67353a66f617
.dword 0x3fe5c1a25d6a6506
.dword 0x3fd967eee5dfa224
.dword 0x3ffb67353a66f617
.dword 0x3fe5c1a25d6a6506
.dword 0x3fd967eee5dfa224
.dword 0x3ffb67353a66f617
.dword 0x3fe5c1a25d6a6506
.dword 0x3fd967eee5dfa224
.dword 0x3ffb67353a66f617
.dword 0x3fe5c1a25d6a6506
.dword 0x3fd967eee5dfa224
.dword 0x3ffb67353a66f617
.dword 0x3fe5c1a25d6a6506
.dword 0x3fb3b122ac2d8660
.dword 0x402039233f6888d2
.dword 0x3fe3f7751938e17e
.dword 0x3fb3b122ac2d8660
.dword 0x402039233f6888d2
.dword 0x3fe3f7751938e17e
.dword 0x3fb3b122ac2d8660
.dword 0x402039233f6888d2
.dword 0x3fe3f7751938e17e
.dword 0x3fb3b122ac2d8660
.dword 0x402039233f6888d2
.dword 0x3fe3f7751938e17e
.dword 0x3fb3b122ac2d8660
.dword 0x402039233f6888d2
.dword 0x3fe3f7751938e17e
.dword 0x3fd5cef5ceb21cc4
.dword 0x3fb5f6687abecb2d
.dword 0x3f9def7f0b1f98a0
.dword 0x3fd5cef5ceb21cc4
.dword 0x3fb5f6687abecb2d
.dword 0x3f9def7f0b1f98a0
.dword 0x3fd5cef5ceb21cc4
.dword 0x3fb5f6687abecb2d
.dword 0x3f9def7f0b1f98a0
.dword 0x3fd5cef5ceb21cc4
.dword 0x3fb5f6687abecb2d
.dword 0x3f9def7f0b1f98a0
.dword 0x3fd5cef5ceb21cc4
.dword 0x3fb5f6687abecb2d
.dword 0x3f9def7f0b1f98a0
.dword 0x3fc8fe3f5886191c
.dword 0x400bb8b5f7c4ea65
.dword 0x3fe5a6c97e88ba40
.dword 0x3fc8fe3f5886191c
.dword 0x400bb8b5f7c4ea65
.dword 0x3fe5a6c97e88ba40
.dword 0x3fc8fe3f5886191c
.dword 0x400bb8b5f7c4ea65
.dword 0x3fe5a6c97e88ba40
.dword 0x3fc8fe3f5886191c
.dword 0x400bb8b5f7c4ea65
.dword 0x3fe5a6c97e88ba40
.dword 0x3fc8fe3f5886191c
.dword 0x400bb8b5f7c4ea65
.dword 0x3fe5a6c97e88ba40
.dword 0x3fe3ebb306036e19
.dword 0x3ff1d873a7324ee7
.dword 0x3fe637ec25764ddc
.dword 0x3fe3ebb306036e19
.dword 0x3ff1d873a7324ee7
.dword 0x3fe637ec25764ddc
.dword 0x3fe3ebb306036e19
.dword 0x3ff1d873a7324ee7
.dword 0x3fe637ec25764ddc
.dword 0x3fe3ebb306036e19
.dword 0x3ff1d873a7324ee7
.dword 0x3fe637ec25764ddc
.dword 0x3fe3ebb306036e19
.dword 0x3ff1d873a7324ee7
.dword 0x3fe637ec25764ddc
.dword 0x3fe0afcf02082b5b
.dword 0x3ffa5202e140c2e5
.dword 0x3feb7338691d6a1e
.dword 0x3fe0afcf02082b5b
.dword 0x3ffa5202e140c2e5
.dword 0x3feb7338691d6a1e
.dword 0x3fe0afcf02082b5b
.dword 0x3ffa5202e140c2e5
.dword 0x3feb7338691d6a1e
.dword 0x3fe0afcf02082b5b
.dword 0x3ffa5202e140c2e5
.dword 0x3feb7338691d6a1e
.dword 0x3fe0afcf02082b5b
.dword 0x3ffa5202e140c2e5
.dword 0x3feb7338691d6a1e
.dword 0x3fe76d0e55970e1b
.dword 0x3fe6f62a5910687c
.dword 0x3fe0cf2f395ff628
.dword 0x3fe76d0e55970e1b
.dword 0x3fe6f62a5910687c
.dword 0x3fe0cf2f395ff628
.dword 0x3fe76d0e55970e1b
.dword 0x3fe6f62a5910687c
.dword 0x3fe0cf2f395ff628
.dword 0x3fe76d0e55970e1b
.dword 0x3fe6f62a5910687c
.dword 0x3fe0cf2f395ff628
.dword 0x3fe76d0e55970e1b
.dword 0x3fe6f62a5910687c
.dword 0x3fe0cf2f395ff628
.dword 0x3fbee698f2811510
.dword 0x4009b41f5e2cf4ca
.dword 0x3fd8d216e41de434
.dword 0x3fbee698f2811510
.dword 0x4009b41f5e2cf4ca
.dword 0x3fd8d216e41de434
.dword 0x3fbee698f2811510
.dword 0x4009b41f5e2cf4ca
.dword 0x3fd8d216e41de434
.dword 0x3fbee698f2811510
.dword 0x4009b41f5e2cf4ca
.dword 0x3fd8d216e41de434
.dword 0x3fbee698f2811510
.dword 0x4009b41f5e2cf4ca
.dword 0x3fd8d216e41de434
.dword 0x3fe7d8fa6c12e19d
.dword 0x3fe94f47f72ec063
.dword 0x3fe2dc98f04ad2e3
.dword 0x3fe7d8fa6c12e19d
.dword 0x3fe94f47f72ec063
.dword 0x3fe2dc98f04ad2e3
.dword 0x3fe7d8fa6c12e19d
.dword 0x3fe94f47f72ec063
.dword 0x3fe2dc98f04ad2e3
.dword 0x3fe7d8fa6c12e19d
.dword 0x3fe94f47f72ec063
.dword 0x3fe2dc98f04ad2e3
.dword 0x3fe7d8fa6c12e19d
.dword 0x3fe94f47f72ec063
.dword 0x3fe2dc98f04ad2e3
.dword 0x3fe18d0a26aea73f
.dword 0x3fc0e5b0ff4e67cc
.dword 0x3fb288feef75c7b0
.dword 0x3fe18d0a26aea73f
.dword 0x3fc0e5b0ff4e67cc
.dword 0x3fb288feef75c7b0
.dword 0x3fe18d0a26aea73f
.dword 0x3fc0e5b0ff4e67cc
.dword 0x3fb288feef75c7b0
.dword 0x3fe18d0a26aea73f
.dword 0x3fc0e5b0ff4e67cc
.dword 0x3fb288feef75c7b0
.dword 0x3fe18d0a26aea73f
.dword 0x3fc0e5b0ff4e67cc
.dword 0x3fb288feef75c7b0
.dword 0x3fe472491b3ff084
.dword 0x3ff29f6ab87092a6
.dword 0x3fe7cc4a55fd32a2
.dword 0x3fe472491b3ff084
.dword 0x3ff29f6ab87092a6
.dword 0x3fe7cc4a55fd32a2
.dword 0x3fe472491b3ff084
.dword 0x3ff29f6ab87092a6
.dword 0x3fe7cc4a55fd32a2
.dword 0x3fe472491b3ff084
.dword 0x3ff29f6ab87092a6
.dword 0x3fe7cc4a55fd32a2
.dword 0x3fe472491b3ff084
.dword 0x3ff29f6ab87092a6
.dword 0x3fe7cc4a55fd32a2
.dword 0x3fec0c538efed5cd
.dword 0x3fddfad1d4fdcd15
.dword 0x3fda4703f195f562
.dword 0x3fec0c538efed5cd
.dword 0x3fddfad1d4fdcd15
.dword 0x3fda4703f195f562
.dword 0x3fec0c538efed5cd
.dword 0x3fddfad1d4fdcd15
.dword 0x3fda4703f195f562
.dword 0x3fec0c538efed5cd
.dword 0x3fddfad1d4fdcd15
.dword 0x3fda4703f195f562
.dword 0x3fec0c538efed5cd
.dword 0x3fddfad1d4fdcd15
.dword 0x3fda4703f195f562
.dword 0x3fea7ded33ed039c
.dword 0x3ff2e76778e3eca6
.dword 0x3fef4cd03dd925a9
.dword 0x3fea7ded33ed039c
.dword 0x3ff2e76778e3eca6
.dword 0x3fef4cd03dd925a9
.dword 0x3fea7ded33ed039c
.dword 0x3ff2e76778e3eca6
.dword 0x3fef4cd03dd925a9
.dword 0x3fea7ded33ed039c
.dword 0x3ff2e76778e3eca6
.dword 0x3fef4cd03dd925a9
.dword 0x3fea7ded33ed039c
.dword 0x3ff2e76778e3eca6
.dword 0x3fef4cd03dd925a9
.dword 0x3fe0650e791c0795
.dword 0x3fdafa87df6fd291
.dword 0x3fcba4edc08f0eb4
.dword 0x3fe0650e791c0795
.dword 0x3fdafa87df6fd291
.dword 0x3fcba4edc08f0eb4
.dword 0x3fe0650e791c0795
.dword 0x3fdafa87df6fd291
.dword 0x3fcba4edc08f0eb4
.dword 0x3fe0650e791c0795
.dword 0x3fdafa87df6fd291
.dword 0x3fcba4edc08f0eb4
.dword 0x3fe0650e791c0795
.dword 0x3fdafa87df6fd291
.dword 0x3fcba4edc08f0eb4
.dword 0x3fd039156a8efdf2
.dword 0x40072bbcd1cdb810
.dword 0x3fe77e67a631cf2a
.dword 0x3fd039156a8efdf2
.dword 0x40072bbcd1cdb810
.dword 0x3fe77e67a631cf2a
.dword 0x3fd039156a8efdf2
.dword 0x40072bbcd1cdb810
.dword 0x3fe77e67a631cf2a
.dword 0x3fd039156a8efdf2
.dword 0x40072bbcd1cdb810
.dword 0x3fe77e67a631cf2a
.dword 0x3fd039156a8efdf2
.dword 0x40072bbcd1cdb810
.dword 0x3fe77e67a631cf2a
.dword 0x3fe2e8f31c3cb28c
.dword 0x3ff8bfc13d970350
.dword 0x3fed400de33b3e3e
.dword 0x3fe2e8f31c3cb28c
.dword 0x3ff8bfc13d970350
.dword 0x3fed400de33b3e3e
.dword 0x3fe2e8f31c3cb28c
.dword 0x3ff8bfc13d970350
.dword 0x3fed400de33b3e3e
.dword 0x3fe2e8f31c3cb28c
.dword 0x3ff8bfc13d970350
.dword 0x3fed400de33b3e3e
.dword 0x3fe2e8f31c3cb28c
.dword 0x3ff8bfc13d970350
.dword 0x3fed400de33b3e3e
.dword 0x3fe0ee249ec94153
.dword 0x3fe1cd4a8de61447
.dword 0x3fd2d6410177bdda
.dword 0x3fe0ee249ec94153
.dword 0x3fe1cd4a8de61447
.dword 0x3fd2d6410177bdda
.dword 0x3fe0ee249ec94153
.dword 0x3fe1cd4a8de61447
.dword 0x3fd2d6410177bdda
.dword 0x3fe0ee249ec94153
.dword 0x3fe1cd4a8de61447
.dword 0x3fd2d6410177bdda
.dword 0x3fe0ee249ec94153
.dword 0x3fe1cd4a8de61447
.dword 0x3fd2d6410177bdda
.dword 0x3fca196eeec6c690
.dword 0x4002f670512177f2
.dword 0x3fdeee9b0c96b0b4
.dword 0x3fca196eeec6c690
.dword 0x4002f670512177f2
.dword 0x3fdeee9b0c96b0b4
.dword 0x3fca196eeec6c690
.dword 0x4002f670512177f2
.dword 0x3fdeee9b0c96b0b4
.dword 0x3fca196eeec6c690
.dword 0x4002f670512177f2
.dword 0x3fdeee9b0c96b0b4
.dword 0x3fca196eeec6c690
.dword 0x4002f670512177f2
.dword 0x3fdeee9b0c96b0b4
.dword 0x3fe1b095dcdd4728
.dword 0x3fd3891cc67599e2
.dword 0x3fc59949c9eb71ac
.dword 0x3fe1b095dcdd4728
.dword 0x3fd3891cc67599e2
.dword 0x3fc59949c9eb71ac
.dword 0x3fe1b095dcdd4728
.dword 0x3fd3891cc67599e2
.dword 0x3fc59949c9eb71ac
.dword 0x3fe1b095dcdd4728
.dword 0x3fd3891cc67599e2
.dword 0x3fc59949c9eb71ac
.dword 0x3fe1b095dcdd4728
.dword 0x3fd3891cc67599e2
.dword 0x3fc59949c9eb71ac
.dword 0x3fd51b29b1094462
.dword 0x3fd571255803e91d
.dword 0x3fbc48e7d1b97280
.dword 0x3fd51b29b1094462
.dword 0x3fd571255803e91d
.dword 0x3fbc48e7d1b97280
.dword 0x3fd51b29b1094462
.dword 0x3fd571255803e91d
.dword 0x3fbc48e7d1b97280
.dword 0x3fd51b29b1094462
.dword 0x3fd571255803e91d
.dword 0x3fbc48e7d1b97280
.dword 0x3fd51b29b1094462
.dword 0x3fd571255803e91d
.dword 0x3fbc48e7d1b97280
.dword 0x3f953de7f499c6e0
.dword 0x4014c69963d1bf9e
.dword 0x3fbb950bacb2bcd8
.dword 0x3f953de7f499c6e0
.dword 0x4014c69963d1bf9e
.dword 0x3fbb950bacb2bcd8
.dword 0x3f953de7f499c6e0
.dword 0x4014c69963d1bf9e
.dword 0x3fbb950bacb2bcd8
.dword 0x3f953de7f499c6e0
.dword 0x4014c69963d1bf9e
.dword 0x3fbb950bacb2bcd8
.dword 0x3f953de7f499c6e0
.dword 0x4014c69963d1bf9e
.dword 0x3fbb950bacb2bcd8
.dword 0x3f937bacc78502a0
.dword 0x4043d525a8f21a1f
.dword 0x3fe8266974c6ffc7
.dword 0x3f937bacc78502a0
.dword 0x4043d525a8f21a1f
.dword 0x3fe8266974c6ffc7
.dword 0x3f937bacc78502a0
.dword 0x4043d525a8f21a1f
.dword 0x3fe8266974c6ffc7
.dword 0x3f937bacc78502a0
.dword 0x4043d525a8f21a1f
.dword 0x3fe8266974c6ffc7
.dword 0x3f937bacc78502a0
.dword 0x4043d525a8f21a1f
.dword 0x3fe8266974c6ffc7
.dword 0x3fd03c6840036cda
.dword 0x4002fdd044d6814d
.dword 0x3fe34583cf9db703
.dword 0x3fd03c6840036cda
.dword 0x4002fdd044d6814d
.dword 0x3fe34583cf9db703
.dword 0x3fd03c6840036cda
.dword 0x4002fdd044d6814d
.dword 0x3fe34583cf9db703
.dword 0x3fd03c6840036cda
.dword 0x4002fdd044d6814d
.dword 0x3fe34583cf9db703
.dword 0x3fd03c6840036cda
.dword 0x4002fdd044d6814d
.dword 0x3fe34583cf9db703
.dword 0x3fee4716cb4233e4
.dword 0x3fe384a00c1f1cc5
.dword 0x3fe277b2359fd0d3
.dword 0x3fee4716cb4233e4
.dword 0x3fe384a00c1f1cc5
.dword 0x3fe277b2359fd0d3
.dword 0x3fee4716cb4233e4
.dword 0x3fe384a00c1f1cc5
.dword 0x3fe277b2359fd0d3
.dword 0x3fee4716cb4233e4
.dword 0x3fe384a00c1f1cc5
.dword 0x3fe277b2359fd0d3
.dword 0x3fee4716cb4233e4
.dword 0x3fe384a00c1f1cc5
.dword 0x3fe277b2359fd0d3
.dword 0x3febf0f84d48fb20
.dword 0x3f22395b6ab51f79
.dword 0x3f1fd34170626000
.dword 0x3febf0f84d48fb20
.dword 0x3f22395b6ab51f79
.dword 0x3f1fd34170626000
.dword 0x3febf0f84d48fb20
.dword 0x3f22395b6ab51f79
.dword 0x3f1fd34170626000
.dword 0x3febf0f84d48fb20
.dword 0x3f22395b6ab51f79
.dword 0x3f1fd34170626000
.dword 0x3febf0f84d48fb20
.dword 0x3f22395b6ab51f79
.dword 0x3f1fd34170626000
.dword 0x3fe3ec4cc5e3f81e
.dword 0x3fef6540ee126313
.dword 0x3fe38bf49ed7e946
.dword 0x3fe3ec4cc5e3f81e
.dword 0x3fef6540ee126313
.dword 0x3fe38bf49ed7e946
.dword 0x3fe3ec4cc5e3f81e
.dword 0x3fef6540ee126313
.dword 0x3fe38bf49ed7e946
.dword 0x3fe3ec4cc5e3f81e
.dword 0x3fef6540ee126313
.dword 0x3fe38bf49ed7e946
.dword 0x3fe3ec4cc5e3f81e
.dword 0x3fef6540ee126313
.dword 0x3fe38bf49ed7e946
.dword 0x3fd84d92f30d11d4
.dword 0x3ffd3c78c29d4ada
.dword 0x3fe6343a5680606e
.dword 0x3fd84d92f30d11d4
.dword 0x3ffd3c78c29d4ada
.dword 0x3fe6343a5680606e
.dword 0x3fd84d92f30d11d4
.dword 0x3ffd3c78c29d4ada
.dword 0x3fe6343a5680606e
.dword 0x3fd84d92f30d11d4
.dword 0x3ffd3c78c29d4ada
.dword 0x3fe6343a5680606e
.dword 0x3fd84d92f30d11d4
.dword 0x3ffd3c78c29d4ada
.dword 0x3fe6343a5680606e
.dword 0x3fe558c8cdc4de4b
.dword 0x3fc2561abc745bef
.dword 0x3fb876c2ca844068
.dword 0x3fe558c8cdc4de4b
.dword 0x3fc2561abc745bef
.dword 0x3fb876c2ca844068
.dword 0x3fe558c8cdc4de4b
.dword 0x3fc2561abc745bef
.dword 0x3fb876c2ca844068
.dword 0x3fe558c8cdc4de4b
.dword 0x3fc2561abc745bef
.dword 0x3fb876c2ca844068
.dword 0x3fe558c8cdc4de4b
.dword 0x3fc2561abc745bef
.dword 0x3fb876c2ca844068
.dword 0x3fcc689c8d4b30ec
.dword 0x4011b71a1ed2a106
.dword 0x3fef74413568760b
.dword 0x3fcc689c8d4b30ec
.dword 0x4011b71a1ed2a106
.dword 0x3fef74413568760b
.dword 0x3fcc689c8d4b30ec
.dword 0x4011b71a1ed2a106
.dword 0x3fef74413568760b
.dword 0x3fcc689c8d4b30ec
.dword 0x4011b71a1ed2a106
.dword 0x3fef74413568760b
.dword 0x3fcc689c8d4b30ec
.dword 0x4011b71a1ed2a106
.dword 0x3fef74413568760b
.dword 0x3fd3504d5bd2a7fc
.dword 0x400a2d7ff11ff3a5
.dword 0x3fef9969ff3eb932
.dword 0x3fd3504d5bd2a7fc
.dword 0x400a2d7ff11ff3a5
.dword 0x3fef9969ff3eb932
.dword 0x3fd3504d5bd2a7fc
.dword 0x400a2d7ff11ff3a5
.dword 0x3fef9969ff3eb932
.dword 0x3fd3504d5bd2a7fc
.dword 0x400a2d7ff11ff3a5
.dword 0x3fef9969ff3eb932
.dword 0x3fd3504d5bd2a7fc
.dword 0x400a2d7ff11ff3a5
.dword 0x3fef9969ff3eb932
.dword 0x3fe9489eaca9fae8
.dword 0x3fc5c86b81444854
.dword 0x3fc13602f1fbf780
.dword 0x3fe9489eaca9fae8
.dword 0x3fc5c86b81444854
.dword 0x3fc13602f1fbf780
.dword 0x3fe9489eaca9fae8
.dword 0x3fc5c86b81444854
.dword 0x3fc13602f1fbf780
.dword 0x3fe9489eaca9fae8
.dword 0x3fc5c86b81444854
.dword 0x3fc13602f1fbf780
.dword 0x3fe9489eaca9fae8
.dword 0x3fc5c86b81444854
.dword 0x3fc13602f1fbf780
.dword 0x3fe0852ab71bea61
.dword 0x3ffab650dd25ea8a
.dword 0x3feb94a3ad9c5211
.dword 0x3fe0852ab71bea61
.dword 0x3ffab650dd25ea8a
.dword 0x3feb94a3ad9c5211
.dword 0x3fe0852ab71bea61
.dword 0x3ffab650dd25ea8a
.dword 0x3feb94a3ad9c5211
.dword 0x3fe0852ab71bea61
.dword 0x3ffab650dd25ea8a
.dword 0x3feb94a3ad9c5211
.dword 0x3fe0852ab71bea61
.dword 0x3ffab650dd25ea8a
.dword 0x3feb94a3ad9c5211
.dword 0x3fe601cbfd1fbd97
.dword 0x3ff2b33920db03cf
.dword 0x3fe9b8882a7b13f4
.dword 0x3fe601cbfd1fbd97
.dword 0x3ff2b33920db03cf
.dword 0x3fe9b8882a7b13f4
.dword 0x3fe601cbfd1fbd97
.dword 0x3ff2b33920db03cf
.dword 0x3fe9b8882a7b13f4
.dword 0x3fe601cbfd1fbd97
.dword 0x3ff2b33920db03cf
.dword 0x3fe9b8882a7b13f4
.dword 0x3fe601cbfd1fbd97
.dword 0x3ff2b33920db03cf
.dword 0x3fe9b8882a7b13f4
.dword 0x3fec42f97d9131d2
.dword 0x3fd8709186b9baa6
.dword 0x3fd595a60ddb5f4e
.dword 0x3fec42f97d9131d2
.dword 0x3fd8709186b9baa6
.dword 0x3fd595a60ddb5f4e
.dword 0x3fec42f97d9131d2
.dword 0x3fd8709186b9baa6
.dword 0x3fd595a60ddb5f4e
.dword 0x3fec42f97d9131d2
.dword 0x3fd8709186b9baa6
.dword 0x3fd595a60ddb5f4e
.dword 0x3fec42f97d9131d2
.dword 0x3fd8709186b9baa6
.dword 0x3fd595a60ddb5f4e
.dword 0x3fbeb3272a48c640
.dword 0x400fab8074446c94
.dword 0x3fde6216866830ec
.dword 0x3fbeb3272a48c640
.dword 0x400fab8074446c94
.dword 0x3fde6216866830ec
.dword 0x3fbeb3272a48c640
.dword 0x400fab8074446c94
.dword 0x3fde6216866830ec
.dword 0x3fbeb3272a48c640
.dword 0x400fab8074446c94
.dword 0x3fde6216866830ec
.dword 0x3fbeb3272a48c640
.dword 0x400fab8074446c94
.dword 0x3fde6216866830ec
.dword 0x3fda4b41870b1732
.dword 0x4001b9ca041b16e5
.dword 0x3fed2147c1ffd6ce
.dword 0x3fda4b41870b1732
.dword 0x4001b9ca041b16e5
.dword 0x3fed2147c1ffd6ce
.dword 0x3fda4b41870b1732
.dword 0x4001b9ca041b16e5
.dword 0x3fed2147c1ffd6ce
.dword 0x3fda4b41870b1732
.dword 0x4001b9ca041b16e5
.dword 0x3fed2147c1ffd6ce
.dword 0x3fda4b41870b1732
.dword 0x4001b9ca041b16e5
.dword 0x3fed2147c1ffd6ce
.dword 0x3fd97cf9248fff6c
.dword 0x3ffbf2f8c2a523a9
.dword 0x3fe642f976920b14
.dword 0x3fd97cf9248fff6c
.dword 0x3ffbf2f8c2a523a9
.dword 0x3fe642f976920b14
.dword 0x3fd97cf9248fff6c
.dword 0x3ffbf2f8c2a523a9
.dword 0x3fe642f976920b14
.dword 0x3fd97cf9248fff6c
.dword 0x3ffbf2f8c2a523a9
.dword 0x3fe642f976920b14
.dword 0x3fd97cf9248fff6c
.dword 0x3ffbf2f8c2a523a9
.dword 0x3fe642f976920b14
.dword 0x3fef172ac977516d
.dword 0x3fe508a58ca75658
.dword 0x3fe46f9ab7053a10
.dword 0x3fef172ac977516d
.dword 0x3fe508a58ca75658
.dword 0x3fe46f9ab7053a10
.dword 0x3fef172ac977516d
.dword 0x3fe508a58ca75658
.dword 0x3fe46f9ab7053a10
.dword 0x3fef172ac977516d
.dword 0x3fe508a58ca75658
.dword 0x3fe46f9ab7053a10
.dword 0x3fef172ac977516d
.dword 0x3fe508a58ca75658
.dword 0x3fe46f9ab7053a10
.dword 0x3fc8e536f7f0e220
.dword 0x3fbf188c984af6cc
.dword 0x3f9831268ab6e3a0
.dword 0x3fc8e536f7f0e220
.dword 0x3fbf188c984af6cc
.dword 0x3f9831268ab6e3a0
.dword 0x3fc8e536f7f0e220
.dword 0x3fbf188c984af6cc
.dword 0x3f9831268ab6e3a0
.dword 0x3fc8e536f7f0e220
.dword 0x3fbf188c984af6cc
.dword 0x3f9831268ab6e3a0
.dword 0x3fc8e536f7f0e220
.dword 0x3fbf188c984af6cc
.dword 0x3f9831268ab6e3a0
.dword 0x3fd6bf55e03d5f94
.dword 0x3feb32a3bdb7d700
.dword 0x3fd3556fd0dc5900
.dword 0x3fd6bf55e03d5f94
.dword 0x3feb32a3bdb7d700
.dword 0x3fd3556fd0dc5900
.dword 0x3fd6bf55e03d5f94
.dword 0x3feb32a3bdb7d700
.dword 0x3fd3556fd0dc5900
.dword 0x3fd6bf55e03d5f94
.dword 0x3feb32a3bdb7d700
.dword 0x3fd3556fd0dc5900
.dword 0x3fd6bf55e03d5f94
.dword 0x3feb32a3bdb7d700
.dword 0x3fd3556fd0dc5900
.dword 0x3fb72a4619cd0568
.dword 0x4015745c9c405eb7
.dword 0x3fdf0ff493649790
.dword 0x3fb72a4619cd0568
.dword 0x4015745c9c405eb7
.dword 0x3fdf0ff493649790
.dword 0x3fb72a4619cd0568
.dword 0x4015745c9c405eb7
.dword 0x3fdf0ff493649790
.dword 0x3fb72a4619cd0568
.dword 0x4015745c9c405eb7
.dword 0x3fdf0ff493649790
.dword 0x3fb72a4619cd0568
.dword 0x4015745c9c405eb7
.dword 0x3fdf0ff493649790
.dword 0x3fe477c5460d9dfa
.dword 0x3fbaebcbe73fbc59
.dword 0x3fb13822455a5518
.dword 0x3fe477c5460d9dfa
.dword 0x3fbaebcbe73fbc59
.dword 0x3fb13822455a5518
.dword 0x3fe477c5460d9dfa
.dword 0x3fbaebcbe73fbc59
.dword 0x3fb13822455a5518
.dword 0x3fe477c5460d9dfa
.dword 0x3fbaebcbe73fbc59
.dword 0x3fb13822455a5518
.dword 0x3fe477c5460d9dfa
.dword 0x3fbaebcbe73fbc59
.dword 0x3fb13822455a5518
.dword 0x3fe9927004b039e3
.dword 0x3fdb990c2fda8bc8
.dword 0x3fd60ddc68b2d704
.dword 0x3fe9927004b039e3
.dword 0x3fdb990c2fda8bc8
.dword 0x3fd60ddc68b2d704
.dword 0x3fe9927004b039e3
.dword 0x3fdb990c2fda8bc8
.dword 0x3fd60ddc68b2d704
.dword 0x3fe9927004b039e3
.dword 0x3fdb990c2fda8bc8
.dword 0x3fd60ddc68b2d704
.dword 0x3fe9927004b039e3
.dword 0x3fdb990c2fda8bc8
.dword 0x3fd60ddc68b2d704
.dword 0x3fa8e5a33d138740
.dword 0x4020ec009cc33766
.dword 0x3fda54df58c723c8
.dword 0x3fa8e5a33d138740
.dword 0x4020ec009cc33766
.dword 0x3fda54df58c723c8
.dword 0x3fa8e5a33d138740
.dword 0x4020ec009cc33766
.dword 0x3fda54df58c723c8
.dword 0x3fa8e5a33d138740
.dword 0x4020ec009cc33766
.dword 0x3fda54df58c723c8
.dword 0x3fa8e5a33d138740
.dword 0x4020ec009cc33766
.dword 0x3fda54df58c723c8
.dword 0x3fd75d7d51a0f358
.dword 0x3fff108304505770
.dword 0x3fe6ae9fcf9c1b9d
.dword 0x3fd75d7d51a0f358
.dword 0x3fff108304505770
.dword 0x3fe6ae9fcf9c1b9d
.dword 0x3fd75d7d51a0f358
.dword 0x3fff108304505770
.dword 0x3fe6ae9fcf9c1b9d
.dword 0x3fd75d7d51a0f358
.dword 0x3fff108304505770
.dword 0x3fe6ae9fcf9c1b9d
.dword 0x3fd75d7d51a0f358
.dword 0x3fff108304505770
.dword 0x3fe6ae9fcf9c1b9d
.dword 0x3fecffc04cfa4c29
.dword 0x3fec597495f8b96c
.dword 0x3fe9b0d939326f54
.dword 0x3fecffc04cfa4c29
.dword 0x3fec597495f8b96c
.dword 0x3fe9b0d939326f54
.dword 0x3fecffc04cfa4c29
.dword 0x3fec597495f8b96c
.dword 0x3fe9b0d939326f54
.dword 0x3fecffc04cfa4c29
.dword 0x3fec597495f8b96c
.dword 0x3fe9b0d939326f54
.dword 0x3fecffc04cfa4c29
.dword 0x3fec597495f8b96c
.dword 0x3fe9b0d939326f54
.dword 0x3fc8fceb5bfe01b4
.dword 0x4006bc2bc6f4fbe4
.dword 0x3fe1c0d1e5339691
.dword 0x3fc8fceb5bfe01b4
.dword 0x4006bc2bc6f4fbe4
.dword 0x3fe1c0d1e5339691
.dword 0x3fc8fceb5bfe01b4
.dword 0x4006bc2bc6f4fbe4
.dword 0x3fe1c0d1e5339691
.dword 0x3fc8fceb5bfe01b4
.dword 0x4006bc2bc6f4fbe4
.dword 0x3fe1c0d1e5339691
.dword 0x3fc8fceb5bfe01b4
.dword 0x4006bc2bc6f4fbe4
.dword 0x3fe1c0d1e5339691
.dword 0x3fed050a9a8d2b05
.dword 0x3fcc306f8539197c
.dword 0x3fc99055f970dda8
.dword 0x3fed050a9a8d2b05
.dword 0x3fcc306f8539197c
.dword 0x3fc99055f970dda8
.dword 0x3fed050a9a8d2b05
.dword 0x3fcc306f8539197c
.dword 0x3fc99055f970dda8
.dword 0x3fed050a9a8d2b05
.dword 0x3fcc306f8539197c
.dword 0x3fc99055f970dda8
.dword 0x3fed050a9a8d2b05
.dword 0x3fcc306f8539197c
.dword 0x3fc99055f970dda8
.dword 0x3fc3ee8e89346e7c
.dword 0x401111370f1260ef
.dword 0x3fe542e98009ff7f
.dword 0x3fc3ee8e89346e7c
.dword 0x401111370f1260ef
.dword 0x3fe542e98009ff7f
.dword 0x3fc3ee8e89346e7c
.dword 0x401111370f1260ef
.dword 0x3fe542e98009ff7f
.dword 0x3fc3ee8e89346e7c
.dword 0x401111370f1260ef
.dword 0x3fe542e98009ff7f
.dword 0x3fc3ee8e89346e7c
.dword 0x401111370f1260ef
.dword 0x3fe542e98009ff7f
.dword 0x3fc92b53563d3f54
.dword 0x3ff9933d17862ef6
.dword 0x3fd41da82f4b8d7c
.dword 0x3fc92b53563d3f54
.dword 0x3ff9933d17862ef6
.dword 0x3fd41da82f4b8d7c
.dword 0x3fc92b53563d3f54
.dword 0x3ff9933d17862ef6
.dword 0x3fd41da82f4b8d7c
.dword 0x3fc92b53563d3f54
.dword 0x3ff9933d17862ef6
.dword 0x3fd41da82f4b8d7c
.dword 0x3fc92b53563d3f54
.dword 0x3ff9933d17862ef6
.dword 0x3fd41da82f4b8d7c
.dword 0x3fc8f1b1f456799c
.dword 0x400e26d29351eb24
.dword 0x3fe780d9fd5930ba
.dword 0x3fc8f1b1f456799c
.dword 0x400e26d29351eb24
.dword 0x3fe780d9fd5930ba
.dword 0x3fc8f1b1f456799c
.dword 0x400e26d29351eb24
.dword 0x3fe780d9fd5930ba
.dword 0x3fc8f1b1f456799c
.dword 0x400e26d29351eb24
.dword 0x3fe780d9fd5930ba
.dword 0x3fc8f1b1f456799c
.dword 0x400e26d29351eb24
.dword 0x3fe780d9fd5930ba
.dword 0x3fe9d31161bf0f55
.dword 0x3fe1b33f2352351c
.dword 0x3fdc9191b267601e
.dword 0x3fe9d31161bf0f55
.dword 0x3fe1b33f2352351c
.dword 0x3fdc9191b267601e
.dword 0x3fe9d31161bf0f55
.dword 0x3fe1b33f2352351c
.dword 0x3fdc9191b267601e
.dword 0x3fe9d31161bf0f55
.dword 0x3fe1b33f2352351c
.dword 0x3fdc9191b267601e
.dword 0x3fe9d31161bf0f55
.dword 0x3fe1b33f2352351c
.dword 0x3fdc9191b267601e
.dword 0x3fdd8c6843af9d78
.dword 0x3fe609757b7bde27
.dword 0x3fd45943a73f0eb8
.dword 0x3fdd8c6843af9d78
.dword 0x3fe609757b7bde27
.dword 0x3fd45943a73f0eb8
.dword 0x3fdd8c6843af9d78
.dword 0x3fe609757b7bde27
.dword 0x3fd45943a73f0eb8
.dword 0x3fdd8c6843af9d78
.dword 0x3fe609757b7bde27
.dword 0x3fd45943a73f0eb8
.dword 0x3fdd8c6843af9d78
.dword 0x3fe609757b7bde27
.dword 0x3fd45943a73f0eb8
.dword 0x3fd14a8cc9051ae8
.dword 0x400159fce3299375
.dword 0x3fe2c075905b92d5
.dword 0x3fd14a8cc9051ae8
.dword 0x400159fce3299375
.dword 0x3fe2c075905b92d5
.dword 0x3fd14a8cc9051ae8
.dword 0x400159fce3299375
.dword 0x3fe2c075905b92d5
.dword 0x3fd14a8cc9051ae8
.dword 0x400159fce3299375
.dword 0x3fe2c075905b92d5
.dword 0x3fd14a8cc9051ae8
.dword 0x400159fce3299375
.dword 0x3fe2c075905b92d5
.dword 0x3fe7460eaa0b6d32
.dword 0x3fd16e44d796fedf
.dword 0x3fc95ad55cd48dd8
.dword 0x3fe7460eaa0b6d32
.dword 0x3fd16e44d796fedf
.dword 0x3fc95ad55cd48dd8
.dword 0x3fe7460eaa0b6d32
.dword 0x3fd16e44d796fedf
.dword 0x3fc95ad55cd48dd8
.dword 0x3fe7460eaa0b6d32
.dword 0x3fd16e44d796fedf
.dword 0x3fc95ad55cd48dd8
.dword 0x3fe7460eaa0b6d32
.dword 0x3fd16e44d796fedf
.dword 0x3fc95ad55cd48dd8
.dword 0x3fe40f11fab8f2f7
.dword 0x3fd777f661296c28
.dword 0x3fcd6c0ecfa656e4
.dword 0x3fe40f11fab8f2f7
.dword 0x3fd777f661296c28
.dword 0x3fcd6c0ecfa656e4
.dword 0x3fe40f11fab8f2f7
.dword 0x3fd777f661296c28
.dword 0x3fcd6c0ecfa656e4
.dword 0x3fe40f11fab8f2f7
.dword 0x3fd777f661296c28
.dword 0x3fcd6c0ecfa656e4
.dword 0x3fe40f11fab8f2f7
.dword 0x3fd777f661296c28
.dword 0x3fcd6c0ecfa656e4
.dword 0x3fe0f3ad58234f50
.dword 0x3fdd070fc84aa2fd
.dword 0x3fcec125843e1c54
.dword 0x3fe0f3ad58234f50
.dword 0x3fdd070fc84aa2fd
.dword 0x3fcec125843e1c54
.dword 0x3fe0f3ad58234f50
.dword 0x3fdd070fc84aa2fd
.dword 0x3fcec125843e1c54
.dword 0x3fe0f3ad58234f50
.dword 0x3fdd070fc84aa2fd
.dword 0x3fcec125843e1c54
.dword 0x3fe0f3ad58234f50
.dword 0x3fdd070fc84aa2fd
.dword 0x3fcec125843e1c54
.dword 0x3feffc4caf6aed99
.dword 0x3fd596e092b29af6
.dword 0x3fd59461734ee142
.dword 0x3feffc4caf6aed99
.dword 0x3fd596e092b29af6
.dword 0x3fd59461734ee142
.dword 0x3feffc4caf6aed99
.dword 0x3fd596e092b29af6
.dword 0x3fd59461734ee142
.dword 0x3feffc4caf6aed99
.dword 0x3fd596e092b29af6
.dword 0x3fd59461734ee142
.dword 0x3feffc4caf6aed99
.dword 0x3fd596e092b29af6
.dword 0x3fd59461734ee142
.dword 0x3fe07a98a8f37d6f
.dword 0x3ff6f1035e4b87d0
.dword 0x3fe7a0cbfbda4b24
.dword 0x3fe07a98a8f37d6f
.dword 0x3ff6f1035e4b87d0
.dword 0x3fe7a0cbfbda4b24
.dword 0x3fe07a98a8f37d6f
.dword 0x3ff6f1035e4b87d0
.dword 0x3fe7a0cbfbda4b24
.dword 0x3fe07a98a8f37d6f
.dword 0x3ff6f1035e4b87d0
.dword 0x3fe7a0cbfbda4b24
.dword 0x3fe07a98a8f37d6f
.dword 0x3ff6f1035e4b87d0
.dword 0x3fe7a0cbfbda4b24
.dword 0x3fca73d506d1a204
.dword 0x3feb91be181b3554
.dword 0x3fc6ca35beb5fcac
.dword 0x3fca73d506d1a204
.dword 0x3feb91be181b3554
.dword 0x3fc6ca35beb5fcac
.dword 0x3fca73d506d1a204
.dword 0x3feb91be181b3554
.dword 0x3fc6ca35beb5fcac
.dword 0x3fca73d506d1a204
.dword 0x3feb91be181b3554
.dword 0x3fc6ca35beb5fcac
.dword 0x3fe0e3a41309a3d1
.dword 0x3ffb292f6ebd7683
.dword 0x3fecab9e46280b2f
.dword 0x3fe0e3a41309a3d1
.dword 0x3ffb292f6ebd7683
.dword 0x3fecab9e46280b2f
.dword 0x3fe0e3a41309a3d1
.dword 0x3ffb292f6ebd7683
.dword 0x3fecab9e46280b2f
.dword 0x3fe0e3a41309a3d1
.dword 0x3ffb292f6ebd7683
.dword 0x3fecab9e46280b2f
.dword 0x3fe63e269ed73198
.dword 0x3fe2e718544a6a4f
.dword 0x3fda472e92af06e8
.dword 0x3fe63e269ed73198
.dword 0x3fe2e718544a6a4f
.dword 0x3fda472e92af06e8
.dword 0x3fe63e269ed73198
.dword 0x3fe2e718544a6a4f
.dword 0x3fda472e92af06e8
.dword 0x3fe63e269ed73198
.dword 0x3fe2e718544a6a4f
.dword 0x3fda472e92af06e8
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_8:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_9:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_10:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_11:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_12:
    .fill 162*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
