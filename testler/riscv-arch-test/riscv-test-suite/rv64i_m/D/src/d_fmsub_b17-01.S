
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:00 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V FD extension for the fmsub_b17 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmsub_b17)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f3, rs2==f5, rs3==f6, rd==f3, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584f7 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xd263e3c3e5fcb and rm_val == 0  
// opcode: fmsub.d ; op1:f3; op2:f5; op3:f6; dest:f3; op1val:0x5f8132d8f91b7583; op2val:0x5fab1e2d5b3584f7; op3val:0x7f3d263e3c3e5fcb; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f3, f3, f5, f6, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f20, rs2==f3, rs3==f20, rd==f2, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x518e14dba799f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xc74ef4423e96b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x2c2dd137c36cc and rm_val == 0  
// opcode: fmsub.d ; op1:f20; op2:f3; op3:f20; dest:f2; op1val:0x5f9518e14dba799f; op2val:0x5f8c74ef4423e96b; op3val:0x5f9518e14dba799f; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f2, f20, f3, f20, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f27, rs2==f16, rs3==f16, rd==f26, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x60ffd67bcec83 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x945c6c109c016 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x16c997b7a634d and rm_val == 0  
// opcode: fmsub.d ; op1:f27; op2:f16; op3:f16; dest:f26; op1val:0x5f860ffd67bcec83; op2val:0x5fa945c6c109c016; op3val:0x5fa945c6c109c016; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f26, f27, f16, f16, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f16, rs2==f25, rs3==f1, rd==f8, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x38262f6f599e6 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xdb5e85647ec13 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x21d10d57b324c and rm_val == 0  
// opcode: fmsub.d ; op1:f16; op2:f25; op3:f1; dest:f8; op1val:0x5fa38262f6f599e6; op2val:0x5f8db5e85647ec13; op3val:0x7f421d10d57b324c; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f8, f16, f25, f1, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f1, rs2==f29, rs3==f12, rd==f29, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6d479d3fc4771 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa14821a399792 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x29b449a461e81 and rm_val == 0  
// opcode: fmsub.d ; op1:f1; op2:f29; op3:f12; dest:f29; op1val:0x5fa6d479d3fc4771; op2val:0x5faa14821a399792; op3val:0x7f629b449a461e81; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f29, f1, f29, f12, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f15, rs2==f15, rs3==f22, rd==f28, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x79341c032efa9 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x5932a24c0014f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xfca1d510b8400 and rm_val == 0  
// opcode: fmsub.d ; op1:f15; op2:f15; op3:f22; dest:f28; op1val:0x5fa79341c032efa9; op2val:0x5fa79341c032efa9; op3val:0x7f3fca1d510b8400; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f28, f15, f15, f22, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rd == rs3 != rs2, rs1==f31, rs2==f4, rs3==f31, rd==f31, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0be093ea29884 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x790b8fbbe558d and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8a89d2e141e22 and rm_val == 0  
// opcode: fmsub.d ; op1:f31; op2:f4; op3:f31; dest:f31; op1val:0x5fa0be093ea29884; op2val:0x5f9790b8fbbe558d; op3val:0x5fa0be093ea29884; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f31, f31, f4, f31, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rd == rs2 == rs3 != rs1, rs1==f9, rs2==f23, rs3==f23, rd==f23, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1386e108c661f and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x32ba6165fce3f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x4a1fd1cfdd2a7 and rm_val == 0  
// opcode: fmsub.d ; op1:f9; op2:f23; op3:f23; dest:f23; op1val:0x5f91386e108c661f; op2val:0x5f732ba6165fce3f; op3val:0x5f732ba6165fce3f; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f23, f9, f23, f23, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f7, rs2==f7, rs3==f7, rd==f7, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabce33873116b and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xa962fc3cbb55f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x636f5effd12df and rm_val == 0  
// opcode: fmsub.d ; op1:f7; op2:f7; op3:f7; dest:f7; op1val:0x5f8abce33873116b; op2val:0x5f8abce33873116b; op3val:0x5f8abce33873116b; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f7, f7, f7, f7, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 != rd, rs1==f19, rs2==f19, rs3==f19, rd==f9, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9b91e4d1678bb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x60b89491a6a27 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x1b88ad2b7359f and rm_val == 0  
// opcode: fmsub.d ; op1:f19; op2:f19; op3:f19; dest:f9; op1val:0x5f99b91e4d1678bb; op2val:0x5f99b91e4d1678bb; op3val:0x5f99b91e4d1678bb; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f9, f19, f19, f19, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 == rd != rs3, rs1==f22, rs2==f22, rs3==f26, rd==f22, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03aaf26d74a36 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe46ac54a58195 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xeb5b7f3d472bf and rm_val == 0  
// opcode: fmsub.d ; op1:f22; op2:f22; op3:f26; dest:f22; op1val:0x5fa03aaf26d74a36; op2val:0x5fa03aaf26d74a36; op3val:0x7f5eb5b7f3d472bf; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f22, f22, f22, f26, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f0, rs2==f9, rs3==f18, rd==f18, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6bb39a08936b7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x504dcbdc51a65 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xddca40d1038ea and rm_val == 0  
// opcode: fmsub.d ; op1:f0; op2:f9; op3:f18; dest:f18; op1val:0x5f96bb39a08936b7; op2val:0x5fa504dcbdc51a65; op3val:0x7f4ddca40d1038ea; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f18, f0, f9, f18, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f30, rs2==f28, rs3==f4, rd==f10, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05438a864ff48 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7d4f90e5ccfbd and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x8526b8e228fad and rm_val == 0  
// opcode: fmsub.d ; op1:f30; op2:f28; op3:f4; dest:f10; op1val:0x5fa05438a864ff48; op2val:0x5fa7d4f90e5ccfbd; op3val:0x7f58526b8e228fad; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f10, f30, f28, f4, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f12, rs2==f24, rs3==f0, rd==f25, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf02c0f95b62b9 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xde5026c152607 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xcf86cefdd20fa and rm_val == 0  
// opcode: fmsub.d ; op1:f12; op2:f24; op3:f0; dest:f25; op1val:0x5f9f02c0f95b62b9; op2val:0x5f9de5026c152607; op3val:0x7f4cf86cefdd20fa; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f25, f12, f24, f0, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f18, rs2==f13, rs3==f14, rd==f27, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x16a782d36f4f6 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x377075764a44b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x52ffe91369924 and rm_val == 0  
// opcode: fmsub.d ; op1:f18; op2:f13; op3:f14; dest:f27; op1val:0x5fa16a782d36f4f6; op2val:0x5f8377075764a44b; op3val:0x7f352ffe91369924; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f27, f18, f13, f14, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f24, rs2==f8, rs3==f11, rd==f12, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0eeee9e62e9b9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6a8199da501dc and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x7fa6fff730ed6 and rm_val == 0  
// opcode: fmsub.d ; op1:f24; op2:f8; op3:f11; dest:f12; op1val:0x5f90eeee9e62e9b9; op2val:0x5fa6a8199da501dc; op3val:0x7f47fa6fff730ed6; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f12, f24, f8, f11, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f28, rs2==f0, rs3==f8, rd==f30, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1726431ab40b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x35ff2ac0a5f02 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xf97f2998aa004 and rm_val == 0  
// opcode: fmsub.d ; op1:f28; op2:f0; op3:f8; dest:f30; op1val:0x5faa1726431ab40b; op2val:0x5fa35ff2ac0a5f02; op3val:0x7f5f97f2998aa004; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f30, f28, f0, f8, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f4, rs2==f14, rs3==f15, rd==f17, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90a064114beb1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb14a0c4b66d3b and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x5309956dd980f and rm_val == 0  
// opcode: fmsub.d ; op1:f4; op2:f14; op3:f15; dest:f17; op1val:0x5fa90a064114beb1; op2val:0x5fab14a0c4b66d3b; op3val:0x7f65309956dd980f; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f17, f4, f14, f15, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f11, rs2==f31, rs3==f10, rd==f0, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x422ea209fd4bd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x44789671d8cc1 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x985ac84733a24 and rm_val == 0  
// opcode: fmsub.d ; op1:f11; op2:f31; op3:f10; dest:f0; op1val:0x5fa422ea209fd4bd; op2val:0x5fa44789671d8cc1; op3val:0x7f5985ac84733a24; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f0, f11, f31, f10, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f23, rs2==f6, rs3==f29, rd==f24, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c285c929de04 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4264cf0154662 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xa24d90caf05e6 and rm_val == 0  
// opcode: fmsub.d ; op1:f23; op2:f6; op3:f29; dest:f24; op1val:0x5fa4c285c929de04; op2val:0x5fa4264cf0154662; op3val:0x7f5a24d90caf05e6; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f24, f23, f6, f29, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f8, rs2==f17, rs3==f21, rd==f14, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf886e2fe6ac5f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7dd5590fd9313 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x78429bcad1ba4 and rm_val == 0  
// opcode: fmsub.d ; op1:f8; op2:f17; op3:f21; dest:f14; op1val:0x5f9f886e2fe6ac5f; op2val:0x5fa7dd5590fd9313; op3val:0x7f578429bcad1ba4; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f14, f8, f17, f21, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f17, rs2==f1, rs3==f30, rd==f21, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77b8ab6cc4ab4 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcbbac03deb701 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x515d18d6f961b and rm_val == 0  
// opcode: fmsub.d ; op1:f17; op2:f1; op3:f30; dest:f21; op1val:0x5fa77b8ab6cc4ab4; op2val:0x5facbbac03deb701; op3val:0x7f6515d18d6f961b; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f21, f17, f1, f30, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f21, rs2==f10, rs3==f13, rd==f11, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9efa662b0261b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb8f52527c8b37 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x6565e0bc30c0c and rm_val == 0  
// opcode: fmsub.d ; op1:f21; op2:f10; op3:f13; dest:f11; op1val:0x5f99efa662b0261b; op2val:0x5fab8f52527c8b37; op3val:0x7f56565e0bc30c0c; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f11, f21, f10, f13, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f25, rs2==f30, rs3==f2, rd==f16, fs1 == 0 and fe1 == 0x5f2 and fm1 == 0xcd462b6d554ff and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x8e80a6ca28041 and fs3 == 0 and fe3 == 0x7ed and fm3 == 0x67057390b9773 and rm_val == 0  
// opcode: fmsub.d ; op1:f25; op2:f30; op3:f2; dest:f16; op1val:0x5f2cd462b6d554ff; op2val:0x5f98e80a6ca28041; op3val:0x7ed67057390b9773; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f16, f25, f30, f2, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f29, rs2==f2, rs3==f25, rd==f20, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d750eeace47f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0fd97d0ca1907 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x511c9e1607861 and rm_val == 0  
// opcode: fmsub.d ; op1:f29; op2:f2; op3:f25; dest:f20; op1val:0x5fa3d750eeace47f; op2val:0x5fa0fd97d0ca1907; op3val:0x7f5511c9e1607861; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f20, f29, f2, f25, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f2, rs2==f21, rs3==f9, rd==f6, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf9a59e3f349b5 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x38aa27d9f85c9 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x34c8f7c770922 and rm_val == 0  
// opcode: fmsub.d ; op1:f2; op2:f21; op3:f9; dest:f6; op1val:0x5faf9a59e3f349b5; op2val:0x5f938aa27d9f85c9; op3val:0x7f534c8f7c770922; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f6, f2, f21, f9, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f10, rs2==f20, rs3==f28, rd==f5, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab4fd6611517f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xa2c7cf77ff3b5 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x5d82f0b402329 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f20; op3:f28; dest:f5; op1val:0x5faab4fd6611517f; op2val:0x5f9a2c7cf77ff3b5; op3val:0x7f55d82f0b402329; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f5, f10, f20, f28, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f26, rs2==f12, rs3==f27, rd==f19, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf95a713b177ca and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x023725e97dbc0 and rm_val == 0  
// opcode: fmsub.d ; op1:f26; op2:f12; op3:f27; dest:f19; op1val:0x5fa059c938cba700; op2val:0x5faf95a713b177ca; op3val:0x7f6023725e97dbc0; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f19, f26, f12, f27, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f14, rs2==f26, rs3==f17, rd==f15, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x324293ee39f7d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc36952ef44a5a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x0e04a591773fd and rm_val == 0  
// opcode: fmsub.d ; op1:f14; op2:f26; op3:f17; dest:f15; op1val:0x5fa324293ee39f7d; op2val:0x5fac36952ef44a5a; op3val:0x7f60e04a591773fd; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f15, f14, f26, f17, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f6, rs2==f27, rs3==f3, rd==f4, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa19db08e903fb and fs2 == 0 and fe2 == 0x5f2 and fm2 == 0xfbfd7fab4eeff and fs3 == 0 and fe3 == 0x7ec and fm3 == 0x9e586ae34221e and rm_val == 0  
// opcode: fmsub.d ; op1:f6; op2:f27; op3:f3; dest:f4; op1val:0x5f8a19db08e903fb; op2val:0x5f2fbfd7fab4eeff; op3val:0x7ec9e586ae34221e; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f4, f6, f27, f3, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f13, rs2==f18, rs3==f5, rd==f1, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf81d438e79e89 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4b9b2bfabd6ff and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x467fb355e56d4 and rm_val == 0  
// opcode: fmsub.d ; op1:f13; op2:f18; op3:f5; dest:f1; op1val:0x5f9f81d438e79e89; op2val:0x5fa4b9b2bfabd6ff; op3val:0x7f5467fb355e56d4; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f1, f13, f18, f5, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f5, rs2==f11, rs3==f24, rd==f13, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x98fd08ab70511 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x90f0d1eecae4a and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x40460d1409d77 and rm_val == 0  
// opcode: fmsub.d ; op1:f5; op2:f11; op3:f24; dest:f13; op1val:0x5f998fd08ab70511; op2val:0x5fa90f0d1eecae4a; op3val:0x7f540460d1409d77; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f5, f11, f24, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc4ee0c5be65d1 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xcc5765acd3c57 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x973b2f7f83545 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9c4ee0c5be65d1; op2val:0x5f9cc5765acd3c57; op3val:0x7f4973b2f7f83545; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6d61e5e11a237 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0e89a794b74d2 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8221b9068e363 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f96d61e5e11a237; op2val:0x5fa0e89a794b74d2; op3val:0x7f48221b9068e363; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2528fb338cf74 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x3eb8b3b7f528d and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x6cfc6b4ce6d80 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa2528fb338cf74; op2val:0x5f93eb8b3b7f528d; op3val:0x7f46cfc6b4ce6d80; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x17be9a133f3af and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x10563b5565e47 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faf2712f698f82f; op2val:0x5f817be9a133f3af; op3val:0x7f410563b5565e47; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x172fde92f86c8 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xee0d506b2167d and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x0d667250d9eb3 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa172fde92f86c8; op2val:0x5faee0d506b2167d; op3val:0x7f60d667250d9eb3; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9d7713018baf1 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xe39ef9237c697 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x868c355de399d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa9d7713018baf1; op2val:0x5f7e39ef9237c697; op3val:0x7f3868c355de399d; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x88745c9a37993 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x22dd5567c07b9 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xbde7204854c2b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f988745c9a37993; op2val:0x5f922dd5567c07b9; op3val:0x7f3bde7204854c2b; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb61e0247cb923 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x89c3334d5f5bb and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x50f111142c704 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fab61e0247cb923; op2val:0x5fa89c3334d5f5bb; op3val:0x7f650f111142c704; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x173ba796d85b8 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x0fdda3426ce98 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faf27dcf8ac02d4; op2val:0x5fa173ba796d85b8; op3val:0x7f60fdda3426ce98; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5df7455c91c2a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9509d7b71e92e and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x14dad2a8f1d49 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa5df7455c91c2a; op2val:0x5fa9509d7b71e92e; op3val:0x7f614dad2a8f1d49; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x17c87a27d34af and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2be5dcb079904 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x47c25e32f1122 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f917c87a27d34af; op2val:0x5fa2be5dcb079904; op3val:0x7f447c25e32f1122; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa720f32c400b7 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x239dca92ff1cf and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xe1ff427365458 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8a720f32c400b7; op2val:0x5f9239dca92ff1cf; op3val:0x7f2e1ff427365458; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x414b2a3e47216 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3614d00f80d8b and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x852b24273e6f9 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa414b2a3e47216; op2val:0x5fa3614d00f80d8b; op3val:0x7f5852b24273e6f9; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84ca278742ceb and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc14dba4a1f611 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x552e4d86c955a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f884ca278742ceb; op2val:0x5f9c14dba4a1f611; op3val:0x7f3552e4d86c955a; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xfc58dd60fc47b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7fc88823ccc91 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x7d0b937bacce2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8fc58dd60fc47b; op2val:0x5fa7fc88823ccc91; op3val:0x7f47d0b937bacce2; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2057f7463cff and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xe3b25f522e53f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x8ae9d178b979e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9a2057f7463cff; op2val:0x5f7e3b25f522e53f; op3val:0x7f28ae9d178b979e; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb39a20d91a7d and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xe83058dcce2cf and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xd461511de086e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faeb39a20d91a7d; op2val:0x5f7e83058dcce2cf; op3val:0x7f3d461511de086e; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d474b38149bf and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x02b9579f55c5b and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x50d3246689cde and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f94d474b38149bf; op2val:0x5f802b9579f55c5b; op3val:0x7f250d3246689cde; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9afd0179d1bae and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xbb4fcc32d8c25 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x63d9f6ba408d7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa9afd0179d1bae; op2val:0x5f9bb4fcc32d8c25; op3val:0x7f563d9f6ba408d7; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd93edf4f6c627 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf1421cf676cc1 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xcb9ea3a4a12c4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fad93edf4f6c627; op2val:0x5faf1421cf676cc1; op3val:0x7f6cb9ea3a4a12c4; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51c6792bf1bb8 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x669bd8c53f9f9 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xd9292ea289924 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa51c6792bf1bb8; op2val:0x5fa669bd8c53f9f9; op3val:0x7f5d9292ea289924; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1cee2cf81f5c7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8d300de77b552 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xba12d7def3a09 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f81cee2cf81f5c7; op2val:0x5fa8d300de77b552; op3val:0x7f3ba12d7def3a09; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11f2665e52fc1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd362c3c55baac and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf426e10817182 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f911f2665e52fc1; op2val:0x5fad362c3c55baac; op3val:0x7f4f426e10817182; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6629b45c9248 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9daacd1054eee and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x95e62233da829 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faf6629b45c9248; op2val:0x5fa9daacd1054eee; op3val:0x7f695e62233da829; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x5181b18b5230b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x75b4f2bfa2cac and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xecb086ea14ef4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f85181b18b5230b; op2val:0x5fa75b4f2bfa2cac; op3val:0x7f3ecb086ea14ef4; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6f2eb668c42a0 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x645543b126259 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xff1741439153e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6f2eb668c42a0; op2val:0x5f9645543b126259; op3val:0x7f4ff1741439153e; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x83f7d2b210b05 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0xab1349fae80cf and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x439dcbf8c7e90 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa83f7d2b210b05; op2val:0x5f6ab1349fae80cf; op3val:0x7f2439dcbf8c7e90; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x009c15369fd69 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xbdaeddf112cfb and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xbebe996ec313e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9009c15369fd69; op2val:0x5f8bdaeddf112cfb; op3val:0x7f2bebe996ec313e; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb8f7360e493b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x24789c982401c and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x18cb9bc413615 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faeb8f7360e493b; op2val:0x5fa24789c982401c; op3val:0x7f618cb9bc413615; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c808570336 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb669f507e33a4 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x04abd1e31e6fd and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa306c808570336; op2val:0x5fab669f507e33a4; op3val:0x7f604abd1e31e6fd; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7c88779524935 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x670e856ce1b48 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x0adc7abeb7d2e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f97c88779524935; op2val:0x5fa670e856ce1b48; op3val:0x7f50adc7abeb7d2e; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3f4908263c63b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6296d3932c17a and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xba3f19f0658e7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f93f4908263c63b; op2val:0x5fa6296d3932c17a; op3val:0x7f4ba3f19f0658e7; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x46970482fa4d3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8834cdb2b7fe3 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xf45a9c0068395 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f846970482fa4d3; op2val:0x5fa8834cdb2b7fe3; op3val:0x7f3f45a9c0068395; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25131186c166f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x05fc74a94c67c and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x2bed753218d46 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f725131186c166f; op2val:0x5fa05fc74a94c67c; op3val:0x7f22bed753218d46; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19d4ad7c76167 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4af6ee0e0bc86 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x6c5c001455b65 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f919d4ad7c76167; op2val:0x5fa4af6ee0e0bc86; op3val:0x7f46c5c001455b65; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1eedb9271f525 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd05a5fee9b2b0 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x043a1557d3940 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa1eedb9271f525; op2val:0x5fad05a5fee9b2b0; op3val:0x7f6043a1557d3940; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea51987a6fe4b and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xcced59b67d14f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xb9689bad06ffb and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9ea51987a6fe4b; op2val:0x5f8cced59b67d14f; op3val:0x7f3b9689bad06ffb; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x767cf00e725e9 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xe830fb501fc6b and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x6512e85520cf5 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa767cf00e725e9; op2val:0x5f8e830fb501fc6b; op3val:0x7f46512e85520cf5; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc0d628f70dc65 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x233912172fa8b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4c34b3fae86a6; op2val:0x5f9c0d628f70dc65; op3val:0x7f5233912172fa8b; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0xea0625aeb847f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0eb1fe944dafc and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x031398a626e75 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f3ea0625aeb847f; op2val:0x5fa0eb1fe944dafc; op3val:0x7ef031398a626e75; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9ab5479609cdf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x39926185b639f and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf7127c5e7a364 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f99ab5479609cdf; op2val:0x5fa39926185b639f; op3val:0x7f4f7127c5e7a364; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa86a1651b8f6d and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xb7e2962ee9dc9 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f90954e8fdda0e7; op2val:0x5faa86a1651b8f6d; op3val:0x7f4b7e2962ee9dc9; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b764b4a3fc09 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x1b34b397f2a6f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x9216983dd17d0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f96b764b4a3fc09; op2val:0x5f81b34b397f2a6f; op3val:0x7f29216983dd17d0; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaaaf2dfcf7ca9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x242628c135d65 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xe6ef6a62c52c8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9aaaf2dfcf7ca9; op2val:0x5fa242628c135d65; op3val:0x7f4e6ef6a62c52c8; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x8fe8ae58338bf and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x9ca813f6e03a1 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f908290cbe2e23f; op2val:0x5f58fe8ae58338bf; op3val:0x7ef9ca813f6e03a1; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x95351e6b0b955 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x6f5e740ba85ae and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9d03069816412f; op2val:0x5f995351e6b0b955; op3val:0x7f46f5e740ba85ae; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x152f739c1f1c1 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x307fc9460b457 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa1939e8900399e; op2val:0x5fa152f739c1f1c1; op3val:0x7f5307fc9460b457; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x07d72d5d390a7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xed40ea1c96a68 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xfc5c4970046b3 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f707d72d5d390a7; op2val:0x5faed40ea1c96a68; op3val:0x7f2fc5c4970046b3; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6dfd78772ca12 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x55e7184fd3b64 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xe8cd03f0552bb and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6dfd78772ca12; op2val:0x5fa55e7184fd3b64; op3val:0x7f5e8cd03f0552bb; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6cdc754c86703 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xbb0574c4cc8c3 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x3bb4a2db0c4d6 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f86cdc754c86703; op2val:0x5f9bb0574c4cc8c3; op3val:0x7f33bb4a2db0c4d6; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae72a87c61e34 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7e0bf1ff29f2c and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x4131969ee9626 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faae72a87c61e34; op2val:0x5fa7e0bf1ff29f2c; op3val:0x7f64131969ee9626; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce619667e7e02 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9b930ceb054c0 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x73b022eb9f911 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5face619667e7e02; op2val:0x5fa9b930ceb054c0; op3val:0x7f673b022eb9f911; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd22aa76e3f8bc and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x042d6f1e7510f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xd9c60de35bafe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fad22aa76e3f8bc; op2val:0x5f6042d6f1e7510f; op3val:0x7f1d9c60de35bafe; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2c8882902a979 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc99ac0cd3b3ca and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x0c9aaec49bc4c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f92c8882902a979; op2val:0x5fac99ac0cd3b3ca; op3val:0x7f50c9aaec49bc4c; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb5c56d6b2c837 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0759f6f56b8c0 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xc257ab5b89fd2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7b5c56d6b2c837; op2val:0x5fa0759f6f56b8c0; op3val:0x7f2c257ab5b89fd2; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf84445890ef61 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa4a2387765198 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x9e47c6417daf5 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faf84445890ef61; op2val:0x5faa4a2387765198; op3val:0x7f69e47c6417daf5; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe60134aa9369f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x62ccc22df8107 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x50c93237036af and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae60134aa9369f; op2val:0x5f862ccc22df8107; op3val:0x7f450c93237036af; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x00bb60f1c696b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x97081394ff7c0 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x9832009ebf04c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa00bb60f1c696b; op2val:0x5fa97081394ff7c0; op3val:0x7f59832009ebf04c; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf9196c3c02c3d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb9ad2076fbbdc and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xb3b930d7baa17 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9f9196c3c02c3d; op2val:0x5fab9ad2076fbbdc; op3val:0x7f5b3b930d7baa17; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x29cd1fe017e0f and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x7a6f6855e7290 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4550cd40a27ab; op2val:0x5f929cd1fe017e0f; op3val:0x7f47a6f6855e7290; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x2279337555ac7 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x40387ec279246 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa1a3782778609c; op2val:0x5f72279337555ac7; op3val:0x7f240387ec279246; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xf3381366daa33 and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x4579ad17dc3e2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f54dcede7752c7f; op2val:0x5f8f3381366daa33; op3val:0x7ef4579ad17dc3e2; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2870c773af305 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x31220085e40c2 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x6155bd365bbff and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa2870c773af305; op2val:0x5fa31220085e40c2; op3val:0x7f56155bd365bbff; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3613a61f77f37 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x565b7f0cebd9f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x9ead12cd7d704 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f93613a61f77f37; op2val:0x5f9565b7f0cebd9f; op3val:0x7f39ead12cd7d704; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x445637e5783c3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1bba5e50e71c and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x12c1c8d9dd383 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9445637e5783c3; op2val:0x5fab1bba5e50e71c; op3val:0x7f512c1c8d9dd383; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8fd99bfbb97c5 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x3a25a98541333 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xeaabbc8d16c1b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f98fd99bfbb97c5; op2val:0x5f93a25a98541333; op3val:0x7f3eaabbc8d16c1b; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x497462d5b0458 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xad9da3f1d9a6e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4dd45324c2409; op2val:0x5fa497462d5b0458; op3val:0x7f5ad9da3f1d9a6e; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1f868e0b71f1b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf77d273035d94 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x1abef8e7bee8e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f91f868e0b71f1b; op2val:0x5faf77d273035d94; op3val:0x7f51abef8e7bee8e; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3ab263197fe7f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xf896b45c47573 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x36243aab911ee and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f93ab263197fe7f; op2val:0x5f8f896b45c47573; op3val:0x7f336243aab911ee; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x094dd69773d7b and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x5f2cba3543edf and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa52dbf656c5de7; op2val:0x5f9094dd69773d7b; op3val:0x7f45f2cba3543edf; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf5bc627909931 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x15f8b7f786fc2 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x106626cd9429d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faf5bc627909931; op2val:0x5fa15f8b7f786fc2; op3val:0x7f6106626cd9429d; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc823d880083bf and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xb8b73fc8fea5b and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x88a20fb162d83 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7c823d880083bf; op2val:0x5f8b8b73fc8fea5b; op3val:0x7f188a20fb162d83; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf08b5da67e1b1 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xc58a2910050f8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fad3a81e544f745; op2val:0x5faf08b5da67e1b1; op3val:0x7f6c58a2910050f8; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x40ccb2b303daf and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x209eb1720d07f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9cca40bb2151a9; op2val:0x5f940ccb2b303daf; op3val:0x7f4209eb1720d07f; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf715337b3d172 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x2ea49f5cfd6b1 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x295f42bea2cf6 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faf715337b3d172; op2val:0x5f92ea49f5cfd6b1; op3val:0x7f5295f42bea2cf6; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd98614508c9 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x44919c1beab5f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xa745317b9d2f2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4dd98614508c9; op2val:0x5f644919c1beab5f; op3val:0x7f1a745317b9d2f2; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x037df25b16113 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xe87555a840377 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xef1f0560c2e8d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9037df25b16113; op2val:0x5f9e87555a840377; op3val:0x7f3ef1f0560c2e8d; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf0c672a2bf4a4 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd185a4345fd91 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xc3ade5fbf7e0d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faf0c672a2bf4a4; op2val:0x5fad185a4345fd91; op3val:0x7f6c3ade5fbf7e0d; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa5356adec5cbf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd24fb6bdbd8af and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x7f9f3258d489d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7a5356adec5cbf; op2val:0x5fad24fb6bdbd8af; op3val:0x7f37f9f3258d489d; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x56cd20ae4ecf3 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xee6dc228b09a7 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x4b0967329acc3 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f856cd20ae4ecf3; op2val:0x5f8ee6dc228b09a7; op3val:0x7f24b0967329acc3; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf9efe9258e03a and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xaf1e2f94bd10d and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xaa0348d646536 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faf9efe9258e03a; op2val:0x5f9af1e2f94bd10d; op3val:0x7f5aa0348d646536; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc52697f28d5d4 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x47df70c06ea5f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x222fe8255911d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fac52697f28d5d4; op2val:0x5f647df70c06ea5f; op3val:0x7f2222fe8255911d; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x574031c0ee5b5 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x7788b8d3bac8f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xf7865ace13c42 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa574031c0ee5b5; op2val:0x5f77788b8d3bac8f; op3val:0x7f2f7865ace13c42; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x92f39602ed989 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa7d13a52ed5ec and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x4d8ce8c5034f3 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa92f39602ed989; op2val:0x5faa7d13a52ed5ec; op3val:0x7f64d8ce8c5034f3; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd9a2688750f46 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xd4c176f2c9031 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xb1a16b4d1ccf1 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fad9a2688750f46; op2val:0x5f9d4c176f2c9031; op3val:0x7f5b1a16b4d1ccf1; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x112000aeb4c63 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc812c292ea556 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xe695050e3d10e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9112000aeb4c63; op2val:0x5fac812c292ea556; op3val:0x7f4e695050e3d10e; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x243d79e337b38 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xca2a9a90e32e7 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x05834f4c71168 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa243d79e337b38; op2val:0x5f8ca2a9a90e32e7; op3val:0x7f405834f4c71168; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3af9a9e598175 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9055ab3b464b5 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xec8f8109d9636 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa3af9a9e598175; op2val:0x5fa9055ab3b464b5; op3val:0x7f5ec8f8109d9636; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9383ffc96dd3f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa831ef4800484 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x4e50aa89a669f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa9383ffc96dd3f; op2val:0x5faa831ef4800484; op3val:0x7f64e50aa89a669f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x409de9a05b77f and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x2bccdcc2ad897 and fs3 == 0 and fe3 == 0x7ee and fm3 == 0x7779022ffc65b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f6409de9a05b77f; op2val:0x5f72bccdcc2ad897; op3val:0x7ee7779022ffc65b; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x153045947810b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1a3304314bd3d and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x318e69cd8a447 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8153045947810b; op2val:0x5fa1a3304314bd3d; op3val:0x7f3318e69cd8a447; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x353d32b1e3fb0 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe89afcadc456f and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x271bf056df83f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa353d32b1e3fb0; op2val:0x5fae89afcadc456f; op3val:0x7f6271bf056df83f; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c73bb8e94b2b and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x2a34571e1ab07 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x95e5f66a60af9 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f95c73bb8e94b2b; op2val:0x5f92a34571e1ab07; op3val:0x7f395e5f66a60af9; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x334e9260607a0 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xaea8e11056b0f and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x027c59ccce767 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa334e9260607a0; op2val:0x5faaea8e11056b0f; op3val:0x7f6027c59ccce767; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd26cfda272030 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xb428ab449c4c7 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8d55dc860d59c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fad26cfda272030; op2val:0x5f8b428ab449c4c7; op3val:0x7f48d55dc860d59c; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x73702c4295ebb and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x5ad9a8441acdf and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xf7416a0bf0cd4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa73702c4295ebb; op2val:0x5f75ad9a8441acdf; op3val:0x7f2f7416a0bf0cd4; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0206ee24c395 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf89488e214d07 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xe8efdb2a8062c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9f0206ee24c395; op2val:0x5faf89488e214d07; op3val:0x7f5e8efdb2a8062c; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x601a2a750c857 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc3c90ab59cc1f and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x36b14e092d5ca and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9601a2a750c857; op2val:0x5fac3c90ab59cc1f; op3val:0x7f536b14e092d5ca; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x59522cc62b803 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xace72798455d6 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x214698b5515cc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa59522cc62b803; op2val:0x5faace72798455d6; op3val:0x7f6214698b5515cc; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90be1a88a62f5 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x5b3be3b6f1597 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x0fc7b71f249eb and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa90be1a88a62f5; op2val:0x5f95b3be3b6f1597; op3val:0x7f50fc7b71f249eb; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9b58d2db8786f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x4f9b4267d3677 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x0da15ab456074 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f89b58d2db8786f; op2val:0x5f94f9b4267d3677; op3val:0x7f30da15ab456074; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbe452c99bfb01 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcca2a15201aa9 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x917fe69179ec2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fabe452c99bfb01; op2val:0x5facca2a15201aa9; op3val:0x7f6917fe69179ec2; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2f2dacc08696f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xffcb8d02339d9 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x2f0e9e05867a1 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f92f2dacc08696f; op2val:0x5f9ffcb8d02339d9; op3val:0x7f42f0e9e05867a1; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8d8e137e0ab2b and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xabb8bbe03b7df and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x4c1d6e321fb09 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f88d8e137e0ab2b; op2val:0x5f7abb8bbe03b7df; op3val:0x7f14c1d6e321fb09; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa5666b92c9353 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x592a957961553 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x1c168fe970bd8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8a5666b92c9353; op2val:0x5fa592a957961553; op3val:0x7f41c168fe970bd8; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x048b19826524f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x830a4319a6f37 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x89e8b949a12b6 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa048b19826524f; op2val:0x5f9830a4319a6f37; op3val:0x7f489e8b949a12b6; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbc4dccb7ac380 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf292aaf1ebcd7 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xb0a6f2a5cb1a7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fabc4dccb7ac380; op2val:0x5faf292aaf1ebcd7; op3val:0x7f6b0a6f2a5cb1a7; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeca5a039a6eb7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x23fbd09d7e9b6 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x18f26e7da4557 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faeca5a039a6eb7; op2val:0x5fa23fbd09d7e9b6; op3val:0x7f618f26e7da4557; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc1e74ff66f075 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x369cba5cc20af and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x10f0c5a71c6e6 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fac1e74ff66f075; op2val:0x5f6369cba5cc20af; op3val:0x7f210f0c5a71c6e6; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaa290fc84ffa3 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x026a2990b0a7f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xae2e1c19da3f0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9aa290fc84ffa3; op2val:0x5f9026a2990b0a7f; op3val:0x7f3ae2e1c19da3f0; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3dcff67566087 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe0ea69d310766 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x2a8478c9dcc6b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f93dcff67566087; op2val:0x5fae0ea69d310766; op3val:0x7f52a8478c9dcc6b; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc046064309427 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x39bd6a090d93f and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x12b0a583b7525 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fac046064309427; op2val:0x5f939bd6a090d93f; op3val:0x7f512b0a583b7525; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xe19152f3266af and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x31c5c2101663f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x1f9912db74f8f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f6e19152f3266af; op2val:0x5f931c5c2101663f; op3val:0x7f11f9912db74f8f; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x26d548336aab0 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x48f4a954751bd and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x7adb0acec331e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa26d548336aab0; op2val:0x5f948f4a954751bd; op3val:0x7f47adb0acec331e; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc91ade861e02b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4c090881f6fe3 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x286f7cdc54134 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8c91ade861e02b; op2val:0x5fa4c090881f6fe3; op3val:0x7f4286f7cdc54134; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf3811fe85e90c and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x987aaa2c7bb6a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x8e8291370b1c7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faf3811fe85e90c; op2val:0x5fa987aaa2c7bb6a; op3val:0x7f68e8291370b1c7; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b39db9b4e7ac and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16e333b543801 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x7a44feeac425f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa5b39db9b4e7ac; op2val:0x5fa16e333b543801; op3val:0x7f57a44feeac425f; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x700b33fd6ee45 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x482567721754b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xd7c420f3c2287 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa700b33fd6ee45; op2val:0x5f8482567721754b; op3val:0x7f3d7c420f3c2287; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x551579cd90e3f and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x24b13b2db3adf and fs3 == 0 and fe3 == 0x7eb and fm3 == 0x85f8a1a087a3c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f5551579cd90e3f; op2val:0x5f524b13b2db3adf; op3val:0x7eb85f8a1a087a3c; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xac37e5f72f2b7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3617941ba03e8 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x0359909ec19bc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8ac37e5f72f2b7; op2val:0x5fa3617941ba03e8; op3val:0x7f40359909ec19bc; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbd7ce681c543f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xccb502aebad05 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x90dbb61598ffc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7bd7ce681c543f; op2val:0x5faccb502aebad05; op3val:0x7f390dbb61598ffc; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8bd5a02bf2a55 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xaf054e65e9fad and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x4d3a6e87651f7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f98bd5a02bf2a55; op2val:0x5f9af054e65e9fad; op3val:0x7f44d3a6e87651f7; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49bad4bf8d1a9 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xe5243a8e9dcc7 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x386ecf606b2bc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f949bad4bf8d1a9; op2val:0x5f9e5243a8e9dcc7; op3val:0x7f4386ecf606b2bc; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1776e1d2f84f1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6c5583d2d8f82 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8dba6378f60c4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f91776e1d2f84f1; op2val:0x5fa6c5583d2d8f82; op3val:0x7f48dba6378f60c4; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x46e9bf4155d7b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0e04cdbcecdfb and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x58d0aa1855dbc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f846e9bf4155d7b; op2val:0x5fa0e04cdbcecdfb; op3val:0x7f358d0aa1855dbc; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3fe60f0bd0a72 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x60b0632528095 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xb8b8bebefd1e9 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa3fe60f0bd0a72; op2val:0x5f960b0632528095; op3val:0x7f4b8b8bebefd1e9; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xff18e844c5b43 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x822da8c278e7e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa82dc4511ff204; op2val:0x5f8ff18e844c5b43; op3val:0x7f4822da8c278e7e; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x1175939fbdd3f and fs3 == 0 and fe3 == 0x7ed and fm3 == 0x6c2da93955bf2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f754ed51bc74baf; op2val:0x5f51175939fbdd3f; op3val:0x7ed6c2da93955bf2; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xaef92dbc63746 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xb81986ebb75b2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9056bcd04279ed; op2val:0x5faaef92dbc63746; op3val:0x7f4b81986ebb75b2; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x98ccfd23440fa and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x981d2bf67b45e and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x45daa46e74e8f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa98ccfd23440fa; op2val:0x5fa981d2bf67b45e; op3val:0x7f645daa46e74e8f; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6aedbc8cfe5cb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2b3e748b91f6f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xa83c3605eeafe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f86aedbc8cfe5cb; op2val:0x5fa2b3e748b91f6f; op3val:0x7f3a83c3605eeafe; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0xca57966fc21ff and fs3 == 0 and fe3 == 0x7f0 and fm3 == 0xa3f9d918ac622 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9d5246f4cc80df; op2val:0x5f5ca57966fc21ff; op3val:0x7f0a3f9d918ac622; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13b37e2291279 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3f3a0272551ac and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x57cb237a2f470 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa13b37e2291279; op2val:0x5fa3f3a0272551ac; op3val:0x7f557cb237a2f470; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf09035681be6d and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x6d5a59350bdcb and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x62566df09ee83 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9f09035681be6d; op2val:0x5f96d5a59350bdcb; op3val:0x7f462566df09ee83; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x23d6f3e37b4f1 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x994568f0e642b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xd2918c381f69c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa23d6f3e37b4f1; op2val:0x5f8994568f0e642b; op3val:0x7f3d2918c381f69c; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb4511d7990669 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0xcbc315eca5f3f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x87ccf78033459 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9b4511d7990669; op2val:0x5f6cbc315eca5f3f; op3val:0x7f187ccf78033459; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x09903331c0e00 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xadc175295763d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa9e4795c8459f5; op2val:0x5fa09903331c0e00; op3val:0x7f5adc175295763d; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa416babd18ecb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc5b9547c0fb71 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x74462bc04cea1 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faa416babd18ecb; op2val:0x5fac5b9547c0fb71; op3val:0x7f674462bc04cea1; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea0b252eae7e0 and fs2 == 0 and fe2 == 0x5f3 and fm2 == 0x76274c472f77f and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x661bc1043803c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faea0b252eae7e0; op2val:0x5f376274c472f77f; op3val:0x7ef661bc1043803c; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x13bdffd461269 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xfa686f41f0955 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9d626a0f472da1; op2val:0x5f913bdffd461269; op3val:0x7f3fa686f41f0955; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe7a9ce363cccf and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xf5185d364abd4 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa070d1456013e3; op2val:0x5fae7a9ce363cccf; op3val:0x7f5f5185d364abd4; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1448bcfae2b22 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb877e6e317fa2 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xdb5e6bcd7e6b0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa1448bcfae2b22; op2val:0x5fab877e6e317fa2; op3val:0x7f5db5e6bcd7e6b0; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0125698e86242 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf6d2bfc0c98c8 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xf9130e4aa238e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa0125698e86242; op2val:0x5faf6d2bfc0c98c8; op3val:0x7f5f9130e4aa238e; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2fb5c72500d57 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x930bcbd2d6035 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xde29271e14d4a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa2fb5c72500d57; op2val:0x5f9930bcbd2d6035; op3val:0x7f4de29271e14d4a; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x643f753bef22f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6821b2764a929 and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xf5282163218cf and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f6643f753bef22f; op2val:0x5fa6821b2764a929; op3val:0x7f1f5282163218cf; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x92b176af6d495 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xf57237ddcb451 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8a647c169738d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f992b176af6d495; op2val:0x5f9f57237ddcb451; op3val:0x7f48a647c169738d; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x04507a06e8587 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8e9007ca7a085 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x954792e778097 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa04507a06e8587; op2val:0x5fa8e9007ca7a085; op3val:0x7f5954792e778097; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x595634ef3eec0 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x7fb2260b115e9 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x02cc253a3bbd7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa595634ef3eec0; op2val:0x5f97fb2260b115e9; op3val:0x7f502cc253a3bbd7; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6251b45dfbd3b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x18fc26b87eae6 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x84e65b4bd2c89 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f86251b45dfbd3b; op2val:0x5fa18fc26b87eae6; op3val:0x7f384e65b4bd2c89; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf121a7be6521b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x98455e99dfdb1 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8c6a2c8f6974f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8f121a7be6521b; op2val:0x5fa98455e99dfdb1; op3val:0x7f48c6a2c8f6974f; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02b48f992cb49 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2d91b4369c450 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x30c18b3a944c6 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa02b48f992cb49; op2val:0x5fa2d91b4369c450; op3val:0x7f530c18b3a944c6; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2cd75d7e4d070 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc3d4499ff58c3 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x097c714a29230 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa2cd75d7e4d070; op2val:0x5fac3d4499ff58c3; op3val:0x7f6097c714a29230; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa8fa703a4078c and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x57324a8c267f6 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x1cdd84848288a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faa8fa703a4078c; op2val:0x5fa57324a8c267f6; op3val:0x7f61cdd84848288a; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6c2153e00d1a1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdf7523fde6c5d and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x54fc7d2ea0c85 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6c2153e00d1a1; op2val:0x5fadf7523fde6c5d; op3val:0x7f654fc7d2ea0c85; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xef2a4f7c7db7f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x54ae0bf2a236d and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x497a6bb7bf610 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7ef2a4f7c7db7f; op2val:0x5f954ae0bf2a236d; op3val:0x7f2497a6bb7bf610; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7cbc6ca11d457 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xfc2ea66e5019e and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x79e5a478bcc8d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f87cbc6ca11d457; op2val:0x5fafc2ea66e5019e; op3val:0x7f479e5a478bcc8d; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xacd7053aa42a2 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1ce794bb05231 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xdd4278f85eba8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faacd7053aa42a2; op2val:0x5fa1ce794bb05231; op3val:0x7f5dd4278f85eba8; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd6a24a79e3255 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x28bc82f697c4d and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x10c31b07b0778 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9d6a24a79e3255; op2val:0x5f928bc82f697c4d; op3val:0x7f410c31b07b0778; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdd5b61587fd27 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xd8d08ead45f1f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xb8d2afe306604 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8dd5b61587fd27; op2val:0x5f8d8d08ead45f1f; op3val:0x7f2b8d2afe306604; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc60647c381e87 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc0659af8369fd and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x8d9f987438cd7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8c60647c381e87; op2val:0x5f9c0659af8369fd; op3val:0x7f38d9f987438cd7; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb9876f8130c3 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xb03f53dce8bcd and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x767f824c9009a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8bb9876f8130c3; op2val:0x5f9b03f53dce8bcd; op3val:0x7f3767f824c9009a; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1534040096d03 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe0d828b86622a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x0455cbbe23f06 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa1534040096d03; op2val:0x5fae0d828b86622a; op3val:0x7f60455cbbe23f06; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcd87e65450c45 and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0xf52fb02db735f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xc3c877ab128af and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5facd87e65450c45; op2val:0x5f5f52fb02db735f; op3val:0x7f1c3c877ab128af; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x716db1f3511f7 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xd481499755d4b and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x520b8de5139c0 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa716db1f3511f7; op2val:0x5f8d481499755d4b; op3val:0x7f4520b8de5139c0; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86499331191c4 and fs2 == 0 and fe2 == 0x5f2 and fm2 == 0x140b6c88868ff and fs3 == 0 and fe3 == 0x7ed and fm3 == 0xa4d8bd5170836 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa86499331191c4; op2val:0x5f2140b6c88868ff; op3val:0x7eda4d8bd5170836; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xd071ef258365f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xabe96758f2a09 and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x842abe8ab8f07 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f5d071ef258365f; op2val:0x5faabe96758f2a09; op3val:0x7f1842abe8ab8f07; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d9d98184b9d9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x93d38c0d6fe63 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x072162eb26885 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4d9d98184b9d9; op2val:0x5fa93d38c0d6fe63; op3val:0x7f6072162eb26885; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0530d08f17f5b and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xfb5355e167379 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x02ce59bf18a74 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f90530d08f17f5b; op2val:0x5f9fb5355e167379; op3val:0x7f402ce59bf18a74; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x518e14dba799f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xc74ef4423e96b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x2c2dd137c36cc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9518e14dba799f; op2val:0x5f8c74ef4423e96b; op3val:0x7f32c2dd137c36cc; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x60ffd67bcec83 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x945c6c109c016 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x16c997b7a634d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f860ffd67bcec83; op2val:0x5fa945c6c109c016; op3val:0x7f416c997b7a634d; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x79341c032efa9 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x5932a24c0014f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xfca1d510b8400 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa79341c032efa9; op2val:0x5f85932a24c0014f; op3val:0x7f3fca1d510b8400; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0be093ea29884 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x790b8fbbe558d and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8a89d2e141e22 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa0be093ea29884; op2val:0x5f9790b8fbbe558d; op3val:0x7f48a89d2e141e22; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1386e108c661f and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x32ba6165fce3f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x4a1fd1cfdd2a7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f91386e108c661f; op2val:0x5f732ba6165fce3f; op3val:0x7f14a1fd1cfdd2a7; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabce33873116b and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xa962fc3cbb55f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x636f5effd12df and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8abce33873116b; op2val:0x5f8a962fc3cbb55f; op3val:0x7f2636f5effd12df; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9b91e4d1678bb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x60b89491a6a27 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x1b88ad2b7359f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f99b91e4d1678bb; op2val:0x5fa60b89491a6a27; op3val:0x7f51b88ad2b7359f; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03aaf26d74a36 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe46ac54a58195 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xeb5b7f3d472bf and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa03aaf26d74a36; op2val:0x5fae46ac54a58195; op3val:0x7f5eb5b7f3d472bf; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6bb39a08936b7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x504dcbdc51a65 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xddca40d1038ea and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f96bb39a08936b7; op2val:0x5fa504dcbdc51a65; op3val:0x7f4ddca40d1038ea; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1296, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x5f8132d8f91b7583
.dword 0x5fab1e2d5b3584f7
.dword 0x7f3d263e3c3e5fcb
.dword 0x5f9518e14dba799f
.dword 0x5f8c74ef4423e96b
.dword 0x5f9518e14dba799f
.dword 0x5f860ffd67bcec83
.dword 0x5fa945c6c109c016
.dword 0x5fa945c6c109c016
.dword 0x5fa38262f6f599e6
.dword 0x5f8db5e85647ec13
.dword 0x7f421d10d57b324c
.dword 0x5fa6d479d3fc4771
.dword 0x5faa14821a399792
.dword 0x7f629b449a461e81
.dword 0x5fa79341c032efa9
.dword 0x5fa79341c032efa9
.dword 0x7f3fca1d510b8400
.dword 0x5fa0be093ea29884
.dword 0x5f9790b8fbbe558d
.dword 0x5fa0be093ea29884
.dword 0x5f91386e108c661f
.dword 0x5f732ba6165fce3f
.dword 0x5f732ba6165fce3f
.dword 0x5f8abce33873116b
.dword 0x5f8abce33873116b
.dword 0x5f8abce33873116b
.dword 0x5f99b91e4d1678bb
.dword 0x5f99b91e4d1678bb
.dword 0x5f99b91e4d1678bb
.dword 0x5fa03aaf26d74a36
.dword 0x5fa03aaf26d74a36
.dword 0x7f5eb5b7f3d472bf
.dword 0x5f96bb39a08936b7
.dword 0x5fa504dcbdc51a65
.dword 0x7f4ddca40d1038ea
.dword 0x5fa05438a864ff48
.dword 0x5fa7d4f90e5ccfbd
.dword 0x7f58526b8e228fad
.dword 0x5f9f02c0f95b62b9
.dword 0x5f9de5026c152607
.dword 0x7f4cf86cefdd20fa
.dword 0x5fa16a782d36f4f6
.dword 0x5f8377075764a44b
.dword 0x7f352ffe91369924
.dword 0x5f90eeee9e62e9b9
.dword 0x5fa6a8199da501dc
.dword 0x7f47fa6fff730ed6
.dword 0x5faa1726431ab40b
.dword 0x5fa35ff2ac0a5f02
.dword 0x7f5f97f2998aa004
.dword 0x5fa90a064114beb1
.dword 0x5fab14a0c4b66d3b
.dword 0x7f65309956dd980f
.dword 0x5fa422ea209fd4bd
.dword 0x5fa44789671d8cc1
.dword 0x7f5985ac84733a24
.dword 0x5fa4c285c929de04
.dword 0x5fa4264cf0154662
.dword 0x7f5a24d90caf05e6
.dword 0x5f9f886e2fe6ac5f
.dword 0x5fa7dd5590fd9313
.dword 0x7f578429bcad1ba4
.dword 0x5fa77b8ab6cc4ab4
.dword 0x5facbbac03deb701
.dword 0x7f6515d18d6f961b
.dword 0x5f99efa662b0261b
.dword 0x5fab8f52527c8b37
.dword 0x7f56565e0bc30c0c
.dword 0x5f2cd462b6d554ff
.dword 0x5f98e80a6ca28041
.dword 0x7ed67057390b9773
.dword 0x5fa3d750eeace47f
.dword 0x5fa0fd97d0ca1907
.dword 0x7f5511c9e1607861
.dword 0x5faf9a59e3f349b5
.dword 0x5f938aa27d9f85c9
.dword 0x7f534c8f7c770922
.dword 0x5faab4fd6611517f
.dword 0x5f9a2c7cf77ff3b5
.dword 0x7f55d82f0b402329
.dword 0x5fa059c938cba700
.dword 0x5faf95a713b177ca
.dword 0x7f6023725e97dbc0
.dword 0x5fa324293ee39f7d
.dword 0x5fac36952ef44a5a
.dword 0x7f60e04a591773fd
.dword 0x5f8a19db08e903fb
.dword 0x5f2fbfd7fab4eeff
.dword 0x7ec9e586ae34221e
.dword 0x5f9f81d438e79e89
.dword 0x5fa4b9b2bfabd6ff
.dword 0x7f5467fb355e56d4
.dword 0x5f998fd08ab70511
.dword 0x5fa90f0d1eecae4a
.dword 0x7f540460d1409d77
.dword 0x5f9c4ee0c5be65d1
.dword 0x5f9cc5765acd3c57
.dword 0x7f4973b2f7f83545
.dword 0x5f96d61e5e11a237
.dword 0x5fa0e89a794b74d2
.dword 0x7f48221b9068e363
.dword 0x5fa2528fb338cf74
.dword 0x5f93eb8b3b7f528d
.dword 0x7f46cfc6b4ce6d80
.dword 0x5faf2712f698f82f
.dword 0x5f817be9a133f3af
.dword 0x7f410563b5565e47
.dword 0x5fa172fde92f86c8
.dword 0x5faee0d506b2167d
.dword 0x7f60d667250d9eb3
.dword 0x5fa9d7713018baf1
.dword 0x5f7e39ef9237c697
.dword 0x7f3868c355de399d
.dword 0x5f988745c9a37993
.dword 0x5f922dd5567c07b9
.dword 0x7f3bde7204854c2b
.dword 0x5fab61e0247cb923
.dword 0x5fa89c3334d5f5bb
.dword 0x7f650f111142c704
.dword 0x5faf27dcf8ac02d4
.dword 0x5fa173ba796d85b8
.dword 0x7f60fdda3426ce98
.dword 0x5fa5df7455c91c2a
.dword 0x5fa9509d7b71e92e
.dword 0x7f614dad2a8f1d49
.dword 0x5f917c87a27d34af
.dword 0x5fa2be5dcb079904
.dword 0x7f447c25e32f1122
.dword 0x5f8a720f32c400b7
.dword 0x5f9239dca92ff1cf
.dword 0x7f2e1ff427365458
.dword 0x5fa414b2a3e47216
.dword 0x5fa3614d00f80d8b
.dword 0x7f5852b24273e6f9
.dword 0x5f884ca278742ceb
.dword 0x5f9c14dba4a1f611
.dword 0x7f3552e4d86c955a
.dword 0x5f8fc58dd60fc47b
.dword 0x5fa7fc88823ccc91
.dword 0x7f47d0b937bacce2
.dword 0x5f9a2057f7463cff
.dword 0x5f7e3b25f522e53f
.dword 0x7f28ae9d178b979e
.dword 0x5faeb39a20d91a7d
.dword 0x5f7e83058dcce2cf
.dword 0x7f3d461511de086e
.dword 0x5f94d474b38149bf
.dword 0x5f802b9579f55c5b
.dword 0x7f250d3246689cde
.dword 0x5fa9afd0179d1bae
.dword 0x5f9bb4fcc32d8c25
.dword 0x7f563d9f6ba408d7
.dword 0x5fad93edf4f6c627
.dword 0x5faf1421cf676cc1
.dword 0x7f6cb9ea3a4a12c4
.dword 0x5fa51c6792bf1bb8
.dword 0x5fa669bd8c53f9f9
.dword 0x7f5d9292ea289924
.dword 0x5f81cee2cf81f5c7
.dword 0x5fa8d300de77b552
.dword 0x7f3ba12d7def3a09
.dword 0x5f911f2665e52fc1
.dword 0x5fad362c3c55baac
.dword 0x7f4f426e10817182
.dword 0x5faf6629b45c9248
.dword 0x5fa9daacd1054eee
.dword 0x7f695e62233da829
.dword 0x5f85181b18b5230b
.dword 0x5fa75b4f2bfa2cac
.dword 0x7f3ecb086ea14ef4
.dword 0x5fa6f2eb668c42a0
.dword 0x5f9645543b126259
.dword 0x7f4ff1741439153e
.dword 0x5fa83f7d2b210b05
.dword 0x5f6ab1349fae80cf
.dword 0x7f2439dcbf8c7e90
.dword 0x5f9009c15369fd69
.dword 0x5f8bdaeddf112cfb
.dword 0x7f2bebe996ec313e
.dword 0x5faeb8f7360e493b
.dword 0x5fa24789c982401c
.dword 0x7f618cb9bc413615
.dword 0x5fa306c808570336
.dword 0x5fab669f507e33a4
.dword 0x7f604abd1e31e6fd
.dword 0x5f97c88779524935
.dword 0x5fa670e856ce1b48
.dword 0x7f50adc7abeb7d2e
.dword 0x5f93f4908263c63b
.dword 0x5fa6296d3932c17a
.dword 0x7f4ba3f19f0658e7
.dword 0x5f846970482fa4d3
.dword 0x5fa8834cdb2b7fe3
.dword 0x7f3f45a9c0068395
.dword 0x5f725131186c166f
.dword 0x5fa05fc74a94c67c
.dword 0x7f22bed753218d46
.dword 0x5f919d4ad7c76167
.dword 0x5fa4af6ee0e0bc86
.dword 0x7f46c5c001455b65
.dword 0x5fa1eedb9271f525
.dword 0x5fad05a5fee9b2b0
.dword 0x7f6043a1557d3940
.dword 0x5f9ea51987a6fe4b
.dword 0x5f8cced59b67d14f
.dword 0x7f3b9689bad06ffb
.dword 0x5fa767cf00e725e9
.dword 0x5f8e830fb501fc6b
.dword 0x7f46512e85520cf5
.dword 0x5fa4c34b3fae86a6
.dword 0x5f9c0d628f70dc65
.dword 0x7f5233912172fa8b
.dword 0x5f3ea0625aeb847f
.dword 0x5fa0eb1fe944dafc
.dword 0x7ef031398a626e75
.dword 0x5f99ab5479609cdf
.dword 0x5fa39926185b639f
.dword 0x7f4f7127c5e7a364
.dword 0x5f90954e8fdda0e7
.dword 0x5faa86a1651b8f6d
.dword 0x7f4b7e2962ee9dc9
.dword 0x5f96b764b4a3fc09
.dword 0x5f81b34b397f2a6f
.dword 0x7f29216983dd17d0
.dword 0x5f9aaaf2dfcf7ca9
.dword 0x5fa242628c135d65
.dword 0x7f4e6ef6a62c52c8
.dword 0x5f908290cbe2e23f
.dword 0x5f58fe8ae58338bf
.dword 0x7ef9ca813f6e03a1
.dword 0x5f9d03069816412f
.dword 0x5f995351e6b0b955
.dword 0x7f46f5e740ba85ae
.dword 0x5fa1939e8900399e
.dword 0x5fa152f739c1f1c1
.dword 0x7f5307fc9460b457
.dword 0x5f707d72d5d390a7
.dword 0x5faed40ea1c96a68
.dword 0x7f2fc5c4970046b3
.dword 0x5fa6dfd78772ca12
.dword 0x5fa55e7184fd3b64
.dword 0x7f5e8cd03f0552bb
.dword 0x5f86cdc754c86703
.dword 0x5f9bb0574c4cc8c3
.dword 0x7f33bb4a2db0c4d6
.dword 0x5faae72a87c61e34
.dword 0x5fa7e0bf1ff29f2c
.dword 0x7f64131969ee9626
.dword 0x5face619667e7e02
.dword 0x5fa9b930ceb054c0
.dword 0x7f673b022eb9f911
.dword 0x5fad22aa76e3f8bc
.dword 0x5f6042d6f1e7510f
.dword 0x7f1d9c60de35bafe
.dword 0x5f92c8882902a979
.dword 0x5fac99ac0cd3b3ca
.dword 0x7f50c9aaec49bc4c
.dword 0x5f7b5c56d6b2c837
.dword 0x5fa0759f6f56b8c0
.dword 0x7f2c257ab5b89fd2
.dword 0x5faf84445890ef61
.dword 0x5faa4a2387765198
.dword 0x7f69e47c6417daf5
.dword 0x5fae60134aa9369f
.dword 0x5f862ccc22df8107
.dword 0x7f450c93237036af
.dword 0x5fa00bb60f1c696b
.dword 0x5fa97081394ff7c0
.dword 0x7f59832009ebf04c
.dword 0x5f9f9196c3c02c3d
.dword 0x5fab9ad2076fbbdc
.dword 0x7f5b3b930d7baa17
.dword 0x5fa4550cd40a27ab
.dword 0x5f929cd1fe017e0f
.dword 0x7f47a6f6855e7290
.dword 0x5fa1a3782778609c
.dword 0x5f72279337555ac7
.dword 0x7f240387ec279246
.dword 0x5f54dcede7752c7f
.dword 0x5f8f3381366daa33
.dword 0x7ef4579ad17dc3e2
.dword 0x5fa2870c773af305
.dword 0x5fa31220085e40c2
.dword 0x7f56155bd365bbff
.dword 0x5f93613a61f77f37
.dword 0x5f9565b7f0cebd9f
.dword 0x7f39ead12cd7d704
.dword 0x5f9445637e5783c3
.dword 0x5fab1bba5e50e71c
.dword 0x7f512c1c8d9dd383
.dword 0x5f98fd99bfbb97c5
.dword 0x5f93a25a98541333
.dword 0x7f3eaabbc8d16c1b
.dword 0x5fa4dd45324c2409
.dword 0x5fa497462d5b0458
.dword 0x7f5ad9da3f1d9a6e
.dword 0x5f91f868e0b71f1b
.dword 0x5faf77d273035d94
.dword 0x7f51abef8e7bee8e
.dword 0x5f93ab263197fe7f
.dword 0x5f8f896b45c47573
.dword 0x7f336243aab911ee
.dword 0x5fa52dbf656c5de7
.dword 0x5f9094dd69773d7b
.dword 0x7f45f2cba3543edf
.dword 0x5faf5bc627909931
.dword 0x5fa15f8b7f786fc2
.dword 0x7f6106626cd9429d
.dword 0x5f7c823d880083bf
.dword 0x5f8b8b73fc8fea5b
.dword 0x7f188a20fb162d83
.dword 0x5fad3a81e544f745
.dword 0x5faf08b5da67e1b1
.dword 0x7f6c58a2910050f8
.dword 0x5f9cca40bb2151a9
.dword 0x5f940ccb2b303daf
.dword 0x7f4209eb1720d07f
.dword 0x5faf715337b3d172
.dword 0x5f92ea49f5cfd6b1
.dword 0x7f5295f42bea2cf6
.dword 0x5fa4dd98614508c9
.dword 0x5f644919c1beab5f
.dword 0x7f1a745317b9d2f2
.dword 0x5f9037df25b16113
.dword 0x5f9e87555a840377
.dword 0x7f3ef1f0560c2e8d
.dword 0x5faf0c672a2bf4a4
.dword 0x5fad185a4345fd91
.dword 0x7f6c3ade5fbf7e0d
.dword 0x5f7a5356adec5cbf
.dword 0x5fad24fb6bdbd8af
.dword 0x7f37f9f3258d489d
.dword 0x5f856cd20ae4ecf3
.dword 0x5f8ee6dc228b09a7
.dword 0x7f24b0967329acc3
.dword 0x5faf9efe9258e03a
.dword 0x5f9af1e2f94bd10d
.dword 0x7f5aa0348d646536
.dword 0x5fac52697f28d5d4
.dword 0x5f647df70c06ea5f
.dword 0x7f2222fe8255911d
.dword 0x5fa574031c0ee5b5
.dword 0x5f77788b8d3bac8f
.dword 0x7f2f7865ace13c42
.dword 0x5fa92f39602ed989
.dword 0x5faa7d13a52ed5ec
.dword 0x7f64d8ce8c5034f3
.dword 0x5fad9a2688750f46
.dword 0x5f9d4c176f2c9031
.dword 0x7f5b1a16b4d1ccf1
.dword 0x5f9112000aeb4c63
.dword 0x5fac812c292ea556
.dword 0x7f4e695050e3d10e
.dword 0x5fa243d79e337b38
.dword 0x5f8ca2a9a90e32e7
.dword 0x7f405834f4c71168
.dword 0x5fa3af9a9e598175
.dword 0x5fa9055ab3b464b5
.dword 0x7f5ec8f8109d9636
.dword 0x5fa9383ffc96dd3f
.dword 0x5faa831ef4800484
.dword 0x7f64e50aa89a669f
.dword 0x5f6409de9a05b77f
.dword 0x5f72bccdcc2ad897
.dword 0x7ee7779022ffc65b
.dword 0x5f8153045947810b
.dword 0x5fa1a3304314bd3d
.dword 0x7f3318e69cd8a447
.dword 0x5fa353d32b1e3fb0
.dword 0x5fae89afcadc456f
.dword 0x7f6271bf056df83f
.dword 0x5f95c73bb8e94b2b
.dword 0x5f92a34571e1ab07
.dword 0x7f395e5f66a60af9
.dword 0x5fa334e9260607a0
.dword 0x5faaea8e11056b0f
.dword 0x7f6027c59ccce767
.dword 0x5fad26cfda272030
.dword 0x5f8b428ab449c4c7
.dword 0x7f48d55dc860d59c
.dword 0x5fa73702c4295ebb
.dword 0x5f75ad9a8441acdf
.dword 0x7f2f7416a0bf0cd4
.dword 0x5f9f0206ee24c395
.dword 0x5faf89488e214d07
.dword 0x7f5e8efdb2a8062c
.dword 0x5f9601a2a750c857
.dword 0x5fac3c90ab59cc1f
.dword 0x7f536b14e092d5ca
.dword 0x5fa59522cc62b803
.dword 0x5faace72798455d6
.dword 0x7f6214698b5515cc
.dword 0x5fa90be1a88a62f5
.dword 0x5f95b3be3b6f1597
.dword 0x7f50fc7b71f249eb
.dword 0x5f89b58d2db8786f
.dword 0x5f94f9b4267d3677
.dword 0x7f30da15ab456074
.dword 0x5fabe452c99bfb01
.dword 0x5facca2a15201aa9
.dword 0x7f6917fe69179ec2
.dword 0x5f92f2dacc08696f
.dword 0x5f9ffcb8d02339d9
.dword 0x7f42f0e9e05867a1
.dword 0x5f88d8e137e0ab2b
.dword 0x5f7abb8bbe03b7df
.dword 0x7f14c1d6e321fb09
.dword 0x5f8a5666b92c9353
.dword 0x5fa592a957961553
.dword 0x7f41c168fe970bd8
.dword 0x5fa048b19826524f
.dword 0x5f9830a4319a6f37
.dword 0x7f489e8b949a12b6
.dword 0x5fabc4dccb7ac380
.dword 0x5faf292aaf1ebcd7
.dword 0x7f6b0a6f2a5cb1a7
.dword 0x5faeca5a039a6eb7
.dword 0x5fa23fbd09d7e9b6
.dword 0x7f618f26e7da4557
.dword 0x5fac1e74ff66f075
.dword 0x5f6369cba5cc20af
.dword 0x7f210f0c5a71c6e6
.dword 0x5f9aa290fc84ffa3
.dword 0x5f9026a2990b0a7f
.dword 0x7f3ae2e1c19da3f0
.dword 0x5f93dcff67566087
.dword 0x5fae0ea69d310766
.dword 0x7f52a8478c9dcc6b
.dword 0x5fac046064309427
.dword 0x5f939bd6a090d93f
.dword 0x7f512b0a583b7525
.dword 0x5f6e19152f3266af
.dword 0x5f931c5c2101663f
.dword 0x7f11f9912db74f8f
.dword 0x5fa26d548336aab0
.dword 0x5f948f4a954751bd
.dword 0x7f47adb0acec331e
.dword 0x5f8c91ade861e02b
.dword 0x5fa4c090881f6fe3
.dword 0x7f4286f7cdc54134
.dword 0x5faf3811fe85e90c
.dword 0x5fa987aaa2c7bb6a
.dword 0x7f68e8291370b1c7
.dword 0x5fa5b39db9b4e7ac
.dword 0x5fa16e333b543801
.dword 0x7f57a44feeac425f
.dword 0x5fa700b33fd6ee45
.dword 0x5f8482567721754b
.dword 0x7f3d7c420f3c2287
.dword 0x5f5551579cd90e3f
.dword 0x5f524b13b2db3adf
.dword 0x7eb85f8a1a087a3c
.dword 0x5f8ac37e5f72f2b7
.dword 0x5fa3617941ba03e8
.dword 0x7f40359909ec19bc
.dword 0x5f7bd7ce681c543f
.dword 0x5faccb502aebad05
.dword 0x7f390dbb61598ffc
.dword 0x5f98bd5a02bf2a55
.dword 0x5f9af054e65e9fad
.dword 0x7f44d3a6e87651f7
.dword 0x5f949bad4bf8d1a9
.dword 0x5f9e5243a8e9dcc7
.dword 0x7f4386ecf606b2bc
.dword 0x5f91776e1d2f84f1
.dword 0x5fa6c5583d2d8f82
.dword 0x7f48dba6378f60c4
.dword 0x5f846e9bf4155d7b
.dword 0x5fa0e04cdbcecdfb
.dword 0x7f358d0aa1855dbc
.dword 0x5fa3fe60f0bd0a72
.dword 0x5f960b0632528095
.dword 0x7f4b8b8bebefd1e9
.dword 0x5fa82dc4511ff204
.dword 0x5f8ff18e844c5b43
.dword 0x7f4822da8c278e7e
.dword 0x5f754ed51bc74baf
.dword 0x5f51175939fbdd3f
.dword 0x7ed6c2da93955bf2
.dword 0x5f9056bcd04279ed
.dword 0x5faaef92dbc63746
.dword 0x7f4b81986ebb75b2
.dword 0x5fa98ccfd23440fa
.dword 0x5fa981d2bf67b45e
.dword 0x7f645daa46e74e8f
.dword 0x5f86aedbc8cfe5cb
.dword 0x5fa2b3e748b91f6f
.dword 0x7f3a83c3605eeafe
.dword 0x5f9d5246f4cc80df
.dword 0x5f5ca57966fc21ff
.dword 0x7f0a3f9d918ac622
.dword 0x5fa13b37e2291279
.dword 0x5fa3f3a0272551ac
.dword 0x7f557cb237a2f470
.dword 0x5f9f09035681be6d
.dword 0x5f96d5a59350bdcb
.dword 0x7f462566df09ee83
.dword 0x5fa23d6f3e37b4f1
.dword 0x5f8994568f0e642b
.dword 0x7f3d2918c381f69c
.dword 0x5f9b4511d7990669
.dword 0x5f6cbc315eca5f3f
.dword 0x7f187ccf78033459
.dword 0x5fa9e4795c8459f5
.dword 0x5fa09903331c0e00
.dword 0x7f5adc175295763d
.dword 0x5faa416babd18ecb
.dword 0x5fac5b9547c0fb71
.dword 0x7f674462bc04cea1
.dword 0x5faea0b252eae7e0
.dword 0x5f376274c472f77f
.dword 0x7ef661bc1043803c
.dword 0x5f9d626a0f472da1
.dword 0x5f913bdffd461269
.dword 0x7f3fa686f41f0955
.dword 0x5fa070d1456013e3
.dword 0x5fae7a9ce363cccf
.dword 0x7f5f5185d364abd4
.dword 0x5fa1448bcfae2b22
.dword 0x5fab877e6e317fa2
.dword 0x7f5db5e6bcd7e6b0
.dword 0x5fa0125698e86242
.dword 0x5faf6d2bfc0c98c8
.dword 0x7f5f9130e4aa238e
.dword 0x5fa2fb5c72500d57
.dword 0x5f9930bcbd2d6035
.dword 0x7f4de29271e14d4a
.dword 0x5f6643f753bef22f
.dword 0x5fa6821b2764a929
.dword 0x7f1f5282163218cf
.dword 0x5f992b176af6d495
.dword 0x5f9f57237ddcb451
.dword 0x7f48a647c169738d
.dword 0x5fa04507a06e8587
.dword 0x5fa8e9007ca7a085
.dword 0x7f5954792e778097
.dword 0x5fa595634ef3eec0
.dword 0x5f97fb2260b115e9
.dword 0x7f502cc253a3bbd7
.dword 0x5f86251b45dfbd3b
.dword 0x5fa18fc26b87eae6
.dword 0x7f384e65b4bd2c89
.dword 0x5f8f121a7be6521b
.dword 0x5fa98455e99dfdb1
.dword 0x7f48c6a2c8f6974f
.dword 0x5fa02b48f992cb49
.dword 0x5fa2d91b4369c450
.dword 0x7f530c18b3a944c6
.dword 0x5fa2cd75d7e4d070
.dword 0x5fac3d4499ff58c3
.dword 0x7f6097c714a29230
.dword 0x5faa8fa703a4078c
.dword 0x5fa57324a8c267f6
.dword 0x7f61cdd84848288a
.dword 0x5fa6c2153e00d1a1
.dword 0x5fadf7523fde6c5d
.dword 0x7f654fc7d2ea0c85
.dword 0x5f7ef2a4f7c7db7f
.dword 0x5f954ae0bf2a236d
.dword 0x7f2497a6bb7bf610
.dword 0x5f87cbc6ca11d457
.dword 0x5fafc2ea66e5019e
.dword 0x7f479e5a478bcc8d
.dword 0x5faacd7053aa42a2
.dword 0x5fa1ce794bb05231
.dword 0x7f5dd4278f85eba8
.dword 0x5f9d6a24a79e3255
.dword 0x5f928bc82f697c4d
.dword 0x7f410c31b07b0778
.dword 0x5f8dd5b61587fd27
.dword 0x5f8d8d08ead45f1f
.dword 0x7f2b8d2afe306604
.dword 0x5f8c60647c381e87
.dword 0x5f9c0659af8369fd
.dword 0x7f38d9f987438cd7
.dword 0x5f8bb9876f8130c3
.dword 0x5f9b03f53dce8bcd
.dword 0x7f3767f824c9009a
.dword 0x5fa1534040096d03
.dword 0x5fae0d828b86622a
.dword 0x7f60455cbbe23f06
.dword 0x5facd87e65450c45
.dword 0x5f5f52fb02db735f
.dword 0x7f1c3c877ab128af
.dword 0x5fa716db1f3511f7
.dword 0x5f8d481499755d4b
.dword 0x7f4520b8de5139c0
.dword 0x5fa86499331191c4
.dword 0x5f2140b6c88868ff
.dword 0x7eda4d8bd5170836
.dword 0x5f5d071ef258365f
.dword 0x5faabe96758f2a09
.dword 0x7f1842abe8ab8f07
.dword 0x5fa4d9d98184b9d9
.dword 0x5fa93d38c0d6fe63
.dword 0x7f6072162eb26885
.dword 0x5f90530d08f17f5b
.dword 0x5f9fb5355e167379
.dword 0x7f402ce59bf18a74
.dword 0x5f9518e14dba799f
.dword 0x5f8c74ef4423e96b
.dword 0x7f32c2dd137c36cc
.dword 0x5f860ffd67bcec83
.dword 0x5fa945c6c109c016
.dword 0x7f416c997b7a634d
.dword 0x5fa79341c032efa9
.dword 0x5f85932a24c0014f
.dword 0x7f3fca1d510b8400
.dword 0x5fa0be093ea29884
.dword 0x5f9790b8fbbe558d
.dword 0x7f48a89d2e141e22
.dword 0x5f91386e108c661f
.dword 0x5f732ba6165fce3f
.dword 0x7f14a1fd1cfdd2a7
.dword 0x5f8abce33873116b
.dword 0x5f8a962fc3cbb55f
.dword 0x7f2636f5effd12df
.dword 0x5f99b91e4d1678bb
.dword 0x5fa60b89491a6a27
.dword 0x7f51b88ad2b7359f
.dword 0x5fa03aaf26d74a36
.dword 0x5fae46ac54a58195
.dword 0x7f5eb5b7f3d472bf
.dword 0x5f96bb39a08936b7
.dword 0x5fa504dcbdc51a65
.dword 0x7f4ddca40d1038ea
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 164*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
