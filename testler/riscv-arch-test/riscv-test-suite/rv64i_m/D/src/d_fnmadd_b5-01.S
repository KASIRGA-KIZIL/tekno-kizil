
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:53:03 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmadd1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V FD extension for the fnmadd_b5 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmadd_b5)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f4, rs2==f22, rs3==f10, rd==f10, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f4; op2:f22; op3:f10; dest:f10; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc; op3val:0x7fea4d72905280d4; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f10, f4, f22, f10, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==f20, rs2==f20, rs3==f20, rd==f18, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 4  
// opcode: fnmadd.d ; op1:f20; op2:f20; op3:f20; dest:f18; op1val:0x7fdc9ed4464571af; op2val:0x7fdc9ed4464571af; op3val:0x7fdc9ed4464571af; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f18, f20, f20, f20, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f29, rs2==f10, rs3==f29, rd==f11, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 3  
// opcode: fnmadd.d ; op1:f29; op2:f10; op3:f29; dest:f11; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fdc9ed4464571af; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f11, f29, f10, f29, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==f26, rs2==f15, rs3==f26, rd==f26, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 2  
// opcode: fnmadd.d ; op1:f26; op2:f15; op3:f26; dest:f26; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fdc9ed4464571af; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f26, f26, f15, f26, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f30, rs2==f5, rs3==f24, rd==f23, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 1  
// opcode: fnmadd.d ; op1:f30; op2:f5; op3:f24; dest:f23; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fea99ad8d852394; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f23, f30, f5, f24, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f2, rs2==f25, rs3==f25, rd==f25, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 0  
// opcode: fnmadd.d ; op1:f2; op2:f25; op3:f25; dest:f25; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x3ffdbdc83df362e4; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f25, f2, f25, f25, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==f24, rs2==f24, rs3==f14, rd==f24, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 4  
// opcode: fnmadd.d ; op1:f24; op2:f24; op3:f14; dest:f24; op1val:0x7fe5726b277b5dce; op2val:0x7fe5726b277b5dce; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f24, f24, f24, f14, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f1, rs2==f9, rs3==f2, rd==f9, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 3  
// opcode: fnmadd.d ; op1:f1; op2:f9; op3:f2; dest:f9; op1val:0x7fe5726b277b5dce; op2val:0x3ff53c36b188da64; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f9, f1, f9, f2, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f23, rs2==f23, rs3==f18, rd==f3, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 2  
// opcode: fnmadd.d ; op1:f23; op2:f23; op3:f18; dest:f3; op1val:0x7fe5726b277b5dce; op2val:0x7fe5726b277b5dce; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f3, f23, f23, f18, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 == rd, rs1==f7, rs2==f7, rs3==f7, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 1  
// opcode: fnmadd.d ; op1:f7; op2:f7; op3:f7; dest:f7; op1val:0x7fe5726b277b5dce; op2val:0x7fe5726b277b5dce; op3val:0x7fe5726b277b5dce; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f7, f7, f7, f7, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f9, rs2==f16, rs3==f16, rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 0  
// opcode: fnmadd.d ; op1:f9; op2:f16; op3:f16; dest:f31; op1val:0x7fe5726b277b5dce; op2val:0x3ff53c36b188da64; op3val:0x3ff53c36b188da64; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f31, f9, f16, f16, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f14, rs2==f18, rs3==f17, rd==f14, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and rm_val == 4  
// opcode: fnmadd.d ; op1:f14; op2:f18; op3:f17; dest:f14; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f; op3val:0x7fec8d5e8a69a864; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f14, f14, f18, f17, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f10, rs2==f6, rs3==f30, rd==f15, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f6; op3:f30; dest:f15; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f; op3val:0x7fec8d5e8a69a864; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f15, f10, f6, f30, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f27, rs2==f4, rs3==f6, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and rm_val == 2  
// opcode: fnmadd.d ; op1:f27; op2:f4; op3:f6; dest:f0; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f; op3val:0x7fec8d5e8a69a864; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f0, f27, f4, f6, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f28, rs2==f19, rs3==f27, rd==f13, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and rm_val == 1  
// opcode: fnmadd.d ; op1:f28; op2:f19; op3:f27; dest:f13; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f; op3val:0x7fec8d5e8a69a864; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f28, f19, f27, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f0, rs2==f12, rs3==f23, rd==f6, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and rm_val == 0  
// opcode: fnmadd.d ; op1:f0; op2:f12; op3:f23; dest:f6; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f; op3val:0x7fec8d5e8a69a864; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f6, f0, f12, f23, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f12, rs2==f29, rs3==f8, rd==f22, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f12; op2:f29; op3:f8; dest:f22; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f; op3val:0x7fcf665a2ce400e3; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f22, f12, f29, f8, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f19, rs2==f8, rs3==f28, rd==f2, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f19; op2:f8; op3:f28; dest:f2; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f; op3val:0x7fcf665a2ce400e3; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f2, f19, f8, f28, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f17, rs2==f1, rs3==f3, rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f17; op2:f1; op3:f3; dest:f29; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f; op3val:0x7fcf665a2ce400e3; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f29, f17, f1, f3, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f15, rs2==f3, rs3==f22, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f15; op2:f3; op3:f22; dest:f1; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f; op3val:0x7fcf665a2ce400e3; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f1, f15, f3, f22, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f31, rs2==f17, rs3==f13, rd==f12, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f31; op2:f17; op3:f13; dest:f12; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f; op3val:0x7fcf665a2ce400e3; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f12, f31, f17, f13, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f5, rs2==f11, rs3==f19, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491f9 and rm_val == 4  
// opcode: fnmadd.d ; op1:f5; op2:f11; op3:f19; dest:f4; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6; op3val:0x7fd974f860c491f9; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f4, f5, f11, f19, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f13, rs2==f30, rs3==f0, rd==f16, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491f9 and rm_val == 3  
// opcode: fnmadd.d ; op1:f13; op2:f30; op3:f0; dest:f16; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6; op3val:0x7fd974f860c491f9; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f16, f13, f30, f0, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f22, rs2==f13, rs3==f15, rd==f30, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491f9 and rm_val == 2  
// opcode: fnmadd.d ; op1:f22; op2:f13; op3:f15; dest:f30; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6; op3val:0x7fd974f860c491f9; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f30, f22, f13, f15, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f11, rs2==f14, rs3==f9, rd==f17, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491f9 and rm_val == 1  
// opcode: fnmadd.d ; op1:f11; op2:f14; op3:f9; dest:f17; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6; op3val:0x7fd974f860c491f9; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f17, f11, f14, f9, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f3, rs2==f26, rs3==f31, rd==f5, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491f9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f3; op2:f26; op3:f31; dest:f5; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6; op3val:0x7fd974f860c491f9; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f5, f3, f26, f31, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f8, rs2==f2, rs3==f11, rd==f20, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf6db8ea3f5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and rm_val == 4  
// opcode: fnmadd.d ; op1:f8; op2:f2; op3:f11; dest:f20; op1val:0x7fab8e934bdcc1bf; op2val:0x401f6db8ea3f5db5; op3val:0x7fdb109b94c05e59; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f20, f8, f2, f11, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f25, rs2==f0, rs3==f21, rd==f8, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf6db8ea3f5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and rm_val == 3  
// opcode: fnmadd.d ; op1:f25; op2:f0; op3:f21; dest:f8; op1val:0x7fab8e934bdcc1bf; op2val:0x401f6db8ea3f5db5; op3val:0x7fdb109b94c05e59; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f8, f25, f0, f21, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f6, rs2==f21, rs3==f5, rd==f19, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf6db8ea3f5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and rm_val == 2  
// opcode: fnmadd.d ; op1:f6; op2:f21; op3:f5; dest:f19; op1val:0x7fab8e934bdcc1bf; op2val:0x401f6db8ea3f5db5; op3val:0x7fdb109b94c05e59; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f19, f6, f21, f5, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f21, rs2==f28, rs3==f1, rd==f27, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf6db8ea3f5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and rm_val == 1  
// opcode: fnmadd.d ; op1:f21; op2:f28; op3:f1; dest:f27; op1val:0x7fab8e934bdcc1bf; op2val:0x401f6db8ea3f5db5; op3val:0x7fdb109b94c05e59; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f27, f21, f28, f1, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f16, rs2==f31, rs3==f12, rd==f28, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf6db8ea3f5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and rm_val == 0  
// opcode: fnmadd.d ; op1:f16; op2:f31; op3:f12; dest:f28; op1val:0x7fab8e934bdcc1bf; op2val:0x401f6db8ea3f5db5; op3val:0x7fdb109b94c05e59; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f28, f16, f31, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f18, rs2==f27, rs3==f4, rd==f21, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165f47cec and rm_val == 4  
// opcode: fnmadd.d ; op1:f18; op2:f27; op3:f4; dest:f21; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025; op3val:0x7fefff0165f47cec; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f21, f18, f27, f4, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165f47cec and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025; op3val:0x7fefff0165f47cec; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165f47cec and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025; op3val:0x7fefff0165f47cec; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165f47cec and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025; op3val:0x7fefff0165f47cec; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165f47cec and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025; op3val:0x7fefff0165f47cec; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8276674380fc3; op2val:0x3ff07fa3fe059060; op3val:0x7fd8e816c2502d73; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8276674380fc3; op2val:0x3ff07fa3fe059060; op3val:0x7fd8e816c2502d73; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8276674380fc3; op2val:0x3ff07fa3fe059060; op3val:0x7fd8e816c2502d73; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8276674380fc3; op2val:0x3ff07fa3fe059060; op3val:0x7fd8e816c2502d73; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8276674380fc3; op2val:0x3ff07fa3fe059060; op3val:0x7fd8e816c2502d73; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52ff3f23 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628; op3val:0x7fd3978b52ff3f23; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52ff3f23 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628; op3val:0x7fd3978b52ff3f23; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52ff3f23 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628; op3val:0x7fd3978b52ff3f23; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52ff3f23 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628; op3val:0x7fd3978b52ff3f23; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52ff3f23 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628; op3val:0x7fd3978b52ff3f23; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6af77f2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e; op3val:0x7fecf127a6af77f2; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6af77f2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e; op3val:0x7fecf127a6af77f2; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6af77f2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e; op3val:0x7fecf127a6af77f2; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6af77f2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e; op3val:0x7fecf127a6af77f2; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6af77f2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e; op3val:0x7fecf127a6af77f2; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x177d952f13e9f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831; op3val:0x7f9177d952f13e9f; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x177d952f13e9f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831; op3val:0x7f9177d952f13e9f; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x177d952f13e9f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831; op3val:0x7f9177d952f13e9f; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x177d952f13e9f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831; op3val:0x7f9177d952f13e9f; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x177d952f13e9f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831; op3val:0x7f9177d952f13e9f; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x9a5803051b37f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b; op3val:0x7f89a5803051b37f; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x9a5803051b37f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b; op3val:0x7f89a5803051b37f; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x9a5803051b37f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b; op3val:0x7f89a5803051b37f; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x9a5803051b37f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b; op3val:0x7f89a5803051b37f; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x9a5803051b37f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b; op3val:0x7f89a5803051b37f; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749af0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcadd854d58145f; op2val:0x40107ed749af0a91; op3val:0x7febb27f4381021f; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749af0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcadd854d58145f; op2val:0x40107ed749af0a91; op3val:0x7febb27f4381021f; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749af0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcadd854d58145f; op2val:0x40107ed749af0a91; op3val:0x7febb27f4381021f; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749af0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcadd854d58145f; op2val:0x40107ed749af0a91; op3val:0x7febb27f4381021f; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749af0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcadd854d58145f; op2val:0x40107ed749af0a91; op3val:0x7febb27f4381021f; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xef5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdef5aa91c82b3d; op2val:0x3fd24583e9aa4a5b; op3val:0x7fc1ad71498eb7bb; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xef5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdef5aa91c82b3d; op2val:0x3fd24583e9aa4a5b; op3val:0x7fc1ad71498eb7bb; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xef5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdef5aa91c82b3d; op2val:0x3fd24583e9aa4a5b; op3val:0x7fc1ad71498eb7bb; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xef5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdef5aa91c82b3d; op2val:0x3fd24583e9aa4a5b; op3val:0x7fc1ad71498eb7bb; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xef5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdef5aa91c82b3d; op2val:0x3fd24583e9aa4a5b; op3val:0x7fc1ad71498eb7bb; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d; op3val:0x7fc91ddf5613b02f; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d; op3val:0x7fc91ddf5613b02f; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d; op3val:0x7fc91ddf5613b02f; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d; op3val:0x7fc91ddf5613b02f; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d; op3val:0x7fc91ddf5613b02f; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872f9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872f9d; op3val:0x7fe5352cf9125058; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872f9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872f9d; op3val:0x7fe5352cf9125058; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872f9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872f9d; op3val:0x7fe5352cf9125058; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872f9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872f9d; op3val:0x7fe5352cf9125058; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872f9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872f9d; op3val:0x7fe5352cf9125058; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cef4bccbe789 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2; op3val:0x7fe0cef4bccbe789; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cef4bccbe789 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2; op3val:0x7fe0cef4bccbe789; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cef4bccbe789 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2; op3val:0x7fe0cef4bccbe789; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cef4bccbe789 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2; op3val:0x7fe0cef4bccbe789; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cef4bccbe789 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2; op3val:0x7fe0cef4bccbe789; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5f3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6f5c1f001498f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2da5f3c7a7466; op2val:0x3fc37c47ae0bad3a; op3val:0x7fb6f5c1f001498f; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5f3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6f5c1f001498f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2da5f3c7a7466; op2val:0x3fc37c47ae0bad3a; op3val:0x7fb6f5c1f001498f; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5f3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6f5c1f001498f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2da5f3c7a7466; op2val:0x3fc37c47ae0bad3a; op3val:0x7fb6f5c1f001498f; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5f3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6f5c1f001498f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2da5f3c7a7466; op2val:0x3fc37c47ae0bad3a; op3val:0x7fb6f5c1f001498f; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5f3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6f5c1f001498f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2da5f3c7a7466; op2val:0x3fc37c47ae0bad3a; op3val:0x7fb6f5c1f001498f; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdf8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdf8; op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdf8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdf8; op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdf8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdf8; op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdf8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdf8; op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdf8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdf8; op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91f58bdf and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9d1aa6d115d25f; op2val:0x40296deab3c53820; op3val:0x7fd720ca91f58bdf; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91f58bdf and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9d1aa6d115d25f; op2val:0x40296deab3c53820; op3val:0x7fd720ca91f58bdf; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91f58bdf and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9d1aa6d115d25f; op2val:0x40296deab3c53820; op3val:0x7fd720ca91f58bdf; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91f58bdf and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9d1aa6d115d25f; op2val:0x40296deab3c53820; op3val:0x7fd720ca91f58bdf; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91f58bdf and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9d1aa6d115d25f; op2val:0x40296deab3c53820; op3val:0x7fd720ca91f58bdf; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ef31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf3e76cbaa48e2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ef31b27; op3val:0x7fef3e76cbaa48e2; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ef31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf3e76cbaa48e2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ef31b27; op3val:0x7fef3e76cbaa48e2; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ef31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf3e76cbaa48e2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ef31b27; op3val:0x7fef3e76cbaa48e2; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ef31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf3e76cbaa48e2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ef31b27; op3val:0x7fef3e76cbaa48e2; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ef31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf3e76cbaa48e2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ef31b27; op3val:0x7fef3e76cbaa48e2; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b; op3val:0x7fe655481791d37f; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b; op3val:0x7fe655481791d37f; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b; op3val:0x7fe655481791d37f; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b; op3val:0x7fe655481791d37f; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b; op3val:0x7fe655481791d37f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65f52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ab73cc65f52; op2val:0x3fe21b7b40acb837; op3val:0x7fe07805b64db437; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65f52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ab73cc65f52; op2val:0x3fe21b7b40acb837; op3val:0x7fe07805b64db437; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65f52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ab73cc65f52; op2val:0x3fe21b7b40acb837; op3val:0x7fe07805b64db437; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65f52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ab73cc65f52; op2val:0x3fe21b7b40acb837; op3val:0x7fe07805b64db437; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65f52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ab73cc65f52; op2val:0x3fe21b7b40acb837; op3val:0x7fe07805b64db437; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751; op3val:0x7fedd8fbb754b55c; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751; op3val:0x7fedd8fbb754b55c; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751; op3val:0x7fedd8fbb754b55c; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751; op3val:0x7fedd8fbb754b55c; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751; op3val:0x7fedd8fbb754b55c; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658; op3val:0x7fe4f911cba6947d; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658; op3val:0x7fe4f911cba6947d; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658; op3val:0x7fe4f911cba6947d; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658; op3val:0x7fe4f911cba6947d; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658; op3val:0x7fe4f911cba6947d; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f; op3val:0x7fe2d590539c6e1b; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f; op3val:0x7fe2d590539c6e1b; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f; op3val:0x7fe2d590539c6e1b; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f; op3val:0x7fe2d590539c6e1b; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f; op3val:0x7fe2d590539c6e1b; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf; op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf; op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf; op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf; op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf; op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acf34aef92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acf34aef92; op3val:0x7fc93c9b1b3642af; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acf34aef92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acf34aef92; op3val:0x7fc93c9b1b3642af; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acf34aef92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acf34aef92; op3val:0x7fc93c9b1b3642af; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acf34aef92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acf34aef92; op3val:0x7fc93c9b1b3642af; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acf34aef92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acf34aef92; op3val:0x7fc93c9b1b3642af; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007f92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c0c529007f92; op2val:0x3fe1b3e375a83590; op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007f92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c0c529007f92; op2val:0x3fe1b3e375a83590; op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007f92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c0c529007f92; op2val:0x3fe1b3e375a83590; op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007f92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c0c529007f92; op2val:0x3fe1b3e375a83590; op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007f92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c0c529007f92; op2val:0x3fe1b3e375a83590; op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12f7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212f7d90af6886; op3val:0x7fe99bea81a3c895; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12f7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212f7d90af6886; op3val:0x7fe99bea81a3c895; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12f7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212f7d90af6886; op3val:0x7fe99bea81a3c895; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12f7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212f7d90af6886; op3val:0x7fe99bea81a3c895; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12f7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212f7d90af6886; op3val:0x7fe99bea81a3c895; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33; op3val:0x7fd57a2cffec0101; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33; op3val:0x7fd57a2cffec0101; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33; op3val:0x7fd57a2cffec0101; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33; op3val:0x7fd57a2cffec0101; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33; op3val:0x7fd57a2cffec0101; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f12be85a3941 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb; op3val:0x7fe5f12be85a3941; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f12be85a3941 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb; op3val:0x7fe5f12be85a3941; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f12be85a3941 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb; op3val:0x7fe5f12be85a3941; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f12be85a3941 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb; op3val:0x7fe5f12be85a3941; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f12be85a3941 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb; op3val:0x7fe5f12be85a3941; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892; op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892; op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892; op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892; op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892; op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4ff0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd; op3val:0x7fe1b73726cc4ff0; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4ff0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd; op3val:0x7fe1b73726cc4ff0; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4ff0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd; op3val:0x7fe1b73726cc4ff0; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4ff0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd; op3val:0x7fe1b73726cc4ff0; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4ff0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd; op3val:0x7fe1b73726cc4ff0; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9; op3val:0x7fe5d35e2c6078a3; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9; op3val:0x7fe5d35e2c6078a3; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9; op3val:0x7fe5d35e2c6078a3; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9; op3val:0x7fe5d35e2c6078a3; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9; op3val:0x7fe5d35e2c6078a3; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7f14df48da55 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218; op3val:0x7fda7f14df48da55; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7f14df48da55 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218; op3val:0x7fda7f14df48da55; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7f14df48da55 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218; op3val:0x7fda7f14df48da55; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7f14df48da55 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218; op3val:0x7fda7f14df48da55; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7f14df48da55 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218; op3val:0x7fda7f14df48da55; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237; op3val:0x7fe9a94aa8cadc89; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237; op3val:0x7fe9a94aa8cadc89; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237; op3val:0x7fe9a94aa8cadc89; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237; op3val:0x7fe9a94aa8cadc89; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237; op3val:0x7fe9a94aa8cadc89; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7; op3val:0x7fe8a4fc4c166a46; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7; op3val:0x7fe8a4fc4c166a46; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7; op3val:0x7fe8a4fc4c166a46; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7; op3val:0x7fe8a4fc4c166a46; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7; op3val:0x7fe8a4fc4c166a46; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644f56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde18a54fb9615f; op2val:0x3ff9d9644f56bb65; op3val:0x7fe84fb69ef078ea; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644f56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde18a54fb9615f; op2val:0x3ff9d9644f56bb65; op3val:0x7fe84fb69ef078ea; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644f56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde18a54fb9615f; op2val:0x3ff9d9644f56bb65; op3val:0x7fe84fb69ef078ea; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644f56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde18a54fb9615f; op2val:0x3ff9d9644f56bb65; op3val:0x7fe84fb69ef078ea; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644f56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde18a54fb9615f; op2val:0x3ff9d9644f56bb65; op3val:0x7fe84fb69ef078ea; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7f3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588f5e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d9a84a89337ff; op2val:0x4096ed5a71e5433a; op3val:0x7fe535cf46588f5e; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7f3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588f5e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d9a84a89337ff; op2val:0x4096ed5a71e5433a; op3val:0x7fe535cf46588f5e; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7f3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588f5e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d9a84a89337ff; op2val:0x4096ed5a71e5433a; op3val:0x7fe535cf46588f5e; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7f3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588f5e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d9a84a89337ff; op2val:0x4096ed5a71e5433a; op3val:0x7fe535cf46588f5e; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7f3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588f5e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d9a84a89337ff; op2val:0x4096ed5a71e5433a; op3val:0x7fe535cf46588f5e; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf0aceae190521; op2val:0x3fe142a90077145a; op3val:0x7fd0be68084b69b7; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf0aceae190521; op2val:0x3fe142a90077145a; op3val:0x7fd0be68084b69b7; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf0aceae190521; op2val:0x3fe142a90077145a; op3val:0x7fd0be68084b69b7; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf0aceae190521; op2val:0x3fe142a90077145a; op3val:0x7fd0be68084b69b7; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf0aceae190521; op2val:0x3fe142a90077145a; op3val:0x7fd0be68084b69b7; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc; op3val:0x7fea4d72905280d4; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc; op3val:0x7fea4d72905280d4; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc; op3val:0x7fea4d72905280d4; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc; op3val:0x7fea4d72905280d4; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fea99ad8d852394; valaddr_reg:x16; val_offset:960; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fea99ad8d852394; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fea99ad8d852394; valaddr_reg:x16; val_offset:1008; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fea99ad8d852394; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5726b277b5dce; op2val:0x3ff53c36b188da64; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:1056; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5726b277b5dce; op2val:0x3ff53c36b188da64; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:1080; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5726b277b5dce; op2val:0x3ff53c36b188da64; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:1104; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5726b277b5dce; op2val:0x3ff53c36b188da64; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 1440, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fe9630abe4b977e
.dword 0x3ff093bbbbab15dc
.dword 0x7fea4d72905280d4
.dword 0x7fdc9ed4464571af
.dword 0x7fdc9ed4464571af
.dword 0x7fdc9ed4464571af
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fdc9ed4464571af
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fdc9ed4464571af
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fea99ad8d852394
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x3ffdbdc83df362e4
.dword 0x7fe5726b277b5dce
.dword 0x7fe5726b277b5dce
.dword 0x7fec76e305c8d1af
.dword 0x7fe5726b277b5dce
.dword 0x3ff53c36b188da64
.dword 0x7fec76e305c8d1af
.dword 0x7fe5726b277b5dce
.dword 0x7fe5726b277b5dce
.dword 0x7fec76e305c8d1af
.dword 0x7fe5726b277b5dce
.dword 0x7fe5726b277b5dce
.dword 0x7fe5726b277b5dce
.dword 0x7fe5726b277b5dce
.dword 0x3ff53c36b188da64
.dword 0x3ff53c36b188da64
.dword 0x7fef5610c05b31c8
.dword 0x3fed2834dff0917f
.dword 0x7fec8d5e8a69a864
.dword 0x7fef5610c05b31c8
.dword 0x3fed2834dff0917f
.dword 0x7fec8d5e8a69a864
.dword 0x7fef5610c05b31c8
.dword 0x3fed2834dff0917f
.dword 0x7fec8d5e8a69a864
.dword 0x7fef5610c05b31c8
.dword 0x3fed2834dff0917f
.dword 0x7fec8d5e8a69a864
.dword 0x7fef5610c05b31c8
.dword 0x3fed2834dff0917f
.dword 0x7fec8d5e8a69a864
.dword 0x7fef642299c3d7ea
.dword 0x3fd001214aa3225f
.dword 0x7fcf665a2ce400e3
.dword 0x7fef642299c3d7ea
.dword 0x3fd001214aa3225f
.dword 0x7fcf665a2ce400e3
.dword 0x7fef642299c3d7ea
.dword 0x3fd001214aa3225f
.dword 0x7fcf665a2ce400e3
.dword 0x7fef642299c3d7ea
.dword 0x3fd001214aa3225f
.dword 0x7fcf665a2ce400e3
.dword 0x7fef642299c3d7ea
.dword 0x3fd001214aa3225f
.dword 0x7fcf665a2ce400e3
.dword 0x7fe7e1cbdffe4992
.dword 0x3fe10e1c43d3c4e6
.dword 0x7fd974f860c491f9
.dword 0x7fe7e1cbdffe4992
.dword 0x3fe10e1c43d3c4e6
.dword 0x7fd974f860c491f9
.dword 0x7fe7e1cbdffe4992
.dword 0x3fe10e1c43d3c4e6
.dword 0x7fd974f860c491f9
.dword 0x7fe7e1cbdffe4992
.dword 0x3fe10e1c43d3c4e6
.dword 0x7fd974f860c491f9
.dword 0x7fe7e1cbdffe4992
.dword 0x3fe10e1c43d3c4e6
.dword 0x7fd974f860c491f9
.dword 0x7fab8e934bdcc1bf
.dword 0x401f6db8ea3f5db5
.dword 0x7fdb109b94c05e59
.dword 0x7fab8e934bdcc1bf
.dword 0x401f6db8ea3f5db5
.dword 0x7fdb109b94c05e59
.dword 0x7fab8e934bdcc1bf
.dword 0x401f6db8ea3f5db5
.dword 0x7fdb109b94c05e59
.dword 0x7fab8e934bdcc1bf
.dword 0x401f6db8ea3f5db5
.dword 0x7fdb109b94c05e59
.dword 0x7fab8e934bdcc1bf
.dword 0x401f6db8ea3f5db5
.dword 0x7fdb109b94c05e59
.dword 0x7fc03c1ecadc137f
.dword 0x401f8884c44e2025
.dword 0x7fefff0165f47cec
.dword 0x7fc03c1ecadc137f
.dword 0x401f8884c44e2025
.dword 0x7fefff0165f47cec
.dword 0x7fc03c1ecadc137f
.dword 0x401f8884c44e2025
.dword 0x7fefff0165f47cec
.dword 0x7fc03c1ecadc137f
.dword 0x401f8884c44e2025
.dword 0x7fefff0165f47cec
.dword 0x7fc03c1ecadc137f
.dword 0x401f8884c44e2025
.dword 0x7fefff0165f47cec
.dword 0x7fd8276674380fc3
.dword 0x3ff07fa3fe059060
.dword 0x7fd8e816c2502d73
.dword 0x7fd8276674380fc3
.dword 0x3ff07fa3fe059060
.dword 0x7fd8e816c2502d73
.dword 0x7fd8276674380fc3
.dword 0x3ff07fa3fe059060
.dword 0x7fd8e816c2502d73
.dword 0x7fd8276674380fc3
.dword 0x3ff07fa3fe059060
.dword 0x7fd8e816c2502d73
.dword 0x7fd8276674380fc3
.dword 0x3ff07fa3fe059060
.dword 0x7fd8e816c2502d73
.dword 0x7fe3d93686797715
.dword 0x3fdf9620c1581628
.dword 0x7fd3978b52ff3f23
.dword 0x7fe3d93686797715
.dword 0x3fdf9620c1581628
.dword 0x7fd3978b52ff3f23
.dword 0x7fe3d93686797715
.dword 0x3fdf9620c1581628
.dword 0x7fd3978b52ff3f23
.dword 0x7fe3d93686797715
.dword 0x3fdf9620c1581628
.dword 0x7fd3978b52ff3f23
.dword 0x7fe3d93686797715
.dword 0x3fdf9620c1581628
.dword 0x7fd3978b52ff3f23
.dword 0x7fd54e6e64764369
.dword 0x4005bbe5dcd5070e
.dword 0x7fecf127a6af77f2
.dword 0x7fd54e6e64764369
.dword 0x4005bbe5dcd5070e
.dword 0x7fecf127a6af77f2
.dword 0x7fd54e6e64764369
.dword 0x4005bbe5dcd5070e
.dword 0x7fecf127a6af77f2
.dword 0x7fd54e6e64764369
.dword 0x4005bbe5dcd5070e
.dword 0x7fecf127a6af77f2
.dword 0x7fd54e6e64764369
.dword 0x4005bbe5dcd5070e
.dword 0x7fecf127a6af77f2
.dword 0x7fe8e5d8dcad33c4
.dword 0x3f967373f406a831
.dword 0x7f9177d952f13e9f
.dword 0x7fe8e5d8dcad33c4
.dword 0x3f967373f406a831
.dword 0x7f9177d952f13e9f
.dword 0x7fe8e5d8dcad33c4
.dword 0x3f967373f406a831
.dword 0x7f9177d952f13e9f
.dword 0x7fe8e5d8dcad33c4
.dword 0x3f967373f406a831
.dword 0x7f9177d952f13e9f
.dword 0x7fe8e5d8dcad33c4
.dword 0x3f967373f406a831
.dword 0x7f9177d952f13e9f
.dword 0x7fe657d95216ac01
.dword 0x3f925d92dbf7772b
.dword 0x7f89a5803051b37f
.dword 0x7fe657d95216ac01
.dword 0x3f925d92dbf7772b
.dword 0x7f89a5803051b37f
.dword 0x7fe657d95216ac01
.dword 0x3f925d92dbf7772b
.dword 0x7f89a5803051b37f
.dword 0x7fe657d95216ac01
.dword 0x3f925d92dbf7772b
.dword 0x7f89a5803051b37f
.dword 0x7fe657d95216ac01
.dword 0x3f925d92dbf7772b
.dword 0x7f89a5803051b37f
.dword 0x7fcadd854d58145f
.dword 0x40107ed749af0a91
.dword 0x7febb27f4381021f
.dword 0x7fcadd854d58145f
.dword 0x40107ed749af0a91
.dword 0x7febb27f4381021f
.dword 0x7fcadd854d58145f
.dword 0x40107ed749af0a91
.dword 0x7febb27f4381021f
.dword 0x7fcadd854d58145f
.dword 0x40107ed749af0a91
.dword 0x7febb27f4381021f
.dword 0x7fcadd854d58145f
.dword 0x40107ed749af0a91
.dword 0x7febb27f4381021f
.dword 0x7fdef5aa91c82b3d
.dword 0x3fd24583e9aa4a5b
.dword 0x7fc1ad71498eb7bb
.dword 0x7fdef5aa91c82b3d
.dword 0x3fd24583e9aa4a5b
.dword 0x7fc1ad71498eb7bb
.dword 0x7fdef5aa91c82b3d
.dword 0x3fd24583e9aa4a5b
.dword 0x7fc1ad71498eb7bb
.dword 0x7fdef5aa91c82b3d
.dword 0x3fd24583e9aa4a5b
.dword 0x7fc1ad71498eb7bb
.dword 0x7fdef5aa91c82b3d
.dword 0x3fd24583e9aa4a5b
.dword 0x7fc1ad71498eb7bb
.dword 0x7fd3fc6805c084d1
.dword 0x3fe41b82ca2e0c7d
.dword 0x7fc91ddf5613b02f
.dword 0x7fd3fc6805c084d1
.dword 0x3fe41b82ca2e0c7d
.dword 0x7fc91ddf5613b02f
.dword 0x7fd3fc6805c084d1
.dword 0x3fe41b82ca2e0c7d
.dword 0x7fc91ddf5613b02f
.dword 0x7fd3fc6805c084d1
.dword 0x3fe41b82ca2e0c7d
.dword 0x7fc91ddf5613b02f
.dword 0x7fd3fc6805c084d1
.dword 0x3fe41b82ca2e0c7d
.dword 0x7fc91ddf5613b02f
.dword 0x7fbde8341376716f
.dword 0x4016b11ecf872f9d
.dword 0x7fe5352cf9125058
.dword 0x7fbde8341376716f
.dword 0x4016b11ecf872f9d
.dword 0x7fe5352cf9125058
.dword 0x7fbde8341376716f
.dword 0x4016b11ecf872f9d
.dword 0x7fe5352cf9125058
.dword 0x7fbde8341376716f
.dword 0x4016b11ecf872f9d
.dword 0x7fe5352cf9125058
.dword 0x7fbde8341376716f
.dword 0x4016b11ecf872f9d
.dword 0x7fe5352cf9125058
.dword 0x7fec299b1ab6e737
.dword 0x3fe31948e12564a2
.dword 0x7fe0cef4bccbe789
.dword 0x7fec299b1ab6e737
.dword 0x3fe31948e12564a2
.dword 0x7fe0cef4bccbe789
.dword 0x7fec299b1ab6e737
.dword 0x3fe31948e12564a2
.dword 0x7fe0cef4bccbe789
.dword 0x7fec299b1ab6e737
.dword 0x3fe31948e12564a2
.dword 0x7fe0cef4bccbe789
.dword 0x7fec299b1ab6e737
.dword 0x3fe31948e12564a2
.dword 0x7fe0cef4bccbe789
.dword 0x7fe2da5f3c7a7466
.dword 0x3fc37c47ae0bad3a
.dword 0x7fb6f5c1f001498f
.dword 0x7fe2da5f3c7a7466
.dword 0x3fc37c47ae0bad3a
.dword 0x7fb6f5c1f001498f
.dword 0x7fe2da5f3c7a7466
.dword 0x3fc37c47ae0bad3a
.dword 0x7fb6f5c1f001498f
.dword 0x7fe2da5f3c7a7466
.dword 0x3fc37c47ae0bad3a
.dword 0x7fb6f5c1f001498f
.dword 0x7fe2da5f3c7a7466
.dword 0x3fc37c47ae0bad3a
.dword 0x7fb6f5c1f001498f
.dword 0x7fe341836db80049
.dword 0x3fe02efa596fbdf8
.dword 0x7fd37a0d12dbe9d7
.dword 0x7fe341836db80049
.dword 0x3fe02efa596fbdf8
.dword 0x7fd37a0d12dbe9d7
.dword 0x7fe341836db80049
.dword 0x3fe02efa596fbdf8
.dword 0x7fd37a0d12dbe9d7
.dword 0x7fe341836db80049
.dword 0x3fe02efa596fbdf8
.dword 0x7fd37a0d12dbe9d7
.dword 0x7fe341836db80049
.dword 0x3fe02efa596fbdf8
.dword 0x7fd37a0d12dbe9d7
.dword 0x7f9d1aa6d115d25f
.dword 0x40296deab3c53820
.dword 0x7fd720ca91f58bdf
.dword 0x7f9d1aa6d115d25f
.dword 0x40296deab3c53820
.dword 0x7fd720ca91f58bdf
.dword 0x7f9d1aa6d115d25f
.dword 0x40296deab3c53820
.dword 0x7fd720ca91f58bdf
.dword 0x7f9d1aa6d115d25f
.dword 0x40296deab3c53820
.dword 0x7fd720ca91f58bdf
.dword 0x7f9d1aa6d115d25f
.dword 0x40296deab3c53820
.dword 0x7fd720ca91f58bdf
.dword 0x7fe9c6b24203c777
.dword 0x3ff364e03ef31b27
.dword 0x7fef3e76cbaa48e2
.dword 0x7fe9c6b24203c777
.dword 0x3ff364e03ef31b27
.dword 0x7fef3e76cbaa48e2
.dword 0x7fe9c6b24203c777
.dword 0x3ff364e03ef31b27
.dword 0x7fef3e76cbaa48e2
.dword 0x7fe9c6b24203c777
.dword 0x3ff364e03ef31b27
.dword 0x7fef3e76cbaa48e2
.dword 0x7fe9c6b24203c777
.dword 0x3ff364e03ef31b27
.dword 0x7fef3e76cbaa48e2
.dword 0x7fe4a0550fe15035
.dword 0x3ff152f2078be37b
.dword 0x7fe655481791d37f
.dword 0x7fe4a0550fe15035
.dword 0x3ff152f2078be37b
.dword 0x7fe655481791d37f
.dword 0x7fe4a0550fe15035
.dword 0x3ff152f2078be37b
.dword 0x7fe655481791d37f
.dword 0x7fe4a0550fe15035
.dword 0x3ff152f2078be37b
.dword 0x7fe655481791d37f
.dword 0x7fe4a0550fe15035
.dword 0x3ff152f2078be37b
.dword 0x7fe655481791d37f
.dword 0x7fed1ab73cc65f52
.dword 0x3fe21b7b40acb837
.dword 0x7fe07805b64db437
.dword 0x7fed1ab73cc65f52
.dword 0x3fe21b7b40acb837
.dword 0x7fe07805b64db437
.dword 0x7fed1ab73cc65f52
.dword 0x3fe21b7b40acb837
.dword 0x7fe07805b64db437
.dword 0x7fed1ab73cc65f52
.dword 0x3fe21b7b40acb837
.dword 0x7fe07805b64db437
.dword 0x7fed1ab73cc65f52
.dword 0x3fe21b7b40acb837
.dword 0x7fe07805b64db437
.dword 0x7fd7107573e4c40b
.dword 0x4004b4a64f556751
.dword 0x7fedd8fbb754b55c
.dword 0x7fd7107573e4c40b
.dword 0x4004b4a64f556751
.dword 0x7fedd8fbb754b55c
.dword 0x7fd7107573e4c40b
.dword 0x4004b4a64f556751
.dword 0x7fedd8fbb754b55c
.dword 0x7fd7107573e4c40b
.dword 0x4004b4a64f556751
.dword 0x7fedd8fbb754b55c
.dword 0x7fd7107573e4c40b
.dword 0x4004b4a64f556751
.dword 0x7fedd8fbb754b55c
.dword 0x7fc9b63fed3f1873
.dword 0x400a1a2014c80658
.dword 0x7fe4f911cba6947d
.dword 0x7fc9b63fed3f1873
.dword 0x400a1a2014c80658
.dword 0x7fe4f911cba6947d
.dword 0x7fc9b63fed3f1873
.dword 0x400a1a2014c80658
.dword 0x7fe4f911cba6947d
.dword 0x7fc9b63fed3f1873
.dword 0x400a1a2014c80658
.dword 0x7fe4f911cba6947d
.dword 0x7fc9b63fed3f1873
.dword 0x400a1a2014c80658
.dword 0x7fe4f911cba6947d
.dword 0x7fee71a5cc2ec78b
.dword 0x3fe3cc01737b632f
.dword 0x7fe2d590539c6e1b
.dword 0x7fee71a5cc2ec78b
.dword 0x3fe3cc01737b632f
.dword 0x7fe2d590539c6e1b
.dword 0x7fee71a5cc2ec78b
.dword 0x3fe3cc01737b632f
.dword 0x7fe2d590539c6e1b
.dword 0x7fee71a5cc2ec78b
.dword 0x3fe3cc01737b632f
.dword 0x7fe2d590539c6e1b
.dword 0x7fee71a5cc2ec78b
.dword 0x3fe3cc01737b632f
.dword 0x7fe2d590539c6e1b
.dword 0x7fe45141572f8653
.dword 0x3fdd59f46589e2bf
.dword 0x7fd2a2c060c7c8c5
.dword 0x7fe45141572f8653
.dword 0x3fdd59f46589e2bf
.dword 0x7fd2a2c060c7c8c5
.dword 0x7fe45141572f8653
.dword 0x3fdd59f46589e2bf
.dword 0x7fd2a2c060c7c8c5
.dword 0x7fe45141572f8653
.dword 0x3fdd59f46589e2bf
.dword 0x7fd2a2c060c7c8c5
.dword 0x7fe45141572f8653
.dword 0x3fdd59f46589e2bf
.dword 0x7fd2a2c060c7c8c5
.dword 0x7fb801fd982d9eb7
.dword 0x4000d1acf34aef92
.dword 0x7fc93c9b1b3642af
.dword 0x7fb801fd982d9eb7
.dword 0x4000d1acf34aef92
.dword 0x7fc93c9b1b3642af
.dword 0x7fb801fd982d9eb7
.dword 0x4000d1acf34aef92
.dword 0x7fc93c9b1b3642af
.dword 0x7fb801fd982d9eb7
.dword 0x4000d1acf34aef92
.dword 0x7fc93c9b1b3642af
.dword 0x7fb801fd982d9eb7
.dword 0x4000d1acf34aef92
.dword 0x7fc93c9b1b3642af
.dword 0x7fe9c0c529007f92
.dword 0x3fe1b3e375a83590
.dword 0x7fdc7e5c3598d2dd
.dword 0x7fe9c0c529007f92
.dword 0x3fe1b3e375a83590
.dword 0x7fdc7e5c3598d2dd
.dword 0x7fe9c0c529007f92
.dword 0x3fe1b3e375a83590
.dword 0x7fdc7e5c3598d2dd
.dword 0x7fe9c0c529007f92
.dword 0x3fe1b3e375a83590
.dword 0x7fdc7e5c3598d2dd
.dword 0x7fe9c0c529007f92
.dword 0x3fe1b3e375a83590
.dword 0x7fdc7e5c3598d2dd
.dword 0x7fb7d7ab2b96a7d7
.dword 0x40212f7d90af6886
.dword 0x7fe99bea81a3c895
.dword 0x7fb7d7ab2b96a7d7
.dword 0x40212f7d90af6886
.dword 0x7fe99bea81a3c895
.dword 0x7fb7d7ab2b96a7d7
.dword 0x40212f7d90af6886
.dword 0x7fe99bea81a3c895
.dword 0x7fb7d7ab2b96a7d7
.dword 0x40212f7d90af6886
.dword 0x7fe99bea81a3c895
.dword 0x7fb7d7ab2b96a7d7
.dword 0x40212f7d90af6886
.dword 0x7fe99bea81a3c895
.dword 0x7feb045c5db2e460
.dword 0x3fd9703f7515ec33
.dword 0x7fd57a2cffec0101
.dword 0x7feb045c5db2e460
.dword 0x3fd9703f7515ec33
.dword 0x7fd57a2cffec0101
.dword 0x7feb045c5db2e460
.dword 0x3fd9703f7515ec33
.dword 0x7fd57a2cffec0101
.dword 0x7feb045c5db2e460
.dword 0x3fd9703f7515ec33
.dword 0x7fd57a2cffec0101
.dword 0x7feb045c5db2e460
.dword 0x3fd9703f7515ec33
.dword 0x7fd57a2cffec0101
.dword 0x7fe9b52b2a70b02a
.dword 0x3feb500d269fc9eb
.dword 0x7fe5f12be85a3941
.dword 0x7fe9b52b2a70b02a
.dword 0x3feb500d269fc9eb
.dword 0x7fe5f12be85a3941
.dword 0x7fe9b52b2a70b02a
.dword 0x3feb500d269fc9eb
.dword 0x7fe5f12be85a3941
.dword 0x7fe9b52b2a70b02a
.dword 0x3feb500d269fc9eb
.dword 0x7fe5f12be85a3941
.dword 0x7fe9b52b2a70b02a
.dword 0x3feb500d269fc9eb
.dword 0x7fe5f12be85a3941
.dword 0x7fe9c39382ea6198
.dword 0x3fd51b4351475892
.dword 0x7fd0fe4c054d9e8b
.dword 0x7fe9c39382ea6198
.dword 0x3fd51b4351475892
.dword 0x7fd0fe4c054d9e8b
.dword 0x7fe9c39382ea6198
.dword 0x3fd51b4351475892
.dword 0x7fd0fe4c054d9e8b
.dword 0x7fe9c39382ea6198
.dword 0x3fd51b4351475892
.dword 0x7fd0fe4c054d9e8b
.dword 0x7fe9c39382ea6198
.dword 0x3fd51b4351475892
.dword 0x7fd0fe4c054d9e8b
.dword 0x7fc8b3ba7903c2ab
.dword 0x4006f3177f7676dd
.dword 0x7fe1b73726cc4ff0
.dword 0x7fc8b3ba7903c2ab
.dword 0x4006f3177f7676dd
.dword 0x7fe1b73726cc4ff0
.dword 0x7fc8b3ba7903c2ab
.dword 0x4006f3177f7676dd
.dword 0x7fe1b73726cc4ff0
.dword 0x7fc8b3ba7903c2ab
.dword 0x4006f3177f7676dd
.dword 0x7fe1b73726cc4ff0
.dword 0x7fc8b3ba7903c2ab
.dword 0x4006f3177f7676dd
.dword 0x7fe1b73726cc4ff0
.dword 0x7fe139cbde283143
.dword 0x3ff445c6db753ea9
.dword 0x7fe5d35e2c6078a3
.dword 0x7fe139cbde283143
.dword 0x3ff445c6db753ea9
.dword 0x7fe5d35e2c6078a3
.dword 0x7fe139cbde283143
.dword 0x3ff445c6db753ea9
.dword 0x7fe5d35e2c6078a3
.dword 0x7fe139cbde283143
.dword 0x3ff445c6db753ea9
.dword 0x7fe5d35e2c6078a3
.dword 0x7fe139cbde283143
.dword 0x3ff445c6db753ea9
.dword 0x7fe5d35e2c6078a3
.dword 0x7fe75ab99b7d728b
.dword 0x3fe2270fb41a1218
.dword 0x7fda7f14df48da55
.dword 0x7fe75ab99b7d728b
.dword 0x3fe2270fb41a1218
.dword 0x7fda7f14df48da55
.dword 0x7fe75ab99b7d728b
.dword 0x3fe2270fb41a1218
.dword 0x7fda7f14df48da55
.dword 0x7fe75ab99b7d728b
.dword 0x3fe2270fb41a1218
.dword 0x7fda7f14df48da55
.dword 0x7fe75ab99b7d728b
.dword 0x3fe2270fb41a1218
.dword 0x7fda7f14df48da55
.dword 0x7fd173e2abe9259b
.dword 0x4007867ec4d41237
.dword 0x7fe9a94aa8cadc89
.dword 0x7fd173e2abe9259b
.dword 0x4007867ec4d41237
.dword 0x7fe9a94aa8cadc89
.dword 0x7fd173e2abe9259b
.dword 0x4007867ec4d41237
.dword 0x7fe9a94aa8cadc89
.dword 0x7fd173e2abe9259b
.dword 0x4007867ec4d41237
.dword 0x7fe9a94aa8cadc89
.dword 0x7fd173e2abe9259b
.dword 0x4007867ec4d41237
.dword 0x7fe9a94aa8cadc89
.dword 0x7fd7e1dc0a8e1a11
.dword 0x400082b9acfac9b7
.dword 0x7fe8a4fc4c166a46
.dword 0x7fd7e1dc0a8e1a11
.dword 0x400082b9acfac9b7
.dword 0x7fe8a4fc4c166a46
.dword 0x7fd7e1dc0a8e1a11
.dword 0x400082b9acfac9b7
.dword 0x7fe8a4fc4c166a46
.dword 0x7fd7e1dc0a8e1a11
.dword 0x400082b9acfac9b7
.dword 0x7fe8a4fc4c166a46
.dword 0x7fd7e1dc0a8e1a11
.dword 0x400082b9acfac9b7
.dword 0x7fe8a4fc4c166a46
.dword 0x7fde18a54fb9615f
.dword 0x3ff9d9644f56bb65
.dword 0x7fe84fb69ef078ea
.dword 0x7fde18a54fb9615f
.dword 0x3ff9d9644f56bb65
.dword 0x7fe84fb69ef078ea
.dword 0x7fde18a54fb9615f
.dword 0x3ff9d9644f56bb65
.dword 0x7fe84fb69ef078ea
.dword 0x7fde18a54fb9615f
.dword 0x3ff9d9644f56bb65
.dword 0x7fe84fb69ef078ea
.dword 0x7fde18a54fb9615f
.dword 0x3ff9d9644f56bb65
.dword 0x7fe84fb69ef078ea
.dword 0x7f3d9a84a89337ff
.dword 0x4096ed5a71e5433a
.dword 0x7fe535cf46588f5e
.dword 0x7f3d9a84a89337ff
.dword 0x4096ed5a71e5433a
.dword 0x7fe535cf46588f5e
.dword 0x7f3d9a84a89337ff
.dword 0x4096ed5a71e5433a
.dword 0x7fe535cf46588f5e
.dword 0x7f3d9a84a89337ff
.dword 0x4096ed5a71e5433a
.dword 0x7fe535cf46588f5e
.dword 0x7f3d9a84a89337ff
.dword 0x4096ed5a71e5433a
.dword 0x7fe535cf46588f5e
.dword 0x7fdf0aceae190521
.dword 0x3fe142a90077145a
.dword 0x7fd0be68084b69b7
.dword 0x7fdf0aceae190521
.dword 0x3fe142a90077145a
.dword 0x7fd0be68084b69b7
.dword 0x7fdf0aceae190521
.dword 0x3fe142a90077145a
.dword 0x7fd0be68084b69b7
.dword 0x7fdf0aceae190521
.dword 0x3fe142a90077145a
.dword 0x7fd0be68084b69b7
.dword 0x7fdf0aceae190521
.dword 0x3fe142a90077145a
.dword 0x7fd0be68084b69b7
.dword 0x7fe9630abe4b977e
.dword 0x3ff093bbbbab15dc
.dword 0x7fea4d72905280d4
.dword 0x7fe9630abe4b977e
.dword 0x3ff093bbbbab15dc
.dword 0x7fea4d72905280d4
.dword 0x7fe9630abe4b977e
.dword 0x3ff093bbbbab15dc
.dword 0x7fea4d72905280d4
.dword 0x7fe9630abe4b977e
.dword 0x3ff093bbbbab15dc
.dword 0x7fea4d72905280d4
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fea99ad8d852394
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fea99ad8d852394
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fea99ad8d852394
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fea99ad8d852394
.dword 0x7fe5726b277b5dce
.dword 0x3ff53c36b188da64
.dword 0x7fec76e305c8d1af
.dword 0x7fe5726b277b5dce
.dword 0x3ff53c36b188da64
.dword 0x7fec76e305c8d1af
.dword 0x7fe5726b277b5dce
.dword 0x3ff53c36b188da64
.dword 0x7fec76e305c8d1af
.dword 0x7fe5726b277b5dce
.dword 0x3ff53c36b188da64
.dword 0x7fec76e305c8d1af
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 182*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
