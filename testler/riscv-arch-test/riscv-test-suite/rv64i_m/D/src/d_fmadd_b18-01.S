
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:52:58 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmadd1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V FD extension for the fmadd_b18 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmadd_b18)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f13, rs2==f23, rs3==f23, rd==f12, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f13; op2:f23; op3:f23; dest:f12; op1val:0x7feb0580f98a7dbd; op2val:0x0; op3val:0x0; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f12, f13, f23, f23, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rs3 == rd, rs1==f28, rs2==f28, rs3==f28, rd==f28, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94497c97803a8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f28; op2:f28; op3:f28; dest:f28; op1val:0x7fe94497c97803a8; op2val:0x7fe94497c97803a8; op3val:0x7fe94497c97803a8; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f28, f28, f28, f28, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f17, rs2==f14, rs3==f16, rd==f20, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5569022b338ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f17; op2:f14; op3:f16; dest:f20; op1val:0x7fd5569022b338ff; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f20, f17, f14, f16, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f27, rs2==f22, rs3==f27, rd==f30, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x354ba34578ba7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f27; op2:f22; op3:f27; dest:f30; op1val:0x7fc354ba34578ba7; op2val:0x8000; op3val:0x7fc354ba34578ba7; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f30, f27, f22, f27, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f11, rs2==f11, rs3==f24, rd==f6, fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x238a22371e9ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f11; op2:f11; op3:f24; dest:f6; op1val:0x7f8238a22371e9ff; op2val:0x7f8238a22371e9ff; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f6, f11, f11, f24, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f20, rs2==f10, rs3==f10, rd==f10, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2c9bb6d2a0534 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f20; op2:f10; op3:f10; dest:f10; op1val:0x7fe2c9bb6d2a0534; op2val:0x8000; op3val:0x8000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f10, f20, f10, f10, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f5, rs2==f5, rs3==f5, rd==f19, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa9aa2b6025f07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f5; op2:f5; op3:f5; dest:f19; op1val:0x7fca9aa2b6025f07; op2val:0x7fca9aa2b6025f07; op3val:0x7fca9aa2b6025f07; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f19, f5, f5, f5, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f31, rs2==f17, rs3==f22, rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x136b66cb69135 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f31; op2:f17; op3:f22; dest:f31; op1val:0x7fe136b66cb69135; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f31, f31, f17, f22, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f14, rs2==f2, rs3==f18, rd==f18, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7d6356ef8a62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f14; op2:f2; op3:f18; dest:f18; op1val:0x7fd7d6356ef8a62f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f18, f14, f2, f18, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rd == rs3 != rs2, rs1==f15, rs2==f21, rs3==f15, rd==f15, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x47c0965bde424 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f15; op2:f21; op3:f15; dest:f15; op1val:0x7fe47c0965bde424; op2val:0x8000; op3val:0x7fe47c0965bde424; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f15, f15, f21, f15, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f26, rs2==f8, rs3==f6, rd==f8, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xce30065d5ac1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f26; op2:f8; op3:f6; dest:f8; op1val:0x7fece30065d5ac1b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f8, f26, f8, f6, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs1 == rs2 == rd != rs3, rs1==f24, rs2==f24, rs3==f9, rd==f24, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6cba246939a56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f24; op2:f24; op3:f9; dest:f24; op1val:0x7fe6cba246939a56; op2val:0x7fe6cba246939a56; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f24, f24, f24, f9, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f16, rs2==f19, rs3==f29, rd==f22, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4f8b971fa5a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f16; op2:f19; op3:f29; dest:f22; op1val:0x7fe4f8b971fa5a72; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f22, f16, f19, f29, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f2, rs2==f27, rs3==f4, rd==f26, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x67140be6e2dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f2; op2:f27; op3:f4; dest:f26; op1val:0x7fe67140be6e2dc5; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f26, f2, f27, f4, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f21, rs2==f30, rs3==f25, rd==f27, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7f8e997d84592 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f21; op2:f30; op3:f25; dest:f27; op1val:0x7fe7f8e997d84592; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f27, f21, f30, f25, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f23, rs2==f31, rs3==f19, rd==f29, fs1 == 0 and fe1 == 0x7fa and fm1 == 0x5819e362ac2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f23; op2:f31; op3:f19; dest:f29; op1val:0x7fa5819e362ac2bf; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f29, f23, f31, f19, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f3, rs2==f7, rs3==f2, rd==f16, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1d803765d304 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f3; op2:f7; op3:f2; dest:f16; op1val:0x7fed1d803765d304; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f16, f3, f7, f2, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f12, rs2==f15, rs3==f1, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe07b0ce451645 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f12; op2:f15; op3:f1; dest:f4; op1val:0x7fee07b0ce451645; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f4, f12, f15, f1, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f18, rs2==f16, rs3==f11, rd==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe49bfb977b300 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f18; op2:f16; op3:f11; dest:f25; op1val:0x7fee49bfb977b300; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f25, f18, f16, f11, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f6, rs2==f13, rs3==f26, rd==f3, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1de0cd942442e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f6; op2:f13; op3:f26; dest:f3; op1val:0x7fe1de0cd942442e; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f3, f6, f13, f26, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f19, rs2==f20, rs3==f8, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5cab9bd09e6c4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f19; op2:f20; op3:f8; dest:f7; op1val:0x7fe5cab9bd09e6c4; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f7, f19, f20, f8, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f10, rs2==f26, rs3==f13, rd==f23, fs1 == 0 and fe1 == 0x7fa and fm1 == 0x4d1d10d2ac62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f26; op3:f13; dest:f23; op1val:0x7fa4d1d10d2ac62f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f23, f10, f26, f13, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f25, rs2==f6, rs3==f21, rd==f17, fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x30526056a01ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f25; op2:f6; op3:f21; dest:f17; op1val:0x7f930526056a01ff; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f17, f25, f6, f21, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f9, rs2==f18, rs3==f17, rd==f5, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1d17766cf56c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f9; op2:f18; op3:f17; dest:f5; op1val:0x7fd1d17766cf56c7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f5, f9, f18, f17, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f22, rs2==f12, rs3==f30, rd==f21, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbe64efc9e258d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f22; op2:f12; op3:f30; dest:f21; op1val:0x7febe64efc9e258d; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f21, f22, f12, f30, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f1, rs2==f4, rs3==f3, rd==f2, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6361dd8ebbe71 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f1; op2:f4; op3:f3; dest:f2; op1val:0x7fd6361dd8ebbe71; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f2, f1, f4, f3, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f4, rs2==f25, rs3==f0, rd==f9, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d3375e946b52 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f4; op2:f25; op3:f0; dest:f9; op1val:0x7fe4d3375e946b52; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f9, f4, f25, f0, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f30, rs2==f9, rs3==f31, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0aaee2f44e344 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f30; op2:f9; op3:f31; dest:f1; op1val:0x7fe0aaee2f44e344; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f1, f30, f9, f31, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f8, rs2==f29, rs3==f12, rd==f13, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x113ecba7502a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f8; op2:f29; op3:f12; dest:f13; op1val:0x7fc113ecba7502a7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f8, f29, f12, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f29, rs2==f0, rs3==f20, rd==f14, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9042a506a4fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f29; op2:f0; op3:f20; dest:f14; op1val:0x7feb9042a506a4fd; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f14, f29, f0, f20, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f7, rs2==f1, rs3==f14, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x95adca0768ede and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f7; op2:f1; op3:f14; dest:f0; op1val:0x7fe95adca0768ede; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f0, f7, f1, f14, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f0, rs2==f3, rs3==f7, rd==f11, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcfd9836660a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f0; op2:f3; op3:f7; dest:f11; op1val:0x7fdcfd9836660a69; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f11, f0, f3, f7, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x194e95f4fa0e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd194e95f4fa0e5; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x4d30da0b2f54f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8962598ff75fb and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb4d30da0b2f54f; op2val:0x4028962598ff75fb; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x963785d0567a5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x42aa420e5a55c and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd963785d0567a5; op2val:0x40042aa420e5a55c; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb537603b0ea8b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2bc99bd2c087f and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb537603b0ea8b; op2val:0x3ff2bc99bd2c087f; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a5710f3828f7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3f6c3f1a31a35 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9a5710f3828f7; op2val:0x4023f6c3f1a31a35; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf4fff14ba982d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x059ef1b4e186f and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef4fff14ba982d; op2val:0x3ff059ef1b4e186f; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1eb3cbd822141 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xc92bc8d23f80a and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1eb3cbd822141; op2val:0x400c92bc8d23f80a; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbf4f8dd35ac8c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2505b17c605c8 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febf4f8dd35ac8c; op2val:0x3ff2505b17c605c8; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4c6c848cb47df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8a4ab01158b82 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4c6c848cb47df; op2val:0x3ff8a4ab01158b82; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xe707c5377ae9f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0d1ffa1c81aa1 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbe707c5377ae9f; op2val:0x4020d1ffa1c81aa1; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9086506183f67 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x474031b174347 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9086506183f67; op2val:0x402474031b174347; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0e835d272c05e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe487ef0e5cb47 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0e835d272c05e; op2val:0x3ffe487ef0e5cb47; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa53d0d2b3faec and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x37289daf00a60 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea53d0d2b3faec; op2val:0x3ff37289daf00a60; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0x3502bebc53fff and fs2 == 0 and fe2 == 0x407 and fm2 == 0xa82aa06c96745 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f63502bebc53fff; op2val:0x407a82aa06c96745; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6f451c304de2e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x64e1c3e865dbd and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6f451c304de2e; op2val:0x3ff64e1c3e865dbd; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xb54c6b03a8983 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcb54c6b03a8983; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x43c3f0806f2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd43c3f0806f2cd; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5b66519ab8134 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5b66519ab8134; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9b75de798ac5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9b75de798ac5f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf940aa40f1530 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef940aa40f1530; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x737bdc485a77d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe737bdc485a77d; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x55e18bacc608f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb55e18bacc608f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x442435bea0eb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe442435bea0eb5; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xffb4067da2691 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feffb4067da2691; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8106d28c6e8ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8106d28c6e8ff; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ff4d99a919c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9ff4d99a919c7; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc00223fe58e9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec00223fe58e9e; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9e3b4234a7716 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9e3b4234a7716; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xde18ff8661b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdde18ff8661b6b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3f8c326b3af5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3f8c326b3af5d; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfa73e129b8879 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfa73e129b8879; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc48b48c27d811 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec48b48c27d811; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x82cee64001220 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe82cee64001220; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1f707766a790b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1f707766a790b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf2f5c0f43aa65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf2f5c0f43aa65; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0e1e10b8a2f26 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0e1e10b8a2f26; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x42f12d7244f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc42f12d7244f4f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0972c859cb481 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0972c859cb481; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc80a67882d6d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc80a67882d6d1; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x7f381ca9a6b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa7f381ca9a6b2f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x530b56ed605ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe530b56ed605ac; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac4394e2d6fb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdac4394e2d6fb3; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6756366451777 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6756366451777; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9bebe66f937a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9bebe66f937a7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa85a268409ae9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda85a268409ae9; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22e4be37f86cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe22e4be37f86cb; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc0377eab1f21f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec0377eab1f21f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x83bc51daecbf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd83bc51daecbf5; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x465936dcae3fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe465936dcae3fb; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xea52ea391cf03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcea52ea391cf03; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x566d65947d7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd566d65947d7e7; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x89d995b2d6507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc89d995b2d6507; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x8f90cc1b18bff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f58f90cc1b18bff; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d39f7052a913 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d39f7052a913; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa85d306a197c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda85d306a197c5; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8d5463dfce629 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8d5463dfce629; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6e65a8d3dbea5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6e65a8d3dbea5; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3dfdc8c878541 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3dfdc8c878541; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x447a9936a43d3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe447a9936a43d3; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe4d0d779159a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee4d0d779159a4; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6fd2704b8e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6fd2704b8e37f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x26c977d632159 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd26c977d632159; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x68add14e18ecb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd68add14e18ecb; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe800919ed6413 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee800919ed6413; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xebc97dc31d5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcebc97dc31d5a7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1f9fd611425bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1f9fd611425bb; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x76587e2d6216f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa76587e2d6216f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x57fa825e98147 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd57fa825e98147; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7bafa3050f8b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7bafa3050f8b7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x97836753c7c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f897836753c7c7f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1f06fdec36709 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1f06fdec36709; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00f47e13a3077 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd00f47e13a3077; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xace1ecea16623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feace1ecea16623; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6db92bb1bf075 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6db92bb1bf075; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3eebb35310409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3eebb35310409; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x04673c7ab8808 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe04673c7ab8808; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2362beb7fcccc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2362beb7fcccc; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa3be3d7336699 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda3be3d7336699; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe2f1c5d734347 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde2f1c5d734347; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6607c20361523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc6607c20361523; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc4edf85532923 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc4edf85532923; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x318ea43af884c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe318ea43af884c; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00b42e8f00d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd00b42e8f00d47; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5e872dc3c5cf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5e872dc3c5cf9; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0db7e0a5d748 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb0db7e0a5d748; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5a371eca20170 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5a371eca20170; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xdb8da7279369f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fadb8da7279369f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeedf7f711c3c2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeedf7f711c3c2; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5864580d04bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5864580d04bef; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5afb49b29c463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5afb49b29c463; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd64347e477166 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed64347e477166; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad3923b9bf5a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead3923b9bf5a2; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x76940d9e18057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe76940d9e18057; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6f291ef3c3557 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6f291ef3c3557; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9847d9429817b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9847d9429817b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf9f9f5190aab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef9f9f5190aab4; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9d5f97660dadf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9d5f97660dadf; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x42972262ccf0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa42972262ccf0f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x01dca4dde57a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe01dca4dde57a5; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x714a830fa079f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc714a830fa079f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x66b37637d118d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd66b37637d118d; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b39d91344978 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4b39d91344978; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc44223126cbc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc44223126cbc7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0a287088f5e69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0a287088f5e69; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9fbeb1abfb6e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9fbeb1abfb6e7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb3d56c4f6fd1d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb3d56c4f6fd1d; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x75450c5a9817f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f975450c5a9817f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdfba6beb7a6c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedfba6beb7a6c9; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x99fb7503e8d08 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe99fb7503e8d08; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcaf42bcba26d83; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb797ef55e1cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbfb797ef55e1cf; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7ad291b7d6463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7ad291b7d6463; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec0c4abe1fd0e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feec0c4abe1fd0e; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x627e198e85b1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9627e198e85b1f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2a1fa26c0948f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa2a1fa26c0948f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf60647476d4cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef60647476d4cb; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7b05f6eabb69f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7b05f6eabb69f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9099330bb750b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26e34e07a9172 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe26e34e07a9172; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3671fd3520218; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe451eb54c10b8b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xb56678fedc57f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9b56678fedc57f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c762dc4bc5d6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5c762dc4bc5d6; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1182656689f60 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1182656689f60; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ed9e7beff05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ed9e7beff05; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x25d1c4e896d66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe25d1c4e896d66; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x728eb744bb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa728eb744bb2ef; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6535160e0062c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6535160e0062c; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2bbdffdaf66c3; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9c16a190f4e87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9c16a190f4e87; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa1bf5c83faf60 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea1bf5c83faf60; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54845b368b76f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd54845b368b76f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96d3944ae92c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe96d3944ae92c5; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc380d05f3f55f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc380d05f3f55f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbdfc83569216bf; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7685c15158af8; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf1bca90426463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcf1bca90426463; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0ae020c2f2ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb0ae020c2f2ab; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x42a2ac1575123 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe42a2ac1575123; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf21e6dcb25437; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39beb50761e3d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe39beb50761e3d; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x516656a60de77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb516656a60de77; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x962eb496df1c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe962eb496df1c1; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd57951bee0a17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed57951bee0a17; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfe1581ecd07ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefe1581ecd07ea; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe520baea9095e5; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcd606a3f0f54d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcd606a3f0f54d; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28cdc8d19d0dc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe28cdc8d19d0dc; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee64794dad7d48; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2dfa6bb4d11d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2dfa6bb4d11d1; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca428c2b7c81f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feca428c2b7c81f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb2efd30dc5db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb2efd30dc5db9; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9f8dcc4f1275c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9f8dcc4f1275c; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1a3fd4c2ca047 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1a3fd4c2ca047; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe691ae7e1929e8; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd90afe96b3f2ad; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x14c9836bbe6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe14c9836bbe6ff; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed89e42f5143f8; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcbdd58ecc1b45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecbdd58ecc1b45; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaf56f24522c9c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaf56f24522c9c; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd8c56582791a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed8c56582791a6; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec0e80bc9923b7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x83e4a9485598d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe83e4a9485598d; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6febab5b81b47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6febab5b81b47; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde7f7bd88d7c8f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5035a8d0a4c2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5035a8d0a4c2b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39bd67fecd9d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe39bd67fecd9d5; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7e6c0d0870e13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7e6c0d0870e13; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc83df99d24bacb; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd294c231789029; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe26bbbacf7eaef; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8a2386a894fd9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8a2386a894fd9; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe314c82f3115df; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc7ab340bba999 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc7ab340bba999; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2cdc24d268f9f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x34d4bf2305d15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe34d4bf2305d15; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feed7c3ef329d04; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x14a00d8d01424 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe14a00d8d01424; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea101ccfb0623a; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x184a2cd54bc8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe184a2cd54bc8b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe69c26ac7fce60; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1a3fb352a13ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1a3fb352a13ab; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbbeb3709a573b7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdd9c651f50797 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedd9c651f50797; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0410cbbfdec45; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x47bc64f002dc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd47bc64f002dc1; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb49818dfc8788f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcab8890bacf6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcab8890bacf6d; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b3a56e2c058e; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xef616f891ea0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feef616f891ea0b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce8af77cda8053; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2290c48e30657 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2290c48e30657; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc874e2eeac1c13; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbdae67c407ef2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febdae67c407ef2; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4d025f5a10f55; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf3878bbaf3893 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcf3878bbaf3893; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febc366e555215f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf96c79e9fdfa1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf96c79e9fdfa1; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f52b954e52a4bff; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x56182d28045ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe56182d28045ae; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea65214b23e38e; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x986532dae9957 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd986532dae9957; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe707d21f5c40de; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xcc1e517e0a9ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8cc1e517e0a9ff; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe18ef1d7a9fa74; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c2c9b7ac820e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c2c9b7ac820e; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0abe7f07f8c6f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbb09e7215ddb9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febb09e7215ddb9; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde8754038aa2cf; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeee707a35c8c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeee707a35c8c3; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed3762f4d1629c; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x38c62d68fcb25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe38c62d68fcb25; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdbc978aa879221; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9c78deb52422f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9c78deb52422f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde3796147a7f97; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5e33245521f37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5e33245521f37; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecc3488366e29b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ac81c4b8321 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75ac81c4b8321; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3d97530ca446d; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcde8b20967d0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecde8b20967d0b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9ed4cb2685903; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf72fa86d218ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef72fa86d218ab; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ca42e21585b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0084bbfe5e825 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0084bbfe5e825; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3c9adc7329695; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x82f8c4c611b4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe82f8c4c611b4f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd209a1991e3307; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x026650c8e9dc3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe026650c8e9dc3; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0f42c0dfaf72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed0f42c0dfaf72; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2ab10cf910f7c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2ab10cf910f7c; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde809082dd48fb; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x36979c7be0deb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd36979c7be0deb; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x914e0c751c4f4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe914e0c751c4f4; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9ea70df588b3b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9ea70df588b3b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe05c5ccdf19706; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x092178fb945a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd092178fb945a5; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaeaa51052e977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdaeaa51052e977; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x84129978f9c19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe84129978f9c19; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb0580f98a7dbd; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94497c97803a8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe94497c97803a8; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x354ba34578ba7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc354ba34578ba7; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x238a22371e9ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8238a22371e9ff; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2c9bb6d2a0534 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2c9bb6d2a0534; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa9aa2b6025f07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca9aa2b6025f07; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x47c0965bde424 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe47c0965bde424; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6cba246939a56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6cba246939a56; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 368, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7feb0580f98a7dbd
.dword 0x0
.dword 0x0
.dword 0x7fe94497c97803a8
.dword 0x7fe94497c97803a8
.dword 0x7fe94497c97803a8
.dword 0x7fd5569022b338ff
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc354ba34578ba7
.dword 0x8000
.dword 0x7fc354ba34578ba7
.dword 0x7f8238a22371e9ff
.dword 0x7f8238a22371e9ff
.dword 0x4637ffff00000000
.dword 0x7fe2c9bb6d2a0534
.dword 0x8000
.dword 0x8000
.dword 0x7fca9aa2b6025f07
.dword 0x7fca9aa2b6025f07
.dword 0x7fca9aa2b6025f07
.dword 0x7fe136b66cb69135
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd7d6356ef8a62f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe47c0965bde424
.dword 0x8000
.dword 0x7fe47c0965bde424
.dword 0x7fece30065d5ac1b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe6cba246939a56
.dword 0x7fe6cba246939a56
.dword 0x4637ffff00000000
.dword 0x7fe4f8b971fa5a72
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe67140be6e2dc5
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe7f8e997d84592
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fa5819e362ac2bf
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fed1d803765d304
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fee07b0ce451645
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fee49bfb977b300
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe1de0cd942442e
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe5cab9bd09e6c4
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fa4d1d10d2ac62f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7f930526056a01ff
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd1d17766cf56c7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7febe64efc9e258d
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd6361dd8ebbe71
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe4d3375e946b52
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe0aaee2f44e344
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc113ecba7502a7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feb9042a506a4fd
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe95adca0768ede
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdcfd9836660a69
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd194e95f4fa0e5
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb4d30da0b2f54f
.dword 0x4028962598ff75fb
.dword 0xffeffffffffffffe
.dword 0x7fd963785d0567a5
.dword 0x40042aa420e5a55c
.dword 0xffefffffffffffff
.dword 0x7feb537603b0ea8b
.dword 0x3ff2bc99bd2c087f
.dword 0xffeffffffffffffe
.dword 0x7fb9a5710f3828f7
.dword 0x4023f6c3f1a31a35
.dword 0xffefffffffffffff
.dword 0x7fef4fff14ba982d
.dword 0x3ff059ef1b4e186f
.dword 0xffeffffffffffffe
.dword 0x7fd1eb3cbd822141
.dword 0x400c92bc8d23f80a
.dword 0xffefffffffffffff
.dword 0x7febf4f8dd35ac8c
.dword 0x3ff2505b17c605c8
.dword 0xffeffffffffffffe
.dword 0x7fe4c6c848cb47df
.dword 0x3ff8a4ab01158b82
.dword 0xffefffffffffffff
.dword 0x7fbe707c5377ae9f
.dword 0x4020d1ffa1c81aa1
.dword 0xffeffffffffffffe
.dword 0x7fb9086506183f67
.dword 0x402474031b174347
.dword 0xffefffffffffffff
.dword 0x7fe0e835d272c05e
.dword 0x3ffe487ef0e5cb47
.dword 0xffeffffffffffffe
.dword 0x7fea53d0d2b3faec
.dword 0x3ff37289daf00a60
.dword 0xffefffffffffffff
.dword 0x7f63502bebc53fff
.dword 0x407a82aa06c96745
.dword 0xffeffffffffffffe
.dword 0x7fe6f451c304de2e
.dword 0x3ff64e1c3e865dbd
.dword 0xffefffffffffffff
.dword 0x7fcb54c6b03a8983
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd43c3f0806f2cd
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe5b66519ab8134
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd9b75de798ac5f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fef940aa40f1530
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe737bdc485a77d
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb55e18bacc608f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe442435bea0eb5
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feffb4067da2691
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc8106d28c6e8ff
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe9ff4d99a919c7
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fec00223fe58e9e
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe9e3b4234a7716
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdde18ff8661b6b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd3f8c326b3af5d
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdfa73e129b8879
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fec48b48c27d811
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe82cee64001220
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe1f707766a790b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdf2f5c0f43aa65
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe0e1e10b8a2f26
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc42f12d7244f4f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd0972c859cb481
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdc80a67882d6d1
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fa7f381ca9a6b2f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe530b56ed605ac
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdac4394e2d6fb3
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe6756366451777
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd9bebe66f937a7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fda85a268409ae9
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe22e4be37f86cb
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fec0377eab1f21f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd83bc51daecbf5
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe465936dcae3fb
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fcea52ea391cf03
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd566d65947d7e7
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc89d995b2d6507
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7f58f90cc1b18bff
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe4d39f7052a913
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fda85d306a197c5
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd8d5463dfce629
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe6e65a8d3dbea5
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe3dfdc8c878541
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe447a9936a43d3
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fee4d0d779159a4
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd6fd2704b8e37f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd26c977d632159
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd68add14e18ecb
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fee800919ed6413
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fcebc97dc31d5a7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd1f9fd611425bb
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fa76587e2d6216f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd57fa825e98147
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe7bafa3050f8b7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7f897836753c7c7f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe1f06fdec36709
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd00f47e13a3077
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feace1ecea16623
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd6db92bb1bf075
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd3eebb35310409
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe04673c7ab8808
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe2362beb7fcccc
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fda3be3d7336699
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fde2f1c5d734347
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc6607c20361523
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdc4edf85532923
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe318ea43af884c
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd00b42e8f00d47
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd5e872dc3c5cf9
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feb0db7e0a5d748
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe5a371eca20170
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fadb8da7279369f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feeedf7f711c3c2
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe5864580d04bef
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc5afb49b29c463
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fed64347e477166
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fead3923b9bf5a2
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe76940d9e18057
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd6f291ef3c3557
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc9847d9429817b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fef9f9f5190aab4
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb9d5f97660dadf
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fa42972262ccf0f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe01dca4dde57a5
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc714a830fa079f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd66b37637d118d
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe4b39d91344978
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fcc44223126cbc7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd0a287088f5e69
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb9fbeb1abfb6e7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdb3d56c4f6fd1d
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7f975450c5a9817f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fedfba6beb7a6c9
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe99fb7503e8d08
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fcaf42bcba26d83
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fbfb797ef55e1cf
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc7ad291b7d6463
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feec0c4abe1fd0e
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7f9627e198e85b1f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fa2a1fa26c0948f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fef60647476d4cb
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd7b05f6eabb69f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd9099330bb750b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe26e34e07a9172
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe3671fd3520218
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe451eb54c10b8b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7f9b56678fedc57f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe5c762dc4bc5d6
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe1182656689f60
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fed1ed9e7beff05
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe25d1c4e896d66
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fa728eb744bb2ef
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe6535160e0062c
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc2bbdffdaf66c3
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb9c16a190f4e87
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fea1bf5c83faf60
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd54845b368b76f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe96d3944ae92c5
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fcc380d05f3f55f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fbdfc83569216bf
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe7685c15158af8
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fcf1bca90426463
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feb0ae020c2f2ab
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe42a2ac1575123
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdf21e6dcb25437
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe39beb50761e3d
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fb516656a60de77
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe962eb496df1c1
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fed57951bee0a17
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fefe1581ecd07ea
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe520baea9095e5
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdcd606a3f0f54d
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe28cdc8d19d0dc
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fee64794dad7d48
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe2dfa6bb4d11d1
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feca428c2b7c81f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feb2efd30dc5db9
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe9f8dcc4f1275c
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd1a3fd4c2ca047
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe691ae7e1929e8
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd90afe96b3f2ad
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe14c9836bbe6ff
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fed89e42f5143f8
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fecbdd58ecc1b45
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feaf56f24522c9c
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fed8c56582791a6
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fec0e80bc9923b7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe83e4a9485598d
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fb6febab5b81b47
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fde7f7bd88d7c8f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe5035a8d0a4c2b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe39bd67fecd9d5
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc7e6c0d0870e13
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc83df99d24bacb
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd294c231789029
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe26bbbacf7eaef
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd8a2386a894fd9
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe314c82f3115df
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdc7ab340bba999
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe2cdc24d268f9f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe34d4bf2305d15
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feed7c3ef329d04
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe14a00d8d01424
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fea101ccfb0623a
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe184a2cd54bc8b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe69c26ac7fce60
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe1a3fb352a13ab
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fbbeb3709a573b7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fedd9c651f50797
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe0410cbbfdec45
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd47bc64f002dc1
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fb49818dfc8788f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdcab8890bacf6d
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe9b3a56e2c058e
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feef616f891ea0b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fce8af77cda8053
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe2290c48e30657
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc874e2eeac1c13
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7febdae67c407ef2
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd4d025f5a10f55
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fcf3878bbaf3893
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7febc366e555215f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdf96c79e9fdfa1
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7f52b954e52a4bff
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe56182d28045ae
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fea65214b23e38e
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd986532dae9957
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe707d21f5c40de
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7f8cc1e517e0a9ff
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe18ef1d7a9fa74
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe9c2c9b7ac820e
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd0abe7f07f8c6f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7febb09e7215ddb9
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fde8754038aa2cf
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feeee707a35c8c3
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fed3762f4d1629c
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe38c62d68fcb25
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdbc978aa879221
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb9c78deb52422f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fde3796147a7f97
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe5e33245521f37
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fecc3488366e29b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe75ac81c4b8321
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd3d97530ca446d
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fecde8b20967d0b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe9ed4cb2685903
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fef72fa86d218ab
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fed1ca42e21585b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd0084bbfe5e825
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe3c9adc7329695
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe82f8c4c611b4f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd209a1991e3307
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe026650c8e9dc3
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fed0f42c0dfaf72
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe2ab10cf910f7c
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fde809082dd48fb
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd36979c7be0deb
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe914e0c751c4f4
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd9ea70df588b3b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe05c5ccdf19706
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd092178fb945a5
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdaeaa51052e977
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe84129978f9c19
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feb0580f98a7dbd
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe94497c97803a8
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc354ba34578ba7
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7f8238a22371e9ff
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe2c9bb6d2a0534
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fca9aa2b6025f07
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe47c0965bde424
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe6cba246939a56
.dword 0x8000
.dword 0x4637ffff00000000
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 48*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
