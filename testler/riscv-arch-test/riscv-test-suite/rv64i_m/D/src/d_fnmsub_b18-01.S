
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:16 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V FD extension for the fnmsub_b18 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmsub_b18)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd == rs3 != rs2, rs1==f25, rs2==f21, rs3==f25, rd==f25, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f25; op2:f21; op3:f25; dest:f25; op1val:0x7fce759ff97b7507; op2val:0x8000; op3val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f25, f25, f21, f25, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f15, rs2==f29, rs3==f1, rd==f14, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x85641ad17e9cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f15; op2:f29; op3:f1; dest:f14; op1val:0x7fd85641ad17e9cd; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f14, f15, f29, f1, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f7, rs2==f12, rs3==f14, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x90b3cf22a50bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f7; op2:f12; op3:f14; dest:f7; op1val:0x7fe90b3cf22a50bf; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f7, f7, f12, f14, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==f22, rs2==f8, rs3==f8, rd==f8, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x35787ca99e0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f22; op2:f8; op3:f8; dest:f8; op1val:0x7fe35787ca99e0af; op2val:0x0; op3val:0x0; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f8, f22, f8, f8, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f11, rs2==f10, rs3==f11, rd==f12, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e3bb0bafc143 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f11; op2:f10; op3:f11; dest:f12; op1val:0x7fd7e3bb0bafc143; op2val:0x0; op3val:0x7fd7e3bb0bafc143; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f12, f11, f10, f11, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f2, rs2==f25, rs3==f23, rd==f23, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6daed80aff873 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f2; op2:f25; op3:f23; dest:f23; op1val:0x7fc6daed80aff873; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f23, f2, f25, f23, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f31, rs2==f31, rs3==f31, rd==f2, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x474683222afa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f31; op2:f31; op3:f31; dest:f2; op1val:0x7fb474683222afa7; op2val:0x7fb474683222afa7; op3val:0x7fb474683222afa7; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f2, f31, f31, f31, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rs2 == rd != rs3, rs1==f17, rs2==f17, rs3==f16, rd==f17, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x855d2065cc26b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f17; op2:f17; op3:f16; dest:f17; op1val:0x7fd855d2065cc26b; op2val:0x7fd855d2065cc26b; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f17, f17, f17, f16, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f28, rs2==f28, rs3==f28, rd==f28, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6e9d2a2e46474 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f28; op2:f28; op3:f28; dest:f28; op1val:0x7fe6e9d2a2e46474; op2val:0x7fe6e9d2a2e46474; op3val:0x7fe6e9d2a2e46474; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f28, f28, f28, f28, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f1, rs2==f13, rs3==f13, rd==f24, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1c6de58039298 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f1; op2:f13; op3:f13; dest:f24; op1val:0x7fe1c6de58039298; op2val:0x0; op3val:0x0; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f24, f1, f13, f13, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f26, rs2==f26, rs3==f9, rd==f10, fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfae68c41561bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f26; op2:f26; op3:f9; dest:f10; op1val:0x7fbfae68c41561bf; op2val:0x7fbfae68c41561bf; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f10, f26, f26, f9, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f12, rs2==f11, rs3==f26, rd==f11, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x50aabc36dfa15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f12; op2:f11; op3:f26; dest:f11; op1val:0x7fd50aabc36dfa15; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f11, f12, f11, f26, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f19, rs2==f23, rs3==f0, rd==f26, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8755fffcef0ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f19; op2:f23; op3:f0; dest:f26; op1val:0x7fc8755fffcef0ef; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f26, f19, f23, f0, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f14, rs2==f1, rs3==f2, rd==f6, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x717e9f21e93db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f14; op2:f1; op3:f2; dest:f6; op1val:0x7fd717e9f21e93db; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f6, f14, f1, f2, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f5, rs2==f24, rs3==f19, rd==f13, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2c588e1376ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f5; op2:f24; op3:f19; dest:f13; op1val:0x7fe2c588e1376ac3; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f5, f24, f19, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f10, rs2==f15, rs3==f29, rd==f3, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b3842d8efcbe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f15; op3:f29; dest:f3; op1val:0x7fe4b3842d8efcbe; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f3, f10, f15, f29, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f24, rs2==f20, rs3==f17, rd==f16, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x67b8733161cc9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f24; op2:f20; op3:f17; dest:f16; op1val:0x7fd67b8733161cc9; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f16, f24, f20, f17, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f18, rs2==f5, rs3==f20, rd==f19, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x422135092fed7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f18; op2:f5; op3:f20; dest:f19; op1val:0x7fd422135092fed7; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f19, f18, f5, f20, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f6, rs2==f16, rs3==f12, rd==f21, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x437a4e1419f0d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f6; op2:f16; op3:f12; dest:f21; op1val:0x7fd437a4e1419f0d; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f21, f6, f16, f12, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f20, rs2==f3, rs3==f30, rd==f27, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0115df9f5c056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f20; op2:f3; op3:f30; dest:f27; op1val:0x7fe0115df9f5c056; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f27, f20, f3, f30, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f3, rs2==f6, rs3==f10, rd==f4, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x60c7c307e31a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f3; op2:f6; op3:f10; dest:f4; op1val:0x7fb60c7c307e31a7; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f4, f3, f6, f10, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f30, rs2==f9, rs3==f15, rd==f20, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb57a54ad9d312 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f30; op2:f9; op3:f15; dest:f20; op1val:0x7feb57a54ad9d312; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f20, f30, f9, f15, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f4, rs2==f0, rs3==f3, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf30ae6421cda7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f4; op2:f0; op3:f3; dest:f1; op1val:0x7fef30ae6421cda7; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f1, f4, f0, f3, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f27, rs2==f4, rs3==f24, rd==f30, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x183c18f73341f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f27; op2:f4; op3:f24; dest:f30; op1val:0x7fb183c18f73341f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f30, f27, f4, f24, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f29, rs2==f7, rs3==f27, rd==f22, fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfe78141983bff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f29; op2:f7; op3:f27; dest:f22; op1val:0x7fbfe78141983bff; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f22, f29, f7, f27, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f13, rs2==f22, rs3==f7, rd==f9, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03d0e60bd2c53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f13; op2:f22; op3:f7; dest:f9; op1val:0x7fc03d0e60bd2c53; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f9, f13, f22, f7, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f23, rs2==f30, rs3==f6, rd==f15, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc1325f19d9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f23; op2:f30; op3:f6; dest:f15; op1val:0x7fac1325f19d9f5f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f15, f23, f30, f6, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f16, rs2==f27, rs3==f22, rd==f31, fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xda206db2e93ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f16; op2:f27; op3:f22; dest:f31; op1val:0x7f5da206db2e93ff; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f31, f16, f27, f22, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f9, rs2==f14, rs3==f5, rd==f18, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8d9119f4731d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f9; op2:f14; op3:f5; dest:f18; op1val:0x7fe8d9119f4731d4; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f18, f9, f14, f5, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f8, rs2==f18, rs3==f21, rd==f0, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe43fe6a95bdeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f8; op2:f18; op3:f21; dest:f0; op1val:0x7fde43fe6a95bdeb; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f0, f8, f18, f21, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f21, rs2==f2, rs3==f18, rd==f5, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb122b80686473 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f21; op2:f2; op3:f18; dest:f5; op1val:0x7fdb122b80686473; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f5, f21, f2, f18, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f0, rs2==f19, rs3==f4, rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0df5d521424e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f0; op2:f19; op3:f4; dest:f29; op1val:0x7fe0df5d521424e6; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f29, f0, f19, f4, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x13083ccf1d8b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd13083ccf1d8b1; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x15e91a9fc6f05 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd7a23d42ea5fa and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd15e91a9fc6f05; op2val:0xc00d7a23d42ea5fa; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x990aaf06a508f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x406fce4599663 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa990aaf06a508f; op2val:0xc03406fce4599663; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9a0c0999e25b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x28caf60cb6c7c and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb9a0c0999e25b; op2val:0xbff28caf60cb6c7c; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x41d8cde4898c6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x973fe22444442 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe41d8cde4898c6; op2val:0xbff973fe22444442; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0xebd44f999c67f and fs2 == 1 and fe2 == 0x406 and fm2 == 0x0a7fbad7d2e03 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f7ebd44f999c67f; op2val:0xc060a7fbad7d2e03; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa5a1a13aed9e5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x36de63f0063d9 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea5a1a13aed9e5; op2val:0xbff36de63f0063d9; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9cb2b8c8391a5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3d99066f4f46d and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9cb2b8c8391a5; op2val:0xbff3d99066f4f46d; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd7f1c7b8efc05 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x15ba43ed516c7 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed7f1c7b8efc05; op2val:0xbff15ba43ed516c7; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x955605918543b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x435dc43ed9322 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe955605918543b; op2val:0xbff435dc43ed9322; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5ed3b83d4d06f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x759bce0b80a5b and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5ed3b83d4d06f; op2val:0xc01759bce0b80a5b; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa2350807a1251 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3969ff8665ab4 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea2350807a1251; op2val:0xbff3969ff8665ab4; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x11bbf238cf0de and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xded45bba9a050 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe11bbf238cf0de; op2val:0xbffded45bba9a050; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9423ad1f49e07 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4452e26f23954 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9423ad1f49e07; op2val:0xc014452e26f23954; op3val:0xffeffffffffffffe; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x68492c1c43473 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6bcccf94ef884 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd68492c1c43473; op2val:0xc006bcccf94ef884; op3val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x908ceac3ed748 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe908ceac3ed748; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8a675e7e0ea9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde8a675e7e0ea9; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb92c1e229f6d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb92c1e229f6d8; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0288c3fc6a2e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0288c3fc6a2e3; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5d8b8d100d4ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5d8b8d100d4ad; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x396d8c474503a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe396d8c474503a; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0ca2c7a6ffb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee0ca2c7a6ffb0; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa7ae3286d0c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda7ae3286d0c8f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0cc819625e25e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0cc819625e25e; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x53671e4145242 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe53671e4145242; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3315db9e9910d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3315db9e9910d; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5fe3ff80d0df7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5fe3ff80d0df7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7d97bc07bb6a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7d97bc07bb6a5; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xaeb807b25f33f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8aeb807b25f33f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x27666fc328a99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe27666fc328a99; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca22e1b83439 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecca22e1b83439; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcb0ad9f88c3fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecb0ad9f88c3fd; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd9037f0cb3b4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed9037f0cb3b4e; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x632d61a0c97c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe632d61a0c97c8; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcea5e0336397b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecea5e0336397b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x7144ec23fce9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa7144ec23fce9f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed1784fa671a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9ed1784fa671a; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x25e6420f5c09f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd25e6420f5c09f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2d672a7e2446b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2d672a7e2446b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x16ce13b7494bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb16ce13b7494bf; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd1d9dedc8d4db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd1d9dedc8d4db; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5d411df1e1d2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5d411df1e1d2f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x27fa95459d3d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd27fa95459d3d1; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x09bc54bda7ca2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe09bc54bda7ca2; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x53730eefdf77d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe53730eefdf77d; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac63c4f037629 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feac63c4f037629; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7db5311d3a19f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7db5311d3a19f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc6d7820846007 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc6d7820846007; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdad12fade7910 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedad12fade7910; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe67b863f16ae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee67b863f16ae2; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbcc6da478919d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdbcc6da478919d; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf94cbf20a6254 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef94cbf20a6254; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc28c8267d9ab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec28c8267d9ab4; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe2f4007548540 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee2f4007548540; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0x3183ef4678c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f73183ef4678c7f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3f7bce331716b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3f7bce331716b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd75a819a72f1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed75a819a72f1a; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa359c4048cb6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda359c4048cb6b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xadd87f48bf1c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdadd87f48bf1c7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaae953a52bc93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdaae953a52bc93; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x62aab2512cca5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd62aab2512cca5; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x15aec43b7bf87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd15aec43b7bf87; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x967511f665f1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe967511f665f1a; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2af313c25ada5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2af313c25ada5; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x099a756bd881b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc099a756bd881b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6191d0cb741ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6191d0cb741ad; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ccdd3e7a322c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9ccdd3e7a322c; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48ac00057963a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe48ac00057963a; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9d4cc7f4fd130 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9d4cc7f4fd130; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1d47422b88b69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1d47422b88b69; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x77fc19dd1d407 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc77fc19dd1d407; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad4cc6a4ca19e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead4cc6a4ca19e; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9d11e7f58461f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9d11e7f58461f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x86c42550ad12b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc86c42550ad12b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0f2b5a3d4901e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0f2b5a3d4901e; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xef491a115c81f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbef491a115c81f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xccdb65c979493 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcccdb65c979493; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcdedbb22a3043 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcdedbb22a3043; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc51162e460b0e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec51162e460b0e; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4ceb420df408f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4ceb420df408f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x58ca915efc253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd58ca915efc253; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5ab1b114777e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5ab1b114777e7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb608b57d7bf4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb608b57d7bf4f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc0f3fc67a660f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc0f3fc67a660f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaac59c0e5d8ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaac59c0e5d8ef; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x55c3845664053 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd55c3845664053; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x49b173797db75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd49b173797db75; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa124c133921cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fba124c133921cf; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6568f5c6359d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6568f5c6359d5; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbdae10d32417d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdbdae10d32417d; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7fc89aad95937 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7fc89aad95937; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8d90453e9cfb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce8d90453e9cfb; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b8cadd13d7db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b8cadd13d7db; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc7c1eba75a687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc7c1eba75a687; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d7504400059d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3d7504400059d; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78689e886932a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe78689e886932a; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2375c8ebc2475 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2375c8ebc2475; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xb913b7c55ffdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9b913b7c55ffdf; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8b676bb4091f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8b676bb4091f8; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8236520d6c6fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8236520d6c6fb; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x339d1964c64f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd339d1964c64f1; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x30f54d50e79fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe30f54d50e79fd; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7a037fec02fad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7a037fec02fad; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x402cbce109a77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd402cbce109a77; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x74b0a497b6245 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd74b0a497b6245; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd47b4bc16b5bb5; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f72b0267e3ba and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f72b0267e3ba; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd3437ca639b6b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x012632d0614c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd012632d0614c9; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed366397a0657 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feed366397a0657; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5a1f55815c33a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5a1f55815c33a; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf03ec3d1c1d8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7faf03ec3d1c1d8f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f96b7004b70b43f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x79dfa15f5403c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe79dfa15f5403c; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69f56211d9e5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe69f56211d9e5b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6909f0cdef409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6909f0cdef409; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5bcac57ab5ace; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddd70c0ad2c58b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4132da9546dfd; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xec2df688bcd4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7faec2df688bcd4f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe43ad2ac887783; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3b49de25b5810 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3b49de25b5810; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x488beb031b1bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9488beb031b1bf; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe28f1335426ef4; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa92ce67e64f49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda92ce67e64f49; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x77705c9d459bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f877705c9d459bf; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18cbe0d5b0ab6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe18cbe0d5b0ab6; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ad13253643d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ad13253643d4; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf4a1d99086e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef4a1d99086e31; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34501d37fe38d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34501d37fe38d; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe6ad80efba433 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce6ad80efba433; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x70cca2edccbd9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe70cca2edccbd9; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb98a4751306d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb98a4751306d7; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe039904d15cfd4; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe1991bf3efd01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee1991bf3efd01; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d812c3e43b86 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d812c3e43b86; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1e577746908d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1e577746908d8; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x30f9116b9506a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe30f9116b9506a; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x49abc8377a2f1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe49abc8377a2f1; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a470198b7628 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a470198b7628; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd7759f6f589ad; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x82db2eb039623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd82db2eb039623; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcb16f8f726369 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecb16f8f726369; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xead56888da556 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feead56888da556; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x415cc9ae1aebd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd415cc9ae1aebd; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc4d8895bf826 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febc4d8895bf826; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x5ba25feb674df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa5ba25feb674df; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3fe541b09258b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3fe541b09258b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x388f2590db1b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe388f2590db1b3; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda1ba02a5538df; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x943e82f8af8c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc943e82f8af8c3; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x010befcbab41f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa010befcbab41f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x33141c6246e99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe33141c6246e99; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x3b45a2375b697 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb3b45a2375b697; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d1a2580ed007 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3d1a2580ed007; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feff3c90824e08b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe02c6758f19d47; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf615e3d1dc570 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef615e3d1dc570; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec306053b001eb; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x52e5a4c6824cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd52e5a4c6824cb; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fd76e25872b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6fd76e25872b5; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x70268582df3ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa70268582df3ff; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3aa401f0be9eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3aa401f0be9eb; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x6a01466b8215f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa6a01466b8215f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febedb51c79c56f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe899f171a9297a; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2cf1d3b6ac94b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2cf1d3b6ac94b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x34c47a0526ef3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc34c47a0526ef3; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa4501af2d40bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda4501af2d40bf; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x99e7a144435ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe99e7a144435ef; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6a91f2b02b477 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6a91f2b02b477; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfac7da9ef1ce9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefac7da9ef1ce9; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb537f328e16b0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb537f328e16b0; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x03ef3cf6c8e37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb03ef3cf6c8e37; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x23cbe38fed7af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd23cbe38fed7af; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x25a6085117eb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe25a6085117eb3; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa9c883bf3c926 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea9c883bf3c926; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xb0624ba20ab53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcb0624ba20ab53; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6d796ca9f3e52 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6d796ca9f3e52; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x23620f06a92d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe23620f06a92d8; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcf344fe49aeb9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecf344fe49aeb9; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xede45ea2ac4af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feede45ea2ac4af; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb8a57b94e3940 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb8a57b94e3940; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4e072cb2d87d3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4e072cb2d87d3; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x57b12a6c8424b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe57b12a6c8424b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfb62fea6c5bdf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefb62fea6c5bdf; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb67a2291e65ec and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb67a2291e65ec; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdb9ec201d5923 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedb9ec201d5923; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5d2cc33a9b554 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5d2cc33a9b554; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcef388d58d8ec and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecef388d58d8ec; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2b230d0edf6b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2b230d0edf6b7; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2b8ed55a15b90 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2b8ed55a15b90; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x675514445d7d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd675514445d7d5; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b20864979939 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8b20864979939; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03b55a3557b05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe03b55a3557b05; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34403635e831b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34403635e831b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x40d80b76bc040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe40d80b76bc040; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbea13763b55f9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdbea13763b55f9; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xee5369ab02b92 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feee5369ab02b92; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xbc63a6420b0e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcbc63a6420b0e7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x1676d77eb0adb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc1676d77eb0adb; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8f2c40125fbb7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb8f2c40125fbb7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc1facf9764ac8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec1facf9764ac8; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdf05390895e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedf05390895e61; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc74abdfb676c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc74abdfb676c7; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9a10b6e4ec167 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9a10b6e4ec167; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9471495d333b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9471495d333b3; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd79a3e9b52e6a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed79a3e9b52e6a; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6da2613270600 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6da2613270600; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc1f3c058ce942 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec1f3c058ce942; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7009b07ae3d88 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7009b07ae3d88; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe418564c20c07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde418564c20c07; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbb2662d13e5e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febb2662d13e5e4; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xfc18b696ac21f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9fc18b696ac21f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x347f8263d98bd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd347f8263d98bd; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2ea49ac2bd0e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2ea49ac2bd0e2; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8436c13d47a1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8436c13d47a1b; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0645d4519cddf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb0645d4519cddf; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x57c33eb1be367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe57c33eb1be367; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7b855d00f829f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7b855d00f829f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0bde6858f4b91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0bde6858f4b91; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc706f3b40e35 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febc706f3b40e35; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe450c74c9b42e4; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3476623b5f3d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3476623b5f3d7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4733f0771afc6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4733f0771afc6; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe7c922b2d54e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde7c922b2d54e3; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feac44ace32d282; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18cc1c53ea1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde18cc1c53ea1b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfdc528ede5c0d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefdc528ede5c0d; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdfe8e9311623f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcdfe8e9311623f; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd09941946801c5; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xacc8bf5e07e70 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feacc8bf5e07e70; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xaf7d1e8a8527f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8af7d1e8a8527f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0c67fd361123f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb0c67fd361123f; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe405e69652cae2; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x353501de56e49 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe353501de56e49; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7ad586f53dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7ad586f53dadd; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x16a5368858d8c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe16a5368858d8c; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce759ff97b7507; op2val:0x8000; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x35787ca99e0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe35787ca99e0af; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e3bb0bafc143 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e3bb0bafc143; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x474683222afa7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb474683222afa7; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x855d2065cc26b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd855d2065cc26b; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6e9d2a2e46474 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6e9d2a2e46474; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1c6de58039298 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1c6de58039298; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfae68c41561bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbfae68c41561bf; op2val:0x0; op3val:0x4637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 368, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fce759ff97b7507
.dword 0x8000
.dword 0x7fce759ff97b7507
.dword 0x7fd85641ad17e9cd
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe90b3cf22a50bf
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe35787ca99e0af
.dword 0x0
.dword 0x0
.dword 0x7fd7e3bb0bafc143
.dword 0x0
.dword 0x7fd7e3bb0bafc143
.dword 0x7fc6daed80aff873
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb474683222afa7
.dword 0x7fb474683222afa7
.dword 0x7fb474683222afa7
.dword 0x7fd855d2065cc26b
.dword 0x7fd855d2065cc26b
.dword 0x4637ffff00000000
.dword 0x7fe6e9d2a2e46474
.dword 0x7fe6e9d2a2e46474
.dword 0x7fe6e9d2a2e46474
.dword 0x7fe1c6de58039298
.dword 0x0
.dword 0x0
.dword 0x7fbfae68c41561bf
.dword 0x7fbfae68c41561bf
.dword 0x4637ffff00000000
.dword 0x7fd50aabc36dfa15
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc8755fffcef0ef
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd717e9f21e93db
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe2c588e1376ac3
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe4b3842d8efcbe
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd67b8733161cc9
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd422135092fed7
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd437a4e1419f0d
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe0115df9f5c056
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fb60c7c307e31a7
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feb57a54ad9d312
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fef30ae6421cda7
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fb183c18f73341f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fbfe78141983bff
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc03d0e60bd2c53
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fac1325f19d9f5f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7f5da206db2e93ff
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe8d9119f4731d4
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fde43fe6a95bdeb
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdb122b80686473
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe0df5d521424e6
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd13083ccf1d8b1
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd15e91a9fc6f05
.dword 0xc00d7a23d42ea5fa
.dword 0xffeffffffffffffe
.dword 0x7fa990aaf06a508f
.dword 0xc03406fce4599663
.dword 0xffefffffffffffff
.dword 0x7feb9a0c0999e25b
.dword 0xbff28caf60cb6c7c
.dword 0xffeffffffffffffe
.dword 0x7fe41d8cde4898c6
.dword 0xbff973fe22444442
.dword 0xffefffffffffffff
.dword 0x7f7ebd44f999c67f
.dword 0xc060a7fbad7d2e03
.dword 0xffeffffffffffffe
.dword 0x7fea5a1a13aed9e5
.dword 0xbff36de63f0063d9
.dword 0xffefffffffffffff
.dword 0x7fe9cb2b8c8391a5
.dword 0xbff3d99066f4f46d
.dword 0xffeffffffffffffe
.dword 0x7fed7f1c7b8efc05
.dword 0xbff15ba43ed516c7
.dword 0xffefffffffffffff
.dword 0x7fe955605918543b
.dword 0xbff435dc43ed9322
.dword 0xffeffffffffffffe
.dword 0x7fc5ed3b83d4d06f
.dword 0xc01759bce0b80a5b
.dword 0xffefffffffffffff
.dword 0x7fea2350807a1251
.dword 0xbff3969ff8665ab4
.dword 0xffeffffffffffffe
.dword 0x7fe11bbf238cf0de
.dword 0xbffded45bba9a050
.dword 0xffefffffffffffff
.dword 0x7fc9423ad1f49e07
.dword 0xc014452e26f23954
.dword 0xffeffffffffffffe
.dword 0x7fd68492c1c43473
.dword 0xc006bcccf94ef884
.dword 0xffefffffffffffff
.dword 0x7fe908ceac3ed748
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fde8a675e7e0ea9
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feb92c1e229f6d8
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd0288c3fc6a2e3
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd5d8b8d100d4ad
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe396d8c474503a
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fee0ca2c7a6ffb0
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fda7ae3286d0c8f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe0cc819625e25e
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe53671e4145242
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd3315db9e9910d
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc5fe3ff80d0df7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe7d97bc07bb6a5
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7f8aeb807b25f33f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe27666fc328a99
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fecca22e1b83439
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fecb0ad9f88c3fd
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fed9037f0cb3b4e
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe632d61a0c97c8
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fecea5e0336397b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fa7144ec23fce9f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe9ed1784fa671a
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd25e6420f5c09f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe2d672a7e2446b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb16ce13b7494bf
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fcd1d9dedc8d4db
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd5d411df1e1d2f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd27fa95459d3d1
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe09bc54bda7ca2
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe53730eefdf77d
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feac63c4f037629
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe7db5311d3a19f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fcc6d7820846007
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fedad12fade7910
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fee67b863f16ae2
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdbcc6da478919d
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fef94cbf20a6254
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fec28c8267d9ab4
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fee2f4007548540
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7f73183ef4678c7f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc3f7bce331716b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fed75a819a72f1a
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fda359c4048cb6b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdadd87f48bf1c7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdaae953a52bc93
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd62aab2512cca5
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd15aec43b7bf87
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe967511f665f1a
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd2af313c25ada5
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc099a756bd881b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd6191d0cb741ad
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe9ccdd3e7a322c
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe48ac00057963a
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe9d4cc7f4fd130
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd1d47422b88b69
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc77fc19dd1d407
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fead4cc6a4ca19e
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe9d11e7f58461f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc86c42550ad12b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe0f2b5a3d4901e
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fbef491a115c81f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fcccdb65c979493
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdcdedbb22a3043
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fec51162e460b0e
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe4ceb420df408f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd58ca915efc253
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc5ab1b114777e7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feb608b57d7bf4f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdc0f3fc67a660f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feaac59c0e5d8ef
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd55c3845664053
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd49b173797db75
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fba124c133921cf
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe6568f5c6359d5
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdbdae10d32417d
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc7fc89aad95937
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fce8d90453e9cfb
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe9b8cadd13d7db
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fcc7c1eba75a687
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd3d7504400059d
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe78689e886932a
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe2375c8ebc2475
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7f9b913b7c55ffdf
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe8b676bb4091f8
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd8236520d6c6fb
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd339d1964c64f1
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe30f54d50e79fd
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd7a037fec02fad
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd402cbce109a77
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd74b0a497b6245
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd47b4bc16b5bb5
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe2f72b0267e3ba
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdd3437ca639b6b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd012632d0614c9
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feed366397a0657
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe5a1f55815c33a
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7faf03ec3d1c1d8f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7f96b7004b70b43f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe79dfa15f5403c
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe69f56211d9e5b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd6909f0cdef409
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe5bcac57ab5ace
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fddd70c0ad2c58b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe4132da9546dfd
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7faec2df688bcd4f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe43ad2ac887783
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe3b49de25b5810
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7f9488beb031b1bf
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe28f1335426ef4
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fda92ce67e64f49
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7f877705c9d459bf
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe18cbe0d5b0ab6
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe0ad13253643d4
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fef4a1d99086e31
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd34501d37fe38d
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fce6ad80efba433
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe70cca2edccbd9
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdb98a4751306d7
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe039904d15cfd4
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fee1991bf3efd01
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe3d812c3e43b86
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe1e577746908d8
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe30f9116b9506a
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe49abc8377a2f1
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe0a470198b7628
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdd7759f6f589ad
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd82db2eb039623
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fecb16f8f726369
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feead56888da556
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd415cc9ae1aebd
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7febc4d8895bf826
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fa5ba25feb674df
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc3fe541b09258b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe388f2590db1b3
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fda1ba02a5538df
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc943e82f8af8c3
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fa010befcbab41f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe33141c6246e99
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb3b45a2375b697
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd3d1a2580ed007
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feff3c90824e08b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe02c6758f19d47
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fef615e3d1dc570
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fec306053b001eb
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd52e5a4c6824cb
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe6fd76e25872b5
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fa70268582df3ff
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe3aa401f0be9eb
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fa6a01466b8215f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7febedb51c79c56f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe899f171a9297a
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd2cf1d3b6ac94b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc34c47a0526ef3
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fda4501af2d40bf
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe99e7a144435ef
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb6a91f2b02b477
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fefac7da9ef1ce9
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feb537f328e16b0
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb03ef3cf6c8e37
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd23cbe38fed7af
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe25a6085117eb3
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fea9c883bf3c926
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fcb0624ba20ab53
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe6d796ca9f3e52
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe23620f06a92d8
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fecf344fe49aeb9
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feede45ea2ac4af
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7feb8a57b94e3940
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fc4e072cb2d87d3
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe57b12a6c8424b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fefb62fea6c5bdf
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feb67a2291e65ec
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fedb9ec201d5923
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe5d2cc33a9b554
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fecef388d58d8ec
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe2b230d0edf6b7
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe2b8ed55a15b90
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd675514445d7d5
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd8b20864979939
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe03b55a3557b05
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd34403635e831b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe40d80b76bc040
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fdbea13763b55f9
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feee5369ab02b92
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fcbc63a6420b0e7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc1676d77eb0adb
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb8f2c40125fbb7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fec1facf9764ac8
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fedf05390895e61
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fdc74abdfb676c7
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe9a10b6e4ec167
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd9471495d333b3
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fed79a3e9b52e6a
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe6da2613270600
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fec1f3c058ce942
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe7009b07ae3d88
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fde418564c20c07
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7febb2662d13e5e4
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7f9fc18b696ac21f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd347f8263d98bd
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe2ea49ac2bd0e2
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe8436c13d47a1b
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fb0645d4519cddf
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe57c33eb1be367
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe7b855d00f829f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe0bde6858f4b91
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7febc706f3b40e35
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe450c74c9b42e4
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fc3476623b5f3d7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe4733f0771afc6
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fde7c922b2d54e3
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feac44ace32d282
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fde18cc1c53ea1b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fefdc528ede5c0d
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fcdfe8e9311623f
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd09941946801c5
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7feacc8bf5e07e70
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7f8af7d1e8a8527f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fb0c67fd361123f
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe405e69652cae2
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe353501de56e49
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fd7ad586f53dadd
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe16a5368858d8c
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fce759ff97b7507
.dword 0x8000
.dword 0x4637ffff00000000
.dword 0x7fe35787ca99e0af
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd7e3bb0bafc143
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fb474683222afa7
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fd855d2065cc26b
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe6e9d2a2e46474
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fe1c6de58039298
.dword 0x0
.dword 0x4637ffff00000000
.dword 0x7fbfae68c41561bf
.dword 0x0
.dword 0x4637ffff00000000
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 48*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
