
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 15:10:19 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmul.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmul.d instruction of the RISC-V FD extension for the fmul_b9 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmul_b9)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f21, rs2==f19, rd==f8, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x369 and fm2 == 0x6d601ad376ab9 and rm_val == 0  
// opcode: fmul.d ; op1:f21; op2:f19; dest:f8; op1val:0x0; op2val:0x3696d601ad376ab9; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f8, f21, f19, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rd != rs2, rs1==f13, rs2==f11, rd==f13, fs1 == 1 and fe1 == 0x47f and fm1 == 0xd333333333333 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f13; op2:f11; dest:f13; op1val:0xc7fd333333333333; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f13, f13, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_2:
// rs2 == rd != rs1, rs1==f3, rs2==f6, rd==f6, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xd333333333333 and rm_val == 0  
// opcode: fmul.d ; op1:f3; op2:f6; dest:f6; op1val:0xffefffffffffffff; op2val:0xc7fd333333333333; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f6, f3, f6, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_3:
// rs1 == rs2 == rd, rs1==f28, rs2==f28, rd==f28, fs1 == 1 and fe1 == 0x47f and fm1 == 0xccccccccccccc and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f28; op2:f28; dest:f28; op1val:0xc7fccccccccccccc; op2val:0xc7fccccccccccccc; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f28, f28, f28, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_4:
// rs1 == rs2 != rd, rs1==f14, rs2==f14, rd==f23, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xccccccccccccc and rm_val == 0  
// opcode: fmul.d ; op1:f14; op2:f14; dest:f23; op1val:0xffefffffffffffff; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f23, f14, f14, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_5:
// rs1==f25, rs2==f18, rd==f9, fs1 == 1 and fe1 == 0x47f and fm1 == 0xd6db6db6db6db and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f25; op2:f18; dest:f9; op1val:0xc7fd6db6db6db6db; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f9, f25, f18, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_6:
// rs1==f0, rs2==f22, rd==f31, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xd6db6db6db6db and rm_val == 0  
// opcode: fmul.d ; op1:f0; op2:f22; dest:f31; op1val:0xffefffffffffffff; op2val:0xc7fd6db6db6db6db; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f31, f0, f22, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_7:
// rs1==f8, rs2==f31, rd==f27, fs1 == 1 and fe1 == 0x47f and fm1 == 0xc924924924924 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f8; op2:f31; dest:f27; op1val:0xc7fc924924924924; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f27, f8, f31, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_8:
// rs1==f4, rs2==f5, rd==f21, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc924924924924 and rm_val == 0  
// opcode: fmul.d ; op1:f4; op2:f5; dest:f21; op1val:0xffefffffffffffff; op2val:0xc7fc924924924924; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f21, f4, f5, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_9:
// rs1==f11, rs2==f7, rd==f5, fs1 == 1 and fe1 == 0x47f and fm1 == 0xd111111111111 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f11; op2:f7; dest:f5; op1val:0xc7fd111111111111; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f5, f11, f7, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_10:
// rs1==f22, rs2==f27, rd==f16, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xd111111111111 and rm_val == 0  
// opcode: fmul.d ; op1:f22; op2:f27; dest:f16; op1val:0xffefffffffffffff; op2val:0xc7fd111111111111; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f16, f22, f27, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_11:
// rs1==f10, rs2==f8, rd==f17, fs1 == 1 and fe1 == 0x47f and fm1 == 0xceeeeeeeeeeee and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f8; dest:f17; op1val:0xc7fceeeeeeeeeeee; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f17, f10, f8, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_12:
// rs1==f24, rs2==f0, rd==f1, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xceeeeeeeeeeee and rm_val == 0  
// opcode: fmul.d ; op1:f24; op2:f0; dest:f1; op1val:0xffefffffffffffff; op2val:0xc7fceeeeeeeeeeee; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f1, f24, f0, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_13:
// rs1==f27, rs2==f25, rd==f26, fs1 == 1 and fe1 == 0x47f and fm1 == 0xd99999999999a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f27; op2:f25; dest:f26; op1val:0xc7fd99999999999a; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f26, f27, f25, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_14:
// rs1==f31, rs2==f26, rd==f24, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xd99999999999a and rm_val == 0  
// opcode: fmul.d ; op1:f31; op2:f26; dest:f24; op1val:0xffefffffffffffff; op2val:0xc7fd99999999999a; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f24, f31, f26, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_15:
// rs1==f19, rs2==f16, rd==f30, fs1 == 1 and fe1 == 0x47f and fm1 == 0xc666666666666 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f19; op2:f16; dest:f30; op1val:0xc7fc666666666666; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f30, f19, f16, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_16:
// rs1==f16, rs2==f13, rd==f19, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc666666666666 and rm_val == 0  
// opcode: fmul.d ; op1:f16; op2:f13; dest:f19; op1val:0xffefffffffffffff; op2val:0xc7fc666666666666; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f19, f16, f13, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_17:
// rs1==f23, rs2==f30, rd==f29, fs1 == 1 and fe1 == 0x47f and fm1 == 0xdb6db6db6db6e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f23; op2:f30; dest:f29; op1val:0xc7fdb6db6db6db6e; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f29, f23, f30, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_18:
// rs1==f2, rs2==f4, rd==f14, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdb6db6db6db6e and rm_val == 0  
// opcode: fmul.d ; op1:f2; op2:f4; dest:f14; op1val:0xffefffffffffffff; op2val:0xc7fdb6db6db6db6e; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f14, f2, f4, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_19:
// rs1==f20, rs2==f1, rd==f2, fs1 == 1 and fe1 == 0x47f and fm1 == 0xcdb6db6db6db6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f20; op2:f1; dest:f2; op1val:0xc7fcdb6db6db6db6; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f2, f20, f1, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_20:
// rs1==f9, rs2==f15, rd==f18, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xcdb6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f9; op2:f15; dest:f18; op1val:0xffefffffffffffff; op2val:0xc7fcdb6db6db6db6; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f18, f9, f15, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_21:
// rs1==f6, rs2==f17, rd==f0, fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f6; op2:f17; dest:f0; op1val:0xc7fc000000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f0, f6, f17, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_22:
// rs1==f30, rs2==f20, rd==f12, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f30; op2:f20; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000000000; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f30, f20, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_23:
// rs1==f26, rs2==f9, rd==f25, fs1 == 1 and fe1 == 0x47f and fm1 == 0xe000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f26; op2:f9; dest:f25; op1val:0xc7fe000000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f25, f26, f9, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_24:
// rs1==f17, rs2==f29, rd==f7, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xe000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f17; op2:f29; dest:f7; op1val:0xffefffffffffffff; op2val:0xc7fe000000000000; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f7, f17, f29, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_25:
// rs1==f18, rs2==f2, rd==f22, fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffffffffff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f18; op2:f2; dest:f22; op1val:0xc7fdffffffffffff; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f22, f18, f2, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_26:
// rs1==f7, rs2==f24, rd==f3, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f7; op2:f24; dest:f3; op1val:0xffefffffffffffff; op2val:0xc7fdffffffffffff; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f3, f7, f24, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_27:
// rs1==f5, rs2==f23, rd==f20, fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000002 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f5; op2:f23; dest:f20; op1val:0xc7fc000000000002; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f20, f5, f23, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_28:
// rs1==f15, rs2==f12, rd==f11, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000002 and rm_val == 0  
// opcode: fmul.d ; op1:f15; op2:f12; dest:f11; op1val:0xffefffffffffffff; op2val:0xc7fc000000000002; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f11, f15, f12, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_29:
// rs1==f1, rs2==f3, rd==f10, fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffffffffe and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f1; op2:f3; dest:f10; op1val:0xc7fdfffffffffffe; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f10, f1, f3, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_30:
// rs1==f12, rs2==f21, rd==f15, fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f12; op2:f21; dest:f15; op1val:0xffefffffffffffff; op2val:0xc7fdfffffffffffe; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f15, f12, f21, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_31:
// rs1==f29, rs2==f10, rd==f4, fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000004 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f29; op2:f10; dest:f4; op1val:0xc7fc000000000004; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f4, f29, f10, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_32:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000004 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000000004; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_33:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffffffffc and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffffffffc; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_34:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffffffffc; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_35:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000008 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000000008; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_36:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000008 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000000008; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_37:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffffffff8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffffffff8; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_38:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffffffff8; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_39:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000010 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000000010; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_40:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000010 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000000010; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_41:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffffffff0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffffffff0; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_42:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffffffff0; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_43:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000020 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000000020; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_44:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000020 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000000020; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_45:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffffffffe0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffffffffe0; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_46:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffffffffe0; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_47:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000040 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000000040; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_48:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000040 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000000040; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_49:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffffffffc0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffffffffc0; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_50:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffffffffc0; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_51:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000080 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000000080; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_52:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000080 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000000080; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_53:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffffffff80 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffffffff80; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_54:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffffffff80; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_55:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000100 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000000100; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_56:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000100 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000000100; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_57:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffffffff00 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffffffff00; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_58:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffffffff00; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_59:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000200 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000000200; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_60:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000200 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000000200; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_61:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffffffe00 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffffffe00; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_62:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffffffe00; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_63:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000400 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000000400; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_64:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000400 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000000400; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_65:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffffffc00 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffffffc00; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_66:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffffffc00; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_67:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000000800 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000000800; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_68:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000000800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000000800; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_69:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffffff800 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffffff800; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_70:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffffff800; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_71:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000001000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000001000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_72:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000001000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000001000; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_73:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffffff000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffffff000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_74:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffffff000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_75:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000002000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000002000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_76:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000002000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000002000; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_77:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffffffe000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffffffe000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_78:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffffffe000; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_79:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000004000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000004000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_80:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000004000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000004000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_81:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffffffc000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffffffc000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_82:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffffffc000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_83:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000008000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000008000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_84:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000008000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000008000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_85:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffffff8000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffffff8000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_86:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffffff8000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_87:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000010000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000010000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_88:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000010000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000010000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_89:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffffff0000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffffff0000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_90:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffffff0000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_91:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000020000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000020000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_92:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000020000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000020000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_93:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffffe0000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffffe0000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_94:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffffe0000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_95:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000040000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000040000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_96:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000040000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000040000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_97:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffffc0000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffffc0000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_98:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffffc0000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_99:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000080000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000080000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_100:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000080000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000080000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_101:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffff80000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffff80000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_102:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffff80000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_103:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000100000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000100000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_104:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000100000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000100000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_105:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffff00000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffff00000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_106:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffff00000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_107:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000200000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000200000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_108:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000200000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000200000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_109:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffffe00000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffffe00000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_110:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffffe00000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_111:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000400000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000400000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_112:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000400000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000400000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_113:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffffc00000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffffc00000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_114:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffffc00000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_115:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000000800000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000000800000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_116:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000000800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000000800000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_117:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffff800000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffff800000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_118:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffff800000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_119:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000001000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000001000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_120:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000001000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000001000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_121:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffff000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffff000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_122:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffff000000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_123:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000002000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000002000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_124:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000002000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000002000000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_125:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffe000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffe000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_126:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffe000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000004000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000004000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_128:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000004000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000004000000; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_129:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffffc000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffffc000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_130:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffffc000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_131:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000008000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000008000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_132:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000008000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000008000000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_133:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffff8000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffff8000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_134:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffff8000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_135:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000010000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000010000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_136:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000010000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000010000000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_137:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffff0000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffff0000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_138:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffff0000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_139:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000020000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000020000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_140:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000020000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000020000000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_141:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffe0000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffe0000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_142:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffe0000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_143:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000040000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000040000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_144:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000040000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000040000000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_145:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffffc0000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffffc0000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_146:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffffc0000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_147:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000080000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000080000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_148:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000080000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000080000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_149:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffff80000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffff80000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_150:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffff80000000; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_151:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000100000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000100000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_152:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000100000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000100000000; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_153:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffff00000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffff00000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_154:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_155:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000200000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000200000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_156:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000200000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000200000000; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_157:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffe00000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffe00000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_158:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffe00000000; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_159:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000400000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000400000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_160:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000400000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000400000000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_161:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfffc00000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfffc00000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_162:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfffc00000000; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_163:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc000800000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc000800000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_164:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc000800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc000800000000; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_165:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfff800000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfff800000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_166:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfff800000000; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_167:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc001000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc001000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_168:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc001000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc001000000000; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_169:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfff000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfff000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_170:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfff000000000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_171:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc002000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc002000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_172:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc002000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc002000000000; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_173:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffe000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffe000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_174:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffe000000000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_175:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc004000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc004000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_176:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc004000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc004000000000; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_177:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdffc000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdffc000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_178:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdffc000000000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_179:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc008000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc008000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_180:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc008000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc008000000000; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_181:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdff8000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdff8000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_182:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdff8000000000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_183:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc010000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc010000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_184:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc010000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc010000000000; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_185:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdff0000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdff0000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_186:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdff0000000000; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_187:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc020000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc020000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_188:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc020000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc020000000000; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_189:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfe0000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfe0000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_190:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfe0000000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_191:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc040000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc040000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_192:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc040000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc040000000000; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_193:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdfc0000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdfc0000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_194:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdfc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdfc0000000000; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_195:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc080000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc080000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_196:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc080000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc080000000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_197:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdf80000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdf80000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_198:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdf80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdf80000000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_199:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc100000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc100000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_200:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc100000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc100000000000; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_201:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdf00000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdf00000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_202:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdf00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdf00000000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_203:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc200000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc200000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_204:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc200000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc200000000000; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_205:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xde00000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fde00000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_206:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xde00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fde00000000000; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_207:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc400000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc400000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_208:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc400000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc400000000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_209:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xdc00000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fdc00000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_210:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xdc00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fdc00000000000; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_211:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xc800000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fc800000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_212:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xc800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fc800000000000; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_213:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xd800000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fd800000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_214:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xd800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fd800000000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_215:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xd000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fd000000000000; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_216:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xd000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fd000000000000; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xd333333333333 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fd333333333333; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xd333333333333 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fd333333333333; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xccccccccccccc and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fccccccccccccc; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xccccccccccccc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fccccccccccccc; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xd6db6db6db6db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fd6db6db6db6db; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xd6db6db6db6db and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fd6db6db6db6db; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc924924924924 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc924924924924; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc924924924924 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc924924924924; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xd111111111111 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fd111111111111; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xd111111111111 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fd111111111111; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xceeeeeeeeeeee and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fceeeeeeeeeeee; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xceeeeeeeeeeee and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fceeeeeeeeeeee; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xd99999999999a and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fd99999999999a; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xd99999999999a and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fd99999999999a; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc666666666666 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc666666666666; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc666666666666 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc666666666666; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdb6db6db6db6e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdb6db6db6db6e; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdb6db6db6db6e and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdb6db6db6db6e; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xcdb6db6db6db6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fcdb6db6db6db6; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xcdb6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fcdb6db6db6db6; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xe000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fe000000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xe000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fe000000000000; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffffffffff and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffffffffff; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffffffffff; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000002 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000002; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000002 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000002; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffffffffe and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffffffffe; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffffffffe; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000004 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000004; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000004 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000004; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffffffffc and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffffffffc; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffffffffc; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000008 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000008; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000008 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000008; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffffffff8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffffffff8; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffffffff8; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000010 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000010; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000010 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000010; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffffffff0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffffffff0; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffffffff0; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000020 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000020; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000020 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000020; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffffffffe0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffffffffe0; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffffffffe0; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000040 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000040; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000040 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000040; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffffffffc0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffffffffc0; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffffffffc0; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000080 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000080; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000080 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000080; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffffffff80 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffffffff80; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffffffff80; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000100 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000100; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000100 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000100; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffffffff00 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffffffff00; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffffffff00; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000200 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000200; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000200 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000200; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffffffe00 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffffffe00; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_278:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffffffe00; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_279:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000400 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000400; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_280:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000400 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000400; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_281:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffffffc00 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffffffc00; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_282:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffffffc00; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_283:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000000800 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000000800; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_284:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000000800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000000800; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_285:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffffff800 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffffff800; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_286:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffffff800; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_287:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000001000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000001000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_288:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000001000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000001000; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_289:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffffff000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffffff000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_290:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffffff000; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_291:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000002000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000002000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_292:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000002000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000002000; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_293:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffffffe000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffffffe000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_294:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffffffe000; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_295:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000004000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000004000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_296:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000004000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000004000; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_297:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffffffc000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffffffc000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_298:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffffffc000; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_299:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000008000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000008000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_300:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000008000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000008000; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_301:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffffff8000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffffff8000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_302:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffffff8000; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_303:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000010000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000010000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_304:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000010000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000010000; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_305:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffffff0000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffffff0000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_306:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffffff0000; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_307:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000020000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000020000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_308:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000020000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000020000; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_309:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffffe0000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffffe0000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_310:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffffe0000; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_311:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000040000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000040000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_312:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000040000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000040000; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_313:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffffc0000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffffc0000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_314:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffffc0000; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_315:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000080000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000080000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_316:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000080000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000080000; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_317:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffff80000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffff80000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_318:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffff80000; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_319:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000100000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000100000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_320:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000100000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000100000; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_321:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffff00000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffff00000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_322:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffff00000; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_323:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000200000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000200000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_324:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000200000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000200000; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_325:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffffe00000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffffe00000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_326:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffffe00000; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_327:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000400000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000400000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_328:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000400000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000400000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_329:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffffc00000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffffc00000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_330:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffffc00000; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_331:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000000800000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000000800000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_332:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000000800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000000800000; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_333:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffff800000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffff800000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_334:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffff800000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_335:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000001000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000001000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_336:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000001000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000001000000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_337:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffff000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffff000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_338:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffff000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_339:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000002000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000002000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_340:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000002000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000002000000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_341:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffe000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffe000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_342:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffe000000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_343:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000004000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000004000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_344:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000004000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000004000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_345:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffffc000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffffc000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_346:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffffc000000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_347:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000008000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000008000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_348:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000008000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000008000000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_349:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffff8000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffff8000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_350:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffff8000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_351:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000010000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000010000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_352:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000010000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000010000000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_353:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffff0000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffff0000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_354:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffff0000000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_355:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000020000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000020000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_356:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000020000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000020000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_357:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffe0000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffe0000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_358:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffe0000000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_359:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000040000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000040000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_360:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000040000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000040000000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_361:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffffc0000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffffc0000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_362:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffffc0000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_363:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000080000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000080000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_364:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000080000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000080000000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_365:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffff80000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffff80000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_366:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffff80000000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_367:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000100000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000100000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_368:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000100000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000100000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_369:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffff00000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffff00000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_370:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffff00000000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_371:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000200000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000200000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_372:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000200000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000200000000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_373:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffe00000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffe00000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_374:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffe00000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_375:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000400000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000400000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_376:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000400000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000400000000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_377:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfffc00000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfffc00000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_378:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfffc00000000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_379:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc000800000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc000800000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_380:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc000800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc000800000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_4)

inst_381:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfff800000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfff800000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_382:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfff800000000; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_383:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc001000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc001000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_384:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc001000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc001000000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_385:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfff000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfff000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_386:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfff000000000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_387:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc002000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc002000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_388:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc002000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc002000000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_389:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffe000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffe000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_390:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffe000000000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_391:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc004000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc004000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_392:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc004000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc004000000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_393:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdffc000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdffc000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_394:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdffc000000000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_395:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc008000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc008000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_396:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc008000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc008000000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_397:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdff8000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdff8000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_398:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdff8000000000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_399:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc010000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc010000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_400:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc010000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc010000000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_401:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdff0000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdff0000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_402:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdff0000000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_403:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc020000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc020000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_404:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc020000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc020000000000; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_405:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfe0000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfe0000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_406:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfe0000000000; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_407:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc040000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc040000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_408:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc040000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc040000000000; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_409:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdfc0000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdfc0000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_410:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdfc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdfc0000000000; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_411:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc080000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc080000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_412:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc080000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc080000000000; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_413:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdf80000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdf80000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_414:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdf80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdf80000000000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_415:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc100000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc100000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_416:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc100000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc100000000000; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_417:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdf00000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdf00000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_418:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdf00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdf00000000000; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_419:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc200000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc200000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_420:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc200000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc200000000000; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_421:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xde00000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fde00000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_422:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xde00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fde00000000000; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_423:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc400000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc400000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_424:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc400000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc400000000000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_425:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xdc00000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fdc00000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_426:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xdc00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fdc00000000000; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_427:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xc800000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fc800000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_428:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xc800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fc800000000000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_429:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xd800000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fd800000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_430:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xd800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fd800000000000; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_431:
// fs1 == 0 and fe1 == 0x47f and fm1 == 0xd000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x47fd000000000000; op2val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_432:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x47f and fm2 == 0xd000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fefffffffffffff; op2val:0x47fd000000000000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_433:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x9999999999999 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e9999999999999; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_434:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x9999999999999 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e9999999999999; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_435:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x6666666666666 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e6666666666666; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_436:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x6666666666666 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e6666666666666; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_437:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xb6db6db6db6db and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7eb6db6db6db6db; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_438:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xb6db6db6db6db and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7eb6db6db6db6db; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_439:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x4924924924924 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e4924924924924; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_440:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x4924924924924 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e4924924924924; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_441:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x8888888888888 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e8888888888888; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_442:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x8888888888888 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e8888888888888; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_443:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x7777777777777 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e7777777777777; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_444:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x7777777777777 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e7777777777777; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_445:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xccccccccccccc and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7eccccccccccccc; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_446:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xccccccccccccc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7eccccccccccccc; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_447:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x3333333333333 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e3333333333333; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_448:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x3333333333333 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e3333333333333; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_449:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xdb6db6db6db6d and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7edb6db6db6db6d; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_450:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xdb6db6db6db6d and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7edb6db6db6db6d; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_451:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x6db6db6db6db6 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e6db6db6db6db6; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_452:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x6db6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e6db6db6db6db6; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_453:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000000000001; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_454:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000000000001; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_455:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffffffffe and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffffffffe; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_456:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffffffffe; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_457:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000000000003; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_458:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000000000003 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000000000003; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_459:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffffffffc and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffffffffc; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_460:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffffffffc; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_461:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000000000007 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000000000007; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_462:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000000000007 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000000000007; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_463:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffffffff8 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffffffff8; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_464:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffffffff8; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_465:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000000000000f; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_466:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000000000000f and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000000000000f; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_467:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffffffff0 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffffffff0; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_468:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffffffff0; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_469:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000000000001f and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000000000001f; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_470:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000000000001f and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000000000001f; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_471:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffffffffe0 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffffffffe0; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_472:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffffffffe0; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_473:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000000000003f; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_474:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000000000003f and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000000000003f; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_475:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffffffffc0 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffffffffc0; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_476:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffffffffc0; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_477:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_478:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000000000000; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_479:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000000000007f and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000000000007f; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_480:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000000000007f and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000000000007f; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_481:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffffffff80 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffffffff80; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_482:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffffffff80; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_483:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00000000000ff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00000000000ff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_484:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00000000000ff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00000000000ff; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_485:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffffffff00 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffffffff00; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_486:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffffffff00; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_487:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00000000001ff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00000000001ff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_488:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00000000001ff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00000000001ff; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_489:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffffffe00 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffffffe00; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_490:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffffffe00; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_491:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00000000003ff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00000000003ff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_492:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00000000003ff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00000000003ff; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_493:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffffffc00 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffffffc00; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_494:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffffffc00; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_495:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00000000007ff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00000000007ff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_496:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00000000007ff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00000000007ff; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_497:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffffff800 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffffff800; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_498:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffffff800; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_499:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000000000fff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000000000fff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_500:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000000000fff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000000000fff; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_501:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffffff000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffffff000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_502:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffffff000; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_503:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000000001fff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000000001fff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_504:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000000001fff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000000001fff; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_505:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffffffe000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffffffe000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_506:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffffffe000; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_507:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000000003fff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000000003fff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_5)

inst_508:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000000003fff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000000003fff; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_509:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffffffc000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffffffc000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_510:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffffffc000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_511:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000000007fff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000000007fff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_512:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000000007fff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000000007fff; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_513:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffffff8000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffffff8000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_514:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffffff8000; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_515:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000000000ffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000000000ffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_516:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000000000ffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000000000ffff; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_517:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffffff0000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffffff0000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_518:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffffff0000; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_519:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000000001ffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000000001ffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_520:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000000001ffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000000001ffff; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_521:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffffe0000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffffe0000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_522:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffffe0000; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_523:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000000003ffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000000003ffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_524:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000000003ffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000000003ffff; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_525:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffffc0000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffffc0000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_526:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffffc0000; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_527:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000000007ffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000000007ffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_528:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000000007ffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000000007ffff; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_529:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffff80000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffff80000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_530:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffff80000; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_531:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00000000fffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00000000fffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_532:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00000000fffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00000000fffff; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_533:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffff00000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffff00000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_534:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffff00000; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_535:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00000001fffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00000001fffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_536:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00000001fffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00000001fffff; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_537:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffffe00000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffffe00000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_538:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffffe00000; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_539:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00000003fffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00000003fffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_540:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00000003fffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00000003fffff; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_541:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffffc00000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffffc00000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_542:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffffc00000; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_543:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00000007fffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00000007fffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_544:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00000007fffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00000007fffff; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_545:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffff800000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffff800000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_546:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffff800000; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_547:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000000ffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000000ffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_548:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000000ffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000000ffffff; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_549:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffff000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffff000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_550:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffff000000; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_551:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000001ffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000001ffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_552:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000001ffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000001ffffff; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_553:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffe000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffe000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_554:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffe000000; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_555:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000003ffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000003ffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_556:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000003ffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000003ffffff; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_557:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffffc000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffffc000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_558:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffffc000000; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_559:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000007ffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000007ffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_560:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000007ffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000007ffffff; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_561:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffff8000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffff8000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_562:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffff8000000; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_563:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000000fffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000000fffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_564:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000000fffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000000fffffff; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_565:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffff0000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffff0000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_566:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffff0000000; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_567:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000001fffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000001fffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_568:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000001fffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000001fffffff; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_569:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffe0000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffe0000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_570:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffe0000000; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_571:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000003fffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000003fffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_572:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000003fffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000003fffffff; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_573:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffc0000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffc0000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_574:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffc0000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_575:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000007fffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000007fffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_576:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000007fffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000007fffffff; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_577:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffff80000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffff80000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_578:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffff80000000; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_579:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00000ffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00000ffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_580:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00000ffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00000ffffffff; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_581:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffff00000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffff00000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_582:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffff00000000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_583:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00001ffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00001ffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_584:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00001ffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00001ffffffff; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_585:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffe00000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffe00000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_586:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffe00000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_587:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00003ffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00003ffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_588:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00003ffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00003ffffffff; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_589:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffffc00000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effffc00000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_590:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effffc00000000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_591:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00007ffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00007ffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_592:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00007ffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00007ffffffff; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_593:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffff800000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effff800000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_594:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effff800000000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_595:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0000fffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0000fffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_596:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0000fffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0000fffffffff; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_597:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffff000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effff000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_598:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effff000000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_599:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0001fffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0001fffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_600:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0001fffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0001fffffffff; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_601:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffe000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffe000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_602:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffe000000000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_603:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0003fffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0003fffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_604:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0003fffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0003fffffffff; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_605:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffc000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffc000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_606:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffc000000000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_607:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0007fffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0007fffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_608:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0007fffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0007fffffffff; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_609:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfff8000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efff8000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_610:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efff8000000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_611:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x000ffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e000ffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_612:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x000ffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e000ffffffffff; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_613:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfff0000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efff0000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_614:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efff0000000000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_615:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x001ffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e001ffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_616:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x001ffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e001ffffffffff; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_617:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffe0000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effe0000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_618:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effe0000000000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_619:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x003ffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e003ffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_620:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x003ffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e003ffffffffff; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_621:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xffc0000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7effc0000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_622:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xffc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7effc0000000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_623:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x007ffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e007ffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_624:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x007ffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e007ffffffffff; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_625:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xff80000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7eff80000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_626:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xff80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7eff80000000000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_627:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x00fffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e00fffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_628:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x00fffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e00fffffffffff; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_629:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xff00000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7eff00000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_630:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xff00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7eff00000000000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_631:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x01fffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e01fffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_632:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x01fffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e01fffffffffff; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_633:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfe00000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efe00000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_634:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfe00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efe00000000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_6)

inst_635:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x03fffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e03fffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_636:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x03fffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e03fffffffffff; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_637:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfc00000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efc00000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_638:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfc00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efc00000000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_639:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x07fffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e07fffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_640:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x07fffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e07fffffffffff; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_641:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xf800000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7ef800000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_642:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xf800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7ef800000000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_643:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x0ffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e0ffffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_644:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x0ffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e0ffffffffffff; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_645:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xf000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7ef000000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_646:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xf000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7ef000000000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_647:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x1ffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e1ffffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_648:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x1ffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e1ffffffffffff; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_649:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xe000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7ee000000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_650:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xe000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7ee000000000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_651:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x3ffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e3ffffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_652:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x3ffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e3ffffffffffff; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_653:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xc000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7ec000000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_654:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xc000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7ec000000000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_655:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x7ffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e7ffffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_656:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x7ffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e7ffffffffffff; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_657:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7e8000000000000; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_658:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0x8000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7e8000000000000; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_659:
// fs1 == 1 and fe1 == 0x37e and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7efffffffffffff; op2val:0x8010000000000000; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_660:
// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37e and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8010000000000000; op2val:0xb7efffffffffffff; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_661:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x9999999999999 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e9999999999999; op2val:0x10000000000000; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_662:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x9999999999999 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e9999999999999; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_663:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x6666666666666 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e6666666666666; op2val:0x10000000000000; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_664:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x6666666666666 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e6666666666666; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_665:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xb6db6db6db6db and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37eb6db6db6db6db; op2val:0x10000000000000; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_666:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xb6db6db6db6db and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37eb6db6db6db6db; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_667:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x4924924924924 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e4924924924924; op2val:0x10000000000000; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_668:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x4924924924924 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e4924924924924; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_669:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x8888888888888 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e8888888888888; op2val:0x10000000000000; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_670:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x8888888888888 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e8888888888888; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_671:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x7777777777777 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e7777777777777; op2val:0x10000000000000; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_672:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x7777777777777 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e7777777777777; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_673:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xccccccccccccc and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37eccccccccccccc; op2val:0x10000000000000; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_674:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xccccccccccccc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37eccccccccccccc; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_675:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x3333333333333 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e3333333333333; op2val:0x10000000000000; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_676:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x3333333333333 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e3333333333333; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_677:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xdb6db6db6db6d and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37edb6db6db6db6d; op2val:0x10000000000000; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_678:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xdb6db6db6db6d and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37edb6db6db6db6d; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_679:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x6db6db6db6db6 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e6db6db6db6db6; op2val:0x10000000000000; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_680:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x6db6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e6db6db6db6db6; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_681:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000000000001; op2val:0x10000000000000; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_682:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000000000001; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_683:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffffffffe and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffffffffe; op2val:0x10000000000000; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_684:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffffffffe; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_685:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000000000003 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000000000003; op2val:0x10000000000000; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_686:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000000000003 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000000000003; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_687:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffffffffc and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffffffffc; op2val:0x10000000000000; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_688:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffffffffc; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_689:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000000000007; op2val:0x10000000000000; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_690:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000000000007 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000000000007; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_691:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffffffff8 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffffffff8; op2val:0x10000000000000; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_692:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffffffff8; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_693:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000000000000f and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000000000000f; op2val:0x10000000000000; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_694:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000000000000f and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000000000000f; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_695:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffffffff0 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffffffff0; op2val:0x10000000000000; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_696:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffffffff0; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_697:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000000000001f and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000000000001f; op2val:0x10000000000000; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_698:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000000000001f and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000000000001f; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_699:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffffffffe0 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffffffffe0; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_700:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffffffffe0; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_701:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000000000003f and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000000000003f; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_702:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000000000003f and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000000000003f; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_703:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffffffffc0 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffffffffc0; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_704:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffffffffc0; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_705:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_706:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000000000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_707:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000000000007f and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000000000007f; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_708:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000000000007f and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000000000007f; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_709:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffffffff80 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffffffff80; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_710:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffffffff80; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_711:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00000000000ff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00000000000ff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_712:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00000000000ff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00000000000ff; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_713:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffffffff00 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffffffff00; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_714:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffffffff00; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_715:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00000000001ff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00000000001ff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_716:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00000000001ff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00000000001ff; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_717:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffffffe00 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffffffe00; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_718:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffffffe00; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_719:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00000000003ff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00000000003ff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_720:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00000000003ff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00000000003ff; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_721:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffffffc00 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffffffc00; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_722:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffffffc00; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_723:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00000000007ff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00000000007ff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_724:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00000000007ff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00000000007ff; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_725:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffffff800 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffffff800; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_726:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffffff800; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_727:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000000000fff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000000000fff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_728:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000000000fff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000000000fff; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_729:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffffff000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffffff000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_730:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffffff000; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_731:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000000001fff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000000001fff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_732:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000000001fff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000000001fff; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_733:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffffffe000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffffffe000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_734:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffffffe000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_735:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000000003fff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000000003fff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_736:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000000003fff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000000003fff; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_737:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffffffc000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffffffc000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_738:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffffffc000; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_739:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000000007fff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000000007fff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_740:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000000007fff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000000007fff; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_741:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffffff8000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffffff8000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_742:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffffff8000; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_743:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000000000ffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000000000ffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_744:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000000000ffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000000000ffff; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_745:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffffff0000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffffff0000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_746:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffffff0000; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_747:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000000001ffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000000001ffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_748:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000000001ffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000000001ffff; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_749:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffffe0000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffffe0000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_750:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffffe0000; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_751:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000000003ffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000000003ffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_752:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000000003ffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000000003ffff; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_753:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffffc0000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffffc0000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_754:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffffc0000; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_755:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000000007ffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000000007ffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_756:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000000007ffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000000007ffff; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_757:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffff80000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffff80000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_758:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffff80000; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_759:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00000000fffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00000000fffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_760:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00000000fffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00000000fffff; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_761:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffff00000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffff00000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_7)

inst_762:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffff00000; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00000001fffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00000001fffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_764:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00000001fffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00000001fffff; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_765:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffffe00000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffffe00000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_766:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffffe00000; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_767:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00000003fffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00000003fffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_768:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00000003fffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00000003fffff; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_769:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffffc00000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffffc00000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_770:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffffc00000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_771:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00000007fffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00000007fffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_772:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00000007fffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00000007fffff; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_773:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffff800000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffff800000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_774:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffff800000; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_775:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000000ffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000000ffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_776:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000000ffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000000ffffff; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_777:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffff000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffff000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_778:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffff000000; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_779:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000001ffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000001ffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_780:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000001ffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000001ffffff; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_781:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffe000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffe000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_782:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffe000000; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_783:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000003ffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000003ffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_784:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000003ffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000003ffffff; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_785:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffffc000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffffc000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_786:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffffc000000; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_787:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000007ffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000007ffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_788:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000007ffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000007ffffff; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_789:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffff8000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffff8000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_790:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffff8000000; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_791:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000000fffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000000fffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_792:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000000fffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000000fffffff; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_793:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffff0000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffff0000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_794:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffff0000000; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_795:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000001fffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000001fffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_796:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000001fffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000001fffffff; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_797:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffe0000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffe0000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_798:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffe0000000; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_799:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000003fffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000003fffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_800:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000003fffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000003fffffff; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_801:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffc0000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffc0000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_802:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffc0000000; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_803:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000007fffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000007fffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_804:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000007fffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000007fffffff; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_805:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffff80000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffff80000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_806:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffff80000000; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_807:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00000ffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00000ffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_808:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00000ffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00000ffffffff; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_809:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffff00000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffff00000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_810:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffff00000000; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_811:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00001ffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00001ffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_812:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00001ffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00001ffffffff; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_813:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffe00000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffe00000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_814:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffe00000000; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_815:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00003ffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00003ffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_816:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00003ffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00003ffffffff; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_817:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffffc00000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effffc00000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_818:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effffc00000000; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_819:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00007ffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00007ffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_820:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00007ffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00007ffffffff; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_821:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffff800000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effff800000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_822:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effff800000000; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_823:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0000fffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0000fffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_824:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0000fffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0000fffffffff; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_825:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffff000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effff000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_826:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effff000000000; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_827:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0001fffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0001fffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_828:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0001fffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0001fffffffff; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_829:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffe000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffe000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_830:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffe000000000; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_831:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0003fffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0003fffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_832:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0003fffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0003fffffffff; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_833:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffc000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffc000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_834:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffc000000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_835:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0007fffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0007fffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_836:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0007fffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0007fffffffff; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_837:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfff8000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efff8000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_838:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efff8000000000; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_839:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x000ffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e000ffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_840:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x000ffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e000ffffffffff; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_841:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfff0000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efff0000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_842:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efff0000000000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_843:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x001ffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e001ffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_844:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x001ffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e001ffffffffff; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_845:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffe0000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effe0000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_846:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effe0000000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_847:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x003ffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e003ffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_848:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x003ffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e003ffffffffff; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_849:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xffc0000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37effc0000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_850:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xffc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37effc0000000000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_851:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x007ffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e007ffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_852:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x007ffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e007ffffffffff; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_853:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xff80000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37eff80000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_854:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xff80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37eff80000000000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_855:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x00fffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e00fffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_856:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x00fffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e00fffffffffff; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_857:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xff00000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37eff00000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_858:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xff00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37eff00000000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_859:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x01fffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e01fffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_860:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x01fffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e01fffffffffff; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_861:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfe00000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efe00000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_862:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfe00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efe00000000000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_863:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x03fffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e03fffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_864:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x03fffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e03fffffffffff; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_865:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfc00000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efc00000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_866:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfc00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efc00000000000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_867:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x07fffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e07fffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_868:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x07fffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e07fffffffffff; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_869:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xf800000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37ef800000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_870:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xf800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37ef800000000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_871:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x0ffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e0ffffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_872:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x0ffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e0ffffffffffff; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_873:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xf000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37ef000000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_874:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xf000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37ef000000000000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_875:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x1ffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e1ffffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_876:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x1ffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e1ffffffffffff; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_877:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xe000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37ee000000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_878:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xe000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37ee000000000000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_879:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x3ffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e3ffffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_880:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x3ffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e3ffffffffffff; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_881:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xc000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37ec000000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_882:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xc000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37ec000000000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_883:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x7ffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e7ffffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_884:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x7ffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e7ffffffffffff; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_885:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37e8000000000000; op2val:0x10000000000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_886:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0x8000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37e8000000000000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_887:
// fs1 == 0 and fe1 == 0x37e and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37efffffffffffff; op2val:0x10000000000000; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_888:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37e and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000000; op2val:0x37efffffffffffff; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_8)

inst_889:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x3333333333332 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d3333333333332; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_890:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0x3333333333332 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7d3333333333332; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_891:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0x9999999999998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7c9999999999998; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_892:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37c and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7c9999999999998; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_893:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x6db6db6db6db6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d6db6db6db6db6; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_894:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0x6db6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7d6db6db6db6db6; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_895:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0x2492492492490 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7c2492492492490; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_896:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37c and fm2 == 0x2492492492490 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7c2492492492490; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_897:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x1111111111110 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d1111111111110; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_898:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0x1111111111110 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7d1111111111110; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_899:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0xddddddddddddc and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7cddddddddddddc; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_900:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37c and fm2 == 0xddddddddddddc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7cddddddddddddc; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_901:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x9999999999998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d9999999999998; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_902:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7d9999999999998; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_903:
// fs1 == 1 and fe1 == 0x37b and fm1 == 0x9999999999998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7b9999999999998; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_904:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37b and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7b9999999999998; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_905:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xb6db6db6db6da and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7db6db6db6db6da; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_906:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xb6db6db6db6da and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7db6db6db6db6da; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_907:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0xb6db6db6db6d8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7cb6db6db6db6d8; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_908:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37c and fm2 == 0xb6db6db6db6d8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7cb6db6db6db6d8; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_909:
// fs1 == 1 and fe1 == 0x369 and fm1 == 0x6d601ad376ab9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb696d601ad376ab9; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_910:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x369 and fm2 == 0x6d601ad376ab9 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb696d601ad376ab9; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_911:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffffc and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffffc; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_912:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffffffffc; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_913:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffff8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffff8; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_914:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffffffff8; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_915:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffff0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffff0; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_916:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffffffff0; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_917:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffffe0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffffe0; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_918:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffffffffe0; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_919:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffffc0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffffc0; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_920:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffffffffc0; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_921:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffff80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffff80; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_922:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffffffff80; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_923:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffff00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffff00; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_924:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffffffff00; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_925:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffe00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffe00; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_926:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffffffe00; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_927:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffc00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffc00; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_928:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffffffc00; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_929:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffff800 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffff800; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_930:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffffff800; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_931:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffff000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffff000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_932:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffffff000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_933:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffe000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffe000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_934:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffffffe000; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_935:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffc000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffc000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_936:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffffffc000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_937:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffff8000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffff8000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_938:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffffff8000; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_939:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffff0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffff0000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_940:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffffff0000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_941:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffe0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffe0000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_942:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffffe0000; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_943:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffc0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffc0000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_944:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffffc0000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_945:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffff80000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffff80000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_946:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffff80000; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_947:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffff00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffff00000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_948:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffff00000; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_949:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffe00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffe00000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_950:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffffe00000; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_951:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffc00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffc00000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_952:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffffc00000; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_953:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffff800000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffff800000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_954:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffff800000; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_955:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffff000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffff000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_956:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffff000000; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_957:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffe000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffe000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_958:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffe000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_959:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffc000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffc000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_960:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffc000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_961:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffff8000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffff8000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_962:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffff8000000; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_963:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffff0000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffff0000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_964:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffff0000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_965:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffe0000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffe0000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_966:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffe0000000; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_967:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffc0000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffc0000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_968:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffffc0000000; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_969:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffff80000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffff80000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_970:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffff80000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_971:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffff00000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffff00000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_972:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffff00000000; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_973:
// fs1 == 1 and fe1 == 0x369 and fm1 == 0xfffffffe00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb69fffffffe00000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_974:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x369 and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb69fffffffe00000; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_975:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffe00000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffe00000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_976:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffe00000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_977:
// fs1 == 1 and fe1 == 0x36a and fm1 == 0xffffffff00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6affffffff00000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_978:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x36a and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb6affffffff00000; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_979:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffc00000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffc00000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_980:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffc00000000; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_981:
// fs1 == 1 and fe1 == 0x36b and fm1 == 0xffffffff80000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6bffffffff80000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_982:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x36b and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb6bffffffff80000; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_983:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffff800000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffff800000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_984:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffff800000000; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_985:
// fs1 == 1 and fe1 == 0x36c and fm1 == 0xffffffffc0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6cffffffffc0000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_986:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x36c and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb6cffffffffc0000; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_987:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffff000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffff000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_988:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffff000000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_989:
// fs1 == 1 and fe1 == 0x36d and fm1 == 0xffffffffe0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6dffffffffe0000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_990:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x36d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb6dffffffffe0000; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_991:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffe000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffe000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_992:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffe000000000; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_993:
// fs1 == 1 and fe1 == 0x36e and fm1 == 0xfffffffff0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6efffffffff0000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_994:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x36e and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb6efffffffff0000; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_995:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffc000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffc000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_996:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfffc000000000; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_997:
// fs1 == 1 and fe1 == 0x36f and fm1 == 0xfffffffff8000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6ffffffffff8000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_998:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x36f and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb6ffffffffff8000; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_999:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfff8000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfff8000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_1000:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfff8000000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_1001:
// fs1 == 1 and fe1 == 0x370 and fm1 == 0xfffffffffc000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb70fffffffffc000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_1002:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x370 and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb70fffffffffc000; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_1003:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfff0000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfff0000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_1004:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfff0000000000; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_1005:
// fs1 == 1 and fe1 == 0x371 and fm1 == 0xfffffffffe000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb71fffffffffe000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_1006:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x371 and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb71fffffffffe000; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_1007:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffe0000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffe0000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_1008:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffe0000000000; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_1009:
// fs1 == 1 and fe1 == 0x372 and fm1 == 0xffffffffff000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb72ffffffffff000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_1010:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x372 and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb72ffffffffff000; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_1011:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffc0000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffc0000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_1012:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffc0000000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_1013:
// fs1 == 1 and fe1 == 0x373 and fm1 == 0xffffffffff800 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb73ffffffffff800; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_1014:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x373 and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb73ffffffffff800; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_1015:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xff80000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dff80000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_9)

inst_1016:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xff80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dff80000000000; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1017:
// fs1 == 1 and fe1 == 0x374 and fm1 == 0xffffffffffc00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb74ffffffffffc00; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_1018:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x374 and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb74ffffffffffc00; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_1019:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xff00000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dff00000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_1020:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xff00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dff00000000000; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_1021:
// fs1 == 1 and fe1 == 0x375 and fm1 == 0xffffffffffe00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb75ffffffffffe00; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_1022:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x375 and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb75ffffffffffe00; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_1023:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfe00000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfe00000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_1024:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfe00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfe00000000000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_1025:
// fs1 == 1 and fe1 == 0x376 and fm1 == 0xfffffffffff00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb76fffffffffff00; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_1026:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x376 and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb76fffffffffff00; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_1027:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfc00000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfc00000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_1028:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfc00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dfc00000000000; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_1029:
// fs1 == 1 and fe1 == 0x377 and fm1 == 0xfffffffffff80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb77fffffffffff80; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_1030:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x377 and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb77fffffffffff80; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_1031:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xf800000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7df800000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1032:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xf800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7df800000000000; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_1033:
// fs1 == 1 and fe1 == 0x378 and fm1 == 0xfffffffffffc0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb78fffffffffffc0; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_1034:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x378 and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb78fffffffffffc0; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_1035:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xf000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7df000000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_1036:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xf000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7df000000000000; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_1037:
// fs1 == 1 and fe1 == 0x379 and fm1 == 0xfffffffffffe0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb79fffffffffffe0; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_1038:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x379 and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb79fffffffffffe0; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_1039:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xe000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7de000000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_1040:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xe000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7de000000000000; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_1041:
// fs1 == 1 and fe1 == 0x37a and fm1 == 0xffffffffffff0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7affffffffffff0; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_1042:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37a and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7affffffffffff0; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_1043:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xc000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dc000000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_1044:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xc000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dc000000000000; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_1045:
// fs1 == 1 and fe1 == 0x37b and fm1 == 0xffffffffffff8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7bffffffffffff8; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_1046:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37b and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7bffffffffffff8; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_1047:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d8000000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_1048:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0x8000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7d8000000000000; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_1049:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0xffffffffffffc and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7cffffffffffffc; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_1050:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37c and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7cffffffffffffc; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_1051:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d0000000000000; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_1052:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7d0000000000000; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_1053:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffffe and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffffe; op2val:0x800fffffffffffff; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_1054:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x800fffffffffffff; op2val:0xb7dffffffffffffe; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x3333333333332 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d3333333333332; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0x3333333333332 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37d3333333333332; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0x9999999999998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37c9999999999998; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37c and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37c9999999999998; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x6db6db6db6db6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d6db6db6db6db6; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0x6db6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37d6db6db6db6db6; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0x2492492492490 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37c2492492492490; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37c and fm2 == 0x2492492492490 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37c2492492492490; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x1111111111110 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d1111111111110; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0x1111111111110 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37d1111111111110; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0xddddddddddddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37cddddddddddddc; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37c and fm2 == 0xddddddddddddc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37cddddddddddddc; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x9999999999998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d9999999999998; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37d9999999999998; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x37b and fm1 == 0x9999999999998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37b9999999999998; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37b and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37b9999999999998; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xb6db6db6db6da and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37db6db6db6db6da; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xb6db6db6db6da and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37db6db6db6db6da; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0xb6db6db6db6d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37cb6db6db6db6d8; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37c and fm2 == 0xb6db6db6db6d8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37cb6db6db6db6d8; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x369 and fm1 == 0x6d601ad376ab9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3696d601ad376ab9; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x369 and fm2 == 0x6d601ad376ab9 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x3696d601ad376ab9; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffffc and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffffc; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffffffffc; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffff8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffff8; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffffffff8; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffff0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffff0; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffffffff0; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffffe0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffffe0; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffffffffe0; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffffc0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffffc0; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffffffffc0; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffff80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffff80; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffffffff80; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffff00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffff00; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffffffff00; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffe00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffe00; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffffffe00; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffc00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffc00; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffffffc00; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffff800 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffff800; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffffff800; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffff000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffff000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_1098:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffffff000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_1099:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffe000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffe000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_1100:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffffffe000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_1101:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffc000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffc000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_1102:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffffffc000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_1103:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffff8000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffff8000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_1104:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffffff8000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_1105:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffff0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffff0000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_1106:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffffff0000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_1107:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffe0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffe0000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_1108:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffffe0000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_1109:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffc0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffc0000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_1110:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffffc0000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_1111:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffff80000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffff80000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_1112:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffff80000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_1113:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffff00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffff00000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_1114:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffff00000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_1115:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffe00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffe00000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_1116:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffffe00000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_1117:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffc00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffc00000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_1118:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffffc00000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_1119:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffff800000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffff800000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_1120:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffff800000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_1121:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffff000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffff000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_1122:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffff000000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_1123:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffe000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffe000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_1124:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffe000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_1125:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffc000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffc000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_1126:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffc000000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_1127:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffff8000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffff8000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_1128:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffff8000000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_1129:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffff0000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffff0000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_1130:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffff0000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_1131:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffe0000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffe0000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_1132:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffe0000000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_1133:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffc0000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffc0000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_1134:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffffc0000000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_1135:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffff80000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffff80000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_1136:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffff80000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_1137:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffff00000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffff00000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_1138:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffff00000000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_1139:
// fs1 == 0 and fe1 == 0x369 and fm1 == 0xfffffffe00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x369fffffffe00000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_1140:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x369 and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x369fffffffe00000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_1141:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffe00000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffe00000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_1142:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffe00000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_10)

inst_1143:
// fs1 == 0 and fe1 == 0x36a and fm1 == 0xffffffff00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36affffffff00000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1144:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x36a and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x36affffffff00000; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_1145:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffc00000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffc00000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_1146:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffc00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_1147:
// fs1 == 0 and fe1 == 0x36b and fm1 == 0xffffffff80000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36bffffffff80000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_1148:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x36b and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x36bffffffff80000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_1149:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffff800000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffff800000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_1150:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffff800000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_1151:
// fs1 == 0 and fe1 == 0x36c and fm1 == 0xffffffffc0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36cffffffffc0000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_1152:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x36c and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x36cffffffffc0000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_1153:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffff000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffff000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_1154:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffff000000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_1155:
// fs1 == 0 and fe1 == 0x36d and fm1 == 0xffffffffe0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36dffffffffe0000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_1156:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x36d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x36dffffffffe0000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_1157:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffe000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffe000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_1158:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffe000000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1159:
// fs1 == 0 and fe1 == 0x36e and fm1 == 0xfffffffff0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36efffffffff0000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_1160:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x36e and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x36efffffffff0000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_1161:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffc000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffc000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_1162:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfffc000000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_1163:
// fs1 == 0 and fe1 == 0x36f and fm1 == 0xfffffffff8000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36ffffffffff8000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_1164:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x36f and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x36ffffffffff8000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_1165:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfff8000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfff8000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_1166:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfff8000000000; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_1167:
// fs1 == 0 and fe1 == 0x370 and fm1 == 0xfffffffffc000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x370fffffffffc000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_1168:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x370 and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x370fffffffffc000; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_1169:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfff0000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfff0000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_1170:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfff0000000000; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_1171:
// fs1 == 0 and fe1 == 0x371 and fm1 == 0xfffffffffe000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x371fffffffffe000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_1172:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x371 and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x371fffffffffe000; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_1173:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffe0000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffe0000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_1174:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffe0000000000; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_1175:
// fs1 == 0 and fe1 == 0x372 and fm1 == 0xffffffffff000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x372ffffffffff000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_1176:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x372 and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x372ffffffffff000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_1177:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffc0000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffc0000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_1178:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffc0000000000; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_1179:
// fs1 == 0 and fe1 == 0x373 and fm1 == 0xffffffffff800 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x373ffffffffff800; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_1180:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x373 and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x373ffffffffff800; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_1181:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xff80000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dff80000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_1182:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xff80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dff80000000000; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_1183:
// fs1 == 0 and fe1 == 0x374 and fm1 == 0xffffffffffc00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x374ffffffffffc00; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_1184:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x374 and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x374ffffffffffc00; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_1185:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xff00000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dff00000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_1186:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xff00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dff00000000000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_1187:
// fs1 == 0 and fe1 == 0x375 and fm1 == 0xffffffffffe00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x375ffffffffffe00; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_1188:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x375 and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x375ffffffffffe00; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_1189:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfe00000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfe00000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_1190:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfe00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfe00000000000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_1191:
// fs1 == 0 and fe1 == 0x376 and fm1 == 0xfffffffffff00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x376fffffffffff00; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_1192:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x376 and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x376fffffffffff00; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_1193:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfc00000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfc00000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_1194:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfc00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dfc00000000000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_1195:
// fs1 == 0 and fe1 == 0x377 and fm1 == 0xfffffffffff80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x377fffffffffff80; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_1196:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x377 and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x377fffffffffff80; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_1197:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xf800000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37df800000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_1198:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xf800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37df800000000000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_1199:
// fs1 == 0 and fe1 == 0x378 and fm1 == 0xfffffffffffc0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x378fffffffffffc0; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_1200:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x378 and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x378fffffffffffc0; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_1201:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xf000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37df000000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_1202:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xf000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37df000000000000; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_1203:
// fs1 == 0 and fe1 == 0x379 and fm1 == 0xfffffffffffe0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x379fffffffffffe0; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_1204:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x379 and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x379fffffffffffe0; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_1205:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xe000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37de000000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_1206:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xe000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37de000000000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_1207:
// fs1 == 0 and fe1 == 0x37a and fm1 == 0xffffffffffff0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37affffffffffff0; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_1208:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37a and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37affffffffffff0; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_1209:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xc000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dc000000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_1210:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xc000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dc000000000000; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_1211:
// fs1 == 0 and fe1 == 0x37b and fm1 == 0xffffffffffff8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37bffffffffffff8; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_1212:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37b and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37bffffffffffff8; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_1213:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d8000000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_1214:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0x8000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37d8000000000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_1215:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0xffffffffffffc and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37cffffffffffffc; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_1216:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37c and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37cffffffffffffc; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_1217:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d0000000000000; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_1218:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37d0000000000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_1219:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffffe and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffffe; op2val:0xfffffffffffff; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_1220:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xfffffffffffff; op2val:0x37dffffffffffffe; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_1221:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x3333333333332 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d3333333333332; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_1222:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x3333333333332 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7d3333333333332; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_1223:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0x9999999999998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7c9999999999998; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_1224:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37c and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7c9999999999998; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_1225:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x6db6db6db6db6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d6db6db6db6db6; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_1226:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x6db6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7d6db6db6db6db6; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_1227:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0x2492492492490 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7c2492492492490; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_1228:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37c and fm2 == 0x2492492492490 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7c2492492492490; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_1229:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x1111111111110 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d1111111111110; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_1230:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x1111111111110 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7d1111111111110; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_1231:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0xddddddddddddc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7cddddddddddddc; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_1232:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37c and fm2 == 0xddddddddddddc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7cddddddddddddc; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_1233:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x9999999999998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d9999999999998; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_1234:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7d9999999999998; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_1235:
// fs1 == 1 and fe1 == 0x37b and fm1 == 0x9999999999998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7b9999999999998; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_1236:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37b and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7b9999999999998; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_1237:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xb6db6db6db6da and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7db6db6db6db6da; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_1238:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xb6db6db6db6da and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7db6db6db6db6da; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_1239:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0xb6db6db6db6d8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7cb6db6db6db6d8; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_1240:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37c and fm2 == 0xb6db6db6db6d8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7cb6db6db6db6d8; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_1241:
// fs1 == 1 and fe1 == 0x369 and fm1 == 0x6d601ad376ab9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb696d601ad376ab9; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_1242:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x369 and fm2 == 0x6d601ad376ab9 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb696d601ad376ab9; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_1243:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffffc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffffc; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_1244:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffffffffc; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_1245:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffff8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffff8; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_1246:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffffffff8; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_1247:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffff0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffff0; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_1248:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffffffff0; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_1249:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffffe0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffffe0; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_1250:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffffffffe0; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_1251:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffffc0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffffc0; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_1252:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffffffffc0; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_1253:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffff80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffff80; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_1254:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffffffff80; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_1255:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffff00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffff00; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_1256:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffffffff00; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_1257:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffe00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffe00; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_1258:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffffffe00; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_1259:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffc00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffc00; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_1260:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffffffc00; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_1261:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffff800 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffff800; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_1262:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffffff800; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_1263:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffff000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffff000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_1264:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffffff000; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_1265:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffe000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffe000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_1266:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffffffe000; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_1267:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffc000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffc000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_1268:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffffffc000; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_1269:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffff8000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffff8000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_11)

inst_1270:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffffff8000; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1271:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffff0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffff0000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_1272:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffffff0000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_1273:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffe0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffe0000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_1274:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffffe0000; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_1275:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffc0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffc0000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_1276:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffffc0000; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_1277:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffff80000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffff80000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_1278:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffff80000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_1279:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffff00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffff00000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_1280:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffff00000; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_1281:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffe00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffe00000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_1282:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffffe00000; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_1283:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffc00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffc00000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_1284:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffffc00000; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_1285:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffff800000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffff800000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1286:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffff800000; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_1287:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffff000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffff000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_1288:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffff000000; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_1289:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffe000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffe000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_1290:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffe000000; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_1291:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffc000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffc000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_1292:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffc000000; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_1293:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffff8000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffff8000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_1294:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffff8000000; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_1295:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffff0000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffff0000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_1296:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffff0000000; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_1297:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffe0000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffe0000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_1298:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffe0000000; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_1299:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffc0000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffc0000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_1300:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffffc0000000; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_1301:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffff80000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffff80000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_1302:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffff80000000; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_1303:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffff00000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffff00000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_1304:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffff00000000; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_1305:
// fs1 == 1 and fe1 == 0x369 and fm1 == 0xfffffffe00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb69fffffffe00000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_1306:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x369 and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb69fffffffe00000; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_1307:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffe00000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffe00000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_1308:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffe00000000; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_1309:
// fs1 == 1 and fe1 == 0x36a and fm1 == 0xffffffff00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6affffffff00000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_1310:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x36a and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb6affffffff00000; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_1311:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffc00000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffc00000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_1312:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffc00000000; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_1313:
// fs1 == 1 and fe1 == 0x36b and fm1 == 0xffffffff80000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6bffffffff80000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_1314:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x36b and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb6bffffffff80000; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_1315:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffff800000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffff800000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_1316:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffff800000000; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_1317:
// fs1 == 1 and fe1 == 0x36c and fm1 == 0xffffffffc0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6cffffffffc0000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_1318:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x36c and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb6cffffffffc0000; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_1319:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffff000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffff000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_1320:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffff000000000; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_1321:
// fs1 == 1 and fe1 == 0x36d and fm1 == 0xffffffffe0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6dffffffffe0000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_1322:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x36d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb6dffffffffe0000; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_1323:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffe000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffe000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_1324:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffe000000000; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_1325:
// fs1 == 1 and fe1 == 0x36e and fm1 == 0xfffffffff0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6efffffffff0000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_1326:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x36e and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb6efffffffff0000; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_1327:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffc000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffc000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_1328:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfffc000000000; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_1329:
// fs1 == 1 and fe1 == 0x36f and fm1 == 0xfffffffff8000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6ffffffffff8000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_1330:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x36f and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb6ffffffffff8000; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_1331:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfff8000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfff8000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_1332:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfff8000000000; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_1333:
// fs1 == 1 and fe1 == 0x370 and fm1 == 0xfffffffffc000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb70fffffffffc000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_1334:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x370 and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb70fffffffffc000; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_1335:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfff0000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfff0000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_1336:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfff0000000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_1337:
// fs1 == 1 and fe1 == 0x371 and fm1 == 0xfffffffffe000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb71fffffffffe000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_1338:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x371 and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb71fffffffffe000; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_1339:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffe0000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffe0000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_1340:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffe0000000000; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_1341:
// fs1 == 1 and fe1 == 0x372 and fm1 == 0xffffffffff000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb72ffffffffff000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_1342:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x372 and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb72ffffffffff000; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_1343:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffc0000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffc0000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_1344:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffc0000000000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_1345:
// fs1 == 1 and fe1 == 0x373 and fm1 == 0xffffffffff800 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb73ffffffffff800; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_1346:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x373 and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb73ffffffffff800; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_1347:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xff80000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dff80000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_1348:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xff80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dff80000000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_1349:
// fs1 == 1 and fe1 == 0x374 and fm1 == 0xffffffffffc00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb74ffffffffffc00; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_1350:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x374 and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb74ffffffffffc00; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_1351:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xff00000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dff00000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_1352:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xff00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dff00000000000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_1353:
// fs1 == 1 and fe1 == 0x375 and fm1 == 0xffffffffffe00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb75ffffffffffe00; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_1354:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x375 and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb75ffffffffffe00; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_1355:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfe00000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfe00000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_1356:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfe00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfe00000000000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_1357:
// fs1 == 1 and fe1 == 0x376 and fm1 == 0xfffffffffff00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb76fffffffffff00; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_1358:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x376 and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb76fffffffffff00; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_1359:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfc00000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfc00000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_1360:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfc00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dfc00000000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_1361:
// fs1 == 1 and fe1 == 0x377 and fm1 == 0xfffffffffff80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb77fffffffffff80; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_1362:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x377 and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb77fffffffffff80; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_1363:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xf800000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7df800000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_1364:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xf800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7df800000000000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_1365:
// fs1 == 1 and fe1 == 0x378 and fm1 == 0xfffffffffffc0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb78fffffffffffc0; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_1366:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x378 and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb78fffffffffffc0; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_1367:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xf000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7df000000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_1368:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xf000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7df000000000000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_1369:
// fs1 == 1 and fe1 == 0x379 and fm1 == 0xfffffffffffe0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb79fffffffffffe0; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_1370:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x379 and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb79fffffffffffe0; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_1371:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xe000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7de000000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_1372:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xe000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7de000000000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_1373:
// fs1 == 1 and fe1 == 0x37a and fm1 == 0xffffffffffff0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7affffffffffff0; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_1374:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37a and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7affffffffffff0; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_1375:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xc000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dc000000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_1376:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xc000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dc000000000000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_1377:
// fs1 == 1 and fe1 == 0x37b and fm1 == 0xffffffffffff8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7bffffffffffff8; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_1378:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37b and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7bffffffffffff8; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_1379:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d8000000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_1380:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x8000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7d8000000000000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_1381:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0xffffffffffffc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7cffffffffffffc; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_1382:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37c and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7cffffffffffffc; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_1383:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d0000000000000; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_1384:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7d0000000000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_1385:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffffe and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffffe; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_1386:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000001; op2val:0xb7dffffffffffffe; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_1387:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x3333333333332 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d3333333333332; op2val:0x1; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_1388:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x3333333333332 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37d3333333333332; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_1389:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0x9999999999998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37c9999999999998; op2val:0x1; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_1390:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37c and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37c9999999999998; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_1391:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x6db6db6db6db6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d6db6db6db6db6; op2val:0x1; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_1392:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x6db6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37d6db6db6db6db6; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_1393:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0x2492492492490 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37c2492492492490; op2val:0x1; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_1394:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37c and fm2 == 0x2492492492490 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37c2492492492490; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_1395:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x1111111111110 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d1111111111110; op2val:0x1; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_1396:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x1111111111110 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37d1111111111110; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_12)

inst_1397:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0xddddddddddddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37cddddddddddddc; op2val:0x1; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1398:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37c and fm2 == 0xddddddddddddc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37cddddddddddddc; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_1399:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x9999999999998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d9999999999998; op2val:0x1; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_1400:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37d9999999999998; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_1401:
// fs1 == 0 and fe1 == 0x37b and fm1 == 0x9999999999998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37b9999999999998; op2val:0x1; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_1402:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37b and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37b9999999999998; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_1403:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xb6db6db6db6da and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37db6db6db6db6da; op2val:0x1; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_1404:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xb6db6db6db6da and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37db6db6db6db6da; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_1405:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0xb6db6db6db6d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37cb6db6db6db6d8; op2val:0x1; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_1406:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37c and fm2 == 0xb6db6db6db6d8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37cb6db6db6db6d8; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_1407:
// fs1 == 0 and fe1 == 0x369 and fm1 == 0x6d601ad376ab9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3696d601ad376ab9; op2val:0x1; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_1408:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x369 and fm2 == 0x6d601ad376ab9 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x3696d601ad376ab9; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_1409:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffffc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffffc; op2val:0x1; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_1410:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffffffffc; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_1411:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffff8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffff8; op2val:0x1; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_1412:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffffffff8; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1413:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffff0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffff0; op2val:0x1; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_1414:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffffffff0; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_1415:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffffe0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffffe0; op2val:0x1; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_1416:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffffffffe0; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_1417:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffffc0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffffc0; op2val:0x1; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_1418:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffffffffc0; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_1419:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffff80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffff80; op2val:0x1; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_1420:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffffffff80; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_1421:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffff00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffff00; op2val:0x1; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_1422:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffffffff00; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_1423:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffe00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffe00; op2val:0x1; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_1424:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffffffe00; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_1425:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffc00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffc00; op2val:0x1; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_1426:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffffffc00; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_1427:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffff800 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffff800; op2val:0x1; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_1428:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffffff800; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_1429:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffff000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffff000; op2val:0x1; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_1430:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffffff000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_1431:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffe000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffe000; op2val:0x1; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_1432:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffffffe000; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_1433:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffc000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffc000; op2val:0x1; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_1434:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffffffc000; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_1435:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffff8000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffff8000; op2val:0x1; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_1436:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffffff8000; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_1437:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffff0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffff0000; op2val:0x1; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_1438:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffffff0000; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_1439:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffe0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffe0000; op2val:0x1; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_1440:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffffe0000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_1441:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffc0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffc0000; op2val:0x1; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_1442:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffffc0000; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_1443:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffff80000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffff80000; op2val:0x1; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_1444:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffff80000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_1445:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffff00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffff00000; op2val:0x1; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_1446:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffff00000; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_1447:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffe00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffe00000; op2val:0x1; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_1448:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffffe00000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_1449:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffc00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffc00000; op2val:0x1; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_1450:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffffc00000; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_1451:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffff800000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffff800000; op2val:0x1; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_1452:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffff800000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_1453:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffff000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffff000000; op2val:0x1; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_1454:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffff000000; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_1455:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffe000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffe000000; op2val:0x1; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_1456:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffe000000; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_1457:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffc000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffc000000; op2val:0x1; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_1458:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffc000000; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_1459:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffff8000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffff8000000; op2val:0x1; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_1460:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffff8000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_1461:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffff0000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffff0000000; op2val:0x1; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_1462:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffff0000000; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_1463:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffe0000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffe0000000; op2val:0x1; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_1464:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffe0000000; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_1465:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffc0000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffc0000000; op2val:0x1; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_1466:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffffc0000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_1467:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffff80000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffff80000000; op2val:0x1; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_1468:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffff80000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_1469:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffff00000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffff00000000; op2val:0x1; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_1470:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffff00000000; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_1471:
// fs1 == 0 and fe1 == 0x369 and fm1 == 0xfffffffe00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x369fffffffe00000; op2val:0x1; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_1472:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x369 and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x369fffffffe00000; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_1473:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffe00000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffe00000000; op2val:0x1; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_1474:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffe00000000; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_1475:
// fs1 == 0 and fe1 == 0x36a and fm1 == 0xffffffff00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36affffffff00000; op2val:0x1; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_1476:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x36a and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x36affffffff00000; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_1477:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffc00000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffc00000000; op2val:0x1; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_1478:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffc00000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_1479:
// fs1 == 0 and fe1 == 0x36b and fm1 == 0xffffffff80000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36bffffffff80000; op2val:0x1; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_1480:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x36b and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x36bffffffff80000; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_1481:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffff800000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffff800000000; op2val:0x1; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_1482:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffff800000000; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_1483:
// fs1 == 0 and fe1 == 0x36c and fm1 == 0xffffffffc0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36cffffffffc0000; op2val:0x1; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_1484:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x36c and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x36cffffffffc0000; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_1485:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffff000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffff000000000; op2val:0x1; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_1486:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffff000000000; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_1487:
// fs1 == 0 and fe1 == 0x36d and fm1 == 0xffffffffe0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36dffffffffe0000; op2val:0x1; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_1488:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x36d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x36dffffffffe0000; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_1489:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffe000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffe000000000; op2val:0x1; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_1490:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffe000000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_1491:
// fs1 == 0 and fe1 == 0x36e and fm1 == 0xfffffffff0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36efffffffff0000; op2val:0x1; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_1492:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x36e and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x36efffffffff0000; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_1493:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffc000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffc000000000; op2val:0x1; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_1494:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfffc000000000; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_1495:
// fs1 == 0 and fe1 == 0x36f and fm1 == 0xfffffffff8000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36ffffffffff8000; op2val:0x1; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_1496:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x36f and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x36ffffffffff8000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_1497:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfff8000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfff8000000000; op2val:0x1; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_1498:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfff8000000000; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_1499:
// fs1 == 0 and fe1 == 0x370 and fm1 == 0xfffffffffc000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x370fffffffffc000; op2val:0x1; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_1500:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x370 and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x370fffffffffc000; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_1501:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfff0000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfff0000000000; op2val:0x1; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_1502:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfff0000000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_1503:
// fs1 == 0 and fe1 == 0x371 and fm1 == 0xfffffffffe000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x371fffffffffe000; op2val:0x1; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_1504:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x371 and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x371fffffffffe000; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_1505:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffe0000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffe0000000000; op2val:0x1; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_1506:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffe0000000000; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_1507:
// fs1 == 0 and fe1 == 0x372 and fm1 == 0xffffffffff000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x372ffffffffff000; op2val:0x1; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_1508:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x372 and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x372ffffffffff000; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_1509:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffc0000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffc0000000000; op2val:0x1; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_1510:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffc0000000000; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_1511:
// fs1 == 0 and fe1 == 0x373 and fm1 == 0xffffffffff800 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x373ffffffffff800; op2val:0x1; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_1512:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x373 and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x373ffffffffff800; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_1513:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xff80000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dff80000000000; op2val:0x1; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_1514:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xff80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dff80000000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_1515:
// fs1 == 0 and fe1 == 0x374 and fm1 == 0xffffffffffc00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x374ffffffffffc00; op2val:0x1; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_1516:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x374 and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x374ffffffffffc00; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_1517:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xff00000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dff00000000000; op2val:0x1; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_1518:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xff00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dff00000000000; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_1519:
// fs1 == 0 and fe1 == 0x375 and fm1 == 0xffffffffffe00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x375ffffffffffe00; op2val:0x1; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_1520:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x375 and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x375ffffffffffe00; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_1521:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfe00000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfe00000000000; op2val:0x1; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_1522:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfe00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfe00000000000; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_1523:
// fs1 == 0 and fe1 == 0x376 and fm1 == 0xfffffffffff00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x376fffffffffff00; op2val:0x1; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_13)

inst_1524:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x376 and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x376fffffffffff00; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1525:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfc00000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfc00000000000; op2val:0x1; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_1526:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfc00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dfc00000000000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_1527:
// fs1 == 0 and fe1 == 0x377 and fm1 == 0xfffffffffff80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x377fffffffffff80; op2val:0x1; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_1528:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x377 and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x377fffffffffff80; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_1529:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xf800000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37df800000000000; op2val:0x1; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_1530:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xf800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37df800000000000; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_1531:
// fs1 == 0 and fe1 == 0x378 and fm1 == 0xfffffffffffc0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x378fffffffffffc0; op2val:0x1; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_1532:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x378 and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x378fffffffffffc0; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_1533:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xf000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37df000000000000; op2val:0x1; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_1534:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xf000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37df000000000000; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_1535:
// fs1 == 0 and fe1 == 0x379 and fm1 == 0xfffffffffffe0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x379fffffffffffe0; op2val:0x1; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_1536:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x379 and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x379fffffffffffe0; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_1537:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xe000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37de000000000000; op2val:0x1; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_1538:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xe000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37de000000000000; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_1539:
// fs1 == 0 and fe1 == 0x37a and fm1 == 0xffffffffffff0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37affffffffffff0; op2val:0x1; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1540:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37a and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37affffffffffff0; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_1541:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xc000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dc000000000000; op2val:0x1; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_1542:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xc000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dc000000000000; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_1543:
// fs1 == 0 and fe1 == 0x37b and fm1 == 0xffffffffffff8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37bffffffffffff8; op2val:0x1; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_1544:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37b and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37bffffffffffff8; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_1545:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d8000000000000; op2val:0x1; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_1546:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x8000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37d8000000000000; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_1547:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0xffffffffffffc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37cffffffffffffc; op2val:0x1; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_1548:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37c and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37cffffffffffffc; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_1549:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d0000000000000; op2val:0x1; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_1550:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37d0000000000000; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_1551:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffffe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffffe; op2val:0x1; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_1552:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x37dffffffffffffe; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_1553:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1333333333333 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1333333333333; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_1554:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1333333333333 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1333333333333; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_1555:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0cccccccccccc and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0cccccccccccc; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_1556:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0cccccccccccc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0cccccccccccc; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_1557:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x16db6db6db6db and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff16db6db6db6db; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_1558:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x16db6db6db6db and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff16db6db6db6db; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_1559:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0924924924924 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0924924924924; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_1560:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0924924924924 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0924924924924; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_1561:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1111111111111 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1111111111111; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_1562:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1111111111111 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1111111111111; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_1563:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0eeeeeeeeeeee and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0eeeeeeeeeeee; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_1564:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0eeeeeeeeeeee and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0eeeeeeeeeeee; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_1565:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x199999999999a and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff199999999999a; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_1566:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x199999999999a and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff199999999999a; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_1567:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0666666666666 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0666666666666; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_1568:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0666666666666 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0666666666666; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_1569:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1b6db6db6db6e and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1b6db6db6db6e; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_1570:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1b6db6db6db6e and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1b6db6db6db6e; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_1571:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0db6db6db6db6 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0db6db6db6db6; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_1572:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0db6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0db6db6db6db6; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_1573:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_1574:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000000; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_1575:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x2000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff2000000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_1576:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff2000000000000; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_1577:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffffffffff and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffffffffff; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_1578:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffffffffff; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_1579:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000002; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_1580:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000002 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000002; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_1581:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffffffffe and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffffffffe; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_1582:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffffffffe; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_1583:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000004; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_1584:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000004 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000004; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_1585:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffffffffc and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffffffffc; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_1586:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffffffffc; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_1587:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000008 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000008; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_1588:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000008 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000008; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_1589:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffffffff8 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffffffff8; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_1590:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffffffff8; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_1591:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000010; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_1592:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000010 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000010; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_1593:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffffffff0 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffffffff0; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_1594:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffffffff0; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_1595:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000020 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000020; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_1596:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000020 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000020; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_1597:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffffffffe0 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffffffffe0; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_1598:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffffffffe0; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_1599:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000040; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_1600:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000040 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000040; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_1601:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffffffffc0 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffffffffc0; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_1602:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffffffffc0; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_1603:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000080 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000080; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_1604:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000080 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000080; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_1605:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffffffff80 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffffffff80; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_1606:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffffffff80; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_1607:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000100 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000100; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_1608:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000100 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000100; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_1609:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffffffff00 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffffffff00; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_1610:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffffffff00; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_1611:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000200 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000200; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_1612:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000200 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000200; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_1613:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffffffe00 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffffffe00; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_1614:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffffffe00; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_1615:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000400 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000400; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_1616:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000400 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000400; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_1617:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffffffc00 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffffffc00; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_1618:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffffffc00; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_1619:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000800 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000000800; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_1620:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000000800; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_1621:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffffff800 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffffff800; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_1622:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffffff800; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_1623:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000001000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000001000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_1624:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000001000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000001000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_1625:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffffff000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffffff000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_1626:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffffff000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_1627:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000002000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000002000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_1628:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000002000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000002000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_1629:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffffffe000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffffffe000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_1630:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffffffe000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_1631:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000004000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000004000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_1632:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000004000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000004000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_1633:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffffffc000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffffffc000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_1634:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffffffc000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_1635:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000008000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000008000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_1636:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000008000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000008000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_1637:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffffff8000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffffff8000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_1638:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffffff8000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_1639:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000010000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000010000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_1640:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000010000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000010000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_1641:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffffff0000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffffff0000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_1642:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffffff0000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_1643:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000020000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000020000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_1644:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000020000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000020000; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_1645:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffffe0000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffffe0000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_1646:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffffe0000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_1647:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000040000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000040000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_1648:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000040000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000040000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_1649:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffffc0000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffffc0000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_1650:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffffc0000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_14)

inst_1651:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000080000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000080000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1652:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000080000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000080000; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_1653:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffff80000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffff80000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_1654:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffff80000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_1655:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000100000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000100000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_1656:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000100000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000100000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_1657:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffff00000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffff00000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_1658:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffff00000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_1659:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000200000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000200000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_1660:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000200000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000200000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_1661:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffffe00000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffffe00000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_1662:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffffe00000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_1663:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000400000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000400000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_1664:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000400000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000400000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_1665:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffffc00000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffffc00000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_1666:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffffc00000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1667:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000800000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000000800000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_1668:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000000800000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_1669:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffff800000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffff800000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_1670:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffff800000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_1671:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000001000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000001000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_1672:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000001000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000001000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_1673:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffff000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffff000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_1674:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffff000000; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_1675:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000002000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000002000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_1676:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000002000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000002000000; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_1677:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffe000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffe000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_1678:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffe000000; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_1679:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000004000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000004000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_1680:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000004000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000004000000; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_1681:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffffc000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffffc000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_1682:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffffc000000; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_1683:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000008000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000008000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_1684:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000008000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000008000000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_1685:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffff8000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffff8000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_1686:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffff8000000; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_1687:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000010000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000010000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_1688:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000010000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000010000000; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_1689:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffff0000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffff0000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_1690:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffff0000000; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_1691:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000020000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000020000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_1692:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000020000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000020000000; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_1693:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffe0000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffe0000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_1694:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffe0000000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_1695:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000040000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000040000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_1696:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000040000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000040000000; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_1697:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffffc0000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffffc0000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_1698:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffffc0000000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_1699:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000080000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000080000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_1700:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000080000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000080000000; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_1701:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffff80000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffff80000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_1702:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffff80000000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_1703:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000100000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000100000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_1704:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000100000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000100000000; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_1705:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffff00000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffff00000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_1706:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffff00000000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_1707:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000200000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000200000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_1708:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000200000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000200000000; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_1709:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffe00000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffe00000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_1710:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffe00000000; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_1711:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000400000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000400000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_1712:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000400000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000400000000; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_1713:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fffc00000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fffc00000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_1714:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fffc00000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_1715:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000800000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0000800000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_1716:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0000800000000; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_1717:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fff800000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fff800000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_1718:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fff800000000; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_1719:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0001000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0001000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_1720:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0001000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0001000000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_1721:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fff000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fff000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_1722:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fff000000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_1723:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0002000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0002000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_1724:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0002000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0002000000000; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_1725:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffe000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffe000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_1726:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffe000000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_1727:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0004000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0004000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_1728:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0004000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0004000000000; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_1729:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ffc000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ffc000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_1730:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ffc000000000; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_1731:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0008000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0008000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_1732:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0008000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0008000000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_1733:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ff8000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ff8000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_1734:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ff8000000000; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_1735:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0010000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0010000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_1736:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0010000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0010000000000; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_1737:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1ff0000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1ff0000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_1738:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1ff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1ff0000000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_1739:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0020000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0020000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_1740:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0020000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0020000000000; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_1741:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fe0000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fe0000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_1742:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fe0000000000; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_1743:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0040000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0040000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_1744:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0040000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0040000000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_1745:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1fc0000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1fc0000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_1746:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1fc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1fc0000000000; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_1747:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0080000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0080000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_1748:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0080000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0080000000000; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_1749:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1f80000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1f80000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_1750:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1f80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1f80000000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_1751:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0100000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0100000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_1752:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0100000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0100000000000; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_1753:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1f00000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1f00000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_1754:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1f00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1f00000000000; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_1755:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0200000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0200000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_1756:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0200000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0200000000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_1757:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1e00000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1e00000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_1758:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1e00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1e00000000000; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_1759:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0400000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0400000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_1760:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0400000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0400000000000; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_1761:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1c00000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1c00000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_1762:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1c00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1c00000000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_1763:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0800000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff0800000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_1764:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff0800000000000; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_1765:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1800000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1800000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_1766:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1800000000000; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_1767:
// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbff1000000000000; op2val:0xbf80000000000000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_1768:
// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xbf80000000000000; op2val:0xbff1000000000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_1769:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xf333333333333 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fff333333333333; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_1770:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf333333333333 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fff333333333333; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_1771:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xecccccccccccc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffecccccccccccc; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_1772:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xecccccccccccc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffecccccccccccc; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_1773:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xf6db6db6db6db and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fff6db6db6db6db; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_1774:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf6db6db6db6db and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fff6db6db6db6db; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_1775:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe924924924924 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe924924924924; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_1776:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe924924924924 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe924924924924; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_1777:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xf111111111111 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fff111111111111; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_15)

inst_1778:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf111111111111 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fff111111111111; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1779:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xeeeeeeeeeeeee and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffeeeeeeeeeeeee; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_1780:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xeeeeeeeeeeeee and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffeeeeeeeeeeeee; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_1781:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xf99999999999a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fff99999999999a; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_1782:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf99999999999a and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fff99999999999a; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_1783:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe666666666666 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe666666666666; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_1784:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe666666666666 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe666666666666; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_1785:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfb6db6db6db6e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffb6db6db6db6e; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_1786:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfb6db6db6db6e and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffb6db6db6db6e; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_1787:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xedb6db6db6db6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffedb6db6db6db6; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_1788:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xedb6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffedb6db6db6db6; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_1789:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_1790:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000000; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_1791:
// fs1 == 0 and fe1 == 0x400 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x4000000000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_1792:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x4000000000000000; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_1793:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffffffffff; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1794:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffffffffff; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_1795:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000002 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000002; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_1796:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000002 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000002; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_1797:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffffffffe and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffffffffe; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_1798:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffffffffe; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_1799:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000004 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000004; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_1800:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000004 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000004; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_1801:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffffffffc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffffffffc; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_1802:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffffffffc; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_1803:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000008 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000008; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_1804:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000008 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000008; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_1805:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffffffff8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffffffff8; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_1806:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffffffff8; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_1807:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000010 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000010; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_1808:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000010 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000010; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_1809:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffffffff0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffffffff0; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_1810:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffffffff0; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_1811:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000020 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000020; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_1812:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000020 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000020; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_1813:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffffffffe0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffffffffe0; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_1814:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffffffffe0; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_1815:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000040 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000040; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_1816:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000040 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000040; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_1817:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffffffffc0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffffffffc0; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_1818:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffffffffc0; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_1819:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000080 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000080; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_1820:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000080 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000080; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_1821:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffffffff80 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffffffff80; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_1822:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffffffff80; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_1823:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000100 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000100; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_1824:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000100 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000100; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_1825:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffffffff00 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffffffff00; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_1826:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffffffff00; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_1827:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000200 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000200; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_1828:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000200 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000200; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_1829:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffffffe00 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffffffe00; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_1830:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffffffe00; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_1831:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000400 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000400; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_1832:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000400 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000400; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_1833:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffffffc00 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffffffc00; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_1834:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffffffc00; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_1835:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000000800 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000000800; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_1836:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000000800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000000800; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_1837:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffffff800 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffffff800; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_1838:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffffff800; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_1839:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000001000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000001000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_1840:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000001000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000001000; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_1841:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffffff000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffffff000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_1842:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffffff000; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_1843:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000002000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000002000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_1844:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000002000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000002000; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_1845:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffffffe000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffffffe000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_1846:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffffffe000; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_1847:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000004000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000004000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_1848:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000004000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000004000; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_1849:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffffffc000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffffffc000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_1850:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffffffc000; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_1851:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000008000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000008000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_1852:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000008000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000008000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_1853:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffffff8000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffffff8000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_1854:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffffff8000; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_1855:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000010000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000010000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_1856:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000010000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000010000; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_1857:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffffff0000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffffff0000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_1858:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffffff0000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_1859:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000020000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000020000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_1860:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000020000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000020000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_1861:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffffe0000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffffe0000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_1862:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffffe0000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_1863:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000040000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000040000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_1864:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000040000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000040000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_1865:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffffc0000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffffc0000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_1866:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffffc0000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_1867:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000080000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000080000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_1868:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000080000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000080000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_1869:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffff80000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffff80000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_1870:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffff80000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_1871:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000100000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000100000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_1872:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000100000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000100000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_1873:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffff00000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffff00000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_1874:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffff00000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_1875:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000200000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000200000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_1876:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000200000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000200000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_1877:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffffe00000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffffe00000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_1878:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffffe00000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_1879:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000400000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000400000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_1880:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000400000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000400000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_1881:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffffc00000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffffc00000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_1882:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffffc00000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_1883:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000000800000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000000800000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_1884:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000000800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000000800000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_1885:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffff800000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffff800000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_1886:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffff800000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_1887:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000001000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000001000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_1888:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000001000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000001000000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_1889:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffff000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffff000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_1890:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffff000000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_1891:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000002000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000002000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_1892:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000002000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000002000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_1893:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffe000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffe000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_1894:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffe000000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_1895:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000004000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000004000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_1896:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000004000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000004000000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_1897:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffffc000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffffc000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_1898:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffffc000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_1899:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000008000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000008000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_1900:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000008000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000008000000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_1901:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffff8000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffff8000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_1902:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffff8000000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_1903:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000010000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000010000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_1904:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000010000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000010000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_16)

inst_1905:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffff0000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffff0000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1906:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffff0000000; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_1907:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000020000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000020000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_1908:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000020000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000020000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_1909:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffe0000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffe0000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_1910:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffe0000000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_1911:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000040000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000040000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_1912:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000040000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000040000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_1913:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffffc0000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffffc0000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_1914:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffffc0000000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_1915:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000080000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000080000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_1916:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000080000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000080000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_1917:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffff80000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffff80000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_1918:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffff80000000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_1919:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000100000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000100000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_1920:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000100000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000100000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1921:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffff00000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffff00000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_1922:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffff00000000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_1923:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000200000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000200000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_1924:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000200000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000200000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_1925:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffe00000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffe00000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_1926:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffe00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_1927:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000400000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000400000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_1928:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000400000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000400000000; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_1929:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffffc00000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffffc00000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_1930:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffffc00000000; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_1931:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe000800000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe000800000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_1932:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe000800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe000800000000; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_1933:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffff800000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffff800000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_1934:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffff800000000; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_1935:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe001000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe001000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_1936:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe001000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe001000000000; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_1937:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffff000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffff000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_1938:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffff000000000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_1939:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe002000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe002000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_1940:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe002000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe002000000000; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_1941:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffe000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffe000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_1942:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffe000000000; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_1943:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe004000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe004000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_1944:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe004000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe004000000000; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_1945:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfffc000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffffc000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_1946:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffffc000000000; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_1947:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe008000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe008000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_1948:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe008000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe008000000000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_1949:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfff8000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffff8000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_1950:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffff8000000000; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_1951:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe010000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe010000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_1952:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe010000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe010000000000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_1953:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfff0000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffff0000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_1954:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffff0000000000; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_1955:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe020000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe020000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_1956:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe020000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe020000000000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_1957:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffe0000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffe0000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_1958:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffe0000000000; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_1959:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe040000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe040000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_1960:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe040000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe040000000000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_1961:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xffc0000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffffc0000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_1962:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffffc0000000000; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_1963:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe080000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe080000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_1964:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe080000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe080000000000; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_1965:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xff80000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffff80000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_1966:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xff80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffff80000000000; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_1967:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe100000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe100000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_1968:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe100000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe100000000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_1969:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xff00000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffff00000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_1970:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xff00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffff00000000000; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_1971:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe200000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe200000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_1972:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe200000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe200000000000; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_1973:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfe00000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffe00000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_1974:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfe00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffe00000000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_1975:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe400000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe400000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_1976:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe400000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe400000000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_1977:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xfc00000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fffc00000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_1978:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfc00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fffc00000000000; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_1979:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xe800000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ffe800000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_1980:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3ffe800000000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_1981:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xf800000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fff800000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_1982:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fff800000000000; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_1983:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xf000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3fff000000000000; op2val:0x3ff0000000000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_1984:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000000; op2val:0x3fff000000000000; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_1985:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x3333333333332 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d3333333333332; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_1986:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x3333333333332 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7d3333333333332; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_1987:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0x9999999999998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7c9999999999998; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_1988:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37c and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7c9999999999998; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_1989:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x6db6db6db6db6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d6db6db6db6db6; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_1990:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x6db6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7d6db6db6db6db6; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_1991:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0x2492492492490 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7c2492492492490; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_1992:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37c and fm2 == 0x2492492492490 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7c2492492492490; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_1993:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x1111111111110 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d1111111111110; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_1994:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x1111111111110 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7d1111111111110; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_1995:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0xddddddddddddc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7cddddddddddddc; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_1996:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37c and fm2 == 0xddddddddddddc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7cddddddddddddc; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_1997:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x9999999999998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d9999999999998; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_1998:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7d9999999999998; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_1999:
// fs1 == 1 and fe1 == 0x37b and fm1 == 0x9999999999998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7b9999999999998; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_2000:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37b and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7b9999999999998; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_2001:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xb6db6db6db6da and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7db6db6db6db6da; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_2002:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xb6db6db6db6da and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7db6db6db6db6da; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_2003:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0xb6db6db6db6d8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7cb6db6db6db6d8; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_2004:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37c and fm2 == 0xb6db6db6db6d8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7cb6db6db6db6d8; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_2005:
// fs1 == 1 and fe1 == 0x369 and fm1 == 0x6d601ad376ab9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb696d601ad376ab9; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_2006:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x369 and fm2 == 0x6d601ad376ab9 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb696d601ad376ab9; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_2007:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffffc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffffc; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_2008:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffffffffc; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_2009:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffff8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffff8; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_2010:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffffffff8; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_2011:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffff0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffff0; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_2012:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffffffff0; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_2013:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffffe0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffffe0; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_2014:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffffffffe0; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_2015:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffffc0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffffc0; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_2016:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffffffffc0; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_2017:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffff80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffff80; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_2018:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffffffff80; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_2019:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffff00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffff00; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_2020:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffffffff00; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_2021:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffe00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffe00; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_2022:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffffffe00; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_2023:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffc00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffc00; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_2024:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffffffc00; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_2025:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffff800 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffff800; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_2026:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffffff800; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_2027:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffff000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffff000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_2028:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffffff000; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_2029:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffe000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffe000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_2030:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffffffe000; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_2031:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffffc000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffffc000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_17)

inst_2032:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffffffc000; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_2033:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffff8000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffff8000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_2034:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffffff8000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_2035:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffff0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffff0000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_2036:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffffff0000; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_2037:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffe0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffe0000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_2038:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffffe0000; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_2039:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffc0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffc0000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_2040:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffffc0000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_2041:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffff80000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffff80000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_2042:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffff80000; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_2043:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffff00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffff00000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_2044:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffff00000; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_2045:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffe00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffe00000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_2046:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffffe00000; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_2047:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffffc00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffffc00000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_2048:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffffc00000; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_2049:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffff800000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffff800000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_2050:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffff800000; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_2051:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffff000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffff000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_2052:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffff000000; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_2053:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffe000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffe000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_2054:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffe000000; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_2055:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffc000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffc000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_2056:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffc000000; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_2057:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffff8000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffff8000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_2058:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffff8000000; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_2059:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffff0000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffff0000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_2060:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffff0000000; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_2061:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffe0000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffe0000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_2062:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffe0000000; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_2063:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffffc0000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffffc0000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_2064:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffffc0000000; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_2065:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffff80000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffff80000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_2066:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffff80000000; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_2067:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffff00000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffff00000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_2068:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffff00000000; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_2069:
// fs1 == 1 and fe1 == 0x369 and fm1 == 0xfffffffe00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb69fffffffe00000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_2070:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x369 and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb69fffffffe00000; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_2071:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffe00000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffe00000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_2072:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffe00000000; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_2073:
// fs1 == 1 and fe1 == 0x36a and fm1 == 0xffffffff00000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6affffffff00000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_2074:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x36a and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb6affffffff00000; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_2075:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffc00000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffc00000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_2076:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffc00000000; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_2077:
// fs1 == 1 and fe1 == 0x36b and fm1 == 0xffffffff80000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6bffffffff80000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_2078:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x36b and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb6bffffffff80000; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_2079:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffff800000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffff800000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_2080:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffff800000000; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_2081:
// fs1 == 1 and fe1 == 0x36c and fm1 == 0xffffffffc0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6cffffffffc0000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_2082:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x36c and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb6cffffffffc0000; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_2083:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffff000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffff000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_2084:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffff000000000; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_2085:
// fs1 == 1 and fe1 == 0x36d and fm1 == 0xffffffffe0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6dffffffffe0000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_2086:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x36d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb6dffffffffe0000; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_2087:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffe000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffe000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_2088:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffe000000000; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_2089:
// fs1 == 1 and fe1 == 0x36e and fm1 == 0xfffffffff0000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6efffffffff0000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_2090:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x36e and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb6efffffffff0000; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_2091:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfffc000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfffc000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_2092:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfffc000000000; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_2093:
// fs1 == 1 and fe1 == 0x36f and fm1 == 0xfffffffff8000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb6ffffffffff8000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_2094:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x36f and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb6ffffffffff8000; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_2095:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfff8000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfff8000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_2096:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfff8000000000; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_2097:
// fs1 == 1 and fe1 == 0x370 and fm1 == 0xfffffffffc000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb70fffffffffc000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_2098:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x370 and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb70fffffffffc000; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_2099:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfff0000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfff0000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_2100:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfff0000000000; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_2101:
// fs1 == 1 and fe1 == 0x371 and fm1 == 0xfffffffffe000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb71fffffffffe000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_2102:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x371 and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb71fffffffffe000; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_2103:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffe0000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffe0000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_2104:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffe0000000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_2105:
// fs1 == 1 and fe1 == 0x372 and fm1 == 0xffffffffff000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb72ffffffffff000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_2106:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x372 and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb72ffffffffff000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_2107:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffc0000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffc0000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_2108:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffc0000000000; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_2109:
// fs1 == 1 and fe1 == 0x373 and fm1 == 0xffffffffff800 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb73ffffffffff800; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_2110:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x373 and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb73ffffffffff800; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_2111:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xff80000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dff80000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_2112:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xff80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dff80000000000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_2113:
// fs1 == 1 and fe1 == 0x374 and fm1 == 0xffffffffffc00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb74ffffffffffc00; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_2114:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x374 and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb74ffffffffffc00; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_2115:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xff00000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dff00000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_2116:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xff00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dff00000000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_2117:
// fs1 == 1 and fe1 == 0x375 and fm1 == 0xffffffffffe00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb75ffffffffffe00; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_2118:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x375 and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb75ffffffffffe00; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_2119:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfe00000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfe00000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_2120:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfe00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfe00000000000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_2121:
// fs1 == 1 and fe1 == 0x376 and fm1 == 0xfffffffffff00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb76fffffffffff00; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_2122:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x376 and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb76fffffffffff00; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_2123:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xfc00000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dfc00000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_2124:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xfc00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dfc00000000000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_2125:
// fs1 == 1 and fe1 == 0x377 and fm1 == 0xfffffffffff80 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb77fffffffffff80; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_2126:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x377 and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb77fffffffffff80; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_2127:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xf800000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7df800000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_2128:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xf800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7df800000000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_2129:
// fs1 == 1 and fe1 == 0x378 and fm1 == 0xfffffffffffc0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb78fffffffffffc0; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_2130:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x378 and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb78fffffffffffc0; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_2131:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xf000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7df000000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_2132:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xf000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7df000000000000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_2133:
// fs1 == 1 and fe1 == 0x379 and fm1 == 0xfffffffffffe0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb79fffffffffffe0; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_2134:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x379 and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb79fffffffffffe0; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_2135:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xe000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7de000000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_2136:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xe000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7de000000000000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_2137:
// fs1 == 1 and fe1 == 0x37a and fm1 == 0xffffffffffff0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7affffffffffff0; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_2138:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37a and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7affffffffffff0; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_2139:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xc000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dc000000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_2140:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xc000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dc000000000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_2141:
// fs1 == 1 and fe1 == 0x37b and fm1 == 0xffffffffffff8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7bffffffffffff8; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_2142:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37b and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7bffffffffffff8; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_2143:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d8000000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_2144:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x8000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7d8000000000000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_2145:
// fs1 == 1 and fe1 == 0x37c and fm1 == 0xffffffffffffc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7cffffffffffffc; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_2146:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37c and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7cffffffffffffc; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_2147:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7d0000000000000; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_2148:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7d0000000000000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_2149:
// fs1 == 1 and fe1 == 0x37d and fm1 == 0xffffffffffffe and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xb7dffffffffffffe; op2val:0x8000000000000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_2150:
// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x37d and fm2 == 0xffffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x8000000000000000; op2val:0xb7dffffffffffffe; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_2151:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x3333333333332 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d3333333333332; op2val:0x0; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_2152:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x3333333333332 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37d3333333333332; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_2153:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0x9999999999998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37c9999999999998; op2val:0x0; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_2154:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37c and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37c9999999999998; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_2155:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x6db6db6db6db6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d6db6db6db6db6; op2val:0x0; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_2156:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x6db6db6db6db6 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37d6db6db6db6db6; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_2157:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0x2492492492490 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37c2492492492490; op2val:0x0; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_2158:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37c and fm2 == 0x2492492492490 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37c2492492492490; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_18)

inst_2159:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x1111111111110 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d1111111111110; op2val:0x0; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_2160:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x1111111111110 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37d1111111111110; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_2161:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0xddddddddddddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37cddddddddddddc; op2val:0x0; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_2162:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37c and fm2 == 0xddddddddddddc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37cddddddddddddc; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_2163:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x9999999999998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d9999999999998; op2val:0x0; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_2164:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37d9999999999998; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_2165:
// fs1 == 0 and fe1 == 0x37b and fm1 == 0x9999999999998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37b9999999999998; op2val:0x0; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_2166:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37b and fm2 == 0x9999999999998 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37b9999999999998; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_2167:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xb6db6db6db6da and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37db6db6db6db6da; op2val:0x0; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_2168:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xb6db6db6db6da and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37db6db6db6db6da; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_2169:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0xb6db6db6db6d8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37cb6db6db6db6d8; op2val:0x0; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_2170:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37c and fm2 == 0xb6db6db6db6d8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37cb6db6db6db6d8; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_2171:
// fs1 == 0 and fe1 == 0x369 and fm1 == 0x6d601ad376ab9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x3696d601ad376ab9; op2val:0x0; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_2172:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffffc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffffc; op2val:0x0; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_2173:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffffffffc; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_2174:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffff8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffff8; op2val:0x0; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_2175:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffffffff8; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_2176:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffff0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffff0; op2val:0x0; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_2177:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffffffff0; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_2178:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffffe0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffffe0; op2val:0x0; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_2179:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffffffffe0; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_2180:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffffc0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffffc0; op2val:0x0; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_2181:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffffffffc0; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_2182:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffff80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffff80; op2val:0x0; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_2183:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffffffff80; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_2184:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffff00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffff00; op2val:0x0; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_2185:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffffffff00; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_2186:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffe00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffe00; op2val:0x0; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_2187:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffffffe00; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_2188:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffc00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffc00; op2val:0x0; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_2189:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffffffc00; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_2190:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffff800 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffff800; op2val:0x0; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_2191:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffffff800; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_2192:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffff000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffff000; op2val:0x0; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_2193:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffffff000; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_2194:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffe000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffe000; op2val:0x0; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_2195:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffffffe000; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_2196:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffffc000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffffc000; op2val:0x0; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_2197:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffffffc000; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_2198:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffff8000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffff8000; op2val:0x0; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_2199:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffffff8000; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_2200:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffff0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffff0000; op2val:0x0; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_2201:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffffff0000; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_2202:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffe0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffe0000; op2val:0x0; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_2203:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffffe0000; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_2204:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffc0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffc0000; op2val:0x0; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_2205:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffffc0000; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_2206:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffff80000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffff80000; op2val:0x0; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_2207:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffff80000; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_2208:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffff00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffff00000; op2val:0x0; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_2209:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffff00000; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_2210:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffe00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffe00000; op2val:0x0; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_2211:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffffe00000; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_2212:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffffc00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffffc00000; op2val:0x0; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_2213:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffffc00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffffc00000; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_2214:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffff800000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffff800000; op2val:0x0; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_2215:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffff800000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffff800000; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_2216:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffff000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffff000000; op2val:0x0; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_2217:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffff000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffff000000; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_2218:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffe000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffe000000; op2val:0x0; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_2219:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffe000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffe000000; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_2220:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffc000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffc000000; op2val:0x0; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_2221:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffc000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffc000000; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_2222:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffff8000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffff8000000; op2val:0x0; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_2223:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffff8000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffff8000000; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_2224:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffff0000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffff0000000; op2val:0x0; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_2225:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffff0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffff0000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_2226:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffe0000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffe0000000; op2val:0x0; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_2227:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffe0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffe0000000; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_2228:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffffc0000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffffc0000000; op2val:0x0; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_2229:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffffc0000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffffc0000000; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_2230:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffff80000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffff80000000; op2val:0x0; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_2231:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffff80000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffff80000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_2232:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffff00000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffff00000000; op2val:0x0; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_2233:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffff00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffff00000000; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_2234:
// fs1 == 0 and fe1 == 0x369 and fm1 == 0xfffffffe00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x369fffffffe00000; op2val:0x0; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_2235:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x369 and fm2 == 0xfffffffe00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x369fffffffe00000; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_2236:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffe00000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffe00000000; op2val:0x0; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_2237:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffe00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffe00000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_2238:
// fs1 == 0 and fe1 == 0x36a and fm1 == 0xffffffff00000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36affffffff00000; op2val:0x0; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_2239:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x36a and fm2 == 0xffffffff00000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x36affffffff00000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_2240:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffc00000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffc00000000; op2val:0x0; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_2241:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffc00000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffc00000000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_2242:
// fs1 == 0 and fe1 == 0x36b and fm1 == 0xffffffff80000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36bffffffff80000; op2val:0x0; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_2243:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x36b and fm2 == 0xffffffff80000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x36bffffffff80000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_2244:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffff800000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffff800000000; op2val:0x0; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_2245:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffff800000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffff800000000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_2246:
// fs1 == 0 and fe1 == 0x36c and fm1 == 0xffffffffc0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36cffffffffc0000; op2val:0x0; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_2247:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x36c and fm2 == 0xffffffffc0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x36cffffffffc0000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_2248:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffff000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffff000000000; op2val:0x0; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_2249:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffff000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffff000000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_2250:
// fs1 == 0 and fe1 == 0x36d and fm1 == 0xffffffffe0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36dffffffffe0000; op2val:0x0; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_2251:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x36d and fm2 == 0xffffffffe0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x36dffffffffe0000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_2252:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffe000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffe000000000; op2val:0x0; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_2253:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffe000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffe000000000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_2254:
// fs1 == 0 and fe1 == 0x36e and fm1 == 0xfffffffff0000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36efffffffff0000; op2val:0x0; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_2255:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x36e and fm2 == 0xfffffffff0000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x36efffffffff0000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_2256:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfffc000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfffc000000000; op2val:0x0; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_2257:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfffc000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfffc000000000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_2258:
// fs1 == 0 and fe1 == 0x36f and fm1 == 0xfffffffff8000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x36ffffffffff8000; op2val:0x0; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_2259:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x36f and fm2 == 0xfffffffff8000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x36ffffffffff8000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_2260:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfff8000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfff8000000000; op2val:0x0; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_2261:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfff8000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfff8000000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_2262:
// fs1 == 0 and fe1 == 0x370 and fm1 == 0xfffffffffc000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x370fffffffffc000; op2val:0x0; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_2263:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x370 and fm2 == 0xfffffffffc000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x370fffffffffc000; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_2264:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfff0000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfff0000000000; op2val:0x0; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_2265:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfff0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfff0000000000; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_2266:
// fs1 == 0 and fe1 == 0x371 and fm1 == 0xfffffffffe000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x371fffffffffe000; op2val:0x0; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_2267:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x371 and fm2 == 0xfffffffffe000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x371fffffffffe000; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_2268:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffe0000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffe0000000000; op2val:0x0; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_2269:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffe0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffe0000000000; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_2270:
// fs1 == 0 and fe1 == 0x372 and fm1 == 0xffffffffff000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x372ffffffffff000; op2val:0x0; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_2271:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x372 and fm2 == 0xffffffffff000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x372ffffffffff000; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_2272:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffc0000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffc0000000000; op2val:0x0; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_2273:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffc0000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffc0000000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_2274:
// fs1 == 0 and fe1 == 0x373 and fm1 == 0xffffffffff800 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x373ffffffffff800; op2val:0x0; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_2275:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x373 and fm2 == 0xffffffffff800 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x373ffffffffff800; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_2276:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xff80000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dff80000000000; op2val:0x0; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_2277:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xff80000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dff80000000000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_2278:
// fs1 == 0 and fe1 == 0x374 and fm1 == 0xffffffffffc00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x374ffffffffffc00; op2val:0x0; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_2279:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x374 and fm2 == 0xffffffffffc00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x374ffffffffffc00; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_2280:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xff00000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dff00000000000; op2val:0x0; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_2281:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xff00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dff00000000000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_2282:
// fs1 == 0 and fe1 == 0x375 and fm1 == 0xffffffffffe00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x375ffffffffffe00; op2val:0x0; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_2283:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x375 and fm2 == 0xffffffffffe00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x375ffffffffffe00; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_2284:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfe00000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfe00000000000; op2val:0x0; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_2285:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfe00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfe00000000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_19)

inst_2286:
// fs1 == 0 and fe1 == 0x376 and fm1 == 0xfffffffffff00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x376fffffffffff00; op2val:0x0; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_2287:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x376 and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x376fffffffffff00; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_2288:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xfc00000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dfc00000000000; op2val:0x0; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_2289:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xfc00000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dfc00000000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_2290:
// fs1 == 0 and fe1 == 0x377 and fm1 == 0xfffffffffff80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x377fffffffffff80; op2val:0x0; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_2291:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x377 and fm2 == 0xfffffffffff80 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x377fffffffffff80; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_2292:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xf800000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37df800000000000; op2val:0x0; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_2293:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xf800000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37df800000000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_2294:
// fs1 == 0 and fe1 == 0x378 and fm1 == 0xfffffffffffc0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x378fffffffffffc0; op2val:0x0; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_2295:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x378 and fm2 == 0xfffffffffffc0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x378fffffffffffc0; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_2296:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xf000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37df000000000000; op2val:0x0; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_2297:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xf000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37df000000000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_2298:
// fs1 == 0 and fe1 == 0x379 and fm1 == 0xfffffffffffe0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x379fffffffffffe0; op2val:0x0; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_2299:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x379 and fm2 == 0xfffffffffffe0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x379fffffffffffe0; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_2300:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xe000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37de000000000000; op2val:0x0; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_2301:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xe000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37de000000000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_2302:
// fs1 == 0 and fe1 == 0x37a and fm1 == 0xffffffffffff0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37affffffffffff0; op2val:0x0; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_2303:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37a and fm2 == 0xffffffffffff0 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37affffffffffff0; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_2304:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xc000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dc000000000000; op2val:0x0; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_2305:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xc000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dc000000000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_2306:
// fs1 == 0 and fe1 == 0x37b and fm1 == 0xffffffffffff8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37bffffffffffff8; op2val:0x0; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_2307:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37b and fm2 == 0xffffffffffff8 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37bffffffffffff8; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_2308:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d8000000000000; op2val:0x0; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_2309:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x8000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37d8000000000000; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_2310:
// fs1 == 0 and fe1 == 0x37c and fm1 == 0xffffffffffffc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37cffffffffffffc; op2val:0x0; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_2311:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37c and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37cffffffffffffc; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_2312:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37d0000000000000; op2val:0x0; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_2313:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37d0000000000000; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_2314:
// fs1 == 0 and fe1 == 0x37d and fm1 == 0xffffffffffffe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x37dffffffffffffe; op2val:0x0; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_2315:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x37d and fm2 == 0xffffffffffffe and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0x0; op2val:0x37dffffffffffffe; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_2316:
// fs1 == 1 and fe1 == 0x47f and fm1 == 0xccccccccccccc and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xc7fccccccccccccc; op2val:0xffefffffffffffff; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_2317:
// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x47f and fm2 == 0xccccccccccccc and rm_val == 0  
// opcode: fmul.d ; op1:f10; op2:f11; dest:f12; op1val:0xffefffffffffffff; op2val:0xc7fccccccccccccc; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fmul.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x0
.dword 0x3696d601ad376ab9
.dword 0xc7fd333333333333
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fd333333333333
.dword 0xc7fccccccccccccc
.dword 0xc7fccccccccccccc
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fd6db6db6db6db
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fd6db6db6db6db
.dword 0xc7fc924924924924
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc924924924924
.dword 0xc7fd111111111111
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fd111111111111
.dword 0xc7fceeeeeeeeeeee
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fceeeeeeeeeeee
.dword 0xc7fd99999999999a
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fd99999999999a
.dword 0xc7fc666666666666
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc666666666666
.dword 0xc7fdb6db6db6db6e
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdb6db6db6db6e
.dword 0xc7fcdb6db6db6db6
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fcdb6db6db6db6
.dword 0xc7fc000000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000000
.dword 0xc7fe000000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fe000000000000
.dword 0xc7fdffffffffffff
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffffffffff
.dword 0xc7fc000000000002
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000002
.dword 0xc7fdfffffffffffe
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffffffffe
.dword 0xc7fc000000000004
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000004
.dword 0xc7fdfffffffffffc
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffffffffc
.dword 0xc7fc000000000008
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000008
.dword 0xc7fdfffffffffff8
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffffffff8
.dword 0xc7fc000000000010
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000010
.dword 0xc7fdfffffffffff0
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffffffff0
.dword 0xc7fc000000000020
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000020
.dword 0xc7fdffffffffffe0
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffffffffe0
.dword 0xc7fc000000000040
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000040
.dword 0xc7fdffffffffffc0
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffffffffc0
.dword 0xc7fc000000000080
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000080
.dword 0xc7fdffffffffff80
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffffffff80
.dword 0xc7fc000000000100
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000100
.dword 0xc7fdffffffffff00
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffffffff00
.dword 0xc7fc000000000200
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000200
.dword 0xc7fdfffffffffe00
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffffffe00
.dword 0xc7fc000000000400
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000400
.dword 0xc7fdfffffffffc00
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffffffc00
.dword 0xc7fc000000000800
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000000800
.dword 0xc7fdfffffffff800
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffffff800
.dword 0xc7fc000000001000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000001000
.dword 0xc7fdfffffffff000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffffff000
.dword 0xc7fc000000002000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000002000
.dword 0xc7fdffffffffe000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffffffe000
.dword 0xc7fc000000004000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000004000
.dword 0xc7fdffffffffc000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffffffc000
.dword 0xc7fc000000008000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000008000
.dword 0xc7fdffffffff8000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffffff8000
.dword 0xc7fc000000010000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000010000
.dword 0xc7fdffffffff0000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffffff0000
.dword 0xc7fc000000020000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000020000
.dword 0xc7fdfffffffe0000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffffe0000
.dword 0xc7fc000000040000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000040000
.dword 0xc7fdfffffffc0000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffffc0000
.dword 0xc7fc000000080000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000080000
.dword 0xc7fdfffffff80000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffff80000
.dword 0xc7fc000000100000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000100000
.dword 0xc7fdfffffff00000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffff00000
.dword 0xc7fc000000200000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000200000
.dword 0xc7fdffffffe00000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffffe00000
.dword 0xc7fc000000400000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000400000
.dword 0xc7fdffffffc00000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffffc00000
.dword 0xc7fc000000800000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000000800000
.dword 0xc7fdffffff800000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffff800000
.dword 0xc7fc000001000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000001000000
.dword 0xc7fdffffff000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffff000000
.dword 0xc7fc000002000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000002000000
.dword 0xc7fdfffffe000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffe000000
.dword 0xc7fc000004000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000004000000
.dword 0xc7fdfffffc000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffffc000000
.dword 0xc7fc000008000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000008000000
.dword 0xc7fdfffff8000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffff8000000
.dword 0xc7fc000010000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000010000000
.dword 0xc7fdfffff0000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffff0000000
.dword 0xc7fc000020000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000020000000
.dword 0xc7fdffffe0000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffe0000000
.dword 0xc7fc000040000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000040000000
.dword 0xc7fdffffc0000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffffc0000000
.dword 0xc7fc000080000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000080000000
.dword 0xc7fdffff80000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffff80000000
.dword 0xc7fc000100000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000100000000
.dword 0xc7fdffff00000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffff00000000
.dword 0xc7fc000200000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000200000000
.dword 0xc7fdfffe00000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffe00000000
.dword 0xc7fc000400000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000400000000
.dword 0xc7fdfffc00000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfffc00000000
.dword 0xc7fc000800000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc000800000000
.dword 0xc7fdfff800000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfff800000000
.dword 0xc7fc001000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc001000000000
.dword 0xc7fdfff000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfff000000000
.dword 0xc7fc002000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc002000000000
.dword 0xc7fdffe000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffe000000000
.dword 0xc7fc004000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc004000000000
.dword 0xc7fdffc000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdffc000000000
.dword 0xc7fc008000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc008000000000
.dword 0xc7fdff8000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdff8000000000
.dword 0xc7fc010000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc010000000000
.dword 0xc7fdff0000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdff0000000000
.dword 0xc7fc020000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc020000000000
.dword 0xc7fdfe0000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfe0000000000
.dword 0xc7fc040000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc040000000000
.dword 0xc7fdfc0000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdfc0000000000
.dword 0xc7fc080000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc080000000000
.dword 0xc7fdf80000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdf80000000000
.dword 0xc7fc100000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc100000000000
.dword 0xc7fdf00000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdf00000000000
.dword 0xc7fc200000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc200000000000
.dword 0xc7fde00000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fde00000000000
.dword 0xc7fc400000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc400000000000
.dword 0xc7fdc00000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fdc00000000000
.dword 0xc7fc800000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fc800000000000
.dword 0xc7fd800000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fd800000000000
.dword 0xc7fd000000000000
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fd000000000000
.dword 0x47fd333333333333
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fd333333333333
.dword 0x47fccccccccccccc
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fccccccccccccc
.dword 0x47fd6db6db6db6db
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fd6db6db6db6db
.dword 0x47fc924924924924
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc924924924924
.dword 0x47fd111111111111
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fd111111111111
.dword 0x47fceeeeeeeeeeee
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fceeeeeeeeeeee
.dword 0x47fd99999999999a
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fd99999999999a
.dword 0x47fc666666666666
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc666666666666
.dword 0x47fdb6db6db6db6e
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdb6db6db6db6e
.dword 0x47fcdb6db6db6db6
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fcdb6db6db6db6
.dword 0x47fc000000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000000
.dword 0x47fe000000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fe000000000000
.dword 0x47fdffffffffffff
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffffffffff
.dword 0x47fc000000000002
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000002
.dword 0x47fdfffffffffffe
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffffffffe
.dword 0x47fc000000000004
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000004
.dword 0x47fdfffffffffffc
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffffffffc
.dword 0x47fc000000000008
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000008
.dword 0x47fdfffffffffff8
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffffffff8
.dword 0x47fc000000000010
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000010
.dword 0x47fdfffffffffff0
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffffffff0
.dword 0x47fc000000000020
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000020
.dword 0x47fdffffffffffe0
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffffffffe0
.dword 0x47fc000000000040
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000040
.dword 0x47fdffffffffffc0
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffffffffc0
.dword 0x47fc000000000080
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000080
.dword 0x47fdffffffffff80
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffffffff80
.dword 0x47fc000000000100
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000100
.dword 0x47fdffffffffff00
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffffffff00
.dword 0x47fc000000000200
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000200
.dword 0x47fdfffffffffe00
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffffffe00
.dword 0x47fc000000000400
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000400
.dword 0x47fdfffffffffc00
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffffffc00
.dword 0x47fc000000000800
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000000800
.dword 0x47fdfffffffff800
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffffff800
.dword 0x47fc000000001000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000001000
.dword 0x47fdfffffffff000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffffff000
.dword 0x47fc000000002000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000002000
.dword 0x47fdffffffffe000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffffffe000
.dword 0x47fc000000004000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000004000
.dword 0x47fdffffffffc000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffffffc000
.dword 0x47fc000000008000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000008000
.dword 0x47fdffffffff8000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffffff8000
.dword 0x47fc000000010000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000010000
.dword 0x47fdffffffff0000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffffff0000
.dword 0x47fc000000020000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000020000
.dword 0x47fdfffffffe0000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffffe0000
.dword 0x47fc000000040000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000040000
.dword 0x47fdfffffffc0000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffffc0000
.dword 0x47fc000000080000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000080000
.dword 0x47fdfffffff80000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffff80000
.dword 0x47fc000000100000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000100000
.dword 0x47fdfffffff00000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffff00000
.dword 0x47fc000000200000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000200000
.dword 0x47fdffffffe00000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffffe00000
.dword 0x47fc000000400000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000400000
.dword 0x47fdffffffc00000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffffc00000
.dword 0x47fc000000800000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000000800000
.dword 0x47fdffffff800000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffff800000
.dword 0x47fc000001000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000001000000
.dword 0x47fdffffff000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffff000000
.dword 0x47fc000002000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000002000000
.dword 0x47fdfffffe000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffe000000
.dword 0x47fc000004000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000004000000
.dword 0x47fdfffffc000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffffc000000
.dword 0x47fc000008000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000008000000
.dword 0x47fdfffff8000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffff8000000
.dword 0x47fc000010000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000010000000
.dword 0x47fdfffff0000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffff0000000
.dword 0x47fc000020000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000020000000
.dword 0x47fdffffe0000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffe0000000
.dword 0x47fc000040000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000040000000
.dword 0x47fdffffc0000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffffc0000000
.dword 0x47fc000080000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000080000000
.dword 0x47fdffff80000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffff80000000
.dword 0x47fc000100000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000100000000
.dword 0x47fdffff00000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffff00000000
.dword 0x47fc000200000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000200000000
.dword 0x47fdfffe00000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffe00000000
.dword 0x47fc000400000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000400000000
.dword 0x47fdfffc00000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfffc00000000
.dword 0x47fc000800000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc000800000000
.dword 0x47fdfff800000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfff800000000
.dword 0x47fc001000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc001000000000
.dword 0x47fdfff000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfff000000000
.dword 0x47fc002000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc002000000000
.dword 0x47fdffe000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffe000000000
.dword 0x47fc004000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc004000000000
.dword 0x47fdffc000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdffc000000000
.dword 0x47fc008000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc008000000000
.dword 0x47fdff8000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdff8000000000
.dword 0x47fc010000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc010000000000
.dword 0x47fdff0000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdff0000000000
.dword 0x47fc020000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc020000000000
.dword 0x47fdfe0000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfe0000000000
.dword 0x47fc040000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc040000000000
.dword 0x47fdfc0000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdfc0000000000
.dword 0x47fc080000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc080000000000
.dword 0x47fdf80000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdf80000000000
.dword 0x47fc100000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc100000000000
.dword 0x47fdf00000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdf00000000000
.dword 0x47fc200000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc200000000000
.dword 0x47fde00000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fde00000000000
.dword 0x47fc400000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc400000000000
.dword 0x47fdc00000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fdc00000000000
.dword 0x47fc800000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fc800000000000
.dword 0x47fd800000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fd800000000000
.dword 0x47fd000000000000
.dword 0x7fefffffffffffff
.dword 0x7fefffffffffffff
.dword 0x47fd000000000000
.dword 0xb7e9999999999999
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e9999999999999
.dword 0xb7e6666666666666
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e6666666666666
.dword 0xb7eb6db6db6db6db
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7eb6db6db6db6db
.dword 0xb7e4924924924924
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e4924924924924
.dword 0xb7e8888888888888
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e8888888888888
.dword 0xb7e7777777777777
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e7777777777777
.dword 0xb7eccccccccccccc
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7eccccccccccccc
.dword 0xb7e3333333333333
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e3333333333333
.dword 0xb7edb6db6db6db6d
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7edb6db6db6db6d
.dword 0xb7e6db6db6db6db6
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e6db6db6db6db6
.dword 0xb7e0000000000001
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000000000001
.dword 0xb7effffffffffffe
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffffffffe
.dword 0xb7e0000000000003
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000000000003
.dword 0xb7effffffffffffc
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffffffffc
.dword 0xb7e0000000000007
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000000000007
.dword 0xb7effffffffffff8
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffffffff8
.dword 0xb7e000000000000f
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000000000000f
.dword 0xb7effffffffffff0
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffffffff0
.dword 0xb7e000000000001f
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000000000001f
.dword 0xb7efffffffffffe0
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffffffffe0
.dword 0xb7e000000000003f
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000000000003f
.dword 0xb7efffffffffffc0
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffffffffc0
.dword 0xb7e0000000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000000000000
.dword 0xb7e000000000007f
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000000000007f
.dword 0xb7efffffffffff80
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffffffff80
.dword 0xb7e00000000000ff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00000000000ff
.dword 0xb7efffffffffff00
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffffffff00
.dword 0xb7e00000000001ff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00000000001ff
.dword 0xb7effffffffffe00
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffffffe00
.dword 0xb7e00000000003ff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00000000003ff
.dword 0xb7effffffffffc00
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffffffc00
.dword 0xb7e00000000007ff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00000000007ff
.dword 0xb7effffffffff800
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffffff800
.dword 0xb7e0000000000fff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000000000fff
.dword 0xb7effffffffff000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffffff000
.dword 0xb7e0000000001fff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000000001fff
.dword 0xb7efffffffffe000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffffffe000
.dword 0xb7e0000000003fff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000000003fff
.dword 0xb7efffffffffc000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffffffc000
.dword 0xb7e0000000007fff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000000007fff
.dword 0xb7efffffffff8000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffffff8000
.dword 0xb7e000000000ffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000000000ffff
.dword 0xb7efffffffff0000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffffff0000
.dword 0xb7e000000001ffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000000001ffff
.dword 0xb7effffffffe0000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffffe0000
.dword 0xb7e000000003ffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000000003ffff
.dword 0xb7effffffffc0000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffffc0000
.dword 0xb7e000000007ffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000000007ffff
.dword 0xb7effffffff80000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffff80000
.dword 0xb7e00000000fffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00000000fffff
.dword 0xb7effffffff00000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffff00000
.dword 0xb7e00000001fffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00000001fffff
.dword 0xb7efffffffe00000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffffe00000
.dword 0xb7e00000003fffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00000003fffff
.dword 0xb7efffffffc00000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffffc00000
.dword 0xb7e00000007fffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00000007fffff
.dword 0xb7efffffff800000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffff800000
.dword 0xb7e0000000ffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000000ffffff
.dword 0xb7efffffff000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffff000000
.dword 0xb7e0000001ffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000001ffffff
.dword 0xb7effffffe000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffe000000
.dword 0xb7e0000003ffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000003ffffff
.dword 0xb7effffffc000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffffc000000
.dword 0xb7e0000007ffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000007ffffff
.dword 0xb7effffff8000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffff8000000
.dword 0xb7e000000fffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000000fffffff
.dword 0xb7effffff0000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffff0000000
.dword 0xb7e000001fffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000001fffffff
.dword 0xb7efffffe0000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffe0000000
.dword 0xb7e000003fffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000003fffffff
.dword 0xb7efffffc0000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffc0000000
.dword 0xb7e000007fffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000007fffffff
.dword 0xb7efffff80000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffff80000000
.dword 0xb7e00000ffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00000ffffffff
.dword 0xb7efffff00000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffff00000000
.dword 0xb7e00001ffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00001ffffffff
.dword 0xb7effffe00000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffe00000000
.dword 0xb7e00003ffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00003ffffffff
.dword 0xb7effffc00000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effffc00000000
.dword 0xb7e00007ffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00007ffffffff
.dword 0xb7effff800000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effff800000000
.dword 0xb7e0000fffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0000fffffffff
.dword 0xb7effff000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effff000000000
.dword 0xb7e0001fffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0001fffffffff
.dword 0xb7efffe000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffe000000000
.dword 0xb7e0003fffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0003fffffffff
.dword 0xb7efffc000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffc000000000
.dword 0xb7e0007fffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0007fffffffff
.dword 0xb7efff8000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efff8000000000
.dword 0xb7e000ffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e000ffffffffff
.dword 0xb7efff0000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efff0000000000
.dword 0xb7e001ffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e001ffffffffff
.dword 0xb7effe0000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effe0000000000
.dword 0xb7e003ffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e003ffffffffff
.dword 0xb7effc0000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7effc0000000000
.dword 0xb7e007ffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e007ffffffffff
.dword 0xb7eff80000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7eff80000000000
.dword 0xb7e00fffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e00fffffffffff
.dword 0xb7eff00000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7eff00000000000
.dword 0xb7e01fffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e01fffffffffff
.dword 0xb7efe00000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efe00000000000
.dword 0xb7e03fffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e03fffffffffff
.dword 0xb7efc00000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efc00000000000
.dword 0xb7e07fffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e07fffffffffff
.dword 0xb7ef800000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7ef800000000000
.dword 0xb7e0ffffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e0ffffffffffff
.dword 0xb7ef000000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7ef000000000000
.dword 0xb7e1ffffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e1ffffffffffff
.dword 0xb7ee000000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7ee000000000000
.dword 0xb7e3ffffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e3ffffffffffff
.dword 0xb7ec000000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7ec000000000000
.dword 0xb7e7ffffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e7ffffffffffff
.dword 0xb7e8000000000000
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7e8000000000000
.dword 0xb7efffffffffffff
.dword 0x8010000000000000
.dword 0x8010000000000000
.dword 0xb7efffffffffffff
.dword 0x37e9999999999999
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e9999999999999
.dword 0x37e6666666666666
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e6666666666666
.dword 0x37eb6db6db6db6db
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37eb6db6db6db6db
.dword 0x37e4924924924924
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e4924924924924
.dword 0x37e8888888888888
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e8888888888888
.dword 0x37e7777777777777
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e7777777777777
.dword 0x37eccccccccccccc
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37eccccccccccccc
.dword 0x37e3333333333333
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e3333333333333
.dword 0x37edb6db6db6db6d
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37edb6db6db6db6d
.dword 0x37e6db6db6db6db6
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e6db6db6db6db6
.dword 0x37e0000000000001
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000000000001
.dword 0x37effffffffffffe
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffffffffe
.dword 0x37e0000000000003
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000000000003
.dword 0x37effffffffffffc
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffffffffc
.dword 0x37e0000000000007
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000000000007
.dword 0x37effffffffffff8
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffffffff8
.dword 0x37e000000000000f
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000000000000f
.dword 0x37effffffffffff0
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffffffff0
.dword 0x37e000000000001f
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000000000001f
.dword 0x37efffffffffffe0
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffffffffe0
.dword 0x37e000000000003f
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000000000003f
.dword 0x37efffffffffffc0
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffffffffc0
.dword 0x37e0000000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000000000000
.dword 0x37e000000000007f
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000000000007f
.dword 0x37efffffffffff80
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffffffff80
.dword 0x37e00000000000ff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00000000000ff
.dword 0x37efffffffffff00
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffffffff00
.dword 0x37e00000000001ff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00000000001ff
.dword 0x37effffffffffe00
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffffffe00
.dword 0x37e00000000003ff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00000000003ff
.dword 0x37effffffffffc00
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffffffc00
.dword 0x37e00000000007ff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00000000007ff
.dword 0x37effffffffff800
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffffff800
.dword 0x37e0000000000fff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000000000fff
.dword 0x37effffffffff000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffffff000
.dword 0x37e0000000001fff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000000001fff
.dword 0x37efffffffffe000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffffffe000
.dword 0x37e0000000003fff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000000003fff
.dword 0x37efffffffffc000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffffffc000
.dword 0x37e0000000007fff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000000007fff
.dword 0x37efffffffff8000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffffff8000
.dword 0x37e000000000ffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000000000ffff
.dword 0x37efffffffff0000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffffff0000
.dword 0x37e000000001ffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000000001ffff
.dword 0x37effffffffe0000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffffe0000
.dword 0x37e000000003ffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000000003ffff
.dword 0x37effffffffc0000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffffc0000
.dword 0x37e000000007ffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000000007ffff
.dword 0x37effffffff80000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffff80000
.dword 0x37e00000000fffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00000000fffff
.dword 0x37effffffff00000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffff00000
.dword 0x37e00000001fffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00000001fffff
.dword 0x37efffffffe00000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffffe00000
.dword 0x37e00000003fffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00000003fffff
.dword 0x37efffffffc00000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffffc00000
.dword 0x37e00000007fffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00000007fffff
.dword 0x37efffffff800000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffff800000
.dword 0x37e0000000ffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000000ffffff
.dword 0x37efffffff000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffff000000
.dword 0x37e0000001ffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000001ffffff
.dword 0x37effffffe000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffe000000
.dword 0x37e0000003ffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000003ffffff
.dword 0x37effffffc000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffffc000000
.dword 0x37e0000007ffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000007ffffff
.dword 0x37effffff8000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffff8000000
.dword 0x37e000000fffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000000fffffff
.dword 0x37effffff0000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffff0000000
.dword 0x37e000001fffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000001fffffff
.dword 0x37efffffe0000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffe0000000
.dword 0x37e000003fffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000003fffffff
.dword 0x37efffffc0000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffc0000000
.dword 0x37e000007fffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000007fffffff
.dword 0x37efffff80000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffff80000000
.dword 0x37e00000ffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00000ffffffff
.dword 0x37efffff00000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffff00000000
.dword 0x37e00001ffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00001ffffffff
.dword 0x37effffe00000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffe00000000
.dword 0x37e00003ffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00003ffffffff
.dword 0x37effffc00000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effffc00000000
.dword 0x37e00007ffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00007ffffffff
.dword 0x37effff800000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effff800000000
.dword 0x37e0000fffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0000fffffffff
.dword 0x37effff000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effff000000000
.dword 0x37e0001fffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0001fffffffff
.dword 0x37efffe000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffe000000000
.dword 0x37e0003fffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0003fffffffff
.dword 0x37efffc000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffc000000000
.dword 0x37e0007fffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0007fffffffff
.dword 0x37efff8000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efff8000000000
.dword 0x37e000ffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e000ffffffffff
.dword 0x37efff0000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efff0000000000
.dword 0x37e001ffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e001ffffffffff
.dword 0x37effe0000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effe0000000000
.dword 0x37e003ffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e003ffffffffff
.dword 0x37effc0000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37effc0000000000
.dword 0x37e007ffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e007ffffffffff
.dword 0x37eff80000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37eff80000000000
.dword 0x37e00fffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e00fffffffffff
.dword 0x37eff00000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37eff00000000000
.dword 0x37e01fffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e01fffffffffff
.dword 0x37efe00000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efe00000000000
.dword 0x37e03fffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e03fffffffffff
.dword 0x37efc00000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efc00000000000
.dword 0x37e07fffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e07fffffffffff
.dword 0x37ef800000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37ef800000000000
.dword 0x37e0ffffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e0ffffffffffff
.dword 0x37ef000000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37ef000000000000
.dword 0x37e1ffffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e1ffffffffffff
.dword 0x37ee000000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37ee000000000000
.dword 0x37e3ffffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e3ffffffffffff
.dword 0x37ec000000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37ec000000000000
.dword 0x37e7ffffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e7ffffffffffff
.dword 0x37e8000000000000
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37e8000000000000
.dword 0x37efffffffffffff
.dword 0x10000000000000
.dword 0x10000000000000
.dword 0x37efffffffffffff
.dword 0xb7d3333333333332
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7d3333333333332
.dword 0xb7c9999999999998
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7c9999999999998
.dword 0xb7d6db6db6db6db6
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7d6db6db6db6db6
.dword 0xb7c2492492492490
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7c2492492492490
.dword 0xb7d1111111111110
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7d1111111111110
.dword 0xb7cddddddddddddc
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7cddddddddddddc
.dword 0xb7d9999999999998
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7d9999999999998
.dword 0xb7b9999999999998
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7b9999999999998
.dword 0xb7db6db6db6db6da
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7db6db6db6db6da
.dword 0xb7cb6db6db6db6d8
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7cb6db6db6db6d8
.dword 0xb696d601ad376ab9
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb696d601ad376ab9
.dword 0xb7dffffffffffffc
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffffffffc
.dword 0xb7dffffffffffff8
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffffffff8
.dword 0xb7dffffffffffff0
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffffffff0
.dword 0xb7dfffffffffffe0
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffffffffe0
.dword 0xb7dfffffffffffc0
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffffffffc0
.dword 0xb7dfffffffffff80
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffffffff80
.dword 0xb7dfffffffffff00
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffffffff00
.dword 0xb7dffffffffffe00
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffffffe00
.dword 0xb7dffffffffffc00
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffffffc00
.dword 0xb7dffffffffff800
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffffff800
.dword 0xb7dffffffffff000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffffff000
.dword 0xb7dfffffffffe000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffffffe000
.dword 0xb7dfffffffffc000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffffffc000
.dword 0xb7dfffffffff8000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffffff8000
.dword 0xb7dfffffffff0000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffffff0000
.dword 0xb7dffffffffe0000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffffe0000
.dword 0xb7dffffffffc0000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffffc0000
.dword 0xb7dffffffff80000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffff80000
.dword 0xb7dffffffff00000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffff00000
.dword 0xb7dfffffffe00000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffffe00000
.dword 0xb7dfffffffc00000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffffc00000
.dword 0xb7dfffffff800000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffff800000
.dword 0xb7dfffffff000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffff000000
.dword 0xb7dffffffe000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffe000000
.dword 0xb7dffffffc000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffc000000
.dword 0xb7dffffff8000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffff8000000
.dword 0xb7dffffff0000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffff0000000
.dword 0xb7dfffffe0000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffe0000000
.dword 0xb7dfffffc0000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffffc0000000
.dword 0xb7dfffff80000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffff80000000
.dword 0xb7dfffff00000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffff00000000
.dword 0xb69fffffffe00000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb69fffffffe00000
.dword 0xb7dffffe00000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffe00000000
.dword 0xb6affffffff00000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb6affffffff00000
.dword 0xb7dffffc00000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffc00000000
.dword 0xb6bffffffff80000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb6bffffffff80000
.dword 0xb7dffff800000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffff800000000
.dword 0xb6cffffffffc0000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb6cffffffffc0000
.dword 0xb7dffff000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffff000000000
.dword 0xb6dffffffffe0000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb6dffffffffe0000
.dword 0xb7dfffe000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffe000000000
.dword 0xb6efffffffff0000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb6efffffffff0000
.dword 0xb7dfffc000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfffc000000000
.dword 0xb6ffffffffff8000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb6ffffffffff8000
.dword 0xb7dfff8000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfff8000000000
.dword 0xb70fffffffffc000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb70fffffffffc000
.dword 0xb7dfff0000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfff0000000000
.dword 0xb71fffffffffe000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb71fffffffffe000
.dword 0xb7dffe0000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffe0000000000
.dword 0xb72ffffffffff000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb72ffffffffff000
.dword 0xb7dffc0000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffc0000000000
.dword 0xb73ffffffffff800
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb73ffffffffff800
.dword 0xb7dff80000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dff80000000000
.dword 0xb74ffffffffffc00
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb74ffffffffffc00
.dword 0xb7dff00000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dff00000000000
.dword 0xb75ffffffffffe00
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb75ffffffffffe00
.dword 0xb7dfe00000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfe00000000000
.dword 0xb76fffffffffff00
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb76fffffffffff00
.dword 0xb7dfc00000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dfc00000000000
.dword 0xb77fffffffffff80
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb77fffffffffff80
.dword 0xb7df800000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7df800000000000
.dword 0xb78fffffffffffc0
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb78fffffffffffc0
.dword 0xb7df000000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7df000000000000
.dword 0xb79fffffffffffe0
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb79fffffffffffe0
.dword 0xb7de000000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7de000000000000
.dword 0xb7affffffffffff0
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7affffffffffff0
.dword 0xb7dc000000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dc000000000000
.dword 0xb7bffffffffffff8
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7bffffffffffff8
.dword 0xb7d8000000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7d8000000000000
.dword 0xb7cffffffffffffc
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7cffffffffffffc
.dword 0xb7d0000000000000
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7d0000000000000
.dword 0xb7dffffffffffffe
.dword 0x800fffffffffffff
.dword 0x800fffffffffffff
.dword 0xb7dffffffffffffe
.dword 0x37d3333333333332
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37d3333333333332
.dword 0x37c9999999999998
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37c9999999999998
.dword 0x37d6db6db6db6db6
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37d6db6db6db6db6
.dword 0x37c2492492492490
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37c2492492492490
.dword 0x37d1111111111110
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37d1111111111110
.dword 0x37cddddddddddddc
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37cddddddddddddc
.dword 0x37d9999999999998
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37d9999999999998
.dword 0x37b9999999999998
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37b9999999999998
.dword 0x37db6db6db6db6da
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37db6db6db6db6da
.dword 0x37cb6db6db6db6d8
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37cb6db6db6db6d8
.dword 0x3696d601ad376ab9
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x3696d601ad376ab9
.dword 0x37dffffffffffffc
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffffffffc
.dword 0x37dffffffffffff8
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffffffff8
.dword 0x37dffffffffffff0
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffffffff0
.dword 0x37dfffffffffffe0
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffffffffe0
.dword 0x37dfffffffffffc0
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffffffffc0
.dword 0x37dfffffffffff80
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffffffff80
.dword 0x37dfffffffffff00
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffffffff00
.dword 0x37dffffffffffe00
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffffffe00
.dword 0x37dffffffffffc00
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffffffc00
.dword 0x37dffffffffff800
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffffff800
.dword 0x37dffffffffff000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffffff000
.dword 0x37dfffffffffe000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffffffe000
.dword 0x37dfffffffffc000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffffffc000
.dword 0x37dfffffffff8000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffffff8000
.dword 0x37dfffffffff0000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffffff0000
.dword 0x37dffffffffe0000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffffe0000
.dword 0x37dffffffffc0000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffffc0000
.dword 0x37dffffffff80000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffff80000
.dword 0x37dffffffff00000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffff00000
.dword 0x37dfffffffe00000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffffe00000
.dword 0x37dfffffffc00000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffffc00000
.dword 0x37dfffffff800000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffff800000
.dword 0x37dfffffff000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffff000000
.dword 0x37dffffffe000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffe000000
.dword 0x37dffffffc000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffc000000
.dword 0x37dffffff8000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffff8000000
.dword 0x37dffffff0000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffff0000000
.dword 0x37dfffffe0000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffe0000000
.dword 0x37dfffffc0000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffffc0000000
.dword 0x37dfffff80000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffff80000000
.dword 0x37dfffff00000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffff00000000
.dword 0x369fffffffe00000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x369fffffffe00000
.dword 0x37dffffe00000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffe00000000
.dword 0x36affffffff00000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x36affffffff00000
.dword 0x37dffffc00000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffc00000000
.dword 0x36bffffffff80000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x36bffffffff80000
.dword 0x37dffff800000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffff800000000
.dword 0x36cffffffffc0000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x36cffffffffc0000
.dword 0x37dffff000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffff000000000
.dword 0x36dffffffffe0000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x36dffffffffe0000
.dword 0x37dfffe000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffe000000000
.dword 0x36efffffffff0000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x36efffffffff0000
.dword 0x37dfffc000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfffc000000000
.dword 0x36ffffffffff8000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x36ffffffffff8000
.dword 0x37dfff8000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfff8000000000
.dword 0x370fffffffffc000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x370fffffffffc000
.dword 0x37dfff0000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfff0000000000
.dword 0x371fffffffffe000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x371fffffffffe000
.dword 0x37dffe0000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffe0000000000
.dword 0x372ffffffffff000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x372ffffffffff000
.dword 0x37dffc0000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffc0000000000
.dword 0x373ffffffffff800
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x373ffffffffff800
.dword 0x37dff80000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dff80000000000
.dword 0x374ffffffffffc00
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x374ffffffffffc00
.dword 0x37dff00000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dff00000000000
.dword 0x375ffffffffffe00
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x375ffffffffffe00
.dword 0x37dfe00000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfe00000000000
.dword 0x376fffffffffff00
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x376fffffffffff00
.dword 0x37dfc00000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dfc00000000000
.dword 0x377fffffffffff80
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x377fffffffffff80
.dword 0x37df800000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37df800000000000
.dword 0x378fffffffffffc0
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x378fffffffffffc0
.dword 0x37df000000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37df000000000000
.dword 0x379fffffffffffe0
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x379fffffffffffe0
.dword 0x37de000000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37de000000000000
.dword 0x37affffffffffff0
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37affffffffffff0
.dword 0x37dc000000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dc000000000000
.dword 0x37bffffffffffff8
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37bffffffffffff8
.dword 0x37d8000000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37d8000000000000
.dword 0x37cffffffffffffc
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37cffffffffffffc
.dword 0x37d0000000000000
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37d0000000000000
.dword 0x37dffffffffffffe
.dword 0xfffffffffffff
.dword 0xfffffffffffff
.dword 0x37dffffffffffffe
.dword 0xb7d3333333333332
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7d3333333333332
.dword 0xb7c9999999999998
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7c9999999999998
.dword 0xb7d6db6db6db6db6
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7d6db6db6db6db6
.dword 0xb7c2492492492490
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7c2492492492490
.dword 0xb7d1111111111110
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7d1111111111110
.dword 0xb7cddddddddddddc
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7cddddddddddddc
.dword 0xb7d9999999999998
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7d9999999999998
.dword 0xb7b9999999999998
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7b9999999999998
.dword 0xb7db6db6db6db6da
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7db6db6db6db6da
.dword 0xb7cb6db6db6db6d8
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7cb6db6db6db6d8
.dword 0xb696d601ad376ab9
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb696d601ad376ab9
.dword 0xb7dffffffffffffc
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffffffffc
.dword 0xb7dffffffffffff8
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffffffff8
.dword 0xb7dffffffffffff0
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffffffff0
.dword 0xb7dfffffffffffe0
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffffffffe0
.dword 0xb7dfffffffffffc0
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffffffffc0
.dword 0xb7dfffffffffff80
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffffffff80
.dword 0xb7dfffffffffff00
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffffffff00
.dword 0xb7dffffffffffe00
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffffffe00
.dword 0xb7dffffffffffc00
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffffffc00
.dword 0xb7dffffffffff800
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffffff800
.dword 0xb7dffffffffff000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffffff000
.dword 0xb7dfffffffffe000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffffffe000
.dword 0xb7dfffffffffc000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffffffc000
.dword 0xb7dfffffffff8000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffffff8000
.dword 0xb7dfffffffff0000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffffff0000
.dword 0xb7dffffffffe0000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffffe0000
.dword 0xb7dffffffffc0000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffffc0000
.dword 0xb7dffffffff80000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffff80000
.dword 0xb7dffffffff00000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffff00000
.dword 0xb7dfffffffe00000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffffe00000
.dword 0xb7dfffffffc00000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffffc00000
.dword 0xb7dfffffff800000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffff800000
.dword 0xb7dfffffff000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffff000000
.dword 0xb7dffffffe000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffe000000
.dword 0xb7dffffffc000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffc000000
.dword 0xb7dffffff8000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffff8000000
.dword 0xb7dffffff0000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffff0000000
.dword 0xb7dfffffe0000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffe0000000
.dword 0xb7dfffffc0000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffffc0000000
.dword 0xb7dfffff80000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffff80000000
.dword 0xb7dfffff00000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffff00000000
.dword 0xb69fffffffe00000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb69fffffffe00000
.dword 0xb7dffffe00000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffe00000000
.dword 0xb6affffffff00000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb6affffffff00000
.dword 0xb7dffffc00000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffc00000000
.dword 0xb6bffffffff80000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb6bffffffff80000
.dword 0xb7dffff800000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffff800000000
.dword 0xb6cffffffffc0000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb6cffffffffc0000
.dword 0xb7dffff000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffff000000000
.dword 0xb6dffffffffe0000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb6dffffffffe0000
.dword 0xb7dfffe000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffe000000000
.dword 0xb6efffffffff0000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb6efffffffff0000
.dword 0xb7dfffc000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfffc000000000
.dword 0xb6ffffffffff8000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb6ffffffffff8000
.dword 0xb7dfff8000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfff8000000000
.dword 0xb70fffffffffc000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb70fffffffffc000
.dword 0xb7dfff0000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfff0000000000
.dword 0xb71fffffffffe000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb71fffffffffe000
.dword 0xb7dffe0000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffe0000000000
.dword 0xb72ffffffffff000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb72ffffffffff000
.dword 0xb7dffc0000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffc0000000000
.dword 0xb73ffffffffff800
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb73ffffffffff800
.dword 0xb7dff80000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dff80000000000
.dword 0xb74ffffffffffc00
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb74ffffffffffc00
.dword 0xb7dff00000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dff00000000000
.dword 0xb75ffffffffffe00
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb75ffffffffffe00
.dword 0xb7dfe00000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfe00000000000
.dword 0xb76fffffffffff00
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb76fffffffffff00
.dword 0xb7dfc00000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dfc00000000000
.dword 0xb77fffffffffff80
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb77fffffffffff80
.dword 0xb7df800000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7df800000000000
.dword 0xb78fffffffffffc0
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb78fffffffffffc0
.dword 0xb7df000000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7df000000000000
.dword 0xb79fffffffffffe0
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb79fffffffffffe0
.dword 0xb7de000000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7de000000000000
.dword 0xb7affffffffffff0
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7affffffffffff0
.dword 0xb7dc000000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dc000000000000
.dword 0xb7bffffffffffff8
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7bffffffffffff8
.dword 0xb7d8000000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7d8000000000000
.dword 0xb7cffffffffffffc
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7cffffffffffffc
.dword 0xb7d0000000000000
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7d0000000000000
.dword 0xb7dffffffffffffe
.dword 0x8000000000000001
.dword 0x8000000000000001
.dword 0xb7dffffffffffffe
.dword 0x37d3333333333332
.dword 0x1
.dword 0x1
.dword 0x37d3333333333332
.dword 0x37c9999999999998
.dword 0x1
.dword 0x1
.dword 0x37c9999999999998
.dword 0x37d6db6db6db6db6
.dword 0x1
.dword 0x1
.dword 0x37d6db6db6db6db6
.dword 0x37c2492492492490
.dword 0x1
.dword 0x1
.dword 0x37c2492492492490
.dword 0x37d1111111111110
.dword 0x1
.dword 0x1
.dword 0x37d1111111111110
.dword 0x37cddddddddddddc
.dword 0x1
.dword 0x1
.dword 0x37cddddddddddddc
.dword 0x37d9999999999998
.dword 0x1
.dword 0x1
.dword 0x37d9999999999998
.dword 0x37b9999999999998
.dword 0x1
.dword 0x1
.dword 0x37b9999999999998
.dword 0x37db6db6db6db6da
.dword 0x1
.dword 0x1
.dword 0x37db6db6db6db6da
.dword 0x37cb6db6db6db6d8
.dword 0x1
.dword 0x1
.dword 0x37cb6db6db6db6d8
.dword 0x3696d601ad376ab9
.dword 0x1
.dword 0x1
.dword 0x3696d601ad376ab9
.dword 0x37dffffffffffffc
.dword 0x1
.dword 0x1
.dword 0x37dffffffffffffc
.dword 0x37dffffffffffff8
.dword 0x1
.dword 0x1
.dword 0x37dffffffffffff8
.dword 0x37dffffffffffff0
.dword 0x1
.dword 0x1
.dword 0x37dffffffffffff0
.dword 0x37dfffffffffffe0
.dword 0x1
.dword 0x1
.dword 0x37dfffffffffffe0
.dword 0x37dfffffffffffc0
.dword 0x1
.dword 0x1
.dword 0x37dfffffffffffc0
.dword 0x37dfffffffffff80
.dword 0x1
.dword 0x1
.dword 0x37dfffffffffff80
.dword 0x37dfffffffffff00
.dword 0x1
.dword 0x1
.dword 0x37dfffffffffff00
.dword 0x37dffffffffffe00
.dword 0x1
.dword 0x1
.dword 0x37dffffffffffe00
.dword 0x37dffffffffffc00
.dword 0x1
.dword 0x1
.dword 0x37dffffffffffc00
.dword 0x37dffffffffff800
.dword 0x1
.dword 0x1
.dword 0x37dffffffffff800
.dword 0x37dffffffffff000
.dword 0x1
.dword 0x1
.dword 0x37dffffffffff000
.dword 0x37dfffffffffe000
.dword 0x1
.dword 0x1
.dword 0x37dfffffffffe000
.dword 0x37dfffffffffc000
.dword 0x1
.dword 0x1
.dword 0x37dfffffffffc000
.dword 0x37dfffffffff8000
.dword 0x1
.dword 0x1
.dword 0x37dfffffffff8000
.dword 0x37dfffffffff0000
.dword 0x1
.dword 0x1
.dword 0x37dfffffffff0000
.dword 0x37dffffffffe0000
.dword 0x1
.dword 0x1
.dword 0x37dffffffffe0000
.dword 0x37dffffffffc0000
.dword 0x1
.dword 0x1
.dword 0x37dffffffffc0000
.dword 0x37dffffffff80000
.dword 0x1
.dword 0x1
.dword 0x37dffffffff80000
.dword 0x37dffffffff00000
.dword 0x1
.dword 0x1
.dword 0x37dffffffff00000
.dword 0x37dfffffffe00000
.dword 0x1
.dword 0x1
.dword 0x37dfffffffe00000
.dword 0x37dfffffffc00000
.dword 0x1
.dword 0x1
.dword 0x37dfffffffc00000
.dword 0x37dfffffff800000
.dword 0x1
.dword 0x1
.dword 0x37dfffffff800000
.dword 0x37dfffffff000000
.dword 0x1
.dword 0x1
.dword 0x37dfffffff000000
.dword 0x37dffffffe000000
.dword 0x1
.dword 0x1
.dword 0x37dffffffe000000
.dword 0x37dffffffc000000
.dword 0x1
.dword 0x1
.dword 0x37dffffffc000000
.dword 0x37dffffff8000000
.dword 0x1
.dword 0x1
.dword 0x37dffffff8000000
.dword 0x37dffffff0000000
.dword 0x1
.dword 0x1
.dword 0x37dffffff0000000
.dword 0x37dfffffe0000000
.dword 0x1
.dword 0x1
.dword 0x37dfffffe0000000
.dword 0x37dfffffc0000000
.dword 0x1
.dword 0x1
.dword 0x37dfffffc0000000
.dword 0x37dfffff80000000
.dword 0x1
.dword 0x1
.dword 0x37dfffff80000000
.dword 0x37dfffff00000000
.dword 0x1
.dword 0x1
.dword 0x37dfffff00000000
.dword 0x369fffffffe00000
.dword 0x1
.dword 0x1
.dword 0x369fffffffe00000
.dword 0x37dffffe00000000
.dword 0x1
.dword 0x1
.dword 0x37dffffe00000000
.dword 0x36affffffff00000
.dword 0x1
.dword 0x1
.dword 0x36affffffff00000
.dword 0x37dffffc00000000
.dword 0x1
.dword 0x1
.dword 0x37dffffc00000000
.dword 0x36bffffffff80000
.dword 0x1
.dword 0x1
.dword 0x36bffffffff80000
.dword 0x37dffff800000000
.dword 0x1
.dword 0x1
.dword 0x37dffff800000000
.dword 0x36cffffffffc0000
.dword 0x1
.dword 0x1
.dword 0x36cffffffffc0000
.dword 0x37dffff000000000
.dword 0x1
.dword 0x1
.dword 0x37dffff000000000
.dword 0x36dffffffffe0000
.dword 0x1
.dword 0x1
.dword 0x36dffffffffe0000
.dword 0x37dfffe000000000
.dword 0x1
.dword 0x1
.dword 0x37dfffe000000000
.dword 0x36efffffffff0000
.dword 0x1
.dword 0x1
.dword 0x36efffffffff0000
.dword 0x37dfffc000000000
.dword 0x1
.dword 0x1
.dword 0x37dfffc000000000
.dword 0x36ffffffffff8000
.dword 0x1
.dword 0x1
.dword 0x36ffffffffff8000
.dword 0x37dfff8000000000
.dword 0x1
.dword 0x1
.dword 0x37dfff8000000000
.dword 0x370fffffffffc000
.dword 0x1
.dword 0x1
.dword 0x370fffffffffc000
.dword 0x37dfff0000000000
.dword 0x1
.dword 0x1
.dword 0x37dfff0000000000
.dword 0x371fffffffffe000
.dword 0x1
.dword 0x1
.dword 0x371fffffffffe000
.dword 0x37dffe0000000000
.dword 0x1
.dword 0x1
.dword 0x37dffe0000000000
.dword 0x372ffffffffff000
.dword 0x1
.dword 0x1
.dword 0x372ffffffffff000
.dword 0x37dffc0000000000
.dword 0x1
.dword 0x1
.dword 0x37dffc0000000000
.dword 0x373ffffffffff800
.dword 0x1
.dword 0x1
.dword 0x373ffffffffff800
.dword 0x37dff80000000000
.dword 0x1
.dword 0x1
.dword 0x37dff80000000000
.dword 0x374ffffffffffc00
.dword 0x1
.dword 0x1
.dword 0x374ffffffffffc00
.dword 0x37dff00000000000
.dword 0x1
.dword 0x1
.dword 0x37dff00000000000
.dword 0x375ffffffffffe00
.dword 0x1
.dword 0x1
.dword 0x375ffffffffffe00
.dword 0x37dfe00000000000
.dword 0x1
.dword 0x1
.dword 0x37dfe00000000000
.dword 0x376fffffffffff00
.dword 0x1
.dword 0x1
.dword 0x376fffffffffff00
.dword 0x37dfc00000000000
.dword 0x1
.dword 0x1
.dword 0x37dfc00000000000
.dword 0x377fffffffffff80
.dword 0x1
.dword 0x1
.dword 0x377fffffffffff80
.dword 0x37df800000000000
.dword 0x1
.dword 0x1
.dword 0x37df800000000000
.dword 0x378fffffffffffc0
.dword 0x1
.dword 0x1
.dword 0x378fffffffffffc0
.dword 0x37df000000000000
.dword 0x1
.dword 0x1
.dword 0x37df000000000000
.dword 0x379fffffffffffe0
.dword 0x1
.dword 0x1
.dword 0x379fffffffffffe0
.dword 0x37de000000000000
.dword 0x1
.dword 0x1
.dword 0x37de000000000000
.dword 0x37affffffffffff0
.dword 0x1
.dword 0x1
.dword 0x37affffffffffff0
.dword 0x37dc000000000000
.dword 0x1
.dword 0x1
.dword 0x37dc000000000000
.dword 0x37bffffffffffff8
.dword 0x1
.dword 0x1
.dword 0x37bffffffffffff8
.dword 0x37d8000000000000
.dword 0x1
.dword 0x1
.dword 0x37d8000000000000
.dword 0x37cffffffffffffc
.dword 0x1
.dword 0x1
.dword 0x37cffffffffffffc
.dword 0x37d0000000000000
.dword 0x1
.dword 0x1
.dword 0x37d0000000000000
.dword 0x37dffffffffffffe
.dword 0x1
.dword 0x1
.dword 0x37dffffffffffffe
.dword 0xbff1333333333333
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1333333333333
.dword 0xbff0cccccccccccc
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0cccccccccccc
.dword 0xbff16db6db6db6db
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff16db6db6db6db
.dword 0xbff0924924924924
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0924924924924
.dword 0xbff1111111111111
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1111111111111
.dword 0xbff0eeeeeeeeeeee
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0eeeeeeeeeeee
.dword 0xbff199999999999a
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff199999999999a
.dword 0xbff0666666666666
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0666666666666
.dword 0xbff1b6db6db6db6e
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1b6db6db6db6e
.dword 0xbff0db6db6db6db6
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0db6db6db6db6
.dword 0xbff0000000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000000
.dword 0xbff2000000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff2000000000000
.dword 0xbff1ffffffffffff
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffffffffff
.dword 0xbff0000000000002
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000002
.dword 0xbff1fffffffffffe
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffffffffe
.dword 0xbff0000000000004
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000004
.dword 0xbff1fffffffffffc
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffffffffc
.dword 0xbff0000000000008
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000008
.dword 0xbff1fffffffffff8
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffffffff8
.dword 0xbff0000000000010
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000010
.dword 0xbff1fffffffffff0
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffffffff0
.dword 0xbff0000000000020
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000020
.dword 0xbff1ffffffffffe0
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffffffffe0
.dword 0xbff0000000000040
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000040
.dword 0xbff1ffffffffffc0
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffffffffc0
.dword 0xbff0000000000080
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000080
.dword 0xbff1ffffffffff80
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffffffff80
.dword 0xbff0000000000100
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000100
.dword 0xbff1ffffffffff00
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffffffff00
.dword 0xbff0000000000200
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000200
.dword 0xbff1fffffffffe00
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffffffe00
.dword 0xbff0000000000400
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000400
.dword 0xbff1fffffffffc00
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffffffc00
.dword 0xbff0000000000800
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000000800
.dword 0xbff1fffffffff800
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffffff800
.dword 0xbff0000000001000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000001000
.dword 0xbff1fffffffff000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffffff000
.dword 0xbff0000000002000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000002000
.dword 0xbff1ffffffffe000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffffffe000
.dword 0xbff0000000004000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000004000
.dword 0xbff1ffffffffc000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffffffc000
.dword 0xbff0000000008000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000008000
.dword 0xbff1ffffffff8000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffffff8000
.dword 0xbff0000000010000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000010000
.dword 0xbff1ffffffff0000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffffff0000
.dword 0xbff0000000020000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000020000
.dword 0xbff1fffffffe0000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffffe0000
.dword 0xbff0000000040000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000040000
.dword 0xbff1fffffffc0000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffffc0000
.dword 0xbff0000000080000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000080000
.dword 0xbff1fffffff80000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffff80000
.dword 0xbff0000000100000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000100000
.dword 0xbff1fffffff00000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffff00000
.dword 0xbff0000000200000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000200000
.dword 0xbff1ffffffe00000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffffe00000
.dword 0xbff0000000400000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000400000
.dword 0xbff1ffffffc00000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffffc00000
.dword 0xbff0000000800000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000000800000
.dword 0xbff1ffffff800000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffff800000
.dword 0xbff0000001000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000001000000
.dword 0xbff1ffffff000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffff000000
.dword 0xbff0000002000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000002000000
.dword 0xbff1fffffe000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffe000000
.dword 0xbff0000004000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000004000000
.dword 0xbff1fffffc000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffffc000000
.dword 0xbff0000008000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000008000000
.dword 0xbff1fffff8000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffff8000000
.dword 0xbff0000010000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000010000000
.dword 0xbff1fffff0000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffff0000000
.dword 0xbff0000020000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000020000000
.dword 0xbff1ffffe0000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffe0000000
.dword 0xbff0000040000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000040000000
.dword 0xbff1ffffc0000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffffc0000000
.dword 0xbff0000080000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000080000000
.dword 0xbff1ffff80000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffff80000000
.dword 0xbff0000100000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000100000000
.dword 0xbff1ffff00000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffff00000000
.dword 0xbff0000200000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000200000000
.dword 0xbff1fffe00000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffe00000000
.dword 0xbff0000400000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000400000000
.dword 0xbff1fffc00000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fffc00000000
.dword 0xbff0000800000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0000800000000
.dword 0xbff1fff800000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fff800000000
.dword 0xbff0001000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0001000000000
.dword 0xbff1fff000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fff000000000
.dword 0xbff0002000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0002000000000
.dword 0xbff1ffe000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffe000000000
.dword 0xbff0004000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0004000000000
.dword 0xbff1ffc000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ffc000000000
.dword 0xbff0008000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0008000000000
.dword 0xbff1ff8000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ff8000000000
.dword 0xbff0010000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0010000000000
.dword 0xbff1ff0000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1ff0000000000
.dword 0xbff0020000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0020000000000
.dword 0xbff1fe0000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fe0000000000
.dword 0xbff0040000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0040000000000
.dword 0xbff1fc0000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1fc0000000000
.dword 0xbff0080000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0080000000000
.dword 0xbff1f80000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1f80000000000
.dword 0xbff0100000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0100000000000
.dword 0xbff1f00000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1f00000000000
.dword 0xbff0200000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0200000000000
.dword 0xbff1e00000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1e00000000000
.dword 0xbff0400000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0400000000000
.dword 0xbff1c00000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1c00000000000
.dword 0xbff0800000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff0800000000000
.dword 0xbff1800000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1800000000000
.dword 0xbff1000000000000
.dword 0xbf80000000000000
.dword 0xbf80000000000000
.dword 0xbff1000000000000
.dword 0x3fff333333333333
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fff333333333333
.dword 0x3ffecccccccccccc
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffecccccccccccc
.dword 0x3fff6db6db6db6db
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fff6db6db6db6db
.dword 0x3ffe924924924924
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe924924924924
.dword 0x3fff111111111111
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fff111111111111
.dword 0x3ffeeeeeeeeeeeee
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffeeeeeeeeeeeee
.dword 0x3fff99999999999a
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fff99999999999a
.dword 0x3ffe666666666666
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe666666666666
.dword 0x3fffb6db6db6db6e
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffb6db6db6db6e
.dword 0x3ffedb6db6db6db6
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffedb6db6db6db6
.dword 0x3ffe000000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000000
.dword 0x4000000000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x4000000000000000
.dword 0x3fffffffffffffff
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffffffffff
.dword 0x3ffe000000000002
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000002
.dword 0x3ffffffffffffffe
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffffffffe
.dword 0x3ffe000000000004
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000004
.dword 0x3ffffffffffffffc
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffffffffc
.dword 0x3ffe000000000008
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000008
.dword 0x3ffffffffffffff8
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffffffff8
.dword 0x3ffe000000000010
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000010
.dword 0x3ffffffffffffff0
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffffffff0
.dword 0x3ffe000000000020
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000020
.dword 0x3fffffffffffffe0
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffffffffe0
.dword 0x3ffe000000000040
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000040
.dword 0x3fffffffffffffc0
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffffffffc0
.dword 0x3ffe000000000080
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000080
.dword 0x3fffffffffffff80
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffffffff80
.dword 0x3ffe000000000100
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000100
.dword 0x3fffffffffffff00
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffffffff00
.dword 0x3ffe000000000200
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000200
.dword 0x3ffffffffffffe00
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffffffe00
.dword 0x3ffe000000000400
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000400
.dword 0x3ffffffffffffc00
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffffffc00
.dword 0x3ffe000000000800
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000000800
.dword 0x3ffffffffffff800
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffffff800
.dword 0x3ffe000000001000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000001000
.dword 0x3ffffffffffff000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffffff000
.dword 0x3ffe000000002000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000002000
.dword 0x3fffffffffffe000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffffffe000
.dword 0x3ffe000000004000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000004000
.dword 0x3fffffffffffc000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffffffc000
.dword 0x3ffe000000008000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000008000
.dword 0x3fffffffffff8000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffffff8000
.dword 0x3ffe000000010000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000010000
.dword 0x3fffffffffff0000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffffff0000
.dword 0x3ffe000000020000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000020000
.dword 0x3ffffffffffe0000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffffe0000
.dword 0x3ffe000000040000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000040000
.dword 0x3ffffffffffc0000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffffc0000
.dword 0x3ffe000000080000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000080000
.dword 0x3ffffffffff80000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffff80000
.dword 0x3ffe000000100000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000100000
.dword 0x3ffffffffff00000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffff00000
.dword 0x3ffe000000200000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000200000
.dword 0x3fffffffffe00000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffffe00000
.dword 0x3ffe000000400000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000400000
.dword 0x3fffffffffc00000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffffc00000
.dword 0x3ffe000000800000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000000800000
.dword 0x3fffffffff800000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffff800000
.dword 0x3ffe000001000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000001000000
.dword 0x3fffffffff000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffff000000
.dword 0x3ffe000002000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000002000000
.dword 0x3ffffffffe000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffe000000
.dword 0x3ffe000004000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000004000000
.dword 0x3ffffffffc000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffffc000000
.dword 0x3ffe000008000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000008000000
.dword 0x3ffffffff8000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffff8000000
.dword 0x3ffe000010000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000010000000
.dword 0x3ffffffff0000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffff0000000
.dword 0x3ffe000020000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000020000000
.dword 0x3fffffffe0000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffe0000000
.dword 0x3ffe000040000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000040000000
.dword 0x3fffffffc0000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffffc0000000
.dword 0x3ffe000080000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000080000000
.dword 0x3fffffff80000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffff80000000
.dword 0x3ffe000100000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000100000000
.dword 0x3fffffff00000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffff00000000
.dword 0x3ffe000200000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000200000000
.dword 0x3ffffffe00000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffe00000000
.dword 0x3ffe000400000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000400000000
.dword 0x3ffffffc00000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffffc00000000
.dword 0x3ffe000800000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe000800000000
.dword 0x3ffffff800000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffff800000000
.dword 0x3ffe001000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe001000000000
.dword 0x3ffffff000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffff000000000
.dword 0x3ffe002000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe002000000000
.dword 0x3fffffe000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffe000000000
.dword 0x3ffe004000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe004000000000
.dword 0x3fffffc000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffffc000000000
.dword 0x3ffe008000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe008000000000
.dword 0x3fffff8000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffff8000000000
.dword 0x3ffe010000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe010000000000
.dword 0x3fffff0000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffff0000000000
.dword 0x3ffe020000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe020000000000
.dword 0x3ffffe0000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffe0000000000
.dword 0x3ffe040000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe040000000000
.dword 0x3ffffc0000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffffc0000000000
.dword 0x3ffe080000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe080000000000
.dword 0x3ffff80000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffff80000000000
.dword 0x3ffe100000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe100000000000
.dword 0x3ffff00000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffff00000000000
.dword 0x3ffe200000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe200000000000
.dword 0x3fffe00000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffe00000000000
.dword 0x3ffe400000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe400000000000
.dword 0x3fffc00000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fffc00000000000
.dword 0x3ffe800000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3ffe800000000000
.dword 0x3fff800000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fff800000000000
.dword 0x3fff000000000000
.dword 0x3ff0000000000000
.dword 0x3ff0000000000000
.dword 0x3fff000000000000
.dword 0xb7d3333333333332
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7d3333333333332
.dword 0xb7c9999999999998
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7c9999999999998
.dword 0xb7d6db6db6db6db6
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7d6db6db6db6db6
.dword 0xb7c2492492492490
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7c2492492492490
.dword 0xb7d1111111111110
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7d1111111111110
.dword 0xb7cddddddddddddc
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7cddddddddddddc
.dword 0xb7d9999999999998
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7d9999999999998
.dword 0xb7b9999999999998
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7b9999999999998
.dword 0xb7db6db6db6db6da
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7db6db6db6db6da
.dword 0xb7cb6db6db6db6d8
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7cb6db6db6db6d8
.dword 0xb696d601ad376ab9
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb696d601ad376ab9
.dword 0xb7dffffffffffffc
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffffffffc
.dword 0xb7dffffffffffff8
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffffffff8
.dword 0xb7dffffffffffff0
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffffffff0
.dword 0xb7dfffffffffffe0
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffffffffe0
.dword 0xb7dfffffffffffc0
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffffffffc0
.dword 0xb7dfffffffffff80
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffffffff80
.dword 0xb7dfffffffffff00
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffffffff00
.dword 0xb7dffffffffffe00
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffffffe00
.dword 0xb7dffffffffffc00
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffffffc00
.dword 0xb7dffffffffff800
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffffff800
.dword 0xb7dffffffffff000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffffff000
.dword 0xb7dfffffffffe000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffffffe000
.dword 0xb7dfffffffffc000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffffffc000
.dword 0xb7dfffffffff8000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffffff8000
.dword 0xb7dfffffffff0000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffffff0000
.dword 0xb7dffffffffe0000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffffe0000
.dword 0xb7dffffffffc0000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffffc0000
.dword 0xb7dffffffff80000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffff80000
.dword 0xb7dffffffff00000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffff00000
.dword 0xb7dfffffffe00000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffffe00000
.dword 0xb7dfffffffc00000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffffc00000
.dword 0xb7dfffffff800000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffff800000
.dword 0xb7dfffffff000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffff000000
.dword 0xb7dffffffe000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffe000000
.dword 0xb7dffffffc000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffc000000
.dword 0xb7dffffff8000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffff8000000
.dword 0xb7dffffff0000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffff0000000
.dword 0xb7dfffffe0000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffe0000000
.dword 0xb7dfffffc0000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffffc0000000
.dword 0xb7dfffff80000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffff80000000
.dword 0xb7dfffff00000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffff00000000
.dword 0xb69fffffffe00000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb69fffffffe00000
.dword 0xb7dffffe00000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffe00000000
.dword 0xb6affffffff00000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb6affffffff00000
.dword 0xb7dffffc00000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffc00000000
.dword 0xb6bffffffff80000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb6bffffffff80000
.dword 0xb7dffff800000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffff800000000
.dword 0xb6cffffffffc0000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb6cffffffffc0000
.dword 0xb7dffff000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffff000000000
.dword 0xb6dffffffffe0000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb6dffffffffe0000
.dword 0xb7dfffe000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffe000000000
.dword 0xb6efffffffff0000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb6efffffffff0000
.dword 0xb7dfffc000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfffc000000000
.dword 0xb6ffffffffff8000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb6ffffffffff8000
.dword 0xb7dfff8000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfff8000000000
.dword 0xb70fffffffffc000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb70fffffffffc000
.dword 0xb7dfff0000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfff0000000000
.dword 0xb71fffffffffe000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb71fffffffffe000
.dword 0xb7dffe0000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffe0000000000
.dword 0xb72ffffffffff000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb72ffffffffff000
.dword 0xb7dffc0000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffc0000000000
.dword 0xb73ffffffffff800
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb73ffffffffff800
.dword 0xb7dff80000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dff80000000000
.dword 0xb74ffffffffffc00
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb74ffffffffffc00
.dword 0xb7dff00000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dff00000000000
.dword 0xb75ffffffffffe00
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb75ffffffffffe00
.dword 0xb7dfe00000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfe00000000000
.dword 0xb76fffffffffff00
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb76fffffffffff00
.dword 0xb7dfc00000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dfc00000000000
.dword 0xb77fffffffffff80
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb77fffffffffff80
.dword 0xb7df800000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7df800000000000
.dword 0xb78fffffffffffc0
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb78fffffffffffc0
.dword 0xb7df000000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7df000000000000
.dword 0xb79fffffffffffe0
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb79fffffffffffe0
.dword 0xb7de000000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7de000000000000
.dword 0xb7affffffffffff0
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7affffffffffff0
.dword 0xb7dc000000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dc000000000000
.dword 0xb7bffffffffffff8
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7bffffffffffff8
.dword 0xb7d8000000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7d8000000000000
.dword 0xb7cffffffffffffc
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7cffffffffffffc
.dword 0xb7d0000000000000
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7d0000000000000
.dword 0xb7dffffffffffffe
.dword 0x8000000000000000
.dword 0x8000000000000000
.dword 0xb7dffffffffffffe
.dword 0x37d3333333333332
.dword 0x0
.dword 0x0
.dword 0x37d3333333333332
.dword 0x37c9999999999998
.dword 0x0
.dword 0x0
.dword 0x37c9999999999998
.dword 0x37d6db6db6db6db6
.dword 0x0
.dword 0x0
.dword 0x37d6db6db6db6db6
.dword 0x37c2492492492490
.dword 0x0
.dword 0x0
.dword 0x37c2492492492490
.dword 0x37d1111111111110
.dword 0x0
.dword 0x0
.dword 0x37d1111111111110
.dword 0x37cddddddddddddc
.dword 0x0
.dword 0x0
.dword 0x37cddddddddddddc
.dword 0x37d9999999999998
.dword 0x0
.dword 0x0
.dword 0x37d9999999999998
.dword 0x37b9999999999998
.dword 0x0
.dword 0x0
.dword 0x37b9999999999998
.dword 0x37db6db6db6db6da
.dword 0x0
.dword 0x0
.dword 0x37db6db6db6db6da
.dword 0x37cb6db6db6db6d8
.dword 0x0
.dword 0x0
.dword 0x37cb6db6db6db6d8
.dword 0x3696d601ad376ab9
.dword 0x0
.dword 0x37dffffffffffffc
.dword 0x0
.dword 0x0
.dword 0x37dffffffffffffc
.dword 0x37dffffffffffff8
.dword 0x0
.dword 0x0
.dword 0x37dffffffffffff8
.dword 0x37dffffffffffff0
.dword 0x0
.dword 0x0
.dword 0x37dffffffffffff0
.dword 0x37dfffffffffffe0
.dword 0x0
.dword 0x0
.dword 0x37dfffffffffffe0
.dword 0x37dfffffffffffc0
.dword 0x0
.dword 0x0
.dword 0x37dfffffffffffc0
.dword 0x37dfffffffffff80
.dword 0x0
.dword 0x0
.dword 0x37dfffffffffff80
.dword 0x37dfffffffffff00
.dword 0x0
.dword 0x0
.dword 0x37dfffffffffff00
.dword 0x37dffffffffffe00
.dword 0x0
.dword 0x0
.dword 0x37dffffffffffe00
.dword 0x37dffffffffffc00
.dword 0x0
.dword 0x0
.dword 0x37dffffffffffc00
.dword 0x37dffffffffff800
.dword 0x0
.dword 0x0
.dword 0x37dffffffffff800
.dword 0x37dffffffffff000
.dword 0x0
.dword 0x0
.dword 0x37dffffffffff000
.dword 0x37dfffffffffe000
.dword 0x0
.dword 0x0
.dword 0x37dfffffffffe000
.dword 0x37dfffffffffc000
.dword 0x0
.dword 0x0
.dword 0x37dfffffffffc000
.dword 0x37dfffffffff8000
.dword 0x0
.dword 0x0
.dword 0x37dfffffffff8000
.dword 0x37dfffffffff0000
.dword 0x0
.dword 0x0
.dword 0x37dfffffffff0000
.dword 0x37dffffffffe0000
.dword 0x0
.dword 0x0
.dword 0x37dffffffffe0000
.dword 0x37dffffffffc0000
.dword 0x0
.dword 0x0
.dword 0x37dffffffffc0000
.dword 0x37dffffffff80000
.dword 0x0
.dword 0x0
.dword 0x37dffffffff80000
.dword 0x37dffffffff00000
.dword 0x0
.dword 0x0
.dword 0x37dffffffff00000
.dword 0x37dfffffffe00000
.dword 0x0
.dword 0x0
.dword 0x37dfffffffe00000
.dword 0x37dfffffffc00000
.dword 0x0
.dword 0x0
.dword 0x37dfffffffc00000
.dword 0x37dfffffff800000
.dword 0x0
.dword 0x0
.dword 0x37dfffffff800000
.dword 0x37dfffffff000000
.dword 0x0
.dword 0x0
.dword 0x37dfffffff000000
.dword 0x37dffffffe000000
.dword 0x0
.dword 0x0
.dword 0x37dffffffe000000
.dword 0x37dffffffc000000
.dword 0x0
.dword 0x0
.dword 0x37dffffffc000000
.dword 0x37dffffff8000000
.dword 0x0
.dword 0x0
.dword 0x37dffffff8000000
.dword 0x37dffffff0000000
.dword 0x0
.dword 0x0
.dword 0x37dffffff0000000
.dword 0x37dfffffe0000000
.dword 0x0
.dword 0x0
.dword 0x37dfffffe0000000
.dword 0x37dfffffc0000000
.dword 0x0
.dword 0x0
.dword 0x37dfffffc0000000
.dword 0x37dfffff80000000
.dword 0x0
.dword 0x0
.dword 0x37dfffff80000000
.dword 0x37dfffff00000000
.dword 0x0
.dword 0x0
.dword 0x37dfffff00000000
.dword 0x369fffffffe00000
.dword 0x0
.dword 0x0
.dword 0x369fffffffe00000
.dword 0x37dffffe00000000
.dword 0x0
.dword 0x0
.dword 0x37dffffe00000000
.dword 0x36affffffff00000
.dword 0x0
.dword 0x0
.dword 0x36affffffff00000
.dword 0x37dffffc00000000
.dword 0x0
.dword 0x0
.dword 0x37dffffc00000000
.dword 0x36bffffffff80000
.dword 0x0
.dword 0x0
.dword 0x36bffffffff80000
.dword 0x37dffff800000000
.dword 0x0
.dword 0x0
.dword 0x37dffff800000000
.dword 0x36cffffffffc0000
.dword 0x0
.dword 0x0
.dword 0x36cffffffffc0000
.dword 0x37dffff000000000
.dword 0x0
.dword 0x0
.dword 0x37dffff000000000
.dword 0x36dffffffffe0000
.dword 0x0
.dword 0x0
.dword 0x36dffffffffe0000
.dword 0x37dfffe000000000
.dword 0x0
.dword 0x0
.dword 0x37dfffe000000000
.dword 0x36efffffffff0000
.dword 0x0
.dword 0x0
.dword 0x36efffffffff0000
.dword 0x37dfffc000000000
.dword 0x0
.dword 0x0
.dword 0x37dfffc000000000
.dword 0x36ffffffffff8000
.dword 0x0
.dword 0x0
.dword 0x36ffffffffff8000
.dword 0x37dfff8000000000
.dword 0x0
.dword 0x0
.dword 0x37dfff8000000000
.dword 0x370fffffffffc000
.dword 0x0
.dword 0x0
.dword 0x370fffffffffc000
.dword 0x37dfff0000000000
.dword 0x0
.dword 0x0
.dword 0x37dfff0000000000
.dword 0x371fffffffffe000
.dword 0x0
.dword 0x0
.dword 0x371fffffffffe000
.dword 0x37dffe0000000000
.dword 0x0
.dword 0x0
.dword 0x37dffe0000000000
.dword 0x372ffffffffff000
.dword 0x0
.dword 0x0
.dword 0x372ffffffffff000
.dword 0x37dffc0000000000
.dword 0x0
.dword 0x0
.dword 0x37dffc0000000000
.dword 0x373ffffffffff800
.dword 0x0
.dword 0x0
.dword 0x373ffffffffff800
.dword 0x37dff80000000000
.dword 0x0
.dword 0x0
.dword 0x37dff80000000000
.dword 0x374ffffffffffc00
.dword 0x0
.dword 0x0
.dword 0x374ffffffffffc00
.dword 0x37dff00000000000
.dword 0x0
.dword 0x0
.dword 0x37dff00000000000
.dword 0x375ffffffffffe00
.dword 0x0
.dword 0x0
.dword 0x375ffffffffffe00
.dword 0x37dfe00000000000
.dword 0x0
.dword 0x0
.dword 0x37dfe00000000000
.dword 0x376fffffffffff00
.dword 0x0
.dword 0x0
.dword 0x376fffffffffff00
.dword 0x37dfc00000000000
.dword 0x0
.dword 0x0
.dword 0x37dfc00000000000
.dword 0x377fffffffffff80
.dword 0x0
.dword 0x0
.dword 0x377fffffffffff80
.dword 0x37df800000000000
.dword 0x0
.dword 0x0
.dword 0x37df800000000000
.dword 0x378fffffffffffc0
.dword 0x0
.dword 0x0
.dword 0x378fffffffffffc0
.dword 0x37df000000000000
.dword 0x0
.dword 0x0
.dword 0x37df000000000000
.dword 0x379fffffffffffe0
.dword 0x0
.dword 0x0
.dword 0x379fffffffffffe0
.dword 0x37de000000000000
.dword 0x0
.dword 0x0
.dword 0x37de000000000000
.dword 0x37affffffffffff0
.dword 0x0
.dword 0x0
.dword 0x37affffffffffff0
.dword 0x37dc000000000000
.dword 0x0
.dword 0x0
.dword 0x37dc000000000000
.dword 0x37bffffffffffff8
.dword 0x0
.dword 0x0
.dword 0x37bffffffffffff8
.dword 0x37d8000000000000
.dword 0x0
.dword 0x0
.dword 0x37d8000000000000
.dword 0x37cffffffffffffc
.dword 0x0
.dword 0x0
.dword 0x37cffffffffffffc
.dword 0x37d0000000000000
.dword 0x0
.dword 0x0
.dword 0x37d0000000000000
.dword 0x37dffffffffffffe
.dword 0x0
.dword 0x0
.dword 0x37dffffffffffffe
.dword 0xc7fccccccccccccc
.dword 0xffefffffffffffff
.dword 0xffefffffffffffff
.dword 0xc7fccccccccccccc
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_8:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_9:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_10:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_11:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_12:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_13:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_14:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_15:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_16:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_17:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_18:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_19:
    .fill 64*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
