
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:00 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V FD extension for the fmsub_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmsub_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f15, rs2==f24, rs3==f14, rd==f15, fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fmsub.d ; op1:f15; op2:f24; op3:f14; dest:f15; op1val:0x2a; op2val:0x3fe0000000000000; op3val:0x14; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f15, f15, f24, f14, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f1, rs2==f12, rs3==f1, rd==f27, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffff7fff84 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000002 and rm_val == 0  
// opcode: fmsub.d ; op1:f1; op2:f12; op3:f1; dest:f27; op1val:0x7fe000000000003b; op2val:0xbfefffffff7fff84; op3val:0x7fe000000000003b; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f27, f1, f12, f1, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f12, rs2==f16, rs3==f16, rd==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000022 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffbfff9a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fmsub.d ; op1:f12; op2:f16; op3:f16; dest:f25; op1val:0x7fe0000000000022; op2val:0xbfefffffffbfff9a; op3val:0xbfefffffffbfff9a; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f25, f12, f16, f16, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f25, rs2==f15, rs3==f24, rd==f23, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffdfffb2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fmsub.d ; op1:f25; op2:f15; op3:f24; dest:f23; op1val:0x7fe000000000001d; op2val:0xbfefffffffdfffb2; op3val:0x7fe0000000000009; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f23, f25, f15, f24, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f9, rs2==f2, rs3==f11, rd==f2, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffefff4c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000004e and rm_val == 0  
// opcode: fmsub.d ; op1:f9; op2:f2; op3:f11; dest:f2; op1val:0x7fe000000000000b; op2val:0xbfefffffffefff4c; op3val:0x7fe000000000004e; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f2, f9, f2, f11, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f14, rs2==f14, rs3==f17, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffff7ffa2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000022 and rm_val == 0  
// opcode: fmsub.d ; op1:f14; op2:f14; op3:f17; dest:f1; op1val:0x7fe000000000000c; op2val:0x7fe000000000000c; op3val:0x7fe0000000000022; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f1, f14, f14, f17, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rd == rs3 != rs2, rs1==f0, rs2==f23, rs3==f0, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffbff54 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000052 and rm_val == 0  
// opcode: fmsub.d ; op1:f0; op2:f23; op3:f0; dest:f0; op1val:0x7fe0000000000003; op2val:0xbfeffffffffbff54; op3val:0x7fe0000000000003; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f0, f0, f23, f0, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rd == rs2 == rs3 != rs1, rs1==f24, rs2==f9, rs3==f9, rd==f9, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffdffa4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000023 and rm_val == 0  
// opcode: fmsub.d ; op1:f24; op2:f9; op3:f9; dest:f9; op1val:0x7fe000000000000a; op2val:0xbfeffffffffdffa4; op3val:0xbfeffffffffdffa4; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f9, f24, f9, f9, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f26, rs2==f26, rs3==f26, rd==f26, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000018 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffeff60 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000037 and rm_val == 0  
// opcode: fmsub.d ; op1:f26; op2:f26; op3:f26; dest:f26; op1val:0x7fe0000000000018; op2val:0x7fe0000000000018; op3val:0x7fe0000000000018; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f26, f26, f26, f26, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 != rd, rs1==f22, rs2==f22, rs3==f22, rd==f17, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000008 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffff7f3c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000059 and rm_val == 0  
// opcode: fmsub.d ; op1:f22; op2:f22; op3:f22; dest:f17; op1val:0x7fe0000000000008; op2val:0x7fe0000000000008; op3val:0x7fe0000000000008; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f17, f22, f22, f22, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 == rd != rs3, rs1==f30, rs2==f30, rs3==f31, rd==f30, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffbf9e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000024 and rm_val == 0  
// opcode: fmsub.d ; op1:f30; op2:f30; op3:f31; dest:f30; op1val:0x7fe000000000000c; op2val:0x7fe000000000000c; op3val:0x7fe0000000000024; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f30, f30, f30, f31, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f19, rs2==f13, rs3==f21, rd==f21, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffdef6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000002a and rm_val == 0  
// opcode: fmsub.d ; op1:f19; op2:f13; op3:f21; dest:f21; op1val:0x7fe000000000005a; op2val:0xbfefffffffffdef6; op3val:0x7fe000000000002a; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f21, f19, f13, f21, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f4, rs2==f19, rs3==f25, rd==f13, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffeeea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000040 and rm_val == 0  
// opcode: fmsub.d ; op1:f4; op2:f19; op3:f25; dest:f13; op1val:0x7fe000000000004a; op2val:0xbfefffffffffeeea; op3val:0x7fe0000000000040; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f4, f19, f25, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f20, rs2==f8, rs3==f3, rd==f16, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000045 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffff6f0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000042 and rm_val == 0  
// opcode: fmsub.d ; op1:f20; op2:f8; op3:f3; dest:f16; op1val:0x7fe0000000000045; op2val:0xbfeffffffffff6f0; op3val:0x7fe0000000000042; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f16, f20, f8, f3, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f8, rs2==f31, rs3==f13, rd==f22, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffffb6e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fmsub.d ; op1:f8; op2:f31; op3:f13; dest:f22; op1val:0x7fe0000000000034; op2val:0xbfeffffffffffb6e; op3val:0x7fe0000000000014; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f22, f8, f31, f13, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f18, rs2==f6, rs3==f20, rd==f10, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffffd0c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000022 and rm_val == 0  
// opcode: fmsub.d ; op1:f18; op2:f6; op3:f20; dest:f10; op1val:0x7fe0000000000057; op2val:0xbfeffffffffffd0c; op3val:0x7fe0000000000022; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f10, f18, f6, f20, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f5, rs2==f18, rs3==f19, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000011 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffffe6e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000037 and rm_val == 0  
// opcode: fmsub.d ; op1:f5; op2:f18; op3:f19; dest:f4; op1val:0x7fe0000000000011; op2val:0xbfeffffffffffe6e; op3val:0x7fe0000000000037; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f4, f5, f18, f19, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f21, rs2==f29, rs3==f27, rd==f8, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000023 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffffe76 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000061 and rm_val == 0  
// opcode: fmsub.d ; op1:f21; op2:f29; op3:f27; dest:f8; op1val:0x7fe0000000000023; op2val:0xbfeffffffffffe76; op3val:0x7fe0000000000061; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f8, f21, f29, f27, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f3, rs2==f7, rs3==f23, rd==f11, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffff82 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000018 and rm_val == 0  
// opcode: fmsub.d ; op1:f3; op2:f7; op3:f23; dest:f11; op1val:0x7fe0000000000006; op2val:0xbfefffffffffff82; op3val:0x7fe0000000000018; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f11, f3, f7, f23, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f13, rs2==f28, rs3==f10, rd==f18, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000022 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffff54 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000023 and rm_val == 0  
// opcode: fmsub.d ; op1:f13; op2:f28; op3:f10; dest:f18; op1val:0x7fe0000000000022; op2val:0xbfefffffffffff54; op3val:0x7fe0000000000023; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f18, f13, f28, f10, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f16, rs2==f5, rs3==f28, rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffffbc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fmsub.d ; op1:f16; op2:f5; op3:f28; dest:f29; op1val:0x7fe000000000000e; op2val:0xbfefffffffffffbc; op3val:0x7fe000000000000b; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f29, f16, f5, f28, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f17, rs2==f10, rs3==f30, rd==f5, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffff9c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000001e and rm_val == 0  
// opcode: fmsub.d ; op1:f17; op2:f10; op3:f30; dest:f5; op1val:0x7fe000000000000f; op2val:0xbfefffffffffff9c; op3val:0x7fe000000000001e; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f5, f17, f10, f30, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f2, rs2==f1, rs3==f7, rd==f19, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffff64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fmsub.d ; op1:f2; op2:f1; op3:f7; dest:f19; op1val:0x7fe0000000000042; op2val:0xbfefffffffffff64; op3val:0x7fe0000000000009; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f19, f2, f1, f7, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f29, rs2==f20, rs3==f6, rd==f12, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffff10 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fmsub.d ; op1:f29; op2:f20; op3:f6; dest:f12; op1val:0x7fe0000000000050; op2val:0xbfefffffffffff10; op3val:0x7fe0000000000026; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f12, f29, f20, f6, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f28, rs2==f21, rs3==f5, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000043 and rm_val == 0  
// opcode: fmsub.d ; op1:f28; op2:f21; op3:f5; dest:f7; op1val:0x7fe000000000002b; op2val:0x7ff0000000000000; op3val:0x7fe0000000000043; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f7, f28, f21, f5, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f11, rs2==f17, rs3==f12, rd==f14, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000003 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000032 and rm_val == 0  
// opcode: fmsub.d ; op1:f11; op2:f17; op3:f12; dest:f14; op1val:0x7fe0000000000003; op2val:0x7ff0000000000000; op3val:0x7fe0000000000032; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f14, f11, f17, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f7, rs2==f0, rs3==f2, rd==f6, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000039 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000005b and rm_val == 0  
// opcode: fmsub.d ; op1:f7; op2:f0; op3:f2; dest:f6; op1val:0x7fe0000000000039; op2val:0x7ff0000000000000; op3val:0x7fe000000000005b; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f6, f7, f0, f2, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f27, rs2==f3, rs3==f4, rd==f20, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000047 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003b and rm_val == 0  
// opcode: fmsub.d ; op1:f27; op2:f3; op3:f4; dest:f20; op1val:0x7fe0000000000047; op2val:0x7ff0000000000000; op3val:0x7fe000000000003b; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f20, f27, f3, f4, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f23, rs2==f11, rs3==f15, rd==f28, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000003 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fmsub.d ; op1:f23; op2:f11; op3:f15; dest:f28; op1val:0x7fe0000000000003; op2val:0x7ff0000000000000; op3val:0x7fe000000000002c; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f28, f23, f11, f15, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f6, rs2==f27, rs3==f18, rd==f24, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fmsub.d ; op1:f6; op2:f27; op3:f18; dest:f24; op1val:0x7fe000000000005d; op2val:0x7ff0000000000000; op3val:0x7fe000000000002f; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f24, f6, f27, f18, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f10, rs2==f4, rs3==f29, rd==f3, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f4; op3:f29; dest:f3; op1val:0x7fe0000000000029; op2val:0x7ff0000000000000; op3val:0x7fe000000000000c; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f3, f10, f4, f29, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001a and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fmsub.d ; op1:f31; op2:f23; op3:f27; dest:f3; op1val:0x7fe000000000001a; op2val:0x7ff0000000000000; op3val:0x7fe000000000002e; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f3, f31, f23, f27, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// rs2==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmsub.d ; op1:f28; op2:f25; op3:f26; dest:f17; op1val:0x7fe000000000002c; op2val:0x7ff0000000000000; op3val:0x7fe0000000000036; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f17, f28, f25, f26, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// rs3==f8, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000042 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000034 and rm_val == 0  
// opcode: fmsub.d ; op1:f25; op2:f16; op3:f8; dest:f26; op1val:0x7fe0000000000042; op2val:0x7ff0000000000000; op3val:0x7fe0000000000034; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f26, f25, f16, f8, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000038 and rm_val == 0  
// opcode: fmsub.d ; op1:f5; op2:f12; op3:f8; dest:f31; op1val:0x7fe000000000005b; op2val:0x7ff0000000000000; op3val:0x7fe0000000000038; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f31, f5, f12, f8, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000015 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000001d; op2val:0x7ff0000000000000; op3val:0x7fe0000000000015; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000015 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000056 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000015; op2val:0x7ff0000000000000; op3val:0x7fe0000000000056; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000033; op2val:0x7ff0000000000000; op3val:0x7fe000000000003f; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000060; op2val:0x7ff0000000000000; op3val:0x7fe000000000000d; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003c and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000001d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000003c; op2val:0x7ff0000000000000; op3val:0x7fe000000000001d; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000021; op2val:0x7ff0000000000000; op3val:0x7fe0000000000012; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000002f; op2val:0x7ff0000000000000; op3val:0x7fe0000000000013; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000053 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000055 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000053; op2val:0x7ff0000000000000; op3val:0x7fe0000000000055; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000014 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000005c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000014; op2val:0x7ff0000000000000; op3val:0x7fe000000000005c; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000027 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000027; op2val:0x7ff0000000000000; op3val:0x7fe0000000000010; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000056 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000001c; op2val:0x7ff0000000000000; op3val:0x7fe0000000000056; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000037; op2val:0x7ff0000000000000; op3val:0x7fe000000000000a; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x3e0 and fm2 == 0xffff07fffff54 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000056; op2val:0xbe0ffff07fffff54; op3val:0x1000000000001f; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x3df and fm2 == 0xffff5ffffffae and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000029; op2val:0xbdfffff5ffffffae; op3val:0x1000000000000a; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x3de and fm2 == 0xfff8dffffff9a and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000039 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000033; op2val:0xbdefff8dffffff9a; op3val:0x10000000000039; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x3dd and fm2 == 0xfffbfffffff94 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000036; op2val:0xbddfffbfffffff94; op3val:0x10000000000010; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003a and fs2 == 1 and fe2 == 0x3dc and fm2 == 0xfff6fffffff8c and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000003a; op2val:0xbdcfff6fffffff8c; op3val:0x10000000000012; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000048 and fs2 == 1 and fe2 == 0x3db and fm2 == 0xffe5fffffff70 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000048; op2val:0xbdbffe5fffffff70; op3val:0x1000000000001a; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x3da and fm2 == 0xffbbfffffff7a and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000022 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000043; op2val:0xbdaffbbfffffff7a; op3val:0x10000000000022; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000020 and fs2 == 1 and fe2 == 0x3d9 and fm2 == 0xfe97fffffffc0 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000005a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000020; op2val:0xbd9fe97fffffffc0; op3val:0x1000000000005a; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x3d8 and fm2 == 0xfdf7fffffff84 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000041 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000003e; op2val:0xbd8fdf7fffffff84; op3val:0x10000000000041; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x3d7 and fm2 == 0xfbaffffffff7d and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000045 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000042; op2val:0xbd7fbaffffffff7d; op3val:0x10000000000045; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x3d6 and fm2 == 0xf8bffffffffb9 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000024; op2val:0xbd6f8bffffffffb9; op3val:0x1000000000003a; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001a and fs2 == 1 and fe2 == 0x3d5 and fm2 == 0xe9bffffffffce and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000059 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000001a; op2val:0xbd5e9bffffffffce; op3val:0x10000000000059; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x3d4 and fm2 == 0xdefffffffff6e and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000042 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000004e; op2val:0xbd4defffffffff6e; op3val:0x10000000000042; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x3d3 and fm2 == 0xbefffffffff76 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000041 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000004f; op2val:0xbd3befffffffff76; op3val:0x10000000000041; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000039 and fs2 == 1 and fe2 == 0x3d2 and fm2 == 0xabfffffffffa1 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000002a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000039; op2val:0xbd2abfffffffffa1; op3val:0x1000000000002a; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000062 and fs2 == 1 and fe2 == 0x3d1 and fm2 == 0xdbfffffffff4a and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000062; op2val:0xbd1dbfffffffff4a; op3val:0x10000000000009; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000048 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0xdffffffffff79 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000004 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000048; op2val:0xbd0dffffffffff79; op3val:0x10000000000004; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x3cf and fm2 == 0x9ffffffffff96 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000041; op2val:0x3cf9ffffffffff96; op3val:0x1000000000003a; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000063 and fs2 == 1 and fe2 == 0x3cc and fm2 == 0x7ffffffffff6c and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000063; op2val:0xbcc7ffffffffff6c; op3val:0x1000000000000d; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x3cb and fm2 == 0xfffffffffffb8 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000006 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000024; op2val:0xbcbfffffffffffb8; op3val:0x10000000000006; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000020 and fs2 == 0 and fe2 == 0x3cf and fm2 == 0x4ffffffffffd6 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000019 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000020; op2val:0x3cf4ffffffffffd6; op3val:0x10000000000019; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x3cd and fm2 == 0x7ffffffffff94 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000008 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000048; op2val:0x3cd7ffffffffff94; op3val:0x10000000000008; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003e and fs2 == 0 and fe2 == 0x3ce and fm2 == 0x9ffffffffff9b and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000003e; op2val:0x3ce9ffffffffff9b; op3val:0x1000000000000e; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000044 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x00000001fffe0 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000048 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000044; op2val:0x40000000001fffe0; op3val:0x10000000000048; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x00000000fffca and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000043 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000058; op2val:0x40000000000fffca; op3val:0x10000000000043; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000008 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x000000008000d and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000002a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000008; op2val:0x400000000008000d; op3val:0x1000000000002a; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000010 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000040014 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000048 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000010; op2val:0x4000000000040014; op3val:0x10000000000048; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x000000001ffde and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000005d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000050; op2val:0x400000000001ffde; op3val:0x1000000000005d; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000013 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x000000001000b and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000013; op2val:0x400000000001000b; op3val:0x1000000000003d; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000014 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000007ff8 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000017 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000014; op2val:0x4000000000007ff8; op3val:0x10000000000017; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000003fb2 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000004e; op2val:0x4000000000003fb2; op3val:0x10000000000001; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000039 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000001fd3 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000018 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000039; op2val:0x4000000000001fd3; op3val:0x10000000000018; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000042 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000000fc0 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000042; op2val:0x4000000000000fc0; op3val:0x10000000000003; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000014 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x000000000080e and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000044 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000014; op2val:0x400000000000080e; op3val:0x10000000000044; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000000411 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000045 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000011; op2val:0x4000000000000411; op3val:0x10000000000045; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000036 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x00000000001ea and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000041 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000036; op2val:0x40000000000001ea; op3val:0x10000000000041; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x00000000000d7 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000043 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000004b; op2val:0x40000000000000d7; op3val:0x10000000000043; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x000000000006f and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000055 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000003b; op2val:0x400000000000006f; op3val:0x10000000000055; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffff0 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000005f; op2val:0x3ffffffffffffff0; op3val:0x1000000000002e; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000000013 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000008 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000011; op2val:0x4000000000000013; op3val:0x10000000000008; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000046 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffca and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000046; op2val:0x3fffffffffffffca; op3val:0x10000000000036; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffde and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000022 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000002a; op2val:0x3fffffffffffffde; op3val:0x10000000000022; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000062 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffff90 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000004c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000062; op2val:0x3fffffffffffff90; op3val:0x1000000000004c; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffa2 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000041; op2val:0x3fffffffffffffa2; op3val:0x1000000000001f; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffff0 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000001c; op2val:0x3ffffffffffffff0; op3val:0x10000000000026; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000004 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x000000000000d and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000021 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000004; op2val:0x400000000000000d; op3val:0x10000000000021; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x42e and fm2 == 0x47ae1475c28d1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x19; op2val:0xc2e47ae1475c28d1; op3val:0x1c; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 1 and fe2 == 0x42e and fm2 == 0xc71c71c38e329 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000038 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x12; op2val:0xc2ec71c71c38e329; op3val:0x38; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x42c and fm2 == 0xe1e1e1dffff49 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000060 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x44; op2val:0xc2ce1e1e1dffff49; op3val:0x60; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x861861855553e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54; op2val:0xc2c861861855553e; op3val:0xe; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x431 and fm2 == 0xffffffff7ff44 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2; op2val:0xc31ffffffff7ff44; op3val:0x5d; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000011 and fs2 == 1 and fe2 == 0x42e and fm2 == 0xe1e1e1e1a5a53 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x11; op2val:0xc2ee1e1e1e1a5a53; op3val:0x3; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000047 and fs2 == 1 and fe2 == 0x42c and fm2 == 0xcd8568901cd04 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000047 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x47; op2val:0xc2ccd8568901cd04; op3val:0x47; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x42d and fm2 == 0x6c16c16c0b5ee and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2d; op2val:0xc2d6c16c16c0b5ee; op3val:0x14; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003d and fs2 == 1 and fe2 == 0x42d and fm2 == 0x0c9714fbc96bb and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000055 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d; op2val:0xc2d0c9714fbc96bb; op3val:0x55; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x42c and fm2 == 0x9ec8e950fff82 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0xc2c9ec8e950fff82; op3val:0x4d; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x8618618616d98 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54; op2val:0xc2c8618618616d98; op3val:0x13; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004c and fs2 == 1 and fe2 == 0x42c and fm2 == 0xaf286bca1a148 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4c; op2val:0xc2caf286bca1a148; op3val:0x3c; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x430 and fm2 == 0xffffffffff7d6 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4; op2val:0xc30ffffffffff7d6; op3val:0x14; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x42e and fm2 == 0x745d1745d1443 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000011 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x16; op2val:0xc2e745d1745d1443; op3val:0x11; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x42c and fm2 == 0x6058160581487 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000015 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5d; op2val:0xc2c6058160581487; op3val:0x15; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000060 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x555555555549b and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x60; op2val:0xc2c555555555549b; op3val:0xb; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003c and fs2 == 1 and fe2 == 0x42d and fm2 == 0x1111111111094 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000034 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c; op2val:0xc2d1111111111094; op3val:0x34; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x42c and fm2 == 0x6058160581592 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000033 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5d; op2val:0xc2c6058160581592; op3val:0x33; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x42d and fm2 == 0x7d05f417d05c9 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2b; op2val:0xc2d7d05f417d05c9; op3val:0xc; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000038 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x249249249242a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000052 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x38; op2val:0xc2d249249249242a; op3val:0x52; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x42d and fm2 == 0x0842108421067 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000017 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e; op2val:0xc2d0842108421067; op3val:0x17; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000061 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x51d07eae2f7ef and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x61; op2val:0xc2c51d07eae2f7ef; op3val:0x1a; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x47ae147ae1403 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x32; op2val:0xc2d47ae147ae1403; op3val:0x5c; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x8181817b7b7ce and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x55; op2val:0x42c8181817b7b7ce; op3val:0x10; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x8acb90f3a9a47 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53; op2val:0x42c8acb90f3a9a47; op3val:0xb; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x86186184924d5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54; op2val:0x42c86186184924d5; op3val:0x2d; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x432 and fm2 == 0xffffffff0007a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1; op2val:0x432ffffffff0007a; op3val:0x3e; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x99999999333b0 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50; op2val:0x42c99999999333b0; op3val:0x4f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x42e and fm2 == 0x2f684bd9ed0e0 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1b; op2val:0x42e2f684bd9ed0e0; op3val:0x3e; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001a and fs2 == 0 and fe2 == 0x42e and fm2 == 0x3b13b13b00035 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1a; op2val:0x42e3b13b13b00035; op3val:0x2c; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x42e and fm2 == 0x11111111088c9 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1e; op2val:0x42e11111111088c9; op3val:0x3d; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x42e and fm2 == 0x1a7b9611a3506 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1d; op2val:0x42e1a7b9611a3506; op3val:0xe; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x42d and fm2 == 0x5c9882b92e4d2 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0x42d5c9882b92e4d2; op3val:0xb; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x42c and fm2 == 0x605816058003d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5d; op2val:0x42c605816058003d; op3val:0x2d; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 0 and fe2 == 0x42d and fm2 == 0x6c16c16c16107 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2d; op2val:0x42d6c16c16c16107; op3val:0x3a; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x702e05c0b7c1e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0x42c702e05c0b7c1e; op3val:0x4e; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 0 and fe2 == 0x42d and fm2 == 0xe1e1e1e1e1a88 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000019 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x22; op2val:0x42de1e1e1e1e1a88; op3val:0x19; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000024 and fs2 == 0 and fe2 == 0x42d and fm2 == 0xc71c71c71c5c0 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x24; op2val:0x42dc71c71c71c5c0; op3val:0x3d; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000004 and fs2 == 0 and fe2 == 0x430 and fm2 == 0xfffffffffff06 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000004 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4; op2val:0x430fffffffffff06; op3val:0x4; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x42d and fm2 == 0x642c8590b218d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2e; op2val:0x42d642c8590b218d; op3val:0x5e; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 0 and fe2 == 0x42c and fm2 == 0xe9131abf0b7a2 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000040 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x43; op2val:0x42ce9131abf0b7a2; op3val:0x40; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x42e and fm2 == 0x111111111111b and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1e; op2val:0x42e111111111111b; op3val:0x1a; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 0 and fe2 == 0x42d and fm2 == 0x3b13b13b13b7e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x34; op2val:0x42d3b13b13b13b7e; op3val:0x5f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 0 and fe2 == 0x42e and fm2 == 0x47ae147ae149c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x19; op2val:0x42e47ae147ae149c; op3val:0x1f; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004f and fs2 == 0 and fe2 == 0x42c and fm2 == 0x9ec8e95103473 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000062 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0x42c9ec8e95103473; op3val:0x62; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000052 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x8f9c18f9c1924 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x52; op2val:0x42c8f9c18f9c1924; op3val:0x1d; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 1 and fe2 == 0x40e and fm2 == 0xf81e372372372 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x41; op2val:0xc0ef81e372372372; op3val:0x2b; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000045 and fs2 == 1 and fe2 == 0x40d and fm2 == 0xdae2076b981db and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000046 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x45; op2val:0xc0ddae2076b981db; op3val:0x46; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000063 and fs2 == 1 and fe2 == 0x40c and fm2 == 0x4afb26c9b26ca and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x63; op2val:0xc0c4afb26c9b26ca; op3val:0x1d; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x40d and fm2 == 0x7454e8ba2e8ba and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x16; op2val:0xc0d7454e8ba2e8ba; op3val:0x2e; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x40a and fm2 == 0xe8fd226357e17 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x43; op2val:0xc0ae8fd226357e17; op3val:0x2f; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 1 and fe2 == 0x409 and fm2 == 0x6bff49f49f49f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000022 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5a; op2val:0xc096bff49f49f49f; op3val:0x22; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x8aba9a3784a06 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53; op2val:0xc088aba9a3784a06; op3val:0xc; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x407 and fm2 == 0xe152d2d2d2d2d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000027 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x44; op2val:0xc07e152d2d2d2d2d; op3val:0x27; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x40a and fm2 == 0xfcf8000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000062 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4; op2val:0xc0afcf8000000000; op3val:0x62; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x405 and fm2 == 0x6d142284508a1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000046 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xc056d142284508a1; op3val:0x46; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 1 and fe2 == 0x405 and fm2 == 0x5b10572620ae5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0xc055b10572620ae5; op3val:0x13; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x405 and fm2 == 0x257b425ed097b and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000044 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1b; op2val:0xc05257b425ed097b; op3val:0x44; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xe81e9131abf0b and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x43; op2val:0xc02e81e9131abf0b; op3val:0x3; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x61cc398730e62 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000015 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xc0161cc398730e62; op3val:0x15; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6f0f0f0f0f0f1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x22; op2val:0xc016f0f0f0f0f0f1; op3val:0x3e; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8ba2e8ba2e8ba and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2c; op2val:0xbfe8ba2e8ba2e8ba; op3val:0x5f; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000e and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b6db6db6db6e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000060 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xe; op2val:0x4001b6db6db6db6e; op3val:0x60; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x45d1745d1745d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xb; op2val:0xbff45d1745d1745d; op3val:0x13; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7bdef7bdef7be and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000028 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e; op2val:0x3fd7bdef7bdef7be; op3val:0x28; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc444444444444 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c; op2val:0x3fec444444444444; op3val:0x3e; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xeeeeeeeeeeeef and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xf; op2val:0x400eeeeeeeeeeeef; op3val:0x3f; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb47582192e29f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d; op2val:0x3fcb47582192e29f; op3val:0x10; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3483483483483 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4e; op2val:0x3fe3483483483483; op3val:0x2f; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x40f and fm2 == 0xf07d83e0f83e1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x21; op2val:0x40ff07d83e0f83e1; op3val:0x2d; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000014 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x999dc00000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000052 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x14; op2val:0x40f999dc00000000; op3val:0x52; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004f and fs2 == 0 and fe2 == 0x40c and fm2 == 0x9ecdf984dc5ac and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000031 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0x40c9ecdf984dc5ac; op3val:0x31; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000a and fs2 == 0 and fe2 == 0x40e and fm2 == 0x999f333333333 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xa; op2val:0x40e999f333333333; op3val:0x1b; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004f and fs2 == 0 and fe2 == 0x40a and fm2 == 0x9ecaefcc26e2d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000004 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0x40a9ecaefcc26e2d; op3val:0x4; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x40c and fm2 == 0x3b313b13b13b1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd; op2val:0x40c3b313b13b13b1; op3val:0x2f; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000014 and fs2 == 0 and fe2 == 0x40a and fm2 == 0x9a0999999999a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000045 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x14; op2val:0x40a9a0999999999a; op3val:0x45; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x40e and fm2 == 0x0094000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000049 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1; op2val:0x40e0094000000000; op3val:0x49; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x40a and fm2 == 0x24d6db6db6db7 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7; op2val:0x40a24d6db6db6db7; op3val:0xe; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x406 and fm2 == 0x77e8ba2e8ba2f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2c; op2val:0x40677e8ba2e8ba2f; op3val:0x4d; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000015 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x879e79e79e79e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x15; op2val:0x406879e79e79e79e; op3val:0xf; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x405 and fm2 == 0x3800000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000039 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1b; op2val:0x4053800000000000; op3val:0x39; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x4ae147ae147ae and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x19; op2val:0x4044ae147ae147ae; op3val:0x9; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x409d89d89d89e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000008 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x34; op2val:0x402409d89d89d89e; op3val:0x8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003e and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5def7bdef7bdf and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000052 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e; op2val:0x4015def7bdef7bdf; op3val:0x52; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x66e6e6e6e6e6e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x33; op2val:0x40066e6e6e6e6e6e; op3val:0xe; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x25a5a5a5a5a5a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000034 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x33; op2val:0x40025a5a5a5a5a5a; op3val:0x34; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2aaaaaaaaaaab and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000033 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x48; op2val:0x3ff2aaaaaaaaaaab; op3val:0x33; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc797dd49c3411 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000058 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3b; op2val:0x3ffc797dd49c3411; op3val:0x58; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x58ed2308158ed and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f; op2val:0x3fc58ed2308158ed; op3val:0x7; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1861861861862 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000057 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54; op2val:0x3ff1861861861862; op3val:0x57; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000042 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x41f07c1f07c1f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000050 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x42; op2val:0x3ff41f07c1f07c1f; op3val:0x50; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4f0f0f0f0f0f1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000059 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x11; op2val:0x4014f0f0f0f0f0f1; op3val:0x59; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x3e0 and fm2 == 0xfffeb7fffff6e and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000029 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000049; op2val:0xbe0fffeb7fffff6e; op3val:0x3f80000000000029; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000030 and fs2 == 1 and fe2 == 0x3df and fm2 == 0xfffb0ffffffa0 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000004f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000030; op2val:0xbdffffb0ffffffa0; op3val:0x3f8000000000004f; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x3de and fm2 == 0xfff75ffffff94 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000045 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000036; op2val:0xbdefff75ffffff94; op3val:0x3f80000000000045; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x3dd and fm2 == 0xfffb3fffffffe and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000001; op2val:0xbddfffb3fffffffe; op3val:0x3f80000000000013; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000022 and fs2 == 1 and fe2 == 0x3dc and fm2 == 0xffed7ffffffbc and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000025 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000022; op2val:0xbdcffed7ffffffbc; op3val:0x3f80000000000025; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004c and fs2 == 1 and fe2 == 0x3db and fm2 == 0xffe7fffffff68 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000018 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000004c; op2val:0xbdbffe7fffffff68; op3val:0x3f80000000000018; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x3da and fm2 == 0xff81ffffffffc and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000003f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000002; op2val:0xbdaff81ffffffffc; op3val:0x3f8000000000003f; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x3d9 and fm2 == 0xff87fffffff56 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000001e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000055; op2val:0xbd9ff87fffffff56; op3val:0x3f8000000000001e; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x3d8 and fm2 == 0xff0ffffffffd8 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000001e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000014; op2val:0xbd8ff0ffffffffd8; op3val:0x3f8000000000001e; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x3d7 and fm2 == 0xfe8ffffffffea and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000017 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000000b; op2val:0xbd7fe8ffffffffea; op3val:0x3f80000000000017; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x3d6 and fm2 == 0xfd7ffffffffc4 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000001e; op2val:0xbd6fd7ffffffffc4; op3val:0x3f80000000000014; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000058 and fs2 == 1 and fe2 == 0x3d5 and fm2 == 0xf3bffffffff54 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000031 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000058; op2val:0xbd5f3bffffffff54; op3val:0x3f80000000000031; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x3d4 and fm2 == 0xe8fffffffff99 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000036; op2val:0xbd4e8fffffffff99; op3val:0x3f8000000000002e; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x3d3 and fm2 == 0xa4fffffffffc5 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000005b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000024; op2val:0xbd3a4fffffffffc5; op3val:0x3f8000000000005b; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000038 and fs2 == 1 and fe2 == 0x3d2 and fm2 == 0x71fffffffffaf and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000047 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000038; op2val:0xbd271fffffffffaf; op3val:0x3f80000000000047; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x3d1 and fm2 == 0xb7fffffffffc2 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000024; op2val:0xbd1b7fffffffffc2; op3val:0x3f80000000000012; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000034 and fs2 == 0 and fe2 == 0x3cd and fm2 == 0xbffffffffffa5 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000047 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000034; op2val:0x3cdbffffffffffa5; op3val:0x3f80000000000047; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x3cf and fm2 == 0x9ffffffffffdc and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000016; op2val:0x3cf9ffffffffffdc; op3val:0x3f8000000000003a; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x3cd and fm2 == 0x3ffffffffffb0 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000040; op2val:0xbcd3ffffffffffb0; op3val:0x3f8000000000000b; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x3d0 and fm2 == 0x57fffffffffbb and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000033 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000033; op2val:0x3d057fffffffffbb; op3val:0x3f80000000000033; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x3cf and fm2 == 0xbffffffffff5a and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000020 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000005f; op2val:0x3cfbffffffffff5a; op3val:0x3f80000000000020; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000025 and fs2 == 0 and fe2 == 0x3ce and fm2 == 0xdffffffffffbb and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000011 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000025; op2val:0x3cedffffffffffbb; op3val:0x3f80000000000011; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0x87fffffffffd5 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000063 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000001c; op2val:0x3d187fffffffffd5; op3val:0x3f80000000000063; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x00000001fffc4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000008 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000040; op2val:0x40000000001fffc4; op3val:0x3ff0000000000008; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x00000000fffb9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000004f; op2val:0x40000000000fffb9; op3val:0x3ff000000000000f; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x400 and fm2 == 0x000000007ffdd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000016 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000002e; op2val:0x400000000007ffdd; op3val:0x3ff0000000000016; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000003 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x000000004001b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000003; op2val:0x400000000004001b; op3val:0x3ff000000000003c; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000056 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x000000001ffc0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000056; op2val:0x400000000001ffc0; op3val:0x3ff000000000002d; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x000000000ffbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000032 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000005c; op2val:0x400000000000ffbd; op3val:0x3ff0000000000032; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000007fd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000025 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000003a; op2val:0x4000000000007fd8; op3val:0x3ff0000000000025; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000003fe2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000058 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000004a; op2val:0x4000000000003fe2; op3val:0x3ff0000000000058; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000002002 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000053 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000028; op2val:0x4000000000002002; op3val:0x3ff0000000000053; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005e and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000000fcf and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000005a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000005e; op2val:0x4000000000000fcf; op3val:0x3ff000000000005a; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x00000000007fb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000008 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000009; op2val:0x40000000000007fb; op3val:0x3ff0000000000008; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x00000000003d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000056 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000005a; op2val:0x40000000000003d1; op3val:0x3ff0000000000056; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x00000000001fb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000023; op2val:0x40000000000001fb; op3val:0x3ff000000000003d; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x00000000000fd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000009; op2val:0x40000000000000fd; op3val:0x3ff000000000000c; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000000053 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000004b; op2val:0x4000000000000053; op3val:0x3ff000000000003b; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004d and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000000013 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000040 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000004d; op2val:0x4000000000000013; op3val:0x3ff0000000000040; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000059 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffba and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000059; op2val:0x3fffffffffffffba; op3val:0x3ff000000000002d; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffffa and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000029; op2val:0x3ffffffffffffffa; op3val:0x3ff000000000002c; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffca and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000004a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000048; op2val:0x3fffffffffffffca; op3val:0x3ff000000000004a; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x000000000002b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000062 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000000a; op2val:0x400000000000002b; op3val:0x3ff0000000000062; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000006 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000000027 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000056 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000006; op2val:0x4000000000000027; op3val:0x3ff0000000000056; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffba and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000003f; op2val:0x3fffffffffffffba; op3val:0x3ff0000000000036; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffbc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000002c; op2val:0x3fffffffffffffbc; op3val:0x3ff0000000000014; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x410 and fm2 == 0x745ae2e8ba2e9 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000061 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x16; op2val:0xc10745ae2e8ba2e9; op3val:0x61; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x40d and fm2 == 0xf078d9364d936 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x42; op2val:0xc0df078d9364d936; op3val:0x36; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000a and fs2 == 1 and fe2 == 0x40f and fm2 == 0x9998000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xa; op2val:0xc0f9998000000000; op3val:0x10; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000025 and fs2 == 1 and fe2 == 0x40c and fm2 == 0xbabeb3e45306f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x25; op2val:0xc0cbabeb3e45306f; op3val:0x4e; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x40a and fm2 == 0x5c84c415c9883 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5e; op2val:0xc0a5c84c415c9883; op3val:0x3a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x409 and fm2 == 0xffd4000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x40; op2val:0xc09ffd4000000000; op3val:0x2c; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x409 and fm2 == 0xa3aaaaaaaaaab and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000044 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x27; op2val:0xc09a3aaaaaaaaaab; op3val:0x44; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x40a and fm2 == 0x7385d1745d174 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xb; op2val:0xc0a7385d1745d174; op3val:0x4a; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 1 and fe2 == 0x406 and fm2 == 0x6b60b60b60b61 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000020 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5a; op2val:0xc066b60b60b60b61; op3val:0x20; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000020 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xfe80000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000018 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x20; op2val:0xc06fe80000000000; op3val:0x18; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 1 and fe2 == 0x405 and fm2 == 0x5946cefa8d9df and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000027 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0xc055946cefa8d9df; op3val:0x27; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004b and fs2 == 1 and fe2 == 0x403 and fm2 == 0xa851eb851eb85 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4b; op2val:0xc03a851eb851eb85; op3val:0x3b; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x7831f3831f383 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x29; op2val:0xc037831f3831f383; op3val:0x3c; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000045 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa7e2519f89468 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000037 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x45; op2val:0xc01a7e2519f89468; op3val:0x37; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000058 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x40; op2val:0xc005000000000000; op3val:0x58; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4333333333333 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50; op2val:0xbff4333333333333; op3val:0x1b; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x88c46231188c4 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000008 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x49; op2val:0xbfe88c46231188c4; op3val:0x8; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5c; op2val:0xbfd0000000000000; op3val:0x9; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0ec4ec4ec4ec5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000047 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd; op2val:0x4010ec4ec4ec4ec5; op3val:0x47; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x999999999999a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000030 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x19; op2val:0x3ff999999999999a; op3val:0x30; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0dd67c8a60dd6 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000052 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4a; op2val:0x3ff0dd67c8a60dd6; op3val:0x52; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000e and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4db6db6db6db7 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xe; op2val:0x4014db6db6db6db7; op3val:0x4b; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0ba2e8ba2e8ba and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000018 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x58; op2val:0x3fd0ba2e8ba2e8ba; op3val:0x18; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x999b666666666 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000048 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x28; op2val:0x40f999b666666666; op3val:0x48; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000010 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x0002500000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10; op2val:0x4100002500000000; op3val:0x4a; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000013 and fs2 == 0 and fe2 == 0x40e and fm2 == 0xaf2fca1af286c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000046 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x13; op2val:0x40eaf2fca1af286c; op3val:0x46; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x40c and fm2 == 0xaf33ca1af286c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x26; op2val:0x40caf33ca1af286c; op3val:0x36; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x40a and fm2 == 0xc72471c71c71c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x48; op2val:0x40ac72471c71c71c; op3val:0x12; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x40b and fm2 == 0x1a7ee58469ee6 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000006 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1d; op2val:0x40b1a7ee58469ee6; op3val:0x6; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x409 and fm2 == 0x414a0a0a0a0a1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x33; op2val:0x409414a0a0a0a0a1; op3val:0x7; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004a and fs2 == 0 and fe2 == 0x407 and fm2 == 0xbbd306eb3e453 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4a; op2val:0x407bbd306eb3e453; op3val:0x4b; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x406 and fm2 == 0xb51eb851eb852 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000008 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4b; op2val:0x406b51eb851eb852; op3val:0x8; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000051 and fs2 == 0 and fe2 == 0x405 and fm2 == 0x988b0fcd6e9e0 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000051 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x51; op2val:0x405988b0fcd6e9e0; op3val:0x51; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000010 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x01d0000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10; op2val:0x40701d0000000000; op3val:0x1d; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000008 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x0920000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000049 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x8; op2val:0x4070920000000000; op3val:0x49; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000047 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xe64f52edf8c9f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000037 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x47; op2val:0x402e64f52edf8c9f; op3val:0x37; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x0e739ce739ce7 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1f; op2val:0x4030e739ce739ce7; op3val:0xc; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x3a12f684bda13 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x36; op2val:0x4013a12f684bda13; op3val:0x9; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x402 and fm2 == 0xeaaaaaaaaaaab and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000038 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xc; op2val:0x402eaaaaaaaaaaab; op3val:0x38; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x400 and fm2 == 0x3b6db6db6db6e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000005 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1c; op2val:0x4003b6db6db6db6e; op3val:0x5; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000008 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8400000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000041 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x8; op2val:0x4028400000000000; op3val:0x41; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xefa8d9df51b3c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0x3ffefa8d9df51b3c; op3val:0x4b; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x37a6f4de9bd38 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x45; op2val:0x3fd37a6f4de9bd38; op3val:0xd; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7; op2val:0x4000000000000000; op3val:0xa; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xafafafafafafb and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000054 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x33; op2val:0x3ffafafafafafafb; op3val:0x54; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffff7fff84 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000002 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000003b; op2val:0xbfefffffff7fff84; op3val:0x7fe0000000000002; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000022 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffbfff9a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000022; op2val:0xbfefffffffbfff9a; op3val:0x7fe0000000000010; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 368, x18)

inst_278:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffff7ffa2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000022 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000000c; op2val:0xbfeffffffff7ffa2; op3val:0x7fe0000000000022; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 384, x18)

inst_279:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffbff54 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000052 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000003; op2val:0xbfeffffffffbff54; op3val:0x7fe0000000000052; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 400, x18)

inst_280:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffdffa4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000023 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000000a; op2val:0xbfeffffffffdffa4; op3val:0x7fe0000000000023; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_281:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000018 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffeff60 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000037 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000018; op2val:0xbfeffffffffeff60; op3val:0x7fe0000000000037; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 432, x18)

inst_282:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000008 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffff7f3c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000059 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000008; op2val:0xbfefffffffff7f3c; op3val:0x7fe0000000000059; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 448, x18)

inst_283:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffbf9e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000024 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000000c; op2val:0xbfefffffffffbf9e; op3val:0x7fe0000000000024; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 464, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x2a
.dword 0x3fe0000000000000
.dword 0x14
.dword 0x7fe000000000003b
.dword 0xbfefffffff7fff84
.dword 0x7fe000000000003b
.dword 0x7fe0000000000022
.dword 0xbfefffffffbfff9a
.dword 0xbfefffffffbfff9a
.dword 0x7fe000000000001d
.dword 0xbfefffffffdfffb2
.dword 0x7fe0000000000009
.dword 0x7fe000000000000b
.dword 0xbfefffffffefff4c
.dword 0x7fe000000000004e
.dword 0x7fe000000000000c
.dword 0x7fe000000000000c
.dword 0x7fe0000000000022
.dword 0x7fe0000000000003
.dword 0xbfeffffffffbff54
.dword 0x7fe0000000000003
.dword 0x7fe000000000000a
.dword 0xbfeffffffffdffa4
.dword 0xbfeffffffffdffa4
.dword 0x7fe0000000000018
.dword 0x7fe0000000000018
.dword 0x7fe0000000000018
.dword 0x7fe0000000000008
.dword 0x7fe0000000000008
.dword 0x7fe0000000000008
.dword 0x7fe000000000000c
.dword 0x7fe000000000000c
.dword 0x7fe0000000000024
.dword 0x7fe000000000005a
.dword 0xbfefffffffffdef6
.dword 0x7fe000000000002a
.dword 0x7fe000000000004a
.dword 0xbfefffffffffeeea
.dword 0x7fe0000000000040
.dword 0x7fe0000000000045
.dword 0xbfeffffffffff6f0
.dword 0x7fe0000000000042
.dword 0x7fe0000000000034
.dword 0xbfeffffffffffb6e
.dword 0x7fe0000000000014
.dword 0x7fe0000000000057
.dword 0xbfeffffffffffd0c
.dword 0x7fe0000000000022
.dword 0x7fe0000000000011
.dword 0xbfeffffffffffe6e
.dword 0x7fe0000000000037
.dword 0x7fe0000000000023
.dword 0xbfeffffffffffe76
.dword 0x7fe0000000000061
.dword 0x7fe0000000000006
.dword 0xbfefffffffffff82
.dword 0x7fe0000000000018
.dword 0x7fe0000000000022
.dword 0xbfefffffffffff54
.dword 0x7fe0000000000023
.dword 0x7fe000000000000e
.dword 0xbfefffffffffffbc
.dword 0x7fe000000000000b
.dword 0x7fe000000000000f
.dword 0xbfefffffffffff9c
.dword 0x7fe000000000001e
.dword 0x7fe0000000000042
.dword 0xbfefffffffffff64
.dword 0x7fe0000000000009
.dword 0x7fe0000000000050
.dword 0xbfefffffffffff10
.dword 0x7fe0000000000026
.dword 0x7fe000000000002b
.dword 0x7ff0000000000000
.dword 0x7fe0000000000043
.dword 0x7fe0000000000003
.dword 0x7ff0000000000000
.dword 0x7fe0000000000032
.dword 0x7fe0000000000039
.dword 0x7ff0000000000000
.dword 0x7fe000000000005b
.dword 0x7fe0000000000047
.dword 0x7ff0000000000000
.dword 0x7fe000000000003b
.dword 0x7fe0000000000003
.dword 0x7ff0000000000000
.dword 0x7fe000000000002c
.dword 0x7fe000000000005d
.dword 0x7ff0000000000000
.dword 0x7fe000000000002f
.dword 0x7fe0000000000029
.dword 0x7ff0000000000000
.dword 0x7fe000000000000c
.dword 0x7fe000000000001a
.dword 0x7ff0000000000000
.dword 0x7fe000000000002e
.dword 0x7fe000000000002c
.dword 0x7ff0000000000000
.dword 0x7fe0000000000036
.dword 0x7fe0000000000042
.dword 0x7ff0000000000000
.dword 0x7fe0000000000034
.dword 0x7fe000000000005b
.dword 0x7ff0000000000000
.dword 0x7fe0000000000038
.dword 0x7fe000000000001d
.dword 0x7ff0000000000000
.dword 0x7fe0000000000015
.dword 0x7fe0000000000015
.dword 0x7ff0000000000000
.dword 0x7fe0000000000056
.dword 0x7fe0000000000033
.dword 0x7ff0000000000000
.dword 0x7fe000000000003f
.dword 0x7fe0000000000060
.dword 0x7ff0000000000000
.dword 0x7fe000000000000d
.dword 0x7fe000000000003c
.dword 0x7ff0000000000000
.dword 0x7fe000000000001d
.dword 0x7fe0000000000021
.dword 0x7ff0000000000000
.dword 0x7fe0000000000012
.dword 0x7fe000000000002f
.dword 0x7ff0000000000000
.dword 0x7fe0000000000013
.dword 0x7fe0000000000053
.dword 0x7ff0000000000000
.dword 0x7fe0000000000055
.dword 0x7fe0000000000014
.dword 0x7ff0000000000000
.dword 0x7fe000000000005c
.dword 0x7fe0000000000027
.dword 0x7ff0000000000000
.dword 0x7fe0000000000010
.dword 0x7fe000000000001c
.dword 0x7ff0000000000000
.dword 0x7fe0000000000056
.dword 0x7fe0000000000037
.dword 0x7ff0000000000000
.dword 0x7fe000000000000a
.dword 0x10000000000056
.dword 0xbe0ffff07fffff54
.dword 0x1000000000001f
.dword 0x10000000000029
.dword 0xbdfffff5ffffffae
.dword 0x1000000000000a
.dword 0x10000000000033
.dword 0xbdefff8dffffff9a
.dword 0x10000000000039
.dword 0x10000000000036
.dword 0xbddfffbfffffff94
.dword 0x10000000000010
.dword 0x1000000000003a
.dword 0xbdcfff6fffffff8c
.dword 0x10000000000012
.dword 0x10000000000048
.dword 0xbdbffe5fffffff70
.dword 0x1000000000001a
.dword 0x10000000000043
.dword 0xbdaffbbfffffff7a
.dword 0x10000000000022
.dword 0x10000000000020
.dword 0xbd9fe97fffffffc0
.dword 0x1000000000005a
.dword 0x1000000000003e
.dword 0xbd8fdf7fffffff84
.dword 0x10000000000041
.dword 0x10000000000042
.dword 0xbd7fbaffffffff7d
.dword 0x10000000000045
.dword 0x10000000000024
.dword 0xbd6f8bffffffffb9
.dword 0x1000000000003a
.dword 0x1000000000001a
.dword 0xbd5e9bffffffffce
.dword 0x10000000000059
.dword 0x1000000000004e
.dword 0xbd4defffffffff6e
.dword 0x10000000000042
.dword 0x1000000000004f
.dword 0xbd3befffffffff76
.dword 0x10000000000041
.dword 0x10000000000039
.dword 0xbd2abfffffffffa1
.dword 0x1000000000002a
.dword 0x10000000000062
.dword 0xbd1dbfffffffff4a
.dword 0x10000000000009
.dword 0x10000000000048
.dword 0xbd0dffffffffff79
.dword 0x10000000000004
.dword 0x10000000000041
.dword 0x3cf9ffffffffff96
.dword 0x1000000000003a
.dword 0x10000000000063
.dword 0xbcc7ffffffffff6c
.dword 0x1000000000000d
.dword 0x10000000000024
.dword 0xbcbfffffffffffb8
.dword 0x10000000000006
.dword 0x10000000000020
.dword 0x3cf4ffffffffffd6
.dword 0x10000000000019
.dword 0x10000000000048
.dword 0x3cd7ffffffffff94
.dword 0x10000000000008
.dword 0x1000000000003e
.dword 0x3ce9ffffffffff9b
.dword 0x1000000000000e
.dword 0x10000000000044
.dword 0x40000000001fffe0
.dword 0x10000000000048
.dword 0x10000000000058
.dword 0x40000000000fffca
.dword 0x10000000000043
.dword 0x10000000000008
.dword 0x400000000008000d
.dword 0x1000000000002a
.dword 0x10000000000010
.dword 0x4000000000040014
.dword 0x10000000000048
.dword 0x10000000000050
.dword 0x400000000001ffde
.dword 0x1000000000005d
.dword 0x10000000000013
.dword 0x400000000001000b
.dword 0x1000000000003d
.dword 0x10000000000014
.dword 0x4000000000007ff8
.dword 0x10000000000017
.dword 0x1000000000004e
.dword 0x4000000000003fb2
.dword 0x10000000000001
.dword 0x10000000000039
.dword 0x4000000000001fd3
.dword 0x10000000000018
.dword 0x10000000000042
.dword 0x4000000000000fc0
.dword 0x10000000000003
.dword 0x10000000000014
.dword 0x400000000000080e
.dword 0x10000000000044
.dword 0x10000000000011
.dword 0x4000000000000411
.dword 0x10000000000045
.dword 0x10000000000036
.dword 0x40000000000001ea
.dword 0x10000000000041
.dword 0x1000000000004b
.dword 0x40000000000000d7
.dword 0x10000000000043
.dword 0x1000000000003b
.dword 0x400000000000006f
.dword 0x10000000000055
.dword 0x1000000000005f
.dword 0x3ffffffffffffff0
.dword 0x1000000000002e
.dword 0x10000000000011
.dword 0x4000000000000013
.dword 0x10000000000008
.dword 0x10000000000046
.dword 0x3fffffffffffffca
.dword 0x10000000000036
.dword 0x1000000000002a
.dword 0x3fffffffffffffde
.dword 0x10000000000022
.dword 0x10000000000062
.dword 0x3fffffffffffff90
.dword 0x1000000000004c
.dword 0x10000000000041
.dword 0x3fffffffffffffa2
.dword 0x1000000000001f
.dword 0x1000000000001c
.dword 0x3ffffffffffffff0
.dword 0x10000000000026
.dword 0x10000000000004
.dword 0x400000000000000d
.dword 0x10000000000021
.dword 0x19
.dword 0xc2e47ae1475c28d1
.dword 0x1c
.dword 0x12
.dword 0xc2ec71c71c38e329
.dword 0x38
.dword 0x44
.dword 0xc2ce1e1e1dffff49
.dword 0x60
.dword 0x54
.dword 0xc2c861861855553e
.dword 0xe
.dword 0x2
.dword 0xc31ffffffff7ff44
.dword 0x5d
.dword 0x11
.dword 0xc2ee1e1e1e1a5a53
.dword 0x3
.dword 0x47
.dword 0xc2ccd8568901cd04
.dword 0x47
.dword 0x2d
.dword 0xc2d6c16c16c0b5ee
.dword 0x14
.dword 0x3d
.dword 0xc2d0c9714fbc96bb
.dword 0x55
.dword 0x4f
.dword 0xc2c9ec8e950fff82
.dword 0x4d
.dword 0x54
.dword 0xc2c8618618616d98
.dword 0x13
.dword 0x4c
.dword 0xc2caf286bca1a148
.dword 0x3c
.dword 0x4
.dword 0xc30ffffffffff7d6
.dword 0x14
.dword 0x16
.dword 0xc2e745d1745d1443
.dword 0x11
.dword 0x5d
.dword 0xc2c6058160581487
.dword 0x15
.dword 0x60
.dword 0xc2c555555555549b
.dword 0xb
.dword 0x3c
.dword 0xc2d1111111111094
.dword 0x34
.dword 0x5d
.dword 0xc2c6058160581592
.dword 0x33
.dword 0x2b
.dword 0xc2d7d05f417d05c9
.dword 0xc
.dword 0x38
.dword 0xc2d249249249242a
.dword 0x52
.dword 0x3e
.dword 0xc2d0842108421067
.dword 0x17
.dword 0x61
.dword 0xc2c51d07eae2f7ef
.dword 0x1a
.dword 0x32
.dword 0xc2d47ae147ae1403
.dword 0x5c
.dword 0x55
.dword 0x42c8181817b7b7ce
.dword 0x10
.dword 0x53
.dword 0x42c8acb90f3a9a47
.dword 0xb
.dword 0x54
.dword 0x42c86186184924d5
.dword 0x2d
.dword 0x1
.dword 0x432ffffffff0007a
.dword 0x3e
.dword 0x50
.dword 0x42c99999999333b0
.dword 0x4f
.dword 0x1b
.dword 0x42e2f684bd9ed0e0
.dword 0x3e
.dword 0x1a
.dword 0x42e3b13b13b00035
.dword 0x2c
.dword 0x1e
.dword 0x42e11111111088c9
.dword 0x3d
.dword 0x1d
.dword 0x42e1a7b9611a3506
.dword 0xe
.dword 0x2f
.dword 0x42d5c9882b92e4d2
.dword 0xb
.dword 0x5d
.dword 0x42c605816058003d
.dword 0x2d
.dword 0x2d
.dword 0x42d6c16c16c16107
.dword 0x3a
.dword 0x59
.dword 0x42c702e05c0b7c1e
.dword 0x4e
.dword 0x22
.dword 0x42de1e1e1e1e1a88
.dword 0x19
.dword 0x24
.dword 0x42dc71c71c71c5c0
.dword 0x3d
.dword 0x4
.dword 0x430fffffffffff06
.dword 0x4
.dword 0x2e
.dword 0x42d642c8590b218d
.dword 0x5e
.dword 0x43
.dword 0x42ce9131abf0b7a2
.dword 0x40
.dword 0x1e
.dword 0x42e111111111111b
.dword 0x1a
.dword 0x34
.dword 0x42d3b13b13b13b7e
.dword 0x5f
.dword 0x19
.dword 0x42e47ae147ae149c
.dword 0x1f
.dword 0x4f
.dword 0x42c9ec8e95103473
.dword 0x62
.dword 0x52
.dword 0x42c8f9c18f9c1924
.dword 0x1d
.dword 0x41
.dword 0xc0ef81e372372372
.dword 0x2b
.dword 0x45
.dword 0xc0ddae2076b981db
.dword 0x46
.dword 0x63
.dword 0xc0c4afb26c9b26ca
.dword 0x1d
.dword 0x16
.dword 0xc0d7454e8ba2e8ba
.dword 0x2e
.dword 0x43
.dword 0xc0ae8fd226357e17
.dword 0x2f
.dword 0x5a
.dword 0xc096bff49f49f49f
.dword 0x22
.dword 0x53
.dword 0xc088aba9a3784a06
.dword 0xc
.dword 0x44
.dword 0xc07e152d2d2d2d2d
.dword 0x27
.dword 0x4
.dword 0xc0afcf8000000000
.dword 0x62
.dword 0x59
.dword 0xc056d142284508a1
.dword 0x46
.dword 0x2f
.dword 0xc055b10572620ae5
.dword 0x13
.dword 0x1b
.dword 0xc05257b425ed097b
.dword 0x44
.dword 0x43
.dword 0xc02e81e9131abf0b
.dword 0x3
.dword 0x59
.dword 0xc0161cc398730e62
.dword 0x15
.dword 0x22
.dword 0xc016f0f0f0f0f0f1
.dword 0x3e
.dword 0x2c
.dword 0xbfe8ba2e8ba2e8ba
.dword 0x5f
.dword 0xe
.dword 0x4001b6db6db6db6e
.dword 0x60
.dword 0xb
.dword 0xbff45d1745d1745d
.dword 0x13
.dword 0x3e
.dword 0x3fd7bdef7bdef7be
.dword 0x28
.dword 0x3c
.dword 0x3fec444444444444
.dword 0x3e
.dword 0xf
.dword 0x400eeeeeeeeeeeef
.dword 0x3f
.dword 0x3d
.dword 0x3fcb47582192e29f
.dword 0x10
.dword 0x4e
.dword 0x3fe3483483483483
.dword 0x2f
.dword 0x21
.dword 0x40ff07d83e0f83e1
.dword 0x2d
.dword 0x14
.dword 0x40f999dc00000000
.dword 0x52
.dword 0x4f
.dword 0x40c9ecdf984dc5ac
.dword 0x31
.dword 0xa
.dword 0x40e999f333333333
.dword 0x1b
.dword 0x4f
.dword 0x40a9ecaefcc26e2d
.dword 0x4
.dword 0xd
.dword 0x40c3b313b13b13b1
.dword 0x2f
.dword 0x14
.dword 0x40a9a0999999999a
.dword 0x45
.dword 0x1
.dword 0x40e0094000000000
.dword 0x49
.dword 0x7
.dword 0x40a24d6db6db6db7
.dword 0xe
.dword 0x2c
.dword 0x40677e8ba2e8ba2f
.dword 0x4d
.dword 0x15
.dword 0x406879e79e79e79e
.dword 0xf
.dword 0x1b
.dword 0x4053800000000000
.dword 0x39
.dword 0x19
.dword 0x4044ae147ae147ae
.dword 0x9
.dword 0x34
.dword 0x402409d89d89d89e
.dword 0x8
.dword 0x3e
.dword 0x4015def7bdef7bdf
.dword 0x52
.dword 0x33
.dword 0x40066e6e6e6e6e6e
.dword 0xe
.dword 0x33
.dword 0x40025a5a5a5a5a5a
.dword 0x34
.dword 0x48
.dword 0x3ff2aaaaaaaaaaab
.dword 0x33
.dword 0x3b
.dword 0x3ffc797dd49c3411
.dword 0x58
.dword 0x5f
.dword 0x3fc58ed2308158ed
.dword 0x7
.dword 0x54
.dword 0x3ff1861861861862
.dword 0x57
.dword 0x42
.dword 0x3ff41f07c1f07c1f
.dword 0x50
.dword 0x11
.dword 0x4014f0f0f0f0f0f1
.dword 0x59
.dword 0x3f80000000000049
.dword 0xbe0fffeb7fffff6e
.dword 0x3f80000000000029
.dword 0x3f80000000000030
.dword 0xbdffffb0ffffffa0
.dword 0x3f8000000000004f
.dword 0x3f80000000000036
.dword 0xbdefff75ffffff94
.dword 0x3f80000000000045
.dword 0x3f80000000000001
.dword 0xbddfffb3fffffffe
.dword 0x3f80000000000013
.dword 0x3f80000000000022
.dword 0xbdcffed7ffffffbc
.dword 0x3f80000000000025
.dword 0x3f8000000000004c
.dword 0xbdbffe7fffffff68
.dword 0x3f80000000000018
.dword 0x3f80000000000002
.dword 0xbdaff81ffffffffc
.dword 0x3f8000000000003f
.dword 0x3f80000000000055
.dword 0xbd9ff87fffffff56
.dword 0x3f8000000000001e
.dword 0x3f80000000000014
.dword 0xbd8ff0ffffffffd8
.dword 0x3f8000000000001e
.dword 0x3f8000000000000b
.dword 0xbd7fe8ffffffffea
.dword 0x3f80000000000017
.dword 0x3f8000000000001e
.dword 0xbd6fd7ffffffffc4
.dword 0x3f80000000000014
.dword 0x3f80000000000058
.dword 0xbd5f3bffffffff54
.dword 0x3f80000000000031
.dword 0x3f80000000000036
.dword 0xbd4e8fffffffff99
.dword 0x3f8000000000002e
.dword 0x3f80000000000024
.dword 0xbd3a4fffffffffc5
.dword 0x3f8000000000005b
.dword 0x3f80000000000038
.dword 0xbd271fffffffffaf
.dword 0x3f80000000000047
.dword 0x3f80000000000024
.dword 0xbd1b7fffffffffc2
.dword 0x3f80000000000012
.dword 0x3f80000000000034
.dword 0x3cdbffffffffffa5
.dword 0x3f80000000000047
.dword 0x3f80000000000016
.dword 0x3cf9ffffffffffdc
.dword 0x3f8000000000003a
.dword 0x3f80000000000040
.dword 0xbcd3ffffffffffb0
.dword 0x3f8000000000000b
.dword 0x3f80000000000033
.dword 0x3d057fffffffffbb
.dword 0x3f80000000000033
.dword 0x3f8000000000005f
.dword 0x3cfbffffffffff5a
.dword 0x3f80000000000020
.dword 0x3f80000000000025
.dword 0x3cedffffffffffbb
.dword 0x3f80000000000011
.dword 0x3f8000000000001c
.dword 0x3d187fffffffffd5
.dword 0x3f80000000000063
.dword 0x3ff0000000000040
.dword 0x40000000001fffc4
.dword 0x3ff0000000000008
.dword 0x3ff000000000004f
.dword 0x40000000000fffb9
.dword 0x3ff000000000000f
.dword 0x3ff000000000002e
.dword 0x400000000007ffdd
.dword 0x3ff0000000000016
.dword 0x3ff0000000000003
.dword 0x400000000004001b
.dword 0x3ff000000000003c
.dword 0x3ff0000000000056
.dword 0x400000000001ffc0
.dword 0x3ff000000000002d
.dword 0x3ff000000000005c
.dword 0x400000000000ffbd
.dword 0x3ff0000000000032
.dword 0x3ff000000000003a
.dword 0x4000000000007fd8
.dword 0x3ff0000000000025
.dword 0x3ff000000000004a
.dword 0x4000000000003fe2
.dword 0x3ff0000000000058
.dword 0x3ff0000000000028
.dword 0x4000000000002002
.dword 0x3ff0000000000053
.dword 0x3ff000000000005e
.dword 0x4000000000000fcf
.dword 0x3ff000000000005a
.dword 0x3ff0000000000009
.dword 0x40000000000007fb
.dword 0x3ff0000000000008
.dword 0x3ff000000000005a
.dword 0x40000000000003d1
.dword 0x3ff0000000000056
.dword 0x3ff0000000000023
.dword 0x40000000000001fb
.dword 0x3ff000000000003d
.dword 0x3ff0000000000009
.dword 0x40000000000000fd
.dword 0x3ff000000000000c
.dword 0x3ff000000000004b
.dword 0x4000000000000053
.dword 0x3ff000000000003b
.dword 0x3ff000000000004d
.dword 0x4000000000000013
.dword 0x3ff0000000000040
.dword 0x3ff0000000000059
.dword 0x3fffffffffffffba
.dword 0x3ff000000000002d
.dword 0x3ff0000000000029
.dword 0x3ffffffffffffffa
.dword 0x3ff000000000002c
.dword 0x3ff0000000000048
.dword 0x3fffffffffffffca
.dword 0x3ff000000000004a
.dword 0x3ff000000000000a
.dword 0x400000000000002b
.dword 0x3ff0000000000062
.dword 0x3ff0000000000006
.dword 0x4000000000000027
.dword 0x3ff0000000000056
.dword 0x3ff000000000003f
.dword 0x3fffffffffffffba
.dword 0x3ff0000000000036
.dword 0x3ff000000000002c
.dword 0x3fffffffffffffbc
.dword 0x3ff0000000000014
.dword 0x16
.dword 0xc10745ae2e8ba2e9
.dword 0x61
.dword 0x42
.dword 0xc0df078d9364d936
.dword 0x36
.dword 0xa
.dword 0xc0f9998000000000
.dword 0x10
.dword 0x25
.dword 0xc0cbabeb3e45306f
.dword 0x4e
.dword 0x5e
.dword 0xc0a5c84c415c9883
.dword 0x3a
.dword 0x40
.dword 0xc09ffd4000000000
.dword 0x2c
.dword 0x27
.dword 0xc09a3aaaaaaaaaab
.dword 0x44
.dword 0xb
.dword 0xc0a7385d1745d174
.dword 0x4a
.dword 0x5a
.dword 0xc066b60b60b60b61
.dword 0x20
.dword 0x20
.dword 0xc06fe80000000000
.dword 0x18
.dword 0x2f
.dword 0xc055946cefa8d9df
.dword 0x27
.dword 0x4b
.dword 0xc03a851eb851eb85
.dword 0x3b
.dword 0x29
.dword 0xc037831f3831f383
.dword 0x3c
.dword 0x45
.dword 0xc01a7e2519f89468
.dword 0x37
.dword 0x40
.dword 0xc005000000000000
.dword 0x58
.dword 0x50
.dword 0xbff4333333333333
.dword 0x1b
.dword 0x49
.dword 0xbfe88c46231188c4
.dword 0x8
.dword 0x5c
.dword 0xbfd0000000000000
.dword 0x9
.dword 0xd
.dword 0x4010ec4ec4ec4ec5
.dword 0x47
.dword 0x19
.dword 0x3ff999999999999a
.dword 0x30
.dword 0x4a
.dword 0x3ff0dd67c8a60dd6
.dword 0x52
.dword 0xe
.dword 0x4014db6db6db6db7
.dword 0x4b
.dword 0x58
.dword 0x3fd0ba2e8ba2e8ba
.dword 0x18
.dword 0x28
.dword 0x40f999b666666666
.dword 0x48
.dword 0x10
.dword 0x4100002500000000
.dword 0x4a
.dword 0x13
.dword 0x40eaf2fca1af286c
.dword 0x46
.dword 0x26
.dword 0x40caf33ca1af286c
.dword 0x36
.dword 0x48
.dword 0x40ac72471c71c71c
.dword 0x12
.dword 0x1d
.dword 0x40b1a7ee58469ee6
.dword 0x6
.dword 0x33
.dword 0x409414a0a0a0a0a1
.dword 0x7
.dword 0x4a
.dword 0x407bbd306eb3e453
.dword 0x4b
.dword 0x4b
.dword 0x406b51eb851eb852
.dword 0x8
.dword 0x51
.dword 0x405988b0fcd6e9e0
.dword 0x51
.dword 0x10
.dword 0x40701d0000000000
.dword 0x1d
.dword 0x8
.dword 0x4070920000000000
.dword 0x49
.dword 0x47
.dword 0x402e64f52edf8c9f
.dword 0x37
.dword 0x1f
.dword 0x4030e739ce739ce7
.dword 0xc
.dword 0x36
.dword 0x4013a12f684bda13
.dword 0x9
.dword 0xc
.dword 0x402eaaaaaaaaaaab
.dword 0x38
.dword 0x1c
.dword 0x4003b6db6db6db6e
.dword 0x5
.dword 0x8
.dword 0x4028400000000000
.dword 0x41
.dword 0x2f
.dword 0x3ffefa8d9df51b3c
.dword 0x4b
.dword 0x45
.dword 0x3fd37a6f4de9bd38
.dword 0xd
.dword 0x7
.dword 0x4000000000000000
.dword 0xa
.dword 0x33
.dword 0x3ffafafafafafafb
.dword 0x54
.dword 0x7fe000000000003b
.dword 0xbfefffffff7fff84
.dword 0x7fe0000000000002
.dword 0x7fe0000000000022
.dword 0xbfefffffffbfff9a
.dword 0x7fe0000000000010
.dword 0x7fe000000000000c
.dword 0xbfeffffffff7ffa2
.dword 0x7fe0000000000022
.dword 0x7fe0000000000003
.dword 0xbfeffffffffbff54
.dword 0x7fe0000000000052
.dword 0x7fe000000000000a
.dword 0xbfeffffffffdffa4
.dword 0x7fe0000000000023
.dword 0x7fe0000000000018
.dword 0xbfeffffffffeff60
.dword 0x7fe0000000000037
.dword 0x7fe0000000000008
.dword 0xbfefffffffff7f3c
.dword 0x7fe0000000000059
.dword 0x7fe000000000000c
.dword 0xbfefffffffffbf9e
.dword 0x7fe0000000000024
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 60*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
