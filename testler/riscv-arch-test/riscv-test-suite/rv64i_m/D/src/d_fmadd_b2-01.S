
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:52:58 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmadd1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V FD extension for the fmadd_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmadd_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f24, rs2==f0, rs3==f0, rd==f25, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x999999999999a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000021 and rm_val == 0  
// opcode: fmadd.d ; op1:f24; op2:f0; op3:f0; dest:f25; op1val:0x50; op2val:0xbfd999999999999a; op3val:0xbfd999999999999a; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f25, f24, f0, f0, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rs3 == rd, rs1==f19, rs2==f19, rs3==f19, rd==f19, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000060 and rm_val == 0  
// opcode: fmadd.d ; op1:f19; op2:f19; op3:f19; dest:f19; op1val:0x7fe0000000000031; op2val:0x7fe0000000000031; op3val:0x7fe0000000000031; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f19, f19, f19, f19, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f25, rs2==f27, rs3==f17, rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000055 and rm_val == 0  
// opcode: fmadd.d ; op1:f25; op2:f27; op3:f17; dest:f29; op1val:0x7fe000000000000e; op2val:0xfff0000000000000; op3val:0x7fe0000000000055; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f29, f25, f27, f17, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f6, rs2==f15, rs3==f6, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000048 and rm_val == 0  
// opcode: fmadd.d ; op1:f6; op2:f15; op3:f6; dest:f0; op1val:0x7fe0000000000006; op2val:0xfff0000000000000; op3val:0x7fe0000000000006; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f0, f6, f15, f6, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f9, rs2==f9, rs3==f5, rd==f10, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000001c and rm_val == 0  
// opcode: fmadd.d ; op1:f9; op2:f9; op3:f5; dest:f10; op1val:0x7fe0000000000050; op2val:0x7fe0000000000050; op3val:0x7fe000000000001c; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f10, f9, f9, f5, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f11, rs2==f18, rs3==f18, rd==f18, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000015 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fmadd.d ; op1:f11; op2:f18; op3:f18; dest:f18; op1val:0x7fe0000000000015; op2val:0xfff0000000000000; op3val:0xfff0000000000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f18, f11, f18, f18, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f10, rs2==f10, rs3==f10, rd==f22, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000018 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000035 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f10; op3:f10; dest:f22; op1val:0x7fe0000000000018; op2val:0x7fe0000000000018; op3val:0x7fe0000000000018; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f22, f10, f10, f10, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f28, rs2==f4, rs3==f23, rd==f28, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000018 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000004f and rm_val == 0  
// opcode: fmadd.d ; op1:f28; op2:f4; op3:f23; dest:f28; op1val:0x7fe0000000000018; op2val:0xfff0000000000000; op3val:0x7fe000000000004f; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f28, f28, f4, f23, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f23, rs2==f25, rs3==f3, rd==f3, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000039 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fmadd.d ; op1:f23; op2:f25; op3:f3; dest:f3; op1val:0x7fe0000000000039; op2val:0xfff0000000000000; op3val:0x7fe0000000000014; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f3, f23, f25, f3, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rd == rs3 != rs2, rs1==f16, rs2==f11, rs3==f16, rd==f16, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000005b and rm_val == 0  
// opcode: fmadd.d ; op1:f16; op2:f11; op3:f16; dest:f16; op1val:0x7fe0000000000026; op2val:0xfff0000000000000; op3val:0x7fe0000000000026; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f16, f16, f11, f16, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f18, rs2==f24, rs3==f12, rd==f24, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fmadd.d ; op1:f18; op2:f24; op3:f12; dest:f24; op1val:0x7fe000000000005c; op2val:0xfff0000000000000; op3val:0x7fe0000000000012; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f24, f18, f24, f12, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs1 == rs2 == rd != rs3, rs1==f8, rs2==f8, rs3==f31, rd==f8, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000f and rm_val == 0  
// opcode: fmadd.d ; op1:f8; op2:f8; op3:f31; dest:f8; op1val:0x7fe0000000000053; op2val:0x7fe0000000000053; op3val:0x7fe000000000000f; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f8, f8, f8, f31, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f21, rs2==f3, rs3==f24, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001d and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000004f and rm_val == 0  
// opcode: fmadd.d ; op1:f21; op2:f3; op3:f24; dest:f1; op1val:0x7fe000000000001d; op2val:0xfff0000000000000; op3val:0x7fe000000000004f; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f1, f21, f3, f24, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f30, rs2==f1, rs3==f15, rd==f6, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fmadd.d ; op1:f30; op2:f1; op3:f15; dest:f6; op1val:0x7fe0000000000010; op2val:0xfff0000000000000; op3val:0x7fe0000000000010; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f6, f30, f1, f15, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f0, rs2==f16, rs3==f20, rd==f5, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000007 and rm_val == 0  
// opcode: fmadd.d ; op1:f0; op2:f16; op3:f20; dest:f5; op1val:0x7fe000000000003f; op2val:0xfff0000000000000; op3val:0x7fe0000000000007; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f5, f0, f16, f20, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f14, rs2==f21, rs3==f4, rd==f9, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000005a and rm_val == 0  
// opcode: fmadd.d ; op1:f14; op2:f21; op3:f4; dest:f9; op1val:0x7fe0000000000034; op2val:0xfff0000000000000; op3val:0x7fe000000000005a; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f9, f14, f21, f4, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f22, rs2==f26, rs3==f2, rd==f14, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000037 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fmadd.d ; op1:f22; op2:f26; op3:f2; dest:f14; op1val:0x7fe0000000000037; op2val:0xfff0000000000000; op3val:0x7fe0000000000009; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f14, f22, f26, f2, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f17, rs2==f2, rs3==f28, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000005d and rm_val == 0  
// opcode: fmadd.d ; op1:f17; op2:f2; op3:f28; dest:f7; op1val:0x7fe000000000002b; op2val:0xfff0000000000000; op3val:0x7fe000000000005d; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f7, f17, f2, f28, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f1, rs2==f29, rs3==f26, rd==f21, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000004 and rm_val == 0  
// opcode: fmadd.d ; op1:f1; op2:f29; op3:f26; dest:f21; op1val:0x7fe0000000000055; op2val:0xfff0000000000000; op3val:0x7fe0000000000004; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f21, f1, f29, f26, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f29, rs2==f30, rs3==f1, rd==f2, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fmadd.d ; op1:f29; op2:f30; op3:f1; dest:f2; op1val:0x7fe000000000000b; op2val:0xfff0000000000000; op3val:0x7fe0000000000009; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f2, f29, f30, f1, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f15, rs2==f6, rs3==f22, rd==f23, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000023 and rm_val == 0  
// opcode: fmadd.d ; op1:f15; op2:f6; op3:f22; dest:f23; op1val:0x7fe000000000001e; op2val:0xfff0000000000000; op3val:0x7fe0000000000023; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f23, f15, f6, f22, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f12, rs2==f5, rs3==f27, rd==f26, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000005e and rm_val == 0  
// opcode: fmadd.d ; op1:f12; op2:f5; op3:f27; dest:f26; op1val:0x7fe0000000000009; op2val:0xfff0000000000000; op3val:0x7fe000000000005e; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f26, f12, f5, f27, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f4, rs2==f12, rs3==f29, rd==f17, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000007 and rm_val == 0  
// opcode: fmadd.d ; op1:f4; op2:f12; op3:f29; dest:f17; op1val:0x7fe0000000000046; op2val:0xfff0000000000000; op3val:0x7fe0000000000007; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f17, f4, f12, f29, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f7, rs2==f20, rs3==f14, rd==f30, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000037 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000004b and rm_val == 0  
// opcode: fmadd.d ; op1:f7; op2:f20; op3:f14; dest:f30; op1val:0x7fe0000000000037; op2val:0xfff0000000000000; op3val:0x7fe000000000004b; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f30, f7, f20, f14, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f26, rs2==f13, rs3==f7, rd==f11, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffff7fff4c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fmadd.d ; op1:f26; op2:f13; op3:f7; dest:f11; op1val:0x7fe0000000000045; op2val:0x3fefffffff7fff4c; op3val:0x7fe0000000000014; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f11, f26, f13, f7, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f13, rs2==f28, rs3==f21, rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffbfff28 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000002b and rm_val == 0  
// opcode: fmadd.d ; op1:f13; op2:f28; op3:f21; dest:f31; op1val:0x7fe0000000000040; op2val:0x3fefffffffbfff28; op3val:0x7fe000000000002b; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f31, f13, f28, f21, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f2, rs2==f31, rs3==f8, rd==f12, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000059 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffdffebe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000047 and rm_val == 0  
// opcode: fmadd.d ; op1:f2; op2:f31; op3:f8; dest:f12; op1val:0x7fe0000000000059; op2val:0x3fefffffffdffebe; op3val:0x7fe0000000000047; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f12, f2, f31, f8, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f5, rs2==f17, rs3==f30, rd==f20, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffefff56 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fmadd.d ; op1:f5; op2:f17; op3:f30; dest:f20; op1val:0x7fe0000000000016; op2val:0x3fefffffffefff56; op3val:0x7fe000000000003e; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f20, f5, f17, f30, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f27, rs2==f14, rs3==f9, rd==f13, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffff7ff88 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fmadd.d ; op1:f27; op2:f14; op3:f9; dest:f13; op1val:0x7fe0000000000028; op2val:0x3feffffffff7ff88; op3val:0x7fe0000000000013; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f27, f14, f9, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f3, rs2==f23, rs3==f25, rd==f27, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000053 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffbfede and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003d and rm_val == 0  
// opcode: fmadd.d ; op1:f3; op2:f23; op3:f25; dest:f27; op1val:0x7fe0000000000053; op2val:0x3feffffffffbfede; op3val:0x7fe000000000003d; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f27, f3, f23, f25, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f20, rs2==f22, rs3==f11, rd==f15, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffdff1e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000025 and rm_val == 0  
// opcode: fmadd.d ; op1:f20; op2:f22; op3:f11; dest:f15; op1val:0x7fe000000000004b; op2val:0x3feffffffffdff1e; op3val:0x7fe0000000000025; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f15, f20, f22, f11, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f31, rs2==f7, rs3==f13, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000059 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffefedc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000038 and rm_val == 0  
// opcode: fmadd.d ; op1:f31; op2:f7; op3:f13; dest:f4; op1val:0x7fe0000000000059; op2val:0x3feffffffffefedc; op3val:0x7fe0000000000038; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f4, f31, f7, f13, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000027 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffff7fae and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000001 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000027; op2val:0x3fefffffffff7fae; op3val:0x7fe0000000000001; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000062 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffbf28 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000062; op2val:0x3fefffffffffbf28; op3val:0x7fe0000000000009; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffdf3a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000026; op2val:0x3fefffffffffdf3a; op3val:0x7fe000000000003c; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffef10 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000005d; op2val:0x3fefffffffffef10; op3val:0x7fe000000000001a; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffff6e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000058 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000033; op2val:0x3feffffffffff6e8; op3val:0x7fe0000000000058; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000032 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffb20 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000032; op2val:0x3feffffffffffb20; op3val:0x7fe000000000003d; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffcda and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000054; op2val:0x3feffffffffffcda; op3val:0x7fe000000000003e; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffda6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000051 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000005b; op2val:0x3feffffffffffda6; op3val:0x7fe0000000000051; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffe38 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000059 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000004a; op2val:0x3feffffffffffe38; op3val:0x7fe0000000000059; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffeb6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000004d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000037; op2val:0x3feffffffffffeb6; op3val:0x7fe000000000004d; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff6c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000037 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000002; op2val:0x3fefffffffffff6c; op3val:0x7fe0000000000037; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000046 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff30 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000019 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000046; op2val:0x3fefffffffffff30; op3val:0x7fe0000000000019; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff2a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000058 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000000e; op2val:0x3fefffffffffff2a; op3val:0x7fe0000000000058; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffed4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000058 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000003b; op2val:0x3feffffffffffed4; op3val:0x7fe0000000000058; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff2c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000047 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000021; op2val:0x3fefffffffffff2c; op3val:0x7fe0000000000047; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000001ffffb and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000005; op2val:0xc0000000001ffffb; op3val:0x10000000000001; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000fffbc and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000011 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000004c; op2val:0xc0000000000fffbc; op3val:0x10000000000011; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000058 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000007ffd8 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000060 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000058; op2val:0xc00000000007ffd8; op3val:0x10000000000060; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000003ffeb and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000002d; op2val:0xc00000000003ffeb; op3val:0x1000000000002f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000002001a and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000004; op2val:0xc00000000002001a; op3val:0x1000000000003c; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000000ffc4 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000044 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000005e; op2val:0xc00000000000ffc4; op3val:0x10000000000044; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000007fc4 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000004f; op2val:0xc000000000007fc4; op3val:0x10000000000026; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000003fbb and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000005b; op2val:0xc000000000003fbb; op3val:0x1000000000002c; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000025 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000001ffd and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000045 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000025; op2val:0xc000000000001ffd; op3val:0x10000000000045; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000011 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000001003 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000027 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000011; op2val:0xc000000000001003; op3val:0x10000000000027; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000000082e and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000062 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000003; op2val:0xc00000000000082e; op3val:0x10000000000062; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000060 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000003a8 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000060; op2val:0xc0000000000003a8; op3val:0x10000000000010; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000001d4 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000004e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000053; op2val:0xc0000000000001d4; op3val:0x1000000000004e; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000000e5 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000043 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000003d; op2val:0xc0000000000000e5; op3val:0x10000000000043; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000067 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000004e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000040; op2val:0xc000000000000067; op3val:0x1000000000004e; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000025 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000000002e and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000025; op2val:0xc00000000000002e; op3val:0x10000000000026; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000000003a and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000005d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000014; op2val:0xc00000000000003a; op3val:0x1000000000005d; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffc6 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000023 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000003f; op2val:0xbfffffffffffffc6; op3val:0x10000000000023; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000013 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000020 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000005; op2val:0xc000000000000013; op3val:0x10000000000020; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000020 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000002 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000020; op2val:0xc000000000000002; op3val:0x1000000000003d; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000048 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffff98 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000024 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000048; op2val:0xbfffffffffffff98; op3val:0x10000000000024; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffcc and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000045 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000003e; op2val:0xbfffffffffffffcc; op3val:0x10000000000045; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffff9e and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000002 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000033; op2val:0xbfffffffffffff9e; op3val:0x10000000000002; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000006 and fs2 == 0 and fe2 == 0x3e0 and fm2 == 0xffff6fffffff4 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000006; op2val:0x3e0ffff6fffffff4; op3val:0x10000000000012; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000020 and fs2 == 0 and fe2 == 0x3df and fm2 == 0xfffd9ffffffc0 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000020; op2val:0x3dffffd9ffffffc0; op3val:0x10000000000026; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x3de and fm2 == 0xfff8dffffff60 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000039 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000050; op2val:0x3defff8dffffff60; op3val:0x10000000000039; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000010 and fs2 == 0 and fe2 == 0x3dd and fm2 == 0xffeabffffffe0 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000055 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000010; op2val:0x3ddffeabffffffe0; op3val:0x10000000000055; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003e and fs2 == 0 and fe2 == 0x3dc and fm2 == 0xfffdfffffff84 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000004 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000003e; op2val:0x3dcfffdfffffff84; op3val:0x10000000000004; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000025 and fs2 == 0 and fe2 == 0x3db and fm2 == 0xffecfffffffb6 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000025; op2val:0x3dbffecfffffffb6; op3val:0x10000000000013; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x3da and fm2 == 0xff81fffffffb0 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000028; op2val:0x3daff81fffffffb0; op3val:0x1000000000003f; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000003 and fs2 == 0 and fe2 == 0x3d9 and fm2 == 0xff5bffffffffa and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000029 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000003; op2val:0x3d9ff5bffffffffa; op3val:0x10000000000029; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x3d8 and fm2 == 0xfe4ffffffffbe and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000021; op2val:0x3d8fe4ffffffffbe; op3val:0x10000000000036; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000027 and fs2 == 0 and fe2 == 0x3d7 and fm2 == 0xfbfffffffffb3 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000040 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000027; op2val:0x3d7fbfffffffffb3; op3val:0x10000000000040; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000022 and fs2 == 0 and fe2 == 0x3d6 and fm2 == 0xf41ffffffffbe and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000005f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000022; op2val:0x3d6f41ffffffffbe; op3val:0x1000000000005f; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004d and fs2 == 0 and fe2 == 0x3d5 and fm2 == 0xecbffffffff6c and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000004d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000004d; op2val:0x3d5ecbffffffff6c; op3val:0x1000000000004d; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000032 and fs2 == 0 and fe2 == 0x3d4 and fm2 == 0xf57ffffffff9e and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000015 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000032; op2val:0x3d4f57ffffffff9e; op3val:0x10000000000015; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x3d3 and fm2 == 0xcefffffffff5b and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000031 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000005b; op2val:0x3d3cefffffffff5b; op3val:0x10000000000031; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x3d2 and fm2 == 0x83fffffffffc6 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000026; op2val:0x3d283fffffffffc6; op3val:0x1000000000003e; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x3d0 and fm2 == 0xfffffffffffc6 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000040 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000001d; op2val:0x3d0fffffffffffc6; op3val:0x10000000000040; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x3cd and fm2 == 0xfffffffffff92 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000038 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000037; op2val:0x3cdfffffffffff92; op3val:0x10000000000038; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x3cf and fm2 == 0x0ffffffffffb2 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000031 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000049; op2val:0xbcf0ffffffffffb2; op3val:0x10000000000031; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002a and fs2 == 1 and fe2 == 0x3d1 and fm2 == 0x03fffffffffd5 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000051 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000002a; op2val:0xbd103fffffffffd5; op3val:0x10000000000051; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x3ce and fm2 == 0x5ffffffffffa0 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000046; op2val:0xbce5ffffffffffa0; op3val:0x10000000000013; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x3d1 and fm2 == 0x2bfffffffffaa and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000004f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000049; op2val:0xbd12bfffffffffaa; op3val:0x1000000000004f; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x3ffffffffffef and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000002a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000000e; op2val:0xbd03ffffffffffef; op3val:0x1000000000002a; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x7ffffffffffff and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000031 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000001; op2val:0xbd07ffffffffffff; op3val:0x10000000000031; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x42d and fm2 == 0x6c16c166666de and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000055 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2d; op2val:0xc2d6c16c166666de; op3val:0x55; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x42c and fm2 == 0xa41a41a0d20e4 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4e; op2val:0xc2ca41a41a0d20e4; op3val:0xc; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001a and fs2 == 1 and fe2 == 0x42e and fm2 == 0x3b13b139d89ee and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1a; op2val:0xc2e3b13b139d89ee; op3val:0x12; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x42c and fm2 == 0xc0e070373ba48 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x49; op2val:0xc2cc0e070373ba48; op3val:0x3e; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004d and fs2 == 1 and fe2 == 0x42c and fm2 == 0xa98ef6063bdd1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000031 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4d; op2val:0xc2ca98ef6063bdd1; op3val:0x31; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000013 and fs2 == 1 and fe2 == 0x42e and fm2 == 0xaf286bc9e50f9 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000015 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x13; op2val:0xc2eaf286bc9e50f9; op3val:0x15; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000030 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x555555554004f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x30; op2val:0xc2d555555554004f; op3val:0x3c; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x8acb90f6b2ead and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000045 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53; op2val:0xc2c8acb90f6b2ead; op3val:0x45; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000035 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x3521cfb2b2bd0 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000049 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x35; op2val:0xc2d3521cfb2b2bd0; op3val:0x49; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000011 and fs2 == 1 and fe2 == 0x42e and fm2 == 0xe1e1e1e1de246 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x11; op2val:0xc2ee1e1e1e1de246; op3val:0x36; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x42d and fm2 == 0xaf286bca19482 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x26; op2val:0xc2daf286bca19482; op3val:0x2e; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 1 and fe2 == 0x42d and fm2 == 0x745d1745d0c0f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2c; op2val:0xc2d745d1745d0c0f; op3val:0x4b; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x42c and fm2 == 0xd41d41d41cd44 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000042 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x46; op2val:0xc2cd41d41d41cd44; op3val:0x42; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 1 and fe2 == 0x42f and fm2 == 0x3b13b13b138cb and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd; op2val:0xc2f3b13b13b138cb; op3val:0x26; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x42c and fm2 == 0x9ec8e95103278 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000027 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0xc2c9ec8e95103278; op3val:0x27; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x430 and fm2 == 0x999999999993d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000047 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5; op2val:0xc30999999999993d; op3val:0x47; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000047 and fs2 == 1 and fe2 == 0x42c and fm2 == 0xcd85689039aec and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000030 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x47; op2val:0xc2ccd85689039aec; op3val:0x30; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x42f and fm2 == 0x111111111114d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000059 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xf; op2val:0xc2f111111111114d; op3val:0x59; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x42d and fm2 == 0xc71c71c71c75c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000035 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x24; op2val:0xc2dc71c71c71c75c; op3val:0x35; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x42d and fm2 == 0x6c16c16c16c54 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000034 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2d; op2val:0xc2d6c16c16c16c54; op3val:0x34; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000030 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x5555555555550 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x30; op2val:0xc2d5555555555550; op3val:0x1; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001f and fs2 == 1 and fe2 == 0x42e and fm2 == 0x08421084210e0 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1f; op2val:0xc2e08421084210e0; op3val:0x5c; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004c and fs2 == 1 and fe2 == 0x42c and fm2 == 0xaf286bca1af53 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4c; op2val:0xc2caf286bca1af53; op3val:0x1b; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004f and fs2 == 0 and fe2 == 0x42c and fm2 == 0x9ec8e94a8818d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0x42c9ec8e94a8818d; op3val:0xa; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 0 and fe2 == 0x42d and fm2 == 0x4e5e0a7053908 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000055 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x31; op2val:0x42d4e5e0a7053908; op3val:0x55; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003c and fs2 == 0 and fe2 == 0x42d and fm2 == 0x1111110ffffcf and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c; op2val:0x42d1111110ffffcf; op3val:0x2d; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x430 and fm2 == 0x99999998ccc75 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5; op2val:0x43099999998ccc75; op3val:0x36; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 0 and fe2 == 0x42e and fm2 == 0x47ae147a8f566 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000047 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x19; op2val:0x42e47ae147a8f566; op3val:0x47; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000018 and fs2 == 0 and fe2 == 0x42e and fm2 == 0x555555552aa57 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x18; op2val:0x42e555555552aa57; op3val:0x3e; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 0 and fe2 == 0x42f and fm2 == 0x11111110fffd3 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000029 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xf; op2val:0x42f11111110fffd3; op3val:0x29; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x430 and fm2 == 0x2492492489233 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7; op2val:0x4302492492489233; op3val:0x12; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x42e and fm2 == 0x1a7b9611a34de and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000016 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1d; op2val:0x42e1a7b9611a34de; op3val:0x16; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000006 and fs2 == 0 and fe2 == 0x430 and fm2 == 0x5555555552a58 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x6; op2val:0x4305555555552a58; op3val:0x3d; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000051 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x948b0fcd6d005 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x51; op2val:0x42c948b0fcd6d005; op3val:0x5c; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x745d1745d0b7f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000018 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x58; op2val:0x42c745d1745d0b7f; op3val:0x18; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x42e and fm2 == 0x1a7b9611a76bf and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000062 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1d; op2val:0x42e1a7b9611a76bf; op3val:0x62; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x86186186182e6 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000018 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54; op2val:0x42c86186186182e6; op3val:0x18; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000039 and fs2 == 0 and fe2 == 0x42d and fm2 == 0x1f7047dc11df6 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000050 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39; op2val:0x42d1f7047dc11df6; op3val:0x50; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000015 and fs2 == 0 and fe2 == 0x42e and fm2 == 0x86186186184e0 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x15; op2val:0x42e86186186184e0; op3val:0x4c; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000004 and fs2 == 0 and fe2 == 0x430 and fm2 == 0xfffffffffff4a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4; op2val:0x430fffffffffff4a; op3val:0x1a; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x42d and fm2 == 0xd41d41d41d337 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x23; op2val:0x42dd41d41d41d337; op3val:0x5d; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000047 and fs2 == 0 and fe2 == 0x42c and fm2 == 0xcd85689039a58 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000052 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x47; op2val:0x42ccd85689039a58; op3val:0x52; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000027 and fs2 == 0 and fe2 == 0x42d and fm2 == 0xa41a41a41a388 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000050 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x27; op2val:0x42da41a41a41a388; op3val:0x50; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x7d05f417d059c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x56; op2val:0x42c7d05f417d059c; op3val:0x36; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x42c and fm2 == 0xb4e81b4e81ad7 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000043 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4b; op2val:0x42cb4e81b4e81ad7; op3val:0x43; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x42e and fm2 == 0x745d1745d16d0 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x16; op2val:0x42e745d1745d16d0; op3val:0x4f; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x40e and fm2 == 0x5c99ae4c415ca and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5e; op2val:0xc0e5c99ae4c415ca; op3val:0x36; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x40d and fm2 == 0x605bd3f4fd3f5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000056 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5d; op2val:0xc0d605bd3f4fd3f5; op3val:0x56; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x40c and fm2 == 0x702f19e33c679 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xc0c702f19e33c679; op3val:0xb; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x40c and fm2 == 0x0846f7bdef7be and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000025 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e; op2val:0xc0c0846f7bdef7be; op3val:0x25; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001a and fs2 == 1 and fe2 == 0x40c and fm2 == 0x3b22762762762 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1a; op2val:0xc0c3b22762762762; op3val:0x2f; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x409 and fm2 == 0xe1f7878787878 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000016 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x44; op2val:0xc09e1f7878787878; op3val:0x16; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xe939503d22635 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x43; op2val:0xc08e939503d22635; op3val:0x13; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 1 and fe2 == 0x408 and fm2 == 0x5d10572620ae5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0xc085d10572620ae5; op3val:0x2b; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x7181702e05c0c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xc067181702e05c0c; op3val:0x3a; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x406 and fm2 == 0x6d27d27d27d28 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000017 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2d; op2val:0xc066d27d27d27d28; op3val:0x17; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005f and fs2 == 1 and fe2 == 0x404 and fm2 == 0x5d79435e50d79 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000035 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f; op2val:0xc045d79435e50d79; op3val:0x35; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x93a9a3784a063 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53; op2val:0xc0393a9a3784a063; op3val:0x2d; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x403 and fm2 == 0x793e93e93e93f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000024 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2d; op2val:0xc03793e93e93e93f; op3val:0x24; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x9b37e875b37e8 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x57; op2val:0xc019b37e875b37e8; op3val:0x2e; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4ec4ec4ec4ec5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000053 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x41; op2val:0xc014ec4ec4ec4ec5; op3val:0x53; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6222222222222 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000025 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c; op2val:0xc006222222222222; op3val:0x25; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2ca6b29aca6b3 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000024 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x56; op2val:0xbff2ca6b29aca6b3; op3val:0x24; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x22e8ba2e8ba2f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x21; op2val:0xc0022e8ba2e8ba2f; op3val:0x2a; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x714fbcda3ac11 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000047 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d; op2val:0xbff714fbcda3ac11; op3val:0x47; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004b and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2c5f92c5f92c6 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000002 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4b; op2val:0xbfc2c5f92c5f92c6; op3val:0x2; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5555555555555 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000017 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54; op2val:0xbfd5555555555555; op3val:0x17; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3ca1af286bca2 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x26; op2val:0xbff3ca1af286bca2; op3val:0x2c; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x08a1142284509 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xbff08a1142284509; op3val:0x5c; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 0 and fe2 == 0x40f and fm2 == 0xe1df000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000063 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x22; op2val:0x40fe1df000000000; op3val:0x63; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000024 and fs2 == 0 and fe2 == 0x40e and fm2 == 0xc719000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x24; op2val:0x40ec719000000000; op3val:0x3f; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x40c and fm2 == 0x680f087087087 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000056 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5b; op2val:0x40c680f087087087; op3val:0x56; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x40c and fm2 == 0x5c8c6cefa8d9e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000048 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0x40c5c8c6cefa8d9e; op3val:0x48; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000062 and fs2 == 0 and fe2 == 0x40a and fm2 == 0x4e514e5e0a72f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000028 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x62; op2val:0x40a4e514e5e0a72f; op3val:0x28; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x409 and fm2 == 0x817e7e7e7e7e8 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000005 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x55; op2val:0x409817e7e7e7e7e8; op3val:0x5; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x6fc2284508a11 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0x4086fc2284508a11; op3val:0x4c; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x40a and fm2 == 0xc67c71c71c71c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x9; op2val:0x40ac67c71c71c71c; op3val:0x2e; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xf6b52b52b52b5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x41; op2val:0x406f6b52b52b52b5; op3val:0x2f; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000042 and fs2 == 0 and fe2 == 0x405 and fm2 == 0xec3e0f83e0f84 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000047 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x42; op2val:0x405ec3e0f83e0f84; op3val:0x47; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 0 and fe2 == 0x405 and fm2 == 0x01e79e79e79e8 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000023 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f; op2val:0x40501e79e79e79e8; op3val:0x23; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000018 and fs2 == 0 and fe2 == 0x405 and fm2 == 0x5380000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x18; op2val:0x4055380000000000; op3val:0xc; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xea80000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x40; op2val:0x402ea80000000000; op3val:0x2c; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x403 and fm2 == 0x2c8590b21642d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000051 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x17; op2val:0x4032c8590b21642d; op3val:0x51; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xeb1a1f58d0fac and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000045 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x31; op2val:0x400eb1a1f58d0fac; op3val:0x45; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000013 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x13; op2val:0x4018000000000000; op3val:0xf; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb47582192e29f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000034 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d; op2val:0x3fcb47582192e29f; op3val:0x34; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x1c71c71c71c72 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x24; op2val:0xbfc1c71c71c71c72; op3val:0x26; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x18f9c18f9c190 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x29; op2val:0xbff18f9c18f9c190; op3val:0x3e; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe8fd1fa3f47e9 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xbfee8fd1fa3f47e9; op3val:0x5e; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf75270d0456c8 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3b; op2val:0xbfef75270d0456c8; op3val:0x3f; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x745d1745d1746 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000043 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x16; op2val:0xc00745d1745d1746; op3val:0x43; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5b1e5f75270d0 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000050 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3b; op2val:0xbff5b1e5f75270d0; op3val:0x50; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000001fffe4 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000026; op2val:0xc0000000001fffe4; op3val:0x3f80000000000013; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000008 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000100013 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000008; op2val:0xc000000000100013; op3val:0x3f80000000000036; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000030 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000007ffda and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000030; op2val:0xc00000000007ffda; op3val:0x3f80000000000014; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000040006 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000038 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000016; op2val:0xc000000000040006; op3val:0x3f80000000000038; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000035 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000001ffd2 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000035; op2val:0xc00000000001ffd2; op3val:0x3f8000000000000e; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000011 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000010017 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000051 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000011; op2val:0xc000000000010017; op3val:0x3f80000000000051; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000007fc6 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000049 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000005e; op2val:0xc000000000007fc6; op3val:0x3f80000000000049; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000003fed and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000011 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000001b; op2val:0xc000000000003fed; op3val:0x3f80000000000011; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000001fd6 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000002b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000040; op2val:0xc000000000001fd6; op3val:0x3f8000000000002b; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000052 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000fb0 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000005 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000052; op2val:0xc000000000000fb0; op3val:0x3f80000000000005; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000013 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000007f1 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000008 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000013; op2val:0xc0000000000007f1; op3val:0x3f80000000000008; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000054 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000003c7 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000054; op2val:0xc0000000000003c7; op3val:0x3f80000000000036; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000021 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000001fd and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000003b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000021; op2val:0xc0000000000001fd; op3val:0x3f8000000000003b; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000000c9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000004d; op2val:0xc0000000000000c9; op3val:0x3f8000000000002d; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000001f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000091 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000005f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000001f; op2val:0xc000000000000091; op3val:0x3f8000000000005f; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000000000e and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000005 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000034; op2val:0xc00000000000000e; op3val:0x3f80000000000005; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffea and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000045 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000004d; op2val:0xbfffffffffffffea; op3val:0x3f80000000000045; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000007 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000000000f and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000007; op2val:0xc00000000000000f; op3val:0x3f8000000000000b; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000015 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000021 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000005d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000015; op2val:0xc000000000000021; op3val:0x3f8000000000005d; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xffffffffffff6 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000028; op2val:0xbffffffffffffff6; op3val:0x3f8000000000003e; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffa2 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000059 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000005d; op2val:0xbfffffffffffffa2; op3val:0x3f80000000000059; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000051 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffff74 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000051; op2val:0xbfffffffffffff74; op3val:0x3f80000000000014; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000017 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffde and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000017; op2val:0xbfffffffffffffde; op3val:0x3f8000000000000b; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x3e0 and fm2 == 0xfffebffffffae and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000028 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000029; op2val:0x3e0fffebffffffae; op3val:0x3ff0000000000028; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x3df and fm2 == 0xfffa7ffffffb0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000058 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000028; op2val:0x3dffffa7ffffffb0; op3val:0x3ff0000000000058; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000046 and fs2 == 0 and fe2 == 0x3de and fm2 == 0xfffe7ffffff74 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000046; op2val:0x3defffe7ffffff74; op3val:0x3ff000000000000c; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000024 and fs2 == 0 and fe2 == 0x3dd and fm2 == 0xffe97ffffffb8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000005a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000024; op2val:0x3ddffe97ffffffb8; op3val:0x3ff000000000005a; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000013 and fs2 == 0 and fe2 == 0x3dc and fm2 == 0xffe9fffffffda and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000013; op2val:0x3dcffe9fffffffda; op3val:0x3ff000000000002c; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004f and fs2 == 0 and fe2 == 0x3db and fm2 == 0xffd0fffffff62 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000004f; op2val:0x3dbffd0fffffff62; op3val:0x3ff000000000002f; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x3da and fm2 == 0xff7bfffffffa8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000042 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000002c; op2val:0x3daff7bfffffffa8; op3val:0x3ff0000000000042; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x3d9 and fm2 == 0xff93fffffffe8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000000c; op2val:0x3d9ff93fffffffe8; op3val:0x3ff000000000001b; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x3d8 and fm2 == 0xfe3fffffffff6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000038 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000005; op2val:0x3d8fe3fffffffff6; op3val:0x3ff0000000000038; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000030 and fs2 == 0 and fe2 == 0x3d7 and fm2 == 0xfd9ffffffffa0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000030; op2val:0x3d7fd9ffffffffa0; op3val:0x3ff0000000000026; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004c and fs2 == 0 and fe2 == 0x3d6 and fm2 == 0xf3fffffffff6c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000060 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000004c; op2val:0x3d6f3fffffffff6c; op3val:0x3ff0000000000060; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003c and fs2 == 0 and fe2 == 0x3d5 and fm2 == 0xfc7ffffffff89 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000003c; op2val:0x3d5fc7ffffffff89; op3val:0x3ff000000000000e; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000044 and fs2 == 0 and fe2 == 0x3d4 and fm2 == 0xef7ffffffff7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000021 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000044; op2val:0x3d4ef7ffffffff7c; op3val:0x3ff0000000000021; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000042 and fs2 == 0 and fe2 == 0x3d3 and fm2 == 0xd1fffffffff88 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000042; op2val:0x3d3d1fffffffff88; op3val:0x3ff000000000002e; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003c and fs2 == 0 and fe2 == 0x3d2 and fm2 == 0xa5fffffffff9d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000003c; op2val:0x3d2a5fffffffff9d; op3val:0x3ff000000000002d; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000061 and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0x7ffffffffff6f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000020 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000061; op2val:0x3d17ffffffffff6f; op3val:0x3ff0000000000020; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000001a and fs2 == 0 and fe2 == 0x3d0 and fm2 == 0x7ffffffffffd9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000001a; op2val:0x3d07ffffffffffd9; op3val:0x3ff0000000000010; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000018 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x7ffffffffffdc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000050 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000018; op2val:0xbd07ffffffffffdc; op3val:0x3ff0000000000050; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x3d1 and fm2 == 0x2bffffffffff9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000005b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000006; op2val:0xbd12bffffffffff9; op3val:0x3ff000000000005b; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x8fffffffffffd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000002; op2val:0xbd08fffffffffffd; op3val:0x3ff000000000003a; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x3d1 and fm2 == 0x1bfffffffffca and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000004b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000031; op2val:0xbd11bfffffffffca; op3val:0x3ff000000000004b; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x67fffffffffb4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000036; op2val:0xbd067fffffffffb4; op3val:0x3ff000000000002f; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x3d1 and fm2 == 0x17ffffffffffd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000047 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000003; op2val:0xbd117ffffffffffd; op3val:0x3ff0000000000047; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x40f and fm2 == 0x642da6f4de9bd and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000034 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2e; op2val:0xc0f642da6f4de9bd; op3val:0x34; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x412 and fm2 == 0x5559555555555 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000060 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3; op2val:0xc125559555555555; op3val:0x60; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000008 and fs2 == 1 and fe2 == 0x410 and fm2 == 0x0002100000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000021 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x8; op2val:0xc100002100000000; op3val:0x21; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x40b and fm2 == 0x681a8ca8ca8cb and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000017 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5b; op2val:0xc0b681a8ca8ca8cb; op3val:0x17; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x40b and fm2 == 0x0851ce739ce74 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e; op2val:0xc0b0851ce739ce74; op3val:0x3d; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x40a and fm2 == 0x8faed44aed44b and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000018 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x29; op2val:0xc0a8faed44aed44b; op3val:0x18; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x409 and fm2 == 0x089ef7bdef7be and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e; op2val:0xc09089ef7bdef7be; op3val:0x5a; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x408 and fm2 == 0x649bd37a6f4df and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000028 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2e; op2val:0xc08649bd37a6f4df; op3val:0x28; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x409 and fm2 == 0xc838e38e38e39 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000028 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x9; op2val:0xc09c838e38e38e39; op3val:0x28; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x405 and fm2 == 0x6a05a05a05a06 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5b; op2val:0xc056a05a05a05a06; op3val:0x2c; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004d and fs2 == 1 and fe2 == 0x404 and fm2 == 0xb298ef606a63c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000057 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4d; op2val:0xc04b298ef606a63c; op3val:0x57; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004c and fs2 == 1 and fe2 == 0x403 and fm2 == 0xaf5e50d79435e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4c; op2val:0xc03af5e50d79435e; op3val:0x1; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc41a41a41a41a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x27; op2val:0xc03c41a41a41a41a; op3val:0x4e; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x404 and fm2 == 0xed55555555555 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x9; op2val:0xc04ed55555555555; op3val:0x2b; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000013 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xe86bca1af286c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000022 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x13; op2val:0xc02e86bca1af286c; op3val:0x22; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x638e38e38e38e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000016 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x36; op2val:0xc00638e38e38e38e; op3val:0x16; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x2800000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3; op2val:0xc042800000000000; op3val:0x2f; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b851eb851eb8 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000027 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x32; op2val:0xbff6b851eb851eb8; op3val:0x27; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe33c678cf19e3 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xbfde33c678cf19e3; op3val:0x1a; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f684bda12f68 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000018 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1b; op2val:0xbff2f684bda12f68; op3val:0x18; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf43ad9bf43ada and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000051 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x57; op2val:0xbfef43ad9bf43ada; op3val:0x51; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6276276276276 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000046 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1a; op2val:0xc006276276276276; op3val:0x46; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1af286bca1af3 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000029 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x26; op2val:0xbff1af286bca1af3; op3val:0x29; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x745c9745d1746 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000016 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x16; op2val:0x410745c9745d1746; op3val:0x16; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x40f and fm2 == 0x2f67425ed097b and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1b; op2val:0x40f2f67425ed097b; op3val:0x1c; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x412 and fm2 == 0xffffe00000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1; op2val:0x412ffffe00000000; op3val:0x1; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x40d and fm2 == 0xe1dde1e1e1e1e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000011 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x11; op2val:0x40de1dde1e1e1e1e; op3val:0x11; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x40a and fm2 == 0x9982ccccccccd and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000039 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50; op2val:0x40a9982ccccccccd; op3val:0x39; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x40b and fm2 == 0xc6d5555555555 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000050 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x12; op2val:0x40bc6d5555555555; op3val:0x50; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000062 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x4e50fac687d63 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x62; op2val:0x4084e50fac687d63; op3val:0xa; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000032 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x477851eb851ec and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000015 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x32; op2val:0x408477851eb851ec; op3val:0x15; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000018 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x5345555555555 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000063 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x18; op2val:0x4085345555555555; op3val:0x63; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000035 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x33c609a90e7d9 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000024 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x35; op2val:0x40633c609a90e7d9; op3val:0x24; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 0 and fe2 == 0x404 and fm2 == 0x5a3677d46cefb and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5e; op2val:0x4045a3677d46cefb; op3val:0x1c; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000020 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xff80000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000002 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x20; op2val:0x404ff80000000000; op3val:0x2; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000e and fs2 == 0 and fe2 == 0x405 and fm2 == 0x0f6db6db6db6e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xe; op2val:0x4050f6db6db6db6e; op3val:0x4a; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x20a72f0539783 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000046 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x31; op2val:0x40220a72f0539783; op3val:0x46; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003d and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd60864b8a7de7 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000020 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d; op2val:0x400d60864b8a7de7; op3val:0x20; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5555555555555 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000030 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xf; op2val:0x4015555555555555; op3val:0x30; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8924924924925 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000015 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7; op2val:0x4018924924924925; op3val:0x15; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000020 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000054 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x20; op2val:0xbffa000000000000; op3val:0x54; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x6000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4; op2val:0xc026000000000000; op3val:0x3c; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6db6db6db6db7 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000044 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54; op2val:0xbfe6db6db6db6db7; op3val:0x44; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x05c0b81702e06 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xbff05c0b81702e06; op3val:0x5f; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xda46102b1da46 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f; op2val:0xbfdda46102b1da46; op3val:0x2e; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x999999999999a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000021 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50; op2val:0xbfd999999999999a; op3val:0x21; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000060 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000031; op2val:0xfff0000000000000; op3val:0x7fe0000000000060; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 368, x18)

inst_278:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000048 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000006; op2val:0xfff0000000000000; op3val:0x7fe0000000000048; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 384, x18)

inst_279:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000001c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000050; op2val:0xfff0000000000000; op3val:0x7fe000000000001c; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 400, x18)

inst_280:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000015 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000015; op2val:0xfff0000000000000; op3val:0x7fe0000000000009; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_281:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000018 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000035 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000018; op2val:0xfff0000000000000; op3val:0x7fe0000000000035; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 432, x18)

inst_282:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000005b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000026; op2val:0xfff0000000000000; op3val:0x7fe000000000005b; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 448, x18)

inst_283:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000053; op2val:0xfff0000000000000; op3val:0x7fe000000000000f; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 464, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x50
.dword 0xbfd999999999999a
.dword 0xbfd999999999999a
.dword 0x7fe0000000000031
.dword 0x7fe0000000000031
.dword 0x7fe0000000000031
.dword 0x7fe000000000000e
.dword 0xfff0000000000000
.dword 0x7fe0000000000055
.dword 0x7fe0000000000006
.dword 0xfff0000000000000
.dword 0x7fe0000000000006
.dword 0x7fe0000000000050
.dword 0x7fe0000000000050
.dword 0x7fe000000000001c
.dword 0x7fe0000000000015
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7fe0000000000018
.dword 0x7fe0000000000018
.dword 0x7fe0000000000018
.dword 0x7fe0000000000018
.dword 0xfff0000000000000
.dword 0x7fe000000000004f
.dword 0x7fe0000000000039
.dword 0xfff0000000000000
.dword 0x7fe0000000000014
.dword 0x7fe0000000000026
.dword 0xfff0000000000000
.dword 0x7fe0000000000026
.dword 0x7fe000000000005c
.dword 0xfff0000000000000
.dword 0x7fe0000000000012
.dword 0x7fe0000000000053
.dword 0x7fe0000000000053
.dword 0x7fe000000000000f
.dword 0x7fe000000000001d
.dword 0xfff0000000000000
.dword 0x7fe000000000004f
.dword 0x7fe0000000000010
.dword 0xfff0000000000000
.dword 0x7fe0000000000010
.dword 0x7fe000000000003f
.dword 0xfff0000000000000
.dword 0x7fe0000000000007
.dword 0x7fe0000000000034
.dword 0xfff0000000000000
.dword 0x7fe000000000005a
.dword 0x7fe0000000000037
.dword 0xfff0000000000000
.dword 0x7fe0000000000009
.dword 0x7fe000000000002b
.dword 0xfff0000000000000
.dword 0x7fe000000000005d
.dword 0x7fe0000000000055
.dword 0xfff0000000000000
.dword 0x7fe0000000000004
.dword 0x7fe000000000000b
.dword 0xfff0000000000000
.dword 0x7fe0000000000009
.dword 0x7fe000000000001e
.dword 0xfff0000000000000
.dword 0x7fe0000000000023
.dword 0x7fe0000000000009
.dword 0xfff0000000000000
.dword 0x7fe000000000005e
.dword 0x7fe0000000000046
.dword 0xfff0000000000000
.dword 0x7fe0000000000007
.dword 0x7fe0000000000037
.dword 0xfff0000000000000
.dword 0x7fe000000000004b
.dword 0x7fe0000000000045
.dword 0x3fefffffff7fff4c
.dword 0x7fe0000000000014
.dword 0x7fe0000000000040
.dword 0x3fefffffffbfff28
.dword 0x7fe000000000002b
.dword 0x7fe0000000000059
.dword 0x3fefffffffdffebe
.dword 0x7fe0000000000047
.dword 0x7fe0000000000016
.dword 0x3fefffffffefff56
.dword 0x7fe000000000003e
.dword 0x7fe0000000000028
.dword 0x3feffffffff7ff88
.dword 0x7fe0000000000013
.dword 0x7fe0000000000053
.dword 0x3feffffffffbfede
.dword 0x7fe000000000003d
.dword 0x7fe000000000004b
.dword 0x3feffffffffdff1e
.dword 0x7fe0000000000025
.dword 0x7fe0000000000059
.dword 0x3feffffffffefedc
.dword 0x7fe0000000000038
.dword 0x7fe0000000000027
.dword 0x3fefffffffff7fae
.dword 0x7fe0000000000001
.dword 0x7fe0000000000062
.dword 0x3fefffffffffbf28
.dword 0x7fe0000000000009
.dword 0x7fe0000000000026
.dword 0x3fefffffffffdf3a
.dword 0x7fe000000000003c
.dword 0x7fe000000000005d
.dword 0x3fefffffffffef10
.dword 0x7fe000000000001a
.dword 0x7fe0000000000033
.dword 0x3feffffffffff6e8
.dword 0x7fe0000000000058
.dword 0x7fe0000000000032
.dword 0x3feffffffffffb20
.dword 0x7fe000000000003d
.dword 0x7fe0000000000054
.dword 0x3feffffffffffcda
.dword 0x7fe000000000003e
.dword 0x7fe000000000005b
.dword 0x3feffffffffffda6
.dword 0x7fe0000000000051
.dword 0x7fe000000000004a
.dword 0x3feffffffffffe38
.dword 0x7fe0000000000059
.dword 0x7fe0000000000037
.dword 0x3feffffffffffeb6
.dword 0x7fe000000000004d
.dword 0x7fe0000000000002
.dword 0x3fefffffffffff6c
.dword 0x7fe0000000000037
.dword 0x7fe0000000000046
.dword 0x3fefffffffffff30
.dword 0x7fe0000000000019
.dword 0x7fe000000000000e
.dword 0x3fefffffffffff2a
.dword 0x7fe0000000000058
.dword 0x7fe000000000003b
.dword 0x3feffffffffffed4
.dword 0x7fe0000000000058
.dword 0x7fe0000000000021
.dword 0x3fefffffffffff2c
.dword 0x7fe0000000000047
.dword 0x10000000000005
.dword 0xc0000000001ffffb
.dword 0x10000000000001
.dword 0x1000000000004c
.dword 0xc0000000000fffbc
.dword 0x10000000000011
.dword 0x10000000000058
.dword 0xc00000000007ffd8
.dword 0x10000000000060
.dword 0x1000000000002d
.dword 0xc00000000003ffeb
.dword 0x1000000000002f
.dword 0x10000000000004
.dword 0xc00000000002001a
.dword 0x1000000000003c
.dword 0x1000000000005e
.dword 0xc00000000000ffc4
.dword 0x10000000000044
.dword 0x1000000000004f
.dword 0xc000000000007fc4
.dword 0x10000000000026
.dword 0x1000000000005b
.dword 0xc000000000003fbb
.dword 0x1000000000002c
.dword 0x10000000000025
.dword 0xc000000000001ffd
.dword 0x10000000000045
.dword 0x10000000000011
.dword 0xc000000000001003
.dword 0x10000000000027
.dword 0x10000000000003
.dword 0xc00000000000082e
.dword 0x10000000000062
.dword 0x10000000000060
.dword 0xc0000000000003a8
.dword 0x10000000000010
.dword 0x10000000000053
.dword 0xc0000000000001d4
.dword 0x1000000000004e
.dword 0x1000000000003d
.dword 0xc0000000000000e5
.dword 0x10000000000043
.dword 0x10000000000040
.dword 0xc000000000000067
.dword 0x1000000000004e
.dword 0x10000000000025
.dword 0xc00000000000002e
.dword 0x10000000000026
.dword 0x10000000000014
.dword 0xc00000000000003a
.dword 0x1000000000005d
.dword 0x1000000000003f
.dword 0xbfffffffffffffc6
.dword 0x10000000000023
.dword 0x10000000000005
.dword 0xc000000000000013
.dword 0x10000000000020
.dword 0x10000000000020
.dword 0xc000000000000002
.dword 0x1000000000003d
.dword 0x10000000000048
.dword 0xbfffffffffffff98
.dword 0x10000000000024
.dword 0x1000000000003e
.dword 0xbfffffffffffffcc
.dword 0x10000000000045
.dword 0x10000000000033
.dword 0xbfffffffffffff9e
.dword 0x10000000000002
.dword 0x10000000000006
.dword 0x3e0ffff6fffffff4
.dword 0x10000000000012
.dword 0x10000000000020
.dword 0x3dffffd9ffffffc0
.dword 0x10000000000026
.dword 0x10000000000050
.dword 0x3defff8dffffff60
.dword 0x10000000000039
.dword 0x10000000000010
.dword 0x3ddffeabffffffe0
.dword 0x10000000000055
.dword 0x1000000000003e
.dword 0x3dcfffdfffffff84
.dword 0x10000000000004
.dword 0x10000000000025
.dword 0x3dbffecfffffffb6
.dword 0x10000000000013
.dword 0x10000000000028
.dword 0x3daff81fffffffb0
.dword 0x1000000000003f
.dword 0x10000000000003
.dword 0x3d9ff5bffffffffa
.dword 0x10000000000029
.dword 0x10000000000021
.dword 0x3d8fe4ffffffffbe
.dword 0x10000000000036
.dword 0x10000000000027
.dword 0x3d7fbfffffffffb3
.dword 0x10000000000040
.dword 0x10000000000022
.dword 0x3d6f41ffffffffbe
.dword 0x1000000000005f
.dword 0x1000000000004d
.dword 0x3d5ecbffffffff6c
.dword 0x1000000000004d
.dword 0x10000000000032
.dword 0x3d4f57ffffffff9e
.dword 0x10000000000015
.dword 0x1000000000005b
.dword 0x3d3cefffffffff5b
.dword 0x10000000000031
.dword 0x10000000000026
.dword 0x3d283fffffffffc6
.dword 0x1000000000003e
.dword 0x1000000000001d
.dword 0x3d0fffffffffffc6
.dword 0x10000000000040
.dword 0x10000000000037
.dword 0x3cdfffffffffff92
.dword 0x10000000000038
.dword 0x10000000000049
.dword 0xbcf0ffffffffffb2
.dword 0x10000000000031
.dword 0x1000000000002a
.dword 0xbd103fffffffffd5
.dword 0x10000000000051
.dword 0x10000000000046
.dword 0xbce5ffffffffffa0
.dword 0x10000000000013
.dword 0x10000000000049
.dword 0xbd12bfffffffffaa
.dword 0x1000000000004f
.dword 0x1000000000000e
.dword 0xbd03ffffffffffef
.dword 0x1000000000002a
.dword 0x10000000000001
.dword 0xbd07ffffffffffff
.dword 0x10000000000031
.dword 0x2d
.dword 0xc2d6c16c166666de
.dword 0x55
.dword 0x4e
.dword 0xc2ca41a41a0d20e4
.dword 0xc
.dword 0x1a
.dword 0xc2e3b13b139d89ee
.dword 0x12
.dword 0x49
.dword 0xc2cc0e070373ba48
.dword 0x3e
.dword 0x4d
.dword 0xc2ca98ef6063bdd1
.dword 0x31
.dword 0x13
.dword 0xc2eaf286bc9e50f9
.dword 0x15
.dword 0x30
.dword 0xc2d555555554004f
.dword 0x3c
.dword 0x53
.dword 0xc2c8acb90f6b2ead
.dword 0x45
.dword 0x35
.dword 0xc2d3521cfb2b2bd0
.dword 0x49
.dword 0x11
.dword 0xc2ee1e1e1e1de246
.dword 0x36
.dword 0x26
.dword 0xc2daf286bca19482
.dword 0x2e
.dword 0x2c
.dword 0xc2d745d1745d0c0f
.dword 0x4b
.dword 0x46
.dword 0xc2cd41d41d41cd44
.dword 0x42
.dword 0xd
.dword 0xc2f3b13b13b138cb
.dword 0x26
.dword 0x4f
.dword 0xc2c9ec8e95103278
.dword 0x27
.dword 0x5
.dword 0xc30999999999993d
.dword 0x47
.dword 0x47
.dword 0xc2ccd85689039aec
.dword 0x30
.dword 0xf
.dword 0xc2f111111111114d
.dword 0x59
.dword 0x24
.dword 0xc2dc71c71c71c75c
.dword 0x35
.dword 0x2d
.dword 0xc2d6c16c16c16c54
.dword 0x34
.dword 0x30
.dword 0xc2d5555555555550
.dword 0x1
.dword 0x1f
.dword 0xc2e08421084210e0
.dword 0x5c
.dword 0x4c
.dword 0xc2caf286bca1af53
.dword 0x1b
.dword 0x4f
.dword 0x42c9ec8e94a8818d
.dword 0xa
.dword 0x31
.dword 0x42d4e5e0a7053908
.dword 0x55
.dword 0x3c
.dword 0x42d1111110ffffcf
.dword 0x2d
.dword 0x5
.dword 0x43099999998ccc75
.dword 0x36
.dword 0x19
.dword 0x42e47ae147a8f566
.dword 0x47
.dword 0x18
.dword 0x42e555555552aa57
.dword 0x3e
.dword 0xf
.dword 0x42f11111110fffd3
.dword 0x29
.dword 0x7
.dword 0x4302492492489233
.dword 0x12
.dword 0x1d
.dword 0x42e1a7b9611a34de
.dword 0x16
.dword 0x6
.dword 0x4305555555552a58
.dword 0x3d
.dword 0x51
.dword 0x42c948b0fcd6d005
.dword 0x5c
.dword 0x58
.dword 0x42c745d1745d0b7f
.dword 0x18
.dword 0x1d
.dword 0x42e1a7b9611a76bf
.dword 0x62
.dword 0x54
.dword 0x42c86186186182e6
.dword 0x18
.dword 0x39
.dword 0x42d1f7047dc11df6
.dword 0x50
.dword 0x15
.dword 0x42e86186186184e0
.dword 0x4c
.dword 0x4
.dword 0x430fffffffffff4a
.dword 0x1a
.dword 0x23
.dword 0x42dd41d41d41d337
.dword 0x5d
.dword 0x47
.dword 0x42ccd85689039a58
.dword 0x52
.dword 0x27
.dword 0x42da41a41a41a388
.dword 0x50
.dword 0x56
.dword 0x42c7d05f417d059c
.dword 0x36
.dword 0x4b
.dword 0x42cb4e81b4e81ad7
.dword 0x43
.dword 0x16
.dword 0x42e745d1745d16d0
.dword 0x4f
.dword 0x5e
.dword 0xc0e5c99ae4c415ca
.dword 0x36
.dword 0x5d
.dword 0xc0d605bd3f4fd3f5
.dword 0x56
.dword 0x59
.dword 0xc0c702f19e33c679
.dword 0xb
.dword 0x3e
.dword 0xc0c0846f7bdef7be
.dword 0x25
.dword 0x1a
.dword 0xc0c3b22762762762
.dword 0x2f
.dword 0x44
.dword 0xc09e1f7878787878
.dword 0x16
.dword 0x43
.dword 0xc08e939503d22635
.dword 0x13
.dword 0x2f
.dword 0xc085d10572620ae5
.dword 0x2b
.dword 0x59
.dword 0xc067181702e05c0c
.dword 0x3a
.dword 0x2d
.dword 0xc066d27d27d27d28
.dword 0x17
.dword 0x5f
.dword 0xc045d79435e50d79
.dword 0x35
.dword 0x53
.dword 0xc0393a9a3784a063
.dword 0x2d
.dword 0x2d
.dword 0xc03793e93e93e93f
.dword 0x24
.dword 0x57
.dword 0xc019b37e875b37e8
.dword 0x2e
.dword 0x41
.dword 0xc014ec4ec4ec4ec5
.dword 0x53
.dword 0x3c
.dword 0xc006222222222222
.dword 0x25
.dword 0x56
.dword 0xbff2ca6b29aca6b3
.dword 0x24
.dword 0x21
.dword 0xc0022e8ba2e8ba2f
.dword 0x2a
.dword 0x3d
.dword 0xbff714fbcda3ac11
.dword 0x47
.dword 0x4b
.dword 0xbfc2c5f92c5f92c6
.dword 0x2
.dword 0x54
.dword 0xbfd5555555555555
.dword 0x17
.dword 0x26
.dword 0xbff3ca1af286bca2
.dword 0x2c
.dword 0x59
.dword 0xbff08a1142284509
.dword 0x5c
.dword 0x22
.dword 0x40fe1df000000000
.dword 0x63
.dword 0x24
.dword 0x40ec719000000000
.dword 0x3f
.dword 0x5b
.dword 0x40c680f087087087
.dword 0x56
.dword 0x2f
.dword 0x40c5c8c6cefa8d9e
.dword 0x48
.dword 0x62
.dword 0x40a4e514e5e0a72f
.dword 0x28
.dword 0x55
.dword 0x409817e7e7e7e7e8
.dword 0x5
.dword 0x59
.dword 0x4086fc2284508a11
.dword 0x4c
.dword 0x9
.dword 0x40ac67c71c71c71c
.dword 0x2e
.dword 0x41
.dword 0x406f6b52b52b52b5
.dword 0x2f
.dword 0x42
.dword 0x405ec3e0f83e0f84
.dword 0x47
.dword 0x3f
.dword 0x40501e79e79e79e8
.dword 0x23
.dword 0x18
.dword 0x4055380000000000
.dword 0xc
.dword 0x40
.dword 0x402ea80000000000
.dword 0x2c
.dword 0x17
.dword 0x4032c8590b21642d
.dword 0x51
.dword 0x31
.dword 0x400eb1a1f58d0fac
.dword 0x45
.dword 0x13
.dword 0x4018000000000000
.dword 0xf
.dword 0x3d
.dword 0x3fcb47582192e29f
.dword 0x34
.dword 0x24
.dword 0xbfc1c71c71c71c72
.dword 0x26
.dword 0x29
.dword 0xbff18f9c18f9c190
.dword 0x3e
.dword 0x59
.dword 0xbfee8fd1fa3f47e9
.dword 0x5e
.dword 0x3b
.dword 0xbfef75270d0456c8
.dword 0x3f
.dword 0x16
.dword 0xc00745d1745d1746
.dword 0x43
.dword 0x3b
.dword 0xbff5b1e5f75270d0
.dword 0x50
.dword 0x3f80000000000026
.dword 0xc0000000001fffe4
.dword 0x3f80000000000013
.dword 0x3f80000000000008
.dword 0xc000000000100013
.dword 0x3f80000000000036
.dword 0x3f80000000000030
.dword 0xc00000000007ffda
.dword 0x3f80000000000014
.dword 0x3f80000000000016
.dword 0xc000000000040006
.dword 0x3f80000000000038
.dword 0x3f80000000000035
.dword 0xc00000000001ffd2
.dword 0x3f8000000000000e
.dword 0x3f80000000000011
.dword 0xc000000000010017
.dword 0x3f80000000000051
.dword 0x3f8000000000005e
.dword 0xc000000000007fc6
.dword 0x3f80000000000049
.dword 0x3f8000000000001b
.dword 0xc000000000003fed
.dword 0x3f80000000000011
.dword 0x3f80000000000040
.dword 0xc000000000001fd6
.dword 0x3f8000000000002b
.dword 0x3f80000000000052
.dword 0xc000000000000fb0
.dword 0x3f80000000000005
.dword 0x3f80000000000013
.dword 0xc0000000000007f1
.dword 0x3f80000000000008
.dword 0x3f80000000000054
.dword 0xc0000000000003c7
.dword 0x3f80000000000036
.dword 0x3f80000000000021
.dword 0xc0000000000001fd
.dword 0x3f8000000000003b
.dword 0x3f8000000000004d
.dword 0xc0000000000000c9
.dword 0x3f8000000000002d
.dword 0x3f8000000000001f
.dword 0xc000000000000091
.dword 0x3f8000000000005f
.dword 0x3f80000000000034
.dword 0xc00000000000000e
.dword 0x3f80000000000005
.dword 0x3f8000000000004d
.dword 0xbfffffffffffffea
.dword 0x3f80000000000045
.dword 0x3f80000000000007
.dword 0xc00000000000000f
.dword 0x3f8000000000000b
.dword 0x3f80000000000015
.dword 0xc000000000000021
.dword 0x3f8000000000005d
.dword 0x3f80000000000028
.dword 0xbffffffffffffff6
.dword 0x3f8000000000003e
.dword 0x3f8000000000005d
.dword 0xbfffffffffffffa2
.dword 0x3f80000000000059
.dword 0x3f80000000000051
.dword 0xbfffffffffffff74
.dword 0x3f80000000000014
.dword 0x3f80000000000017
.dword 0xbfffffffffffffde
.dword 0x3f8000000000000b
.dword 0x3ff0000000000029
.dword 0x3e0fffebffffffae
.dword 0x3ff0000000000028
.dword 0x3ff0000000000028
.dword 0x3dffffa7ffffffb0
.dword 0x3ff0000000000058
.dword 0x3ff0000000000046
.dword 0x3defffe7ffffff74
.dword 0x3ff000000000000c
.dword 0x3ff0000000000024
.dword 0x3ddffe97ffffffb8
.dword 0x3ff000000000005a
.dword 0x3ff0000000000013
.dword 0x3dcffe9fffffffda
.dword 0x3ff000000000002c
.dword 0x3ff000000000004f
.dword 0x3dbffd0fffffff62
.dword 0x3ff000000000002f
.dword 0x3ff000000000002c
.dword 0x3daff7bfffffffa8
.dword 0x3ff0000000000042
.dword 0x3ff000000000000c
.dword 0x3d9ff93fffffffe8
.dword 0x3ff000000000001b
.dword 0x3ff0000000000005
.dword 0x3d8fe3fffffffff6
.dword 0x3ff0000000000038
.dword 0x3ff0000000000030
.dword 0x3d7fd9ffffffffa0
.dword 0x3ff0000000000026
.dword 0x3ff000000000004c
.dword 0x3d6f3fffffffff6c
.dword 0x3ff0000000000060
.dword 0x3ff000000000003c
.dword 0x3d5fc7ffffffff89
.dword 0x3ff000000000000e
.dword 0x3ff0000000000044
.dword 0x3d4ef7ffffffff7c
.dword 0x3ff0000000000021
.dword 0x3ff0000000000042
.dword 0x3d3d1fffffffff88
.dword 0x3ff000000000002e
.dword 0x3ff000000000003c
.dword 0x3d2a5fffffffff9d
.dword 0x3ff000000000002d
.dword 0x3ff0000000000061
.dword 0x3d17ffffffffff6f
.dword 0x3ff0000000000020
.dword 0x3ff000000000001a
.dword 0x3d07ffffffffffd9
.dword 0x3ff0000000000010
.dword 0x3ff0000000000018
.dword 0xbd07ffffffffffdc
.dword 0x3ff0000000000050
.dword 0x3ff0000000000006
.dword 0xbd12bffffffffff9
.dword 0x3ff000000000005b
.dword 0x3ff0000000000002
.dword 0xbd08fffffffffffd
.dword 0x3ff000000000003a
.dword 0x3ff0000000000031
.dword 0xbd11bfffffffffca
.dword 0x3ff000000000004b
.dword 0x3ff0000000000036
.dword 0xbd067fffffffffb4
.dword 0x3ff000000000002f
.dword 0x3ff0000000000003
.dword 0xbd117ffffffffffd
.dword 0x3ff0000000000047
.dword 0x2e
.dword 0xc0f642da6f4de9bd
.dword 0x34
.dword 0x3
.dword 0xc125559555555555
.dword 0x60
.dword 0x8
.dword 0xc100002100000000
.dword 0x21
.dword 0x5b
.dword 0xc0b681a8ca8ca8cb
.dword 0x17
.dword 0x3e
.dword 0xc0b0851ce739ce74
.dword 0x3d
.dword 0x29
.dword 0xc0a8faed44aed44b
.dword 0x18
.dword 0x3e
.dword 0xc09089ef7bdef7be
.dword 0x5a
.dword 0x2e
.dword 0xc08649bd37a6f4df
.dword 0x28
.dword 0x9
.dword 0xc09c838e38e38e39
.dword 0x28
.dword 0x5b
.dword 0xc056a05a05a05a06
.dword 0x2c
.dword 0x4d
.dword 0xc04b298ef606a63c
.dword 0x57
.dword 0x4c
.dword 0xc03af5e50d79435e
.dword 0x1
.dword 0x27
.dword 0xc03c41a41a41a41a
.dword 0x4e
.dword 0x9
.dword 0xc04ed55555555555
.dword 0x2b
.dword 0x13
.dword 0xc02e86bca1af286c
.dword 0x22
.dword 0x36
.dword 0xc00638e38e38e38e
.dword 0x16
.dword 0x3
.dword 0xc042800000000000
.dword 0x2f
.dword 0x32
.dword 0xbff6b851eb851eb8
.dword 0x27
.dword 0x59
.dword 0xbfde33c678cf19e3
.dword 0x1a
.dword 0x1b
.dword 0xbff2f684bda12f68
.dword 0x18
.dword 0x57
.dword 0xbfef43ad9bf43ada
.dword 0x51
.dword 0x1a
.dword 0xc006276276276276
.dword 0x46
.dword 0x26
.dword 0xbff1af286bca1af3
.dword 0x29
.dword 0x16
.dword 0x410745c9745d1746
.dword 0x16
.dword 0x1b
.dword 0x40f2f67425ed097b
.dword 0x1c
.dword 0x1
.dword 0x412ffffe00000000
.dword 0x1
.dword 0x11
.dword 0x40de1dde1e1e1e1e
.dword 0x11
.dword 0x50
.dword 0x40a9982ccccccccd
.dword 0x39
.dword 0x12
.dword 0x40bc6d5555555555
.dword 0x50
.dword 0x62
.dword 0x4084e50fac687d63
.dword 0xa
.dword 0x32
.dword 0x408477851eb851ec
.dword 0x15
.dword 0x18
.dword 0x4085345555555555
.dword 0x63
.dword 0x35
.dword 0x40633c609a90e7d9
.dword 0x24
.dword 0x5e
.dword 0x4045a3677d46cefb
.dword 0x1c
.dword 0x20
.dword 0x404ff80000000000
.dword 0x2
.dword 0xe
.dword 0x4050f6db6db6db6e
.dword 0x4a
.dword 0x31
.dword 0x40220a72f0539783
.dword 0x46
.dword 0x3d
.dword 0x400d60864b8a7de7
.dword 0x20
.dword 0xf
.dword 0x4015555555555555
.dword 0x30
.dword 0x7
.dword 0x4018924924924925
.dword 0x15
.dword 0x20
.dword 0xbffa000000000000
.dword 0x54
.dword 0x4
.dword 0xc026000000000000
.dword 0x3c
.dword 0x54
.dword 0xbfe6db6db6db6db7
.dword 0x44
.dword 0x59
.dword 0xbff05c0b81702e06
.dword 0x5f
.dword 0x5f
.dword 0xbfdda46102b1da46
.dword 0x2e
.dword 0x50
.dword 0xbfd999999999999a
.dword 0x21
.dword 0x7fe0000000000031
.dword 0xfff0000000000000
.dword 0x7fe0000000000060
.dword 0x7fe0000000000006
.dword 0xfff0000000000000
.dword 0x7fe0000000000048
.dword 0x7fe0000000000050
.dword 0xfff0000000000000
.dword 0x7fe000000000001c
.dword 0x7fe0000000000015
.dword 0xfff0000000000000
.dword 0x7fe0000000000009
.dword 0x7fe0000000000018
.dword 0xfff0000000000000
.dword 0x7fe0000000000035
.dword 0x7fe0000000000026
.dword 0xfff0000000000000
.dword 0x7fe000000000005b
.dword 0x7fe0000000000053
.dword 0xfff0000000000000
.dword 0x7fe000000000000f
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 60*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
