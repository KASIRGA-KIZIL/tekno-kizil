
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:53:03 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmadd1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V FD extension for the fnmadd_b3 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmadd_b3)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f27, rs2==f22, rs3==f9, rd==f9, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f27; op2:f22; op3:f9; dest:f9; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc; op3val:0x7fea4d72905280d4; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f9, f27, f22, f9, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==f15, rs2==f15, rs3==f15, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fcc78313f886 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x04ce8c2de8bd5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x76b46a008334f and rm_val == 4  
// opcode: fnmadd.d ; op1:f15; op2:f15; op3:f15; dest:f1; op1val:0x7fe6fcc78313f886; op2val:0x7fe6fcc78313f886; op3val:0x7fe6fcc78313f886; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f1, f15, f15, f15, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f19, rs2==f3, rs3==f19, rd==f24, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fcc78313f886 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x04ce8c2de8bd5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x76b46a008334f and rm_val == 3  
// opcode: fnmadd.d ; op1:f19; op2:f3; op3:f19; dest:f24; op1val:0x7fe6fcc78313f886; op2val:0x3fb04ce8c2de8bd5; op3val:0x7fe6fcc78313f886; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f24, f19, f3, f19, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==f21, rs2==f17, rs3==f21, rd==f21, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fcc78313f886 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x04ce8c2de8bd5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x76b46a008334f and rm_val == 2  
// opcode: fnmadd.d ; op1:f21; op2:f17; op3:f21; dest:f21; op1val:0x7fe6fcc78313f886; op2val:0x3fb04ce8c2de8bd5; op3val:0x7fe6fcc78313f886; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f21, f21, f17, f21, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f4, rs2==f2, rs3==f18, rd==f5, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fcc78313f886 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x04ce8c2de8bd5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x76b46a008334f and rm_val == 1  
// opcode: fnmadd.d ; op1:f4; op2:f2; op3:f18; dest:f5; op1val:0x7fe6fcc78313f886; op2val:0x3fb04ce8c2de8bd5; op3val:0x7fa76b46a008334f; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f5, f4, f2, f18, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f10, rs2==f16, rs3==f16, rd==f16, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fcc78313f886 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x04ce8c2de8bd5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x76b46a008334f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f16; op3:f16; dest:f16; op1val:0x7fe6fcc78313f886; op2val:0x3fb04ce8c2de8bd5; op3val:0x3fb04ce8c2de8bd5; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f16, f10, f16, f16, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==f13, rs2==f13, rs3==f8, rd==f13, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcfd26bc72299b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x15481bb0f0293 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf66153f88d9a0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f13; op2:f13; op3:f8; dest:f13; op1val:0x7fdcfd26bc72299b; op2val:0x7fdcfd26bc72299b; op3val:0x7fef66153f88d9a0; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f13, f13, f8, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f3, rs2==f27, rs3==f14, rd==f27, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcfd26bc72299b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x15481bb0f0293 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf66153f88d9a0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f3; op2:f27; op3:f14; dest:f27; op1val:0x7fdcfd26bc72299b; op2val:0x40015481bb0f0293; op3val:0x7fef66153f88d9a0; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f27, f3, f27, f14, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f9, rs2==f9, rs3==f24, rd==f31, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcfd26bc72299b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x15481bb0f0293 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf66153f88d9a0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f9; op2:f9; op3:f24; dest:f31; op1val:0x7fdcfd26bc72299b; op2val:0x7fdcfd26bc72299b; op3val:0x7fef66153f88d9a0; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f31, f9, f9, f24, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 == rd, rs1==f23, rs2==f23, rs3==f23, rd==f23, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcfd26bc72299b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x15481bb0f0293 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf66153f88d9a0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f23; op2:f23; op3:f23; dest:f23; op1val:0x7fdcfd26bc72299b; op2val:0x7fdcfd26bc72299b; op3val:0x7fdcfd26bc72299b; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f23, f23, f23, f23, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f8, rs2==f6, rs3==f6, rd==f26, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcfd26bc72299b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x15481bb0f0293 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf66153f88d9a0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f8; op2:f6; op3:f6; dest:f26; op1val:0x7fdcfd26bc72299b; op2val:0x40015481bb0f0293; op3val:0x40015481bb0f0293; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f26, f8, f6, f6, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f22, rs2==f4, rs3==f30, rd==f22, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x16f008ac14225 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9f6b9217e094f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc4a453917dc74 and rm_val == 4  
// opcode: fnmadd.d ; op1:f22; op2:f4; op3:f30; dest:f22; op1val:0x7fe16f008ac14225; op2val:0x3ff9f6b9217e094f; op3val:0x7fec4a453917dc74; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f22, f22, f4, f30, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f2, rs2==f30, rs3==f20, rd==f8, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x16f008ac14225 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9f6b9217e094f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc4a453917dc74 and rm_val == 3  
// opcode: fnmadd.d ; op1:f2; op2:f30; op3:f20; dest:f8; op1val:0x7fe16f008ac14225; op2val:0x3ff9f6b9217e094f; op3val:0x7fec4a453917dc74; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f8, f2, f30, f20, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f7, rs2==f28, rs3==f11, rd==f3, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x16f008ac14225 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9f6b9217e094f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc4a453917dc74 and rm_val == 2  
// opcode: fnmadd.d ; op1:f7; op2:f28; op3:f11; dest:f3; op1val:0x7fe16f008ac14225; op2val:0x3ff9f6b9217e094f; op3val:0x7fec4a453917dc74; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f3, f7, f28, f11, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f18, rs2==f20, rs3==f7, rd==f17, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x16f008ac14225 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9f6b9217e094f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc4a453917dc74 and rm_val == 1  
// opcode: fnmadd.d ; op1:f18; op2:f20; op3:f7; dest:f17; op1val:0x7fe16f008ac14225; op2val:0x3ff9f6b9217e094f; op3val:0x7fec4a453917dc74; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f17, f18, f20, f7, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f17, rs2==f0, rs3==f12, rd==f11, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x16f008ac14225 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9f6b9217e094f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc4a453917dc74 and rm_val == 0  
// opcode: fnmadd.d ; op1:f17; op2:f0; op3:f12; dest:f11; op1val:0x7fe16f008ac14225; op2val:0x3ff9f6b9217e094f; op3val:0x7fec4a453917dc74; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f11, f17, f0, f12, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f24, rs2==f10, rs3==f27, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x156c11719ec1a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x46db1d0dac269 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x62351125ab629 and rm_val == 4  
// opcode: fnmadd.d ; op1:f24; op2:f10; op3:f27; dest:f0; op1val:0x7fe156c11719ec1a; op2val:0x3fe46db1d0dac269; op3val:0x7fd62351125ab629; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f0, f24, f10, f27, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f6, rs2==f1, rs3==f29, rd==f2, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x156c11719ec1a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x46db1d0dac269 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x62351125ab629 and rm_val == 3  
// opcode: fnmadd.d ; op1:f6; op2:f1; op3:f29; dest:f2; op1val:0x7fe156c11719ec1a; op2val:0x3fe46db1d0dac269; op3val:0x7fd62351125ab629; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f2, f6, f1, f29, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f30, rs2==f26, rs3==f3, rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x156c11719ec1a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x46db1d0dac269 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x62351125ab629 and rm_val == 2  
// opcode: fnmadd.d ; op1:f30; op2:f26; op3:f3; dest:f29; op1val:0x7fe156c11719ec1a; op2val:0x3fe46db1d0dac269; op3val:0x7fd62351125ab629; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f29, f30, f26, f3, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f12, rs2==f29, rs3==f25, rd==f15, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x156c11719ec1a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x46db1d0dac269 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x62351125ab629 and rm_val == 1  
// opcode: fnmadd.d ; op1:f12; op2:f29; op3:f25; dest:f15; op1val:0x7fe156c11719ec1a; op2val:0x3fe46db1d0dac269; op3val:0x7fd62351125ab629; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f15, f12, f29, f25, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f31, rs2==f5, rs3==f2, rd==f18, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x156c11719ec1a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x46db1d0dac269 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x62351125ab629 and rm_val == 0  
// opcode: fnmadd.d ; op1:f31; op2:f5; op3:f2; dest:f18; op1val:0x7fe156c11719ec1a; op2val:0x3fe46db1d0dac269; op3val:0x7fd62351125ab629; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f18, f31, f5, f2, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f0, rs2==f11, rs3==f13, rd==f19, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc06cd5aa5a5af and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2a7bb5fe34980 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x056bb1e6989a9 and rm_val == 4  
// opcode: fnmadd.d ; op1:f0; op2:f11; op3:f13; dest:f19; op1val:0x7fdc06cd5aa5a5af; op2val:0x3fe2a7bb5fe34980; op3val:0x7fd056bb1e6989a9; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f19, f0, f11, f13, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f16, rs2==f18, rs3==f31, rd==f12, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc06cd5aa5a5af and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2a7bb5fe34980 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x056bb1e6989a9 and rm_val == 3  
// opcode: fnmadd.d ; op1:f16; op2:f18; op3:f31; dest:f12; op1val:0x7fdc06cd5aa5a5af; op2val:0x3fe2a7bb5fe34980; op3val:0x7fd056bb1e6989a9; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f12, f16, f18, f31, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f28, rs2==f8, rs3==f17, rd==f10, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc06cd5aa5a5af and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2a7bb5fe34980 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x056bb1e6989a9 and rm_val == 2  
// opcode: fnmadd.d ; op1:f28; op2:f8; op3:f17; dest:f10; op1val:0x7fdc06cd5aa5a5af; op2val:0x3fe2a7bb5fe34980; op3val:0x7fd056bb1e6989a9; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f10, f28, f8, f17, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f11, rs2==f31, rs3==f10, rd==f28, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc06cd5aa5a5af and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2a7bb5fe34980 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x056bb1e6989a9 and rm_val == 1  
// opcode: fnmadd.d ; op1:f11; op2:f31; op3:f10; dest:f28; op1val:0x7fdc06cd5aa5a5af; op2val:0x3fe2a7bb5fe34980; op3val:0x7fd056bb1e6989a9; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f28, f11, f31, f10, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f14, rs2==f24, rs3==f26, rd==f20, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc06cd5aa5a5af and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2a7bb5fe34980 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x056bb1e6989a9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f14; op2:f24; op3:f26; dest:f20; op1val:0x7fdc06cd5aa5a5af; op2val:0x3fe2a7bb5fe34980; op3val:0x7fd056bb1e6989a9; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f20, f14, f24, f26, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f26, rs2==f12, rs3==f5, rd==f30, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa68e3be688d9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xbe12f565ed7fe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb9341ecae0589 and rm_val == 4  
// opcode: fnmadd.d ; op1:f26; op2:f12; op3:f5; dest:f30; op1val:0x7fefa68e3be688d9; op2val:0x3febe12f565ed7fe; op3val:0x7feb9341ecae0589; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f30, f26, f12, f5, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f1, rs2==f7, rs3==f22, rd==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa68e3be688d9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xbe12f565ed7fe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb9341ecae0589 and rm_val == 3  
// opcode: fnmadd.d ; op1:f1; op2:f7; op3:f22; dest:f25; op1val:0x7fefa68e3be688d9; op2val:0x3febe12f565ed7fe; op3val:0x7feb9341ecae0589; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f25, f1, f7, f22, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f20, rs2==f21, rs3==f28, rd==f6, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa68e3be688d9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xbe12f565ed7fe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb9341ecae0589 and rm_val == 2  
// opcode: fnmadd.d ; op1:f20; op2:f21; op3:f28; dest:f6; op1val:0x7fefa68e3be688d9; op2val:0x3febe12f565ed7fe; op3val:0x7feb9341ecae0589; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f6, f20, f21, f28, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f29, rs2==f25, rs3==f0, rd==f14, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa68e3be688d9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xbe12f565ed7fe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb9341ecae0589 and rm_val == 1  
// opcode: fnmadd.d ; op1:f29; op2:f25; op3:f0; dest:f14; op1val:0x7fefa68e3be688d9; op2val:0x3febe12f565ed7fe; op3val:0x7feb9341ecae0589; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f14, f29, f25, f0, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f25, rs2==f19, rs3==f1, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa68e3be688d9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xbe12f565ed7fe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb9341ecae0589 and rm_val == 0  
// opcode: fnmadd.d ; op1:f25; op2:f19; op3:f1; dest:f4; op1val:0x7fefa68e3be688d9; op2val:0x3febe12f565ed7fe; op3val:0x7feb9341ecae0589; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f4, f25, f19, f1, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f5, rs2==f14, rs3==f4, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68f63eccb52d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x207f98e3bcff2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x96c8f062c5808 and rm_val == 4  
// opcode: fnmadd.d ; op1:f5; op2:f14; op3:f4; dest:f7; op1val:0x7fe68f63eccb52d3; op2val:0x3ff207f98e3bcff2; op3val:0x7fe96c8f062c5808; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f7, f5, f14, f4, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68f63eccb52d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x207f98e3bcff2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x96c8f062c5808 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68f63eccb52d3; op2val:0x3ff207f98e3bcff2; op3val:0x7fe96c8f062c5808; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68f63eccb52d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x207f98e3bcff2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x96c8f062c5808 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68f63eccb52d3; op2val:0x3ff207f98e3bcff2; op3val:0x7fe96c8f062c5808; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68f63eccb52d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x207f98e3bcff2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x96c8f062c5808 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68f63eccb52d3; op2val:0x3ff207f98e3bcff2; op3val:0x7fe96c8f062c5808; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68f63eccb52d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x207f98e3bcff2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x96c8f062c5808 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68f63eccb52d3; op2val:0x3ff207f98e3bcff2; op3val:0x7fe96c8f062c5808; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x204462f4d98ff and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb862baf8a644f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xefe4b6cc650a7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb204462f4d98ff; op2val:0x3ffb862baf8a644f; op3val:0x7fbefe4b6cc650a7; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x204462f4d98ff and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb862baf8a644f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xefe4b6cc650a7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb204462f4d98ff; op2val:0x3ffb862baf8a644f; op3val:0x7fbefe4b6cc650a7; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x204462f4d98ff and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb862baf8a644f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xefe4b6cc650a7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb204462f4d98ff; op2val:0x3ffb862baf8a644f; op3val:0x7fbefe4b6cc650a7; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x204462f4d98ff and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb862baf8a644f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xefe4b6cc650a7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb204462f4d98ff; op2val:0x3ffb862baf8a644f; op3val:0x7fbefe4b6cc650a7; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x204462f4d98ff and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb862baf8a644f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xefe4b6cc650a7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb204462f4d98ff; op2val:0x3ffb862baf8a644f; op3val:0x7fbefe4b6cc650a7; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5b5915a348e93 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6a569ee80546d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xeba18021f5337 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5b5915a348e93; op2val:0x3fe6a569ee80546d; op3val:0x7fdeba18021f5337; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5b5915a348e93 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6a569ee80546d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xeba18021f5337 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5b5915a348e93; op2val:0x3fe6a569ee80546d; op3val:0x7fdeba18021f5337; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5b5915a348e93 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6a569ee80546d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xeba18021f5337 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5b5915a348e93; op2val:0x3fe6a569ee80546d; op3val:0x7fdeba18021f5337; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5b5915a348e93 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6a569ee80546d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xeba18021f5337 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5b5915a348e93; op2val:0x3fe6a569ee80546d; op3val:0x7fdeba18021f5337; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5b5915a348e93 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6a569ee80546d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xeba18021f5337 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5b5915a348e93; op2val:0x3fe6a569ee80546d; op3val:0x7fdeba18021f5337; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfcfca53c51fe2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf353c5b2ee007 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf063828829338 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefcfca53c51fe2; op2val:0x3fef353c5b2ee007; op3val:0x7fef063828829338; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfcfca53c51fe2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf353c5b2ee007 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf063828829338 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefcfca53c51fe2; op2val:0x3fef353c5b2ee007; op3val:0x7fef063828829338; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfcfca53c51fe2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf353c5b2ee007 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf063828829338 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefcfca53c51fe2; op2val:0x3fef353c5b2ee007; op3val:0x7fef063828829338; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfcfca53c51fe2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf353c5b2ee007 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf063828829338 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefcfca53c51fe2; op2val:0x3fef353c5b2ee007; op3val:0x7fef063828829338; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfcfca53c51fe2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf353c5b2ee007 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf063828829338 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefcfca53c51fe2; op2val:0x3fef353c5b2ee007; op3val:0x7fef063828829338; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc876832fcf335 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0xc9cdda6e87c28 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x98254e48b36ff and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc876832fcf335; op2val:0x3f9c9cdda6e87c28; op3val:0x7f898254e48b36ff; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc876832fcf335 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0xc9cdda6e87c28 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x98254e48b36ff and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc876832fcf335; op2val:0x3f9c9cdda6e87c28; op3val:0x7f898254e48b36ff; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc876832fcf335 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0xc9cdda6e87c28 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x98254e48b36ff and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc876832fcf335; op2val:0x3f9c9cdda6e87c28; op3val:0x7f898254e48b36ff; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc876832fcf335 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0xc9cdda6e87c28 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x98254e48b36ff and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc876832fcf335; op2val:0x3f9c9cdda6e87c28; op3val:0x7f898254e48b36ff; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc876832fcf335 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0xc9cdda6e87c28 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x98254e48b36ff and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc876832fcf335; op2val:0x3f9c9cdda6e87c28; op3val:0x7f898254e48b36ff; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad148409a7a4d and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xfbb22c4238730 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xa97921f8b9297 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead148409a7a4d; op2val:0x3fbfbb22c4238730; op3val:0x7fba97921f8b9297; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad148409a7a4d and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xfbb22c4238730 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xa97921f8b9297 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead148409a7a4d; op2val:0x3fbfbb22c4238730; op3val:0x7fba97921f8b9297; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad148409a7a4d and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xfbb22c4238730 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xa97921f8b9297 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead148409a7a4d; op2val:0x3fbfbb22c4238730; op3val:0x7fba97921f8b9297; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad148409a7a4d and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xfbb22c4238730 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xa97921f8b9297 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead148409a7a4d; op2val:0x3fbfbb22c4238730; op3val:0x7fba97921f8b9297; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad148409a7a4d and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xfbb22c4238730 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xa97921f8b9297 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead148409a7a4d; op2val:0x3fbfbb22c4238730; op3val:0x7fba97921f8b9297; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x3cc38f90f797f and fs2 == 0 and fe2 == 0x403 and fm2 == 0xb8073605348df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x103c8578e3d2d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f93cc38f90f797f; op2val:0x403b8073605348df; op3val:0x7fe103c8578e3d2d; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x3cc38f90f797f and fs2 == 0 and fe2 == 0x403 and fm2 == 0xb8073605348df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x103c8578e3d2d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f93cc38f90f797f; op2val:0x403b8073605348df; op3val:0x7fe103c8578e3d2d; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x3cc38f90f797f and fs2 == 0 and fe2 == 0x403 and fm2 == 0xb8073605348df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x103c8578e3d2d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f93cc38f90f797f; op2val:0x403b8073605348df; op3val:0x7fe103c8578e3d2d; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x3cc38f90f797f and fs2 == 0 and fe2 == 0x403 and fm2 == 0xb8073605348df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x103c8578e3d2d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f93cc38f90f797f; op2val:0x403b8073605348df; op3val:0x7fe103c8578e3d2d; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x3cc38f90f797f and fs2 == 0 and fe2 == 0x403 and fm2 == 0xb8073605348df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x103c8578e3d2d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f93cc38f90f797f; op2val:0x403b8073605348df; op3val:0x7fe103c8578e3d2d; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe04544df380a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb97c5ea9a7a1f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9e205364cd953 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde04544df380a5; op2val:0x3feb97c5ea9a7a1f; op3val:0x7fd9e205364cd953; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe04544df380a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb97c5ea9a7a1f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9e205364cd953 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde04544df380a5; op2val:0x3feb97c5ea9a7a1f; op3val:0x7fd9e205364cd953; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe04544df380a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb97c5ea9a7a1f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9e205364cd953 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde04544df380a5; op2val:0x3feb97c5ea9a7a1f; op3val:0x7fd9e205364cd953; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe04544df380a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb97c5ea9a7a1f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9e205364cd953 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde04544df380a5; op2val:0x3feb97c5ea9a7a1f; op3val:0x7fd9e205364cd953; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe04544df380a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb97c5ea9a7a1f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9e205364cd953 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde04544df380a5; op2val:0x3feb97c5ea9a7a1f; op3val:0x7fd9e205364cd953; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2daf305ed151f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x21eb6f6396855 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x55a838b0c3724 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2daf305ed151f; op2val:0x40121eb6f6396855; op3val:0x7fe55a838b0c3724; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2daf305ed151f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x21eb6f6396855 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x55a838b0c3724 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2daf305ed151f; op2val:0x40121eb6f6396855; op3val:0x7fe55a838b0c3724; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2daf305ed151f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x21eb6f6396855 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x55a838b0c3724 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2daf305ed151f; op2val:0x40121eb6f6396855; op3val:0x7fe55a838b0c3724; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2daf305ed151f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x21eb6f6396855 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x55a838b0c3724 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2daf305ed151f; op2val:0x40121eb6f6396855; op3val:0x7fe55a838b0c3724; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2daf305ed151f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x21eb6f6396855 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x55a838b0c3724 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2daf305ed151f; op2val:0x40121eb6f6396855; op3val:0x7fe55a838b0c3724; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1bc5122bc39 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1da94c8484b62 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa619cf05ea0d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1bc5122bc39; op2val:0x4001da94c8484b62; op3val:0x7feaa619cf05ea0d; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1bc5122bc39 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1da94c8484b62 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa619cf05ea0d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1bc5122bc39; op2val:0x4001da94c8484b62; op3val:0x7feaa619cf05ea0d; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1bc5122bc39 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1da94c8484b62 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa619cf05ea0d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1bc5122bc39; op2val:0x4001da94c8484b62; op3val:0x7feaa619cf05ea0d; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1bc5122bc39 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1da94c8484b62 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa619cf05ea0d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1bc5122bc39; op2val:0x4001da94c8484b62; op3val:0x7feaa619cf05ea0d; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1bc5122bc39 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1da94c8484b62 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa619cf05ea0d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1bc5122bc39; op2val:0x4001da94c8484b62; op3val:0x7feaa619cf05ea0d; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa181ad799b50f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x06578856de17d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xabd978f6f936d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fba181ad799b50f; op2val:0x40206578856de17d; op3val:0x7feabd978f6f936d; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa181ad799b50f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x06578856de17d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xabd978f6f936d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fba181ad799b50f; op2val:0x40206578856de17d; op3val:0x7feabd978f6f936d; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa181ad799b50f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x06578856de17d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xabd978f6f936d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fba181ad799b50f; op2val:0x40206578856de17d; op3val:0x7feabd978f6f936d; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa181ad799b50f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x06578856de17d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xabd978f6f936d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fba181ad799b50f; op2val:0x40206578856de17d; op3val:0x7feabd978f6f936d; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa181ad799b50f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x06578856de17d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xabd978f6f936d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fba181ad799b50f; op2val:0x40206578856de17d; op3val:0x7feabd978f6f936d; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8949f5778119b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9fd0507ccb587 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3f6776558027a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8949f5778119b; op2val:0x3ff9fd0507ccb587; op3val:0x7fe3f6776558027a; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8949f5778119b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9fd0507ccb587 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3f6776558027a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8949f5778119b; op2val:0x3ff9fd0507ccb587; op3val:0x7fe3f6776558027a; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8949f5778119b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9fd0507ccb587 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3f6776558027a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8949f5778119b; op2val:0x3ff9fd0507ccb587; op3val:0x7fe3f6776558027a; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8949f5778119b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9fd0507ccb587 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3f6776558027a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8949f5778119b; op2val:0x3ff9fd0507ccb587; op3val:0x7fe3f6776558027a; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8949f5778119b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9fd0507ccb587 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3f6776558027a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8949f5778119b; op2val:0x3ff9fd0507ccb587; op3val:0x7fe3f6776558027a; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x193ffdf23ced1 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50276b6180376 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x714f4c067d1ec and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd193ffdf23ced1; op2val:0x40050276b6180376; op3val:0x7fe714f4c067d1ec; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x193ffdf23ced1 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50276b6180376 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x714f4c067d1ec and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd193ffdf23ced1; op2val:0x40050276b6180376; op3val:0x7fe714f4c067d1ec; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x193ffdf23ced1 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50276b6180376 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x714f4c067d1ec and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd193ffdf23ced1; op2val:0x40050276b6180376; op3val:0x7fe714f4c067d1ec; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x193ffdf23ced1 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50276b6180376 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x714f4c067d1ec and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd193ffdf23ced1; op2val:0x40050276b6180376; op3val:0x7fe714f4c067d1ec; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x193ffdf23ced1 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50276b6180376 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x714f4c067d1ec and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd193ffdf23ced1; op2val:0x40050276b6180376; op3val:0x7fe714f4c067d1ec; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd2aec528b7649 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1363fa816771e and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xf608000b8eeef and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd2aec528b7649; op2val:0x3fc1363fa816771e; op3val:0x7faf608000b8eeef; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd2aec528b7649 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1363fa816771e and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xf608000b8eeef and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd2aec528b7649; op2val:0x3fc1363fa816771e; op3val:0x7faf608000b8eeef; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd2aec528b7649 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1363fa816771e and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xf608000b8eeef and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd2aec528b7649; op2val:0x3fc1363fa816771e; op3val:0x7faf608000b8eeef; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd2aec528b7649 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1363fa816771e and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xf608000b8eeef and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd2aec528b7649; op2val:0x3fc1363fa816771e; op3val:0x7faf608000b8eeef; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd2aec528b7649 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1363fa816771e and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xf608000b8eeef and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd2aec528b7649; op2val:0x3fc1363fa816771e; op3val:0x7faf608000b8eeef; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xe97c53d658d5f and fs2 == 0 and fe2 == 0x404 and fm2 == 0x0a121df841057 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfcbdd3285fa40 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9e97c53d658d5f; op2val:0x4040a121df841057; op3val:0x7fefcbdd3285fa40; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xe97c53d658d5f and fs2 == 0 and fe2 == 0x404 and fm2 == 0x0a121df841057 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfcbdd3285fa40 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9e97c53d658d5f; op2val:0x4040a121df841057; op3val:0x7fefcbdd3285fa40; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xe97c53d658d5f and fs2 == 0 and fe2 == 0x404 and fm2 == 0x0a121df841057 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfcbdd3285fa40 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9e97c53d658d5f; op2val:0x4040a121df841057; op3val:0x7fefcbdd3285fa40; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xe97c53d658d5f and fs2 == 0 and fe2 == 0x404 and fm2 == 0x0a121df841057 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfcbdd3285fa40 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9e97c53d658d5f; op2val:0x4040a121df841057; op3val:0x7fefcbdd3285fa40; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xe97c53d658d5f and fs2 == 0 and fe2 == 0x404 and fm2 == 0x0a121df841057 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfcbdd3285fa40 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9e97c53d658d5f; op2val:0x4040a121df841057; op3val:0x7fefcbdd3285fa40; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x91fb87d28a9ff and fs2 == 0 and fe2 == 0x408 and fm2 == 0x1fb84d9a794fa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc3ca63e9e063f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f591fb87d28a9ff; op2val:0x4081fb84d9a794fa; op3val:0x7fec3ca63e9e063f; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x91fb87d28a9ff and fs2 == 0 and fe2 == 0x408 and fm2 == 0x1fb84d9a794fa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc3ca63e9e063f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f591fb87d28a9ff; op2val:0x4081fb84d9a794fa; op3val:0x7fec3ca63e9e063f; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x91fb87d28a9ff and fs2 == 0 and fe2 == 0x408 and fm2 == 0x1fb84d9a794fa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc3ca63e9e063f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f591fb87d28a9ff; op2val:0x4081fb84d9a794fa; op3val:0x7fec3ca63e9e063f; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x91fb87d28a9ff and fs2 == 0 and fe2 == 0x408 and fm2 == 0x1fb84d9a794fa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc3ca63e9e063f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f591fb87d28a9ff; op2val:0x4081fb84d9a794fa; op3val:0x7fec3ca63e9e063f; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x91fb87d28a9ff and fs2 == 0 and fe2 == 0x408 and fm2 == 0x1fb84d9a794fa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc3ca63e9e063f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f591fb87d28a9ff; op2val:0x4081fb84d9a794fa; op3val:0x7fec3ca63e9e063f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2c6e3c45eb41 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x33b6e78f0a0df and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x188901605910f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2c6e3c45eb41; op2val:0x3fd33b6e78f0a0df; op3val:0x7fd188901605910f; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2c6e3c45eb41 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x33b6e78f0a0df and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x188901605910f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2c6e3c45eb41; op2val:0x3fd33b6e78f0a0df; op3val:0x7fd188901605910f; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2c6e3c45eb41 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x33b6e78f0a0df and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x188901605910f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2c6e3c45eb41; op2val:0x3fd33b6e78f0a0df; op3val:0x7fd188901605910f; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2c6e3c45eb41 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x33b6e78f0a0df and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x188901605910f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2c6e3c45eb41; op2val:0x3fd33b6e78f0a0df; op3val:0x7fd188901605910f; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2c6e3c45eb41 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x33b6e78f0a0df and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x188901605910f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2c6e3c45eb41; op2val:0x3fd33b6e78f0a0df; op3val:0x7fd188901605910f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf133c25543bea and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4a0b71feadc19 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x40817990df4c0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef133c25543bea; op2val:0x3fe4a0b71feadc19; op3val:0x7fe40817990df4c0; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf133c25543bea and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4a0b71feadc19 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x40817990df4c0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef133c25543bea; op2val:0x3fe4a0b71feadc19; op3val:0x7fe40817990df4c0; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf133c25543bea and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4a0b71feadc19 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x40817990df4c0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef133c25543bea; op2val:0x3fe4a0b71feadc19; op3val:0x7fe40817990df4c0; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf133c25543bea and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4a0b71feadc19 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x40817990df4c0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef133c25543bea; op2val:0x3fe4a0b71feadc19; op3val:0x7fe40817990df4c0; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf133c25543bea and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4a0b71feadc19 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x40817990df4c0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef133c25543bea; op2val:0x3fe4a0b71feadc19; op3val:0x7fe40817990df4c0; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x24d08f17c0238 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x488d416b95f58 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x77ccc90941495 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe24d08f17c0238; op2val:0x3ff488d416b95f58; op3val:0x7fe77ccc90941495; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x24d08f17c0238 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x488d416b95f58 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x77ccc90941495 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe24d08f17c0238; op2val:0x3ff488d416b95f58; op3val:0x7fe77ccc90941495; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x24d08f17c0238 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x488d416b95f58 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x77ccc90941495 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe24d08f17c0238; op2val:0x3ff488d416b95f58; op3val:0x7fe77ccc90941495; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x24d08f17c0238 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x488d416b95f58 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x77ccc90941495 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe24d08f17c0238; op2val:0x3ff488d416b95f58; op3val:0x7fe77ccc90941495; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x24d08f17c0238 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x488d416b95f58 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x77ccc90941495 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe24d08f17c0238; op2val:0x3ff488d416b95f58; op3val:0x7fe77ccc90941495; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd27e1bfc4fb5f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc3adeb30d049a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9b888b8c9068f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd27e1bfc4fb5f; op2val:0x3ffc3adeb30d049a; op3val:0x7fe9b888b8c9068f; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd27e1bfc4fb5f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc3adeb30d049a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9b888b8c9068f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd27e1bfc4fb5f; op2val:0x3ffc3adeb30d049a; op3val:0x7fe9b888b8c9068f; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd27e1bfc4fb5f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc3adeb30d049a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9b888b8c9068f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd27e1bfc4fb5f; op2val:0x3ffc3adeb30d049a; op3val:0x7fe9b888b8c9068f; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd27e1bfc4fb5f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc3adeb30d049a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9b888b8c9068f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd27e1bfc4fb5f; op2val:0x3ffc3adeb30d049a; op3val:0x7fe9b888b8c9068f; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd27e1bfc4fb5f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc3adeb30d049a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9b888b8c9068f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd27e1bfc4fb5f; op2val:0x3ffc3adeb30d049a; op3val:0x7fe9b888b8c9068f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc4a83973f181f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x63a715946bbbe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3a6e5bc8bf800 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc4a83973f181f; op2val:0x40163a715946bbbe; op3val:0x7fe3a6e5bc8bf800; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc4a83973f181f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x63a715946bbbe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3a6e5bc8bf800 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc4a83973f181f; op2val:0x40163a715946bbbe; op3val:0x7fe3a6e5bc8bf800; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc4a83973f181f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x63a715946bbbe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3a6e5bc8bf800 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc4a83973f181f; op2val:0x40163a715946bbbe; op3val:0x7fe3a6e5bc8bf800; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc4a83973f181f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x63a715946bbbe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3a6e5bc8bf800 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc4a83973f181f; op2val:0x40163a715946bbbe; op3val:0x7fe3a6e5bc8bf800; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc4a83973f181f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x63a715946bbbe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3a6e5bc8bf800 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc4a83973f181f; op2val:0x40163a715946bbbe; op3val:0x7fe3a6e5bc8bf800; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7a5876fb5e6ee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3d2c3c110ee11 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd4c0eb4fa8e3d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7a5876fb5e6ee; op2val:0x3fe3d2c3c110ee11; op3val:0x7fdd4c0eb4fa8e3d; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7a5876fb5e6ee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3d2c3c110ee11 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd4c0eb4fa8e3d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7a5876fb5e6ee; op2val:0x3fe3d2c3c110ee11; op3val:0x7fdd4c0eb4fa8e3d; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7a5876fb5e6ee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3d2c3c110ee11 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd4c0eb4fa8e3d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7a5876fb5e6ee; op2val:0x3fe3d2c3c110ee11; op3val:0x7fdd4c0eb4fa8e3d; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7a5876fb5e6ee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3d2c3c110ee11 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd4c0eb4fa8e3d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7a5876fb5e6ee; op2val:0x3fe3d2c3c110ee11; op3val:0x7fdd4c0eb4fa8e3d; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7a5876fb5e6ee and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3d2c3c110ee11 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd4c0eb4fa8e3d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7a5876fb5e6ee; op2val:0x3fe3d2c3c110ee11; op3val:0x7fdd4c0eb4fa8e3d; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x41fcd2880834a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5de106ad85473 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb810b29ea92a5 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe41fcd2880834a; op2val:0x3ff5de106ad85473; op3val:0x7feb810b29ea92a5; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x41fcd2880834a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5de106ad85473 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb810b29ea92a5 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe41fcd2880834a; op2val:0x3ff5de106ad85473; op3val:0x7feb810b29ea92a5; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x41fcd2880834a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5de106ad85473 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb810b29ea92a5 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe41fcd2880834a; op2val:0x3ff5de106ad85473; op3val:0x7feb810b29ea92a5; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x41fcd2880834a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5de106ad85473 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb810b29ea92a5 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe41fcd2880834a; op2val:0x3ff5de106ad85473; op3val:0x7feb810b29ea92a5; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x41fcd2880834a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5de106ad85473 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb810b29ea92a5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe41fcd2880834a; op2val:0x3ff5de106ad85473; op3val:0x7feb810b29ea92a5; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x66ac2ff7114a7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0d0231972be25 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x78e60139bf53f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc66ac2ff7114a7; op2val:0x3ff0d0231972be25; op3val:0x7fc78e60139bf53f; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x66ac2ff7114a7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0d0231972be25 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x78e60139bf53f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc66ac2ff7114a7; op2val:0x3ff0d0231972be25; op3val:0x7fc78e60139bf53f; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x66ac2ff7114a7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0d0231972be25 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x78e60139bf53f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc66ac2ff7114a7; op2val:0x3ff0d0231972be25; op3val:0x7fc78e60139bf53f; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x66ac2ff7114a7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0d0231972be25 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x78e60139bf53f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc66ac2ff7114a7; op2val:0x3ff0d0231972be25; op3val:0x7fc78e60139bf53f; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x66ac2ff7114a7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0d0231972be25 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x78e60139bf53f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc66ac2ff7114a7; op2val:0x3ff0d0231972be25; op3val:0x7fc78e60139bf53f; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x74b7ae7463e9a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x426308fed6fc4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd55f398fa1621 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe74b7ae7463e9a; op2val:0x3ff426308fed6fc4; op3val:0x7fed55f398fa1621; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x74b7ae7463e9a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x426308fed6fc4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd55f398fa1621 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe74b7ae7463e9a; op2val:0x3ff426308fed6fc4; op3val:0x7fed55f398fa1621; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x74b7ae7463e9a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x426308fed6fc4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd55f398fa1621 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe74b7ae7463e9a; op2val:0x3ff426308fed6fc4; op3val:0x7fed55f398fa1621; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x74b7ae7463e9a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x426308fed6fc4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd55f398fa1621 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe74b7ae7463e9a; op2val:0x3ff426308fed6fc4; op3val:0x7fed55f398fa1621; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x74b7ae7463e9a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x426308fed6fc4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd55f398fa1621 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe74b7ae7463e9a; op2val:0x3ff426308fed6fc4; op3val:0x7fed55f398fa1621; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6776f6ab4f0a7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcd9eda2830b60 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x441823f93c0d7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6776f6ab4f0a7; op2val:0x3fdcd9eda2830b60; op3val:0x7fc441823f93c0d7; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6776f6ab4f0a7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcd9eda2830b60 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x441823f93c0d7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6776f6ab4f0a7; op2val:0x3fdcd9eda2830b60; op3val:0x7fc441823f93c0d7; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6776f6ab4f0a7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcd9eda2830b60 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x441823f93c0d7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6776f6ab4f0a7; op2val:0x3fdcd9eda2830b60; op3val:0x7fc441823f93c0d7; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6776f6ab4f0a7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcd9eda2830b60 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x441823f93c0d7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6776f6ab4f0a7; op2val:0x3fdcd9eda2830b60; op3val:0x7fc441823f93c0d7; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6776f6ab4f0a7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcd9eda2830b60 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x441823f93c0d7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6776f6ab4f0a7; op2val:0x3fdcd9eda2830b60; op3val:0x7fc441823f93c0d7; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x546d58b0516c7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x80a5f1550808a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xff80b06ea7427 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe546d58b0516c7; op2val:0x3fc80a5f1550808a; op3val:0x7fbff80b06ea7427; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x546d58b0516c7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x80a5f1550808a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xff80b06ea7427 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe546d58b0516c7; op2val:0x3fc80a5f1550808a; op3val:0x7fbff80b06ea7427; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x546d58b0516c7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x80a5f1550808a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xff80b06ea7427 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe546d58b0516c7; op2val:0x3fc80a5f1550808a; op3val:0x7fbff80b06ea7427; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x546d58b0516c7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x80a5f1550808a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xff80b06ea7427 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe546d58b0516c7; op2val:0x3fc80a5f1550808a; op3val:0x7fbff80b06ea7427; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x546d58b0516c7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x80a5f1550808a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xff80b06ea7427 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe546d58b0516c7; op2val:0x3fc80a5f1550808a; op3val:0x7fbff80b06ea7427; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x62ff402c49baf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x69d6ce2107cb9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf5c3d0b54c586 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb62ff402c49baf; op2val:0x40269d6ce2107cb9; op3val:0x7fef5c3d0b54c586; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x62ff402c49baf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x69d6ce2107cb9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf5c3d0b54c586 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb62ff402c49baf; op2val:0x40269d6ce2107cb9; op3val:0x7fef5c3d0b54c586; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x62ff402c49baf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x69d6ce2107cb9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf5c3d0b54c586 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb62ff402c49baf; op2val:0x40269d6ce2107cb9; op3val:0x7fef5c3d0b54c586; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x62ff402c49baf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x69d6ce2107cb9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf5c3d0b54c586 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb62ff402c49baf; op2val:0x40269d6ce2107cb9; op3val:0x7fef5c3d0b54c586; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x62ff402c49baf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x69d6ce2107cb9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf5c3d0b54c586 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb62ff402c49baf; op2val:0x40269d6ce2107cb9; op3val:0x7fef5c3d0b54c586; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x60093f30fd5e0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x220d4421487d9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8edcb7bdee2ac and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe60093f30fd5e0; op2val:0x3ff220d4421487d9; op3val:0x7fe8edcb7bdee2ac; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x60093f30fd5e0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x220d4421487d9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8edcb7bdee2ac and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe60093f30fd5e0; op2val:0x3ff220d4421487d9; op3val:0x7fe8edcb7bdee2ac; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x60093f30fd5e0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x220d4421487d9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8edcb7bdee2ac and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe60093f30fd5e0; op2val:0x3ff220d4421487d9; op3val:0x7fe8edcb7bdee2ac; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x60093f30fd5e0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x220d4421487d9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8edcb7bdee2ac and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe60093f30fd5e0; op2val:0x3ff220d4421487d9; op3val:0x7fe8edcb7bdee2ac; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x60093f30fd5e0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x220d4421487d9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8edcb7bdee2ac and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe60093f30fd5e0; op2val:0x3ff220d4421487d9; op3val:0x7fe8edcb7bdee2ac; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02a158a06a947 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcc8ef253ba14c and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd14a559084937 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe02a158a06a947; op2val:0x3fccc8ef253ba14c; op3val:0x7fbd14a559084937; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02a158a06a947 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcc8ef253ba14c and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd14a559084937 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe02a158a06a947; op2val:0x3fccc8ef253ba14c; op3val:0x7fbd14a559084937; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02a158a06a947 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcc8ef253ba14c and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd14a559084937 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe02a158a06a947; op2val:0x3fccc8ef253ba14c; op3val:0x7fbd14a559084937; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02a158a06a947 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcc8ef253ba14c and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd14a559084937 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe02a158a06a947; op2val:0x3fccc8ef253ba14c; op3val:0x7fbd14a559084937; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02a158a06a947 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcc8ef253ba14c and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd14a559084937 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe02a158a06a947; op2val:0x3fccc8ef253ba14c; op3val:0x7fbd14a559084937; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7077053f4f8c6 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb96fe80cefc2c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3daf0cd1e8f4b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7077053f4f8c6; op2val:0x3fcb96fe80cefc2c; op3val:0x7fc3daf0cd1e8f4b; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7077053f4f8c6 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb96fe80cefc2c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3daf0cd1e8f4b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7077053f4f8c6; op2val:0x3fcb96fe80cefc2c; op3val:0x7fc3daf0cd1e8f4b; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7077053f4f8c6 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb96fe80cefc2c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3daf0cd1e8f4b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7077053f4f8c6; op2val:0x3fcb96fe80cefc2c; op3val:0x7fc3daf0cd1e8f4b; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7077053f4f8c6 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb96fe80cefc2c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3daf0cd1e8f4b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7077053f4f8c6; op2val:0x3fcb96fe80cefc2c; op3val:0x7fc3daf0cd1e8f4b; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7077053f4f8c6 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xb96fe80cefc2c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3daf0cd1e8f4b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7077053f4f8c6; op2val:0x3fcb96fe80cefc2c; op3val:0x7fc3daf0cd1e8f4b; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc023212d8c577 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x60ccb89feb1d2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cb56672140d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc023212d8c577; op2val:0x40160ccb89feb1d2; op3val:0x7fe34cb56672140d; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc023212d8c577 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x60ccb89feb1d2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cb56672140d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc023212d8c577; op2val:0x40160ccb89feb1d2; op3val:0x7fe34cb56672140d; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc023212d8c577 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x60ccb89feb1d2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cb56672140d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc023212d8c577; op2val:0x40160ccb89feb1d2; op3val:0x7fe34cb56672140d; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc023212d8c577 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x60ccb89feb1d2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cb56672140d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc023212d8c577; op2val:0x40160ccb89feb1d2; op3val:0x7fe34cb56672140d; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc023212d8c577 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x60ccb89feb1d2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cb56672140d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc023212d8c577; op2val:0x40160ccb89feb1d2; op3val:0x7fe34cb56672140d; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x114c7285ec6df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf888257869929 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0d4fed0a8cdaf and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb114c7285ec6df; op2val:0x3fff888257869929; op3val:0x7fc0d4fed0a8cdaf; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x114c7285ec6df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf888257869929 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0d4fed0a8cdaf and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb114c7285ec6df; op2val:0x3fff888257869929; op3val:0x7fc0d4fed0a8cdaf; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x114c7285ec6df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf888257869929 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0d4fed0a8cdaf and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb114c7285ec6df; op2val:0x3fff888257869929; op3val:0x7fc0d4fed0a8cdaf; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x114c7285ec6df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf888257869929 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0d4fed0a8cdaf and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb114c7285ec6df; op2val:0x3fff888257869929; op3val:0x7fc0d4fed0a8cdaf; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x114c7285ec6df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf888257869929 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0d4fed0a8cdaf and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb114c7285ec6df; op2val:0x3fff888257869929; op3val:0x7fc0d4fed0a8cdaf; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4c83c1ea7b4eb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3a78a696dafd2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x987651fde28b0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4c83c1ea7b4eb; op2val:0x3ff3a78a696dafd2; op3val:0x7fe987651fde28b0; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4c83c1ea7b4eb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3a78a696dafd2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x987651fde28b0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4c83c1ea7b4eb; op2val:0x3ff3a78a696dafd2; op3val:0x7fe987651fde28b0; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4c83c1ea7b4eb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3a78a696dafd2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x987651fde28b0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4c83c1ea7b4eb; op2val:0x3ff3a78a696dafd2; op3val:0x7fe987651fde28b0; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4c83c1ea7b4eb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3a78a696dafd2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x987651fde28b0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4c83c1ea7b4eb; op2val:0x3ff3a78a696dafd2; op3val:0x7fe987651fde28b0; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4c83c1ea7b4eb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3a78a696dafd2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x987651fde28b0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4c83c1ea7b4eb; op2val:0x3ff3a78a696dafd2; op3val:0x7fe987651fde28b0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2ef0e618f004c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7737f3972157f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbc05171178e91 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2ef0e618f004c; op2val:0x3ff7737f3972157f; op3val:0x7febc05171178e91; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2ef0e618f004c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7737f3972157f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbc05171178e91 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2ef0e618f004c; op2val:0x3ff7737f3972157f; op3val:0x7febc05171178e91; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2ef0e618f004c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7737f3972157f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbc05171178e91 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2ef0e618f004c; op2val:0x3ff7737f3972157f; op3val:0x7febc05171178e91; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2ef0e618f004c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7737f3972157f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbc05171178e91 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2ef0e618f004c; op2val:0x3ff7737f3972157f; op3val:0x7febc05171178e91; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2ef0e618f004c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7737f3972157f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbc05171178e91 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2ef0e618f004c; op2val:0x3ff7737f3972157f; op3val:0x7febc05171178e91; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd23aa95094cb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb15f6ba660af1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaef38ced97dfd and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd23aa95094cb; op2val:0x3feb15f6ba660af1; op3val:0x7feaef38ced97dfd; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd23aa95094cb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb15f6ba660af1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaef38ced97dfd and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd23aa95094cb; op2val:0x3feb15f6ba660af1; op3val:0x7feaef38ced97dfd; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd23aa95094cb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb15f6ba660af1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaef38ced97dfd and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd23aa95094cb; op2val:0x3feb15f6ba660af1; op3val:0x7feaef38ced97dfd; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd23aa95094cb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb15f6ba660af1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaef38ced97dfd and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd23aa95094cb; op2val:0x3feb15f6ba660af1; op3val:0x7feaef38ced97dfd; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd23aa95094cb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb15f6ba660af1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaef38ced97dfd and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd23aa95094cb; op2val:0x3feb15f6ba660af1; op3val:0x7feaef38ced97dfd; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf3c4bdf5e6f2d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7e22304d57ca3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x750128f1053a7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf3c4bdf5e6f2d; op2val:0x3fe7e22304d57ca3; op3val:0x7fd750128f1053a7; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf3c4bdf5e6f2d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7e22304d57ca3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x750128f1053a7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf3c4bdf5e6f2d; op2val:0x3fe7e22304d57ca3; op3val:0x7fd750128f1053a7; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf3c4bdf5e6f2d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7e22304d57ca3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x750128f1053a7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf3c4bdf5e6f2d; op2val:0x3fe7e22304d57ca3; op3val:0x7fd750128f1053a7; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf3c4bdf5e6f2d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7e22304d57ca3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x750128f1053a7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf3c4bdf5e6f2d; op2val:0x3fe7e22304d57ca3; op3val:0x7fd750128f1053a7; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf3c4bdf5e6f2d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7e22304d57ca3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x750128f1053a7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf3c4bdf5e6f2d; op2val:0x3fe7e22304d57ca3; op3val:0x7fd750128f1053a7; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a6201a197557 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7e08a8a7b3795 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8d8740fdfea01 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a6201a197557; op2val:0x3ff7e08a8a7b3795; op3val:0x7fe8d8740fdfea01; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a6201a197557 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7e08a8a7b3795 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8d8740fdfea01 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a6201a197557; op2val:0x3ff7e08a8a7b3795; op3val:0x7fe8d8740fdfea01; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a6201a197557 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7e08a8a7b3795 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8d8740fdfea01 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a6201a197557; op2val:0x3ff7e08a8a7b3795; op3val:0x7fe8d8740fdfea01; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a6201a197557 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7e08a8a7b3795 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8d8740fdfea01 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a6201a197557; op2val:0x3ff7e08a8a7b3795; op3val:0x7fe8d8740fdfea01; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a6201a197557 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7e08a8a7b3795 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8d8740fdfea01 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a6201a197557; op2val:0x3ff7e08a8a7b3795; op3val:0x7fe8d8740fdfea01; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a23e2fb712a3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd5dbaca2d5c3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe8781f0338de4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a23e2fb712a3; op2val:0x3ffd5dbaca2d5c3f; op3val:0x7fee8781f0338de4; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a23e2fb712a3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd5dbaca2d5c3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe8781f0338de4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a23e2fb712a3; op2val:0x3ffd5dbaca2d5c3f; op3val:0x7fee8781f0338de4; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a23e2fb712a3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd5dbaca2d5c3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe8781f0338de4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a23e2fb712a3; op2val:0x3ffd5dbaca2d5c3f; op3val:0x7fee8781f0338de4; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a23e2fb712a3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd5dbaca2d5c3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe8781f0338de4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a23e2fb712a3; op2val:0x3ffd5dbaca2d5c3f; op3val:0x7fee8781f0338de4; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a23e2fb712a3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xd5dbaca2d5c3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe8781f0338de4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a23e2fb712a3; op2val:0x3ffd5dbaca2d5c3f; op3val:0x7fee8781f0338de4; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd22227ba705ff and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd6b123fbc8aee and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac86a00971463 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed22227ba705ff; op2val:0x3fed6b123fbc8aee; op3val:0x7feac86a00971463; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd22227ba705ff and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd6b123fbc8aee and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac86a00971463 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed22227ba705ff; op2val:0x3fed6b123fbc8aee; op3val:0x7feac86a00971463; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd22227ba705ff and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd6b123fbc8aee and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac86a00971463 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed22227ba705ff; op2val:0x3fed6b123fbc8aee; op3val:0x7feac86a00971463; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd22227ba705ff and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd6b123fbc8aee and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac86a00971463 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed22227ba705ff; op2val:0x3fed6b123fbc8aee; op3val:0x7feac86a00971463; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd22227ba705ff and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd6b123fbc8aee and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac86a00971463 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed22227ba705ff; op2val:0x3fed6b123fbc8aee; op3val:0x7feac86a00971463; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x858851b4b719d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x52cd08d9ba0ff and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x01c2fbc0cad77 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd858851b4b719d; op2val:0x3fd52cd08d9ba0ff; op3val:0x7fc01c2fbc0cad77; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x858851b4b719d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x52cd08d9ba0ff and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x01c2fbc0cad77 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd858851b4b719d; op2val:0x3fd52cd08d9ba0ff; op3val:0x7fc01c2fbc0cad77; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x858851b4b719d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x52cd08d9ba0ff and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x01c2fbc0cad77 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd858851b4b719d; op2val:0x3fd52cd08d9ba0ff; op3val:0x7fc01c2fbc0cad77; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x858851b4b719d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x52cd08d9ba0ff and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x01c2fbc0cad77 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd858851b4b719d; op2val:0x3fd52cd08d9ba0ff; op3val:0x7fc01c2fbc0cad77; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x858851b4b719d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x52cd08d9ba0ff and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x01c2fbc0cad77 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd858851b4b719d; op2val:0x3fd52cd08d9ba0ff; op3val:0x7fc01c2fbc0cad77; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xda6e456917f2c and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8a60cf86df806 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6d70906372287 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feda6e456917f2c; op2val:0x3fb8a60cf86df806; op3val:0x7fb6d70906372287; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xda6e456917f2c and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8a60cf86df806 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6d70906372287 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feda6e456917f2c; op2val:0x3fb8a60cf86df806; op3val:0x7fb6d70906372287; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xda6e456917f2c and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8a60cf86df806 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6d70906372287 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feda6e456917f2c; op2val:0x3fb8a60cf86df806; op3val:0x7fb6d70906372287; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xda6e456917f2c and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8a60cf86df806 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6d70906372287 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feda6e456917f2c; op2val:0x3fb8a60cf86df806; op3val:0x7fb6d70906372287; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xda6e456917f2c and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x8a60cf86df806 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6d70906372287 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feda6e456917f2c; op2val:0x3fb8a60cf86df806; op3val:0x7fb6d70906372287; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eb883a7b3908 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3beeb9c2285de and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x895640ced1156 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eb883a7b3908; op2val:0x3ff3beeb9c2285de; op3val:0x7fe895640ced1156; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eb883a7b3908 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3beeb9c2285de and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x895640ced1156 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eb883a7b3908; op2val:0x3ff3beeb9c2285de; op3val:0x7fe895640ced1156; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eb883a7b3908 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3beeb9c2285de and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x895640ced1156 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eb883a7b3908; op2val:0x3ff3beeb9c2285de; op3val:0x7fe895640ced1156; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eb883a7b3908 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3beeb9c2285de and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x895640ced1156 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eb883a7b3908; op2val:0x3ff3beeb9c2285de; op3val:0x7fe895640ced1156; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eb883a7b3908 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3beeb9c2285de and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x895640ced1156 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eb883a7b3908; op2val:0x3ff3beeb9c2285de; op3val:0x7fe895640ced1156; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x383dd5169c637 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1527d01b8191f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x520b76d0b75a7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd383dd5169c637; op2val:0x3fd1527d01b8191f; op3val:0x7fb520b76d0b75a7; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x383dd5169c637 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1527d01b8191f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x520b76d0b75a7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd383dd5169c637; op2val:0x3fd1527d01b8191f; op3val:0x7fb520b76d0b75a7; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x383dd5169c637 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1527d01b8191f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x520b76d0b75a7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd383dd5169c637; op2val:0x3fd1527d01b8191f; op3val:0x7fb520b76d0b75a7; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x383dd5169c637 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1527d01b8191f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x520b76d0b75a7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd383dd5169c637; op2val:0x3fd1527d01b8191f; op3val:0x7fb520b76d0b75a7; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x383dd5169c637 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1527d01b8191f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x520b76d0b75a7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd383dd5169c637; op2val:0x3fd1527d01b8191f; op3val:0x7fb520b76d0b75a7; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7397d51c953cf and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0xe3a5d84ef4fee and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x5f0418f60057f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7397d51c953cf; op2val:0x3f8e3a5d84ef4fee; op3val:0x7f75f0418f60057f; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7397d51c953cf and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0xe3a5d84ef4fee and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x5f0418f60057f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7397d51c953cf; op2val:0x3f8e3a5d84ef4fee; op3val:0x7f75f0418f60057f; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7397d51c953cf and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0xe3a5d84ef4fee and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x5f0418f60057f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7397d51c953cf; op2val:0x3f8e3a5d84ef4fee; op3val:0x7f75f0418f60057f; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7397d51c953cf and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0xe3a5d84ef4fee and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x5f0418f60057f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7397d51c953cf; op2val:0x3f8e3a5d84ef4fee; op3val:0x7f75f0418f60057f; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7397d51c953cf and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0xe3a5d84ef4fee and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x5f0418f60057f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7397d51c953cf; op2val:0x3f8e3a5d84ef4fee; op3val:0x7f75f0418f60057f; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7be4444b4f445 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x270188837b78d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb5c6512b6df3f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7be4444b4f445; op2val:0x400270188837b78d; op3val:0x7feb5c6512b6df3f; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7be4444b4f445 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x270188837b78d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb5c6512b6df3f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7be4444b4f445; op2val:0x400270188837b78d; op3val:0x7feb5c6512b6df3f; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7be4444b4f445 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x270188837b78d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb5c6512b6df3f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7be4444b4f445; op2val:0x400270188837b78d; op3val:0x7feb5c6512b6df3f; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7be4444b4f445 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x270188837b78d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb5c6512b6df3f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7be4444b4f445; op2val:0x400270188837b78d; op3val:0x7feb5c6512b6df3f; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7be4444b4f445 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x270188837b78d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb5c6512b6df3f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7be4444b4f445; op2val:0x400270188837b78d; op3val:0x7feb5c6512b6df3f; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x01ddc928e0d81 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0e118a6368321 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1009954929043 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd01ddc928e0d81; op2val:0x3fe0e118a6368321; op3val:0x7fc1009954929043; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x01ddc928e0d81 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0e118a6368321 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1009954929043 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd01ddc928e0d81; op2val:0x3fe0e118a6368321; op3val:0x7fc1009954929043; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x01ddc928e0d81 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0e118a6368321 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1009954929043 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd01ddc928e0d81; op2val:0x3fe0e118a6368321; op3val:0x7fc1009954929043; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x01ddc928e0d81 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0e118a6368321 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1009954929043 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd01ddc928e0d81; op2val:0x3fe0e118a6368321; op3val:0x7fc1009954929043; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x01ddc928e0d81 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0e118a6368321 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1009954929043 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd01ddc928e0d81; op2val:0x3fe0e118a6368321; op3val:0x7fc1009954929043; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb5c21cc0aeb77 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x94872c41ac66c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x59debd3573af1 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb5c21cc0aeb77; op2val:0x3fd94872c41ac66c; op3val:0x7fd59debd3573af1; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb5c21cc0aeb77 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x94872c41ac66c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x59debd3573af1 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb5c21cc0aeb77; op2val:0x3fd94872c41ac66c; op3val:0x7fd59debd3573af1; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb5c21cc0aeb77 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x94872c41ac66c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x59debd3573af1 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb5c21cc0aeb77; op2val:0x3fd94872c41ac66c; op3val:0x7fd59debd3573af1; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb5c21cc0aeb77 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x94872c41ac66c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x59debd3573af1 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb5c21cc0aeb77; op2val:0x3fd94872c41ac66c; op3val:0x7fd59debd3573af1; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb5c21cc0aeb77 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x94872c41ac66c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x59debd3573af1 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb5c21cc0aeb77; op2val:0x3fd94872c41ac66c; op3val:0x7fd59debd3573af1; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd69ac69d51396 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe47ab05a54153 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbd4f14ba45087 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed69ac69d51396; op2val:0x3fee47ab05a54153; op3val:0x7febd4f14ba45087; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd69ac69d51396 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe47ab05a54153 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbd4f14ba45087 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed69ac69d51396; op2val:0x3fee47ab05a54153; op3val:0x7febd4f14ba45087; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd69ac69d51396 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe47ab05a54153 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbd4f14ba45087 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed69ac69d51396; op2val:0x3fee47ab05a54153; op3val:0x7febd4f14ba45087; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd69ac69d51396 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe47ab05a54153 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbd4f14ba45087 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed69ac69d51396; op2val:0x3fee47ab05a54153; op3val:0x7febd4f14ba45087; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd69ac69d51396 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe47ab05a54153 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbd4f14ba45087 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed69ac69d51396; op2val:0x3fee47ab05a54153; op3val:0x7febd4f14ba45087; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc7784d8dacdb and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5f7c825fb0e2b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3c1be9c53e823 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecc7784d8dacdb; op2val:0x3fc5f7c825fb0e2b; op3val:0x7fc3c1be9c53e823; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc7784d8dacdb and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5f7c825fb0e2b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3c1be9c53e823 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecc7784d8dacdb; op2val:0x3fc5f7c825fb0e2b; op3val:0x7fc3c1be9c53e823; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 368, x18)

inst_278:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc7784d8dacdb and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5f7c825fb0e2b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3c1be9c53e823 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecc7784d8dacdb; op2val:0x3fc5f7c825fb0e2b; op3val:0x7fc3c1be9c53e823; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 384, x18)

inst_279:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc7784d8dacdb and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5f7c825fb0e2b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3c1be9c53e823 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecc7784d8dacdb; op2val:0x3fc5f7c825fb0e2b; op3val:0x7fc3c1be9c53e823; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 400, x18)

inst_280:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc7784d8dacdb and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5f7c825fb0e2b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3c1be9c53e823 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecc7784d8dacdb; op2val:0x3fc5f7c825fb0e2b; op3val:0x7fc3c1be9c53e823; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_281:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1bc7e1b91dcb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca213c005f7f5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaf0ce1e93ae2d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde1bc7e1b91dcb; op2val:0x3ffca213c005f7f5; op3val:0x7feaf0ce1e93ae2d; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 432, x18)

inst_282:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1bc7e1b91dcb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca213c005f7f5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaf0ce1e93ae2d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde1bc7e1b91dcb; op2val:0x3ffca213c005f7f5; op3val:0x7feaf0ce1e93ae2d; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 448, x18)

inst_283:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1bc7e1b91dcb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca213c005f7f5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaf0ce1e93ae2d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde1bc7e1b91dcb; op2val:0x3ffca213c005f7f5; op3val:0x7feaf0ce1e93ae2d; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 464, x18)

inst_284:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1bc7e1b91dcb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca213c005f7f5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaf0ce1e93ae2d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde1bc7e1b91dcb; op2val:0x3ffca213c005f7f5; op3val:0x7feaf0ce1e93ae2d; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 480, x18)

inst_285:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1bc7e1b91dcb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca213c005f7f5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaf0ce1e93ae2d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde1bc7e1b91dcb; op2val:0x3ffca213c005f7f5; op3val:0x7feaf0ce1e93ae2d; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 496, x18)

inst_286:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63761262a7af5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2b460c05202e0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9f8c2a72e7ad4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63761262a7af5; op2val:0x3ff2b460c05202e0; op3val:0x7fe9f8c2a72e7ad4; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 512, x18)

inst_287:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63761262a7af5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2b460c05202e0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9f8c2a72e7ad4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63761262a7af5; op2val:0x3ff2b460c05202e0; op3val:0x7fe9f8c2a72e7ad4; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 528, x18)

inst_288:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63761262a7af5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2b460c05202e0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9f8c2a72e7ad4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63761262a7af5; op2val:0x3ff2b460c05202e0; op3val:0x7fe9f8c2a72e7ad4; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 544, x18)

inst_289:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63761262a7af5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2b460c05202e0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9f8c2a72e7ad4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63761262a7af5; op2val:0x3ff2b460c05202e0; op3val:0x7fe9f8c2a72e7ad4; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 560, x18)

inst_290:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63761262a7af5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2b460c05202e0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9f8c2a72e7ad4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63761262a7af5; op2val:0x3ff2b460c05202e0; op3val:0x7fe9f8c2a72e7ad4; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 576, x18)

inst_291:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9382d77a6dfe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3b5d5677dd48d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0fc47f311a49b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb9382d77a6dfe; op2val:0x3fe3b5d5677dd48d; op3val:0x7fe0fc47f311a49b; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 592, x18)

inst_292:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9382d77a6dfe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3b5d5677dd48d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0fc47f311a49b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb9382d77a6dfe; op2val:0x3fe3b5d5677dd48d; op3val:0x7fe0fc47f311a49b; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 608, x18)

inst_293:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9382d77a6dfe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3b5d5677dd48d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0fc47f311a49b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb9382d77a6dfe; op2val:0x3fe3b5d5677dd48d; op3val:0x7fe0fc47f311a49b; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 624, x18)

inst_294:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9382d77a6dfe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3b5d5677dd48d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0fc47f311a49b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb9382d77a6dfe; op2val:0x3fe3b5d5677dd48d; op3val:0x7fe0fc47f311a49b; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 640, x18)

inst_295:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9382d77a6dfe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3b5d5677dd48d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0fc47f311a49b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb9382d77a6dfe; op2val:0x3fe3b5d5677dd48d; op3val:0x7fe0fc47f311a49b; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 656, x18)

inst_296:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f75ebd929099 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x99337ab2ee957 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe5106bbe3c07b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f75ebd929099; op2val:0x3fe99337ab2ee957; op3val:0x7fde5106bbe3c07b; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 672, x18)

inst_297:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f75ebd929099 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x99337ab2ee957 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe5106bbe3c07b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f75ebd929099; op2val:0x3fe99337ab2ee957; op3val:0x7fde5106bbe3c07b; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 688, x18)

inst_298:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f75ebd929099 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x99337ab2ee957 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe5106bbe3c07b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f75ebd929099; op2val:0x3fe99337ab2ee957; op3val:0x7fde5106bbe3c07b; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 704, x18)

inst_299:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f75ebd929099 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x99337ab2ee957 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe5106bbe3c07b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f75ebd929099; op2val:0x3fe99337ab2ee957; op3val:0x7fde5106bbe3c07b; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 720, x18)

inst_300:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f75ebd929099 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x99337ab2ee957 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe5106bbe3c07b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f75ebd929099; op2val:0x3fe99337ab2ee957; op3val:0x7fde5106bbe3c07b; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 736, x18)

inst_301:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x06f26a8a4514a and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde2ebabf2e17e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xeb28a24dd172f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe06f26a8a4514a; op2val:0x3fcde2ebabf2e17e; op3val:0x7fbeb28a24dd172f; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 752, x18)

inst_302:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x06f26a8a4514a and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde2ebabf2e17e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xeb28a24dd172f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe06f26a8a4514a; op2val:0x3fcde2ebabf2e17e; op3val:0x7fbeb28a24dd172f; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 768, x18)

inst_303:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x06f26a8a4514a and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde2ebabf2e17e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xeb28a24dd172f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe06f26a8a4514a; op2val:0x3fcde2ebabf2e17e; op3val:0x7fbeb28a24dd172f; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 784, x18)

inst_304:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x06f26a8a4514a and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde2ebabf2e17e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xeb28a24dd172f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe06f26a8a4514a; op2val:0x3fcde2ebabf2e17e; op3val:0x7fbeb28a24dd172f; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 800, x18)

inst_305:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x06f26a8a4514a and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xde2ebabf2e17e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xeb28a24dd172f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe06f26a8a4514a; op2val:0x3fcde2ebabf2e17e; op3val:0x7fbeb28a24dd172f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 816, x18)

inst_306:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe56a317b6b243 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb52e4839f4db4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9e7b04402a756 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee56a317b6b243; op2val:0x3feb52e4839f4db4; op3val:0x7fe9e7b04402a756; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 832, x18)

inst_307:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe56a317b6b243 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb52e4839f4db4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9e7b04402a756 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee56a317b6b243; op2val:0x3feb52e4839f4db4; op3val:0x7fe9e7b04402a756; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 848, x18)

inst_308:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe56a317b6b243 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb52e4839f4db4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9e7b04402a756 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee56a317b6b243; op2val:0x3feb52e4839f4db4; op3val:0x7fe9e7b04402a756; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 864, x18)

inst_309:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe56a317b6b243 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb52e4839f4db4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9e7b04402a756 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee56a317b6b243; op2val:0x3feb52e4839f4db4; op3val:0x7fe9e7b04402a756; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 880, x18)

inst_310:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe56a317b6b243 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb52e4839f4db4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9e7b04402a756 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee56a317b6b243; op2val:0x3feb52e4839f4db4; op3val:0x7fe9e7b04402a756; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 896, x18)

inst_311:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9de2bd8b45031 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6cdc2677914ea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x26f12946f0a28 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9de2bd8b45031; op2val:0x3fe6cdc2677914ea; op3val:0x7fe26f12946f0a28; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 912, x18)

inst_312:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9de2bd8b45031 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6cdc2677914ea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x26f12946f0a28 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9de2bd8b45031; op2val:0x3fe6cdc2677914ea; op3val:0x7fe26f12946f0a28; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 928, x18)

inst_313:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9de2bd8b45031 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6cdc2677914ea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x26f12946f0a28 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9de2bd8b45031; op2val:0x3fe6cdc2677914ea; op3val:0x7fe26f12946f0a28; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 944, x18)

inst_314:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9de2bd8b45031 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6cdc2677914ea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x26f12946f0a28 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9de2bd8b45031; op2val:0x3fe6cdc2677914ea; op3val:0x7fe26f12946f0a28; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 960, x18)

inst_315:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9de2bd8b45031 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6cdc2677914ea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x26f12946f0a28 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9de2bd8b45031; op2val:0x3fe6cdc2677914ea; op3val:0x7fe26f12946f0a28; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 976, x18)

inst_316:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8a4decc210893 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2a1f12d67acdb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xcb2e920d67af3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8a4decc210893; op2val:0x4002a1f12d67acdb; op3val:0x7fdcb2e920d67af3; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 992, x18)

inst_317:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8a4decc210893 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2a1f12d67acdb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xcb2e920d67af3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8a4decc210893; op2val:0x4002a1f12d67acdb; op3val:0x7fdcb2e920d67af3; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1008, x18)

inst_318:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8a4decc210893 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2a1f12d67acdb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xcb2e920d67af3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8a4decc210893; op2val:0x4002a1f12d67acdb; op3val:0x7fdcb2e920d67af3; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1024, x18)

inst_319:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8a4decc210893 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2a1f12d67acdb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xcb2e920d67af3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8a4decc210893; op2val:0x4002a1f12d67acdb; op3val:0x7fdcb2e920d67af3; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1040, x18)

inst_320:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8a4decc210893 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2a1f12d67acdb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xcb2e920d67af3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8a4decc210893; op2val:0x4002a1f12d67acdb; op3val:0x7fdcb2e920d67af3; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1056, x18)

inst_321:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x181c884c8efbf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9f8aed5259957 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc6ae44021a677 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc181c884c8efbf; op2val:0x4019f8aed5259957; op3val:0x7fec6ae44021a677; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1072, x18)

inst_322:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x181c884c8efbf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9f8aed5259957 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc6ae44021a677 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc181c884c8efbf; op2val:0x4019f8aed5259957; op3val:0x7fec6ae44021a677; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1088, x18)

inst_323:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x181c884c8efbf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9f8aed5259957 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc6ae44021a677 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc181c884c8efbf; op2val:0x4019f8aed5259957; op3val:0x7fec6ae44021a677; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1104, x18)

inst_324:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x181c884c8efbf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9f8aed5259957 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc6ae44021a677 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc181c884c8efbf; op2val:0x4019f8aed5259957; op3val:0x7fec6ae44021a677; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1120, x18)

inst_325:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x181c884c8efbf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9f8aed5259957 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc6ae44021a677 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc181c884c8efbf; op2val:0x4019f8aed5259957; op3val:0x7fec6ae44021a677; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1136, x18)

inst_326:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xebf74076da493 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1fe6bb3f80fcb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x14a2cca067a89 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdebf74076da493; op2val:0x3fe1fe6bb3f80fcb; op3val:0x7fd14a2cca067a89; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1152, x18)

inst_327:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xebf74076da493 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1fe6bb3f80fcb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x14a2cca067a89 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdebf74076da493; op2val:0x3fe1fe6bb3f80fcb; op3val:0x7fd14a2cca067a89; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1168, x18)

inst_328:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xebf74076da493 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1fe6bb3f80fcb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x14a2cca067a89 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdebf74076da493; op2val:0x3fe1fe6bb3f80fcb; op3val:0x7fd14a2cca067a89; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1184, x18)

inst_329:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xebf74076da493 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1fe6bb3f80fcb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x14a2cca067a89 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdebf74076da493; op2val:0x3fe1fe6bb3f80fcb; op3val:0x7fd14a2cca067a89; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1200, x18)

inst_330:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xebf74076da493 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1fe6bb3f80fcb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x14a2cca067a89 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdebf74076da493; op2val:0x3fe1fe6bb3f80fcb; op3val:0x7fd14a2cca067a89; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1216, x18)

inst_331:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2088d3e11fda6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1cc44e6d9293e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x40f50c3527b82 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2088d3e11fda6; op2val:0x3ff1cc44e6d9293e; op3val:0x7fe40f50c3527b82; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1232, x18)

inst_332:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2088d3e11fda6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1cc44e6d9293e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x40f50c3527b82 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2088d3e11fda6; op2val:0x3ff1cc44e6d9293e; op3val:0x7fe40f50c3527b82; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1248, x18)

inst_333:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2088d3e11fda6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1cc44e6d9293e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x40f50c3527b82 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2088d3e11fda6; op2val:0x3ff1cc44e6d9293e; op3val:0x7fe40f50c3527b82; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1264, x18)

inst_334:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2088d3e11fda6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1cc44e6d9293e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x40f50c3527b82 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2088d3e11fda6; op2val:0x3ff1cc44e6d9293e; op3val:0x7fe40f50c3527b82; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1280, x18)

inst_335:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2088d3e11fda6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1cc44e6d9293e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x40f50c3527b82 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2088d3e11fda6; op2val:0x3ff1cc44e6d9293e; op3val:0x7fe40f50c3527b82; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1296, x18)

inst_336:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x891e2efdb19e1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8bfa6e87db32d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x300911db76428 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd891e2efdb19e1; op2val:0x3ff8bfa6e87db32d; op3val:0x7fe300911db76428; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1312, x18)

inst_337:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x891e2efdb19e1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8bfa6e87db32d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x300911db76428 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd891e2efdb19e1; op2val:0x3ff8bfa6e87db32d; op3val:0x7fe300911db76428; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1328, x18)

inst_338:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x891e2efdb19e1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8bfa6e87db32d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x300911db76428 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd891e2efdb19e1; op2val:0x3ff8bfa6e87db32d; op3val:0x7fe300911db76428; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1344, x18)

inst_339:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x891e2efdb19e1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8bfa6e87db32d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x300911db76428 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd891e2efdb19e1; op2val:0x3ff8bfa6e87db32d; op3val:0x7fe300911db76428; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1360, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x891e2efdb19e1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8bfa6e87db32d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x300911db76428 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd891e2efdb19e1; op2val:0x3ff8bfa6e87db32d; op3val:0x7fe300911db76428; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1376, x18)

inst_341:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x746a063e32f3f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x57ebfae2b872f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf45158aa6d635 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc746a063e32f3f; op2val:0x40157ebfae2b872f; op3val:0x7fef45158aa6d635; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1392, x18)

inst_342:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x746a063e32f3f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x57ebfae2b872f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf45158aa6d635 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc746a063e32f3f; op2val:0x40157ebfae2b872f; op3val:0x7fef45158aa6d635; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1408, x18)

inst_343:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x746a063e32f3f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x57ebfae2b872f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf45158aa6d635 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc746a063e32f3f; op2val:0x40157ebfae2b872f; op3val:0x7fef45158aa6d635; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1424, x18)

inst_344:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x746a063e32f3f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x57ebfae2b872f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf45158aa6d635 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc746a063e32f3f; op2val:0x40157ebfae2b872f; op3val:0x7fef45158aa6d635; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1440, x18)

inst_345:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x746a063e32f3f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x57ebfae2b872f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf45158aa6d635 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc746a063e32f3f; op2val:0x40157ebfae2b872f; op3val:0x7fef45158aa6d635; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1456, x18)

inst_346:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0f1d33203d307 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9558ab3e1c04a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad471945dbc7b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc0f1d33203d307; op2val:0x4009558ab3e1c04a; op3val:0x7fdad471945dbc7b; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1472, x18)

inst_347:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0f1d33203d307 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9558ab3e1c04a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad471945dbc7b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc0f1d33203d307; op2val:0x4009558ab3e1c04a; op3val:0x7fdad471945dbc7b; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1488, x18)

inst_348:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0f1d33203d307 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9558ab3e1c04a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad471945dbc7b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc0f1d33203d307; op2val:0x4009558ab3e1c04a; op3val:0x7fdad471945dbc7b; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1504, x18)

inst_349:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0f1d33203d307 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9558ab3e1c04a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad471945dbc7b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc0f1d33203d307; op2val:0x4009558ab3e1c04a; op3val:0x7fdad471945dbc7b; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1520, x18)

inst_350:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0f1d33203d307 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9558ab3e1c04a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad471945dbc7b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc0f1d33203d307; op2val:0x4009558ab3e1c04a; op3val:0x7fdad471945dbc7b; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1536, x18)

inst_351:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2e74ca276ff7d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd99ffd3a7ac76 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x17c9679d77d6b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2e74ca276ff7d; op2val:0x3fdd99ffd3a7ac76; op3val:0x7fd17c9679d77d6b; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1552, x18)

inst_352:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2e74ca276ff7d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd99ffd3a7ac76 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x17c9679d77d6b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2e74ca276ff7d; op2val:0x3fdd99ffd3a7ac76; op3val:0x7fd17c9679d77d6b; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1568, x18)

inst_353:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2e74ca276ff7d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd99ffd3a7ac76 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x17c9679d77d6b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2e74ca276ff7d; op2val:0x3fdd99ffd3a7ac76; op3val:0x7fd17c9679d77d6b; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1584, x18)

inst_354:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2e74ca276ff7d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd99ffd3a7ac76 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x17c9679d77d6b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2e74ca276ff7d; op2val:0x3fdd99ffd3a7ac76; op3val:0x7fd17c9679d77d6b; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1600, x18)

inst_355:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2e74ca276ff7d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd99ffd3a7ac76 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x17c9679d77d6b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2e74ca276ff7d; op2val:0x3fdd99ffd3a7ac76; op3val:0x7fd17c9679d77d6b; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1616, x18)

inst_356:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa81b0950e06a0 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xb0c82a2c2a677 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x667c9d5aae277 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea81b0950e06a0; op2val:0x3fbb0c82a2c2a677; op3val:0x7fb667c9d5aae277; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1632, x18)

inst_357:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa81b0950e06a0 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xb0c82a2c2a677 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x667c9d5aae277 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea81b0950e06a0; op2val:0x3fbb0c82a2c2a677; op3val:0x7fb667c9d5aae277; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1648, x18)

inst_358:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa81b0950e06a0 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xb0c82a2c2a677 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x667c9d5aae277 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea81b0950e06a0; op2val:0x3fbb0c82a2c2a677; op3val:0x7fb667c9d5aae277; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1664, x18)

inst_359:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa81b0950e06a0 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xb0c82a2c2a677 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x667c9d5aae277 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea81b0950e06a0; op2val:0x3fbb0c82a2c2a677; op3val:0x7fb667c9d5aae277; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1680, x18)

inst_360:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa81b0950e06a0 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xb0c82a2c2a677 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x667c9d5aae277 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea81b0950e06a0; op2val:0x3fbb0c82a2c2a677; op3val:0x7fb667c9d5aae277; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1696, x18)

inst_361:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x16e32cf849ecf and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x36742322e556a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x52359dac1d2ff and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb16e32cf849ecf; op2val:0x3fa36742322e556a; op3val:0x7f652359dac1d2ff; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1712, x18)

inst_362:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x16e32cf849ecf and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x36742322e556a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x52359dac1d2ff and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb16e32cf849ecf; op2val:0x3fa36742322e556a; op3val:0x7f652359dac1d2ff; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1728, x18)

inst_363:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x16e32cf849ecf and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x36742322e556a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x52359dac1d2ff and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb16e32cf849ecf; op2val:0x3fa36742322e556a; op3val:0x7f652359dac1d2ff; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1744, x18)

inst_364:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x16e32cf849ecf and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x36742322e556a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x52359dac1d2ff and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb16e32cf849ecf; op2val:0x3fa36742322e556a; op3val:0x7f652359dac1d2ff; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1760, x18)

inst_365:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x16e32cf849ecf and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x36742322e556a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x52359dac1d2ff and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb16e32cf849ecf; op2val:0x3fa36742322e556a; op3val:0x7f652359dac1d2ff; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1776, x18)

inst_366:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x1d7d6707c81f3 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x20c908f9b7990 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x420d45610d2ff and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc1d7d6707c81f3; op2val:0x3fb20c908f9b7990; op3val:0x7f8420d45610d2ff; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1792, x18)

inst_367:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x1d7d6707c81f3 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x20c908f9b7990 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x420d45610d2ff and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc1d7d6707c81f3; op2val:0x3fb20c908f9b7990; op3val:0x7f8420d45610d2ff; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1808, x18)

inst_368:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x1d7d6707c81f3 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x20c908f9b7990 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x420d45610d2ff and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc1d7d6707c81f3; op2val:0x3fb20c908f9b7990; op3val:0x7f8420d45610d2ff; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1824, x18)

inst_369:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x1d7d6707c81f3 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x20c908f9b7990 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x420d45610d2ff and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc1d7d6707c81f3; op2val:0x3fb20c908f9b7990; op3val:0x7f8420d45610d2ff; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1840, x18)

inst_370:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x1d7d6707c81f3 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x20c908f9b7990 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x420d45610d2ff and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc1d7d6707c81f3; op2val:0x3fb20c908f9b7990; op3val:0x7f8420d45610d2ff; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1856, x18)

inst_371:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaa38d0be280e1 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xfd41d096ecf1d and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xa7f0456043a7f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaa38d0be280e1; op2val:0x3fafd41d096ecf1d; op3val:0x7faa7f0456043a7f; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1872, x18)

inst_372:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaa38d0be280e1 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xfd41d096ecf1d and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xa7f0456043a7f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaa38d0be280e1; op2val:0x3fafd41d096ecf1d; op3val:0x7faa7f0456043a7f; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1888, x18)

inst_373:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaa38d0be280e1 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xfd41d096ecf1d and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xa7f0456043a7f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaa38d0be280e1; op2val:0x3fafd41d096ecf1d; op3val:0x7faa7f0456043a7f; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1904, x18)

inst_374:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaa38d0be280e1 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xfd41d096ecf1d and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xa7f0456043a7f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaa38d0be280e1; op2val:0x3fafd41d096ecf1d; op3val:0x7faa7f0456043a7f; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1920, x18)

inst_375:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaa38d0be280e1 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xfd41d096ecf1d and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xa7f0456043a7f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaa38d0be280e1; op2val:0x3fafd41d096ecf1d; op3val:0x7faa7f0456043a7f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1936, x18)

inst_376:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe550f455cc69b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd69c0af4bbfae and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe153957c4525 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee550f455cc69b; op2val:0x3fdd69c0af4bbfae; op3val:0x7fdbe153957c4525; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1952, x18)

inst_377:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe550f455cc69b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd69c0af4bbfae and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe153957c4525 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee550f455cc69b; op2val:0x3fdd69c0af4bbfae; op3val:0x7fdbe153957c4525; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1968, x18)

inst_378:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe550f455cc69b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd69c0af4bbfae and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe153957c4525 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee550f455cc69b; op2val:0x3fdd69c0af4bbfae; op3val:0x7fdbe153957c4525; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1984, x18)

inst_379:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe550f455cc69b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd69c0af4bbfae and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe153957c4525 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee550f455cc69b; op2val:0x3fdd69c0af4bbfae; op3val:0x7fdbe153957c4525; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2000, x18)

inst_380:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe550f455cc69b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd69c0af4bbfae and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbe153957c4525 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee550f455cc69b; op2val:0x3fdd69c0af4bbfae; op3val:0x7fdbe153957c4525; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_381:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xcaf8bae2074df and fs2 == 0 and fe2 == 0x404 and fm2 == 0x071b7eb928643 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd7b6d36c4d7ca and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9caf8bae2074df; op2val:0x404071b7eb928643; op3val:0x7fed7b6d36c4d7ca; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 0, x18)

inst_382:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xcaf8bae2074df and fs2 == 0 and fe2 == 0x404 and fm2 == 0x071b7eb928643 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd7b6d36c4d7ca and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9caf8bae2074df; op2val:0x404071b7eb928643; op3val:0x7fed7b6d36c4d7ca; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 16, x18)

inst_383:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xcaf8bae2074df and fs2 == 0 and fe2 == 0x404 and fm2 == 0x071b7eb928643 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd7b6d36c4d7ca and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9caf8bae2074df; op2val:0x404071b7eb928643; op3val:0x7fed7b6d36c4d7ca; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 32, x18)

inst_384:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xcaf8bae2074df and fs2 == 0 and fe2 == 0x404 and fm2 == 0x071b7eb928643 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd7b6d36c4d7ca and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9caf8bae2074df; op2val:0x404071b7eb928643; op3val:0x7fed7b6d36c4d7ca; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 48, x18)

inst_385:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xcaf8bae2074df and fs2 == 0 and fe2 == 0x404 and fm2 == 0x071b7eb928643 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd7b6d36c4d7ca and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9caf8bae2074df; op2val:0x404071b7eb928643; op3val:0x7fed7b6d36c4d7ca; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 64, x18)

inst_386:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xdfb88e73d746f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x032591e533529 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe59e1f30d27e6 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbdfb88e73d746f; op2val:0x402032591e533529; op3val:0x7fee59e1f30d27e6; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 80, x18)

inst_387:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xdfb88e73d746f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x032591e533529 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe59e1f30d27e6 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbdfb88e73d746f; op2val:0x402032591e533529; op3val:0x7fee59e1f30d27e6; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 96, x18)

inst_388:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xdfb88e73d746f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x032591e533529 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe59e1f30d27e6 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbdfb88e73d746f; op2val:0x402032591e533529; op3val:0x7fee59e1f30d27e6; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 112, x18)

inst_389:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xdfb88e73d746f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x032591e533529 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe59e1f30d27e6 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbdfb88e73d746f; op2val:0x402032591e533529; op3val:0x7fee59e1f30d27e6; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 128, x18)

inst_390:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xdfb88e73d746f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x032591e533529 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe59e1f30d27e6 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbdfb88e73d746f; op2val:0x402032591e533529; op3val:0x7fee59e1f30d27e6; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 144, x18)

inst_391:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0c373d72bd3df and fs2 == 0 and fe2 == 0x402 and fm2 == 0x66d44a9bbe736 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x77f3abd87c689 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0c373d72bd3df; op2val:0x40266d44a9bbe736; op3val:0x7fd77f3abd87c689; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 160, x18)

inst_392:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0c373d72bd3df and fs2 == 0 and fe2 == 0x402 and fm2 == 0x66d44a9bbe736 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x77f3abd87c689 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0c373d72bd3df; op2val:0x40266d44a9bbe736; op3val:0x7fd77f3abd87c689; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 176, x18)

inst_393:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0c373d72bd3df and fs2 == 0 and fe2 == 0x402 and fm2 == 0x66d44a9bbe736 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x77f3abd87c689 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0c373d72bd3df; op2val:0x40266d44a9bbe736; op3val:0x7fd77f3abd87c689; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 192, x18)

inst_394:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0c373d72bd3df and fs2 == 0 and fe2 == 0x402 and fm2 == 0x66d44a9bbe736 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x77f3abd87c689 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0c373d72bd3df; op2val:0x40266d44a9bbe736; op3val:0x7fd77f3abd87c689; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 208, x18)

inst_395:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0c373d72bd3df and fs2 == 0 and fe2 == 0x402 and fm2 == 0x66d44a9bbe736 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x77f3abd87c689 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0c373d72bd3df; op2val:0x40266d44a9bbe736; op3val:0x7fd77f3abd87c689; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 224, x18)

inst_396:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7fb56f2b7523f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x96be7753f5751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30d39ce94e382 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7fb56f2b7523f; op2val:0x40196be7753f5751; op3val:0x7fe30d39ce94e382; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 240, x18)

inst_397:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7fb56f2b7523f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x96be7753f5751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30d39ce94e382 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7fb56f2b7523f; op2val:0x40196be7753f5751; op3val:0x7fe30d39ce94e382; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 256, x18)

inst_398:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7fb56f2b7523f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x96be7753f5751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30d39ce94e382 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7fb56f2b7523f; op2val:0x40196be7753f5751; op3val:0x7fe30d39ce94e382; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 272, x18)

inst_399:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7fb56f2b7523f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x96be7753f5751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30d39ce94e382 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7fb56f2b7523f; op2val:0x40196be7753f5751; op3val:0x7fe30d39ce94e382; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 288, x18)

inst_400:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7fb56f2b7523f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x96be7753f5751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30d39ce94e382 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7fb56f2b7523f; op2val:0x40196be7753f5751; op3val:0x7fe30d39ce94e382; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 304, x18)

inst_401:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5e26a2d52eba8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x22dc44e238e68 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8dd50be11d539 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5e26a2d52eba8; op2val:0x3ff22dc44e238e68; op3val:0x7fe8dd50be11d539; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 320, x18)

inst_402:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5e26a2d52eba8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x22dc44e238e68 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8dd50be11d539 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5e26a2d52eba8; op2val:0x3ff22dc44e238e68; op3val:0x7fe8dd50be11d539; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 336, x18)

inst_403:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5e26a2d52eba8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x22dc44e238e68 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8dd50be11d539 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5e26a2d52eba8; op2val:0x3ff22dc44e238e68; op3val:0x7fe8dd50be11d539; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 352, x18)

inst_404:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5e26a2d52eba8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x22dc44e238e68 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8dd50be11d539 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5e26a2d52eba8; op2val:0x3ff22dc44e238e68; op3val:0x7fe8dd50be11d539; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 368, x18)

inst_405:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5e26a2d52eba8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x22dc44e238e68 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8dd50be11d539 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5e26a2d52eba8; op2val:0x3ff22dc44e238e68; op3val:0x7fe8dd50be11d539; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 384, x18)

inst_406:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd7f793e002b0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6c604e008a06d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6a9875b7c4913 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd7f793e002b0; op2val:0x3fe6c604e008a06d; op3val:0x7fe6a9875b7c4913; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 400, x18)

inst_407:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd7f793e002b0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6c604e008a06d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6a9875b7c4913 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd7f793e002b0; op2val:0x3fe6c604e008a06d; op3val:0x7fe6a9875b7c4913; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 416, x18)

inst_408:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd7f793e002b0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6c604e008a06d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6a9875b7c4913 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd7f793e002b0; op2val:0x3fe6c604e008a06d; op3val:0x7fe6a9875b7c4913; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 432, x18)

inst_409:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd7f793e002b0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6c604e008a06d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6a9875b7c4913 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd7f793e002b0; op2val:0x3fe6c604e008a06d; op3val:0x7fe6a9875b7c4913; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 448, x18)

inst_410:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd7f793e002b0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6c604e008a06d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6a9875b7c4913 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd7f793e002b0; op2val:0x3fe6c604e008a06d; op3val:0x7fe6a9875b7c4913; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 464, x18)

inst_411:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94c1056ed6745 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe25cdfd46ec52 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7d5321be53296 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe94c1056ed6745; op2val:0x3fee25cdfd46ec52; op3val:0x7fe7d5321be53296; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 480, x18)

inst_412:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94c1056ed6745 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe25cdfd46ec52 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7d5321be53296 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe94c1056ed6745; op2val:0x3fee25cdfd46ec52; op3val:0x7fe7d5321be53296; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 496, x18)

inst_413:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94c1056ed6745 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe25cdfd46ec52 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7d5321be53296 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe94c1056ed6745; op2val:0x3fee25cdfd46ec52; op3val:0x7fe7d5321be53296; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 512, x18)

inst_414:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94c1056ed6745 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe25cdfd46ec52 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7d5321be53296 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe94c1056ed6745; op2val:0x3fee25cdfd46ec52; op3val:0x7fe7d5321be53296; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 528, x18)

inst_415:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94c1056ed6745 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe25cdfd46ec52 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7d5321be53296 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe94c1056ed6745; op2val:0x3fee25cdfd46ec52; op3val:0x7fe7d5321be53296; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 544, x18)

inst_416:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f364dc0d6dea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb8d35f83ea038 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x050fd8437607f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f364dc0d6dea; op2val:0x3fdb8d35f83ea038; op3val:0x7fd050fd8437607f; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 560, x18)

inst_417:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f364dc0d6dea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb8d35f83ea038 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x050fd8437607f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f364dc0d6dea; op2val:0x3fdb8d35f83ea038; op3val:0x7fd050fd8437607f; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 576, x18)

inst_418:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f364dc0d6dea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb8d35f83ea038 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x050fd8437607f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f364dc0d6dea; op2val:0x3fdb8d35f83ea038; op3val:0x7fd050fd8437607f; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 592, x18)

inst_419:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f364dc0d6dea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb8d35f83ea038 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x050fd8437607f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f364dc0d6dea; op2val:0x3fdb8d35f83ea038; op3val:0x7fd050fd8437607f; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 608, x18)

inst_420:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f364dc0d6dea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb8d35f83ea038 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x050fd8437607f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f364dc0d6dea; op2val:0x3fdb8d35f83ea038; op3val:0x7fd050fd8437607f; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 624, x18)

inst_421:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9338daa943159 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1632cecbb4fc2 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb62fc4471f033 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9338daa943159; op2val:0x3fd1632cecbb4fc2; op3val:0x7fcb62fc4471f033; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 640, x18)

inst_422:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9338daa943159 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1632cecbb4fc2 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb62fc4471f033 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9338daa943159; op2val:0x3fd1632cecbb4fc2; op3val:0x7fcb62fc4471f033; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 656, x18)

inst_423:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9338daa943159 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1632cecbb4fc2 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb62fc4471f033 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9338daa943159; op2val:0x3fd1632cecbb4fc2; op3val:0x7fcb62fc4471f033; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 672, x18)

inst_424:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9338daa943159 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1632cecbb4fc2 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb62fc4471f033 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9338daa943159; op2val:0x3fd1632cecbb4fc2; op3val:0x7fcb62fc4471f033; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 688, x18)
addi x16,x16,2040

inst_425:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9338daa943159 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1632cecbb4fc2 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb62fc4471f033 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9338daa943159; op2val:0x3fd1632cecbb4fc2; op3val:0x7fcb62fc4471f033; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 704, x18)

inst_426:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7f239e9dfb7e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd00ee4219c2c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ec05022473c9 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7f239e9dfb7e; op2val:0x3fed00ee4219c2c6; op3val:0x7fe8ec05022473c9; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 720, x18)

inst_427:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7f239e9dfb7e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd00ee4219c2c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ec05022473c9 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7f239e9dfb7e; op2val:0x3fed00ee4219c2c6; op3val:0x7fe8ec05022473c9; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 736, x18)

inst_428:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7f239e9dfb7e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd00ee4219c2c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ec05022473c9 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7f239e9dfb7e; op2val:0x3fed00ee4219c2c6; op3val:0x7fe8ec05022473c9; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 752, x18)

inst_429:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7f239e9dfb7e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd00ee4219c2c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ec05022473c9 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7f239e9dfb7e; op2val:0x3fed00ee4219c2c6; op3val:0x7fe8ec05022473c9; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 768, x18)

inst_430:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7f239e9dfb7e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd00ee4219c2c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ec05022473c9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7f239e9dfb7e; op2val:0x3fed00ee4219c2c6; op3val:0x7fe8ec05022473c9; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 784, x18)

inst_431:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc6036c1db05b5 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd2dc4a5d76216 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x9dfc74d0d944b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc6036c1db05b5; op2val:0x3fdd2dc4a5d76216; op3val:0x7fc9dfc74d0d944b; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 800, x18)

inst_432:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc6036c1db05b5 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd2dc4a5d76216 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x9dfc74d0d944b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc6036c1db05b5; op2val:0x3fdd2dc4a5d76216; op3val:0x7fc9dfc74d0d944b; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 816, x18)

inst_433:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc6036c1db05b5 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd2dc4a5d76216 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x9dfc74d0d944b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc6036c1db05b5; op2val:0x3fdd2dc4a5d76216; op3val:0x7fc9dfc74d0d944b; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 832, x18)

inst_434:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc6036c1db05b5 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd2dc4a5d76216 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x9dfc74d0d944b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc6036c1db05b5; op2val:0x3fdd2dc4a5d76216; op3val:0x7fc9dfc74d0d944b; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 848, x18)

inst_435:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc6036c1db05b5 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd2dc4a5d76216 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x9dfc74d0d944b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc6036c1db05b5; op2val:0x3fdd2dc4a5d76216; op3val:0x7fc9dfc74d0d944b; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 864, x18)

inst_436:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d4b3ded55275 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc381c96d1da30 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x25ea43a0ba6d5 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d4b3ded55275; op2val:0x3fdc381c96d1da30; op3val:0x7fd25ea43a0ba6d5; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 880, x18)

inst_437:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d4b3ded55275 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc381c96d1da30 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x25ea43a0ba6d5 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d4b3ded55275; op2val:0x3fdc381c96d1da30; op3val:0x7fd25ea43a0ba6d5; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 896, x18)

inst_438:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d4b3ded55275 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc381c96d1da30 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x25ea43a0ba6d5 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d4b3ded55275; op2val:0x3fdc381c96d1da30; op3val:0x7fd25ea43a0ba6d5; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 912, x18)

inst_439:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d4b3ded55275 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc381c96d1da30 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x25ea43a0ba6d5 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d4b3ded55275; op2val:0x3fdc381c96d1da30; op3val:0x7fd25ea43a0ba6d5; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 928, x18)

inst_440:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d4b3ded55275 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc381c96d1da30 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x25ea43a0ba6d5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d4b3ded55275; op2val:0x3fdc381c96d1da30; op3val:0x7fd25ea43a0ba6d5; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 944, x18)

inst_441:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5a1465bf903f8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x14437285df6c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x75792bdb3899b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5a1465bf903f8; op2val:0x3ff14437285df6c6; op3val:0x7fe75792bdb3899b; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 960, x18)

inst_442:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5a1465bf903f8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x14437285df6c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x75792bdb3899b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5a1465bf903f8; op2val:0x3ff14437285df6c6; op3val:0x7fe75792bdb3899b; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 976, x18)

inst_443:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5a1465bf903f8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x14437285df6c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x75792bdb3899b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5a1465bf903f8; op2val:0x3ff14437285df6c6; op3val:0x7fe75792bdb3899b; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 992, x18)

inst_444:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5a1465bf903f8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x14437285df6c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x75792bdb3899b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5a1465bf903f8; op2val:0x3ff14437285df6c6; op3val:0x7fe75792bdb3899b; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1008, x18)

inst_445:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5a1465bf903f8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x14437285df6c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x75792bdb3899b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5a1465bf903f8; op2val:0x3ff14437285df6c6; op3val:0x7fe75792bdb3899b; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1024, x18)

inst_446:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd6f02241f1dfe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa18b735e6fe18 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x800ed835cf169 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed6f02241f1dfe; op2val:0x3fea18b735e6fe18; op3val:0x7fe800ed835cf169; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1040, x18)

inst_447:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd6f02241f1dfe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa18b735e6fe18 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x800ed835cf169 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed6f02241f1dfe; op2val:0x3fea18b735e6fe18; op3val:0x7fe800ed835cf169; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1056, x18)

inst_448:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd6f02241f1dfe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa18b735e6fe18 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x800ed835cf169 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed6f02241f1dfe; op2val:0x3fea18b735e6fe18; op3val:0x7fe800ed835cf169; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1072, x18)

inst_449:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd6f02241f1dfe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa18b735e6fe18 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x800ed835cf169 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed6f02241f1dfe; op2val:0x3fea18b735e6fe18; op3val:0x7fe800ed835cf169; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1088, x18)

inst_450:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd6f02241f1dfe and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa18b735e6fe18 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x800ed835cf169 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed6f02241f1dfe; op2val:0x3fea18b735e6fe18; op3val:0x7fe800ed835cf169; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1104, x18)

inst_451:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf76c60cb611bb and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xa0af53f41063f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x99b472bc5fdef and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef76c60cb611bb; op2val:0x3faa0af53f41063f; op3val:0x7fa99b472bc5fdef; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1120, x18)

inst_452:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf76c60cb611bb and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xa0af53f41063f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x99b472bc5fdef and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef76c60cb611bb; op2val:0x3faa0af53f41063f; op3val:0x7fa99b472bc5fdef; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1136, x18)

inst_453:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf76c60cb611bb and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xa0af53f41063f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x99b472bc5fdef and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef76c60cb611bb; op2val:0x3faa0af53f41063f; op3val:0x7fa99b472bc5fdef; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1152, x18)

inst_454:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf76c60cb611bb and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xa0af53f41063f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x99b472bc5fdef and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef76c60cb611bb; op2val:0x3faa0af53f41063f; op3val:0x7fa99b472bc5fdef; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1168, x18)

inst_455:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf76c60cb611bb and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xa0af53f41063f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x99b472bc5fdef and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef76c60cb611bb; op2val:0x3faa0af53f41063f; op3val:0x7fa99b472bc5fdef; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1184, x18)

inst_456:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xebc259ea86bbf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xde9682afb4452 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xcbab01676665f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbebc259ea86bbf; op2val:0x3fede9682afb4452; op3val:0x7fbcbab01676665f; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1200, x18)

inst_457:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xebc259ea86bbf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xde9682afb4452 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xcbab01676665f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbebc259ea86bbf; op2val:0x3fede9682afb4452; op3val:0x7fbcbab01676665f; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1216, x18)

inst_458:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xebc259ea86bbf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xde9682afb4452 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xcbab01676665f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbebc259ea86bbf; op2val:0x3fede9682afb4452; op3val:0x7fbcbab01676665f; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1232, x18)

inst_459:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xebc259ea86bbf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xde9682afb4452 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xcbab01676665f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbebc259ea86bbf; op2val:0x3fede9682afb4452; op3val:0x7fbcbab01676665f; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1248, x18)

inst_460:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xebc259ea86bbf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xde9682afb4452 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xcbab01676665f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbebc259ea86bbf; op2val:0x3fede9682afb4452; op3val:0x7fbcbab01676665f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1264, x18)

inst_461:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x595145e4cc727 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf61026fb4a229 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x529d945c07226 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc595145e4cc727; op2val:0x400f61026fb4a229; op3val:0x7fe529d945c07226; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1280, x18)

inst_462:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x595145e4cc727 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf61026fb4a229 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x529d945c07226 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc595145e4cc727; op2val:0x400f61026fb4a229; op3val:0x7fe529d945c07226; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1296, x18)

inst_463:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x595145e4cc727 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf61026fb4a229 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x529d945c07226 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc595145e4cc727; op2val:0x400f61026fb4a229; op3val:0x7fe529d945c07226; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1312, x18)

inst_464:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x595145e4cc727 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf61026fb4a229 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x529d945c07226 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc595145e4cc727; op2val:0x400f61026fb4a229; op3val:0x7fe529d945c07226; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1328, x18)

inst_465:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x595145e4cc727 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf61026fb4a229 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x529d945c07226 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc595145e4cc727; op2val:0x400f61026fb4a229; op3val:0x7fe529d945c07226; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1344, x18)

inst_466:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72c391e4b2abf and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3184dd5e108c3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xba7b6e43c3844 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe72c391e4b2abf; op2val:0x3ff3184dd5e108c3; op3val:0x7feba7b6e43c3844; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1360, x18)

inst_467:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72c391e4b2abf and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3184dd5e108c3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xba7b6e43c3844 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe72c391e4b2abf; op2val:0x3ff3184dd5e108c3; op3val:0x7feba7b6e43c3844; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1376, x18)

inst_468:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72c391e4b2abf and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3184dd5e108c3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xba7b6e43c3844 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe72c391e4b2abf; op2val:0x3ff3184dd5e108c3; op3val:0x7feba7b6e43c3844; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1392, x18)

inst_469:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72c391e4b2abf and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3184dd5e108c3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xba7b6e43c3844 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe72c391e4b2abf; op2val:0x3ff3184dd5e108c3; op3val:0x7feba7b6e43c3844; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1408, x18)

inst_470:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72c391e4b2abf and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3184dd5e108c3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xba7b6e43c3844 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe72c391e4b2abf; op2val:0x3ff3184dd5e108c3; op3val:0x7feba7b6e43c3844; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1424, x18)

inst_471:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2c8ac78bde04d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9addc8b902ed2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe25aa309e4f15 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2c8ac78bde04d; op2val:0x3ff9addc8b902ed2; op3val:0x7fde25aa309e4f15; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1440, x18)

inst_472:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2c8ac78bde04d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9addc8b902ed2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe25aa309e4f15 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2c8ac78bde04d; op2val:0x3ff9addc8b902ed2; op3val:0x7fde25aa309e4f15; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1456, x18)

inst_473:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2c8ac78bde04d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9addc8b902ed2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe25aa309e4f15 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2c8ac78bde04d; op2val:0x3ff9addc8b902ed2; op3val:0x7fde25aa309e4f15; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1472, x18)

inst_474:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2c8ac78bde04d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9addc8b902ed2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe25aa309e4f15 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2c8ac78bde04d; op2val:0x3ff9addc8b902ed2; op3val:0x7fde25aa309e4f15; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1488, x18)

inst_475:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2c8ac78bde04d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9addc8b902ed2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe25aa309e4f15 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2c8ac78bde04d; op2val:0x3ff9addc8b902ed2; op3val:0x7fde25aa309e4f15; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1504, x18)

inst_476:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x216fdd2c02fec and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa1a7ccc099bf6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd834eebcde902 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe216fdd2c02fec; op2val:0x3ffa1a7ccc099bf6; op3val:0x7fed834eebcde902; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1520, x18)

inst_477:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x216fdd2c02fec and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa1a7ccc099bf6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd834eebcde902 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe216fdd2c02fec; op2val:0x3ffa1a7ccc099bf6; op3val:0x7fed834eebcde902; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1536, x18)

inst_478:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x216fdd2c02fec and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa1a7ccc099bf6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd834eebcde902 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe216fdd2c02fec; op2val:0x3ffa1a7ccc099bf6; op3val:0x7fed834eebcde902; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1552, x18)

inst_479:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x216fdd2c02fec and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa1a7ccc099bf6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd834eebcde902 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe216fdd2c02fec; op2val:0x3ffa1a7ccc099bf6; op3val:0x7fed834eebcde902; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1568, x18)

inst_480:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x216fdd2c02fec and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa1a7ccc099bf6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd834eebcde902 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe216fdd2c02fec; op2val:0x3ffa1a7ccc099bf6; op3val:0x7fed834eebcde902; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1584, x18)

inst_481:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x92a40ada09bc7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x25bb1366e5e7b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcdfbfcc37e2d7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe92a40ada09bc7; op2val:0x3fd25bb1366e5e7b; op3val:0x7fccdfbfcc37e2d7; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1600, x18)

inst_482:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x92a40ada09bc7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x25bb1366e5e7b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcdfbfcc37e2d7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe92a40ada09bc7; op2val:0x3fd25bb1366e5e7b; op3val:0x7fccdfbfcc37e2d7; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1616, x18)

inst_483:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x92a40ada09bc7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x25bb1366e5e7b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcdfbfcc37e2d7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe92a40ada09bc7; op2val:0x3fd25bb1366e5e7b; op3val:0x7fccdfbfcc37e2d7; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1632, x18)

inst_484:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x92a40ada09bc7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x25bb1366e5e7b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcdfbfcc37e2d7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe92a40ada09bc7; op2val:0x3fd25bb1366e5e7b; op3val:0x7fccdfbfcc37e2d7; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1648, x18)

inst_485:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x92a40ada09bc7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x25bb1366e5e7b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcdfbfcc37e2d7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe92a40ada09bc7; op2val:0x3fd25bb1366e5e7b; op3val:0x7fccdfbfcc37e2d7; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1664, x18)

inst_486:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x07a03c3d506bf and fs2 == 0 and fe2 == 0x403 and fm2 == 0x0dda3a9010ee0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x15e41a0e62eed and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa07a03c3d506bf; op2val:0x4030dda3a9010ee0; op3val:0x7fe15e41a0e62eed; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1680, x18)

inst_487:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x07a03c3d506bf and fs2 == 0 and fe2 == 0x403 and fm2 == 0x0dda3a9010ee0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x15e41a0e62eed and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa07a03c3d506bf; op2val:0x4030dda3a9010ee0; op3val:0x7fe15e41a0e62eed; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1696, x18)

inst_488:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x07a03c3d506bf and fs2 == 0 and fe2 == 0x403 and fm2 == 0x0dda3a9010ee0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x15e41a0e62eed and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa07a03c3d506bf; op2val:0x4030dda3a9010ee0; op3val:0x7fe15e41a0e62eed; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1712, x18)

inst_489:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x07a03c3d506bf and fs2 == 0 and fe2 == 0x403 and fm2 == 0x0dda3a9010ee0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x15e41a0e62eed and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa07a03c3d506bf; op2val:0x4030dda3a9010ee0; op3val:0x7fe15e41a0e62eed; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1728, x18)

inst_490:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x07a03c3d506bf and fs2 == 0 and fe2 == 0x403 and fm2 == 0x0dda3a9010ee0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x15e41a0e62eed and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa07a03c3d506bf; op2val:0x4030dda3a9010ee0; op3val:0x7fe15e41a0e62eed; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1744, x18)

inst_491:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a32fb58f33bf and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd5dc4397c31a5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x78702b4c3d43b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9a32fb58f33bf; op2val:0x400d5dc4397c31a5; op3val:0x7fd78702b4c3d43b; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1760, x18)

inst_492:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a32fb58f33bf and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd5dc4397c31a5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x78702b4c3d43b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9a32fb58f33bf; op2val:0x400d5dc4397c31a5; op3val:0x7fd78702b4c3d43b; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1776, x18)

inst_493:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a32fb58f33bf and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd5dc4397c31a5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x78702b4c3d43b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9a32fb58f33bf; op2val:0x400d5dc4397c31a5; op3val:0x7fd78702b4c3d43b; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1792, x18)

inst_494:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a32fb58f33bf and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd5dc4397c31a5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x78702b4c3d43b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9a32fb58f33bf; op2val:0x400d5dc4397c31a5; op3val:0x7fd78702b4c3d43b; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1808, x18)

inst_495:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a32fb58f33bf and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd5dc4397c31a5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x78702b4c3d43b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9a32fb58f33bf; op2val:0x400d5dc4397c31a5; op3val:0x7fd78702b4c3d43b; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1824, x18)

inst_496:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd55eb74d3e867 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8d1eaf92ca954 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6c0e12a293e24 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbd55eb74d3e867; op2val:0x4018d1eaf92ca954; op3val:0x7fe6c0e12a293e24; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1840, x18)

inst_497:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd55eb74d3e867 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8d1eaf92ca954 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6c0e12a293e24 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbd55eb74d3e867; op2val:0x4018d1eaf92ca954; op3val:0x7fe6c0e12a293e24; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1856, x18)

inst_498:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd55eb74d3e867 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8d1eaf92ca954 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6c0e12a293e24 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbd55eb74d3e867; op2val:0x4018d1eaf92ca954; op3val:0x7fe6c0e12a293e24; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1872, x18)

inst_499:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd55eb74d3e867 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8d1eaf92ca954 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6c0e12a293e24 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbd55eb74d3e867; op2val:0x4018d1eaf92ca954; op3val:0x7fe6c0e12a293e24; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1888, x18)

inst_500:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd55eb74d3e867 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8d1eaf92ca954 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6c0e12a293e24 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbd55eb74d3e867; op2val:0x4018d1eaf92ca954; op3val:0x7fe6c0e12a293e24; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1904, x18)

inst_501:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x46a079e389d6f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x3090a9e293cab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x849723c3ca606 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa46a079e389d6f; op2val:0x4033090a9e293cab; op3val:0x7fe849723c3ca606; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1920, x18)

inst_502:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x46a079e389d6f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x3090a9e293cab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x849723c3ca606 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa46a079e389d6f; op2val:0x4033090a9e293cab; op3val:0x7fe849723c3ca606; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1936, x18)

inst_503:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x46a079e389d6f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x3090a9e293cab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x849723c3ca606 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa46a079e389d6f; op2val:0x4033090a9e293cab; op3val:0x7fe849723c3ca606; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1952, x18)

inst_504:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x46a079e389d6f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x3090a9e293cab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x849723c3ca606 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa46a079e389d6f; op2val:0x4033090a9e293cab; op3val:0x7fe849723c3ca606; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1968, x18)

inst_505:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x46a079e389d6f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x3090a9e293cab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x849723c3ca606 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa46a079e389d6f; op2val:0x4033090a9e293cab; op3val:0x7fe849723c3ca606; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1984, x18)

inst_506:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x89ee780981d7f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x4519b1a6eef31 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xf443480c8c16f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd89ee780981d7f; op2val:0x3fc4519b1a6eef31; op3val:0x7faf443480c8c16f; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2000, x18)

inst_507:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x89ee780981d7f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x4519b1a6eef31 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xf443480c8c16f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd89ee780981d7f; op2val:0x3fc4519b1a6eef31; op3val:0x7faf443480c8c16f; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_508:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x89ee780981d7f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x4519b1a6eef31 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xf443480c8c16f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd89ee780981d7f; op2val:0x3fc4519b1a6eef31; op3val:0x7faf443480c8c16f; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x89ee780981d7f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x4519b1a6eef31 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xf443480c8c16f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd89ee780981d7f; op2val:0x3fc4519b1a6eef31; op3val:0x7faf443480c8c16f; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 16, x18)
addi x16,x16,2040

inst_510:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x89ee780981d7f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x4519b1a6eef31 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xf443480c8c16f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd89ee780981d7f; op2val:0x3fc4519b1a6eef31; op3val:0x7faf443480c8c16f; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 32, x18)

inst_511:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5022a4b0b3f6b and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe7c8f3de00c66 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x403ce14898e4f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5022a4b0b3f6b; op2val:0x400e7c8f3de00c66; op3val:0x7fe403ce14898e4f; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 48, x18)

inst_512:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5022a4b0b3f6b and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe7c8f3de00c66 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x403ce14898e4f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5022a4b0b3f6b; op2val:0x400e7c8f3de00c66; op3val:0x7fe403ce14898e4f; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 64, x18)

inst_513:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5022a4b0b3f6b and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe7c8f3de00c66 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x403ce14898e4f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5022a4b0b3f6b; op2val:0x400e7c8f3de00c66; op3val:0x7fe403ce14898e4f; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 80, x18)

inst_514:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5022a4b0b3f6b and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe7c8f3de00c66 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x403ce14898e4f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5022a4b0b3f6b; op2val:0x400e7c8f3de00c66; op3val:0x7fe403ce14898e4f; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 96, x18)

inst_515:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5022a4b0b3f6b and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe7c8f3de00c66 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x403ce14898e4f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5022a4b0b3f6b; op2val:0x400e7c8f3de00c66; op3val:0x7fe403ce14898e4f; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 112, x18)

inst_516:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5547440bd97d4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x75882bb7e991b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf1f65e498feec and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5547440bd97d4; op2val:0x3ff75882bb7e991b; op3val:0x7fef1f65e498feec; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 128, x18)

inst_517:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5547440bd97d4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x75882bb7e991b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf1f65e498feec and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5547440bd97d4; op2val:0x3ff75882bb7e991b; op3val:0x7fef1f65e498feec; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 144, x18)

inst_518:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5547440bd97d4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x75882bb7e991b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf1f65e498feec and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5547440bd97d4; op2val:0x3ff75882bb7e991b; op3val:0x7fef1f65e498feec; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 160, x18)

inst_519:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5547440bd97d4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x75882bb7e991b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf1f65e498feec and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5547440bd97d4; op2val:0x3ff75882bb7e991b; op3val:0x7fef1f65e498feec; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 176, x18)

inst_520:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5547440bd97d4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x75882bb7e991b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf1f65e498feec and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5547440bd97d4; op2val:0x3ff75882bb7e991b; op3val:0x7fef1f65e498feec; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 192, x18)

inst_521:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c4ac16f8b53d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd955fc1f7a7e7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d284d22cd9ad and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c4ac16f8b53d; op2val:0x3fdd955fc1f7a7e7; op3val:0x7fd7d284d22cd9ad; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 208, x18)

inst_522:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c4ac16f8b53d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd955fc1f7a7e7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d284d22cd9ad and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c4ac16f8b53d; op2val:0x3fdd955fc1f7a7e7; op3val:0x7fd7d284d22cd9ad; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 224, x18)

inst_523:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c4ac16f8b53d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd955fc1f7a7e7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d284d22cd9ad and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c4ac16f8b53d; op2val:0x3fdd955fc1f7a7e7; op3val:0x7fd7d284d22cd9ad; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 240, x18)

inst_524:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c4ac16f8b53d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd955fc1f7a7e7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d284d22cd9ad and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c4ac16f8b53d; op2val:0x3fdd955fc1f7a7e7; op3val:0x7fd7d284d22cd9ad; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 256, x18)

inst_525:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c4ac16f8b53d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd955fc1f7a7e7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d284d22cd9ad and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c4ac16f8b53d; op2val:0x3fdd955fc1f7a7e7; op3val:0x7fd7d284d22cd9ad; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 272, x18)

inst_526:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6ec85d8ef4d3f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xcd177dd63d0aa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4a503c62cfadd and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6ec85d8ef4d3f; op2val:0x3fecd177dd63d0aa; op3val:0x7fe4a503c62cfadd; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 288, x18)

inst_527:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6ec85d8ef4d3f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xcd177dd63d0aa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4a503c62cfadd and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6ec85d8ef4d3f; op2val:0x3fecd177dd63d0aa; op3val:0x7fe4a503c62cfadd; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 304, x18)

inst_528:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6ec85d8ef4d3f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xcd177dd63d0aa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4a503c62cfadd and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6ec85d8ef4d3f; op2val:0x3fecd177dd63d0aa; op3val:0x7fe4a503c62cfadd; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 320, x18)

inst_529:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6ec85d8ef4d3f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xcd177dd63d0aa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4a503c62cfadd and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6ec85d8ef4d3f; op2val:0x3fecd177dd63d0aa; op3val:0x7fe4a503c62cfadd; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 336, x18)

inst_530:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6ec85d8ef4d3f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xcd177dd63d0aa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4a503c62cfadd and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6ec85d8ef4d3f; op2val:0x3fecd177dd63d0aa; op3val:0x7fe4a503c62cfadd; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 352, x18)

inst_531:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1a24627666f3c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3392e0c107348 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x52fb8288b883b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1a24627666f3c; op2val:0x3ff3392e0c107348; op3val:0x7fe52fb8288b883b; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 368, x18)

inst_532:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1a24627666f3c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3392e0c107348 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x52fb8288b883b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1a24627666f3c; op2val:0x3ff3392e0c107348; op3val:0x7fe52fb8288b883b; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 384, x18)

inst_533:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1a24627666f3c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3392e0c107348 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x52fb8288b883b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1a24627666f3c; op2val:0x3ff3392e0c107348; op3val:0x7fe52fb8288b883b; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 400, x18)

inst_534:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1a24627666f3c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3392e0c107348 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x52fb8288b883b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1a24627666f3c; op2val:0x3ff3392e0c107348; op3val:0x7fe52fb8288b883b; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 416, x18)

inst_535:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1a24627666f3c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3392e0c107348 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x52fb8288b883b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1a24627666f3c; op2val:0x3ff3392e0c107348; op3val:0x7fe52fb8288b883b; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 432, x18)

inst_536:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x970d2dec24b47 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x41348151b216e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfebb02e1f878d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd970d2dec24b47; op2val:0x40041348151b216e; op3val:0x7fefebb02e1f878d; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 448, x18)

inst_537:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x970d2dec24b47 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x41348151b216e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfebb02e1f878d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd970d2dec24b47; op2val:0x40041348151b216e; op3val:0x7fefebb02e1f878d; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 464, x18)

inst_538:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x970d2dec24b47 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x41348151b216e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfebb02e1f878d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd970d2dec24b47; op2val:0x40041348151b216e; op3val:0x7fefebb02e1f878d; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 480, x18)

inst_539:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x970d2dec24b47 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x41348151b216e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfebb02e1f878d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd970d2dec24b47; op2val:0x40041348151b216e; op3val:0x7fefebb02e1f878d; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 496, x18)

inst_540:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x970d2dec24b47 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x41348151b216e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfebb02e1f878d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd970d2dec24b47; op2val:0x40041348151b216e; op3val:0x7fefebb02e1f878d; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 512, x18)

inst_541:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x863a1b435dbbb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2836c6ec995be and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc386af013d02d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd863a1b435dbbb; op2val:0x3ff2836c6ec995be; op3val:0x7fdc386af013d02d; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 528, x18)

inst_542:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x863a1b435dbbb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2836c6ec995be and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc386af013d02d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd863a1b435dbbb; op2val:0x3ff2836c6ec995be; op3val:0x7fdc386af013d02d; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 544, x18)

inst_543:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x863a1b435dbbb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2836c6ec995be and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc386af013d02d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd863a1b435dbbb; op2val:0x3ff2836c6ec995be; op3val:0x7fdc386af013d02d; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 560, x18)

inst_544:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x863a1b435dbbb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2836c6ec995be and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc386af013d02d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd863a1b435dbbb; op2val:0x3ff2836c6ec995be; op3val:0x7fdc386af013d02d; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 576, x18)

inst_545:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x863a1b435dbbb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2836c6ec995be and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc386af013d02d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd863a1b435dbbb; op2val:0x3ff2836c6ec995be; op3val:0x7fdc386af013d02d; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 592, x18)

inst_546:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8152cec29ef7f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xba9139c781bd0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4d11c7ed6eb1b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8152cec29ef7f; op2val:0x3ffba9139c781bd0; op3val:0x7fd4d11c7ed6eb1b; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 608, x18)

inst_547:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8152cec29ef7f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xba9139c781bd0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4d11c7ed6eb1b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8152cec29ef7f; op2val:0x3ffba9139c781bd0; op3val:0x7fd4d11c7ed6eb1b; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 624, x18)

inst_548:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8152cec29ef7f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xba9139c781bd0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4d11c7ed6eb1b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8152cec29ef7f; op2val:0x3ffba9139c781bd0; op3val:0x7fd4d11c7ed6eb1b; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 640, x18)

inst_549:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8152cec29ef7f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xba9139c781bd0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4d11c7ed6eb1b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8152cec29ef7f; op2val:0x3ffba9139c781bd0; op3val:0x7fd4d11c7ed6eb1b; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 656, x18)

inst_550:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8152cec29ef7f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xba9139c781bd0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4d11c7ed6eb1b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8152cec29ef7f; op2val:0x3ffba9139c781bd0; op3val:0x7fd4d11c7ed6eb1b; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 672, x18)

inst_551:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x92a566f38682f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7264e5116401a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2348dfd8bf745 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe92a566f38682f; op2val:0x3fe7264e5116401a; op3val:0x7fe2348dfd8bf745; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 688, x18)

inst_552:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x92a566f38682f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7264e5116401a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2348dfd8bf745 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe92a566f38682f; op2val:0x3fe7264e5116401a; op3val:0x7fe2348dfd8bf745; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 704, x18)

inst_553:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x92a566f38682f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7264e5116401a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2348dfd8bf745 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe92a566f38682f; op2val:0x3fe7264e5116401a; op3val:0x7fe2348dfd8bf745; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 720, x18)

inst_554:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x92a566f38682f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7264e5116401a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2348dfd8bf745 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe92a566f38682f; op2val:0x3fe7264e5116401a; op3val:0x7fe2348dfd8bf745; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 736, x18)

inst_555:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x92a566f38682f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7264e5116401a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2348dfd8bf745 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe92a566f38682f; op2val:0x3fe7264e5116401a; op3val:0x7fe2348dfd8bf745; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 752, x18)

inst_556:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xec34018f9e9cb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x30d63352622ac and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x250ccc004e0f7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcec34018f9e9cb; op2val:0x40030d63352622ac; op3val:0x7fe250ccc004e0f7; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 768, x18)

inst_557:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xec34018f9e9cb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x30d63352622ac and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x250ccc004e0f7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcec34018f9e9cb; op2val:0x40030d63352622ac; op3val:0x7fe250ccc004e0f7; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 784, x18)

inst_558:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xec34018f9e9cb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x30d63352622ac and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x250ccc004e0f7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcec34018f9e9cb; op2val:0x40030d63352622ac; op3val:0x7fe250ccc004e0f7; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 800, x18)

inst_559:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xec34018f9e9cb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x30d63352622ac and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x250ccc004e0f7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcec34018f9e9cb; op2val:0x40030d63352622ac; op3val:0x7fe250ccc004e0f7; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 816, x18)

inst_560:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xec34018f9e9cb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x30d63352622ac and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x250ccc004e0f7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcec34018f9e9cb; op2val:0x40030d63352622ac; op3val:0x7fe250ccc004e0f7; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 832, x18)

inst_561:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4e335bc1ddd33 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf08485d88dfd4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4418417f288ed and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4e335bc1ddd33; op2val:0x3fff08485d88dfd4; op3val:0x7fd4418417f288ed; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 848, x18)

inst_562:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4e335bc1ddd33 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf08485d88dfd4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4418417f288ed and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4e335bc1ddd33; op2val:0x3fff08485d88dfd4; op3val:0x7fd4418417f288ed; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 864, x18)

inst_563:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4e335bc1ddd33 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf08485d88dfd4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4418417f288ed and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4e335bc1ddd33; op2val:0x3fff08485d88dfd4; op3val:0x7fd4418417f288ed; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 880, x18)

inst_564:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4e335bc1ddd33 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf08485d88dfd4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4418417f288ed and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4e335bc1ddd33; op2val:0x3fff08485d88dfd4; op3val:0x7fd4418417f288ed; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 896, x18)

inst_565:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4e335bc1ddd33 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf08485d88dfd4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4418417f288ed and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4e335bc1ddd33; op2val:0x3fff08485d88dfd4; op3val:0x7fd4418417f288ed; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 912, x18)

inst_566:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd23797880df4f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd756466804b1c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad30b3586df9d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed23797880df4f; op2val:0x3fdd756466804b1c; op3val:0x7fdad30b3586df9d; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 928, x18)

inst_567:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd23797880df4f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd756466804b1c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad30b3586df9d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed23797880df4f; op2val:0x3fdd756466804b1c; op3val:0x7fdad30b3586df9d; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 944, x18)

inst_568:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd23797880df4f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd756466804b1c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad30b3586df9d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed23797880df4f; op2val:0x3fdd756466804b1c; op3val:0x7fdad30b3586df9d; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 960, x18)

inst_569:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd23797880df4f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd756466804b1c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad30b3586df9d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed23797880df4f; op2val:0x3fdd756466804b1c; op3val:0x7fdad30b3586df9d; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 976, x18)

inst_570:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd23797880df4f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd756466804b1c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad30b3586df9d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed23797880df4f; op2val:0x3fdd756466804b1c; op3val:0x7fdad30b3586df9d; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 992, x18)

inst_571:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc5d403b21099f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x45d0bd32bed6c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x20cc1a2dc61a1 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc5d403b21099f; op2val:0x40045d0bd32bed6c; op3val:0x7fe20cc1a2dc61a1; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1008, x18)

inst_572:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc5d403b21099f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x45d0bd32bed6c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x20cc1a2dc61a1 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc5d403b21099f; op2val:0x40045d0bd32bed6c; op3val:0x7fe20cc1a2dc61a1; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1024, x18)

inst_573:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc5d403b21099f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x45d0bd32bed6c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x20cc1a2dc61a1 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc5d403b21099f; op2val:0x40045d0bd32bed6c; op3val:0x7fe20cc1a2dc61a1; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1040, x18)

inst_574:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc5d403b21099f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x45d0bd32bed6c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x20cc1a2dc61a1 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc5d403b21099f; op2val:0x40045d0bd32bed6c; op3val:0x7fe20cc1a2dc61a1; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1056, x18)

inst_575:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc5d403b21099f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x45d0bd32bed6c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x20cc1a2dc61a1 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc5d403b21099f; op2val:0x40045d0bd32bed6c; op3val:0x7fe20cc1a2dc61a1; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1072, x18)

inst_576:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8da0eee5f982f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x262463c31332c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc8df57f1f0ae3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8da0eee5f982f; op2val:0x3fe262463c31332c; op3val:0x7fcc8df57f1f0ae3; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1088, x18)

inst_577:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8da0eee5f982f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x262463c31332c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc8df57f1f0ae3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8da0eee5f982f; op2val:0x3fe262463c31332c; op3val:0x7fcc8df57f1f0ae3; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1104, x18)

inst_578:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8da0eee5f982f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x262463c31332c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc8df57f1f0ae3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8da0eee5f982f; op2val:0x3fe262463c31332c; op3val:0x7fcc8df57f1f0ae3; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1120, x18)

inst_579:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8da0eee5f982f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x262463c31332c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc8df57f1f0ae3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8da0eee5f982f; op2val:0x3fe262463c31332c; op3val:0x7fcc8df57f1f0ae3; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1136, x18)

inst_580:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8da0eee5f982f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x262463c31332c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc8df57f1f0ae3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8da0eee5f982f; op2val:0x3fe262463c31332c; op3val:0x7fcc8df57f1f0ae3; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1152, x18)

inst_581:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x35406181dfc67 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe1d92982a5bdb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x230a26766788c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc35406181dfc67; op2val:0x400e1d92982a5bdb; op3val:0x7fe230a26766788c; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1168, x18)

inst_582:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x35406181dfc67 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe1d92982a5bdb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x230a26766788c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc35406181dfc67; op2val:0x400e1d92982a5bdb; op3val:0x7fe230a26766788c; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1184, x18)

inst_583:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x35406181dfc67 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe1d92982a5bdb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x230a26766788c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc35406181dfc67; op2val:0x400e1d92982a5bdb; op3val:0x7fe230a26766788c; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1200, x18)

inst_584:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x35406181dfc67 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe1d92982a5bdb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x230a26766788c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc35406181dfc67; op2val:0x400e1d92982a5bdb; op3val:0x7fe230a26766788c; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1216, x18)

inst_585:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x35406181dfc67 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe1d92982a5bdb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x230a26766788c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc35406181dfc67; op2val:0x400e1d92982a5bdb; op3val:0x7fe230a26766788c; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1232, x18)

inst_586:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x33d0b32f07673 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdfd140f0f49e2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x20778d5e9769f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc33d0b32f07673; op2val:0x3ffdfd140f0f49e2; op3val:0x7fd20778d5e9769f; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1248, x18)

inst_587:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x33d0b32f07673 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdfd140f0f49e2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x20778d5e9769f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc33d0b32f07673; op2val:0x3ffdfd140f0f49e2; op3val:0x7fd20778d5e9769f; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1264, x18)

inst_588:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x33d0b32f07673 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdfd140f0f49e2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x20778d5e9769f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc33d0b32f07673; op2val:0x3ffdfd140f0f49e2; op3val:0x7fd20778d5e9769f; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1280, x18)

inst_589:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x33d0b32f07673 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdfd140f0f49e2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x20778d5e9769f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc33d0b32f07673; op2val:0x3ffdfd140f0f49e2; op3val:0x7fd20778d5e9769f; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1296, x18)

inst_590:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x33d0b32f07673 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdfd140f0f49e2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x20778d5e9769f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc33d0b32f07673; op2val:0x3ffdfd140f0f49e2; op3val:0x7fd20778d5e9769f; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1312, x18)

inst_591:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xf350697c4563f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x13d9f585b265d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0d043fad51483 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9f350697c4563f; op2val:0x40313d9f585b265d; op3val:0x7fe0d043fad51483; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1328, x18)

inst_592:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xf350697c4563f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x13d9f585b265d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0d043fad51483 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9f350697c4563f; op2val:0x40313d9f585b265d; op3val:0x7fe0d043fad51483; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1344, x18)

inst_593:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xf350697c4563f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x13d9f585b265d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0d043fad51483 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9f350697c4563f; op2val:0x40313d9f585b265d; op3val:0x7fe0d043fad51483; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1360, x18)

inst_594:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xf350697c4563f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x13d9f585b265d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0d043fad51483 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9f350697c4563f; op2val:0x40313d9f585b265d; op3val:0x7fe0d043fad51483; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1376, x18)
addi x16,x16,2040

inst_595:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xf350697c4563f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x13d9f585b265d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0d043fad51483 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9f350697c4563f; op2val:0x40313d9f585b265d; op3val:0x7fe0d043fad51483; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1392, x18)

inst_596:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x2efc48b367db7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc222f1cec7041 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0a6069be9fb0f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb2efc48b367db7; op2val:0x401c222f1cec7041; op3val:0x7fe0a6069be9fb0f; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1408, x18)

inst_597:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x2efc48b367db7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc222f1cec7041 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0a6069be9fb0f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb2efc48b367db7; op2val:0x401c222f1cec7041; op3val:0x7fe0a6069be9fb0f; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1424, x18)

inst_598:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x2efc48b367db7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc222f1cec7041 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0a6069be9fb0f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb2efc48b367db7; op2val:0x401c222f1cec7041; op3val:0x7fe0a6069be9fb0f; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1440, x18)

inst_599:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x2efc48b367db7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc222f1cec7041 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0a6069be9fb0f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb2efc48b367db7; op2val:0x401c222f1cec7041; op3val:0x7fe0a6069be9fb0f; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1456, x18)

inst_600:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x2efc48b367db7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc222f1cec7041 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0a6069be9fb0f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb2efc48b367db7; op2val:0x401c222f1cec7041; op3val:0x7fe0a6069be9fb0f; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1472, x18)

inst_601:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfa664451d7f79 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37596618df133 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x33f18a418ff2f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfa664451d7f79; op2val:0x3fc37596618df133; op3val:0x7fb33f18a418ff2f; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1488, x18)

inst_602:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfa664451d7f79 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37596618df133 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x33f18a418ff2f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfa664451d7f79; op2val:0x3fc37596618df133; op3val:0x7fb33f18a418ff2f; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1504, x18)

inst_603:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfa664451d7f79 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37596618df133 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x33f18a418ff2f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfa664451d7f79; op2val:0x3fc37596618df133; op3val:0x7fb33f18a418ff2f; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1520, x18)

inst_604:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfa664451d7f79 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37596618df133 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x33f18a418ff2f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfa664451d7f79; op2val:0x3fc37596618df133; op3val:0x7fb33f18a418ff2f; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1536, x18)

inst_605:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfa664451d7f79 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37596618df133 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x33f18a418ff2f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfa664451d7f79; op2val:0x3fc37596618df133; op3val:0x7fb33f18a418ff2f; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1552, x18)

inst_606:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1820d688af302 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb2424702b6247 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdb3031df1b4d9 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1820d688af302; op2val:0x3feb2424702b6247; op3val:0x7fddb3031df1b4d9; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1568, x18)

inst_607:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1820d688af302 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb2424702b6247 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdb3031df1b4d9 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1820d688af302; op2val:0x3feb2424702b6247; op3val:0x7fddb3031df1b4d9; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1584, x18)

inst_608:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1820d688af302 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb2424702b6247 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdb3031df1b4d9 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1820d688af302; op2val:0x3feb2424702b6247; op3val:0x7fddb3031df1b4d9; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1600, x18)

inst_609:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1820d688af302 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb2424702b6247 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdb3031df1b4d9 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1820d688af302; op2val:0x3feb2424702b6247; op3val:0x7fddb3031df1b4d9; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1616, x18)

inst_610:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1820d688af302 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb2424702b6247 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdb3031df1b4d9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1820d688af302; op2val:0x3feb2424702b6247; op3val:0x7fddb3031df1b4d9; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1632, x18)

inst_611:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7689c5eb40a1f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3f42185eb0526 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd31660cc9f4c7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7689c5eb40a1f; op2val:0x3fc3f42185eb0526; op3val:0x7fbd31660cc9f4c7; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1648, x18)

inst_612:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7689c5eb40a1f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3f42185eb0526 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd31660cc9f4c7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7689c5eb40a1f; op2val:0x3fc3f42185eb0526; op3val:0x7fbd31660cc9f4c7; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1664, x18)

inst_613:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7689c5eb40a1f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3f42185eb0526 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd31660cc9f4c7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7689c5eb40a1f; op2val:0x3fc3f42185eb0526; op3val:0x7fbd31660cc9f4c7; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1680, x18)

inst_614:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7689c5eb40a1f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3f42185eb0526 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd31660cc9f4c7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7689c5eb40a1f; op2val:0x3fc3f42185eb0526; op3val:0x7fbd31660cc9f4c7; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1696, x18)

inst_615:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7689c5eb40a1f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3f42185eb0526 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd31660cc9f4c7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7689c5eb40a1f; op2val:0x3fc3f42185eb0526; op3val:0x7fbd31660cc9f4c7; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1712, x18)

inst_616:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5fb8b9f14c19d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcea965fb571c3 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x3dd40e50b5657 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5fb8b9f14c19d; op2val:0x3fccea965fb571c3; op3val:0x7fb3dd40e50b5657; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1728, x18)

inst_617:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5fb8b9f14c19d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcea965fb571c3 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x3dd40e50b5657 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5fb8b9f14c19d; op2val:0x3fccea965fb571c3; op3val:0x7fb3dd40e50b5657; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1744, x18)

inst_618:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5fb8b9f14c19d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcea965fb571c3 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x3dd40e50b5657 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5fb8b9f14c19d; op2val:0x3fccea965fb571c3; op3val:0x7fb3dd40e50b5657; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1760, x18)

inst_619:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5fb8b9f14c19d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcea965fb571c3 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x3dd40e50b5657 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5fb8b9f14c19d; op2val:0x3fccea965fb571c3; op3val:0x7fb3dd40e50b5657; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1776, x18)

inst_620:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5fb8b9f14c19d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xcea965fb571c3 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x3dd40e50b5657 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5fb8b9f14c19d; op2val:0x3fccea965fb571c3; op3val:0x7fb3dd40e50b5657; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1792, x18)

inst_621:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe64bc90d6330a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79b6b2db9076f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x66c0545bb6d20 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee64bc90d6330a; op2val:0x3fe79b6b2db9076f; op3val:0x7fe66c0545bb6d20; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1808, x18)

inst_622:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe64bc90d6330a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79b6b2db9076f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x66c0545bb6d20 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee64bc90d6330a; op2val:0x3fe79b6b2db9076f; op3val:0x7fe66c0545bb6d20; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1824, x18)

inst_623:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe64bc90d6330a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79b6b2db9076f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x66c0545bb6d20 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee64bc90d6330a; op2val:0x3fe79b6b2db9076f; op3val:0x7fe66c0545bb6d20; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1840, x18)

inst_624:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe64bc90d6330a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79b6b2db9076f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x66c0545bb6d20 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee64bc90d6330a; op2val:0x3fe79b6b2db9076f; op3val:0x7fe66c0545bb6d20; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1856, x18)

inst_625:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe64bc90d6330a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79b6b2db9076f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x66c0545bb6d20 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee64bc90d6330a; op2val:0x3fe79b6b2db9076f; op3val:0x7fe66c0545bb6d20; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1872, x18)

inst_626:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc6fc16f59a72 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8a86f00163dab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x87c7ff70142ef and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefc6fc16f59a72; op2val:0x3fe8a86f00163dab; op3val:0x7fe87c7ff70142ef; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1888, x18)

inst_627:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc6fc16f59a72 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8a86f00163dab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x87c7ff70142ef and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefc6fc16f59a72; op2val:0x3fe8a86f00163dab; op3val:0x7fe87c7ff70142ef; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1904, x18)

inst_628:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc6fc16f59a72 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8a86f00163dab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x87c7ff70142ef and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefc6fc16f59a72; op2val:0x3fe8a86f00163dab; op3val:0x7fe87c7ff70142ef; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1920, x18)

inst_629:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc6fc16f59a72 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8a86f00163dab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x87c7ff70142ef and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefc6fc16f59a72; op2val:0x3fe8a86f00163dab; op3val:0x7fe87c7ff70142ef; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1936, x18)

inst_630:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc6fc16f59a72 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8a86f00163dab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x87c7ff70142ef and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefc6fc16f59a72; op2val:0x3fe8a86f00163dab; op3val:0x7fe87c7ff70142ef; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1952, x18)

inst_631:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7b61610417617 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1fcfbfd7f78c9 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xaa860bcebd8af and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7b61610417617; op2val:0x3fc1fcfbfd7f78c9; op3val:0x7faaa860bcebd8af; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1968, x18)

inst_632:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7b61610417617 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1fcfbfd7f78c9 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xaa860bcebd8af and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7b61610417617; op2val:0x3fc1fcfbfd7f78c9; op3val:0x7faaa860bcebd8af; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1984, x18)

inst_633:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7b61610417617 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1fcfbfd7f78c9 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xaa860bcebd8af and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7b61610417617; op2val:0x3fc1fcfbfd7f78c9; op3val:0x7faaa860bcebd8af; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2000, x18)

inst_634:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7b61610417617 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1fcfbfd7f78c9 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xaa860bcebd8af and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7b61610417617; op2val:0x3fc1fcfbfd7f78c9; op3val:0x7faaa860bcebd8af; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_635:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7b61610417617 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1fcfbfd7f78c9 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xaa860bcebd8af and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7b61610417617; op2val:0x3fc1fcfbfd7f78c9; op3val:0x7faaa860bcebd8af; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 0, x18)

inst_636:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0bfb9af4c823f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5308ec38881fa and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x62e785561d103 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0bfb9af4c823f; op2val:0x4015308ec38881fa; op3val:0x7fc62e785561d103; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 16, x18)

inst_637:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0bfb9af4c823f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5308ec38881fa and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x62e785561d103 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0bfb9af4c823f; op2val:0x4015308ec38881fa; op3val:0x7fc62e785561d103; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 32, x18)

inst_638:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0bfb9af4c823f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5308ec38881fa and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x62e785561d103 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0bfb9af4c823f; op2val:0x4015308ec38881fa; op3val:0x7fc62e785561d103; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 48, x18)

inst_639:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0bfb9af4c823f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5308ec38881fa and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x62e785561d103 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0bfb9af4c823f; op2val:0x4015308ec38881fa; op3val:0x7fc62e785561d103; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 64, x18)

inst_640:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0bfb9af4c823f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5308ec38881fa and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x62e785561d103 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0bfb9af4c823f; op2val:0x4015308ec38881fa; op3val:0x7fc62e785561d103; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 80, x18)

inst_641:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46f2fe4f42ca2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xad5bc4ca22702 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x122d33efb5c32 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe46f2fe4f42ca2; op2val:0x3fead5bc4ca22702; op3val:0x7fe122d33efb5c32; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 96, x18)

inst_642:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46f2fe4f42ca2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xad5bc4ca22702 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x122d33efb5c32 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe46f2fe4f42ca2; op2val:0x3fead5bc4ca22702; op3val:0x7fe122d33efb5c32; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 112, x18)

inst_643:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46f2fe4f42ca2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xad5bc4ca22702 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x122d33efb5c32 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe46f2fe4f42ca2; op2val:0x3fead5bc4ca22702; op3val:0x7fe122d33efb5c32; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 128, x18)

inst_644:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46f2fe4f42ca2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xad5bc4ca22702 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x122d33efb5c32 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe46f2fe4f42ca2; op2val:0x3fead5bc4ca22702; op3val:0x7fe122d33efb5c32; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 144, x18)

inst_645:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46f2fe4f42ca2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xad5bc4ca22702 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x122d33efb5c32 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe46f2fe4f42ca2; op2val:0x3fead5bc4ca22702; op3val:0x7fe122d33efb5c32; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 160, x18)

inst_646:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ecba47fc8667 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3107e90cda7fd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1fb75e6b2ed1 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5ecba47fc8667; op2val:0x4023107e90cda7fd; op3val:0x7fea1fb75e6b2ed1; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 176, x18)

inst_647:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ecba47fc8667 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3107e90cda7fd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1fb75e6b2ed1 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5ecba47fc8667; op2val:0x4023107e90cda7fd; op3val:0x7fea1fb75e6b2ed1; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 192, x18)

inst_648:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ecba47fc8667 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3107e90cda7fd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1fb75e6b2ed1 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5ecba47fc8667; op2val:0x4023107e90cda7fd; op3val:0x7fea1fb75e6b2ed1; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 208, x18)

inst_649:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ecba47fc8667 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3107e90cda7fd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1fb75e6b2ed1 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5ecba47fc8667; op2val:0x4023107e90cda7fd; op3val:0x7fea1fb75e6b2ed1; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 224, x18)

inst_650:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ecba47fc8667 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3107e90cda7fd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1fb75e6b2ed1 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5ecba47fc8667; op2val:0x4023107e90cda7fd; op3val:0x7fea1fb75e6b2ed1; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 240, x18)

inst_651:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd825bfd7c5ea9 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x1b7fbece18bf1 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x056eaadaea1df and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed825bfd7c5ea9; op2val:0x3fa1b7fbece18bf1; op3val:0x7fa056eaadaea1df; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 256, x18)

inst_652:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd825bfd7c5ea9 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x1b7fbece18bf1 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x056eaadaea1df and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed825bfd7c5ea9; op2val:0x3fa1b7fbece18bf1; op3val:0x7fa056eaadaea1df; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 272, x18)

inst_653:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd825bfd7c5ea9 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x1b7fbece18bf1 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x056eaadaea1df and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed825bfd7c5ea9; op2val:0x3fa1b7fbece18bf1; op3val:0x7fa056eaadaea1df; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 288, x18)

inst_654:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd825bfd7c5ea9 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x1b7fbece18bf1 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x056eaadaea1df and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed825bfd7c5ea9; op2val:0x3fa1b7fbece18bf1; op3val:0x7fa056eaadaea1df; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 304, x18)

inst_655:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd825bfd7c5ea9 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x1b7fbece18bf1 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x056eaadaea1df and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed825bfd7c5ea9; op2val:0x3fa1b7fbece18bf1; op3val:0x7fa056eaadaea1df; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 320, x18)

inst_656:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeeb4761e47455 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc873bef0856d7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb9088f38dc9ef and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeeb4761e47455; op2val:0x3fdc873bef0856d7; op3val:0x7fdb9088f38dc9ef; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 336, x18)

inst_657:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeeb4761e47455 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc873bef0856d7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb9088f38dc9ef and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeeb4761e47455; op2val:0x3fdc873bef0856d7; op3val:0x7fdb9088f38dc9ef; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 352, x18)

inst_658:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeeb4761e47455 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc873bef0856d7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb9088f38dc9ef and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeeb4761e47455; op2val:0x3fdc873bef0856d7; op3val:0x7fdb9088f38dc9ef; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 368, x18)

inst_659:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeeb4761e47455 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc873bef0856d7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb9088f38dc9ef and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeeb4761e47455; op2val:0x3fdc873bef0856d7; op3val:0x7fdb9088f38dc9ef; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 384, x18)

inst_660:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeeb4761e47455 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc873bef0856d7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb9088f38dc9ef and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeeb4761e47455; op2val:0x3fdc873bef0856d7; op3val:0x7fdb9088f38dc9ef; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 400, x18)

inst_661:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7561a51a6716 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4de99f77c351a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x1e85f7a31631d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7561a51a6716; op2val:0x3fd4de99f77c351a; op3val:0x7fd1e85f7a31631d; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 416, x18)

inst_662:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7561a51a6716 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4de99f77c351a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x1e85f7a31631d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7561a51a6716; op2val:0x3fd4de99f77c351a; op3val:0x7fd1e85f7a31631d; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 432, x18)

inst_663:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7561a51a6716 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4de99f77c351a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x1e85f7a31631d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7561a51a6716; op2val:0x3fd4de99f77c351a; op3val:0x7fd1e85f7a31631d; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 448, x18)

inst_664:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7561a51a6716 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4de99f77c351a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x1e85f7a31631d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7561a51a6716; op2val:0x3fd4de99f77c351a; op3val:0x7fd1e85f7a31631d; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 464, x18)

inst_665:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7561a51a6716 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4de99f77c351a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x1e85f7a31631d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7561a51a6716; op2val:0x3fd4de99f77c351a; op3val:0x7fd1e85f7a31631d; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 480, x18)

inst_666:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe11c9b022ae56 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x6cc42eab1a937 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x56c2af013b477 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee11c9b022ae56; op2val:0x3fb6cc42eab1a937; op3val:0x7fb56c2af013b477; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 496, x18)

inst_667:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe11c9b022ae56 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x6cc42eab1a937 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x56c2af013b477 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee11c9b022ae56; op2val:0x3fb6cc42eab1a937; op3val:0x7fb56c2af013b477; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 512, x18)

inst_668:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe11c9b022ae56 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x6cc42eab1a937 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x56c2af013b477 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee11c9b022ae56; op2val:0x3fb6cc42eab1a937; op3val:0x7fb56c2af013b477; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 528, x18)

inst_669:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe11c9b022ae56 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x6cc42eab1a937 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x56c2af013b477 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee11c9b022ae56; op2val:0x3fb6cc42eab1a937; op3val:0x7fb56c2af013b477; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 544, x18)

inst_670:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe11c9b022ae56 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x6cc42eab1a937 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x56c2af013b477 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee11c9b022ae56; op2val:0x3fb6cc42eab1a937; op3val:0x7fb56c2af013b477; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 560, x18)

inst_671:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf4c67f9742a6f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x2b809bf6aeb86 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x24efb5ae19209 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef4c67f9742a6f; op2val:0x3fd2b809bf6aeb86; op3val:0x7fd24efb5ae19209; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 576, x18)

inst_672:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf4c67f9742a6f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x2b809bf6aeb86 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x24efb5ae19209 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef4c67f9742a6f; op2val:0x3fd2b809bf6aeb86; op3val:0x7fd24efb5ae19209; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 592, x18)

inst_673:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf4c67f9742a6f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x2b809bf6aeb86 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x24efb5ae19209 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef4c67f9742a6f; op2val:0x3fd2b809bf6aeb86; op3val:0x7fd24efb5ae19209; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 608, x18)

inst_674:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf4c67f9742a6f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x2b809bf6aeb86 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x24efb5ae19209 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef4c67f9742a6f; op2val:0x3fd2b809bf6aeb86; op3val:0x7fd24efb5ae19209; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 624, x18)

inst_675:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf4c67f9742a6f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x2b809bf6aeb86 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x24efb5ae19209 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef4c67f9742a6f; op2val:0x3fd2b809bf6aeb86; op3val:0x7fd24efb5ae19209; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 640, x18)

inst_676:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x04cafda9b0ce7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x922c1147c87ff and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99b3a6d2ac342 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb04cafda9b0ce7; op2val:0x402922c1147c87ff; op3val:0x7fe99b3a6d2ac342; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 656, x18)

inst_677:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x04cafda9b0ce7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x922c1147c87ff and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99b3a6d2ac342 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb04cafda9b0ce7; op2val:0x402922c1147c87ff; op3val:0x7fe99b3a6d2ac342; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 672, x18)

inst_678:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x04cafda9b0ce7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x922c1147c87ff and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99b3a6d2ac342 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb04cafda9b0ce7; op2val:0x402922c1147c87ff; op3val:0x7fe99b3a6d2ac342; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 688, x18)

inst_679:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x04cafda9b0ce7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x922c1147c87ff and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99b3a6d2ac342 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb04cafda9b0ce7; op2val:0x402922c1147c87ff; op3val:0x7fe99b3a6d2ac342; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 704, x18)
addi x16,x16,2040

inst_680:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x04cafda9b0ce7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x922c1147c87ff and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99b3a6d2ac342 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb04cafda9b0ce7; op2val:0x402922c1147c87ff; op3val:0x7fe99b3a6d2ac342; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 720, x18)

inst_681:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1b0a743d1c7c5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x49f03722a8815 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6cca06251390e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1b0a743d1c7c5; op2val:0x40049f03722a8815; op3val:0x7fe6cca06251390e; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 736, x18)

inst_682:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1b0a743d1c7c5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x49f03722a8815 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6cca06251390e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1b0a743d1c7c5; op2val:0x40049f03722a8815; op3val:0x7fe6cca06251390e; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 752, x18)

inst_683:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1b0a743d1c7c5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x49f03722a8815 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6cca06251390e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1b0a743d1c7c5; op2val:0x40049f03722a8815; op3val:0x7fe6cca06251390e; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 768, x18)

inst_684:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1b0a743d1c7c5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x49f03722a8815 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6cca06251390e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1b0a743d1c7c5; op2val:0x40049f03722a8815; op3val:0x7fe6cca06251390e; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 784, x18)

inst_685:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1b0a743d1c7c5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x49f03722a8815 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6cca06251390e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1b0a743d1c7c5; op2val:0x40049f03722a8815; op3val:0x7fe6cca06251390e; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 800, x18)

inst_686:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e974adc206cd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x260880d31e976 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc9cefd477fe03 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e974adc206cd; op2val:0x3fe260880d31e976; op3val:0x7fdc9cefd477fe03; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 816, x18)

inst_687:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e974adc206cd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x260880d31e976 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc9cefd477fe03 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e974adc206cd; op2val:0x3fe260880d31e976; op3val:0x7fdc9cefd477fe03; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 832, x18)

inst_688:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e974adc206cd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x260880d31e976 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc9cefd477fe03 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e974adc206cd; op2val:0x3fe260880d31e976; op3val:0x7fdc9cefd477fe03; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 848, x18)

inst_689:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e974adc206cd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x260880d31e976 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc9cefd477fe03 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e974adc206cd; op2val:0x3fe260880d31e976; op3val:0x7fdc9cefd477fe03; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 864, x18)

inst_690:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e974adc206cd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x260880d31e976 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc9cefd477fe03 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e974adc206cd; op2val:0x3fe260880d31e976; op3val:0x7fdc9cefd477fe03; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 880, x18)

inst_691:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd14ade7bc89c9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf0c9a79b5326b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc377c9bd553c7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed14ade7bc89c9; op2val:0x3fdf0c9a79b5326b; op3val:0x7fdc377c9bd553c7; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 896, x18)

inst_692:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd14ade7bc89c9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf0c9a79b5326b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc377c9bd553c7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed14ade7bc89c9; op2val:0x3fdf0c9a79b5326b; op3val:0x7fdc377c9bd553c7; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 912, x18)

inst_693:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd14ade7bc89c9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf0c9a79b5326b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc377c9bd553c7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed14ade7bc89c9; op2val:0x3fdf0c9a79b5326b; op3val:0x7fdc377c9bd553c7; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 928, x18)

inst_694:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd14ade7bc89c9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf0c9a79b5326b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc377c9bd553c7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed14ade7bc89c9; op2val:0x3fdf0c9a79b5326b; op3val:0x7fdc377c9bd553c7; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 944, x18)

inst_695:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd14ade7bc89c9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf0c9a79b5326b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc377c9bd553c7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed14ade7bc89c9; op2val:0x3fdf0c9a79b5326b; op3val:0x7fdc377c9bd553c7; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 960, x18)

inst_696:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x18b935d178c4f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xb87b52cfcd2bd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe305904c15338 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc18b935d178c4f; op2val:0x401b87b52cfcd2bd; op3val:0x7fee305904c15338; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 976, x18)

inst_697:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x18b935d178c4f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xb87b52cfcd2bd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe305904c15338 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc18b935d178c4f; op2val:0x401b87b52cfcd2bd; op3val:0x7fee305904c15338; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 992, x18)

inst_698:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x18b935d178c4f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xb87b52cfcd2bd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe305904c15338 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc18b935d178c4f; op2val:0x401b87b52cfcd2bd; op3val:0x7fee305904c15338; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1008, x18)

inst_699:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x18b935d178c4f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xb87b52cfcd2bd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe305904c15338 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc18b935d178c4f; op2val:0x401b87b52cfcd2bd; op3val:0x7fee305904c15338; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1024, x18)

inst_700:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x18b935d178c4f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xb87b52cfcd2bd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe305904c15338 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc18b935d178c4f; op2val:0x401b87b52cfcd2bd; op3val:0x7fee305904c15338; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1040, x18)

inst_701:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6339ce014c510 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x23fcd3c280867 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x952987e8cbf7d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6339ce014c510; op2val:0x3ff23fcd3c280867; op3val:0x7fe952987e8cbf7d; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1056, x18)

inst_702:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6339ce014c510 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x23fcd3c280867 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x952987e8cbf7d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6339ce014c510; op2val:0x3ff23fcd3c280867; op3val:0x7fe952987e8cbf7d; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1072, x18)

inst_703:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6339ce014c510 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x23fcd3c280867 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x952987e8cbf7d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6339ce014c510; op2val:0x3ff23fcd3c280867; op3val:0x7fe952987e8cbf7d; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1088, x18)

inst_704:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6339ce014c510 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x23fcd3c280867 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x952987e8cbf7d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6339ce014c510; op2val:0x3ff23fcd3c280867; op3val:0x7fe952987e8cbf7d; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1104, x18)

inst_705:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6339ce014c510 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x23fcd3c280867 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x952987e8cbf7d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6339ce014c510; op2val:0x3ff23fcd3c280867; op3val:0x7fe952987e8cbf7d; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1120, x18)

inst_706:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc95dea29dfb56 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x030f05c9863cc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xced4dabff5ebf and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec95dea29dfb56; op2val:0x3fe030f05c9863cc; op3val:0x7fdced4dabff5ebf; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1136, x18)

inst_707:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc95dea29dfb56 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x030f05c9863cc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xced4dabff5ebf and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec95dea29dfb56; op2val:0x3fe030f05c9863cc; op3val:0x7fdced4dabff5ebf; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1152, x18)

inst_708:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc95dea29dfb56 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x030f05c9863cc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xced4dabff5ebf and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec95dea29dfb56; op2val:0x3fe030f05c9863cc; op3val:0x7fdced4dabff5ebf; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1168, x18)

inst_709:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc95dea29dfb56 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x030f05c9863cc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xced4dabff5ebf and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec95dea29dfb56; op2val:0x3fe030f05c9863cc; op3val:0x7fdced4dabff5ebf; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1184, x18)

inst_710:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc95dea29dfb56 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x030f05c9863cc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xced4dabff5ebf and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec95dea29dfb56; op2val:0x3fe030f05c9863cc; op3val:0x7fdced4dabff5ebf; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_711:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a2cdd0f8cb3 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfdf05ad534fe3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd0c1e8b5a87f3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2a2cdd0f8cb3; op2val:0x3fefdf05ad534fe3; op3val:0x7fed0c1e8b5a87f3; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1216, x18)

inst_712:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a2cdd0f8cb3 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfdf05ad534fe3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd0c1e8b5a87f3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2a2cdd0f8cb3; op2val:0x3fefdf05ad534fe3; op3val:0x7fed0c1e8b5a87f3; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1232, x18)

inst_713:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a2cdd0f8cb3 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfdf05ad534fe3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd0c1e8b5a87f3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2a2cdd0f8cb3; op2val:0x3fefdf05ad534fe3; op3val:0x7fed0c1e8b5a87f3; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1248, x18)

inst_714:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a2cdd0f8cb3 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfdf05ad534fe3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd0c1e8b5a87f3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2a2cdd0f8cb3; op2val:0x3fefdf05ad534fe3; op3val:0x7fed0c1e8b5a87f3; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1264, x18)

inst_715:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a2cdd0f8cb3 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfdf05ad534fe3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd0c1e8b5a87f3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2a2cdd0f8cb3; op2val:0x3fefdf05ad534fe3; op3val:0x7fed0c1e8b5a87f3; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1280, x18)

inst_716:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5631ca527644f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xd985d78d050af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3c7a736865391 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5631ca527644f; op2val:0x401d985d78d050af; op3val:0x7fe3c7a736865391; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1296, x18)

inst_717:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5631ca527644f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xd985d78d050af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3c7a736865391 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5631ca527644f; op2val:0x401d985d78d050af; op3val:0x7fe3c7a736865391; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1312, x18)

inst_718:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5631ca527644f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xd985d78d050af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3c7a736865391 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5631ca527644f; op2val:0x401d985d78d050af; op3val:0x7fe3c7a736865391; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1328, x18)

inst_719:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5631ca527644f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xd985d78d050af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3c7a736865391 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5631ca527644f; op2val:0x401d985d78d050af; op3val:0x7fe3c7a736865391; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1344, x18)

inst_720:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5631ca527644f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xd985d78d050af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3c7a736865391 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5631ca527644f; op2val:0x401d985d78d050af; op3val:0x7fe3c7a736865391; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1360, x18)

inst_721:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x041c0b9ddaa1b and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa396879bb08c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa52d93b25d1f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc041c0b9ddaa1b; op2val:0x401a396879bb08c6; op3val:0x7feaa52d93b25d1f; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1376, x18)

inst_722:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x041c0b9ddaa1b and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa396879bb08c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa52d93b25d1f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc041c0b9ddaa1b; op2val:0x401a396879bb08c6; op3val:0x7feaa52d93b25d1f; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1392, x18)

inst_723:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x041c0b9ddaa1b and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa396879bb08c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa52d93b25d1f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc041c0b9ddaa1b; op2val:0x401a396879bb08c6; op3val:0x7feaa52d93b25d1f; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1408, x18)

inst_724:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x041c0b9ddaa1b and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa396879bb08c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa52d93b25d1f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc041c0b9ddaa1b; op2val:0x401a396879bb08c6; op3val:0x7feaa52d93b25d1f; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1424, x18)

inst_725:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x041c0b9ddaa1b and fs2 == 0 and fe2 == 0x401 and fm2 == 0xa396879bb08c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa52d93b25d1f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc041c0b9ddaa1b; op2val:0x401a396879bb08c6; op3val:0x7feaa52d93b25d1f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1440, x18)

inst_726:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x422628c1f9624 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d5d6936bdb26 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x671a07a34a94c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe422628c1f9624; op2val:0x3ff1d5d6936bdb26; op3val:0x7fe671a07a34a94c; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1456, x18)

inst_727:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x422628c1f9624 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d5d6936bdb26 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x671a07a34a94c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe422628c1f9624; op2val:0x3ff1d5d6936bdb26; op3val:0x7fe671a07a34a94c; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1472, x18)

inst_728:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x422628c1f9624 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d5d6936bdb26 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x671a07a34a94c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe422628c1f9624; op2val:0x3ff1d5d6936bdb26; op3val:0x7fe671a07a34a94c; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1488, x18)

inst_729:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x422628c1f9624 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d5d6936bdb26 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x671a07a34a94c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe422628c1f9624; op2val:0x3ff1d5d6936bdb26; op3val:0x7fe671a07a34a94c; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1504, x18)

inst_730:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x422628c1f9624 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d5d6936bdb26 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x671a07a34a94c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe422628c1f9624; op2val:0x3ff1d5d6936bdb26; op3val:0x7fe671a07a34a94c; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1520, x18)

inst_731:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd9d183dcaf23f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf1b40133408ed and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcc9675446a76e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd9d183dcaf23f; op2val:0x3fff1b40133408ed; op3val:0x7fecc9675446a76e; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1536, x18)

inst_732:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd9d183dcaf23f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf1b40133408ed and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcc9675446a76e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd9d183dcaf23f; op2val:0x3fff1b40133408ed; op3val:0x7fecc9675446a76e; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1552, x18)

inst_733:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd9d183dcaf23f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf1b40133408ed and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcc9675446a76e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd9d183dcaf23f; op2val:0x3fff1b40133408ed; op3val:0x7fecc9675446a76e; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1568, x18)

inst_734:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd9d183dcaf23f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf1b40133408ed and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcc9675446a76e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd9d183dcaf23f; op2val:0x3fff1b40133408ed; op3val:0x7fecc9675446a76e; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1584, x18)

inst_735:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd9d183dcaf23f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf1b40133408ed and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcc9675446a76e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd9d183dcaf23f; op2val:0x3fff1b40133408ed; op3val:0x7fecc9675446a76e; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1600, x18)

inst_736:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xafd8e8172cff7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x87e14bf298e14 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4a882c1e9583d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbafd8e8172cff7; op2val:0x40187e14bf298e14; op3val:0x7fe4a882c1e9583d; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1616, x18)

inst_737:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xafd8e8172cff7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x87e14bf298e14 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4a882c1e9583d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbafd8e8172cff7; op2val:0x40187e14bf298e14; op3val:0x7fe4a882c1e9583d; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1632, x18)

inst_738:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xafd8e8172cff7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x87e14bf298e14 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4a882c1e9583d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbafd8e8172cff7; op2val:0x40187e14bf298e14; op3val:0x7fe4a882c1e9583d; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1648, x18)

inst_739:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xafd8e8172cff7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x87e14bf298e14 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4a882c1e9583d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbafd8e8172cff7; op2val:0x40187e14bf298e14; op3val:0x7fe4a882c1e9583d; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1664, x18)

inst_740:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xafd8e8172cff7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x87e14bf298e14 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4a882c1e9583d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbafd8e8172cff7; op2val:0x40187e14bf298e14; op3val:0x7fe4a882c1e9583d; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1680, x18)

inst_741:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x418a2feac319d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3d60d72ed2614 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x8ea1bf6d88f07 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe418a2feac319d; op2val:0x3fc3d60d72ed2614; op3val:0x7fb8ea1bf6d88f07; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1696, x18)

inst_742:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x418a2feac319d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3d60d72ed2614 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x8ea1bf6d88f07 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe418a2feac319d; op2val:0x3fc3d60d72ed2614; op3val:0x7fb8ea1bf6d88f07; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1712, x18)

inst_743:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x418a2feac319d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3d60d72ed2614 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x8ea1bf6d88f07 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe418a2feac319d; op2val:0x3fc3d60d72ed2614; op3val:0x7fb8ea1bf6d88f07; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1728, x18)

inst_744:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x418a2feac319d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3d60d72ed2614 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x8ea1bf6d88f07 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe418a2feac319d; op2val:0x3fc3d60d72ed2614; op3val:0x7fb8ea1bf6d88f07; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1744, x18)

inst_745:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x418a2feac319d and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3d60d72ed2614 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x8ea1bf6d88f07 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe418a2feac319d; op2val:0x3fc3d60d72ed2614; op3val:0x7fb8ea1bf6d88f07; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1760, x18)

inst_746:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3691acd45f727 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xe71eee6788145 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x277a5309a56af and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3691acd45f727; op2val:0x3fce71eee6788145; op3val:0x7fc277a5309a56af; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1776, x18)

inst_747:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3691acd45f727 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xe71eee6788145 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x277a5309a56af and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3691acd45f727; op2val:0x3fce71eee6788145; op3val:0x7fc277a5309a56af; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1792, x18)

inst_748:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3691acd45f727 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xe71eee6788145 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x277a5309a56af and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3691acd45f727; op2val:0x3fce71eee6788145; op3val:0x7fc277a5309a56af; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1808, x18)

inst_749:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3691acd45f727 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xe71eee6788145 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x277a5309a56af and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3691acd45f727; op2val:0x3fce71eee6788145; op3val:0x7fc277a5309a56af; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1824, x18)

inst_750:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3691acd45f727 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xe71eee6788145 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x277a5309a56af and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3691acd45f727; op2val:0x3fce71eee6788145; op3val:0x7fc277a5309a56af; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1840, x18)

inst_751:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x28e011ae50327 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1433eebd8af82 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x404dcc8f93360 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc28e011ae50327; op2val:0x4011433eebd8af82; op3val:0x7fe404dcc8f93360; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1856, x18)

inst_752:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x28e011ae50327 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1433eebd8af82 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x404dcc8f93360 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc28e011ae50327; op2val:0x4011433eebd8af82; op3val:0x7fe404dcc8f93360; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1872, x18)

inst_753:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x28e011ae50327 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1433eebd8af82 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x404dcc8f93360 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc28e011ae50327; op2val:0x4011433eebd8af82; op3val:0x7fe404dcc8f93360; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1888, x18)

inst_754:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x28e011ae50327 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1433eebd8af82 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x404dcc8f93360 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc28e011ae50327; op2val:0x4011433eebd8af82; op3val:0x7fe404dcc8f93360; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1904, x18)

inst_755:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x28e011ae50327 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1433eebd8af82 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x404dcc8f93360 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc28e011ae50327; op2val:0x4011433eebd8af82; op3val:0x7fe404dcc8f93360; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1920, x18)

inst_756:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a3c26bde85df and fs2 == 0 and fe2 == 0x400 and fm2 == 0xce9b661b8773e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x72a8c9fb21963 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9a3c26bde85df; op2val:0x400ce9b661b8773e; op3val:0x7fd72a8c9fb21963; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1936, x18)

inst_757:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a3c26bde85df and fs2 == 0 and fe2 == 0x400 and fm2 == 0xce9b661b8773e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x72a8c9fb21963 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9a3c26bde85df; op2val:0x400ce9b661b8773e; op3val:0x7fd72a8c9fb21963; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1952, x18)

inst_758:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a3c26bde85df and fs2 == 0 and fe2 == 0x400 and fm2 == 0xce9b661b8773e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x72a8c9fb21963 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9a3c26bde85df; op2val:0x400ce9b661b8773e; op3val:0x7fd72a8c9fb21963; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1968, x18)

inst_759:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a3c26bde85df and fs2 == 0 and fe2 == 0x400 and fm2 == 0xce9b661b8773e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x72a8c9fb21963 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9a3c26bde85df; op2val:0x400ce9b661b8773e; op3val:0x7fd72a8c9fb21963; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1984, x18)

inst_760:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a3c26bde85df and fs2 == 0 and fe2 == 0x400 and fm2 == 0xce9b661b8773e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x72a8c9fb21963 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9a3c26bde85df; op2val:0x400ce9b661b8773e; op3val:0x7fd72a8c9fb21963; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2000, x18)

inst_761:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf77ea389b4723 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe84382d87f02b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe027179db45b7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf77ea389b4723; op2val:0x3fee84382d87f02b; op3val:0x7fde027179db45b7; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_762:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf77ea389b4723 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe84382d87f02b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe027179db45b7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf77ea389b4723; op2val:0x3fee84382d87f02b; op3val:0x7fde027179db45b7; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf77ea389b4723 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe84382d87f02b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe027179db45b7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf77ea389b4723; op2val:0x3fee84382d87f02b; op3val:0x7fde027179db45b7; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 16, x18)

inst_764:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf77ea389b4723 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe84382d87f02b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe027179db45b7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf77ea389b4723; op2val:0x3fee84382d87f02b; op3val:0x7fde027179db45b7; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 32, x18)
addi x16,x16,2040

inst_765:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf77ea389b4723 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe84382d87f02b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe027179db45b7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf77ea389b4723; op2val:0x3fee84382d87f02b; op3val:0x7fde027179db45b7; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 48, x18)

inst_766:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x90887e3335c40 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0a37a4da7a4ac and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa084e26197488 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe90887e3335c40; op2val:0x3ff0a37a4da7a4ac; op3val:0x7fea084e26197488; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 64, x18)

inst_767:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x90887e3335c40 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0a37a4da7a4ac and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa084e26197488 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe90887e3335c40; op2val:0x3ff0a37a4da7a4ac; op3val:0x7fea084e26197488; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 80, x18)

inst_768:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x90887e3335c40 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0a37a4da7a4ac and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa084e26197488 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe90887e3335c40; op2val:0x3ff0a37a4da7a4ac; op3val:0x7fea084e26197488; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 96, x18)

inst_769:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x90887e3335c40 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0a37a4da7a4ac and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa084e26197488 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe90887e3335c40; op2val:0x3ff0a37a4da7a4ac; op3val:0x7fea084e26197488; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 112, x18)

inst_770:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x90887e3335c40 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0a37a4da7a4ac and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa084e26197488 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe90887e3335c40; op2val:0x3ff0a37a4da7a4ac; op3val:0x7fea084e26197488; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 128, x18)

inst_771:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a13d100f2dec and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x605083172db32 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb03e0667320ab and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a13d100f2dec; op2val:0x3fe605083172db32; op3val:0x7fdb03e0667320ab; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 144, x18)

inst_772:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a13d100f2dec and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x605083172db32 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb03e0667320ab and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a13d100f2dec; op2val:0x3fe605083172db32; op3val:0x7fdb03e0667320ab; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 160, x18)

inst_773:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a13d100f2dec and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x605083172db32 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb03e0667320ab and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a13d100f2dec; op2val:0x3fe605083172db32; op3val:0x7fdb03e0667320ab; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 176, x18)

inst_774:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a13d100f2dec and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x605083172db32 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb03e0667320ab and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a13d100f2dec; op2val:0x3fe605083172db32; op3val:0x7fdb03e0667320ab; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 192, x18)

inst_775:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a13d100f2dec and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x605083172db32 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb03e0667320ab and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a13d100f2dec; op2val:0x3fe605083172db32; op3val:0x7fdb03e0667320ab; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 208, x18)

inst_776:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8a82752785fdf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x3ac2fa289aaaf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe5107c113b71d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8a82752785fdf; op2val:0x4013ac2fa289aaaf; op3val:0x7fee5107c113b71d; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 224, x18)

inst_777:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8a82752785fdf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x3ac2fa289aaaf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe5107c113b71d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8a82752785fdf; op2val:0x4013ac2fa289aaaf; op3val:0x7fee5107c113b71d; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 240, x18)

inst_778:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8a82752785fdf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x3ac2fa289aaaf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe5107c113b71d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8a82752785fdf; op2val:0x4013ac2fa289aaaf; op3val:0x7fee5107c113b71d; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 256, x18)

inst_779:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8a82752785fdf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x3ac2fa289aaaf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe5107c113b71d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8a82752785fdf; op2val:0x4013ac2fa289aaaf; op3val:0x7fee5107c113b71d; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 272, x18)

inst_780:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8a82752785fdf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x3ac2fa289aaaf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe5107c113b71d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8a82752785fdf; op2val:0x4013ac2fa289aaaf; op3val:0x7fee5107c113b71d; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 288, x18)

inst_781:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb4fcdae5be740 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x2add24a985c2b and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xfe27d3ad5610f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb4fcdae5be740; op2val:0x3fb2add24a985c2b; op3val:0x7fafe27d3ad5610f; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 304, x18)

inst_782:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb4fcdae5be740 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x2add24a985c2b and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xfe27d3ad5610f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb4fcdae5be740; op2val:0x3fb2add24a985c2b; op3val:0x7fafe27d3ad5610f; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 320, x18)

inst_783:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb4fcdae5be740 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x2add24a985c2b and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xfe27d3ad5610f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb4fcdae5be740; op2val:0x3fb2add24a985c2b; op3val:0x7fafe27d3ad5610f; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 336, x18)

inst_784:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb4fcdae5be740 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x2add24a985c2b and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xfe27d3ad5610f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb4fcdae5be740; op2val:0x3fb2add24a985c2b; op3val:0x7fafe27d3ad5610f; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 352, x18)

inst_785:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb4fcdae5be740 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x2add24a985c2b and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xfe27d3ad5610f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb4fcdae5be740; op2val:0x3fb2add24a985c2b; op3val:0x7fafe27d3ad5610f; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 368, x18)

inst_786:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x72b318fdc5f95 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4bd059a2635c8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe07b449fd6117 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd72b318fdc5f95; op2val:0x4004bd059a2635c8; op3val:0x7fee07b449fd6117; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 384, x18)

inst_787:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x72b318fdc5f95 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4bd059a2635c8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe07b449fd6117 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd72b318fdc5f95; op2val:0x4004bd059a2635c8; op3val:0x7fee07b449fd6117; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 400, x18)

inst_788:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x72b318fdc5f95 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4bd059a2635c8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe07b449fd6117 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd72b318fdc5f95; op2val:0x4004bd059a2635c8; op3val:0x7fee07b449fd6117; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 416, x18)

inst_789:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x72b318fdc5f95 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4bd059a2635c8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe07b449fd6117 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd72b318fdc5f95; op2val:0x4004bd059a2635c8; op3val:0x7fee07b449fd6117; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 432, x18)

inst_790:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x72b318fdc5f95 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4bd059a2635c8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe07b449fd6117 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd72b318fdc5f95; op2val:0x4004bd059a2635c8; op3val:0x7fee07b449fd6117; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 448, x18)

inst_791:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcb550d5d3bb27 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9a0e906be3f15 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6fe02c97bce1c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbcb550d5d3bb27; op2val:0x4019a0e906be3f15; op3val:0x7fe6fe02c97bce1c; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 464, x18)

inst_792:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcb550d5d3bb27 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9a0e906be3f15 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6fe02c97bce1c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbcb550d5d3bb27; op2val:0x4019a0e906be3f15; op3val:0x7fe6fe02c97bce1c; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 480, x18)

inst_793:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcb550d5d3bb27 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9a0e906be3f15 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6fe02c97bce1c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbcb550d5d3bb27; op2val:0x4019a0e906be3f15; op3val:0x7fe6fe02c97bce1c; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 496, x18)

inst_794:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcb550d5d3bb27 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9a0e906be3f15 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6fe02c97bce1c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbcb550d5d3bb27; op2val:0x4019a0e906be3f15; op3val:0x7fe6fe02c97bce1c; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 512, x18)

inst_795:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcb550d5d3bb27 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x9a0e906be3f15 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6fe02c97bce1c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbcb550d5d3bb27; op2val:0x4019a0e906be3f15; op3val:0x7fe6fe02c97bce1c; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 528, x18)

inst_796:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xed5da4e13385f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x9b0757709ef4e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8c11bee4771c7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9ed5da4e13385f; op2val:0x4039b0757709ef4e; op3val:0x7fe8c11bee4771c7; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 544, x18)

inst_797:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xed5da4e13385f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x9b0757709ef4e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8c11bee4771c7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9ed5da4e13385f; op2val:0x4039b0757709ef4e; op3val:0x7fe8c11bee4771c7; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 560, x18)

inst_798:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xed5da4e13385f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x9b0757709ef4e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8c11bee4771c7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9ed5da4e13385f; op2val:0x4039b0757709ef4e; op3val:0x7fe8c11bee4771c7; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 576, x18)

inst_799:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xed5da4e13385f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x9b0757709ef4e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8c11bee4771c7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9ed5da4e13385f; op2val:0x4039b0757709ef4e; op3val:0x7fe8c11bee4771c7; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 592, x18)

inst_800:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xed5da4e13385f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x9b0757709ef4e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8c11bee4771c7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9ed5da4e13385f; op2val:0x4039b0757709ef4e; op3val:0x7fe8c11bee4771c7; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 608, x18)

inst_801:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcc2450fb79d8f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x04435bc917dff and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd3cdf4baf5c7f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcc2450fb79d8f; op2val:0x3fc04435bc917dff; op3val:0x7fad3cdf4baf5c7f; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 624, x18)

inst_802:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcc2450fb79d8f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x04435bc917dff and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd3cdf4baf5c7f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcc2450fb79d8f; op2val:0x3fc04435bc917dff; op3val:0x7fad3cdf4baf5c7f; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 640, x18)

inst_803:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcc2450fb79d8f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x04435bc917dff and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd3cdf4baf5c7f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcc2450fb79d8f; op2val:0x3fc04435bc917dff; op3val:0x7fad3cdf4baf5c7f; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 656, x18)

inst_804:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcc2450fb79d8f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x04435bc917dff and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd3cdf4baf5c7f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcc2450fb79d8f; op2val:0x3fc04435bc917dff; op3val:0x7fad3cdf4baf5c7f; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 672, x18)

inst_805:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcc2450fb79d8f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x04435bc917dff and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd3cdf4baf5c7f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcc2450fb79d8f; op2val:0x3fc04435bc917dff; op3val:0x7fad3cdf4baf5c7f; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 688, x18)

inst_806:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x29c4cac7a9799 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x5ce4d98b74cf6 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x95d1b3f609cff and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd29c4cac7a9799; op2val:0x3f95ce4d98b74cf6; op3val:0x7f795d1b3f609cff; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 704, x18)

inst_807:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x29c4cac7a9799 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x5ce4d98b74cf6 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x95d1b3f609cff and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd29c4cac7a9799; op2val:0x3f95ce4d98b74cf6; op3val:0x7f795d1b3f609cff; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 720, x18)

inst_808:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x29c4cac7a9799 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x5ce4d98b74cf6 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x95d1b3f609cff and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd29c4cac7a9799; op2val:0x3f95ce4d98b74cf6; op3val:0x7f795d1b3f609cff; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 736, x18)

inst_809:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x29c4cac7a9799 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x5ce4d98b74cf6 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x95d1b3f609cff and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd29c4cac7a9799; op2val:0x3f95ce4d98b74cf6; op3val:0x7f795d1b3f609cff; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 752, x18)

inst_810:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x29c4cac7a9799 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x5ce4d98b74cf6 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x95d1b3f609cff and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd29c4cac7a9799; op2val:0x3f95ce4d98b74cf6; op3val:0x7f795d1b3f609cff; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 768, x18)

inst_811:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x963da34a1fbd1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e31bf46211f7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdf8ba7f4f8dff and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe963da34a1fbd1; op2val:0x3ff2e31bf46211f7; op3val:0x7fedf8ba7f4f8dff; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 784, x18)

inst_812:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x963da34a1fbd1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e31bf46211f7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdf8ba7f4f8dff and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe963da34a1fbd1; op2val:0x3ff2e31bf46211f7; op3val:0x7fedf8ba7f4f8dff; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 800, x18)

inst_813:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x963da34a1fbd1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e31bf46211f7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdf8ba7f4f8dff and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe963da34a1fbd1; op2val:0x3ff2e31bf46211f7; op3val:0x7fedf8ba7f4f8dff; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 816, x18)

inst_814:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x963da34a1fbd1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e31bf46211f7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdf8ba7f4f8dff and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe963da34a1fbd1; op2val:0x3ff2e31bf46211f7; op3val:0x7fedf8ba7f4f8dff; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 832, x18)

inst_815:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x963da34a1fbd1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e31bf46211f7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdf8ba7f4f8dff and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe963da34a1fbd1; op2val:0x3ff2e31bf46211f7; op3val:0x7fedf8ba7f4f8dff; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 848, x18)

inst_816:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x97d71ffccd475 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x39aaaebff3689 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf3b5f15d59e2f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd97d71ffccd475; op2val:0x3ff39aaaebff3689; op3val:0x7fdf3b5f15d59e2f; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 864, x18)

inst_817:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x97d71ffccd475 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x39aaaebff3689 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf3b5f15d59e2f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd97d71ffccd475; op2val:0x3ff39aaaebff3689; op3val:0x7fdf3b5f15d59e2f; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 880, x18)

inst_818:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x97d71ffccd475 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x39aaaebff3689 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf3b5f15d59e2f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd97d71ffccd475; op2val:0x3ff39aaaebff3689; op3val:0x7fdf3b5f15d59e2f; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 896, x18)

inst_819:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x97d71ffccd475 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x39aaaebff3689 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf3b5f15d59e2f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd97d71ffccd475; op2val:0x3ff39aaaebff3689; op3val:0x7fdf3b5f15d59e2f; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 912, x18)

inst_820:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x97d71ffccd475 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x39aaaebff3689 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf3b5f15d59e2f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd97d71ffccd475; op2val:0x3ff39aaaebff3689; op3val:0x7fdf3b5f15d59e2f; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 928, x18)

inst_821:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x34c088d102eed and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0fca38061c1c4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x47cbb452b35f3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe34c088d102eed; op2val:0x3fe0fca38061c1c4; op3val:0x7fd47cbb452b35f3; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 944, x18)

inst_822:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x34c088d102eed and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0fca38061c1c4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x47cbb452b35f3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe34c088d102eed; op2val:0x3fe0fca38061c1c4; op3val:0x7fd47cbb452b35f3; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 960, x18)

inst_823:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x34c088d102eed and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0fca38061c1c4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x47cbb452b35f3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe34c088d102eed; op2val:0x3fe0fca38061c1c4; op3val:0x7fd47cbb452b35f3; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 976, x18)

inst_824:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x34c088d102eed and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0fca38061c1c4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x47cbb452b35f3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe34c088d102eed; op2val:0x3fe0fca38061c1c4; op3val:0x7fd47cbb452b35f3; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 992, x18)

inst_825:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x34c088d102eed and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0fca38061c1c4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x47cbb452b35f3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe34c088d102eed; op2val:0x3fe0fca38061c1c4; op3val:0x7fd47cbb452b35f3; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1008, x18)

inst_826:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd89dbaa7a4f33 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa127f980d5f2f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x81115cd8e3d03 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed89dbaa7a4f33; op2val:0x3fda127f980d5f2f; op3val:0x7fd81115cd8e3d03; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1024, x18)

inst_827:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd89dbaa7a4f33 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa127f980d5f2f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x81115cd8e3d03 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed89dbaa7a4f33; op2val:0x3fda127f980d5f2f; op3val:0x7fd81115cd8e3d03; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1040, x18)

inst_828:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd89dbaa7a4f33 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa127f980d5f2f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x81115cd8e3d03 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed89dbaa7a4f33; op2val:0x3fda127f980d5f2f; op3val:0x7fd81115cd8e3d03; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1056, x18)

inst_829:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd89dbaa7a4f33 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa127f980d5f2f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x81115cd8e3d03 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed89dbaa7a4f33; op2val:0x3fda127f980d5f2f; op3val:0x7fd81115cd8e3d03; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1072, x18)

inst_830:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd89dbaa7a4f33 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa127f980d5f2f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x81115cd8e3d03 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed89dbaa7a4f33; op2val:0x3fda127f980d5f2f; op3val:0x7fd81115cd8e3d03; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1088, x18)

inst_831:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5188518a6f19d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x78f8cbc2f063e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf108407a7033a and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5188518a6f19d; op2val:0x3ff78f8cbc2f063e; op3val:0x7fef108407a7033a; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1104, x18)

inst_832:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5188518a6f19d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x78f8cbc2f063e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf108407a7033a and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5188518a6f19d; op2val:0x3ff78f8cbc2f063e; op3val:0x7fef108407a7033a; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1120, x18)

inst_833:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5188518a6f19d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x78f8cbc2f063e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf108407a7033a and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5188518a6f19d; op2val:0x3ff78f8cbc2f063e; op3val:0x7fef108407a7033a; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1136, x18)

inst_834:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5188518a6f19d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x78f8cbc2f063e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf108407a7033a and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5188518a6f19d; op2val:0x3ff78f8cbc2f063e; op3val:0x7fef108407a7033a; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1152, x18)

inst_835:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5188518a6f19d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x78f8cbc2f063e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf108407a7033a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5188518a6f19d; op2val:0x3ff78f8cbc2f063e; op3val:0x7fef108407a7033a; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1168, x18)

inst_836:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c07029de79b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9b8038f3396c0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4b26d02ee8b7f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c07029de79b8; op2val:0x3fd9b8038f3396c0; op3val:0x7fd4b26d02ee8b7f; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1184, x18)

inst_837:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c07029de79b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9b8038f3396c0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4b26d02ee8b7f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c07029de79b8; op2val:0x3fd9b8038f3396c0; op3val:0x7fd4b26d02ee8b7f; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1200, x18)

inst_838:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c07029de79b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9b8038f3396c0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4b26d02ee8b7f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c07029de79b8; op2val:0x3fd9b8038f3396c0; op3val:0x7fd4b26d02ee8b7f; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1216, x18)

inst_839:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c07029de79b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9b8038f3396c0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4b26d02ee8b7f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c07029de79b8; op2val:0x3fd9b8038f3396c0; op3val:0x7fd4b26d02ee8b7f; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1232, x18)

inst_840:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c07029de79b8 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9b8038f3396c0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4b26d02ee8b7f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c07029de79b8; op2val:0x3fd9b8038f3396c0; op3val:0x7fd4b26d02ee8b7f; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1248, x18)

inst_841:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x82899f3f923cd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9e9b3e1b10de0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x39027b5136447 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd82899f3f923cd; op2val:0x3fe9e9b3e1b10de0; op3val:0x7fd39027b5136447; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1264, x18)

inst_842:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x82899f3f923cd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9e9b3e1b10de0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x39027b5136447 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd82899f3f923cd; op2val:0x3fe9e9b3e1b10de0; op3val:0x7fd39027b5136447; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1280, x18)

inst_843:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x82899f3f923cd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9e9b3e1b10de0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x39027b5136447 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd82899f3f923cd; op2val:0x3fe9e9b3e1b10de0; op3val:0x7fd39027b5136447; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1296, x18)

inst_844:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x82899f3f923cd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9e9b3e1b10de0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x39027b5136447 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd82899f3f923cd; op2val:0x3fe9e9b3e1b10de0; op3val:0x7fd39027b5136447; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1312, x18)

inst_845:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x82899f3f923cd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9e9b3e1b10de0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x39027b5136447 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd82899f3f923cd; op2val:0x3fe9e9b3e1b10de0; op3val:0x7fd39027b5136447; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1328, x18)

inst_846:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea061fbefa949 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x30410dae8f33d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2331e5b8a5787 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdea061fbefa949; op2val:0x3fd30410dae8f33d; op3val:0x7fc2331e5b8a5787; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1344, x18)

inst_847:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea061fbefa949 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x30410dae8f33d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2331e5b8a5787 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdea061fbefa949; op2val:0x3fd30410dae8f33d; op3val:0x7fc2331e5b8a5787; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1360, x18)

inst_848:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea061fbefa949 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x30410dae8f33d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2331e5b8a5787 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdea061fbefa949; op2val:0x3fd30410dae8f33d; op3val:0x7fc2331e5b8a5787; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1376, x18)

inst_849:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea061fbefa949 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x30410dae8f33d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2331e5b8a5787 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdea061fbefa949; op2val:0x3fd30410dae8f33d; op3val:0x7fc2331e5b8a5787; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1392, x18)
addi x16,x16,2040

inst_850:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea061fbefa949 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x30410dae8f33d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2331e5b8a5787 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdea061fbefa949; op2val:0x3fd30410dae8f33d; op3val:0x7fc2331e5b8a5787; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1408, x18)

inst_851:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x125e354d1e3c9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc58f1f9e05a4f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe61a18d4013af and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd125e354d1e3c9; op2val:0x3ffc58f1f9e05a4f; op3val:0x7fde61a18d4013af; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1424, x18)

inst_852:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x125e354d1e3c9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc58f1f9e05a4f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe61a18d4013af and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd125e354d1e3c9; op2val:0x3ffc58f1f9e05a4f; op3val:0x7fde61a18d4013af; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1440, x18)

inst_853:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x125e354d1e3c9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc58f1f9e05a4f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe61a18d4013af and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd125e354d1e3c9; op2val:0x3ffc58f1f9e05a4f; op3val:0x7fde61a18d4013af; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1456, x18)

inst_854:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x125e354d1e3c9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc58f1f9e05a4f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe61a18d4013af and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd125e354d1e3c9; op2val:0x3ffc58f1f9e05a4f; op3val:0x7fde61a18d4013af; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1472, x18)

inst_855:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x125e354d1e3c9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc58f1f9e05a4f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe61a18d4013af and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd125e354d1e3c9; op2val:0x3ffc58f1f9e05a4f; op3val:0x7fde61a18d4013af; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1488, x18)

inst_856:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc232ce1afdd5d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64763af91c8ad and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x396f48df10de5 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec232ce1afdd5d; op2val:0x3fe64763af91c8ad; op3val:0x7fe396f48df10de5; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1504, x18)

inst_857:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc232ce1afdd5d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64763af91c8ad and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x396f48df10de5 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec232ce1afdd5d; op2val:0x3fe64763af91c8ad; op3val:0x7fe396f48df10de5; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1520, x18)

inst_858:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc232ce1afdd5d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64763af91c8ad and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x396f48df10de5 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec232ce1afdd5d; op2val:0x3fe64763af91c8ad; op3val:0x7fe396f48df10de5; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1536, x18)

inst_859:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc232ce1afdd5d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64763af91c8ad and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x396f48df10de5 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec232ce1afdd5d; op2val:0x3fe64763af91c8ad; op3val:0x7fe396f48df10de5; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1552, x18)

inst_860:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc232ce1afdd5d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64763af91c8ad and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x396f48df10de5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec232ce1afdd5d; op2val:0x3fe64763af91c8ad; op3val:0x7fe396f48df10de5; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1568, x18)

inst_861:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x04e0b27da3cc5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c9081d6ba08b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa46ce1f6a5a39 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd04e0b27da3cc5; op2val:0x3ff9c9081d6ba08b; op3val:0x7fda46ce1f6a5a39; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1584, x18)

inst_862:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x04e0b27da3cc5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c9081d6ba08b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa46ce1f6a5a39 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd04e0b27da3cc5; op2val:0x3ff9c9081d6ba08b; op3val:0x7fda46ce1f6a5a39; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1600, x18)

inst_863:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x04e0b27da3cc5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c9081d6ba08b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa46ce1f6a5a39 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd04e0b27da3cc5; op2val:0x3ff9c9081d6ba08b; op3val:0x7fda46ce1f6a5a39; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1616, x18)

inst_864:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x04e0b27da3cc5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c9081d6ba08b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa46ce1f6a5a39 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd04e0b27da3cc5; op2val:0x3ff9c9081d6ba08b; op3val:0x7fda46ce1f6a5a39; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1632, x18)

inst_865:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x04e0b27da3cc5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9c9081d6ba08b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa46ce1f6a5a39 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd04e0b27da3cc5; op2val:0x3ff9c9081d6ba08b; op3val:0x7fda46ce1f6a5a39; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1648, x18)

inst_866:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xce5ebb2a2b181 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x06f43318ba050 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdaee022114709 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdce5ebb2a2b181; op2val:0x40006f43318ba050; op3val:0x7fedaee022114709; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1664, x18)

inst_867:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xce5ebb2a2b181 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x06f43318ba050 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdaee022114709 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdce5ebb2a2b181; op2val:0x40006f43318ba050; op3val:0x7fedaee022114709; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1680, x18)

inst_868:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xce5ebb2a2b181 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x06f43318ba050 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdaee022114709 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdce5ebb2a2b181; op2val:0x40006f43318ba050; op3val:0x7fedaee022114709; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1696, x18)

inst_869:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xce5ebb2a2b181 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x06f43318ba050 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdaee022114709 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdce5ebb2a2b181; op2val:0x40006f43318ba050; op3val:0x7fedaee022114709; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1712, x18)

inst_870:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xce5ebb2a2b181 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x06f43318ba050 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdaee022114709 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdce5ebb2a2b181; op2val:0x40006f43318ba050; op3val:0x7fedaee022114709; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1728, x18)

inst_871:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71b6dc9801ef7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6b7942aa29dad and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0676b54059abb and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71b6dc9801ef7; op2val:0x3fe6b7942aa29dad; op3val:0x7fd0676b54059abb; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1744, x18)

inst_872:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71b6dc9801ef7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6b7942aa29dad and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0676b54059abb and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71b6dc9801ef7; op2val:0x3fe6b7942aa29dad; op3val:0x7fd0676b54059abb; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1760, x18)

inst_873:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71b6dc9801ef7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6b7942aa29dad and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0676b54059abb and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71b6dc9801ef7; op2val:0x3fe6b7942aa29dad; op3val:0x7fd0676b54059abb; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1776, x18)

inst_874:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71b6dc9801ef7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6b7942aa29dad and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0676b54059abb and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71b6dc9801ef7; op2val:0x3fe6b7942aa29dad; op3val:0x7fd0676b54059abb; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1792, x18)

inst_875:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71b6dc9801ef7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6b7942aa29dad and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0676b54059abb and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71b6dc9801ef7; op2val:0x3fe6b7942aa29dad; op3val:0x7fd0676b54059abb; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1808, x18)

inst_876:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf9d6388095197 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x31752ce11af56 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2dc7e0735054e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf9d6388095197; op2val:0x40131752ce11af56; op3val:0x7fe2dc7e0735054e; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1824, x18)

inst_877:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf9d6388095197 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x31752ce11af56 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2dc7e0735054e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf9d6388095197; op2val:0x40131752ce11af56; op3val:0x7fe2dc7e0735054e; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1840, x18)

inst_878:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf9d6388095197 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x31752ce11af56 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2dc7e0735054e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf9d6388095197; op2val:0x40131752ce11af56; op3val:0x7fe2dc7e0735054e; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1856, x18)

inst_879:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf9d6388095197 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x31752ce11af56 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2dc7e0735054e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf9d6388095197; op2val:0x40131752ce11af56; op3val:0x7fe2dc7e0735054e; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1872, x18)

inst_880:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf9d6388095197 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x31752ce11af56 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2dc7e0735054e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf9d6388095197; op2val:0x40131752ce11af56; op3val:0x7fe2dc7e0735054e; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1888, x18)

inst_881:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6084b304bf18f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0440723dc138b and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x665f844db4adf and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc6084b304bf18f; op2val:0x3fc0440723dc138b; op3val:0x7f9665f844db4adf; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1904, x18)

inst_882:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6084b304bf18f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0440723dc138b and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x665f844db4adf and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc6084b304bf18f; op2val:0x3fc0440723dc138b; op3val:0x7f9665f844db4adf; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1920, x18)

inst_883:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6084b304bf18f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0440723dc138b and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x665f844db4adf and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc6084b304bf18f; op2val:0x3fc0440723dc138b; op3val:0x7f9665f844db4adf; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1936, x18)

inst_884:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6084b304bf18f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0440723dc138b and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x665f844db4adf and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc6084b304bf18f; op2val:0x3fc0440723dc138b; op3val:0x7f9665f844db4adf; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1952, x18)

inst_885:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6084b304bf18f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0440723dc138b and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x665f844db4adf and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc6084b304bf18f; op2val:0x3fc0440723dc138b; op3val:0x7f9665f844db4adf; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1968, x18)

inst_886:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf35e30dc7f0d5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9b93d26abc960 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x916c48fdc3c52 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf35e30dc7f0d5; op2val:0x3ff9b93d26abc960; op3val:0x7fe916c48fdc3c52; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1984, x18)

inst_887:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf35e30dc7f0d5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9b93d26abc960 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x916c48fdc3c52 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf35e30dc7f0d5; op2val:0x3ff9b93d26abc960; op3val:0x7fe916c48fdc3c52; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 2000, x18)

inst_888:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf35e30dc7f0d5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9b93d26abc960 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x916c48fdc3c52 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf35e30dc7f0d5; op2val:0x3ff9b93d26abc960; op3val:0x7fe916c48fdc3c52; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_8)

inst_889:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf35e30dc7f0d5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9b93d26abc960 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x916c48fdc3c52 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf35e30dc7f0d5; op2val:0x3ff9b93d26abc960; op3val:0x7fe916c48fdc3c52; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 0, x18)

inst_890:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf35e30dc7f0d5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9b93d26abc960 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x916c48fdc3c52 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf35e30dc7f0d5; op2val:0x3ff9b93d26abc960; op3val:0x7fe916c48fdc3c52; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 16, x18)

inst_891:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e3754ab88106 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6ca05abdbc274 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x10330b39c61ab and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7e3754ab88106; op2val:0x3fd6ca05abdbc274; op3val:0x7fd10330b39c61ab; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 32, x18)

inst_892:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e3754ab88106 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6ca05abdbc274 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x10330b39c61ab and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7e3754ab88106; op2val:0x3fd6ca05abdbc274; op3val:0x7fd10330b39c61ab; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 48, x18)

inst_893:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e3754ab88106 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6ca05abdbc274 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x10330b39c61ab and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7e3754ab88106; op2val:0x3fd6ca05abdbc274; op3val:0x7fd10330b39c61ab; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 64, x18)

inst_894:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e3754ab88106 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6ca05abdbc274 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x10330b39c61ab and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7e3754ab88106; op2val:0x3fd6ca05abdbc274; op3val:0x7fd10330b39c61ab; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 80, x18)

inst_895:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e3754ab88106 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6ca05abdbc274 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x10330b39c61ab and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7e3754ab88106; op2val:0x3fd6ca05abdbc274; op3val:0x7fd10330b39c61ab; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 96, x18)

inst_896:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa2e19c7869ae7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xae37b5cd92b9d and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x5ff90e6260e0f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda2e19c7869ae7; op2val:0x3fcae37b5cd92b9d; op3val:0x7fb5ff90e6260e0f; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 112, x18)

inst_897:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa2e19c7869ae7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xae37b5cd92b9d and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x5ff90e6260e0f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda2e19c7869ae7; op2val:0x3fcae37b5cd92b9d; op3val:0x7fb5ff90e6260e0f; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 128, x18)

inst_898:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa2e19c7869ae7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xae37b5cd92b9d and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x5ff90e6260e0f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda2e19c7869ae7; op2val:0x3fcae37b5cd92b9d; op3val:0x7fb5ff90e6260e0f; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 144, x18)

inst_899:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa2e19c7869ae7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xae37b5cd92b9d and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x5ff90e6260e0f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda2e19c7869ae7; op2val:0x3fcae37b5cd92b9d; op3val:0x7fb5ff90e6260e0f; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 160, x18)

inst_900:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa2e19c7869ae7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xae37b5cd92b9d and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x5ff90e6260e0f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda2e19c7869ae7; op2val:0x3fcae37b5cd92b9d; op3val:0x7fb5ff90e6260e0f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 176, x18)

inst_901:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe23b6c26d7d59 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7f9b8fee36b4a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x694df7f442112 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde23b6c26d7d59; op2val:0x3ff7f9b8fee36b4a; op3val:0x7fe694df7f442112; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 192, x18)

inst_902:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe23b6c26d7d59 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7f9b8fee36b4a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x694df7f442112 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde23b6c26d7d59; op2val:0x3ff7f9b8fee36b4a; op3val:0x7fe694df7f442112; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 208, x18)

inst_903:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe23b6c26d7d59 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7f9b8fee36b4a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x694df7f442112 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde23b6c26d7d59; op2val:0x3ff7f9b8fee36b4a; op3val:0x7fe694df7f442112; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 224, x18)

inst_904:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe23b6c26d7d59 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7f9b8fee36b4a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x694df7f442112 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde23b6c26d7d59; op2val:0x3ff7f9b8fee36b4a; op3val:0x7fe694df7f442112; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 240, x18)

inst_905:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe23b6c26d7d59 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7f9b8fee36b4a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x694df7f442112 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde23b6c26d7d59; op2val:0x3ff7f9b8fee36b4a; op3val:0x7fe694df7f442112; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 256, x18)

inst_906:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x979a4444e4e5b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4c4cc7050e2ce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x088b279b4a7a5 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe979a4444e4e5b; op2val:0x3fe4c4cc7050e2ce; op3val:0x7fe088b279b4a7a5; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 272, x18)

inst_907:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x979a4444e4e5b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4c4cc7050e2ce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x088b279b4a7a5 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe979a4444e4e5b; op2val:0x3fe4c4cc7050e2ce; op3val:0x7fe088b279b4a7a5; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 288, x18)

inst_908:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x979a4444e4e5b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4c4cc7050e2ce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x088b279b4a7a5 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe979a4444e4e5b; op2val:0x3fe4c4cc7050e2ce; op3val:0x7fe088b279b4a7a5; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 304, x18)

inst_909:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x979a4444e4e5b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4c4cc7050e2ce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x088b279b4a7a5 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe979a4444e4e5b; op2val:0x3fe4c4cc7050e2ce; op3val:0x7fe088b279b4a7a5; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 320, x18)

inst_910:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x979a4444e4e5b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4c4cc7050e2ce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x088b279b4a7a5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe979a4444e4e5b; op2val:0x3fe4c4cc7050e2ce; op3val:0x7fe088b279b4a7a5; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 336, x18)

inst_911:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fea99ad8d852394; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 352, x18)

inst_912:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fea99ad8d852394; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 368, x18)

inst_913:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fea99ad8d852394; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 384, x18)

inst_914:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fea99ad8d852394; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 400, x18)

inst_915:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4; op3val:0x7fea99ad8d852394; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 416, x18)

inst_916:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5726b277b5dce; op2val:0x3ff53c36b188da64; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 432, x18)

inst_917:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5726b277b5dce; op2val:0x3ff53c36b188da64; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 448, x18)

inst_918:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5726b277b5dce; op2val:0x3ff53c36b188da64; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 464, x18)

inst_919:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5726b277b5dce; op2val:0x3ff53c36b188da64; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 480, x18)

inst_920:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5726b277b5dce; op2val:0x3ff53c36b188da64; op3val:0x7fec76e305c8d1af; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 496, x18)

inst_921:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f; op3val:0x7fec8d5e8a69a864; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 512, x18)

inst_922:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f; op3val:0x7fec8d5e8a69a864; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 528, x18)

inst_923:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f; op3val:0x7fec8d5e8a69a864; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 544, x18)

inst_924:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f; op3val:0x7fec8d5e8a69a864; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 560, x18)

inst_925:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f; op3val:0x7fec8d5e8a69a864; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 576, x18)

inst_926:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f; op3val:0x7fcf665a2ce400e3; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 592, x18)

inst_927:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f; op3val:0x7fcf665a2ce400e3; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 608, x18)

inst_928:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f; op3val:0x7fcf665a2ce400e3; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 624, x18)

inst_929:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f; op3val:0x7fcf665a2ce400e3; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 640, x18)

inst_930:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f; op3val:0x7fcf665a2ce400e3; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 656, x18)

inst_931:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491f9 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6; op3val:0x7fd974f860c491f9; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 672, x18)

inst_932:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491f9 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6; op3val:0x7fd974f860c491f9; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 688, x18)

inst_933:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491f9 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6; op3val:0x7fd974f860c491f9; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 704, x18)

inst_934:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491f9 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6; op3val:0x7fd974f860c491f9; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 720, x18)
addi x16,x16,2040

inst_935:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491f9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6; op3val:0x7fd974f860c491f9; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 736, x18)

inst_936:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf6db8ea3f5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fab8e934bdcc1bf; op2val:0x401f6db8ea3f5db5; op3val:0x7fdb109b94c05e59; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 752, x18)

inst_937:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf6db8ea3f5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fab8e934bdcc1bf; op2val:0x401f6db8ea3f5db5; op3val:0x7fdb109b94c05e59; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 768, x18)

inst_938:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf6db8ea3f5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fab8e934bdcc1bf; op2val:0x401f6db8ea3f5db5; op3val:0x7fdb109b94c05e59; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 784, x18)

inst_939:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf6db8ea3f5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fab8e934bdcc1bf; op2val:0x401f6db8ea3f5db5; op3val:0x7fdb109b94c05e59; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 800, x18)

inst_940:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf6db8ea3f5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fab8e934bdcc1bf; op2val:0x401f6db8ea3f5db5; op3val:0x7fdb109b94c05e59; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 816, x18)

inst_941:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165f47cec and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025; op3val:0x7fefff0165f47cec; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 832, x18)

inst_942:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165f47cec and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025; op3val:0x7fefff0165f47cec; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 848, x18)

inst_943:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165f47cec and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025; op3val:0x7fefff0165f47cec; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 864, x18)

inst_944:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165f47cec and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025; op3val:0x7fefff0165f47cec; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 880, x18)

inst_945:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165f47cec and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025; op3val:0x7fefff0165f47cec; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 896, x18)

inst_946:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8276674380fc3; op2val:0x3ff07fa3fe059060; op3val:0x7fd8e816c2502d73; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 912, x18)

inst_947:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8276674380fc3; op2val:0x3ff07fa3fe059060; op3val:0x7fd8e816c2502d73; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 928, x18)

inst_948:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8276674380fc3; op2val:0x3ff07fa3fe059060; op3val:0x7fd8e816c2502d73; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 944, x18)

inst_949:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8276674380fc3; op2val:0x3ff07fa3fe059060; op3val:0x7fd8e816c2502d73; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 960, x18)

inst_950:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8276674380fc3; op2val:0x3ff07fa3fe059060; op3val:0x7fd8e816c2502d73; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 976, x18)

inst_951:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52ff3f23 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628; op3val:0x7fd3978b52ff3f23; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 992, x18)

inst_952:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52ff3f23 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628; op3val:0x7fd3978b52ff3f23; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1008, x18)

inst_953:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52ff3f23 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628; op3val:0x7fd3978b52ff3f23; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1024, x18)

inst_954:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52ff3f23 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628; op3val:0x7fd3978b52ff3f23; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1040, x18)

inst_955:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52ff3f23 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628; op3val:0x7fd3978b52ff3f23; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1056, x18)

inst_956:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6af77f2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e; op3val:0x7fecf127a6af77f2; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1072, x18)

inst_957:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6af77f2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e; op3val:0x7fecf127a6af77f2; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1088, x18)

inst_958:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6af77f2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e; op3val:0x7fecf127a6af77f2; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1104, x18)

inst_959:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6af77f2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e; op3val:0x7fecf127a6af77f2; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1120, x18)

inst_960:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6af77f2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e; op3val:0x7fecf127a6af77f2; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1136, x18)

inst_961:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x177d952f13e9f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831; op3val:0x7f9177d952f13e9f; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1152, x18)

inst_962:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x177d952f13e9f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831; op3val:0x7f9177d952f13e9f; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1168, x18)

inst_963:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x177d952f13e9f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831; op3val:0x7f9177d952f13e9f; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1184, x18)

inst_964:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x177d952f13e9f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831; op3val:0x7f9177d952f13e9f; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1200, x18)

inst_965:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x177d952f13e9f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831; op3val:0x7f9177d952f13e9f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1216, x18)

inst_966:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x9a5803051b37f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b; op3val:0x7f89a5803051b37f; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1232, x18)

inst_967:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x9a5803051b37f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b; op3val:0x7f89a5803051b37f; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1248, x18)

inst_968:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x9a5803051b37f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b; op3val:0x7f89a5803051b37f; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1264, x18)

inst_969:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x9a5803051b37f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b; op3val:0x7f89a5803051b37f; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1280, x18)

inst_970:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x9a5803051b37f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b; op3val:0x7f89a5803051b37f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1296, x18)

inst_971:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749af0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcadd854d58145f; op2val:0x40107ed749af0a91; op3val:0x7febb27f4381021f; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1312, x18)

inst_972:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749af0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcadd854d58145f; op2val:0x40107ed749af0a91; op3val:0x7febb27f4381021f; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1328, x18)

inst_973:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749af0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcadd854d58145f; op2val:0x40107ed749af0a91; op3val:0x7febb27f4381021f; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1344, x18)

inst_974:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749af0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcadd854d58145f; op2val:0x40107ed749af0a91; op3val:0x7febb27f4381021f; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1360, x18)

inst_975:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749af0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcadd854d58145f; op2val:0x40107ed749af0a91; op3val:0x7febb27f4381021f; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1376, x18)

inst_976:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xef5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdef5aa91c82b3d; op2val:0x3fd24583e9aa4a5b; op3val:0x7fc1ad71498eb7bb; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1392, x18)

inst_977:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xef5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdef5aa91c82b3d; op2val:0x3fd24583e9aa4a5b; op3val:0x7fc1ad71498eb7bb; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1408, x18)

inst_978:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xef5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdef5aa91c82b3d; op2val:0x3fd24583e9aa4a5b; op3val:0x7fc1ad71498eb7bb; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1424, x18)

inst_979:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xef5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdef5aa91c82b3d; op2val:0x3fd24583e9aa4a5b; op3val:0x7fc1ad71498eb7bb; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1440, x18)

inst_980:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xef5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdef5aa91c82b3d; op2val:0x3fd24583e9aa4a5b; op3val:0x7fc1ad71498eb7bb; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1456, x18)

inst_981:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d; op3val:0x7fc91ddf5613b02f; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1472, x18)

inst_982:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d; op3val:0x7fc91ddf5613b02f; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1488, x18)

inst_983:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d; op3val:0x7fc91ddf5613b02f; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1504, x18)

inst_984:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d; op3val:0x7fc91ddf5613b02f; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1520, x18)

inst_985:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d; op3val:0x7fc91ddf5613b02f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1536, x18)

inst_986:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872f9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872f9d; op3val:0x7fe5352cf9125058; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1552, x18)

inst_987:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872f9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872f9d; op3val:0x7fe5352cf9125058; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1568, x18)

inst_988:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872f9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872f9d; op3val:0x7fe5352cf9125058; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1584, x18)

inst_989:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872f9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872f9d; op3val:0x7fe5352cf9125058; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1600, x18)

inst_990:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872f9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872f9d; op3val:0x7fe5352cf9125058; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1616, x18)

inst_991:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cef4bccbe789 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2; op3val:0x7fe0cef4bccbe789; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1632, x18)

inst_992:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cef4bccbe789 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2; op3val:0x7fe0cef4bccbe789; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1648, x18)

inst_993:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cef4bccbe789 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2; op3val:0x7fe0cef4bccbe789; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1664, x18)

inst_994:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cef4bccbe789 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2; op3val:0x7fe0cef4bccbe789; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1680, x18)

inst_995:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cef4bccbe789 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2; op3val:0x7fe0cef4bccbe789; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1696, x18)

inst_996:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5f3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6f5c1f001498f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2da5f3c7a7466; op2val:0x3fc37c47ae0bad3a; op3val:0x7fb6f5c1f001498f; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1712, x18)

inst_997:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5f3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6f5c1f001498f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2da5f3c7a7466; op2val:0x3fc37c47ae0bad3a; op3val:0x7fb6f5c1f001498f; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1728, x18)

inst_998:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5f3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6f5c1f001498f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2da5f3c7a7466; op2val:0x3fc37c47ae0bad3a; op3val:0x7fb6f5c1f001498f; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1744, x18)

inst_999:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5f3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6f5c1f001498f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2da5f3c7a7466; op2val:0x3fc37c47ae0bad3a; op3val:0x7fb6f5c1f001498f; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1760, x18)

inst_1000:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5f3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6f5c1f001498f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2da5f3c7a7466; op2val:0x3fc37c47ae0bad3a; op3val:0x7fb6f5c1f001498f; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1776, x18)

inst_1001:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdf8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdf8; op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1792, x18)

inst_1002:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdf8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdf8; op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1808, x18)

inst_1003:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdf8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdf8; op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1824, x18)

inst_1004:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdf8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdf8; op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1840, x18)

inst_1005:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdf8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdf8; op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1856, x18)

inst_1006:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91f58bdf and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9d1aa6d115d25f; op2val:0x40296deab3c53820; op3val:0x7fd720ca91f58bdf; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1872, x18)

inst_1007:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91f58bdf and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9d1aa6d115d25f; op2val:0x40296deab3c53820; op3val:0x7fd720ca91f58bdf; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1888, x18)

inst_1008:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91f58bdf and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9d1aa6d115d25f; op2val:0x40296deab3c53820; op3val:0x7fd720ca91f58bdf; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1904, x18)

inst_1009:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91f58bdf and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9d1aa6d115d25f; op2val:0x40296deab3c53820; op3val:0x7fd720ca91f58bdf; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1920, x18)

inst_1010:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91f58bdf and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9d1aa6d115d25f; op2val:0x40296deab3c53820; op3val:0x7fd720ca91f58bdf; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1936, x18)

inst_1011:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ef31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf3e76cbaa48e2 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ef31b27; op3val:0x7fef3e76cbaa48e2; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1952, x18)

inst_1012:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ef31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf3e76cbaa48e2 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ef31b27; op3val:0x7fef3e76cbaa48e2; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1968, x18)

inst_1013:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ef31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf3e76cbaa48e2 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ef31b27; op3val:0x7fef3e76cbaa48e2; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1984, x18)

inst_1014:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ef31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf3e76cbaa48e2 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ef31b27; op3val:0x7fef3e76cbaa48e2; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 2000, x18)

inst_1015:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ef31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf3e76cbaa48e2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ef31b27; op3val:0x7fef3e76cbaa48e2; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_9)

inst_1016:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b; op3val:0x7fe655481791d37f; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b; op3val:0x7fe655481791d37f; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 16, x18)

inst_1018:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b; op3val:0x7fe655481791d37f; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 32, x18)

inst_1019:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b; op3val:0x7fe655481791d37f; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 48, x18)
addi x16,x16,2040

inst_1020:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b; op3val:0x7fe655481791d37f; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 64, x18)

inst_1021:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65f52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ab73cc65f52; op2val:0x3fe21b7b40acb837; op3val:0x7fe07805b64db437; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 80, x18)

inst_1022:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65f52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ab73cc65f52; op2val:0x3fe21b7b40acb837; op3val:0x7fe07805b64db437; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 96, x18)

inst_1023:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65f52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ab73cc65f52; op2val:0x3fe21b7b40acb837; op3val:0x7fe07805b64db437; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 112, x18)

inst_1024:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65f52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ab73cc65f52; op2val:0x3fe21b7b40acb837; op3val:0x7fe07805b64db437; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 128, x18)

inst_1025:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65f52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ab73cc65f52; op2val:0x3fe21b7b40acb837; op3val:0x7fe07805b64db437; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 144, x18)

inst_1026:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751; op3val:0x7fedd8fbb754b55c; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 160, x18)

inst_1027:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751; op3val:0x7fedd8fbb754b55c; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 176, x18)

inst_1028:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751; op3val:0x7fedd8fbb754b55c; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 192, x18)

inst_1029:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751; op3val:0x7fedd8fbb754b55c; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 208, x18)

inst_1030:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751; op3val:0x7fedd8fbb754b55c; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 224, x18)

inst_1031:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658; op3val:0x7fe4f911cba6947d; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 240, x18)

inst_1032:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658; op3val:0x7fe4f911cba6947d; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 256, x18)

inst_1033:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658; op3val:0x7fe4f911cba6947d; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 272, x18)

inst_1034:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658; op3val:0x7fe4f911cba6947d; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 288, x18)

inst_1035:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658; op3val:0x7fe4f911cba6947d; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 304, x18)

inst_1036:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f; op3val:0x7fe2d590539c6e1b; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 320, x18)

inst_1037:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f; op3val:0x7fe2d590539c6e1b; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 336, x18)

inst_1038:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f; op3val:0x7fe2d590539c6e1b; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 352, x18)

inst_1039:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f; op3val:0x7fe2d590539c6e1b; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 368, x18)

inst_1040:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f; op3val:0x7fe2d590539c6e1b; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 384, x18)

inst_1041:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf; op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 400, x18)

inst_1042:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf; op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 416, x18)

inst_1043:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf; op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 432, x18)

inst_1044:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf; op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 448, x18)

inst_1045:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf; op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 464, x18)

inst_1046:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acf34aef92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acf34aef92; op3val:0x7fc93c9b1b3642af; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 480, x18)

inst_1047:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acf34aef92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acf34aef92; op3val:0x7fc93c9b1b3642af; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 496, x18)

inst_1048:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acf34aef92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acf34aef92; op3val:0x7fc93c9b1b3642af; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 512, x18)

inst_1049:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acf34aef92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acf34aef92; op3val:0x7fc93c9b1b3642af; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 528, x18)

inst_1050:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acf34aef92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acf34aef92; op3val:0x7fc93c9b1b3642af; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 544, x18)

inst_1051:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007f92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c0c529007f92; op2val:0x3fe1b3e375a83590; op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 560, x18)

inst_1052:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007f92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c0c529007f92; op2val:0x3fe1b3e375a83590; op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 576, x18)

inst_1053:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007f92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c0c529007f92; op2val:0x3fe1b3e375a83590; op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 592, x18)

inst_1054:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007f92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c0c529007f92; op2val:0x3fe1b3e375a83590; op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 608, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007f92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c0c529007f92; op2val:0x3fe1b3e375a83590; op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 624, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12f7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212f7d90af6886; op3val:0x7fe99bea81a3c895; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 640, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12f7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212f7d90af6886; op3val:0x7fe99bea81a3c895; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 656, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12f7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212f7d90af6886; op3val:0x7fe99bea81a3c895; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 672, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12f7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212f7d90af6886; op3val:0x7fe99bea81a3c895; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 688, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12f7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212f7d90af6886; op3val:0x7fe99bea81a3c895; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 704, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33; op3val:0x7fd57a2cffec0101; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 720, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33; op3val:0x7fd57a2cffec0101; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 736, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33; op3val:0x7fd57a2cffec0101; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 752, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33; op3val:0x7fd57a2cffec0101; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 768, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33; op3val:0x7fd57a2cffec0101; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 784, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f12be85a3941 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb; op3val:0x7fe5f12be85a3941; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 800, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f12be85a3941 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb; op3val:0x7fe5f12be85a3941; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 816, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f12be85a3941 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb; op3val:0x7fe5f12be85a3941; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 832, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f12be85a3941 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb; op3val:0x7fe5f12be85a3941; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 848, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f12be85a3941 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb; op3val:0x7fe5f12be85a3941; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 864, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892; op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 880, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892; op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 896, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892; op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 912, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892; op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 928, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892; op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 944, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4ff0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd; op3val:0x7fe1b73726cc4ff0; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 960, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4ff0 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd; op3val:0x7fe1b73726cc4ff0; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 976, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4ff0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd; op3val:0x7fe1b73726cc4ff0; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 992, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4ff0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd; op3val:0x7fe1b73726cc4ff0; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1008, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4ff0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd; op3val:0x7fe1b73726cc4ff0; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1024, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9; op3val:0x7fe5d35e2c6078a3; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1040, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9; op3val:0x7fe5d35e2c6078a3; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1056, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9; op3val:0x7fe5d35e2c6078a3; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1072, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9; op3val:0x7fe5d35e2c6078a3; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1088, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9; op3val:0x7fe5d35e2c6078a3; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1104, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7f14df48da55 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218; op3val:0x7fda7f14df48da55; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1120, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7f14df48da55 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218; op3val:0x7fda7f14df48da55; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1136, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7f14df48da55 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218; op3val:0x7fda7f14df48da55; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1152, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7f14df48da55 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218; op3val:0x7fda7f14df48da55; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1168, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7f14df48da55 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218; op3val:0x7fda7f14df48da55; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1184, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237; op3val:0x7fe9a94aa8cadc89; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1200, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237; op3val:0x7fe9a94aa8cadc89; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1216, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237; op3val:0x7fe9a94aa8cadc89; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1232, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237; op3val:0x7fe9a94aa8cadc89; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1248, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237; op3val:0x7fe9a94aa8cadc89; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1264, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7; op3val:0x7fe8a4fc4c166a46; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1280, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7; op3val:0x7fe8a4fc4c166a46; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1296, x18)

inst_1098:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7; op3val:0x7fe8a4fc4c166a46; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1312, x18)

inst_1099:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7; op3val:0x7fe8a4fc4c166a46; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1328, x18)

inst_1100:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7; op3val:0x7fe8a4fc4c166a46; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1344, x18)

inst_1101:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644f56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde18a54fb9615f; op2val:0x3ff9d9644f56bb65; op3val:0x7fe84fb69ef078ea; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1360, x18)

inst_1102:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644f56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde18a54fb9615f; op2val:0x3ff9d9644f56bb65; op3val:0x7fe84fb69ef078ea; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1376, x18)

inst_1103:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644f56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde18a54fb9615f; op2val:0x3ff9d9644f56bb65; op3val:0x7fe84fb69ef078ea; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1392, x18)

inst_1104:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644f56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde18a54fb9615f; op2val:0x3ff9d9644f56bb65; op3val:0x7fe84fb69ef078ea; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1408, x18)
addi x16,x16,2040

inst_1105:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644f56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde18a54fb9615f; op2val:0x3ff9d9644f56bb65; op3val:0x7fe84fb69ef078ea; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1424, x18)

inst_1106:
// fs1 == 0 and fe1 == 0x7f3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588f5e and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d9a84a89337ff; op2val:0x4096ed5a71e5433a; op3val:0x7fe535cf46588f5e; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1440, x18)

inst_1107:
// fs1 == 0 and fe1 == 0x7f3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588f5e and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d9a84a89337ff; op2val:0x4096ed5a71e5433a; op3val:0x7fe535cf46588f5e; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1456, x18)

inst_1108:
// fs1 == 0 and fe1 == 0x7f3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588f5e and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d9a84a89337ff; op2val:0x4096ed5a71e5433a; op3val:0x7fe535cf46588f5e; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1472, x18)

inst_1109:
// fs1 == 0 and fe1 == 0x7f3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588f5e and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d9a84a89337ff; op2val:0x4096ed5a71e5433a; op3val:0x7fe535cf46588f5e; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1488, x18)

inst_1110:
// fs1 == 0 and fe1 == 0x7f3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588f5e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d9a84a89337ff; op2val:0x4096ed5a71e5433a; op3val:0x7fe535cf46588f5e; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1504, x18)

inst_1111:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf0aceae190521; op2val:0x3fe142a90077145a; op3val:0x7fd0be68084b69b7; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1520, x18)

inst_1112:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf0aceae190521; op2val:0x3fe142a90077145a; op3val:0x7fd0be68084b69b7; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1536, x18)

inst_1113:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf0aceae190521; op2val:0x3fe142a90077145a; op3val:0x7fd0be68084b69b7; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1552, x18)

inst_1114:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf0aceae190521; op2val:0x3fe142a90077145a; op3val:0x7fd0be68084b69b7; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1568, x18)

inst_1115:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf0aceae190521; op2val:0x3fe142a90077145a; op3val:0x7fd0be68084b69b7; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1584, x18)

inst_1116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc; op3val:0x7fea4d72905280d4; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1600, x18)

inst_1117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc; op3val:0x7fea4d72905280d4; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1616, x18)

inst_1118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc; op3val:0x7fea4d72905280d4; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1632, x18)

inst_1119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc; op3val:0x7fea4d72905280d4; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1648, x18)

inst_1120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fcc78313f886 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x04ce8c2de8bd5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x76b46a008334f and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6fcc78313f886; op2val:0x3fb04ce8c2de8bd5; op3val:0x7fa76b46a008334f; valaddr_reg:x16; val_offset:360; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 360, x17, x15, 1664, x18)

inst_1121:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fcc78313f886 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x04ce8c2de8bd5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x76b46a008334f and rm_val == 3  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6fcc78313f886; op2val:0x3fb04ce8c2de8bd5; op3val:0x7fa76b46a008334f; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1680, x18)

inst_1122:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fcc78313f886 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x04ce8c2de8bd5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x76b46a008334f and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6fcc78313f886; op2val:0x3fb04ce8c2de8bd5; op3val:0x7fa76b46a008334f; valaddr_reg:x16; val_offset:408; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 408, x17, x15, 1696, x18)

inst_1123:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fcc78313f886 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x04ce8c2de8bd5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x76b46a008334f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6fcc78313f886; op2val:0x3fb04ce8c2de8bd5; op3val:0x7fa76b46a008334f; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1712, x18)

inst_1124:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcfd26bc72299b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x15481bb0f0293 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf66153f88d9a0 and rm_val == 4  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcfd26bc72299b; op2val:0x40015481bb0f0293; op3val:0x7fef66153f88d9a0; valaddr_reg:x16; val_offset:456; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 456, x17, x15, 1728, x18)

inst_1125:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcfd26bc72299b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x15481bb0f0293 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf66153f88d9a0 and rm_val == 2  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcfd26bc72299b; op2val:0x40015481bb0f0293; op3val:0x7fef66153f88d9a0; valaddr_reg:x16; val_offset:480; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 480, x17, x15, 1744, x18)

inst_1126:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcfd26bc72299b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x15481bb0f0293 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf66153f88d9a0 and rm_val == 1  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcfd26bc72299b; op2val:0x40015481bb0f0293; op3val:0x7fef66153f88d9a0; valaddr_reg:x16; val_offset:504; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 504, x17, x15, 1760, x18)

inst_1127:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcfd26bc72299b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x15481bb0f0293 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf66153f88d9a0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcfd26bc72299b; op2val:0x40015481bb0f0293; op3val:0x7fef66153f88d9a0; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1776, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fe9630abe4b977e
.dword 0x3ff093bbbbab15dc
.dword 0x7fea4d72905280d4
.dword 0x7fe6fcc78313f886
.dword 0x7fe6fcc78313f886
.dword 0x7fe6fcc78313f886
.dword 0x7fe6fcc78313f886
.dword 0x3fb04ce8c2de8bd5
.dword 0x7fe6fcc78313f886
.dword 0x7fe6fcc78313f886
.dword 0x3fb04ce8c2de8bd5
.dword 0x7fe6fcc78313f886
.dword 0x7fe6fcc78313f886
.dword 0x3fb04ce8c2de8bd5
.dword 0x7fa76b46a008334f
.dword 0x7fe6fcc78313f886
.dword 0x3fb04ce8c2de8bd5
.dword 0x3fb04ce8c2de8bd5
.dword 0x7fdcfd26bc72299b
.dword 0x7fdcfd26bc72299b
.dword 0x7fef66153f88d9a0
.dword 0x7fdcfd26bc72299b
.dword 0x40015481bb0f0293
.dword 0x7fef66153f88d9a0
.dword 0x7fdcfd26bc72299b
.dword 0x7fdcfd26bc72299b
.dword 0x7fef66153f88d9a0
.dword 0x7fdcfd26bc72299b
.dword 0x7fdcfd26bc72299b
.dword 0x7fdcfd26bc72299b
.dword 0x7fdcfd26bc72299b
.dword 0x40015481bb0f0293
.dword 0x40015481bb0f0293
.dword 0x7fe16f008ac14225
.dword 0x3ff9f6b9217e094f
.dword 0x7fec4a453917dc74
.dword 0x7fe16f008ac14225
.dword 0x3ff9f6b9217e094f
.dword 0x7fec4a453917dc74
.dword 0x7fe16f008ac14225
.dword 0x3ff9f6b9217e094f
.dword 0x7fec4a453917dc74
.dword 0x7fe16f008ac14225
.dword 0x3ff9f6b9217e094f
.dword 0x7fec4a453917dc74
.dword 0x7fe16f008ac14225
.dword 0x3ff9f6b9217e094f
.dword 0x7fec4a453917dc74
.dword 0x7fe156c11719ec1a
.dword 0x3fe46db1d0dac269
.dword 0x7fd62351125ab629
.dword 0x7fe156c11719ec1a
.dword 0x3fe46db1d0dac269
.dword 0x7fd62351125ab629
.dword 0x7fe156c11719ec1a
.dword 0x3fe46db1d0dac269
.dword 0x7fd62351125ab629
.dword 0x7fe156c11719ec1a
.dword 0x3fe46db1d0dac269
.dword 0x7fd62351125ab629
.dword 0x7fe156c11719ec1a
.dword 0x3fe46db1d0dac269
.dword 0x7fd62351125ab629
.dword 0x7fdc06cd5aa5a5af
.dword 0x3fe2a7bb5fe34980
.dword 0x7fd056bb1e6989a9
.dword 0x7fdc06cd5aa5a5af
.dword 0x3fe2a7bb5fe34980
.dword 0x7fd056bb1e6989a9
.dword 0x7fdc06cd5aa5a5af
.dword 0x3fe2a7bb5fe34980
.dword 0x7fd056bb1e6989a9
.dword 0x7fdc06cd5aa5a5af
.dword 0x3fe2a7bb5fe34980
.dword 0x7fd056bb1e6989a9
.dword 0x7fdc06cd5aa5a5af
.dword 0x3fe2a7bb5fe34980
.dword 0x7fd056bb1e6989a9
.dword 0x7fefa68e3be688d9
.dword 0x3febe12f565ed7fe
.dword 0x7feb9341ecae0589
.dword 0x7fefa68e3be688d9
.dword 0x3febe12f565ed7fe
.dword 0x7feb9341ecae0589
.dword 0x7fefa68e3be688d9
.dword 0x3febe12f565ed7fe
.dword 0x7feb9341ecae0589
.dword 0x7fefa68e3be688d9
.dword 0x3febe12f565ed7fe
.dword 0x7feb9341ecae0589
.dword 0x7fefa68e3be688d9
.dword 0x3febe12f565ed7fe
.dword 0x7feb9341ecae0589
.dword 0x7fe68f63eccb52d3
.dword 0x3ff207f98e3bcff2
.dword 0x7fe96c8f062c5808
.dword 0x7fe68f63eccb52d3
.dword 0x3ff207f98e3bcff2
.dword 0x7fe96c8f062c5808
.dword 0x7fe68f63eccb52d3
.dword 0x3ff207f98e3bcff2
.dword 0x7fe96c8f062c5808
.dword 0x7fe68f63eccb52d3
.dword 0x3ff207f98e3bcff2
.dword 0x7fe96c8f062c5808
.dword 0x7fe68f63eccb52d3
.dword 0x3ff207f98e3bcff2
.dword 0x7fe96c8f062c5808
.dword 0x7fb204462f4d98ff
.dword 0x3ffb862baf8a644f
.dword 0x7fbefe4b6cc650a7
.dword 0x7fb204462f4d98ff
.dword 0x3ffb862baf8a644f
.dword 0x7fbefe4b6cc650a7
.dword 0x7fb204462f4d98ff
.dword 0x3ffb862baf8a644f
.dword 0x7fbefe4b6cc650a7
.dword 0x7fb204462f4d98ff
.dword 0x3ffb862baf8a644f
.dword 0x7fbefe4b6cc650a7
.dword 0x7fb204462f4d98ff
.dword 0x3ffb862baf8a644f
.dword 0x7fbefe4b6cc650a7
.dword 0x7fe5b5915a348e93
.dword 0x3fe6a569ee80546d
.dword 0x7fdeba18021f5337
.dword 0x7fe5b5915a348e93
.dword 0x3fe6a569ee80546d
.dword 0x7fdeba18021f5337
.dword 0x7fe5b5915a348e93
.dword 0x3fe6a569ee80546d
.dword 0x7fdeba18021f5337
.dword 0x7fe5b5915a348e93
.dword 0x3fe6a569ee80546d
.dword 0x7fdeba18021f5337
.dword 0x7fe5b5915a348e93
.dword 0x3fe6a569ee80546d
.dword 0x7fdeba18021f5337
.dword 0x7fefcfca53c51fe2
.dword 0x3fef353c5b2ee007
.dword 0x7fef063828829338
.dword 0x7fefcfca53c51fe2
.dword 0x3fef353c5b2ee007
.dword 0x7fef063828829338
.dword 0x7fefcfca53c51fe2
.dword 0x3fef353c5b2ee007
.dword 0x7fef063828829338
.dword 0x7fefcfca53c51fe2
.dword 0x3fef353c5b2ee007
.dword 0x7fef063828829338
.dword 0x7fefcfca53c51fe2
.dword 0x3fef353c5b2ee007
.dword 0x7fef063828829338
.dword 0x7fdc876832fcf335
.dword 0x3f9c9cdda6e87c28
.dword 0x7f898254e48b36ff
.dword 0x7fdc876832fcf335
.dword 0x3f9c9cdda6e87c28
.dword 0x7f898254e48b36ff
.dword 0x7fdc876832fcf335
.dword 0x3f9c9cdda6e87c28
.dword 0x7f898254e48b36ff
.dword 0x7fdc876832fcf335
.dword 0x3f9c9cdda6e87c28
.dword 0x7f898254e48b36ff
.dword 0x7fdc876832fcf335
.dword 0x3f9c9cdda6e87c28
.dword 0x7f898254e48b36ff
.dword 0x7fead148409a7a4d
.dword 0x3fbfbb22c4238730
.dword 0x7fba97921f8b9297
.dword 0x7fead148409a7a4d
.dword 0x3fbfbb22c4238730
.dword 0x7fba97921f8b9297
.dword 0x7fead148409a7a4d
.dword 0x3fbfbb22c4238730
.dword 0x7fba97921f8b9297
.dword 0x7fead148409a7a4d
.dword 0x3fbfbb22c4238730
.dword 0x7fba97921f8b9297
.dword 0x7fead148409a7a4d
.dword 0x3fbfbb22c4238730
.dword 0x7fba97921f8b9297
.dword 0x7f93cc38f90f797f
.dword 0x403b8073605348df
.dword 0x7fe103c8578e3d2d
.dword 0x7f93cc38f90f797f
.dword 0x403b8073605348df
.dword 0x7fe103c8578e3d2d
.dword 0x7f93cc38f90f797f
.dword 0x403b8073605348df
.dword 0x7fe103c8578e3d2d
.dword 0x7f93cc38f90f797f
.dword 0x403b8073605348df
.dword 0x7fe103c8578e3d2d
.dword 0x7f93cc38f90f797f
.dword 0x403b8073605348df
.dword 0x7fe103c8578e3d2d
.dword 0x7fde04544df380a5
.dword 0x3feb97c5ea9a7a1f
.dword 0x7fd9e205364cd953
.dword 0x7fde04544df380a5
.dword 0x3feb97c5ea9a7a1f
.dword 0x7fd9e205364cd953
.dword 0x7fde04544df380a5
.dword 0x3feb97c5ea9a7a1f
.dword 0x7fd9e205364cd953
.dword 0x7fde04544df380a5
.dword 0x3feb97c5ea9a7a1f
.dword 0x7fd9e205364cd953
.dword 0x7fde04544df380a5
.dword 0x3feb97c5ea9a7a1f
.dword 0x7fd9e205364cd953
.dword 0x7fc2daf305ed151f
.dword 0x40121eb6f6396855
.dword 0x7fe55a838b0c3724
.dword 0x7fc2daf305ed151f
.dword 0x40121eb6f6396855
.dword 0x7fe55a838b0c3724
.dword 0x7fc2daf305ed151f
.dword 0x40121eb6f6396855
.dword 0x7fe55a838b0c3724
.dword 0x7fc2daf305ed151f
.dword 0x40121eb6f6396855
.dword 0x7fe55a838b0c3724
.dword 0x7fc2daf305ed151f
.dword 0x40121eb6f6396855
.dword 0x7fe55a838b0c3724
.dword 0x7fd7e1bc5122bc39
.dword 0x4001da94c8484b62
.dword 0x7feaa619cf05ea0d
.dword 0x7fd7e1bc5122bc39
.dword 0x4001da94c8484b62
.dword 0x7feaa619cf05ea0d
.dword 0x7fd7e1bc5122bc39
.dword 0x4001da94c8484b62
.dword 0x7feaa619cf05ea0d
.dword 0x7fd7e1bc5122bc39
.dword 0x4001da94c8484b62
.dword 0x7feaa619cf05ea0d
.dword 0x7fd7e1bc5122bc39
.dword 0x4001da94c8484b62
.dword 0x7feaa619cf05ea0d
.dword 0x7fba181ad799b50f
.dword 0x40206578856de17d
.dword 0x7feabd978f6f936d
.dword 0x7fba181ad799b50f
.dword 0x40206578856de17d
.dword 0x7feabd978f6f936d
.dword 0x7fba181ad799b50f
.dword 0x40206578856de17d
.dword 0x7feabd978f6f936d
.dword 0x7fba181ad799b50f
.dword 0x40206578856de17d
.dword 0x7feabd978f6f936d
.dword 0x7fba181ad799b50f
.dword 0x40206578856de17d
.dword 0x7feabd978f6f936d
.dword 0x7fd8949f5778119b
.dword 0x3ff9fd0507ccb587
.dword 0x7fe3f6776558027a
.dword 0x7fd8949f5778119b
.dword 0x3ff9fd0507ccb587
.dword 0x7fe3f6776558027a
.dword 0x7fd8949f5778119b
.dword 0x3ff9fd0507ccb587
.dword 0x7fe3f6776558027a
.dword 0x7fd8949f5778119b
.dword 0x3ff9fd0507ccb587
.dword 0x7fe3f6776558027a
.dword 0x7fd8949f5778119b
.dword 0x3ff9fd0507ccb587
.dword 0x7fe3f6776558027a
.dword 0x7fd193ffdf23ced1
.dword 0x40050276b6180376
.dword 0x7fe714f4c067d1ec
.dword 0x7fd193ffdf23ced1
.dword 0x40050276b6180376
.dword 0x7fe714f4c067d1ec
.dword 0x7fd193ffdf23ced1
.dword 0x40050276b6180376
.dword 0x7fe714f4c067d1ec
.dword 0x7fd193ffdf23ced1
.dword 0x40050276b6180376
.dword 0x7fe714f4c067d1ec
.dword 0x7fd193ffdf23ced1
.dword 0x40050276b6180376
.dword 0x7fe714f4c067d1ec
.dword 0x7fdd2aec528b7649
.dword 0x3fc1363fa816771e
.dword 0x7faf608000b8eeef
.dword 0x7fdd2aec528b7649
.dword 0x3fc1363fa816771e
.dword 0x7faf608000b8eeef
.dword 0x7fdd2aec528b7649
.dword 0x3fc1363fa816771e
.dword 0x7faf608000b8eeef
.dword 0x7fdd2aec528b7649
.dword 0x3fc1363fa816771e
.dword 0x7faf608000b8eeef
.dword 0x7fdd2aec528b7649
.dword 0x3fc1363fa816771e
.dword 0x7faf608000b8eeef
.dword 0x7f9e97c53d658d5f
.dword 0x4040a121df841057
.dword 0x7fefcbdd3285fa40
.dword 0x7f9e97c53d658d5f
.dword 0x4040a121df841057
.dword 0x7fefcbdd3285fa40
.dword 0x7f9e97c53d658d5f
.dword 0x4040a121df841057
.dword 0x7fefcbdd3285fa40
.dword 0x7f9e97c53d658d5f
.dword 0x4040a121df841057
.dword 0x7fefcbdd3285fa40
.dword 0x7f9e97c53d658d5f
.dword 0x4040a121df841057
.dword 0x7fefcbdd3285fa40
.dword 0x7f591fb87d28a9ff
.dword 0x4081fb84d9a794fa
.dword 0x7fec3ca63e9e063f
.dword 0x7f591fb87d28a9ff
.dword 0x4081fb84d9a794fa
.dword 0x7fec3ca63e9e063f
.dword 0x7f591fb87d28a9ff
.dword 0x4081fb84d9a794fa
.dword 0x7fec3ca63e9e063f
.dword 0x7f591fb87d28a9ff
.dword 0x4081fb84d9a794fa
.dword 0x7fec3ca63e9e063f
.dword 0x7f591fb87d28a9ff
.dword 0x4081fb84d9a794fa
.dword 0x7fec3ca63e9e063f
.dword 0x7fed2c6e3c45eb41
.dword 0x3fd33b6e78f0a0df
.dword 0x7fd188901605910f
.dword 0x7fed2c6e3c45eb41
.dword 0x3fd33b6e78f0a0df
.dword 0x7fd188901605910f
.dword 0x7fed2c6e3c45eb41
.dword 0x3fd33b6e78f0a0df
.dword 0x7fd188901605910f
.dword 0x7fed2c6e3c45eb41
.dword 0x3fd33b6e78f0a0df
.dword 0x7fd188901605910f
.dword 0x7fed2c6e3c45eb41
.dword 0x3fd33b6e78f0a0df
.dword 0x7fd188901605910f
.dword 0x7fef133c25543bea
.dword 0x3fe4a0b71feadc19
.dword 0x7fe40817990df4c0
.dword 0x7fef133c25543bea
.dword 0x3fe4a0b71feadc19
.dword 0x7fe40817990df4c0
.dword 0x7fef133c25543bea
.dword 0x3fe4a0b71feadc19
.dword 0x7fe40817990df4c0
.dword 0x7fef133c25543bea
.dword 0x3fe4a0b71feadc19
.dword 0x7fe40817990df4c0
.dword 0x7fef133c25543bea
.dword 0x3fe4a0b71feadc19
.dword 0x7fe40817990df4c0
.dword 0x7fe24d08f17c0238
.dword 0x3ff488d416b95f58
.dword 0x7fe77ccc90941495
.dword 0x7fe24d08f17c0238
.dword 0x3ff488d416b95f58
.dword 0x7fe77ccc90941495
.dword 0x7fe24d08f17c0238
.dword 0x3ff488d416b95f58
.dword 0x7fe77ccc90941495
.dword 0x7fe24d08f17c0238
.dword 0x3ff488d416b95f58
.dword 0x7fe77ccc90941495
.dword 0x7fe24d08f17c0238
.dword 0x3ff488d416b95f58
.dword 0x7fe77ccc90941495
.dword 0x7fdd27e1bfc4fb5f
.dword 0x3ffc3adeb30d049a
.dword 0x7fe9b888b8c9068f
.dword 0x7fdd27e1bfc4fb5f
.dword 0x3ffc3adeb30d049a
.dword 0x7fe9b888b8c9068f
.dword 0x7fdd27e1bfc4fb5f
.dword 0x3ffc3adeb30d049a
.dword 0x7fe9b888b8c9068f
.dword 0x7fdd27e1bfc4fb5f
.dword 0x3ffc3adeb30d049a
.dword 0x7fe9b888b8c9068f
.dword 0x7fdd27e1bfc4fb5f
.dword 0x3ffc3adeb30d049a
.dword 0x7fe9b888b8c9068f
.dword 0x7fbc4a83973f181f
.dword 0x40163a715946bbbe
.dword 0x7fe3a6e5bc8bf800
.dword 0x7fbc4a83973f181f
.dword 0x40163a715946bbbe
.dword 0x7fe3a6e5bc8bf800
.dword 0x7fbc4a83973f181f
.dword 0x40163a715946bbbe
.dword 0x7fe3a6e5bc8bf800
.dword 0x7fbc4a83973f181f
.dword 0x40163a715946bbbe
.dword 0x7fe3a6e5bc8bf800
.dword 0x7fbc4a83973f181f
.dword 0x40163a715946bbbe
.dword 0x7fe3a6e5bc8bf800
.dword 0x7fe7a5876fb5e6ee
.dword 0x3fe3d2c3c110ee11
.dword 0x7fdd4c0eb4fa8e3d
.dword 0x7fe7a5876fb5e6ee
.dword 0x3fe3d2c3c110ee11
.dword 0x7fdd4c0eb4fa8e3d
.dword 0x7fe7a5876fb5e6ee
.dword 0x3fe3d2c3c110ee11
.dword 0x7fdd4c0eb4fa8e3d
.dword 0x7fe7a5876fb5e6ee
.dword 0x3fe3d2c3c110ee11
.dword 0x7fdd4c0eb4fa8e3d
.dword 0x7fe7a5876fb5e6ee
.dword 0x3fe3d2c3c110ee11
.dword 0x7fdd4c0eb4fa8e3d
.dword 0x7fe41fcd2880834a
.dword 0x3ff5de106ad85473
.dword 0x7feb810b29ea92a5
.dword 0x7fe41fcd2880834a
.dword 0x3ff5de106ad85473
.dword 0x7feb810b29ea92a5
.dword 0x7fe41fcd2880834a
.dword 0x3ff5de106ad85473
.dword 0x7feb810b29ea92a5
.dword 0x7fe41fcd2880834a
.dword 0x3ff5de106ad85473
.dword 0x7feb810b29ea92a5
.dword 0x7fe41fcd2880834a
.dword 0x3ff5de106ad85473
.dword 0x7feb810b29ea92a5
.dword 0x7fc66ac2ff7114a7
.dword 0x3ff0d0231972be25
.dword 0x7fc78e60139bf53f
.dword 0x7fc66ac2ff7114a7
.dword 0x3ff0d0231972be25
.dword 0x7fc78e60139bf53f
.dword 0x7fc66ac2ff7114a7
.dword 0x3ff0d0231972be25
.dword 0x7fc78e60139bf53f
.dword 0x7fc66ac2ff7114a7
.dword 0x3ff0d0231972be25
.dword 0x7fc78e60139bf53f
.dword 0x7fc66ac2ff7114a7
.dword 0x3ff0d0231972be25
.dword 0x7fc78e60139bf53f
.dword 0x7fe74b7ae7463e9a
.dword 0x3ff426308fed6fc4
.dword 0x7fed55f398fa1621
.dword 0x7fe74b7ae7463e9a
.dword 0x3ff426308fed6fc4
.dword 0x7fed55f398fa1621
.dword 0x7fe74b7ae7463e9a
.dword 0x3ff426308fed6fc4
.dword 0x7fed55f398fa1621
.dword 0x7fe74b7ae7463e9a
.dword 0x3ff426308fed6fc4
.dword 0x7fed55f398fa1621
.dword 0x7fe74b7ae7463e9a
.dword 0x3ff426308fed6fc4
.dword 0x7fed55f398fa1621
.dword 0x7fd6776f6ab4f0a7
.dword 0x3fdcd9eda2830b60
.dword 0x7fc441823f93c0d7
.dword 0x7fd6776f6ab4f0a7
.dword 0x3fdcd9eda2830b60
.dword 0x7fc441823f93c0d7
.dword 0x7fd6776f6ab4f0a7
.dword 0x3fdcd9eda2830b60
.dword 0x7fc441823f93c0d7
.dword 0x7fd6776f6ab4f0a7
.dword 0x3fdcd9eda2830b60
.dword 0x7fc441823f93c0d7
.dword 0x7fd6776f6ab4f0a7
.dword 0x3fdcd9eda2830b60
.dword 0x7fc441823f93c0d7
.dword 0x7fe546d58b0516c7
.dword 0x3fc80a5f1550808a
.dword 0x7fbff80b06ea7427
.dword 0x7fe546d58b0516c7
.dword 0x3fc80a5f1550808a
.dword 0x7fbff80b06ea7427
.dword 0x7fe546d58b0516c7
.dword 0x3fc80a5f1550808a
.dword 0x7fbff80b06ea7427
.dword 0x7fe546d58b0516c7
.dword 0x3fc80a5f1550808a
.dword 0x7fbff80b06ea7427
.dword 0x7fe546d58b0516c7
.dword 0x3fc80a5f1550808a
.dword 0x7fbff80b06ea7427
.dword 0x7fb62ff402c49baf
.dword 0x40269d6ce2107cb9
.dword 0x7fef5c3d0b54c586
.dword 0x7fb62ff402c49baf
.dword 0x40269d6ce2107cb9
.dword 0x7fef5c3d0b54c586
.dword 0x7fb62ff402c49baf
.dword 0x40269d6ce2107cb9
.dword 0x7fef5c3d0b54c586
.dword 0x7fb62ff402c49baf
.dword 0x40269d6ce2107cb9
.dword 0x7fef5c3d0b54c586
.dword 0x7fb62ff402c49baf
.dword 0x40269d6ce2107cb9
.dword 0x7fef5c3d0b54c586
.dword 0x7fe60093f30fd5e0
.dword 0x3ff220d4421487d9
.dword 0x7fe8edcb7bdee2ac
.dword 0x7fe60093f30fd5e0
.dword 0x3ff220d4421487d9
.dword 0x7fe8edcb7bdee2ac
.dword 0x7fe60093f30fd5e0
.dword 0x3ff220d4421487d9
.dword 0x7fe8edcb7bdee2ac
.dword 0x7fe60093f30fd5e0
.dword 0x3ff220d4421487d9
.dword 0x7fe8edcb7bdee2ac
.dword 0x7fe60093f30fd5e0
.dword 0x3ff220d4421487d9
.dword 0x7fe8edcb7bdee2ac
.dword 0x7fe02a158a06a947
.dword 0x3fccc8ef253ba14c
.dword 0x7fbd14a559084937
.dword 0x7fe02a158a06a947
.dword 0x3fccc8ef253ba14c
.dword 0x7fbd14a559084937
.dword 0x7fe02a158a06a947
.dword 0x3fccc8ef253ba14c
.dword 0x7fbd14a559084937
.dword 0x7fe02a158a06a947
.dword 0x3fccc8ef253ba14c
.dword 0x7fbd14a559084937
.dword 0x7fe02a158a06a947
.dword 0x3fccc8ef253ba14c
.dword 0x7fbd14a559084937
.dword 0x7fe7077053f4f8c6
.dword 0x3fcb96fe80cefc2c
.dword 0x7fc3daf0cd1e8f4b
.dword 0x7fe7077053f4f8c6
.dword 0x3fcb96fe80cefc2c
.dword 0x7fc3daf0cd1e8f4b
.dword 0x7fe7077053f4f8c6
.dword 0x3fcb96fe80cefc2c
.dword 0x7fc3daf0cd1e8f4b
.dword 0x7fe7077053f4f8c6
.dword 0x3fcb96fe80cefc2c
.dword 0x7fc3daf0cd1e8f4b
.dword 0x7fe7077053f4f8c6
.dword 0x3fcb96fe80cefc2c
.dword 0x7fc3daf0cd1e8f4b
.dword 0x7fbc023212d8c577
.dword 0x40160ccb89feb1d2
.dword 0x7fe34cb56672140d
.dword 0x7fbc023212d8c577
.dword 0x40160ccb89feb1d2
.dword 0x7fe34cb56672140d
.dword 0x7fbc023212d8c577
.dword 0x40160ccb89feb1d2
.dword 0x7fe34cb56672140d
.dword 0x7fbc023212d8c577
.dword 0x40160ccb89feb1d2
.dword 0x7fe34cb56672140d
.dword 0x7fbc023212d8c577
.dword 0x40160ccb89feb1d2
.dword 0x7fe34cb56672140d
.dword 0x7fb114c7285ec6df
.dword 0x3fff888257869929
.dword 0x7fc0d4fed0a8cdaf
.dword 0x7fb114c7285ec6df
.dword 0x3fff888257869929
.dword 0x7fc0d4fed0a8cdaf
.dword 0x7fb114c7285ec6df
.dword 0x3fff888257869929
.dword 0x7fc0d4fed0a8cdaf
.dword 0x7fb114c7285ec6df
.dword 0x3fff888257869929
.dword 0x7fc0d4fed0a8cdaf
.dword 0x7fb114c7285ec6df
.dword 0x3fff888257869929
.dword 0x7fc0d4fed0a8cdaf
.dword 0x7fe4c83c1ea7b4eb
.dword 0x3ff3a78a696dafd2
.dword 0x7fe987651fde28b0
.dword 0x7fe4c83c1ea7b4eb
.dword 0x3ff3a78a696dafd2
.dword 0x7fe987651fde28b0
.dword 0x7fe4c83c1ea7b4eb
.dword 0x3ff3a78a696dafd2
.dword 0x7fe987651fde28b0
.dword 0x7fe4c83c1ea7b4eb
.dword 0x3ff3a78a696dafd2
.dword 0x7fe987651fde28b0
.dword 0x7fe4c83c1ea7b4eb
.dword 0x3ff3a78a696dafd2
.dword 0x7fe987651fde28b0
.dword 0x7fe2ef0e618f004c
.dword 0x3ff7737f3972157f
.dword 0x7febc05171178e91
.dword 0x7fe2ef0e618f004c
.dword 0x3ff7737f3972157f
.dword 0x7febc05171178e91
.dword 0x7fe2ef0e618f004c
.dword 0x3ff7737f3972157f
.dword 0x7febc05171178e91
.dword 0x7fe2ef0e618f004c
.dword 0x3ff7737f3972157f
.dword 0x7febc05171178e91
.dword 0x7fe2ef0e618f004c
.dword 0x3ff7737f3972157f
.dword 0x7febc05171178e91
.dword 0x7fefd23aa95094cb
.dword 0x3feb15f6ba660af1
.dword 0x7feaef38ced97dfd
.dword 0x7fefd23aa95094cb
.dword 0x3feb15f6ba660af1
.dword 0x7feaef38ced97dfd
.dword 0x7fefd23aa95094cb
.dword 0x3feb15f6ba660af1
.dword 0x7feaef38ced97dfd
.dword 0x7fefd23aa95094cb
.dword 0x3feb15f6ba660af1
.dword 0x7feaef38ced97dfd
.dword 0x7fefd23aa95094cb
.dword 0x3feb15f6ba660af1
.dword 0x7feaef38ced97dfd
.dword 0x7fdf3c4bdf5e6f2d
.dword 0x3fe7e22304d57ca3
.dword 0x7fd750128f1053a7
.dword 0x7fdf3c4bdf5e6f2d
.dword 0x3fe7e22304d57ca3
.dword 0x7fd750128f1053a7
.dword 0x7fdf3c4bdf5e6f2d
.dword 0x3fe7e22304d57ca3
.dword 0x7fd750128f1053a7
.dword 0x7fdf3c4bdf5e6f2d
.dword 0x3fe7e22304d57ca3
.dword 0x7fd750128f1053a7
.dword 0x7fdf3c4bdf5e6f2d
.dword 0x3fe7e22304d57ca3
.dword 0x7fd750128f1053a7
.dword 0x7fe0a6201a197557
.dword 0x3ff7e08a8a7b3795
.dword 0x7fe8d8740fdfea01
.dword 0x7fe0a6201a197557
.dword 0x3ff7e08a8a7b3795
.dword 0x7fe8d8740fdfea01
.dword 0x7fe0a6201a197557
.dword 0x3ff7e08a8a7b3795
.dword 0x7fe8d8740fdfea01
.dword 0x7fe0a6201a197557
.dword 0x3ff7e08a8a7b3795
.dword 0x7fe8d8740fdfea01
.dword 0x7fe0a6201a197557
.dword 0x3ff7e08a8a7b3795
.dword 0x7fe8d8740fdfea01
.dword 0x7fe0a23e2fb712a3
.dword 0x3ffd5dbaca2d5c3f
.dword 0x7fee8781f0338de4
.dword 0x7fe0a23e2fb712a3
.dword 0x3ffd5dbaca2d5c3f
.dword 0x7fee8781f0338de4
.dword 0x7fe0a23e2fb712a3
.dword 0x3ffd5dbaca2d5c3f
.dword 0x7fee8781f0338de4
.dword 0x7fe0a23e2fb712a3
.dword 0x3ffd5dbaca2d5c3f
.dword 0x7fee8781f0338de4
.dword 0x7fe0a23e2fb712a3
.dword 0x3ffd5dbaca2d5c3f
.dword 0x7fee8781f0338de4
.dword 0x7fed22227ba705ff
.dword 0x3fed6b123fbc8aee
.dword 0x7feac86a00971463
.dword 0x7fed22227ba705ff
.dword 0x3fed6b123fbc8aee
.dword 0x7feac86a00971463
.dword 0x7fed22227ba705ff
.dword 0x3fed6b123fbc8aee
.dword 0x7feac86a00971463
.dword 0x7fed22227ba705ff
.dword 0x3fed6b123fbc8aee
.dword 0x7feac86a00971463
.dword 0x7fed22227ba705ff
.dword 0x3fed6b123fbc8aee
.dword 0x7feac86a00971463
.dword 0x7fd858851b4b719d
.dword 0x3fd52cd08d9ba0ff
.dword 0x7fc01c2fbc0cad77
.dword 0x7fd858851b4b719d
.dword 0x3fd52cd08d9ba0ff
.dword 0x7fc01c2fbc0cad77
.dword 0x7fd858851b4b719d
.dword 0x3fd52cd08d9ba0ff
.dword 0x7fc01c2fbc0cad77
.dword 0x7fd858851b4b719d
.dword 0x3fd52cd08d9ba0ff
.dword 0x7fc01c2fbc0cad77
.dword 0x7fd858851b4b719d
.dword 0x3fd52cd08d9ba0ff
.dword 0x7fc01c2fbc0cad77
.dword 0x7feda6e456917f2c
.dword 0x3fb8a60cf86df806
.dword 0x7fb6d70906372287
.dword 0x7feda6e456917f2c
.dword 0x3fb8a60cf86df806
.dword 0x7fb6d70906372287
.dword 0x7feda6e456917f2c
.dword 0x3fb8a60cf86df806
.dword 0x7fb6d70906372287
.dword 0x7feda6e456917f2c
.dword 0x3fb8a60cf86df806
.dword 0x7fb6d70906372287
.dword 0x7feda6e456917f2c
.dword 0x3fb8a60cf86df806
.dword 0x7fb6d70906372287
.dword 0x7fe3eb883a7b3908
.dword 0x3ff3beeb9c2285de
.dword 0x7fe895640ced1156
.dword 0x7fe3eb883a7b3908
.dword 0x3ff3beeb9c2285de
.dword 0x7fe895640ced1156
.dword 0x7fe3eb883a7b3908
.dword 0x3ff3beeb9c2285de
.dword 0x7fe895640ced1156
.dword 0x7fe3eb883a7b3908
.dword 0x3ff3beeb9c2285de
.dword 0x7fe895640ced1156
.dword 0x7fe3eb883a7b3908
.dword 0x3ff3beeb9c2285de
.dword 0x7fe895640ced1156
.dword 0x7fd383dd5169c637
.dword 0x3fd1527d01b8191f
.dword 0x7fb520b76d0b75a7
.dword 0x7fd383dd5169c637
.dword 0x3fd1527d01b8191f
.dword 0x7fb520b76d0b75a7
.dword 0x7fd383dd5169c637
.dword 0x3fd1527d01b8191f
.dword 0x7fb520b76d0b75a7
.dword 0x7fd383dd5169c637
.dword 0x3fd1527d01b8191f
.dword 0x7fb520b76d0b75a7
.dword 0x7fd383dd5169c637
.dword 0x3fd1527d01b8191f
.dword 0x7fb520b76d0b75a7
.dword 0x7fd7397d51c953cf
.dword 0x3f8e3a5d84ef4fee
.dword 0x7f75f0418f60057f
.dword 0x7fd7397d51c953cf
.dword 0x3f8e3a5d84ef4fee
.dword 0x7f75f0418f60057f
.dword 0x7fd7397d51c953cf
.dword 0x3f8e3a5d84ef4fee
.dword 0x7f75f0418f60057f
.dword 0x7fd7397d51c953cf
.dword 0x3f8e3a5d84ef4fee
.dword 0x7f75f0418f60057f
.dword 0x7fd7397d51c953cf
.dword 0x3f8e3a5d84ef4fee
.dword 0x7f75f0418f60057f
.dword 0x7fd7be4444b4f445
.dword 0x400270188837b78d
.dword 0x7feb5c6512b6df3f
.dword 0x7fd7be4444b4f445
.dword 0x400270188837b78d
.dword 0x7feb5c6512b6df3f
.dword 0x7fd7be4444b4f445
.dword 0x400270188837b78d
.dword 0x7feb5c6512b6df3f
.dword 0x7fd7be4444b4f445
.dword 0x400270188837b78d
.dword 0x7feb5c6512b6df3f
.dword 0x7fd7be4444b4f445
.dword 0x400270188837b78d
.dword 0x7feb5c6512b6df3f
.dword 0x7fd01ddc928e0d81
.dword 0x3fe0e118a6368321
.dword 0x7fc1009954929043
.dword 0x7fd01ddc928e0d81
.dword 0x3fe0e118a6368321
.dword 0x7fc1009954929043
.dword 0x7fd01ddc928e0d81
.dword 0x3fe0e118a6368321
.dword 0x7fc1009954929043
.dword 0x7fd01ddc928e0d81
.dword 0x3fe0e118a6368321
.dword 0x7fc1009954929043
.dword 0x7fd01ddc928e0d81
.dword 0x3fe0e118a6368321
.dword 0x7fc1009954929043
.dword 0x7feb5c21cc0aeb77
.dword 0x3fd94872c41ac66c
.dword 0x7fd59debd3573af1
.dword 0x7feb5c21cc0aeb77
.dword 0x3fd94872c41ac66c
.dword 0x7fd59debd3573af1
.dword 0x7feb5c21cc0aeb77
.dword 0x3fd94872c41ac66c
.dword 0x7fd59debd3573af1
.dword 0x7feb5c21cc0aeb77
.dword 0x3fd94872c41ac66c
.dword 0x7fd59debd3573af1
.dword 0x7feb5c21cc0aeb77
.dword 0x3fd94872c41ac66c
.dword 0x7fd59debd3573af1
.dword 0x7fed69ac69d51396
.dword 0x3fee47ab05a54153
.dword 0x7febd4f14ba45087
.dword 0x7fed69ac69d51396
.dword 0x3fee47ab05a54153
.dword 0x7febd4f14ba45087
.dword 0x7fed69ac69d51396
.dword 0x3fee47ab05a54153
.dword 0x7febd4f14ba45087
.dword 0x7fed69ac69d51396
.dword 0x3fee47ab05a54153
.dword 0x7febd4f14ba45087
.dword 0x7fed69ac69d51396
.dword 0x3fee47ab05a54153
.dword 0x7febd4f14ba45087
.dword 0x7fecc7784d8dacdb
.dword 0x3fc5f7c825fb0e2b
.dword 0x7fc3c1be9c53e823
.dword 0x7fecc7784d8dacdb
.dword 0x3fc5f7c825fb0e2b
.dword 0x7fc3c1be9c53e823
.dword 0x7fecc7784d8dacdb
.dword 0x3fc5f7c825fb0e2b
.dword 0x7fc3c1be9c53e823
.dword 0x7fecc7784d8dacdb
.dword 0x3fc5f7c825fb0e2b
.dword 0x7fc3c1be9c53e823
.dword 0x7fecc7784d8dacdb
.dword 0x3fc5f7c825fb0e2b
.dword 0x7fc3c1be9c53e823
.dword 0x7fde1bc7e1b91dcb
.dword 0x3ffca213c005f7f5
.dword 0x7feaf0ce1e93ae2d
.dword 0x7fde1bc7e1b91dcb
.dword 0x3ffca213c005f7f5
.dword 0x7feaf0ce1e93ae2d
.dword 0x7fde1bc7e1b91dcb
.dword 0x3ffca213c005f7f5
.dword 0x7feaf0ce1e93ae2d
.dword 0x7fde1bc7e1b91dcb
.dword 0x3ffca213c005f7f5
.dword 0x7feaf0ce1e93ae2d
.dword 0x7fde1bc7e1b91dcb
.dword 0x3ffca213c005f7f5
.dword 0x7feaf0ce1e93ae2d
.dword 0x7fe63761262a7af5
.dword 0x3ff2b460c05202e0
.dword 0x7fe9f8c2a72e7ad4
.dword 0x7fe63761262a7af5
.dword 0x3ff2b460c05202e0
.dword 0x7fe9f8c2a72e7ad4
.dword 0x7fe63761262a7af5
.dword 0x3ff2b460c05202e0
.dword 0x7fe9f8c2a72e7ad4
.dword 0x7fe63761262a7af5
.dword 0x3ff2b460c05202e0
.dword 0x7fe9f8c2a72e7ad4
.dword 0x7fe63761262a7af5
.dword 0x3ff2b460c05202e0
.dword 0x7fe9f8c2a72e7ad4
.dword 0x7feb9382d77a6dfe
.dword 0x3fe3b5d5677dd48d
.dword 0x7fe0fc47f311a49b
.dword 0x7feb9382d77a6dfe
.dword 0x3fe3b5d5677dd48d
.dword 0x7fe0fc47f311a49b
.dword 0x7feb9382d77a6dfe
.dword 0x3fe3b5d5677dd48d
.dword 0x7fe0fc47f311a49b
.dword 0x7feb9382d77a6dfe
.dword 0x3fe3b5d5677dd48d
.dword 0x7fe0fc47f311a49b
.dword 0x7feb9382d77a6dfe
.dword 0x3fe3b5d5677dd48d
.dword 0x7fe0fc47f311a49b
.dword 0x7fe2f75ebd929099
.dword 0x3fe99337ab2ee957
.dword 0x7fde5106bbe3c07b
.dword 0x7fe2f75ebd929099
.dword 0x3fe99337ab2ee957
.dword 0x7fde5106bbe3c07b
.dword 0x7fe2f75ebd929099
.dword 0x3fe99337ab2ee957
.dword 0x7fde5106bbe3c07b
.dword 0x7fe2f75ebd929099
.dword 0x3fe99337ab2ee957
.dword 0x7fde5106bbe3c07b
.dword 0x7fe2f75ebd929099
.dword 0x3fe99337ab2ee957
.dword 0x7fde5106bbe3c07b
.dword 0x7fe06f26a8a4514a
.dword 0x3fcde2ebabf2e17e
.dword 0x7fbeb28a24dd172f
.dword 0x7fe06f26a8a4514a
.dword 0x3fcde2ebabf2e17e
.dword 0x7fbeb28a24dd172f
.dword 0x7fe06f26a8a4514a
.dword 0x3fcde2ebabf2e17e
.dword 0x7fbeb28a24dd172f
.dword 0x7fe06f26a8a4514a
.dword 0x3fcde2ebabf2e17e
.dword 0x7fbeb28a24dd172f
.dword 0x7fe06f26a8a4514a
.dword 0x3fcde2ebabf2e17e
.dword 0x7fbeb28a24dd172f
.dword 0x7fee56a317b6b243
.dword 0x3feb52e4839f4db4
.dword 0x7fe9e7b04402a756
.dword 0x7fee56a317b6b243
.dword 0x3feb52e4839f4db4
.dword 0x7fe9e7b04402a756
.dword 0x7fee56a317b6b243
.dword 0x3feb52e4839f4db4
.dword 0x7fe9e7b04402a756
.dword 0x7fee56a317b6b243
.dword 0x3feb52e4839f4db4
.dword 0x7fe9e7b04402a756
.dword 0x7fee56a317b6b243
.dword 0x3feb52e4839f4db4
.dword 0x7fe9e7b04402a756
.dword 0x7fe9de2bd8b45031
.dword 0x3fe6cdc2677914ea
.dword 0x7fe26f12946f0a28
.dword 0x7fe9de2bd8b45031
.dword 0x3fe6cdc2677914ea
.dword 0x7fe26f12946f0a28
.dword 0x7fe9de2bd8b45031
.dword 0x3fe6cdc2677914ea
.dword 0x7fe26f12946f0a28
.dword 0x7fe9de2bd8b45031
.dword 0x3fe6cdc2677914ea
.dword 0x7fe26f12946f0a28
.dword 0x7fe9de2bd8b45031
.dword 0x3fe6cdc2677914ea
.dword 0x7fe26f12946f0a28
.dword 0x7fc8a4decc210893
.dword 0x4002a1f12d67acdb
.dword 0x7fdcb2e920d67af3
.dword 0x7fc8a4decc210893
.dword 0x4002a1f12d67acdb
.dword 0x7fdcb2e920d67af3
.dword 0x7fc8a4decc210893
.dword 0x4002a1f12d67acdb
.dword 0x7fdcb2e920d67af3
.dword 0x7fc8a4decc210893
.dword 0x4002a1f12d67acdb
.dword 0x7fdcb2e920d67af3
.dword 0x7fc8a4decc210893
.dword 0x4002a1f12d67acdb
.dword 0x7fdcb2e920d67af3
.dword 0x7fc181c884c8efbf
.dword 0x4019f8aed5259957
.dword 0x7fec6ae44021a677
.dword 0x7fc181c884c8efbf
.dword 0x4019f8aed5259957
.dword 0x7fec6ae44021a677
.dword 0x7fc181c884c8efbf
.dword 0x4019f8aed5259957
.dword 0x7fec6ae44021a677
.dword 0x7fc181c884c8efbf
.dword 0x4019f8aed5259957
.dword 0x7fec6ae44021a677
.dword 0x7fc181c884c8efbf
.dword 0x4019f8aed5259957
.dword 0x7fec6ae44021a677
.dword 0x7fdebf74076da493
.dword 0x3fe1fe6bb3f80fcb
.dword 0x7fd14a2cca067a89
.dword 0x7fdebf74076da493
.dword 0x3fe1fe6bb3f80fcb
.dword 0x7fd14a2cca067a89
.dword 0x7fdebf74076da493
.dword 0x3fe1fe6bb3f80fcb
.dword 0x7fd14a2cca067a89
.dword 0x7fdebf74076da493
.dword 0x3fe1fe6bb3f80fcb
.dword 0x7fd14a2cca067a89
.dword 0x7fdebf74076da493
.dword 0x3fe1fe6bb3f80fcb
.dword 0x7fd14a2cca067a89
.dword 0x7fe2088d3e11fda6
.dword 0x3ff1cc44e6d9293e
.dword 0x7fe40f50c3527b82
.dword 0x7fe2088d3e11fda6
.dword 0x3ff1cc44e6d9293e
.dword 0x7fe40f50c3527b82
.dword 0x7fe2088d3e11fda6
.dword 0x3ff1cc44e6d9293e
.dword 0x7fe40f50c3527b82
.dword 0x7fe2088d3e11fda6
.dword 0x3ff1cc44e6d9293e
.dword 0x7fe40f50c3527b82
.dword 0x7fe2088d3e11fda6
.dword 0x3ff1cc44e6d9293e
.dword 0x7fe40f50c3527b82
.dword 0x7fd891e2efdb19e1
.dword 0x3ff8bfa6e87db32d
.dword 0x7fe300911db76428
.dword 0x7fd891e2efdb19e1
.dword 0x3ff8bfa6e87db32d
.dword 0x7fe300911db76428
.dword 0x7fd891e2efdb19e1
.dword 0x3ff8bfa6e87db32d
.dword 0x7fe300911db76428
.dword 0x7fd891e2efdb19e1
.dword 0x3ff8bfa6e87db32d
.dword 0x7fe300911db76428
.dword 0x7fd891e2efdb19e1
.dword 0x3ff8bfa6e87db32d
.dword 0x7fe300911db76428
.dword 0x7fc746a063e32f3f
.dword 0x40157ebfae2b872f
.dword 0x7fef45158aa6d635
.dword 0x7fc746a063e32f3f
.dword 0x40157ebfae2b872f
.dword 0x7fef45158aa6d635
.dword 0x7fc746a063e32f3f
.dword 0x40157ebfae2b872f
.dword 0x7fef45158aa6d635
.dword 0x7fc746a063e32f3f
.dword 0x40157ebfae2b872f
.dword 0x7fef45158aa6d635
.dword 0x7fc746a063e32f3f
.dword 0x40157ebfae2b872f
.dword 0x7fef45158aa6d635
.dword 0x7fc0f1d33203d307
.dword 0x4009558ab3e1c04a
.dword 0x7fdad471945dbc7b
.dword 0x7fc0f1d33203d307
.dword 0x4009558ab3e1c04a
.dword 0x7fdad471945dbc7b
.dword 0x7fc0f1d33203d307
.dword 0x4009558ab3e1c04a
.dword 0x7fdad471945dbc7b
.dword 0x7fc0f1d33203d307
.dword 0x4009558ab3e1c04a
.dword 0x7fdad471945dbc7b
.dword 0x7fc0f1d33203d307
.dword 0x4009558ab3e1c04a
.dword 0x7fdad471945dbc7b
.dword 0x7fe2e74ca276ff7d
.dword 0x3fdd99ffd3a7ac76
.dword 0x7fd17c9679d77d6b
.dword 0x7fe2e74ca276ff7d
.dword 0x3fdd99ffd3a7ac76
.dword 0x7fd17c9679d77d6b
.dword 0x7fe2e74ca276ff7d
.dword 0x3fdd99ffd3a7ac76
.dword 0x7fd17c9679d77d6b
.dword 0x7fe2e74ca276ff7d
.dword 0x3fdd99ffd3a7ac76
.dword 0x7fd17c9679d77d6b
.dword 0x7fe2e74ca276ff7d
.dword 0x3fdd99ffd3a7ac76
.dword 0x7fd17c9679d77d6b
.dword 0x7fea81b0950e06a0
.dword 0x3fbb0c82a2c2a677
.dword 0x7fb667c9d5aae277
.dword 0x7fea81b0950e06a0
.dword 0x3fbb0c82a2c2a677
.dword 0x7fb667c9d5aae277
.dword 0x7fea81b0950e06a0
.dword 0x3fbb0c82a2c2a677
.dword 0x7fb667c9d5aae277
.dword 0x7fea81b0950e06a0
.dword 0x3fbb0c82a2c2a677
.dword 0x7fb667c9d5aae277
.dword 0x7fea81b0950e06a0
.dword 0x3fbb0c82a2c2a677
.dword 0x7fb667c9d5aae277
.dword 0x7fb16e32cf849ecf
.dword 0x3fa36742322e556a
.dword 0x7f652359dac1d2ff
.dword 0x7fb16e32cf849ecf
.dword 0x3fa36742322e556a
.dword 0x7f652359dac1d2ff
.dword 0x7fb16e32cf849ecf
.dword 0x3fa36742322e556a
.dword 0x7f652359dac1d2ff
.dword 0x7fb16e32cf849ecf
.dword 0x3fa36742322e556a
.dword 0x7f652359dac1d2ff
.dword 0x7fb16e32cf849ecf
.dword 0x3fa36742322e556a
.dword 0x7f652359dac1d2ff
.dword 0x7fc1d7d6707c81f3
.dword 0x3fb20c908f9b7990
.dword 0x7f8420d45610d2ff
.dword 0x7fc1d7d6707c81f3
.dword 0x3fb20c908f9b7990
.dword 0x7f8420d45610d2ff
.dword 0x7fc1d7d6707c81f3
.dword 0x3fb20c908f9b7990
.dword 0x7f8420d45610d2ff
.dword 0x7fc1d7d6707c81f3
.dword 0x3fb20c908f9b7990
.dword 0x7f8420d45610d2ff
.dword 0x7fc1d7d6707c81f3
.dword 0x3fb20c908f9b7990
.dword 0x7f8420d45610d2ff
.dword 0x7feaa38d0be280e1
.dword 0x3fafd41d096ecf1d
.dword 0x7faa7f0456043a7f
.dword 0x7feaa38d0be280e1
.dword 0x3fafd41d096ecf1d
.dword 0x7faa7f0456043a7f
.dword 0x7feaa38d0be280e1
.dword 0x3fafd41d096ecf1d
.dword 0x7faa7f0456043a7f
.dword 0x7feaa38d0be280e1
.dword 0x3fafd41d096ecf1d
.dword 0x7faa7f0456043a7f
.dword 0x7feaa38d0be280e1
.dword 0x3fafd41d096ecf1d
.dword 0x7faa7f0456043a7f
.dword 0x7fee550f455cc69b
.dword 0x3fdd69c0af4bbfae
.dword 0x7fdbe153957c4525
.dword 0x7fee550f455cc69b
.dword 0x3fdd69c0af4bbfae
.dword 0x7fdbe153957c4525
.dword 0x7fee550f455cc69b
.dword 0x3fdd69c0af4bbfae
.dword 0x7fdbe153957c4525
.dword 0x7fee550f455cc69b
.dword 0x3fdd69c0af4bbfae
.dword 0x7fdbe153957c4525
.dword 0x7fee550f455cc69b
.dword 0x3fdd69c0af4bbfae
.dword 0x7fdbe153957c4525
.dword 0x7f9caf8bae2074df
.dword 0x404071b7eb928643
.dword 0x7fed7b6d36c4d7ca
.dword 0x7f9caf8bae2074df
.dword 0x404071b7eb928643
.dword 0x7fed7b6d36c4d7ca
.dword 0x7f9caf8bae2074df
.dword 0x404071b7eb928643
.dword 0x7fed7b6d36c4d7ca
.dword 0x7f9caf8bae2074df
.dword 0x404071b7eb928643
.dword 0x7fed7b6d36c4d7ca
.dword 0x7f9caf8bae2074df
.dword 0x404071b7eb928643
.dword 0x7fed7b6d36c4d7ca
.dword 0x7fbdfb88e73d746f
.dword 0x402032591e533529
.dword 0x7fee59e1f30d27e6
.dword 0x7fbdfb88e73d746f
.dword 0x402032591e533529
.dword 0x7fee59e1f30d27e6
.dword 0x7fbdfb88e73d746f
.dword 0x402032591e533529
.dword 0x7fee59e1f30d27e6
.dword 0x7fbdfb88e73d746f
.dword 0x402032591e533529
.dword 0x7fee59e1f30d27e6
.dword 0x7fbdfb88e73d746f
.dword 0x402032591e533529
.dword 0x7fee59e1f30d27e6
.dword 0x7fa0c373d72bd3df
.dword 0x40266d44a9bbe736
.dword 0x7fd77f3abd87c689
.dword 0x7fa0c373d72bd3df
.dword 0x40266d44a9bbe736
.dword 0x7fd77f3abd87c689
.dword 0x7fa0c373d72bd3df
.dword 0x40266d44a9bbe736
.dword 0x7fd77f3abd87c689
.dword 0x7fa0c373d72bd3df
.dword 0x40266d44a9bbe736
.dword 0x7fd77f3abd87c689
.dword 0x7fa0c373d72bd3df
.dword 0x40266d44a9bbe736
.dword 0x7fd77f3abd87c689
.dword 0x7fb7fb56f2b7523f
.dword 0x40196be7753f5751
.dword 0x7fe30d39ce94e382
.dword 0x7fb7fb56f2b7523f
.dword 0x40196be7753f5751
.dword 0x7fe30d39ce94e382
.dword 0x7fb7fb56f2b7523f
.dword 0x40196be7753f5751
.dword 0x7fe30d39ce94e382
.dword 0x7fb7fb56f2b7523f
.dword 0x40196be7753f5751
.dword 0x7fe30d39ce94e382
.dword 0x7fb7fb56f2b7523f
.dword 0x40196be7753f5751
.dword 0x7fe30d39ce94e382
.dword 0x7fe5e26a2d52eba8
.dword 0x3ff22dc44e238e68
.dword 0x7fe8dd50be11d539
.dword 0x7fe5e26a2d52eba8
.dword 0x3ff22dc44e238e68
.dword 0x7fe8dd50be11d539
.dword 0x7fe5e26a2d52eba8
.dword 0x3ff22dc44e238e68
.dword 0x7fe8dd50be11d539
.dword 0x7fe5e26a2d52eba8
.dword 0x3ff22dc44e238e68
.dword 0x7fe8dd50be11d539
.dword 0x7fe5e26a2d52eba8
.dword 0x3ff22dc44e238e68
.dword 0x7fe8dd50be11d539
.dword 0x7fefd7f793e002b0
.dword 0x3fe6c604e008a06d
.dword 0x7fe6a9875b7c4913
.dword 0x7fefd7f793e002b0
.dword 0x3fe6c604e008a06d
.dword 0x7fe6a9875b7c4913
.dword 0x7fefd7f793e002b0
.dword 0x3fe6c604e008a06d
.dword 0x7fe6a9875b7c4913
.dword 0x7fefd7f793e002b0
.dword 0x3fe6c604e008a06d
.dword 0x7fe6a9875b7c4913
.dword 0x7fefd7f793e002b0
.dword 0x3fe6c604e008a06d
.dword 0x7fe6a9875b7c4913
.dword 0x7fe94c1056ed6745
.dword 0x3fee25cdfd46ec52
.dword 0x7fe7d5321be53296
.dword 0x7fe94c1056ed6745
.dword 0x3fee25cdfd46ec52
.dword 0x7fe7d5321be53296
.dword 0x7fe94c1056ed6745
.dword 0x3fee25cdfd46ec52
.dword 0x7fe7d5321be53296
.dword 0x7fe94c1056ed6745
.dword 0x3fee25cdfd46ec52
.dword 0x7fe7d5321be53296
.dword 0x7fe94c1056ed6745
.dword 0x3fee25cdfd46ec52
.dword 0x7fe7d5321be53296
.dword 0x7fe2f364dc0d6dea
.dword 0x3fdb8d35f83ea038
.dword 0x7fd050fd8437607f
.dword 0x7fe2f364dc0d6dea
.dword 0x3fdb8d35f83ea038
.dword 0x7fd050fd8437607f
.dword 0x7fe2f364dc0d6dea
.dword 0x3fdb8d35f83ea038
.dword 0x7fd050fd8437607f
.dword 0x7fe2f364dc0d6dea
.dword 0x3fdb8d35f83ea038
.dword 0x7fd050fd8437607f
.dword 0x7fe2f364dc0d6dea
.dword 0x3fdb8d35f83ea038
.dword 0x7fd050fd8437607f
.dword 0x7fe9338daa943159
.dword 0x3fd1632cecbb4fc2
.dword 0x7fcb62fc4471f033
.dword 0x7fe9338daa943159
.dword 0x3fd1632cecbb4fc2
.dword 0x7fcb62fc4471f033
.dword 0x7fe9338daa943159
.dword 0x3fd1632cecbb4fc2
.dword 0x7fcb62fc4471f033
.dword 0x7fe9338daa943159
.dword 0x3fd1632cecbb4fc2
.dword 0x7fcb62fc4471f033
.dword 0x7fe9338daa943159
.dword 0x3fd1632cecbb4fc2
.dword 0x7fcb62fc4471f033
.dword 0x7feb7f239e9dfb7e
.dword 0x3fed00ee4219c2c6
.dword 0x7fe8ec05022473c9
.dword 0x7feb7f239e9dfb7e
.dword 0x3fed00ee4219c2c6
.dword 0x7fe8ec05022473c9
.dword 0x7feb7f239e9dfb7e
.dword 0x3fed00ee4219c2c6
.dword 0x7fe8ec05022473c9
.dword 0x7feb7f239e9dfb7e
.dword 0x3fed00ee4219c2c6
.dword 0x7fe8ec05022473c9
.dword 0x7feb7f239e9dfb7e
.dword 0x3fed00ee4219c2c6
.dword 0x7fe8ec05022473c9
.dword 0x7fdc6036c1db05b5
.dword 0x3fdd2dc4a5d76216
.dword 0x7fc9dfc74d0d944b
.dword 0x7fdc6036c1db05b5
.dword 0x3fdd2dc4a5d76216
.dword 0x7fc9dfc74d0d944b
.dword 0x7fdc6036c1db05b5
.dword 0x3fdd2dc4a5d76216
.dword 0x7fc9dfc74d0d944b
.dword 0x7fdc6036c1db05b5
.dword 0x3fdd2dc4a5d76216
.dword 0x7fc9dfc74d0d944b
.dword 0x7fdc6036c1db05b5
.dword 0x3fdd2dc4a5d76216
.dword 0x7fc9dfc74d0d944b
.dword 0x7fe4d4b3ded55275
.dword 0x3fdc381c96d1da30
.dword 0x7fd25ea43a0ba6d5
.dword 0x7fe4d4b3ded55275
.dword 0x3fdc381c96d1da30
.dword 0x7fd25ea43a0ba6d5
.dword 0x7fe4d4b3ded55275
.dword 0x3fdc381c96d1da30
.dword 0x7fd25ea43a0ba6d5
.dword 0x7fe4d4b3ded55275
.dword 0x3fdc381c96d1da30
.dword 0x7fd25ea43a0ba6d5
.dword 0x7fe4d4b3ded55275
.dword 0x3fdc381c96d1da30
.dword 0x7fd25ea43a0ba6d5
.dword 0x7fe5a1465bf903f8
.dword 0x3ff14437285df6c6
.dword 0x7fe75792bdb3899b
.dword 0x7fe5a1465bf903f8
.dword 0x3ff14437285df6c6
.dword 0x7fe75792bdb3899b
.dword 0x7fe5a1465bf903f8
.dword 0x3ff14437285df6c6
.dword 0x7fe75792bdb3899b
.dword 0x7fe5a1465bf903f8
.dword 0x3ff14437285df6c6
.dword 0x7fe75792bdb3899b
.dword 0x7fe5a1465bf903f8
.dword 0x3ff14437285df6c6
.dword 0x7fe75792bdb3899b
.dword 0x7fed6f02241f1dfe
.dword 0x3fea18b735e6fe18
.dword 0x7fe800ed835cf169
.dword 0x7fed6f02241f1dfe
.dword 0x3fea18b735e6fe18
.dword 0x7fe800ed835cf169
.dword 0x7fed6f02241f1dfe
.dword 0x3fea18b735e6fe18
.dword 0x7fe800ed835cf169
.dword 0x7fed6f02241f1dfe
.dword 0x3fea18b735e6fe18
.dword 0x7fe800ed835cf169
.dword 0x7fed6f02241f1dfe
.dword 0x3fea18b735e6fe18
.dword 0x7fe800ed835cf169
.dword 0x7fef76c60cb611bb
.dword 0x3faa0af53f41063f
.dword 0x7fa99b472bc5fdef
.dword 0x7fef76c60cb611bb
.dword 0x3faa0af53f41063f
.dword 0x7fa99b472bc5fdef
.dword 0x7fef76c60cb611bb
.dword 0x3faa0af53f41063f
.dword 0x7fa99b472bc5fdef
.dword 0x7fef76c60cb611bb
.dword 0x3faa0af53f41063f
.dword 0x7fa99b472bc5fdef
.dword 0x7fef76c60cb611bb
.dword 0x3faa0af53f41063f
.dword 0x7fa99b472bc5fdef
.dword 0x7fbebc259ea86bbf
.dword 0x3fede9682afb4452
.dword 0x7fbcbab01676665f
.dword 0x7fbebc259ea86bbf
.dword 0x3fede9682afb4452
.dword 0x7fbcbab01676665f
.dword 0x7fbebc259ea86bbf
.dword 0x3fede9682afb4452
.dword 0x7fbcbab01676665f
.dword 0x7fbebc259ea86bbf
.dword 0x3fede9682afb4452
.dword 0x7fbcbab01676665f
.dword 0x7fbebc259ea86bbf
.dword 0x3fede9682afb4452
.dword 0x7fbcbab01676665f
.dword 0x7fc595145e4cc727
.dword 0x400f61026fb4a229
.dword 0x7fe529d945c07226
.dword 0x7fc595145e4cc727
.dword 0x400f61026fb4a229
.dword 0x7fe529d945c07226
.dword 0x7fc595145e4cc727
.dword 0x400f61026fb4a229
.dword 0x7fe529d945c07226
.dword 0x7fc595145e4cc727
.dword 0x400f61026fb4a229
.dword 0x7fe529d945c07226
.dword 0x7fc595145e4cc727
.dword 0x400f61026fb4a229
.dword 0x7fe529d945c07226
.dword 0x7fe72c391e4b2abf
.dword 0x3ff3184dd5e108c3
.dword 0x7feba7b6e43c3844
.dword 0x7fe72c391e4b2abf
.dword 0x3ff3184dd5e108c3
.dword 0x7feba7b6e43c3844
.dword 0x7fe72c391e4b2abf
.dword 0x3ff3184dd5e108c3
.dword 0x7feba7b6e43c3844
.dword 0x7fe72c391e4b2abf
.dword 0x3ff3184dd5e108c3
.dword 0x7feba7b6e43c3844
.dword 0x7fe72c391e4b2abf
.dword 0x3ff3184dd5e108c3
.dword 0x7feba7b6e43c3844
.dword 0x7fd2c8ac78bde04d
.dword 0x3ff9addc8b902ed2
.dword 0x7fde25aa309e4f15
.dword 0x7fd2c8ac78bde04d
.dword 0x3ff9addc8b902ed2
.dword 0x7fde25aa309e4f15
.dword 0x7fd2c8ac78bde04d
.dword 0x3ff9addc8b902ed2
.dword 0x7fde25aa309e4f15
.dword 0x7fd2c8ac78bde04d
.dword 0x3ff9addc8b902ed2
.dword 0x7fde25aa309e4f15
.dword 0x7fd2c8ac78bde04d
.dword 0x3ff9addc8b902ed2
.dword 0x7fde25aa309e4f15
.dword 0x7fe216fdd2c02fec
.dword 0x3ffa1a7ccc099bf6
.dword 0x7fed834eebcde902
.dword 0x7fe216fdd2c02fec
.dword 0x3ffa1a7ccc099bf6
.dword 0x7fed834eebcde902
.dword 0x7fe216fdd2c02fec
.dword 0x3ffa1a7ccc099bf6
.dword 0x7fed834eebcde902
.dword 0x7fe216fdd2c02fec
.dword 0x3ffa1a7ccc099bf6
.dword 0x7fed834eebcde902
.dword 0x7fe216fdd2c02fec
.dword 0x3ffa1a7ccc099bf6
.dword 0x7fed834eebcde902
.dword 0x7fe92a40ada09bc7
.dword 0x3fd25bb1366e5e7b
.dword 0x7fccdfbfcc37e2d7
.dword 0x7fe92a40ada09bc7
.dword 0x3fd25bb1366e5e7b
.dword 0x7fccdfbfcc37e2d7
.dword 0x7fe92a40ada09bc7
.dword 0x3fd25bb1366e5e7b
.dword 0x7fccdfbfcc37e2d7
.dword 0x7fe92a40ada09bc7
.dword 0x3fd25bb1366e5e7b
.dword 0x7fccdfbfcc37e2d7
.dword 0x7fe92a40ada09bc7
.dword 0x3fd25bb1366e5e7b
.dword 0x7fccdfbfcc37e2d7
.dword 0x7fa07a03c3d506bf
.dword 0x4030dda3a9010ee0
.dword 0x7fe15e41a0e62eed
.dword 0x7fa07a03c3d506bf
.dword 0x4030dda3a9010ee0
.dword 0x7fe15e41a0e62eed
.dword 0x7fa07a03c3d506bf
.dword 0x4030dda3a9010ee0
.dword 0x7fe15e41a0e62eed
.dword 0x7fa07a03c3d506bf
.dword 0x4030dda3a9010ee0
.dword 0x7fe15e41a0e62eed
.dword 0x7fa07a03c3d506bf
.dword 0x4030dda3a9010ee0
.dword 0x7fe15e41a0e62eed
.dword 0x7fb9a32fb58f33bf
.dword 0x400d5dc4397c31a5
.dword 0x7fd78702b4c3d43b
.dword 0x7fb9a32fb58f33bf
.dword 0x400d5dc4397c31a5
.dword 0x7fd78702b4c3d43b
.dword 0x7fb9a32fb58f33bf
.dword 0x400d5dc4397c31a5
.dword 0x7fd78702b4c3d43b
.dword 0x7fb9a32fb58f33bf
.dword 0x400d5dc4397c31a5
.dword 0x7fd78702b4c3d43b
.dword 0x7fb9a32fb58f33bf
.dword 0x400d5dc4397c31a5
.dword 0x7fd78702b4c3d43b
.dword 0x7fbd55eb74d3e867
.dword 0x4018d1eaf92ca954
.dword 0x7fe6c0e12a293e24
.dword 0x7fbd55eb74d3e867
.dword 0x4018d1eaf92ca954
.dword 0x7fe6c0e12a293e24
.dword 0x7fbd55eb74d3e867
.dword 0x4018d1eaf92ca954
.dword 0x7fe6c0e12a293e24
.dword 0x7fbd55eb74d3e867
.dword 0x4018d1eaf92ca954
.dword 0x7fe6c0e12a293e24
.dword 0x7fbd55eb74d3e867
.dword 0x4018d1eaf92ca954
.dword 0x7fe6c0e12a293e24
.dword 0x7fa46a079e389d6f
.dword 0x4033090a9e293cab
.dword 0x7fe849723c3ca606
.dword 0x7fa46a079e389d6f
.dword 0x4033090a9e293cab
.dword 0x7fe849723c3ca606
.dword 0x7fa46a079e389d6f
.dword 0x4033090a9e293cab
.dword 0x7fe849723c3ca606
.dword 0x7fa46a079e389d6f
.dword 0x4033090a9e293cab
.dword 0x7fe849723c3ca606
.dword 0x7fa46a079e389d6f
.dword 0x4033090a9e293cab
.dword 0x7fe849723c3ca606
.dword 0x7fd89ee780981d7f
.dword 0x3fc4519b1a6eef31
.dword 0x7faf443480c8c16f
.dword 0x7fd89ee780981d7f
.dword 0x3fc4519b1a6eef31
.dword 0x7faf443480c8c16f
.dword 0x7fd89ee780981d7f
.dword 0x3fc4519b1a6eef31
.dword 0x7faf443480c8c16f
.dword 0x7fd89ee780981d7f
.dword 0x3fc4519b1a6eef31
.dword 0x7faf443480c8c16f
.dword 0x7fd89ee780981d7f
.dword 0x3fc4519b1a6eef31
.dword 0x7faf443480c8c16f
.dword 0x7fc5022a4b0b3f6b
.dword 0x400e7c8f3de00c66
.dword 0x7fe403ce14898e4f
.dword 0x7fc5022a4b0b3f6b
.dword 0x400e7c8f3de00c66
.dword 0x7fe403ce14898e4f
.dword 0x7fc5022a4b0b3f6b
.dword 0x400e7c8f3de00c66
.dword 0x7fe403ce14898e4f
.dword 0x7fc5022a4b0b3f6b
.dword 0x400e7c8f3de00c66
.dword 0x7fe403ce14898e4f
.dword 0x7fc5022a4b0b3f6b
.dword 0x400e7c8f3de00c66
.dword 0x7fe403ce14898e4f
.dword 0x7fe5547440bd97d4
.dword 0x3ff75882bb7e991b
.dword 0x7fef1f65e498feec
.dword 0x7fe5547440bd97d4
.dword 0x3ff75882bb7e991b
.dword 0x7fef1f65e498feec
.dword 0x7fe5547440bd97d4
.dword 0x3ff75882bb7e991b
.dword 0x7fef1f65e498feec
.dword 0x7fe5547440bd97d4
.dword 0x3ff75882bb7e991b
.dword 0x7fef1f65e498feec
.dword 0x7fe5547440bd97d4
.dword 0x3ff75882bb7e991b
.dword 0x7fef1f65e498feec
.dword 0x7fe9c4ac16f8b53d
.dword 0x3fdd955fc1f7a7e7
.dword 0x7fd7d284d22cd9ad
.dword 0x7fe9c4ac16f8b53d
.dword 0x3fdd955fc1f7a7e7
.dword 0x7fd7d284d22cd9ad
.dword 0x7fe9c4ac16f8b53d
.dword 0x3fdd955fc1f7a7e7
.dword 0x7fd7d284d22cd9ad
.dword 0x7fe9c4ac16f8b53d
.dword 0x3fdd955fc1f7a7e7
.dword 0x7fd7d284d22cd9ad
.dword 0x7fe9c4ac16f8b53d
.dword 0x3fdd955fc1f7a7e7
.dword 0x7fd7d284d22cd9ad
.dword 0x7fe6ec85d8ef4d3f
.dword 0x3fecd177dd63d0aa
.dword 0x7fe4a503c62cfadd
.dword 0x7fe6ec85d8ef4d3f
.dword 0x3fecd177dd63d0aa
.dword 0x7fe4a503c62cfadd
.dword 0x7fe6ec85d8ef4d3f
.dword 0x3fecd177dd63d0aa
.dword 0x7fe4a503c62cfadd
.dword 0x7fe6ec85d8ef4d3f
.dword 0x3fecd177dd63d0aa
.dword 0x7fe4a503c62cfadd
.dword 0x7fe6ec85d8ef4d3f
.dword 0x3fecd177dd63d0aa
.dword 0x7fe4a503c62cfadd
.dword 0x7fe1a24627666f3c
.dword 0x3ff3392e0c107348
.dword 0x7fe52fb8288b883b
.dword 0x7fe1a24627666f3c
.dword 0x3ff3392e0c107348
.dword 0x7fe52fb8288b883b
.dword 0x7fe1a24627666f3c
.dword 0x3ff3392e0c107348
.dword 0x7fe52fb8288b883b
.dword 0x7fe1a24627666f3c
.dword 0x3ff3392e0c107348
.dword 0x7fe52fb8288b883b
.dword 0x7fe1a24627666f3c
.dword 0x3ff3392e0c107348
.dword 0x7fe52fb8288b883b
.dword 0x7fd970d2dec24b47
.dword 0x40041348151b216e
.dword 0x7fefebb02e1f878d
.dword 0x7fd970d2dec24b47
.dword 0x40041348151b216e
.dword 0x7fefebb02e1f878d
.dword 0x7fd970d2dec24b47
.dword 0x40041348151b216e
.dword 0x7fefebb02e1f878d
.dword 0x7fd970d2dec24b47
.dword 0x40041348151b216e
.dword 0x7fefebb02e1f878d
.dword 0x7fd970d2dec24b47
.dword 0x40041348151b216e
.dword 0x7fefebb02e1f878d
.dword 0x7fd863a1b435dbbb
.dword 0x3ff2836c6ec995be
.dword 0x7fdc386af013d02d
.dword 0x7fd863a1b435dbbb
.dword 0x3ff2836c6ec995be
.dword 0x7fdc386af013d02d
.dword 0x7fd863a1b435dbbb
.dword 0x3ff2836c6ec995be
.dword 0x7fdc386af013d02d
.dword 0x7fd863a1b435dbbb
.dword 0x3ff2836c6ec995be
.dword 0x7fdc386af013d02d
.dword 0x7fd863a1b435dbbb
.dword 0x3ff2836c6ec995be
.dword 0x7fdc386af013d02d
.dword 0x7fc8152cec29ef7f
.dword 0x3ffba9139c781bd0
.dword 0x7fd4d11c7ed6eb1b
.dword 0x7fc8152cec29ef7f
.dword 0x3ffba9139c781bd0
.dword 0x7fd4d11c7ed6eb1b
.dword 0x7fc8152cec29ef7f
.dword 0x3ffba9139c781bd0
.dword 0x7fd4d11c7ed6eb1b
.dword 0x7fc8152cec29ef7f
.dword 0x3ffba9139c781bd0
.dword 0x7fd4d11c7ed6eb1b
.dword 0x7fc8152cec29ef7f
.dword 0x3ffba9139c781bd0
.dword 0x7fd4d11c7ed6eb1b
.dword 0x7fe92a566f38682f
.dword 0x3fe7264e5116401a
.dword 0x7fe2348dfd8bf745
.dword 0x7fe92a566f38682f
.dword 0x3fe7264e5116401a
.dword 0x7fe2348dfd8bf745
.dword 0x7fe92a566f38682f
.dword 0x3fe7264e5116401a
.dword 0x7fe2348dfd8bf745
.dword 0x7fe92a566f38682f
.dword 0x3fe7264e5116401a
.dword 0x7fe2348dfd8bf745
.dword 0x7fe92a566f38682f
.dword 0x3fe7264e5116401a
.dword 0x7fe2348dfd8bf745
.dword 0x7fcec34018f9e9cb
.dword 0x40030d63352622ac
.dword 0x7fe250ccc004e0f7
.dword 0x7fcec34018f9e9cb
.dword 0x40030d63352622ac
.dword 0x7fe250ccc004e0f7
.dword 0x7fcec34018f9e9cb
.dword 0x40030d63352622ac
.dword 0x7fe250ccc004e0f7
.dword 0x7fcec34018f9e9cb
.dword 0x40030d63352622ac
.dword 0x7fe250ccc004e0f7
.dword 0x7fcec34018f9e9cb
.dword 0x40030d63352622ac
.dword 0x7fe250ccc004e0f7
.dword 0x7fc4e335bc1ddd33
.dword 0x3fff08485d88dfd4
.dword 0x7fd4418417f288ed
.dword 0x7fc4e335bc1ddd33
.dword 0x3fff08485d88dfd4
.dword 0x7fd4418417f288ed
.dword 0x7fc4e335bc1ddd33
.dword 0x3fff08485d88dfd4
.dword 0x7fd4418417f288ed
.dword 0x7fc4e335bc1ddd33
.dword 0x3fff08485d88dfd4
.dword 0x7fd4418417f288ed
.dword 0x7fc4e335bc1ddd33
.dword 0x3fff08485d88dfd4
.dword 0x7fd4418417f288ed
.dword 0x7fed23797880df4f
.dword 0x3fdd756466804b1c
.dword 0x7fdad30b3586df9d
.dword 0x7fed23797880df4f
.dword 0x3fdd756466804b1c
.dword 0x7fdad30b3586df9d
.dword 0x7fed23797880df4f
.dword 0x3fdd756466804b1c
.dword 0x7fdad30b3586df9d
.dword 0x7fed23797880df4f
.dword 0x3fdd756466804b1c
.dword 0x7fdad30b3586df9d
.dword 0x7fed23797880df4f
.dword 0x3fdd756466804b1c
.dword 0x7fdad30b3586df9d
.dword 0x7fcc5d403b21099f
.dword 0x40045d0bd32bed6c
.dword 0x7fe20cc1a2dc61a1
.dword 0x7fcc5d403b21099f
.dword 0x40045d0bd32bed6c
.dword 0x7fe20cc1a2dc61a1
.dword 0x7fcc5d403b21099f
.dword 0x40045d0bd32bed6c
.dword 0x7fe20cc1a2dc61a1
.dword 0x7fcc5d403b21099f
.dword 0x40045d0bd32bed6c
.dword 0x7fe20cc1a2dc61a1
.dword 0x7fcc5d403b21099f
.dword 0x40045d0bd32bed6c
.dword 0x7fe20cc1a2dc61a1
.dword 0x7fd8da0eee5f982f
.dword 0x3fe262463c31332c
.dword 0x7fcc8df57f1f0ae3
.dword 0x7fd8da0eee5f982f
.dword 0x3fe262463c31332c
.dword 0x7fcc8df57f1f0ae3
.dword 0x7fd8da0eee5f982f
.dword 0x3fe262463c31332c
.dword 0x7fcc8df57f1f0ae3
.dword 0x7fd8da0eee5f982f
.dword 0x3fe262463c31332c
.dword 0x7fcc8df57f1f0ae3
.dword 0x7fd8da0eee5f982f
.dword 0x3fe262463c31332c
.dword 0x7fcc8df57f1f0ae3
.dword 0x7fc35406181dfc67
.dword 0x400e1d92982a5bdb
.dword 0x7fe230a26766788c
.dword 0x7fc35406181dfc67
.dword 0x400e1d92982a5bdb
.dword 0x7fe230a26766788c
.dword 0x7fc35406181dfc67
.dword 0x400e1d92982a5bdb
.dword 0x7fe230a26766788c
.dword 0x7fc35406181dfc67
.dword 0x400e1d92982a5bdb
.dword 0x7fe230a26766788c
.dword 0x7fc35406181dfc67
.dword 0x400e1d92982a5bdb
.dword 0x7fe230a26766788c
.dword 0x7fc33d0b32f07673
.dword 0x3ffdfd140f0f49e2
.dword 0x7fd20778d5e9769f
.dword 0x7fc33d0b32f07673
.dword 0x3ffdfd140f0f49e2
.dword 0x7fd20778d5e9769f
.dword 0x7fc33d0b32f07673
.dword 0x3ffdfd140f0f49e2
.dword 0x7fd20778d5e9769f
.dword 0x7fc33d0b32f07673
.dword 0x3ffdfd140f0f49e2
.dword 0x7fd20778d5e9769f
.dword 0x7fc33d0b32f07673
.dword 0x3ffdfd140f0f49e2
.dword 0x7fd20778d5e9769f
.dword 0x7f9f350697c4563f
.dword 0x40313d9f585b265d
.dword 0x7fe0d043fad51483
.dword 0x7f9f350697c4563f
.dword 0x40313d9f585b265d
.dword 0x7fe0d043fad51483
.dword 0x7f9f350697c4563f
.dword 0x40313d9f585b265d
.dword 0x7fe0d043fad51483
.dword 0x7f9f350697c4563f
.dword 0x40313d9f585b265d
.dword 0x7fe0d043fad51483
.dword 0x7f9f350697c4563f
.dword 0x40313d9f585b265d
.dword 0x7fe0d043fad51483
.dword 0x7fb2efc48b367db7
.dword 0x401c222f1cec7041
.dword 0x7fe0a6069be9fb0f
.dword 0x7fb2efc48b367db7
.dword 0x401c222f1cec7041
.dword 0x7fe0a6069be9fb0f
.dword 0x7fb2efc48b367db7
.dword 0x401c222f1cec7041
.dword 0x7fe0a6069be9fb0f
.dword 0x7fb2efc48b367db7
.dword 0x401c222f1cec7041
.dword 0x7fe0a6069be9fb0f
.dword 0x7fb2efc48b367db7
.dword 0x401c222f1cec7041
.dword 0x7fe0a6069be9fb0f
.dword 0x7fdfa664451d7f79
.dword 0x3fc37596618df133
.dword 0x7fb33f18a418ff2f
.dword 0x7fdfa664451d7f79
.dword 0x3fc37596618df133
.dword 0x7fb33f18a418ff2f
.dword 0x7fdfa664451d7f79
.dword 0x3fc37596618df133
.dword 0x7fb33f18a418ff2f
.dword 0x7fdfa664451d7f79
.dword 0x3fc37596618df133
.dword 0x7fb33f18a418ff2f
.dword 0x7fdfa664451d7f79
.dword 0x3fc37596618df133
.dword 0x7fb33f18a418ff2f
.dword 0x7fe1820d688af302
.dword 0x3feb2424702b6247
.dword 0x7fddb3031df1b4d9
.dword 0x7fe1820d688af302
.dword 0x3feb2424702b6247
.dword 0x7fddb3031df1b4d9
.dword 0x7fe1820d688af302
.dword 0x3feb2424702b6247
.dword 0x7fddb3031df1b4d9
.dword 0x7fe1820d688af302
.dword 0x3feb2424702b6247
.dword 0x7fddb3031df1b4d9
.dword 0x7fe1820d688af302
.dword 0x3feb2424702b6247
.dword 0x7fddb3031df1b4d9
.dword 0x7fe7689c5eb40a1f
.dword 0x3fc3f42185eb0526
.dword 0x7fbd31660cc9f4c7
.dword 0x7fe7689c5eb40a1f
.dword 0x3fc3f42185eb0526
.dword 0x7fbd31660cc9f4c7
.dword 0x7fe7689c5eb40a1f
.dword 0x3fc3f42185eb0526
.dword 0x7fbd31660cc9f4c7
.dword 0x7fe7689c5eb40a1f
.dword 0x3fc3f42185eb0526
.dword 0x7fbd31660cc9f4c7
.dword 0x7fe7689c5eb40a1f
.dword 0x3fc3f42185eb0526
.dword 0x7fbd31660cc9f4c7
.dword 0x7fd5fb8b9f14c19d
.dword 0x3fccea965fb571c3
.dword 0x7fb3dd40e50b5657
.dword 0x7fd5fb8b9f14c19d
.dword 0x3fccea965fb571c3
.dword 0x7fb3dd40e50b5657
.dword 0x7fd5fb8b9f14c19d
.dword 0x3fccea965fb571c3
.dword 0x7fb3dd40e50b5657
.dword 0x7fd5fb8b9f14c19d
.dword 0x3fccea965fb571c3
.dword 0x7fb3dd40e50b5657
.dword 0x7fd5fb8b9f14c19d
.dword 0x3fccea965fb571c3
.dword 0x7fb3dd40e50b5657
.dword 0x7fee64bc90d6330a
.dword 0x3fe79b6b2db9076f
.dword 0x7fe66c0545bb6d20
.dword 0x7fee64bc90d6330a
.dword 0x3fe79b6b2db9076f
.dword 0x7fe66c0545bb6d20
.dword 0x7fee64bc90d6330a
.dword 0x3fe79b6b2db9076f
.dword 0x7fe66c0545bb6d20
.dword 0x7fee64bc90d6330a
.dword 0x3fe79b6b2db9076f
.dword 0x7fe66c0545bb6d20
.dword 0x7fee64bc90d6330a
.dword 0x3fe79b6b2db9076f
.dword 0x7fe66c0545bb6d20
.dword 0x7fefc6fc16f59a72
.dword 0x3fe8a86f00163dab
.dword 0x7fe87c7ff70142ef
.dword 0x7fefc6fc16f59a72
.dword 0x3fe8a86f00163dab
.dword 0x7fe87c7ff70142ef
.dword 0x7fefc6fc16f59a72
.dword 0x3fe8a86f00163dab
.dword 0x7fe87c7ff70142ef
.dword 0x7fefc6fc16f59a72
.dword 0x3fe8a86f00163dab
.dword 0x7fe87c7ff70142ef
.dword 0x7fefc6fc16f59a72
.dword 0x3fe8a86f00163dab
.dword 0x7fe87c7ff70142ef
.dword 0x7fd7b61610417617
.dword 0x3fc1fcfbfd7f78c9
.dword 0x7faaa860bcebd8af
.dword 0x7fd7b61610417617
.dword 0x3fc1fcfbfd7f78c9
.dword 0x7faaa860bcebd8af
.dword 0x7fd7b61610417617
.dword 0x3fc1fcfbfd7f78c9
.dword 0x7faaa860bcebd8af
.dword 0x7fd7b61610417617
.dword 0x3fc1fcfbfd7f78c9
.dword 0x7faaa860bcebd8af
.dword 0x7fd7b61610417617
.dword 0x3fc1fcfbfd7f78c9
.dword 0x7faaa860bcebd8af
.dword 0x7fa0bfb9af4c823f
.dword 0x4015308ec38881fa
.dword 0x7fc62e785561d103
.dword 0x7fa0bfb9af4c823f
.dword 0x4015308ec38881fa
.dword 0x7fc62e785561d103
.dword 0x7fa0bfb9af4c823f
.dword 0x4015308ec38881fa
.dword 0x7fc62e785561d103
.dword 0x7fa0bfb9af4c823f
.dword 0x4015308ec38881fa
.dword 0x7fc62e785561d103
.dword 0x7fa0bfb9af4c823f
.dword 0x4015308ec38881fa
.dword 0x7fc62e785561d103
.dword 0x7fe46f2fe4f42ca2
.dword 0x3fead5bc4ca22702
.dword 0x7fe122d33efb5c32
.dword 0x7fe46f2fe4f42ca2
.dword 0x3fead5bc4ca22702
.dword 0x7fe122d33efb5c32
.dword 0x7fe46f2fe4f42ca2
.dword 0x3fead5bc4ca22702
.dword 0x7fe122d33efb5c32
.dword 0x7fe46f2fe4f42ca2
.dword 0x3fead5bc4ca22702
.dword 0x7fe122d33efb5c32
.dword 0x7fe46f2fe4f42ca2
.dword 0x3fead5bc4ca22702
.dword 0x7fe122d33efb5c32
.dword 0x7fb5ecba47fc8667
.dword 0x4023107e90cda7fd
.dword 0x7fea1fb75e6b2ed1
.dword 0x7fb5ecba47fc8667
.dword 0x4023107e90cda7fd
.dword 0x7fea1fb75e6b2ed1
.dword 0x7fb5ecba47fc8667
.dword 0x4023107e90cda7fd
.dword 0x7fea1fb75e6b2ed1
.dword 0x7fb5ecba47fc8667
.dword 0x4023107e90cda7fd
.dword 0x7fea1fb75e6b2ed1
.dword 0x7fb5ecba47fc8667
.dword 0x4023107e90cda7fd
.dword 0x7fea1fb75e6b2ed1
.dword 0x7fed825bfd7c5ea9
.dword 0x3fa1b7fbece18bf1
.dword 0x7fa056eaadaea1df
.dword 0x7fed825bfd7c5ea9
.dword 0x3fa1b7fbece18bf1
.dword 0x7fa056eaadaea1df
.dword 0x7fed825bfd7c5ea9
.dword 0x3fa1b7fbece18bf1
.dword 0x7fa056eaadaea1df
.dword 0x7fed825bfd7c5ea9
.dword 0x3fa1b7fbece18bf1
.dword 0x7fa056eaadaea1df
.dword 0x7fed825bfd7c5ea9
.dword 0x3fa1b7fbece18bf1
.dword 0x7fa056eaadaea1df
.dword 0x7feeeb4761e47455
.dword 0x3fdc873bef0856d7
.dword 0x7fdb9088f38dc9ef
.dword 0x7feeeb4761e47455
.dword 0x3fdc873bef0856d7
.dword 0x7fdb9088f38dc9ef
.dword 0x7feeeb4761e47455
.dword 0x3fdc873bef0856d7
.dword 0x7fdb9088f38dc9ef
.dword 0x7feeeb4761e47455
.dword 0x3fdc873bef0856d7
.dword 0x7fdb9088f38dc9ef
.dword 0x7feeeb4761e47455
.dword 0x3fdc873bef0856d7
.dword 0x7fdb9088f38dc9ef
.dword 0x7feb7561a51a6716
.dword 0x3fd4de99f77c351a
.dword 0x7fd1e85f7a31631d
.dword 0x7feb7561a51a6716
.dword 0x3fd4de99f77c351a
.dword 0x7fd1e85f7a31631d
.dword 0x7feb7561a51a6716
.dword 0x3fd4de99f77c351a
.dword 0x7fd1e85f7a31631d
.dword 0x7feb7561a51a6716
.dword 0x3fd4de99f77c351a
.dword 0x7fd1e85f7a31631d
.dword 0x7feb7561a51a6716
.dword 0x3fd4de99f77c351a
.dword 0x7fd1e85f7a31631d
.dword 0x7fee11c9b022ae56
.dword 0x3fb6cc42eab1a937
.dword 0x7fb56c2af013b477
.dword 0x7fee11c9b022ae56
.dword 0x3fb6cc42eab1a937
.dword 0x7fb56c2af013b477
.dword 0x7fee11c9b022ae56
.dword 0x3fb6cc42eab1a937
.dword 0x7fb56c2af013b477
.dword 0x7fee11c9b022ae56
.dword 0x3fb6cc42eab1a937
.dword 0x7fb56c2af013b477
.dword 0x7fee11c9b022ae56
.dword 0x3fb6cc42eab1a937
.dword 0x7fb56c2af013b477
.dword 0x7fef4c67f9742a6f
.dword 0x3fd2b809bf6aeb86
.dword 0x7fd24efb5ae19209
.dword 0x7fef4c67f9742a6f
.dword 0x3fd2b809bf6aeb86
.dword 0x7fd24efb5ae19209
.dword 0x7fef4c67f9742a6f
.dword 0x3fd2b809bf6aeb86
.dword 0x7fd24efb5ae19209
.dword 0x7fef4c67f9742a6f
.dword 0x3fd2b809bf6aeb86
.dword 0x7fd24efb5ae19209
.dword 0x7fef4c67f9742a6f
.dword 0x3fd2b809bf6aeb86
.dword 0x7fd24efb5ae19209
.dword 0x7fb04cafda9b0ce7
.dword 0x402922c1147c87ff
.dword 0x7fe99b3a6d2ac342
.dword 0x7fb04cafda9b0ce7
.dword 0x402922c1147c87ff
.dword 0x7fe99b3a6d2ac342
.dword 0x7fb04cafda9b0ce7
.dword 0x402922c1147c87ff
.dword 0x7fe99b3a6d2ac342
.dword 0x7fb04cafda9b0ce7
.dword 0x402922c1147c87ff
.dword 0x7fe99b3a6d2ac342
.dword 0x7fb04cafda9b0ce7
.dword 0x402922c1147c87ff
.dword 0x7fe99b3a6d2ac342
.dword 0x7fd1b0a743d1c7c5
.dword 0x40049f03722a8815
.dword 0x7fe6cca06251390e
.dword 0x7fd1b0a743d1c7c5
.dword 0x40049f03722a8815
.dword 0x7fe6cca06251390e
.dword 0x7fd1b0a743d1c7c5
.dword 0x40049f03722a8815
.dword 0x7fe6cca06251390e
.dword 0x7fd1b0a743d1c7c5
.dword 0x40049f03722a8815
.dword 0x7fe6cca06251390e
.dword 0x7fd1b0a743d1c7c5
.dword 0x40049f03722a8815
.dword 0x7fe6cca06251390e
.dword 0x7fe8e974adc206cd
.dword 0x3fe260880d31e976
.dword 0x7fdc9cefd477fe03
.dword 0x7fe8e974adc206cd
.dword 0x3fe260880d31e976
.dword 0x7fdc9cefd477fe03
.dword 0x7fe8e974adc206cd
.dword 0x3fe260880d31e976
.dword 0x7fdc9cefd477fe03
.dword 0x7fe8e974adc206cd
.dword 0x3fe260880d31e976
.dword 0x7fdc9cefd477fe03
.dword 0x7fe8e974adc206cd
.dword 0x3fe260880d31e976
.dword 0x7fdc9cefd477fe03
.dword 0x7fed14ade7bc89c9
.dword 0x3fdf0c9a79b5326b
.dword 0x7fdc377c9bd553c7
.dword 0x7fed14ade7bc89c9
.dword 0x3fdf0c9a79b5326b
.dword 0x7fdc377c9bd553c7
.dword 0x7fed14ade7bc89c9
.dword 0x3fdf0c9a79b5326b
.dword 0x7fdc377c9bd553c7
.dword 0x7fed14ade7bc89c9
.dword 0x3fdf0c9a79b5326b
.dword 0x7fdc377c9bd553c7
.dword 0x7fed14ade7bc89c9
.dword 0x3fdf0c9a79b5326b
.dword 0x7fdc377c9bd553c7
.dword 0x7fc18b935d178c4f
.dword 0x401b87b52cfcd2bd
.dword 0x7fee305904c15338
.dword 0x7fc18b935d178c4f
.dword 0x401b87b52cfcd2bd
.dword 0x7fee305904c15338
.dword 0x7fc18b935d178c4f
.dword 0x401b87b52cfcd2bd
.dword 0x7fee305904c15338
.dword 0x7fc18b935d178c4f
.dword 0x401b87b52cfcd2bd
.dword 0x7fee305904c15338
.dword 0x7fc18b935d178c4f
.dword 0x401b87b52cfcd2bd
.dword 0x7fee305904c15338
.dword 0x7fe6339ce014c510
.dword 0x3ff23fcd3c280867
.dword 0x7fe952987e8cbf7d
.dword 0x7fe6339ce014c510
.dword 0x3ff23fcd3c280867
.dword 0x7fe952987e8cbf7d
.dword 0x7fe6339ce014c510
.dword 0x3ff23fcd3c280867
.dword 0x7fe952987e8cbf7d
.dword 0x7fe6339ce014c510
.dword 0x3ff23fcd3c280867
.dword 0x7fe952987e8cbf7d
.dword 0x7fe6339ce014c510
.dword 0x3ff23fcd3c280867
.dword 0x7fe952987e8cbf7d
.dword 0x7fec95dea29dfb56
.dword 0x3fe030f05c9863cc
.dword 0x7fdced4dabff5ebf
.dword 0x7fec95dea29dfb56
.dword 0x3fe030f05c9863cc
.dword 0x7fdced4dabff5ebf
.dword 0x7fec95dea29dfb56
.dword 0x3fe030f05c9863cc
.dword 0x7fdced4dabff5ebf
.dword 0x7fec95dea29dfb56
.dword 0x3fe030f05c9863cc
.dword 0x7fdced4dabff5ebf
.dword 0x7fec95dea29dfb56
.dword 0x3fe030f05c9863cc
.dword 0x7fdced4dabff5ebf
.dword 0x7fed2a2cdd0f8cb3
.dword 0x3fefdf05ad534fe3
.dword 0x7fed0c1e8b5a87f3
.dword 0x7fed2a2cdd0f8cb3
.dword 0x3fefdf05ad534fe3
.dword 0x7fed0c1e8b5a87f3
.dword 0x7fed2a2cdd0f8cb3
.dword 0x3fefdf05ad534fe3
.dword 0x7fed0c1e8b5a87f3
.dword 0x7fed2a2cdd0f8cb3
.dword 0x3fefdf05ad534fe3
.dword 0x7fed0c1e8b5a87f3
.dword 0x7fed2a2cdd0f8cb3
.dword 0x3fefdf05ad534fe3
.dword 0x7fed0c1e8b5a87f3
.dword 0x7fb5631ca527644f
.dword 0x401d985d78d050af
.dword 0x7fe3c7a736865391
.dword 0x7fb5631ca527644f
.dword 0x401d985d78d050af
.dword 0x7fe3c7a736865391
.dword 0x7fb5631ca527644f
.dword 0x401d985d78d050af
.dword 0x7fe3c7a736865391
.dword 0x7fb5631ca527644f
.dword 0x401d985d78d050af
.dword 0x7fe3c7a736865391
.dword 0x7fb5631ca527644f
.dword 0x401d985d78d050af
.dword 0x7fe3c7a736865391
.dword 0x7fc041c0b9ddaa1b
.dword 0x401a396879bb08c6
.dword 0x7feaa52d93b25d1f
.dword 0x7fc041c0b9ddaa1b
.dword 0x401a396879bb08c6
.dword 0x7feaa52d93b25d1f
.dword 0x7fc041c0b9ddaa1b
.dword 0x401a396879bb08c6
.dword 0x7feaa52d93b25d1f
.dword 0x7fc041c0b9ddaa1b
.dword 0x401a396879bb08c6
.dword 0x7feaa52d93b25d1f
.dword 0x7fc041c0b9ddaa1b
.dword 0x401a396879bb08c6
.dword 0x7feaa52d93b25d1f
.dword 0x7fe422628c1f9624
.dword 0x3ff1d5d6936bdb26
.dword 0x7fe671a07a34a94c
.dword 0x7fe422628c1f9624
.dword 0x3ff1d5d6936bdb26
.dword 0x7fe671a07a34a94c
.dword 0x7fe422628c1f9624
.dword 0x3ff1d5d6936bdb26
.dword 0x7fe671a07a34a94c
.dword 0x7fe422628c1f9624
.dword 0x3ff1d5d6936bdb26
.dword 0x7fe671a07a34a94c
.dword 0x7fe422628c1f9624
.dword 0x3ff1d5d6936bdb26
.dword 0x7fe671a07a34a94c
.dword 0x7fdd9d183dcaf23f
.dword 0x3fff1b40133408ed
.dword 0x7fecc9675446a76e
.dword 0x7fdd9d183dcaf23f
.dword 0x3fff1b40133408ed
.dword 0x7fecc9675446a76e
.dword 0x7fdd9d183dcaf23f
.dword 0x3fff1b40133408ed
.dword 0x7fecc9675446a76e
.dword 0x7fdd9d183dcaf23f
.dword 0x3fff1b40133408ed
.dword 0x7fecc9675446a76e
.dword 0x7fdd9d183dcaf23f
.dword 0x3fff1b40133408ed
.dword 0x7fecc9675446a76e
.dword 0x7fbafd8e8172cff7
.dword 0x40187e14bf298e14
.dword 0x7fe4a882c1e9583d
.dword 0x7fbafd8e8172cff7
.dword 0x40187e14bf298e14
.dword 0x7fe4a882c1e9583d
.dword 0x7fbafd8e8172cff7
.dword 0x40187e14bf298e14
.dword 0x7fe4a882c1e9583d
.dword 0x7fbafd8e8172cff7
.dword 0x40187e14bf298e14
.dword 0x7fe4a882c1e9583d
.dword 0x7fbafd8e8172cff7
.dword 0x40187e14bf298e14
.dword 0x7fe4a882c1e9583d
.dword 0x7fe418a2feac319d
.dword 0x3fc3d60d72ed2614
.dword 0x7fb8ea1bf6d88f07
.dword 0x7fe418a2feac319d
.dword 0x3fc3d60d72ed2614
.dword 0x7fb8ea1bf6d88f07
.dword 0x7fe418a2feac319d
.dword 0x3fc3d60d72ed2614
.dword 0x7fb8ea1bf6d88f07
.dword 0x7fe418a2feac319d
.dword 0x3fc3d60d72ed2614
.dword 0x7fb8ea1bf6d88f07
.dword 0x7fe418a2feac319d
.dword 0x3fc3d60d72ed2614
.dword 0x7fb8ea1bf6d88f07
.dword 0x7fe3691acd45f727
.dword 0x3fce71eee6788145
.dword 0x7fc277a5309a56af
.dword 0x7fe3691acd45f727
.dword 0x3fce71eee6788145
.dword 0x7fc277a5309a56af
.dword 0x7fe3691acd45f727
.dword 0x3fce71eee6788145
.dword 0x7fc277a5309a56af
.dword 0x7fe3691acd45f727
.dword 0x3fce71eee6788145
.dword 0x7fc277a5309a56af
.dword 0x7fe3691acd45f727
.dword 0x3fce71eee6788145
.dword 0x7fc277a5309a56af
.dword 0x7fc28e011ae50327
.dword 0x4011433eebd8af82
.dword 0x7fe404dcc8f93360
.dword 0x7fc28e011ae50327
.dword 0x4011433eebd8af82
.dword 0x7fe404dcc8f93360
.dword 0x7fc28e011ae50327
.dword 0x4011433eebd8af82
.dword 0x7fe404dcc8f93360
.dword 0x7fc28e011ae50327
.dword 0x4011433eebd8af82
.dword 0x7fe404dcc8f93360
.dword 0x7fc28e011ae50327
.dword 0x4011433eebd8af82
.dword 0x7fe404dcc8f93360
.dword 0x7fb9a3c26bde85df
.dword 0x400ce9b661b8773e
.dword 0x7fd72a8c9fb21963
.dword 0x7fb9a3c26bde85df
.dword 0x400ce9b661b8773e
.dword 0x7fd72a8c9fb21963
.dword 0x7fb9a3c26bde85df
.dword 0x400ce9b661b8773e
.dword 0x7fd72a8c9fb21963
.dword 0x7fb9a3c26bde85df
.dword 0x400ce9b661b8773e
.dword 0x7fd72a8c9fb21963
.dword 0x7fb9a3c26bde85df
.dword 0x400ce9b661b8773e
.dword 0x7fd72a8c9fb21963
.dword 0x7fdf77ea389b4723
.dword 0x3fee84382d87f02b
.dword 0x7fde027179db45b7
.dword 0x7fdf77ea389b4723
.dword 0x3fee84382d87f02b
.dword 0x7fde027179db45b7
.dword 0x7fdf77ea389b4723
.dword 0x3fee84382d87f02b
.dword 0x7fde027179db45b7
.dword 0x7fdf77ea389b4723
.dword 0x3fee84382d87f02b
.dword 0x7fde027179db45b7
.dword 0x7fdf77ea389b4723
.dword 0x3fee84382d87f02b
.dword 0x7fde027179db45b7
.dword 0x7fe90887e3335c40
.dword 0x3ff0a37a4da7a4ac
.dword 0x7fea084e26197488
.dword 0x7fe90887e3335c40
.dword 0x3ff0a37a4da7a4ac
.dword 0x7fea084e26197488
.dword 0x7fe90887e3335c40
.dword 0x3ff0a37a4da7a4ac
.dword 0x7fea084e26197488
.dword 0x7fe90887e3335c40
.dword 0x3ff0a37a4da7a4ac
.dword 0x7fea084e26197488
.dword 0x7fe90887e3335c40
.dword 0x3ff0a37a4da7a4ac
.dword 0x7fea084e26197488
.dword 0x7fe3a13d100f2dec
.dword 0x3fe605083172db32
.dword 0x7fdb03e0667320ab
.dword 0x7fe3a13d100f2dec
.dword 0x3fe605083172db32
.dword 0x7fdb03e0667320ab
.dword 0x7fe3a13d100f2dec
.dword 0x3fe605083172db32
.dword 0x7fdb03e0667320ab
.dword 0x7fe3a13d100f2dec
.dword 0x3fe605083172db32
.dword 0x7fdb03e0667320ab
.dword 0x7fe3a13d100f2dec
.dword 0x3fe605083172db32
.dword 0x7fdb03e0667320ab
.dword 0x7fc8a82752785fdf
.dword 0x4013ac2fa289aaaf
.dword 0x7fee5107c113b71d
.dword 0x7fc8a82752785fdf
.dword 0x4013ac2fa289aaaf
.dword 0x7fee5107c113b71d
.dword 0x7fc8a82752785fdf
.dword 0x4013ac2fa289aaaf
.dword 0x7fee5107c113b71d
.dword 0x7fc8a82752785fdf
.dword 0x4013ac2fa289aaaf
.dword 0x7fee5107c113b71d
.dword 0x7fc8a82752785fdf
.dword 0x4013ac2fa289aaaf
.dword 0x7fee5107c113b71d
.dword 0x7feb4fcdae5be740
.dword 0x3fb2add24a985c2b
.dword 0x7fafe27d3ad5610f
.dword 0x7feb4fcdae5be740
.dword 0x3fb2add24a985c2b
.dword 0x7fafe27d3ad5610f
.dword 0x7feb4fcdae5be740
.dword 0x3fb2add24a985c2b
.dword 0x7fafe27d3ad5610f
.dword 0x7feb4fcdae5be740
.dword 0x3fb2add24a985c2b
.dword 0x7fafe27d3ad5610f
.dword 0x7feb4fcdae5be740
.dword 0x3fb2add24a985c2b
.dword 0x7fafe27d3ad5610f
.dword 0x7fd72b318fdc5f95
.dword 0x4004bd059a2635c8
.dword 0x7fee07b449fd6117
.dword 0x7fd72b318fdc5f95
.dword 0x4004bd059a2635c8
.dword 0x7fee07b449fd6117
.dword 0x7fd72b318fdc5f95
.dword 0x4004bd059a2635c8
.dword 0x7fee07b449fd6117
.dword 0x7fd72b318fdc5f95
.dword 0x4004bd059a2635c8
.dword 0x7fee07b449fd6117
.dword 0x7fd72b318fdc5f95
.dword 0x4004bd059a2635c8
.dword 0x7fee07b449fd6117
.dword 0x7fbcb550d5d3bb27
.dword 0x4019a0e906be3f15
.dword 0x7fe6fe02c97bce1c
.dword 0x7fbcb550d5d3bb27
.dword 0x4019a0e906be3f15
.dword 0x7fe6fe02c97bce1c
.dword 0x7fbcb550d5d3bb27
.dword 0x4019a0e906be3f15
.dword 0x7fe6fe02c97bce1c
.dword 0x7fbcb550d5d3bb27
.dword 0x4019a0e906be3f15
.dword 0x7fe6fe02c97bce1c
.dword 0x7fbcb550d5d3bb27
.dword 0x4019a0e906be3f15
.dword 0x7fe6fe02c97bce1c
.dword 0x7f9ed5da4e13385f
.dword 0x4039b0757709ef4e
.dword 0x7fe8c11bee4771c7
.dword 0x7f9ed5da4e13385f
.dword 0x4039b0757709ef4e
.dword 0x7fe8c11bee4771c7
.dword 0x7f9ed5da4e13385f
.dword 0x4039b0757709ef4e
.dword 0x7fe8c11bee4771c7
.dword 0x7f9ed5da4e13385f
.dword 0x4039b0757709ef4e
.dword 0x7fe8c11bee4771c7
.dword 0x7f9ed5da4e13385f
.dword 0x4039b0757709ef4e
.dword 0x7fe8c11bee4771c7
.dword 0x7fdcc2450fb79d8f
.dword 0x3fc04435bc917dff
.dword 0x7fad3cdf4baf5c7f
.dword 0x7fdcc2450fb79d8f
.dword 0x3fc04435bc917dff
.dword 0x7fad3cdf4baf5c7f
.dword 0x7fdcc2450fb79d8f
.dword 0x3fc04435bc917dff
.dword 0x7fad3cdf4baf5c7f
.dword 0x7fdcc2450fb79d8f
.dword 0x3fc04435bc917dff
.dword 0x7fad3cdf4baf5c7f
.dword 0x7fdcc2450fb79d8f
.dword 0x3fc04435bc917dff
.dword 0x7fad3cdf4baf5c7f
.dword 0x7fd29c4cac7a9799
.dword 0x3f95ce4d98b74cf6
.dword 0x7f795d1b3f609cff
.dword 0x7fd29c4cac7a9799
.dword 0x3f95ce4d98b74cf6
.dword 0x7f795d1b3f609cff
.dword 0x7fd29c4cac7a9799
.dword 0x3f95ce4d98b74cf6
.dword 0x7f795d1b3f609cff
.dword 0x7fd29c4cac7a9799
.dword 0x3f95ce4d98b74cf6
.dword 0x7f795d1b3f609cff
.dword 0x7fd29c4cac7a9799
.dword 0x3f95ce4d98b74cf6
.dword 0x7f795d1b3f609cff
.dword 0x7fe963da34a1fbd1
.dword 0x3ff2e31bf46211f7
.dword 0x7fedf8ba7f4f8dff
.dword 0x7fe963da34a1fbd1
.dword 0x3ff2e31bf46211f7
.dword 0x7fedf8ba7f4f8dff
.dword 0x7fe963da34a1fbd1
.dword 0x3ff2e31bf46211f7
.dword 0x7fedf8ba7f4f8dff
.dword 0x7fe963da34a1fbd1
.dword 0x3ff2e31bf46211f7
.dword 0x7fedf8ba7f4f8dff
.dword 0x7fe963da34a1fbd1
.dword 0x3ff2e31bf46211f7
.dword 0x7fedf8ba7f4f8dff
.dword 0x7fd97d71ffccd475
.dword 0x3ff39aaaebff3689
.dword 0x7fdf3b5f15d59e2f
.dword 0x7fd97d71ffccd475
.dword 0x3ff39aaaebff3689
.dword 0x7fdf3b5f15d59e2f
.dword 0x7fd97d71ffccd475
.dword 0x3ff39aaaebff3689
.dword 0x7fdf3b5f15d59e2f
.dword 0x7fd97d71ffccd475
.dword 0x3ff39aaaebff3689
.dword 0x7fdf3b5f15d59e2f
.dword 0x7fd97d71ffccd475
.dword 0x3ff39aaaebff3689
.dword 0x7fdf3b5f15d59e2f
.dword 0x7fe34c088d102eed
.dword 0x3fe0fca38061c1c4
.dword 0x7fd47cbb452b35f3
.dword 0x7fe34c088d102eed
.dword 0x3fe0fca38061c1c4
.dword 0x7fd47cbb452b35f3
.dword 0x7fe34c088d102eed
.dword 0x3fe0fca38061c1c4
.dword 0x7fd47cbb452b35f3
.dword 0x7fe34c088d102eed
.dword 0x3fe0fca38061c1c4
.dword 0x7fd47cbb452b35f3
.dword 0x7fe34c088d102eed
.dword 0x3fe0fca38061c1c4
.dword 0x7fd47cbb452b35f3
.dword 0x7fed89dbaa7a4f33
.dword 0x3fda127f980d5f2f
.dword 0x7fd81115cd8e3d03
.dword 0x7fed89dbaa7a4f33
.dword 0x3fda127f980d5f2f
.dword 0x7fd81115cd8e3d03
.dword 0x7fed89dbaa7a4f33
.dword 0x3fda127f980d5f2f
.dword 0x7fd81115cd8e3d03
.dword 0x7fed89dbaa7a4f33
.dword 0x3fda127f980d5f2f
.dword 0x7fd81115cd8e3d03
.dword 0x7fed89dbaa7a4f33
.dword 0x3fda127f980d5f2f
.dword 0x7fd81115cd8e3d03
.dword 0x7fe5188518a6f19d
.dword 0x3ff78f8cbc2f063e
.dword 0x7fef108407a7033a
.dword 0x7fe5188518a6f19d
.dword 0x3ff78f8cbc2f063e
.dword 0x7fef108407a7033a
.dword 0x7fe5188518a6f19d
.dword 0x3ff78f8cbc2f063e
.dword 0x7fef108407a7033a
.dword 0x7fe5188518a6f19d
.dword 0x3ff78f8cbc2f063e
.dword 0x7fef108407a7033a
.dword 0x7fe5188518a6f19d
.dword 0x3ff78f8cbc2f063e
.dword 0x7fef108407a7033a
.dword 0x7fe9c07029de79b8
.dword 0x3fd9b8038f3396c0
.dword 0x7fd4b26d02ee8b7f
.dword 0x7fe9c07029de79b8
.dword 0x3fd9b8038f3396c0
.dword 0x7fd4b26d02ee8b7f
.dword 0x7fe9c07029de79b8
.dword 0x3fd9b8038f3396c0
.dword 0x7fd4b26d02ee8b7f
.dword 0x7fe9c07029de79b8
.dword 0x3fd9b8038f3396c0
.dword 0x7fd4b26d02ee8b7f
.dword 0x7fe9c07029de79b8
.dword 0x3fd9b8038f3396c0
.dword 0x7fd4b26d02ee8b7f
.dword 0x7fd82899f3f923cd
.dword 0x3fe9e9b3e1b10de0
.dword 0x7fd39027b5136447
.dword 0x7fd82899f3f923cd
.dword 0x3fe9e9b3e1b10de0
.dword 0x7fd39027b5136447
.dword 0x7fd82899f3f923cd
.dword 0x3fe9e9b3e1b10de0
.dword 0x7fd39027b5136447
.dword 0x7fd82899f3f923cd
.dword 0x3fe9e9b3e1b10de0
.dword 0x7fd39027b5136447
.dword 0x7fd82899f3f923cd
.dword 0x3fe9e9b3e1b10de0
.dword 0x7fd39027b5136447
.dword 0x7fdea061fbefa949
.dword 0x3fd30410dae8f33d
.dword 0x7fc2331e5b8a5787
.dword 0x7fdea061fbefa949
.dword 0x3fd30410dae8f33d
.dword 0x7fc2331e5b8a5787
.dword 0x7fdea061fbefa949
.dword 0x3fd30410dae8f33d
.dword 0x7fc2331e5b8a5787
.dword 0x7fdea061fbefa949
.dword 0x3fd30410dae8f33d
.dword 0x7fc2331e5b8a5787
.dword 0x7fdea061fbefa949
.dword 0x3fd30410dae8f33d
.dword 0x7fc2331e5b8a5787
.dword 0x7fd125e354d1e3c9
.dword 0x3ffc58f1f9e05a4f
.dword 0x7fde61a18d4013af
.dword 0x7fd125e354d1e3c9
.dword 0x3ffc58f1f9e05a4f
.dword 0x7fde61a18d4013af
.dword 0x7fd125e354d1e3c9
.dword 0x3ffc58f1f9e05a4f
.dword 0x7fde61a18d4013af
.dword 0x7fd125e354d1e3c9
.dword 0x3ffc58f1f9e05a4f
.dword 0x7fde61a18d4013af
.dword 0x7fd125e354d1e3c9
.dword 0x3ffc58f1f9e05a4f
.dword 0x7fde61a18d4013af
.dword 0x7fec232ce1afdd5d
.dword 0x3fe64763af91c8ad
.dword 0x7fe396f48df10de5
.dword 0x7fec232ce1afdd5d
.dword 0x3fe64763af91c8ad
.dword 0x7fe396f48df10de5
.dword 0x7fec232ce1afdd5d
.dword 0x3fe64763af91c8ad
.dword 0x7fe396f48df10de5
.dword 0x7fec232ce1afdd5d
.dword 0x3fe64763af91c8ad
.dword 0x7fe396f48df10de5
.dword 0x7fec232ce1afdd5d
.dword 0x3fe64763af91c8ad
.dword 0x7fe396f48df10de5
.dword 0x7fd04e0b27da3cc5
.dword 0x3ff9c9081d6ba08b
.dword 0x7fda46ce1f6a5a39
.dword 0x7fd04e0b27da3cc5
.dword 0x3ff9c9081d6ba08b
.dword 0x7fda46ce1f6a5a39
.dword 0x7fd04e0b27da3cc5
.dword 0x3ff9c9081d6ba08b
.dword 0x7fda46ce1f6a5a39
.dword 0x7fd04e0b27da3cc5
.dword 0x3ff9c9081d6ba08b
.dword 0x7fda46ce1f6a5a39
.dword 0x7fd04e0b27da3cc5
.dword 0x3ff9c9081d6ba08b
.dword 0x7fda46ce1f6a5a39
.dword 0x7fdce5ebb2a2b181
.dword 0x40006f43318ba050
.dword 0x7fedaee022114709
.dword 0x7fdce5ebb2a2b181
.dword 0x40006f43318ba050
.dword 0x7fedaee022114709
.dword 0x7fdce5ebb2a2b181
.dword 0x40006f43318ba050
.dword 0x7fedaee022114709
.dword 0x7fdce5ebb2a2b181
.dword 0x40006f43318ba050
.dword 0x7fedaee022114709
.dword 0x7fdce5ebb2a2b181
.dword 0x40006f43318ba050
.dword 0x7fedaee022114709
.dword 0x7fd71b6dc9801ef7
.dword 0x3fe6b7942aa29dad
.dword 0x7fd0676b54059abb
.dword 0x7fd71b6dc9801ef7
.dword 0x3fe6b7942aa29dad
.dword 0x7fd0676b54059abb
.dword 0x7fd71b6dc9801ef7
.dword 0x3fe6b7942aa29dad
.dword 0x7fd0676b54059abb
.dword 0x7fd71b6dc9801ef7
.dword 0x3fe6b7942aa29dad
.dword 0x7fd0676b54059abb
.dword 0x7fd71b6dc9801ef7
.dword 0x3fe6b7942aa29dad
.dword 0x7fd0676b54059abb
.dword 0x7fbf9d6388095197
.dword 0x40131752ce11af56
.dword 0x7fe2dc7e0735054e
.dword 0x7fbf9d6388095197
.dword 0x40131752ce11af56
.dword 0x7fe2dc7e0735054e
.dword 0x7fbf9d6388095197
.dword 0x40131752ce11af56
.dword 0x7fe2dc7e0735054e
.dword 0x7fbf9d6388095197
.dword 0x40131752ce11af56
.dword 0x7fe2dc7e0735054e
.dword 0x7fbf9d6388095197
.dword 0x40131752ce11af56
.dword 0x7fe2dc7e0735054e
.dword 0x7fc6084b304bf18f
.dword 0x3fc0440723dc138b
.dword 0x7f9665f844db4adf
.dword 0x7fc6084b304bf18f
.dword 0x3fc0440723dc138b
.dword 0x7f9665f844db4adf
.dword 0x7fc6084b304bf18f
.dword 0x3fc0440723dc138b
.dword 0x7f9665f844db4adf
.dword 0x7fc6084b304bf18f
.dword 0x3fc0440723dc138b
.dword 0x7f9665f844db4adf
.dword 0x7fc6084b304bf18f
.dword 0x3fc0440723dc138b
.dword 0x7f9665f844db4adf
.dword 0x7fdf35e30dc7f0d5
.dword 0x3ff9b93d26abc960
.dword 0x7fe916c48fdc3c52
.dword 0x7fdf35e30dc7f0d5
.dword 0x3ff9b93d26abc960
.dword 0x7fe916c48fdc3c52
.dword 0x7fdf35e30dc7f0d5
.dword 0x3ff9b93d26abc960
.dword 0x7fe916c48fdc3c52
.dword 0x7fdf35e30dc7f0d5
.dword 0x3ff9b93d26abc960
.dword 0x7fe916c48fdc3c52
.dword 0x7fdf35e30dc7f0d5
.dword 0x3ff9b93d26abc960
.dword 0x7fe916c48fdc3c52
.dword 0x7fe7e3754ab88106
.dword 0x3fd6ca05abdbc274
.dword 0x7fd10330b39c61ab
.dword 0x7fe7e3754ab88106
.dword 0x3fd6ca05abdbc274
.dword 0x7fd10330b39c61ab
.dword 0x7fe7e3754ab88106
.dword 0x3fd6ca05abdbc274
.dword 0x7fd10330b39c61ab
.dword 0x7fe7e3754ab88106
.dword 0x3fd6ca05abdbc274
.dword 0x7fd10330b39c61ab
.dword 0x7fe7e3754ab88106
.dword 0x3fd6ca05abdbc274
.dword 0x7fd10330b39c61ab
.dword 0x7fda2e19c7869ae7
.dword 0x3fcae37b5cd92b9d
.dword 0x7fb5ff90e6260e0f
.dword 0x7fda2e19c7869ae7
.dword 0x3fcae37b5cd92b9d
.dword 0x7fb5ff90e6260e0f
.dword 0x7fda2e19c7869ae7
.dword 0x3fcae37b5cd92b9d
.dword 0x7fb5ff90e6260e0f
.dword 0x7fda2e19c7869ae7
.dword 0x3fcae37b5cd92b9d
.dword 0x7fb5ff90e6260e0f
.dword 0x7fda2e19c7869ae7
.dword 0x3fcae37b5cd92b9d
.dword 0x7fb5ff90e6260e0f
.dword 0x7fde23b6c26d7d59
.dword 0x3ff7f9b8fee36b4a
.dword 0x7fe694df7f442112
.dword 0x7fde23b6c26d7d59
.dword 0x3ff7f9b8fee36b4a
.dword 0x7fe694df7f442112
.dword 0x7fde23b6c26d7d59
.dword 0x3ff7f9b8fee36b4a
.dword 0x7fe694df7f442112
.dword 0x7fde23b6c26d7d59
.dword 0x3ff7f9b8fee36b4a
.dword 0x7fe694df7f442112
.dword 0x7fde23b6c26d7d59
.dword 0x3ff7f9b8fee36b4a
.dword 0x7fe694df7f442112
.dword 0x7fe979a4444e4e5b
.dword 0x3fe4c4cc7050e2ce
.dword 0x7fe088b279b4a7a5
.dword 0x7fe979a4444e4e5b
.dword 0x3fe4c4cc7050e2ce
.dword 0x7fe088b279b4a7a5
.dword 0x7fe979a4444e4e5b
.dword 0x3fe4c4cc7050e2ce
.dword 0x7fe088b279b4a7a5
.dword 0x7fe979a4444e4e5b
.dword 0x3fe4c4cc7050e2ce
.dword 0x7fe088b279b4a7a5
.dword 0x7fe979a4444e4e5b
.dword 0x3fe4c4cc7050e2ce
.dword 0x7fe088b279b4a7a5
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fea99ad8d852394
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fea99ad8d852394
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fea99ad8d852394
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fea99ad8d852394
.dword 0x7fdc9ed4464571af
.dword 0x3ffdbdc83df362e4
.dword 0x7fea99ad8d852394
.dword 0x7fe5726b277b5dce
.dword 0x3ff53c36b188da64
.dword 0x7fec76e305c8d1af
.dword 0x7fe5726b277b5dce
.dword 0x3ff53c36b188da64
.dword 0x7fec76e305c8d1af
.dword 0x7fe5726b277b5dce
.dword 0x3ff53c36b188da64
.dword 0x7fec76e305c8d1af
.dword 0x7fe5726b277b5dce
.dword 0x3ff53c36b188da64
.dword 0x7fec76e305c8d1af
.dword 0x7fe5726b277b5dce
.dword 0x3ff53c36b188da64
.dword 0x7fec76e305c8d1af
.dword 0x7fef5610c05b31c8
.dword 0x3fed2834dff0917f
.dword 0x7fec8d5e8a69a864
.dword 0x7fef5610c05b31c8
.dword 0x3fed2834dff0917f
.dword 0x7fec8d5e8a69a864
.dword 0x7fef5610c05b31c8
.dword 0x3fed2834dff0917f
.dword 0x7fec8d5e8a69a864
.dword 0x7fef5610c05b31c8
.dword 0x3fed2834dff0917f
.dword 0x7fec8d5e8a69a864
.dword 0x7fef5610c05b31c8
.dword 0x3fed2834dff0917f
.dword 0x7fec8d5e8a69a864
.dword 0x7fef642299c3d7ea
.dword 0x3fd001214aa3225f
.dword 0x7fcf665a2ce400e3
.dword 0x7fef642299c3d7ea
.dword 0x3fd001214aa3225f
.dword 0x7fcf665a2ce400e3
.dword 0x7fef642299c3d7ea
.dword 0x3fd001214aa3225f
.dword 0x7fcf665a2ce400e3
.dword 0x7fef642299c3d7ea
.dword 0x3fd001214aa3225f
.dword 0x7fcf665a2ce400e3
.dword 0x7fef642299c3d7ea
.dword 0x3fd001214aa3225f
.dword 0x7fcf665a2ce400e3
.dword 0x7fe7e1cbdffe4992
.dword 0x3fe10e1c43d3c4e6
.dword 0x7fd974f860c491f9
.dword 0x7fe7e1cbdffe4992
.dword 0x3fe10e1c43d3c4e6
.dword 0x7fd974f860c491f9
.dword 0x7fe7e1cbdffe4992
.dword 0x3fe10e1c43d3c4e6
.dword 0x7fd974f860c491f9
.dword 0x7fe7e1cbdffe4992
.dword 0x3fe10e1c43d3c4e6
.dword 0x7fd974f860c491f9
.dword 0x7fe7e1cbdffe4992
.dword 0x3fe10e1c43d3c4e6
.dword 0x7fd974f860c491f9
.dword 0x7fab8e934bdcc1bf
.dword 0x401f6db8ea3f5db5
.dword 0x7fdb109b94c05e59
.dword 0x7fab8e934bdcc1bf
.dword 0x401f6db8ea3f5db5
.dword 0x7fdb109b94c05e59
.dword 0x7fab8e934bdcc1bf
.dword 0x401f6db8ea3f5db5
.dword 0x7fdb109b94c05e59
.dword 0x7fab8e934bdcc1bf
.dword 0x401f6db8ea3f5db5
.dword 0x7fdb109b94c05e59
.dword 0x7fab8e934bdcc1bf
.dword 0x401f6db8ea3f5db5
.dword 0x7fdb109b94c05e59
.dword 0x7fc03c1ecadc137f
.dword 0x401f8884c44e2025
.dword 0x7fefff0165f47cec
.dword 0x7fc03c1ecadc137f
.dword 0x401f8884c44e2025
.dword 0x7fefff0165f47cec
.dword 0x7fc03c1ecadc137f
.dword 0x401f8884c44e2025
.dword 0x7fefff0165f47cec
.dword 0x7fc03c1ecadc137f
.dword 0x401f8884c44e2025
.dword 0x7fefff0165f47cec
.dword 0x7fc03c1ecadc137f
.dword 0x401f8884c44e2025
.dword 0x7fefff0165f47cec
.dword 0x7fd8276674380fc3
.dword 0x3ff07fa3fe059060
.dword 0x7fd8e816c2502d73
.dword 0x7fd8276674380fc3
.dword 0x3ff07fa3fe059060
.dword 0x7fd8e816c2502d73
.dword 0x7fd8276674380fc3
.dword 0x3ff07fa3fe059060
.dword 0x7fd8e816c2502d73
.dword 0x7fd8276674380fc3
.dword 0x3ff07fa3fe059060
.dword 0x7fd8e816c2502d73
.dword 0x7fd8276674380fc3
.dword 0x3ff07fa3fe059060
.dword 0x7fd8e816c2502d73
.dword 0x7fe3d93686797715
.dword 0x3fdf9620c1581628
.dword 0x7fd3978b52ff3f23
.dword 0x7fe3d93686797715
.dword 0x3fdf9620c1581628
.dword 0x7fd3978b52ff3f23
.dword 0x7fe3d93686797715
.dword 0x3fdf9620c1581628
.dword 0x7fd3978b52ff3f23
.dword 0x7fe3d93686797715
.dword 0x3fdf9620c1581628
.dword 0x7fd3978b52ff3f23
.dword 0x7fe3d93686797715
.dword 0x3fdf9620c1581628
.dword 0x7fd3978b52ff3f23
.dword 0x7fd54e6e64764369
.dword 0x4005bbe5dcd5070e
.dword 0x7fecf127a6af77f2
.dword 0x7fd54e6e64764369
.dword 0x4005bbe5dcd5070e
.dword 0x7fecf127a6af77f2
.dword 0x7fd54e6e64764369
.dword 0x4005bbe5dcd5070e
.dword 0x7fecf127a6af77f2
.dword 0x7fd54e6e64764369
.dword 0x4005bbe5dcd5070e
.dword 0x7fecf127a6af77f2
.dword 0x7fd54e6e64764369
.dword 0x4005bbe5dcd5070e
.dword 0x7fecf127a6af77f2
.dword 0x7fe8e5d8dcad33c4
.dword 0x3f967373f406a831
.dword 0x7f9177d952f13e9f
.dword 0x7fe8e5d8dcad33c4
.dword 0x3f967373f406a831
.dword 0x7f9177d952f13e9f
.dword 0x7fe8e5d8dcad33c4
.dword 0x3f967373f406a831
.dword 0x7f9177d952f13e9f
.dword 0x7fe8e5d8dcad33c4
.dword 0x3f967373f406a831
.dword 0x7f9177d952f13e9f
.dword 0x7fe8e5d8dcad33c4
.dword 0x3f967373f406a831
.dword 0x7f9177d952f13e9f
.dword 0x7fe657d95216ac01
.dword 0x3f925d92dbf7772b
.dword 0x7f89a5803051b37f
.dword 0x7fe657d95216ac01
.dword 0x3f925d92dbf7772b
.dword 0x7f89a5803051b37f
.dword 0x7fe657d95216ac01
.dword 0x3f925d92dbf7772b
.dword 0x7f89a5803051b37f
.dword 0x7fe657d95216ac01
.dword 0x3f925d92dbf7772b
.dword 0x7f89a5803051b37f
.dword 0x7fe657d95216ac01
.dword 0x3f925d92dbf7772b
.dword 0x7f89a5803051b37f
.dword 0x7fcadd854d58145f
.dword 0x40107ed749af0a91
.dword 0x7febb27f4381021f
.dword 0x7fcadd854d58145f
.dword 0x40107ed749af0a91
.dword 0x7febb27f4381021f
.dword 0x7fcadd854d58145f
.dword 0x40107ed749af0a91
.dword 0x7febb27f4381021f
.dword 0x7fcadd854d58145f
.dword 0x40107ed749af0a91
.dword 0x7febb27f4381021f
.dword 0x7fcadd854d58145f
.dword 0x40107ed749af0a91
.dword 0x7febb27f4381021f
.dword 0x7fdef5aa91c82b3d
.dword 0x3fd24583e9aa4a5b
.dword 0x7fc1ad71498eb7bb
.dword 0x7fdef5aa91c82b3d
.dword 0x3fd24583e9aa4a5b
.dword 0x7fc1ad71498eb7bb
.dword 0x7fdef5aa91c82b3d
.dword 0x3fd24583e9aa4a5b
.dword 0x7fc1ad71498eb7bb
.dword 0x7fdef5aa91c82b3d
.dword 0x3fd24583e9aa4a5b
.dword 0x7fc1ad71498eb7bb
.dword 0x7fdef5aa91c82b3d
.dword 0x3fd24583e9aa4a5b
.dword 0x7fc1ad71498eb7bb
.dword 0x7fd3fc6805c084d1
.dword 0x3fe41b82ca2e0c7d
.dword 0x7fc91ddf5613b02f
.dword 0x7fd3fc6805c084d1
.dword 0x3fe41b82ca2e0c7d
.dword 0x7fc91ddf5613b02f
.dword 0x7fd3fc6805c084d1
.dword 0x3fe41b82ca2e0c7d
.dword 0x7fc91ddf5613b02f
.dword 0x7fd3fc6805c084d1
.dword 0x3fe41b82ca2e0c7d
.dword 0x7fc91ddf5613b02f
.dword 0x7fd3fc6805c084d1
.dword 0x3fe41b82ca2e0c7d
.dword 0x7fc91ddf5613b02f
.dword 0x7fbde8341376716f
.dword 0x4016b11ecf872f9d
.dword 0x7fe5352cf9125058
.dword 0x7fbde8341376716f
.dword 0x4016b11ecf872f9d
.dword 0x7fe5352cf9125058
.dword 0x7fbde8341376716f
.dword 0x4016b11ecf872f9d
.dword 0x7fe5352cf9125058
.dword 0x7fbde8341376716f
.dword 0x4016b11ecf872f9d
.dword 0x7fe5352cf9125058
.dword 0x7fbde8341376716f
.dword 0x4016b11ecf872f9d
.dword 0x7fe5352cf9125058
.dword 0x7fec299b1ab6e737
.dword 0x3fe31948e12564a2
.dword 0x7fe0cef4bccbe789
.dword 0x7fec299b1ab6e737
.dword 0x3fe31948e12564a2
.dword 0x7fe0cef4bccbe789
.dword 0x7fec299b1ab6e737
.dword 0x3fe31948e12564a2
.dword 0x7fe0cef4bccbe789
.dword 0x7fec299b1ab6e737
.dword 0x3fe31948e12564a2
.dword 0x7fe0cef4bccbe789
.dword 0x7fec299b1ab6e737
.dword 0x3fe31948e12564a2
.dword 0x7fe0cef4bccbe789
.dword 0x7fe2da5f3c7a7466
.dword 0x3fc37c47ae0bad3a
.dword 0x7fb6f5c1f001498f
.dword 0x7fe2da5f3c7a7466
.dword 0x3fc37c47ae0bad3a
.dword 0x7fb6f5c1f001498f
.dword 0x7fe2da5f3c7a7466
.dword 0x3fc37c47ae0bad3a
.dword 0x7fb6f5c1f001498f
.dword 0x7fe2da5f3c7a7466
.dword 0x3fc37c47ae0bad3a
.dword 0x7fb6f5c1f001498f
.dword 0x7fe2da5f3c7a7466
.dword 0x3fc37c47ae0bad3a
.dword 0x7fb6f5c1f001498f
.dword 0x7fe341836db80049
.dword 0x3fe02efa596fbdf8
.dword 0x7fd37a0d12dbe9d7
.dword 0x7fe341836db80049
.dword 0x3fe02efa596fbdf8
.dword 0x7fd37a0d12dbe9d7
.dword 0x7fe341836db80049
.dword 0x3fe02efa596fbdf8
.dword 0x7fd37a0d12dbe9d7
.dword 0x7fe341836db80049
.dword 0x3fe02efa596fbdf8
.dword 0x7fd37a0d12dbe9d7
.dword 0x7fe341836db80049
.dword 0x3fe02efa596fbdf8
.dword 0x7fd37a0d12dbe9d7
.dword 0x7f9d1aa6d115d25f
.dword 0x40296deab3c53820
.dword 0x7fd720ca91f58bdf
.dword 0x7f9d1aa6d115d25f
.dword 0x40296deab3c53820
.dword 0x7fd720ca91f58bdf
.dword 0x7f9d1aa6d115d25f
.dword 0x40296deab3c53820
.dword 0x7fd720ca91f58bdf
.dword 0x7f9d1aa6d115d25f
.dword 0x40296deab3c53820
.dword 0x7fd720ca91f58bdf
.dword 0x7f9d1aa6d115d25f
.dword 0x40296deab3c53820
.dword 0x7fd720ca91f58bdf
.dword 0x7fe9c6b24203c777
.dword 0x3ff364e03ef31b27
.dword 0x7fef3e76cbaa48e2
.dword 0x7fe9c6b24203c777
.dword 0x3ff364e03ef31b27
.dword 0x7fef3e76cbaa48e2
.dword 0x7fe9c6b24203c777
.dword 0x3ff364e03ef31b27
.dword 0x7fef3e76cbaa48e2
.dword 0x7fe9c6b24203c777
.dword 0x3ff364e03ef31b27
.dword 0x7fef3e76cbaa48e2
.dword 0x7fe9c6b24203c777
.dword 0x3ff364e03ef31b27
.dword 0x7fef3e76cbaa48e2
.dword 0x7fe4a0550fe15035
.dword 0x3ff152f2078be37b
.dword 0x7fe655481791d37f
.dword 0x7fe4a0550fe15035
.dword 0x3ff152f2078be37b
.dword 0x7fe655481791d37f
.dword 0x7fe4a0550fe15035
.dword 0x3ff152f2078be37b
.dword 0x7fe655481791d37f
.dword 0x7fe4a0550fe15035
.dword 0x3ff152f2078be37b
.dword 0x7fe655481791d37f
.dword 0x7fe4a0550fe15035
.dword 0x3ff152f2078be37b
.dword 0x7fe655481791d37f
.dword 0x7fed1ab73cc65f52
.dword 0x3fe21b7b40acb837
.dword 0x7fe07805b64db437
.dword 0x7fed1ab73cc65f52
.dword 0x3fe21b7b40acb837
.dword 0x7fe07805b64db437
.dword 0x7fed1ab73cc65f52
.dword 0x3fe21b7b40acb837
.dword 0x7fe07805b64db437
.dword 0x7fed1ab73cc65f52
.dword 0x3fe21b7b40acb837
.dword 0x7fe07805b64db437
.dword 0x7fed1ab73cc65f52
.dword 0x3fe21b7b40acb837
.dword 0x7fe07805b64db437
.dword 0x7fd7107573e4c40b
.dword 0x4004b4a64f556751
.dword 0x7fedd8fbb754b55c
.dword 0x7fd7107573e4c40b
.dword 0x4004b4a64f556751
.dword 0x7fedd8fbb754b55c
.dword 0x7fd7107573e4c40b
.dword 0x4004b4a64f556751
.dword 0x7fedd8fbb754b55c
.dword 0x7fd7107573e4c40b
.dword 0x4004b4a64f556751
.dword 0x7fedd8fbb754b55c
.dword 0x7fd7107573e4c40b
.dword 0x4004b4a64f556751
.dword 0x7fedd8fbb754b55c
.dword 0x7fc9b63fed3f1873
.dword 0x400a1a2014c80658
.dword 0x7fe4f911cba6947d
.dword 0x7fc9b63fed3f1873
.dword 0x400a1a2014c80658
.dword 0x7fe4f911cba6947d
.dword 0x7fc9b63fed3f1873
.dword 0x400a1a2014c80658
.dword 0x7fe4f911cba6947d
.dword 0x7fc9b63fed3f1873
.dword 0x400a1a2014c80658
.dword 0x7fe4f911cba6947d
.dword 0x7fc9b63fed3f1873
.dword 0x400a1a2014c80658
.dword 0x7fe4f911cba6947d
.dword 0x7fee71a5cc2ec78b
.dword 0x3fe3cc01737b632f
.dword 0x7fe2d590539c6e1b
.dword 0x7fee71a5cc2ec78b
.dword 0x3fe3cc01737b632f
.dword 0x7fe2d590539c6e1b
.dword 0x7fee71a5cc2ec78b
.dword 0x3fe3cc01737b632f
.dword 0x7fe2d590539c6e1b
.dword 0x7fee71a5cc2ec78b
.dword 0x3fe3cc01737b632f
.dword 0x7fe2d590539c6e1b
.dword 0x7fee71a5cc2ec78b
.dword 0x3fe3cc01737b632f
.dword 0x7fe2d590539c6e1b
.dword 0x7fe45141572f8653
.dword 0x3fdd59f46589e2bf
.dword 0x7fd2a2c060c7c8c5
.dword 0x7fe45141572f8653
.dword 0x3fdd59f46589e2bf
.dword 0x7fd2a2c060c7c8c5
.dword 0x7fe45141572f8653
.dword 0x3fdd59f46589e2bf
.dword 0x7fd2a2c060c7c8c5
.dword 0x7fe45141572f8653
.dword 0x3fdd59f46589e2bf
.dword 0x7fd2a2c060c7c8c5
.dword 0x7fe45141572f8653
.dword 0x3fdd59f46589e2bf
.dword 0x7fd2a2c060c7c8c5
.dword 0x7fb801fd982d9eb7
.dword 0x4000d1acf34aef92
.dword 0x7fc93c9b1b3642af
.dword 0x7fb801fd982d9eb7
.dword 0x4000d1acf34aef92
.dword 0x7fc93c9b1b3642af
.dword 0x7fb801fd982d9eb7
.dword 0x4000d1acf34aef92
.dword 0x7fc93c9b1b3642af
.dword 0x7fb801fd982d9eb7
.dword 0x4000d1acf34aef92
.dword 0x7fc93c9b1b3642af
.dword 0x7fb801fd982d9eb7
.dword 0x4000d1acf34aef92
.dword 0x7fc93c9b1b3642af
.dword 0x7fe9c0c529007f92
.dword 0x3fe1b3e375a83590
.dword 0x7fdc7e5c3598d2dd
.dword 0x7fe9c0c529007f92
.dword 0x3fe1b3e375a83590
.dword 0x7fdc7e5c3598d2dd
.dword 0x7fe9c0c529007f92
.dword 0x3fe1b3e375a83590
.dword 0x7fdc7e5c3598d2dd
.dword 0x7fe9c0c529007f92
.dword 0x3fe1b3e375a83590
.dword 0x7fdc7e5c3598d2dd
.dword 0x7fe9c0c529007f92
.dword 0x3fe1b3e375a83590
.dword 0x7fdc7e5c3598d2dd
.dword 0x7fb7d7ab2b96a7d7
.dword 0x40212f7d90af6886
.dword 0x7fe99bea81a3c895
.dword 0x7fb7d7ab2b96a7d7
.dword 0x40212f7d90af6886
.dword 0x7fe99bea81a3c895
.dword 0x7fb7d7ab2b96a7d7
.dword 0x40212f7d90af6886
.dword 0x7fe99bea81a3c895
.dword 0x7fb7d7ab2b96a7d7
.dword 0x40212f7d90af6886
.dword 0x7fe99bea81a3c895
.dword 0x7fb7d7ab2b96a7d7
.dword 0x40212f7d90af6886
.dword 0x7fe99bea81a3c895
.dword 0x7feb045c5db2e460
.dword 0x3fd9703f7515ec33
.dword 0x7fd57a2cffec0101
.dword 0x7feb045c5db2e460
.dword 0x3fd9703f7515ec33
.dword 0x7fd57a2cffec0101
.dword 0x7feb045c5db2e460
.dword 0x3fd9703f7515ec33
.dword 0x7fd57a2cffec0101
.dword 0x7feb045c5db2e460
.dword 0x3fd9703f7515ec33
.dword 0x7fd57a2cffec0101
.dword 0x7feb045c5db2e460
.dword 0x3fd9703f7515ec33
.dword 0x7fd57a2cffec0101
.dword 0x7fe9b52b2a70b02a
.dword 0x3feb500d269fc9eb
.dword 0x7fe5f12be85a3941
.dword 0x7fe9b52b2a70b02a
.dword 0x3feb500d269fc9eb
.dword 0x7fe5f12be85a3941
.dword 0x7fe9b52b2a70b02a
.dword 0x3feb500d269fc9eb
.dword 0x7fe5f12be85a3941
.dword 0x7fe9b52b2a70b02a
.dword 0x3feb500d269fc9eb
.dword 0x7fe5f12be85a3941
.dword 0x7fe9b52b2a70b02a
.dword 0x3feb500d269fc9eb
.dword 0x7fe5f12be85a3941
.dword 0x7fe9c39382ea6198
.dword 0x3fd51b4351475892
.dword 0x7fd0fe4c054d9e8b
.dword 0x7fe9c39382ea6198
.dword 0x3fd51b4351475892
.dword 0x7fd0fe4c054d9e8b
.dword 0x7fe9c39382ea6198
.dword 0x3fd51b4351475892
.dword 0x7fd0fe4c054d9e8b
.dword 0x7fe9c39382ea6198
.dword 0x3fd51b4351475892
.dword 0x7fd0fe4c054d9e8b
.dword 0x7fe9c39382ea6198
.dword 0x3fd51b4351475892
.dword 0x7fd0fe4c054d9e8b
.dword 0x7fc8b3ba7903c2ab
.dword 0x4006f3177f7676dd
.dword 0x7fe1b73726cc4ff0
.dword 0x7fc8b3ba7903c2ab
.dword 0x4006f3177f7676dd
.dword 0x7fe1b73726cc4ff0
.dword 0x7fc8b3ba7903c2ab
.dword 0x4006f3177f7676dd
.dword 0x7fe1b73726cc4ff0
.dword 0x7fc8b3ba7903c2ab
.dword 0x4006f3177f7676dd
.dword 0x7fe1b73726cc4ff0
.dword 0x7fc8b3ba7903c2ab
.dword 0x4006f3177f7676dd
.dword 0x7fe1b73726cc4ff0
.dword 0x7fe139cbde283143
.dword 0x3ff445c6db753ea9
.dword 0x7fe5d35e2c6078a3
.dword 0x7fe139cbde283143
.dword 0x3ff445c6db753ea9
.dword 0x7fe5d35e2c6078a3
.dword 0x7fe139cbde283143
.dword 0x3ff445c6db753ea9
.dword 0x7fe5d35e2c6078a3
.dword 0x7fe139cbde283143
.dword 0x3ff445c6db753ea9
.dword 0x7fe5d35e2c6078a3
.dword 0x7fe139cbde283143
.dword 0x3ff445c6db753ea9
.dword 0x7fe5d35e2c6078a3
.dword 0x7fe75ab99b7d728b
.dword 0x3fe2270fb41a1218
.dword 0x7fda7f14df48da55
.dword 0x7fe75ab99b7d728b
.dword 0x3fe2270fb41a1218
.dword 0x7fda7f14df48da55
.dword 0x7fe75ab99b7d728b
.dword 0x3fe2270fb41a1218
.dword 0x7fda7f14df48da55
.dword 0x7fe75ab99b7d728b
.dword 0x3fe2270fb41a1218
.dword 0x7fda7f14df48da55
.dword 0x7fe75ab99b7d728b
.dword 0x3fe2270fb41a1218
.dword 0x7fda7f14df48da55
.dword 0x7fd173e2abe9259b
.dword 0x4007867ec4d41237
.dword 0x7fe9a94aa8cadc89
.dword 0x7fd173e2abe9259b
.dword 0x4007867ec4d41237
.dword 0x7fe9a94aa8cadc89
.dword 0x7fd173e2abe9259b
.dword 0x4007867ec4d41237
.dword 0x7fe9a94aa8cadc89
.dword 0x7fd173e2abe9259b
.dword 0x4007867ec4d41237
.dword 0x7fe9a94aa8cadc89
.dword 0x7fd173e2abe9259b
.dword 0x4007867ec4d41237
.dword 0x7fe9a94aa8cadc89
.dword 0x7fd7e1dc0a8e1a11
.dword 0x400082b9acfac9b7
.dword 0x7fe8a4fc4c166a46
.dword 0x7fd7e1dc0a8e1a11
.dword 0x400082b9acfac9b7
.dword 0x7fe8a4fc4c166a46
.dword 0x7fd7e1dc0a8e1a11
.dword 0x400082b9acfac9b7
.dword 0x7fe8a4fc4c166a46
.dword 0x7fd7e1dc0a8e1a11
.dword 0x400082b9acfac9b7
.dword 0x7fe8a4fc4c166a46
.dword 0x7fd7e1dc0a8e1a11
.dword 0x400082b9acfac9b7
.dword 0x7fe8a4fc4c166a46
.dword 0x7fde18a54fb9615f
.dword 0x3ff9d9644f56bb65
.dword 0x7fe84fb69ef078ea
.dword 0x7fde18a54fb9615f
.dword 0x3ff9d9644f56bb65
.dword 0x7fe84fb69ef078ea
.dword 0x7fde18a54fb9615f
.dword 0x3ff9d9644f56bb65
.dword 0x7fe84fb69ef078ea
.dword 0x7fde18a54fb9615f
.dword 0x3ff9d9644f56bb65
.dword 0x7fe84fb69ef078ea
.dword 0x7fde18a54fb9615f
.dword 0x3ff9d9644f56bb65
.dword 0x7fe84fb69ef078ea
.dword 0x7f3d9a84a89337ff
.dword 0x4096ed5a71e5433a
.dword 0x7fe535cf46588f5e
.dword 0x7f3d9a84a89337ff
.dword 0x4096ed5a71e5433a
.dword 0x7fe535cf46588f5e
.dword 0x7f3d9a84a89337ff
.dword 0x4096ed5a71e5433a
.dword 0x7fe535cf46588f5e
.dword 0x7f3d9a84a89337ff
.dword 0x4096ed5a71e5433a
.dword 0x7fe535cf46588f5e
.dword 0x7f3d9a84a89337ff
.dword 0x4096ed5a71e5433a
.dword 0x7fe535cf46588f5e
.dword 0x7fdf0aceae190521
.dword 0x3fe142a90077145a
.dword 0x7fd0be68084b69b7
.dword 0x7fdf0aceae190521
.dword 0x3fe142a90077145a
.dword 0x7fd0be68084b69b7
.dword 0x7fdf0aceae190521
.dword 0x3fe142a90077145a
.dword 0x7fd0be68084b69b7
.dword 0x7fdf0aceae190521
.dword 0x3fe142a90077145a
.dword 0x7fd0be68084b69b7
.dword 0x7fdf0aceae190521
.dword 0x3fe142a90077145a
.dword 0x7fd0be68084b69b7
.dword 0x7fe9630abe4b977e
.dword 0x3ff093bbbbab15dc
.dword 0x7fea4d72905280d4
.dword 0x7fe9630abe4b977e
.dword 0x3ff093bbbbab15dc
.dword 0x7fea4d72905280d4
.dword 0x7fe9630abe4b977e
.dword 0x3ff093bbbbab15dc
.dword 0x7fea4d72905280d4
.dword 0x7fe9630abe4b977e
.dword 0x3ff093bbbbab15dc
.dword 0x7fea4d72905280d4
.dword 0x7fe6fcc78313f886
.dword 0x3fb04ce8c2de8bd5
.dword 0x7fa76b46a008334f
.dword 0x7fe6fcc78313f886
.dword 0x3fb04ce8c2de8bd5
.dword 0x7fa76b46a008334f
.dword 0x7fe6fcc78313f886
.dword 0x3fb04ce8c2de8bd5
.dword 0x7fa76b46a008334f
.dword 0x7fe6fcc78313f886
.dword 0x3fb04ce8c2de8bd5
.dword 0x7fa76b46a008334f
.dword 0x7fdcfd26bc72299b
.dword 0x40015481bb0f0293
.dword 0x7fef66153f88d9a0
.dword 0x7fdcfd26bc72299b
.dword 0x40015481bb0f0293
.dword 0x7fef66153f88d9a0
.dword 0x7fdcfd26bc72299b
.dword 0x40015481bb0f0293
.dword 0x7fef66153f88d9a0
.dword 0x7fdcfd26bc72299b
.dword 0x40015481bb0f0293
.dword 0x7fef66153f88d9a0
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_8:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_9:
    .fill 224*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
