
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:16 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V FD extension for the fnmsub_b16 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmsub_b16)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd == rs3 != rs2, rs1==f10, rs2==f13, rs3==f10, rd==f10, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x6b5ac213a2c3b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f13; op3:f10; dest:f10; op1val:0x5f8e759ff97b7507; op2val:0x5fa16a5368858d8c; op3val:0x5f8e759ff97b7507; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f10, f10, f13, f10, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f28, rs2==f25, rs3==f11, rd==f27, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8ff93428ba4ff and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xac9ee205b0abf and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x88040dc1a880c and rm_val == 0  
// opcode: fnmsub.d ; op1:f28; op2:f25; op3:f11; dest:f27; op1val:0x5f88ff93428ba4ff; op2val:0x5f8ac9ee205b0abf; op3val:0x7f288040dc1a880c; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f27, f28, f25, f11, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f20, rs2==f30, rs3==f24, rd==f20, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x90fd00d7a804d and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x25d75bdafbc97 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x4ffcea3ece971 and rm_val == 0  
// opcode: fnmsub.d ; op1:f20; op2:f30; op3:f24; dest:f20; op1val:0x5fa90fd00d7a804d; op2val:0x5f825d75bdafbc97; op3val:0x7f44ffcea3ece971; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f20, f20, f30, f24, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==f24, rs2==f21, rs3==f21, rd==f21, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xca7049f840037 and fs2 == 0 and fe2 == 0x5f2 and fm2 == 0x61f77377e85ff and fs3 == 0 and fe3 == 0x7ec and fm3 == 0x7f2d009694180 and rm_val == 0  
// opcode: fnmsub.d ; op1:f24; op2:f21; op3:f21; dest:f21; op1val:0x5f8ca7049f840037; op2val:0x5f261f77377e85ff; op3val:0x5f261f77377e85ff; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f21, f24, f21, f21, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f4, rs2==f5, rs3==f4, rd==f26, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7be065394fb87 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0f047e17234a4 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x4105122215908 and rm_val == 0  
// opcode: fnmsub.d ; op1:f4; op2:f5; op3:f4; dest:f26; op1val:0x5f97be065394fb87; op2val:0x5fa0f047e17234a4; op3val:0x5f97be065394fb87; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f26, f4, f5, f4, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f25, rs2==f20, rs3==f8, rd==f8, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcc7fa2c262245 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x707b78d06c987 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xc50663f0b34df and rm_val == 0  
// opcode: fnmsub.d ; op1:f25; op2:f20; op3:f8; dest:f8; op1val:0x5facc7fa2c262245; op2val:0x5fa707b78d06c987; op3val:0x7f6c50663f0b34df; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f8, f25, f20, f8, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f22, rs2==f22, rs3==f22, rd==f29, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x83a272ac3e0fc and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x9b17c3381c95b and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x6f71ab211379c and rm_val == 0  
// opcode: fnmsub.d ; op1:f22; op2:f22; op3:f22; dest:f29; op1val:0x5fa83a272ac3e0fc; op2val:0x5fa83a272ac3e0fc; op3val:0x5fa83a272ac3e0fc; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f29, f22, f22, f22, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rs2 == rd != rs3, rs1==f12, rs2==f12, rs3==f29, rd==f12, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c697b9f4c156 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x37f62582fdc3f and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x28993dd4d19be and rm_val == 0  
// opcode: fnmsub.d ; op1:f12; op2:f12; op3:f29; dest:f12; op1val:0x5fa4c697b9f4c156; op2val:0x5fa4c697b9f4c156; op3val:0x7f528993dd4d19be; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f12, f12, f12, f29, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f14, rs2==f14, rs3==f14, rd==f14, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6607c34459dce and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x132ac57683a83 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x11a3e2c200294 and rm_val == 0  
// opcode: fnmsub.d ; op1:f14; op2:f14; op3:f14; dest:f14; op1val:0x5fa6607c34459dce; op2val:0x5fa6607c34459dce; op3val:0x5fa6607c34459dce; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f14, f14, f14, f14, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f19, rs2==f6, rs3==f6, rd==f25, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9a3855b4b1a63 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x495d2e6438f63 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x8b14942eb8464 and rm_val == 0  
// opcode: fnmsub.d ; op1:f19; op2:f6; op3:f6; dest:f25; op1val:0x5f89a3855b4b1a63; op2val:0x5f8495d2e6438f63; op3val:0x5f8495d2e6438f63; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f25, f19, f6, f6, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f18, rs2==f18, rs3==f3, rd==f2, fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbef6db92e2fbf and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x5dcfa9a24791f and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x492dd06bdb870 and rm_val == 0  
// opcode: fnmsub.d ; op1:f18; op2:f18; op3:f3; dest:f2; op1val:0x5f7bef6db92e2fbf; op2val:0x5f7bef6db92e2fbf; op3val:0x7ef492dd06bdb870; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f2, f18, f18, f3, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f27, rs2==f7, rs3==f2, rd==f7, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbf83685979e3d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8381c48e230d5 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xf6f86ae761e88 and rm_val == 0  
// opcode: fnmsub.d ; op1:f27; op2:f7; op3:f2; dest:f7; op1val:0x5f9bf83685979e3d; op2val:0x5fa8381c48e230d5; op3val:0x7f5f6f86ae761e88; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f7, f27, f7, f2, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f5, rs2==f19, rs3==f1, rd==f22, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9d05338d20148 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdd0d05440db8f and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x662ba7f57a5d0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f5; op2:f19; op3:f1; dest:f22; op1val:0x5fa9d05338d20148; op2val:0x5fadd0d05440db8f; op3val:0x7f7662ba7f57a5d0; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f22, f5, f19, f1, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f30, rs2==f11, rs3==f9, rd==f5, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6e9146c51e452 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7abc88bf9fef0 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x6c5328f4e2d56 and rm_val == 0  
// opcode: fnmsub.d ; op1:f30; op2:f11; op3:f9; dest:f5; op1val:0x5fa6e9146c51e452; op2val:0x5fa7abc88bf9fef0; op3val:0x7f66c5328f4e2d56; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f5, f30, f11, f9, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f8, rs2==f28, rs3==f30, rd==f1, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb771f235b3b5a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x33c6c6f19f493 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xfd089154c0c41 and rm_val == 0  
// opcode: fnmsub.d ; op1:f8; op2:f28; op3:f30; dest:f1; op1val:0x5fab771f235b3b5a; op2val:0x5fa33c6c6f19f493; op3val:0x7f6fd089154c0c41; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f1, f8, f28, f30, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f16, rs2==f27, rs3==f19, rd==f17, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbdb3961600dfc and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x63aa702c60f2f and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x5f358c3520740 and rm_val == 0  
// opcode: fnmsub.d ; op1:f16; op2:f27; op3:f19; dest:f17; op1val:0x5fabdb3961600dfc; op2val:0x5fa63aa702c60f2f; op3val:0x7f65f358c3520740; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f17, f16, f27, f19, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f9, rs2==f17, rs3==f12, rd==f15, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13e8154135a8d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdc11b455bc9be and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x5370259ff8df1 and rm_val == 0  
// opcode: fnmsub.d ; op1:f9; op2:f17; op3:f12; dest:f15; op1val:0x5fa13e8154135a8d; op2val:0x5fadc11b455bc9be; op3val:0x7f65370259ff8df1; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f15, f9, f17, f12, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f11, rs2==f24, rs3==f25, rd==f23, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7089e44f25db5 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xde080c818631b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x72dedc023a90a and rm_val == 0  
// opcode: fnmsub.d ; op1:f11; op2:f24; op3:f25; dest:f23; op1val:0x5f97089e44f25db5; op2val:0x5f8de080c818631b; op3val:0x7f372dedc023a90a; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f23, f11, f24, f25, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f23, rs2==f0, rs3==f13, rd==f6, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x95b24345add6a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3f1e47bb1b181 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x09a87ab0513d0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f23; op2:f0; op3:f13; dest:f6; op1val:0x5fa95b24345add6a; op2val:0x5fa3f1e47bb1b181; op3val:0x7f609a87ab0513d0; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f6, f23, f0, f13, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f6, rs2==f9, rs3==f31, rd==f18, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb04ea6a14a83 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc8bad349c4595 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xf167373f3a798 and rm_val == 0  
// opcode: fnmsub.d ; op1:f6; op2:f9; op3:f31; dest:f18; op1val:0x5faeb04ea6a14a83; op2val:0x5fac8bad349c4595; op3val:0x7f6f167373f3a798; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f18, f6, f9, f31, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f21, rs2==f26, rs3==f20, rd==f28, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4abb0d7c973ba and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc6e2320e480b1 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xcc25f4d938cc3 and rm_val == 0  
// opcode: fnmsub.d ; op1:f21; op2:f26; op3:f20; dest:f28; op1val:0x5fa4abb0d7c973ba; op2val:0x5f9c6e2320e480b1; op3val:0x7f5cc25f4d938cc3; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f28, f21, f26, f20, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f2, rs2==f15, rs3==f23, rd==f16, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x2f9d33403a65f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xe27a740758a8e and rm_val == 0  
// opcode: fnmsub.d ; op1:f2; op2:f15; op3:f23; dest:f16; op1val:0x5fa0f20e78d8f9d2; op2val:0x5f62f9d33403a65f; op3val:0x7f1e27a740758a8e; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f16, f2, f15, f23, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f17, rs2==f4, rs3==f0, rd==f24, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0c1a806800541 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xd796149975c91 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x26b56e6c526bb and rm_val == 0  
// opcode: fnmsub.d ; op1:f17; op2:f4; op3:f0; dest:f24; op1val:0x5fa0c1a806800541; op2val:0x5f9d796149975c91; op3val:0x7f526b56e6c526bb; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f24, f17, f4, f0, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f13, rs2==f31, rs3==f16, rd==f9, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x52e97b0ef6836 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x858da164e2118 and rm_val == 0  
// opcode: fnmsub.d ; op1:f13; op2:f31; op3:f16; dest:f9; op1val:0x5fa8a7945b061b5b; op2val:0x5fa52e97b0ef6836; op3val:0x7f6858da164e2118; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f9, f13, f31, f16, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f1, rs2==f3, rs3==f18, rd==f4, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7423a2e8941c5 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xc0a4efe244010 and rm_val == 0  
// opcode: fnmsub.d ; op1:f1; op2:f3; op3:f18; dest:f4; op1val:0x5fa33e5fa8c30e93; op2val:0x5fa7423a2e8941c5; op3val:0x7f5c0a4efe244010; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f4, f1, f3, f18, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f15, rs2==f8, rs3==f26, rd==f11, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3296d672a65d1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb85355aabaa39 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x874e2b9c22e4e and rm_val == 0  
// opcode: fnmsub.d ; op1:f15; op2:f8; op3:f26; dest:f11; op1val:0x5f93296d672a65d1; op2val:0x5fab85355aabaa39; op3val:0x7f5874e2b9c22e4e; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f11, f15, f8, f26, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f7, rs2==f1, rs3==f17, rd==f30, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf4364961dc6b6 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x0b4b0ef0151e1 and rm_val == 0  
// opcode: fnmsub.d ; op1:f7; op2:f1; op3:f17; dest:f30; op1val:0x5fa446cb61fdc3b2; op2val:0x5faf4364961dc6b6; op3val:0x7f70b4b0ef0151e1; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f30, f7, f1, f17, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f31, rs2==f2, rs3==f7, rd==f19, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8857812870f79 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1aef39f9fe967 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x57393547a45c1 and rm_val == 0  
// opcode: fnmsub.d ; op1:f31; op2:f2; op3:f7; dest:f19; op1val:0x5f98857812870f79; op2val:0x5fa1aef39f9fe967; op3val:0x7f557393547a45c1; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f19, f31, f2, f7, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f26, rs2==f29, rs3==f15, rd==f31, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b3752dc7833d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc84b619a10026 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x65309a7202f70 and rm_val == 0  
// opcode: fnmsub.d ; op1:f26; op2:f29; op3:f15; dest:f31; op1val:0x5fa9b3752dc7833d; op2val:0x5fac84b619a10026; op3val:0x7f765309a7202f70; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f31, f26, f29, f15, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f0, rs2==f23, rs3==f27, rd==f3, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x00277a2f4f0bf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x90362012c0cb9 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x9c80482a6805c and rm_val == 0  
// opcode: fnmsub.d ; op1:f0; op2:f23; op3:f27; dest:f3; op1val:0x5f900277a2f4f0bf; op2val:0x5fa90362012c0cb9; op3val:0x7f49c80482a6805c; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f3, f0, f23, f27, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f3, rs2==f16, rs3==f5, rd==f13, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2301284b72ea3 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x711ebfa469c8f and rm_val == 0  
// opcode: fnmsub.d ; op1:f3; op2:f16; op3:f5; dest:f13; op1val:0x5fa0e21bf0ae6b53; op2val:0x5fa2301284b72ea3; op3val:0x7f5711ebfa469c8f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f3, f16, f5, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f29, rs2==f10, rs3==f28, rd==f0, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x97fb42e62b463 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x1d50c466bbf9e and rm_val == 0  
// opcode: fnmsub.d ; op1:f29; op2:f10; op3:f28; dest:f0; op1val:0x5f82bf911dc09a97; op2val:0x5f997fb42e62b463; op3val:0x7f31d50c466bbf9e; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f0, f29, f10, f28, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1a9bebef0303 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7f55a94838f42 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xf1cca628f268a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faa1a9bebef0303; op2val:0x5fa7f55a94838f42; op3val:0x7f6f1cca628f268a; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x836b4f912cecf and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xaaa7b255c7729 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x196822539d977 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8836b4f912cecf; op2val:0x5f9aaa7b255c7729; op3val:0x7f4196822539d977; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x745f44472c873 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x57b0acf311df6 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa8ed6de3a3c8fa; op2val:0x5fa745f44472c873; op3val:0x7f657b0acf311df6; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x98293d5ceb2ef and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xeb5f64c7077bd and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f914faadcb89035; op2val:0x5f798293d5ceb2ef; op3val:0x7f1eb5f64c7077bd; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x695a923fbea6d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb19abcbfb877f and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x5456e59fed14e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9695a923fbea6d; op2val:0x5fab19abcbfb877f; op3val:0x7f55456e59fed14e; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x153f3df3c9356 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x8c3dc40054d5a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f99d04dcb95faaf; op2val:0x5fa153f3df3c9356; op3val:0x7f58c3dc40054d5a; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x6a9ba5700822b and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x739d7a56e9fb8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa89ad7120f1311; op2val:0x5f96a9ba5700822b; op3val:0x7f5739d7a56e9fb8; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x026995915c74a and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xb24d5920b3ef8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f658f8cdea3010f; op2val:0x5fa026995915c74a; op3val:0x7f1b24d5920b3ef8; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1039f3a2aafd1 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x8894af06d8327 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x86dbfa2d7dad0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f91039f3a2aafd1; op2val:0x5f98894af06d8327; op3val:0x7f486dbfa2d7dad0; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1615cea4dadaf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7ab1ecd91423c and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x17917ed98a956 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa1615cea4dadaf; op2val:0x5fa7ab1ecd91423c; op3val:0x7f617917ed98a956; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x18f86836ffdff and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6e81fb8b9962a and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x60e045de5a99d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f718f86836ffdff; op2val:0x5fa6e81fb8b9962a; op3val:0x7f360e045de5a99d; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4b051bdbe619 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x3ff0fc641f811 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x5888e51534e0d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9d4b051bdbe619; op2val:0x5f93ff0fc641f811; op3val:0x7f45888e51534e0d; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x31e2b61ae3886 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1c1ef9d33c7a6 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x17a651eb8d0fb and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa31e2b61ae3886; op2val:0x5fa1c1ef9d33c7a6; op3val:0x7f617a651eb8d0fb; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x218e10ebba3c3 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x537c93d28ea11 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x4a517db31106f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8218e10ebba3c3; op2val:0x5f9537c93d28ea11; op3val:0x7f34a517db31106f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4f8cd41d123b3 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xf858063768107 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x3f44c3edd4625 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4f8cd41d123b3; op2val:0x5f7f858063768107; op3val:0x7f43f44c3edd4625; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4303490992183 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x6ece4c5eeb64f and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xb559a62fe1ae3 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4303490992183; op2val:0x5f86ece4c5eeb64f; op3val:0x7f4b559a62fe1ae3; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21fe0e6f813e1 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x74b1d1a55566b and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x5b62bdb54a80e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa21fe0e6f813e1; op2val:0x5f874b1d1a55566b; op3val:0x7f45b62bdb54a80e; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x689c0c079e743 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6fa9ed12d7d63 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xb2a93fae87849 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9689c0c079e743; op2val:0x5fa6fa9ed12d7d63; op3val:0x7f5b2a93fae87849; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12848561a4bfb and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xd00f85557199f and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x73b2da345b419 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa12848561a4bfb; op2val:0x5f7d00f85557199f; op3val:0x7f373b2da345b419; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x822526bc71dac and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xec32f815aa7b3 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x367c665468d39 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa822526bc71dac; op2val:0x5faec32f815aa7b3; op3val:0x7f7367c665468d39; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ee35c3c6e18a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9cb33db44f779 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x55a1b1bc17fde and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4ee35c3c6e18a; op2val:0x5fa9cb33db44f779; op3val:0x7f655a1b1bc17fde; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x83bfe21cd38bb and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x2ea078d4d9f6b and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x80172b0401192 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa83bfe21cd38bb; op2val:0x5f92ea078d4d9f6b; op3val:0x7f580172b0401192; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe1f070ecd84ee and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x7f346bd6d6bd3 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x3fa9389bdd569 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae1f070ecd84ee; op2val:0x5f97f346bd6d6bd3; op3val:0x7f63fa9389bdd569; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc63da361c24b5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd14940d00f35c and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xc4cc9176642bb and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fac63da361c24b5; op2val:0x5fad14940d00f35c; op3val:0x7f6c4cc9176642bb; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x195b0309c25cd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x54b3a41baf155 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xa095261c3e457 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9195b0309c25cd; op2val:0x5fa54b3a41baf155; op3val:0x7f4a095261c3e457; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x904d55100df07 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16b5e65467710 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xe7c0c4191b0ff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9904d55100df07; op2val:0x5fa16b5e65467710; op3val:0x7f4e7c0c4191b0ff; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xae46f3a4f112b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2b92ef2f82fa3 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xec455343906ba and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8ae46f3a4f112b; op2val:0x5fa2b92ef2f82fa3; op3val:0x7f4ec455343906ba; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x56d651aa6d989 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xbeb0ceb099365 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xbc71033620f1b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f956d651aa6d989; op2val:0x5f9beb0ceb099365; op3val:0x7f4bc71033620f1b; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x291d166efb64f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x59dc19d58b8b0 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x942b03f488597 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa291d166efb64f; op2val:0x5fa59dc19d58b8b0; op3val:0x7f5942b03f488597; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaaf8c2ba7ae5d and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x2ac405849fc2d and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x5202e714c20ac and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faaaf8c2ba7ae5d; op2val:0x5f92ac405849fc2d; op3val:0x7f55202e714c20ac; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x753b59b321231 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x5ff3543c663d7 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x1854465d630e5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa753b59b321231; op2val:0x5f75ff3543c663d7; op3val:0x7f31854465d630e5; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbaee3f82e1a4b and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x40f05297754b9 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x8b2b4931a8148 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fabaee3f82e1a4b; op2val:0x5f940f05297754b9; op3val:0x7f58b2b4931a8148; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb799d6825a449 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xccad57bbc2fe8 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xf0666506d7659 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fab799d6825a449; op2val:0x5faccad57bbc2fe8; op3val:0x7f6f0666506d7659; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x7f5b3d9f355e3 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x5207f41d9edbb and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f908d4799198efb; op2val:0x5f87f5b3d9f355e3; op3val:0x7f35207f41d9edbb; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb52ff510445c5 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xefcdd3e3e2557 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf7a2e75fbb289 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fab52ff510445c5; op2val:0x5f8efcdd3e3e2557; op3val:0x7f4f7a2e75fbb289; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6f74d931bfd19 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x59c795046ed37 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xe6141d033d05c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6f74d931bfd19; op2val:0x5fa59c795046ed37; op3val:0x7f6e6141d033d05c; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xd63950e417d4b and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x0f6151b53208d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9de9cd9749822d; op2val:0x5f8d63950e417d4b; op3val:0x7f40f6151b53208d; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x99de5ce43d1d9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7798e778703f2 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x26b346513bcf3 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f999de5ce43d1d9; op2val:0x5fa7798e778703f2; op3val:0x7f626b346513bcf3; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xecd9ba7f13b97 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7100c5c4a1c8c and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x49be161f3bc58 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9ecd9ba7f13b97; op2val:0x5fa7100c5c4a1c8c; op3val:0x7f649be161f3bc58; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa4aabca9c0dd9 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x1158fdfe6abd5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faab523ab9b6599; op2val:0x5faa4aabca9c0dd9; op3val:0x7f71158fdfe6abd5; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xeb199ad9ca61b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x32b0364d2b1f9 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xafdb230685d28 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9eb199ad9ca61b; op2val:0x5fa32b0364d2b1f9; op3val:0x7f5afdb230685d28; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x261d116b1d5ef and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xc5688ba46673f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa8c6489f748893; op2val:0x5f8261d116b1d5ef; op3val:0x7f4c5688ba46673f; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x60c36c91e43db and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x711f241e91d41 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x5039457fe9c19 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f860c36c91e43db; op2val:0x5f9711f241e91d41; op3val:0x7f35039457fe9c19; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xeaff5366eca4b and fs3 == 0 and fe3 == 0x7f0 and fm3 == 0xf66682f529c03 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f57ae042250e45f; op2val:0x5f9eaff5366eca4b; op3val:0x7f0f66682f529c03; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b5705fef5d3c and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x1195ef71d8287 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8583e627948ff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa2b5705fef5d3c; op2val:0x5f91195ef71d8287; op3val:0x7f48583e627948ff; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xa71e144c30555 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x1499598e34a19 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa692171f6bd238; op2val:0x5f9a71e144c30555; op3val:0x7f61499598e34a19; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x61dc1b626f27f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe82764f1e3e7a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xb532779226ef2 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa61dc1b626f27f; op2val:0x5fae82764f1e3e7a; op3val:0x7f6b532779226ef2; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2bd60860ffe3c and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x426763f7a72bf and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xd154db10de256 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa2bd60860ffe3c; op2val:0x5f9426763f7a72bf; op3val:0x7f4d154db10de256; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7d27c822e38f3 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x11c620e043403 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xe8cee9c58ed88 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f87d27c822e38f3; op2val:0x5f911c620e043403; op3val:0x7f2e8cee9c58ed88; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc5afd2cb1163d and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x936101c2158cc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa08d5803cd8234; op2val:0x5f9c5afd2cb1163d; op3val:0x7f5936101c2158cc; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88a542fef4657 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7f0e259ef1af1 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x198311fb94276 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f788a542fef4657; op2val:0x5fa7f0e259ef1af1; op3val:0x7f4198311fb94276; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x493122d9aad5a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcb782eb8cdb42 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x5387fa5dc3d0b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa493122d9aad5a; op2val:0x5facb782eb8cdb42; op3val:0x7f65387fa5dc3d0b; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5903a0fb21b3f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x08c04aebe0346 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x08b3aebab606d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa5903a0fb21b3f; op2val:0x5fa08c04aebe0346; op3val:0x7f608b3aebab606d; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x48f3656a4f33b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x61b5886460bee and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8f1494ddbd331 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f848f3656a4f33b; op2val:0x5fa61b5886460bee; op3val:0x7f48f1494ddbd331; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf23474bb7cc16 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xa6bd446bfb2c7 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x6765cdf1c1485 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faf23474bb7cc16; op2val:0x5f9a6bd446bfb2c7; op3val:0x7f66765cdf1c1485; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xac413f7bb0305 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x5508f2c02a8b7 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xabf8053f9d27b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9ac413f7bb0305; op2val:0x5f75508f2c02a8b7; op3val:0x7f2abf8053f9d27b; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x784a68ccbae49 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x9628b4f82971b and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x9310955e3dd56 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9784a68ccbae49; op2val:0x5f99628b4f82971b; op3val:0x7f49310955e3dd56; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3b61dbeccea83 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x81d06dbc53f22 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x4b39cbde7ef51 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa3b61dbeccea83; op2val:0x5fa81d06dbc53f22; op3val:0x7f64b39cbde7ef51; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xefdfc9ff93d7f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x702c88a55e7a7 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xbdb5e0ce16611 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8efdfc9ff93d7f; op2val:0x5f8702c88a55e7a7; op3val:0x7f2bdb5e0ce16611; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x20c1a38b8c097 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x5650feeabcaed and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f94c075eef493d9; op2val:0x5fa20c1a38b8c097; op3val:0x7f55650feeabcaed; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xde7ef4a369968 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x7c49a20636046 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa7f78548664fb5; op2val:0x5fade7ef4a369968; op3val:0x7f67c49a20636046; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6e292e0f40648 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x9e6cf78e30774 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa05cc7ce1db3f8; op2val:0x5fa6e292e0f40648; op3val:0x7f59e6cf78e30774; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x98f56645aea7f and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x291e2bfc27bff and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xa3728ac925789 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa98f56645aea7f; op2val:0x5f6291e2bfc27bff; op3val:0x7f2a3728ac925789; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe7a274d23529b and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x41ef6896a181b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faac200a6c90fc3; op2val:0x5fae7a274d23529b; op3val:0x7f741ef6896a181b; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb01954875dbe6 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x5ed0ee287a8c3 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7f0c6f00d0a117; op2val:0x5fab01954875dbe6; op3val:0x7f45ed0ee287a8c3; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6ee815d1c73e3 and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x80d12abb5bebf and fs3 == 0 and fe3 == 0x7ef and fm3 == 0xfbd4f6dd5db49 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f86ee815d1c73e3; op2val:0x5f580d12abb5bebf; op3val:0x7effbd4f6dd5db49; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x78021920eec47 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x96bb2b5183927 and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x18d8fb6d62b73 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f778021920eec47; op2val:0x5f796bb2b5183927; op3val:0x7f118d8fb6d62b73; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8c719398e006e and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xdb587e8ea0f70 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f825ecf43c688c3; op2val:0x5fa8c719398e006e; op3val:0x7f3db587e8ea0f70; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2ceeb7addc7ab and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0xf3031df784e52 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7a66f0b9f8cc27; op2val:0x5fa2ceeb7addc7ab; op3val:0x7f2f3031df784e52; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x55caa186f3c8d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x77ac231460806 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x883011d03136f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa55caa186f3c8d; op2val:0x5fa77ac231460806; op3val:0x7f6883011d03136f; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53179f7662fcf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc651e321ee763 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x0dab53c0c8b18 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa53179f7662fcf; op2val:0x5fac651e321ee763; op3val:0x7f70dab53c0c8b18; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xf867fde0ccba7 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xa8816a080e712 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9db485bd8641e5; op2val:0x5f7f867fde0ccba7; op3val:0x7f3a8816a080e712; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcbb38ba3c7e34 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x94f30f37b3d53 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xcae90b453d184 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5facbb38ba3c7e34; op2val:0x5fa94f30f37b3d53; op3val:0x7f6cae90b453d184; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdf7ad714d60e2 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x21d0aa9d41021 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fac2640341cc4c7; op2val:0x5fadf7ad714d60e2; op3val:0x7f721d0aa9d41021; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x25321d9b34d0f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xb315fb9cba7b1 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x6340d6a75729d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f725321d9b34d0f; op2val:0x5f9b315fb9cba7b1; op3val:0x7f26340d6a75729d; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf5ee3b37f961b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x12594711492ab and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xc7ebcece0ad61 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8f5ee3b37f961b; op2val:0x5fa12594711492ab; op3val:0x7f4c7ebcece0ad61; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae9b31f9a3121 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x63641e1ac54f8 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xb4a2ce84f404b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9ae9b31f9a3121; op2val:0x5fa63641e1ac54f8; op3val:0x7f5b4a2ce84f404b; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7d5bb4d050181 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xfc0f2a61491bd and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x423460722eef3 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f97d5bb4d050181; op2val:0x5f9fc0f2a61491bd; op3val:0x7f5423460722eef3; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9a31c342c7b5b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3ef03938bd059 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x6dcd5ac35e8c9 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa9a31c342c7b5b; op2val:0x5fa3ef03938bd059; op3val:0x7f66dcd5ac35e8c9; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x90b3cf22a50bf and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x4e4c4b1e69782 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa35787ca99e0af; op2val:0x5fa90b3cf22a50bf; op3val:0x7f64e4c4b1e69782; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x474683222afa7 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x6daed80aff873 and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x41001abc4a50f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7474683222afa7; op2val:0x5f86daed80aff873; op3val:0x7f141001abc4a50f; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1c6de58039298 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6e9d2a2e46474 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x191aab7712356 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa1c6de58039298; op2val:0x5fa6e9d2a2e46474; op3val:0x7f6191aab7712356; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8755fffcef0ef and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x50aabc36dfa15 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x212b4a128c0ed and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f88755fffcef0ef; op2val:0x5f950aabc36dfa15; op3val:0x7f3212b4a128c0ed; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b3842d8efcbe and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2c588e1376ac3 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x086841a8a6b52 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4b3842d8efcbe; op2val:0x5fa2c588e1376ac3; op3val:0x7f6086841a8a6b52; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x437a4e1419f0d and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x422135092fed7 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x13036666fa9e3 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9437a4e1419f0d; op2val:0x5f9422135092fed7; op3val:0x7f413036666fa9e3; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb57a54ad9d312 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x60c7c307e31a7 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xc4c9c6f3f61ef and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fab57a54ad9d312; op2val:0x5f760c7c307e31a7; op3val:0x7f3c4c9c6f3f61ef; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xfe78141983bff and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x183c18f73341f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x13dc851e5db56 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7fe78141983bff; op2val:0x5f7183c18f73341f; op3val:0x7f113dc851e5db56; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xda206db2e93ff and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0xc1325f19d9f5f and fs3 == 0 and fe3 == 0x7e9 and fm3 == 0xd4bd8310acfff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f1da206db2e93ff; op2val:0x5f6c1325f19d9f5f; op3val:0x7e9d4bd8310acfff; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb122b80686473 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xe43fe6a95bdeb and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x6be13628caf4f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9b122b80686473; op2val:0x5f9e43fe6a95bdeb; op3val:0x7f56be13628caf4f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x15e91a9fc6f05 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x13083ccf1d8b1 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xc7ff97eb91fcd and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f915e91a9fc6f05; op2val:0x5f913083ccf1d8b1; op3val:0x7f3c7ff97eb91fcd; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x41d8cde4898c6 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb9a0c0999e25b and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x2378dc6cb0713 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa41d8cde4898c6; op2val:0x5fab9a0c0999e25b; op3val:0x7f62378dc6cb0713; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cb2b8c8391a5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa5a1a13aed9e5 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x56682c72dbc64 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa9cb2b8c8391a5; op2val:0x5faa5a1a13aed9e5; op3val:0x7f656682c72dbc64; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x5ed3b83d4d06f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x955605918543b and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x0ae029187bde6 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f85ed3b83d4d06f; op2val:0x5fa955605918543b; op3val:0x7f50ae029187bde6; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9423ad1f49e07 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x11bbf238cf0de and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x888df09f9598c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f89423ad1f49e07; op2val:0x5fa11bbf238cf0de; op3val:0x7f4888df09f9598c; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8a675e7e0ea9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x908ceac3ed748 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x0264ad9dfe5ca and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9e8a675e7e0ea9; op2val:0x5fa908ceac3ed748; op3val:0x7f60264ad9dfe5ca; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5d8b8d100d4ad and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x0288c3fc6a2e3 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x4896becffa1e0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f95d8b8d100d4ad; op2val:0x5f90288c3fc6a2e3; op3val:0x7f44896becffa1e0; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa7ae3286d0c8f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe0ca2c7a6ffb0 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x40b3f02037def and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9a7ae3286d0c8f; op2val:0x5fae0ca2c7a6ffb0; op3val:0x7f640b3f02037def; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3315db9e9910d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x53671e4145242 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x366e2e845b373 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f93315db9e9910d; op2val:0x5fa53671e4145242; op3val:0x7f5366e2e845b373; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0xaeb807b25f33f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7d97bc07bb6a5 and fs3 == 0 and fe3 == 0x7f0 and fm3 == 0x782bd18a15ef7 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f4aeb807b25f33f; op2val:0x5fa7d97bc07bb6a5; op3val:0x7f0782bd18a15ef7; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb0ad9f88c3fd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcca22e1b83439 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x45a1d240ee7c6 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5facb0ad9f88c3fd; op2val:0x5facca22e1b83439; op3val:0x7f745a1d240ee7c6; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcea5e0336397b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x632d61a0c97c8 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x34b8ef57e4607 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5facea5e0336397b; op2val:0x5fa632d61a0c97c8; op3val:0x7f734b8ef57e4607; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x25e6420f5c09f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9ed1784fa671a and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf1b262489767c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f925e6420f5c09f; op2val:0x5fa9ed1784fa671a; op3val:0x7f4f1b262489767c; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd1d9dedc8d4db and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x16ce13b7494bf and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x9302003497b29 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8d1d9dedc8d4db; op2val:0x5f716ce13b7494bf; op3val:0x7f19302003497b29; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09bc54bda7ca2 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x27fa95459d3d1 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x9c05ead4f204f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa09bc54bda7ca2; op2val:0x5f927fa95459d3d1; op3val:0x7f49c05ead4f204f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7db5311d3a19f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xac63c4f037629 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x098ec9c62b318 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa7db5311d3a19f; op2val:0x5faac63c4f037629; op3val:0x7f7098ec9c62b318; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe67b863f16ae2 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdad12fade7910 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x13acc1a4cf4b8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae67b863f16ae2; op2val:0x5fadad12fade7910; op3val:0x7f713acc1a4cf4b8; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc28c8267d9ab4 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf94cbf20a6254 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x3ee4f7bfa8720 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fac28c8267d9ab4; op2val:0x5faf94cbf20a6254; op3val:0x7f73ee4f7bfa8720; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3f7bce331716b and fs2 == 0 and fe2 == 0x5f3 and fm2 == 0x3183ef4678c7f and fs3 == 0 and fe3 == 0x7ed and fm3 == 0x72766c18c9427 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f83f7bce331716b; op2val:0x5f33183ef4678c7f; op3val:0x7ed72766c18c9427; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd87f48bf1c7 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xa359c4048cb6b and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x52168279e9c80 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9add87f48bf1c7; op2val:0x5f9a359c4048cb6b; op3val:0x7f552168279e9c80; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x15aec43b7bf87 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x62aab2512cca5 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x108bda8d88793 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f915aec43b7bf87; op2val:0x5f962aab2512cca5; op3val:0x7f4108bda8d88793; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x099a756bd881b and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x2af313c25ada5 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x16321baa11776 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8099a756bd881b; op2val:0x5f92af313c25ada5; op3val:0x7f316321baa11776; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x48ac00057963a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9ccdd3e7a322c and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x647e03afe5897 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa48ac00057963a; op2val:0x5fa9ccdd3e7a322c; op3val:0x7f6647e03afe5897; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x77fc19dd1d407 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x1d47422b88b69 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x7a99d69de1b5b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f877fc19dd1d407; op2val:0x5f91d47422b88b69; op3val:0x7f37a99d69de1b5b; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86c42550ad12b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9d11e7f58461f and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x21ccd9e5c06f2 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f886c42550ad12b; op2val:0x5fa9d11e7f58461f; op3val:0x7f521ccd9e5c06f2; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xccdb65c979493 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xef491a115c81f and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x54f69aae033ec and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8ccdb65c979493; op2val:0x5f7ef491a115c81f; op3val:0x7f254f69aae033ec; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ceb420df408f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc51162e460b0e and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xab7e6e68b9501 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4ceb420df408f; op2val:0x5fac51162e460b0e; op3val:0x7f6ab7e6e68b9501; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb608b57d7bf4f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x5ab1b114777e7 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x8c7af50268328 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fab608b57d7bf4f; op2val:0x5f85ab1b114777e7; op3val:0x7f48c7af50268328; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x55c3845664053 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xaac59c0e5d8ef and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x99c54678908f8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f955c3845664053; op2val:0x5faaac59c0e5d8ef; op3val:0x7f599c54678908f8; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6568f5c6359d5 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xa124c133921cf and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x80f2cda9c9f33 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6568f5c6359d5; op2val:0x5f7a124c133921cf; op3val:0x7f380f2cda9c9f33; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe8d90453e9cfb and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x7fc89aad95937 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x06f4b410355ec and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8e8d90453e9cfb; op2val:0x5f87fc89aad95937; op3val:0x7f306f4b410355ec; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3d7504400059d and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xc7c1eba75a687 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xfdba8faed90f0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f93d7504400059d; op2val:0x5f8c7c1eba75a687; op3val:0x7f3fdba8faed90f0; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb913b7c55ffdf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2375c8ebc2475 and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xb3adc45eedd5a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f5b913b7c55ffdf; op2val:0x5fa2375c8ebc2475; op3val:0x7f1b3adc45eedd5a; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x339d1964c64f1 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x8236520d6c6fb and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x9b3cb7841f077 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9339d1964c64f1; op2val:0x5f98236520d6c6fb; op3val:0x7f49b3cb7841f077; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x402cbce109a77 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x7a037fec02fad and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x792f61f3327a7 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9402cbce109a77; op2val:0x5f97a037fec02fad; op3val:0x7f4792f61f3327a7; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2f72b0267e3ba and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x47b4bc16b5bb5 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x08e906aea4387 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa2f72b0267e3ba; op2val:0x5f947b4bc16b5bb5; op3val:0x7f508e906aea4387; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xed366397a0657 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x012632d0614c9 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x68bf7297e9a68 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faed366397a0657; op2val:0x5f9012632d0614c9; op3val:0x7f568bf7297e9a68; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0xf03ec3d1c1d8f and fs3 == 0 and fe3 == 0x7ee and fm3 == 0x27314d13a5e49 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f56b7004b70b43f; op2val:0x5f6f03ec3d1c1d8f; op3val:0x7ee27314d13a5e49; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6909f0cdef409 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x69f56211d9e5b and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xbb9c1a2343426 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f96909f0cdef409; op2val:0x5fa69f56211d9e5b; op3val:0x7f5bb9c1a2343426; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xdd70c0ad2c58b and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xf6f99ba4944eb and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4132da9546dfd; op2val:0x5f9dd70c0ad2c58b; op3val:0x7f5f6f99ba4944eb; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3b49de25b5810 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x43ad2ac887783 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xa696c6dda9a21 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa3b49de25b5810; op2val:0x5fa43ad2ac887783; op3val:0x7f5a696c6dda9a21; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa92ce67e64f49 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x28f1335426ef4 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf7103d55fe09a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9a92ce67e64f49; op2val:0x5fa28f1335426ef4; op3val:0x7f4f7103d55fe09a; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0ad13253643d4 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x18cbe0d5b0ab6 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x2803b62c23bf9 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa0ad13253643d4; op2val:0x5fa18cbe0d5b0ab6; op3val:0x7f52803b62c23bf9; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe6ad80efba433 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x34501d37fe38d and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x21cfa6fc52470 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8e6ad80efba433; op2val:0x5f934501d37fe38d; op3val:0x7f421cfa6fc52470; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xb98a4751306d7 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x812176d0bfffa and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa039904d15cfd4; op2val:0x5f9b98a4751306d7; op3val:0x7f5812176d0bfffa; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1e577746908d8 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3d812c3e43b86 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x5897964725238 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa1e577746908d8; op2val:0x5fa3d812c3e43b86; op3val:0x7f65897964725238; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0a470198b7628 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x49abc8377a2f1 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x119439f965820 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa0a470198b7628; op2val:0x5fa49abc8377a2f1; op3val:0x7f6119439f965820; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb16f8f726369 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x82db2eb039623 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xfa959e4e09142 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5facb16f8f726369; op2val:0x5f982db2eb039623; op3val:0x7f5fa959e4e09142; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbc4d8895bf826 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x415cc9ae1aebd and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x111b743f956ed and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fabc4d8895bf826; op2val:0x5f9415cc9ae1aebd; op3val:0x7f6111b743f956ed; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x388f2590db1b3 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x3fe541b09258b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x97254824bf66d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa388f2590db1b3; op2val:0x5f83fe541b09258b; op3val:0x7f397254824bf66d; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x010befcbab41f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x943e82f8af8c3 and fs3 == 0 and fe3 == 0x7f0 and fm3 == 0x1dbd0b3071840 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f6010befcbab41f; op2val:0x5f8943e82f8af8c3; op3val:0x7f01dbd0b3071840; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3d1a2580ed007 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x3b45a2375b697 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x385ee2764b288 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f93d1a2580ed007; op2val:0x5f73b45a2375b697; op3val:0x7f2385ee2764b288; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf615e3d1dc570 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x02c6758f19d47 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xfb266dd29aa19 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faf615e3d1dc570; op2val:0x5fa02c6758f19d47; op3val:0x7f6fb266dd29aa19; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6fd76e25872b5 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x52e5a4c6824cb and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xc9f535a13607a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6fd76e25872b5; op2val:0x5f952e5a4c6824cb; op3val:0x7f5c9f535a13607a; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x6a01466b8215f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3aa401f0be9eb and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0xd0ec3e9b05988 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f66a01466b8215f; op2val:0x5fa3aa401f0be9eb; op3val:0x7f1d0ec3e9b05988; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2cf1d3b6ac94b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x899f171a9297a and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0xb14a5d519e4f5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f92cf1d3b6ac94b; op2val:0x5fa899f171a9297a; op3val:0x7f5b14a5d519e4f5; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x99e7a144435ef and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xa4501af2d40bf and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x833bb1ca74a3b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa99e7a144435ef; op2val:0x5f9a4501af2d40bf; op3val:0x7f5833bb1ca74a3b; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb537f328e16b0 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xfac7da9ef1ce9 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xd7119bb697372 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fab537f328e16b0; op2val:0x5fafac7da9ef1ce9; op3val:0x7f6d7119bb697372; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25a6085117eb3 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x23cbe38fed7af and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x63f34397814cf and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa25a6085117eb3; op2val:0x5f923cbe38fed7af; op3val:0x7f463f34397814cf; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6d796ca9f3e52 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xb0624ba20ab53 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x1aa8115c0ce5b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6d796ca9f3e52; op2val:0x5f8b0624ba20ab53; op3val:0x7f51aa8115c0ce5b; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xede45ea2ac4af and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcf344fe49aeb9 and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x5e8e56be7a393 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faede45ea2ac4af; op2val:0x5facf344fe49aeb9; op3val:0x7f75e8e56be7a393; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x57b12a6c8424b and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x4e072cb2d87d3 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xa1332dd035fa3 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa57b12a6c8424b; op2val:0x5f84e072cb2d87d3; op3val:0x7f4a1332dd035fa3; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb9ec201d5923 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb67a2291e65ec and fs3 == 0 and fe3 == 0x7f7 and fm3 == 0x957c7ebd93448 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fadb9ec201d5923; op2val:0x5fab67a2291e65ec; op3val:0x7f7957c7ebd93448; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b230d0edf6b7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcef388d58d8ec and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xc6f157f95857d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa2b230d0edf6b7; op2val:0x5facef388d58d8ec; op3val:0x7f6c6f157f95857d; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8b20864979939 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x675514445d7d5 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xb78df038d879f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f98b20864979939; op2val:0x5f9675514445d7d5; op3val:0x7f4b78df038d879f; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x40d80b76bc040 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x34403635e831b and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x23257890d439f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa40d80b76bc040; op2val:0x5f934403635e831b; op3val:0x7f523257890d439f; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbc63a6420b0e7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xee5369ab02b92 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x3417873001a88 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8bc63a6420b0e7; op2val:0x5faee5369ab02b92; op3val:0x7f53417873001a88; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc1facf9764ac8 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x8f2c40125fbb7 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x8e85304d45566 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fac1facf9764ac8; op2val:0x5f78f2c40125fbb7; op3val:0x7f38e85304d45566; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9a10b6e4ec167 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc74abdfb676c7 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x60e73c132f71e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa9a10b6e4ec167; op2val:0x5f9c74abdfb676c7; op3val:0x7f660e73c132f71e; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6da2613270600 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd79a3e9b52e6a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xd5cd99060f6b9 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6da2613270600; op2val:0x5fad79a3e9b52e6a; op3val:0x7f6d5cd99060f6b9; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe418564c20c07 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7009b07ae3d88 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x46e4d09df3d47 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9e418564c20c07; op2val:0x5fa7009b07ae3d88; op3val:0x7f646e4d09df3d47; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x347f8263d98bd and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0xfc18b696ac21f and fs3 == 0 and fe3 == 0x7f1 and fm3 == 0x1d8fdc14bac89 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9347f8263d98bd; op2val:0x5f5fc18b696ac21f; op3val:0x7f11d8fdc14bac89; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x0645d4519cddf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8436c13d47a1b and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0x3c693bf9f8fa9 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f70645d4519cddf; op2val:0x5fa8436c13d47a1b; op3val:0x7f33c693bf9f8fa9; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0bde6858f4b91 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7b855d00f829f and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x4bdf5c73bce49 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa0bde6858f4b91; op2val:0x5fa7b855d00f829f; op3val:0x7f64bdf5c73bce49; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3476623b5f3d7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x450c74c9b42e4 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x6dd20fedb35a7 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f83476623b5f3d7; op2val:0x5fa450c74c9b42e4; op3val:0x7f46dd20fedb35a7; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xe7c922b2d54e3 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x4e619d93f2a4b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faac44ace32d282; op2val:0x5f9e7c922b2d54e3; op3val:0x7f64e619d93f2a4b; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdfe8e9311623f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xfdc528ede5c0d and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x5f42acde5ee8e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8dfe8e9311623f; op2val:0x5fafdc528ede5c0d; op3val:0x7f55f42acde5ee8e; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0xaf7d1e8a8527f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xacc8bf5e07e70 and fs3 == 0 and fe3 == 0x7f0 and fm3 == 0xc71408c566bb7 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f4af7d1e8a8527f; op2val:0x5faacc8bf5e07e70; op3val:0x7f0c71408c566bb7; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x353501de56e49 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x405e69652cae2 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x9c4f99f3efdee and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa353501de56e49; op2val:0x5fa405e69652cae2; op3val:0x7f59c4f99f3efdee; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0x6b5ac213a2c3b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8e759ff97b7507; op2val:0x5fa16a5368858d8c; op3val:0x7f46b5ac213a2c3b; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xca7049f840037 and fs2 == 0 and fe2 == 0x5f2 and fm2 == 0x61f77377e85ff and fs3 == 0 and fe3 == 0x7ec and fm3 == 0x7f2d009694180 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8ca7049f840037; op2val:0x5f261f77377e85ff; op3val:0x7ec7f2d009694180; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7be065394fb87 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0f047e17234a4 and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x4105122215908 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f97be065394fb87; op2val:0x5fa0f047e17234a4; op3val:0x7f54105122215908; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x83a272ac3e0fc and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x9b17c3381c95b and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x6f71ab211379c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa83a272ac3e0fc; op2val:0x5f99b17c3381c95b; op3val:0x7f56f71ab211379c; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c697b9f4c156 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x37f62582fdc3f and fs3 == 0 and fe3 == 0x7f5 and fm3 == 0x28993dd4d19be and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa4c697b9f4c156; op2val:0x5f937f62582fdc3f; op3val:0x7f528993dd4d19be; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6607c34459dce and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x132ac57683a83 and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0x11a3e2c200294 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6607c34459dce; op2val:0x5fa132ac57683a83; op3val:0x7f611a3e2c200294; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9a3855b4b1a63 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x495d2e6438f63 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x8b14942eb8464 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f89a3855b4b1a63; op2val:0x5f8495d2e6438f63; op3val:0x7f28b14942eb8464; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbef6db92e2fbf and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x5dcfa9a24791f and fs3 == 0 and fe3 == 0x7ef and fm3 == 0x492dd06bdb870 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7bef6db92e2fbf; op2val:0x5f65dcfa9a24791f; op3val:0x7ef492dd06bdb870; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1280, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x5f8e759ff97b7507
.dword 0x5fa16a5368858d8c
.dword 0x5f8e759ff97b7507
.dword 0x5f88ff93428ba4ff
.dword 0x5f8ac9ee205b0abf
.dword 0x7f288040dc1a880c
.dword 0x5fa90fd00d7a804d
.dword 0x5f825d75bdafbc97
.dword 0x7f44ffcea3ece971
.dword 0x5f8ca7049f840037
.dword 0x5f261f77377e85ff
.dword 0x5f261f77377e85ff
.dword 0x5f97be065394fb87
.dword 0x5fa0f047e17234a4
.dword 0x5f97be065394fb87
.dword 0x5facc7fa2c262245
.dword 0x5fa707b78d06c987
.dword 0x7f6c50663f0b34df
.dword 0x5fa83a272ac3e0fc
.dword 0x5fa83a272ac3e0fc
.dword 0x5fa83a272ac3e0fc
.dword 0x5fa4c697b9f4c156
.dword 0x5fa4c697b9f4c156
.dword 0x7f528993dd4d19be
.dword 0x5fa6607c34459dce
.dword 0x5fa6607c34459dce
.dword 0x5fa6607c34459dce
.dword 0x5f89a3855b4b1a63
.dword 0x5f8495d2e6438f63
.dword 0x5f8495d2e6438f63
.dword 0x5f7bef6db92e2fbf
.dword 0x5f7bef6db92e2fbf
.dword 0x7ef492dd06bdb870
.dword 0x5f9bf83685979e3d
.dword 0x5fa8381c48e230d5
.dword 0x7f5f6f86ae761e88
.dword 0x5fa9d05338d20148
.dword 0x5fadd0d05440db8f
.dword 0x7f7662ba7f57a5d0
.dword 0x5fa6e9146c51e452
.dword 0x5fa7abc88bf9fef0
.dword 0x7f66c5328f4e2d56
.dword 0x5fab771f235b3b5a
.dword 0x5fa33c6c6f19f493
.dword 0x7f6fd089154c0c41
.dword 0x5fabdb3961600dfc
.dword 0x5fa63aa702c60f2f
.dword 0x7f65f358c3520740
.dword 0x5fa13e8154135a8d
.dword 0x5fadc11b455bc9be
.dword 0x7f65370259ff8df1
.dword 0x5f97089e44f25db5
.dword 0x5f8de080c818631b
.dword 0x7f372dedc023a90a
.dword 0x5fa95b24345add6a
.dword 0x5fa3f1e47bb1b181
.dword 0x7f609a87ab0513d0
.dword 0x5faeb04ea6a14a83
.dword 0x5fac8bad349c4595
.dword 0x7f6f167373f3a798
.dword 0x5fa4abb0d7c973ba
.dword 0x5f9c6e2320e480b1
.dword 0x7f5cc25f4d938cc3
.dword 0x5fa0f20e78d8f9d2
.dword 0x5f62f9d33403a65f
.dword 0x7f1e27a740758a8e
.dword 0x5fa0c1a806800541
.dword 0x5f9d796149975c91
.dword 0x7f526b56e6c526bb
.dword 0x5fa8a7945b061b5b
.dword 0x5fa52e97b0ef6836
.dword 0x7f6858da164e2118
.dword 0x5fa33e5fa8c30e93
.dword 0x5fa7423a2e8941c5
.dword 0x7f5c0a4efe244010
.dword 0x5f93296d672a65d1
.dword 0x5fab85355aabaa39
.dword 0x7f5874e2b9c22e4e
.dword 0x5fa446cb61fdc3b2
.dword 0x5faf4364961dc6b6
.dword 0x7f70b4b0ef0151e1
.dword 0x5f98857812870f79
.dword 0x5fa1aef39f9fe967
.dword 0x7f557393547a45c1
.dword 0x5fa9b3752dc7833d
.dword 0x5fac84b619a10026
.dword 0x7f765309a7202f70
.dword 0x5f900277a2f4f0bf
.dword 0x5fa90362012c0cb9
.dword 0x7f49c80482a6805c
.dword 0x5fa0e21bf0ae6b53
.dword 0x5fa2301284b72ea3
.dword 0x7f5711ebfa469c8f
.dword 0x5f82bf911dc09a97
.dword 0x5f997fb42e62b463
.dword 0x7f31d50c466bbf9e
.dword 0x5faa1a9bebef0303
.dword 0x5fa7f55a94838f42
.dword 0x7f6f1cca628f268a
.dword 0x5f8836b4f912cecf
.dword 0x5f9aaa7b255c7729
.dword 0x7f4196822539d977
.dword 0x5fa8ed6de3a3c8fa
.dword 0x5fa745f44472c873
.dword 0x7f657b0acf311df6
.dword 0x5f914faadcb89035
.dword 0x5f798293d5ceb2ef
.dword 0x7f1eb5f64c7077bd
.dword 0x5f9695a923fbea6d
.dword 0x5fab19abcbfb877f
.dword 0x7f55456e59fed14e
.dword 0x5f99d04dcb95faaf
.dword 0x5fa153f3df3c9356
.dword 0x7f58c3dc40054d5a
.dword 0x5fa89ad7120f1311
.dword 0x5f96a9ba5700822b
.dword 0x7f5739d7a56e9fb8
.dword 0x5f658f8cdea3010f
.dword 0x5fa026995915c74a
.dword 0x7f1b24d5920b3ef8
.dword 0x5f91039f3a2aafd1
.dword 0x5f98894af06d8327
.dword 0x7f486dbfa2d7dad0
.dword 0x5fa1615cea4dadaf
.dword 0x5fa7ab1ecd91423c
.dword 0x7f617917ed98a956
.dword 0x5f718f86836ffdff
.dword 0x5fa6e81fb8b9962a
.dword 0x7f360e045de5a99d
.dword 0x5f9d4b051bdbe619
.dword 0x5f93ff0fc641f811
.dword 0x7f45888e51534e0d
.dword 0x5fa31e2b61ae3886
.dword 0x5fa1c1ef9d33c7a6
.dword 0x7f617a651eb8d0fb
.dword 0x5f8218e10ebba3c3
.dword 0x5f9537c93d28ea11
.dword 0x7f34a517db31106f
.dword 0x5fa4f8cd41d123b3
.dword 0x5f7f858063768107
.dword 0x7f43f44c3edd4625
.dword 0x5fa4303490992183
.dword 0x5f86ece4c5eeb64f
.dword 0x7f4b559a62fe1ae3
.dword 0x5fa21fe0e6f813e1
.dword 0x5f874b1d1a55566b
.dword 0x7f45b62bdb54a80e
.dword 0x5f9689c0c079e743
.dword 0x5fa6fa9ed12d7d63
.dword 0x7f5b2a93fae87849
.dword 0x5fa12848561a4bfb
.dword 0x5f7d00f85557199f
.dword 0x7f373b2da345b419
.dword 0x5fa822526bc71dac
.dword 0x5faec32f815aa7b3
.dword 0x7f7367c665468d39
.dword 0x5fa4ee35c3c6e18a
.dword 0x5fa9cb33db44f779
.dword 0x7f655a1b1bc17fde
.dword 0x5fa83bfe21cd38bb
.dword 0x5f92ea078d4d9f6b
.dword 0x7f580172b0401192
.dword 0x5fae1f070ecd84ee
.dword 0x5f97f346bd6d6bd3
.dword 0x7f63fa9389bdd569
.dword 0x5fac63da361c24b5
.dword 0x5fad14940d00f35c
.dword 0x7f6c4cc9176642bb
.dword 0x5f9195b0309c25cd
.dword 0x5fa54b3a41baf155
.dword 0x7f4a095261c3e457
.dword 0x5f9904d55100df07
.dword 0x5fa16b5e65467710
.dword 0x7f4e7c0c4191b0ff
.dword 0x5f8ae46f3a4f112b
.dword 0x5fa2b92ef2f82fa3
.dword 0x7f4ec455343906ba
.dword 0x5f956d651aa6d989
.dword 0x5f9beb0ceb099365
.dword 0x7f4bc71033620f1b
.dword 0x5fa291d166efb64f
.dword 0x5fa59dc19d58b8b0
.dword 0x7f5942b03f488597
.dword 0x5faaaf8c2ba7ae5d
.dword 0x5f92ac405849fc2d
.dword 0x7f55202e714c20ac
.dword 0x5fa753b59b321231
.dword 0x5f75ff3543c663d7
.dword 0x7f31854465d630e5
.dword 0x5fabaee3f82e1a4b
.dword 0x5f940f05297754b9
.dword 0x7f58b2b4931a8148
.dword 0x5fab799d6825a449
.dword 0x5faccad57bbc2fe8
.dword 0x7f6f0666506d7659
.dword 0x5f908d4799198efb
.dword 0x5f87f5b3d9f355e3
.dword 0x7f35207f41d9edbb
.dword 0x5fab52ff510445c5
.dword 0x5f8efcdd3e3e2557
.dword 0x7f4f7a2e75fbb289
.dword 0x5fa6f74d931bfd19
.dword 0x5fa59c795046ed37
.dword 0x7f6e6141d033d05c
.dword 0x5f9de9cd9749822d
.dword 0x5f8d63950e417d4b
.dword 0x7f40f6151b53208d
.dword 0x5f999de5ce43d1d9
.dword 0x5fa7798e778703f2
.dword 0x7f626b346513bcf3
.dword 0x5f9ecd9ba7f13b97
.dword 0x5fa7100c5c4a1c8c
.dword 0x7f649be161f3bc58
.dword 0x5faab523ab9b6599
.dword 0x5faa4aabca9c0dd9
.dword 0x7f71158fdfe6abd5
.dword 0x5f9eb199ad9ca61b
.dword 0x5fa32b0364d2b1f9
.dword 0x7f5afdb230685d28
.dword 0x5fa8c6489f748893
.dword 0x5f8261d116b1d5ef
.dword 0x7f4c5688ba46673f
.dword 0x5f860c36c91e43db
.dword 0x5f9711f241e91d41
.dword 0x7f35039457fe9c19
.dword 0x5f57ae042250e45f
.dword 0x5f9eaff5366eca4b
.dword 0x7f0f66682f529c03
.dword 0x5fa2b5705fef5d3c
.dword 0x5f91195ef71d8287
.dword 0x7f48583e627948ff
.dword 0x5fa692171f6bd238
.dword 0x5f9a71e144c30555
.dword 0x7f61499598e34a19
.dword 0x5fa61dc1b626f27f
.dword 0x5fae82764f1e3e7a
.dword 0x7f6b532779226ef2
.dword 0x5fa2bd60860ffe3c
.dword 0x5f9426763f7a72bf
.dword 0x7f4d154db10de256
.dword 0x5f87d27c822e38f3
.dword 0x5f911c620e043403
.dword 0x7f2e8cee9c58ed88
.dword 0x5fa08d5803cd8234
.dword 0x5f9c5afd2cb1163d
.dword 0x7f5936101c2158cc
.dword 0x5f788a542fef4657
.dword 0x5fa7f0e259ef1af1
.dword 0x7f4198311fb94276
.dword 0x5fa493122d9aad5a
.dword 0x5facb782eb8cdb42
.dword 0x7f65387fa5dc3d0b
.dword 0x5fa5903a0fb21b3f
.dword 0x5fa08c04aebe0346
.dword 0x7f608b3aebab606d
.dword 0x5f848f3656a4f33b
.dword 0x5fa61b5886460bee
.dword 0x7f48f1494ddbd331
.dword 0x5faf23474bb7cc16
.dword 0x5f9a6bd446bfb2c7
.dword 0x7f66765cdf1c1485
.dword 0x5f9ac413f7bb0305
.dword 0x5f75508f2c02a8b7
.dword 0x7f2abf8053f9d27b
.dword 0x5f9784a68ccbae49
.dword 0x5f99628b4f82971b
.dword 0x7f49310955e3dd56
.dword 0x5fa3b61dbeccea83
.dword 0x5fa81d06dbc53f22
.dword 0x7f64b39cbde7ef51
.dword 0x5f8efdfc9ff93d7f
.dword 0x5f8702c88a55e7a7
.dword 0x7f2bdb5e0ce16611
.dword 0x5f94c075eef493d9
.dword 0x5fa20c1a38b8c097
.dword 0x7f55650feeabcaed
.dword 0x5fa7f78548664fb5
.dword 0x5fade7ef4a369968
.dword 0x7f67c49a20636046
.dword 0x5fa05cc7ce1db3f8
.dword 0x5fa6e292e0f40648
.dword 0x7f59e6cf78e30774
.dword 0x5fa98f56645aea7f
.dword 0x5f6291e2bfc27bff
.dword 0x7f2a3728ac925789
.dword 0x5faac200a6c90fc3
.dword 0x5fae7a274d23529b
.dword 0x7f741ef6896a181b
.dword 0x5f7f0c6f00d0a117
.dword 0x5fab01954875dbe6
.dword 0x7f45ed0ee287a8c3
.dword 0x5f86ee815d1c73e3
.dword 0x5f580d12abb5bebf
.dword 0x7effbd4f6dd5db49
.dword 0x5f778021920eec47
.dword 0x5f796bb2b5183927
.dword 0x7f118d8fb6d62b73
.dword 0x5f825ecf43c688c3
.dword 0x5fa8c719398e006e
.dword 0x7f3db587e8ea0f70
.dword 0x5f7a66f0b9f8cc27
.dword 0x5fa2ceeb7addc7ab
.dword 0x7f2f3031df784e52
.dword 0x5fa55caa186f3c8d
.dword 0x5fa77ac231460806
.dword 0x7f6883011d03136f
.dword 0x5fa53179f7662fcf
.dword 0x5fac651e321ee763
.dword 0x7f70dab53c0c8b18
.dword 0x5f9db485bd8641e5
.dword 0x5f7f867fde0ccba7
.dword 0x7f3a8816a080e712
.dword 0x5facbb38ba3c7e34
.dword 0x5fa94f30f37b3d53
.dword 0x7f6cae90b453d184
.dword 0x5fac2640341cc4c7
.dword 0x5fadf7ad714d60e2
.dword 0x7f721d0aa9d41021
.dword 0x5f725321d9b34d0f
.dword 0x5f9b315fb9cba7b1
.dword 0x7f26340d6a75729d
.dword 0x5f8f5ee3b37f961b
.dword 0x5fa12594711492ab
.dword 0x7f4c7ebcece0ad61
.dword 0x5f9ae9b31f9a3121
.dword 0x5fa63641e1ac54f8
.dword 0x7f5b4a2ce84f404b
.dword 0x5f97d5bb4d050181
.dword 0x5f9fc0f2a61491bd
.dword 0x7f5423460722eef3
.dword 0x5fa9a31c342c7b5b
.dword 0x5fa3ef03938bd059
.dword 0x7f66dcd5ac35e8c9
.dword 0x5fa35787ca99e0af
.dword 0x5fa90b3cf22a50bf
.dword 0x7f64e4c4b1e69782
.dword 0x5f7474683222afa7
.dword 0x5f86daed80aff873
.dword 0x7f141001abc4a50f
.dword 0x5fa1c6de58039298
.dword 0x5fa6e9d2a2e46474
.dword 0x7f6191aab7712356
.dword 0x5f88755fffcef0ef
.dword 0x5f950aabc36dfa15
.dword 0x7f3212b4a128c0ed
.dword 0x5fa4b3842d8efcbe
.dword 0x5fa2c588e1376ac3
.dword 0x7f6086841a8a6b52
.dword 0x5f9437a4e1419f0d
.dword 0x5f9422135092fed7
.dword 0x7f413036666fa9e3
.dword 0x5fab57a54ad9d312
.dword 0x5f760c7c307e31a7
.dword 0x7f3c4c9c6f3f61ef
.dword 0x5f7fe78141983bff
.dword 0x5f7183c18f73341f
.dword 0x7f113dc851e5db56
.dword 0x5f1da206db2e93ff
.dword 0x5f6c1325f19d9f5f
.dword 0x7e9d4bd8310acfff
.dword 0x5f9b122b80686473
.dword 0x5f9e43fe6a95bdeb
.dword 0x7f56be13628caf4f
.dword 0x5f915e91a9fc6f05
.dword 0x5f913083ccf1d8b1
.dword 0x7f3c7ff97eb91fcd
.dword 0x5fa41d8cde4898c6
.dword 0x5fab9a0c0999e25b
.dword 0x7f62378dc6cb0713
.dword 0x5fa9cb2b8c8391a5
.dword 0x5faa5a1a13aed9e5
.dword 0x7f656682c72dbc64
.dword 0x5f85ed3b83d4d06f
.dword 0x5fa955605918543b
.dword 0x7f50ae029187bde6
.dword 0x5f89423ad1f49e07
.dword 0x5fa11bbf238cf0de
.dword 0x7f4888df09f9598c
.dword 0x5f9e8a675e7e0ea9
.dword 0x5fa908ceac3ed748
.dword 0x7f60264ad9dfe5ca
.dword 0x5f95d8b8d100d4ad
.dword 0x5f90288c3fc6a2e3
.dword 0x7f44896becffa1e0
.dword 0x5f9a7ae3286d0c8f
.dword 0x5fae0ca2c7a6ffb0
.dword 0x7f640b3f02037def
.dword 0x5f93315db9e9910d
.dword 0x5fa53671e4145242
.dword 0x7f5366e2e845b373
.dword 0x5f4aeb807b25f33f
.dword 0x5fa7d97bc07bb6a5
.dword 0x7f0782bd18a15ef7
.dword 0x5facb0ad9f88c3fd
.dword 0x5facca22e1b83439
.dword 0x7f745a1d240ee7c6
.dword 0x5facea5e0336397b
.dword 0x5fa632d61a0c97c8
.dword 0x7f734b8ef57e4607
.dword 0x5f925e6420f5c09f
.dword 0x5fa9ed1784fa671a
.dword 0x7f4f1b262489767c
.dword 0x5f8d1d9dedc8d4db
.dword 0x5f716ce13b7494bf
.dword 0x7f19302003497b29
.dword 0x5fa09bc54bda7ca2
.dword 0x5f927fa95459d3d1
.dword 0x7f49c05ead4f204f
.dword 0x5fa7db5311d3a19f
.dword 0x5faac63c4f037629
.dword 0x7f7098ec9c62b318
.dword 0x5fae67b863f16ae2
.dword 0x5fadad12fade7910
.dword 0x7f713acc1a4cf4b8
.dword 0x5fac28c8267d9ab4
.dword 0x5faf94cbf20a6254
.dword 0x7f73ee4f7bfa8720
.dword 0x5f83f7bce331716b
.dword 0x5f33183ef4678c7f
.dword 0x7ed72766c18c9427
.dword 0x5f9add87f48bf1c7
.dword 0x5f9a359c4048cb6b
.dword 0x7f552168279e9c80
.dword 0x5f915aec43b7bf87
.dword 0x5f962aab2512cca5
.dword 0x7f4108bda8d88793
.dword 0x5f8099a756bd881b
.dword 0x5f92af313c25ada5
.dword 0x7f316321baa11776
.dword 0x5fa48ac00057963a
.dword 0x5fa9ccdd3e7a322c
.dword 0x7f6647e03afe5897
.dword 0x5f877fc19dd1d407
.dword 0x5f91d47422b88b69
.dword 0x7f37a99d69de1b5b
.dword 0x5f886c42550ad12b
.dword 0x5fa9d11e7f58461f
.dword 0x7f521ccd9e5c06f2
.dword 0x5f8ccdb65c979493
.dword 0x5f7ef491a115c81f
.dword 0x7f254f69aae033ec
.dword 0x5fa4ceb420df408f
.dword 0x5fac51162e460b0e
.dword 0x7f6ab7e6e68b9501
.dword 0x5fab608b57d7bf4f
.dword 0x5f85ab1b114777e7
.dword 0x7f48c7af50268328
.dword 0x5f955c3845664053
.dword 0x5faaac59c0e5d8ef
.dword 0x7f599c54678908f8
.dword 0x5fa6568f5c6359d5
.dword 0x5f7a124c133921cf
.dword 0x7f380f2cda9c9f33
.dword 0x5f8e8d90453e9cfb
.dword 0x5f87fc89aad95937
.dword 0x7f306f4b410355ec
.dword 0x5f93d7504400059d
.dword 0x5f8c7c1eba75a687
.dword 0x7f3fdba8faed90f0
.dword 0x5f5b913b7c55ffdf
.dword 0x5fa2375c8ebc2475
.dword 0x7f1b3adc45eedd5a
.dword 0x5f9339d1964c64f1
.dword 0x5f98236520d6c6fb
.dword 0x7f49b3cb7841f077
.dword 0x5f9402cbce109a77
.dword 0x5f97a037fec02fad
.dword 0x7f4792f61f3327a7
.dword 0x5fa2f72b0267e3ba
.dword 0x5f947b4bc16b5bb5
.dword 0x7f508e906aea4387
.dword 0x5faed366397a0657
.dword 0x5f9012632d0614c9
.dword 0x7f568bf7297e9a68
.dword 0x5f56b7004b70b43f
.dword 0x5f6f03ec3d1c1d8f
.dword 0x7ee27314d13a5e49
.dword 0x5f96909f0cdef409
.dword 0x5fa69f56211d9e5b
.dword 0x7f5bb9c1a2343426
.dword 0x5fa4132da9546dfd
.dword 0x5f9dd70c0ad2c58b
.dword 0x7f5f6f99ba4944eb
.dword 0x5fa3b49de25b5810
.dword 0x5fa43ad2ac887783
.dword 0x7f5a696c6dda9a21
.dword 0x5f9a92ce67e64f49
.dword 0x5fa28f1335426ef4
.dword 0x7f4f7103d55fe09a
.dword 0x5fa0ad13253643d4
.dword 0x5fa18cbe0d5b0ab6
.dword 0x7f52803b62c23bf9
.dword 0x5f8e6ad80efba433
.dword 0x5f934501d37fe38d
.dword 0x7f421cfa6fc52470
.dword 0x5fa039904d15cfd4
.dword 0x5f9b98a4751306d7
.dword 0x7f5812176d0bfffa
.dword 0x5fa1e577746908d8
.dword 0x5fa3d812c3e43b86
.dword 0x7f65897964725238
.dword 0x5fa0a470198b7628
.dword 0x5fa49abc8377a2f1
.dword 0x7f6119439f965820
.dword 0x5facb16f8f726369
.dword 0x5f982db2eb039623
.dword 0x7f5fa959e4e09142
.dword 0x5fabc4d8895bf826
.dword 0x5f9415cc9ae1aebd
.dword 0x7f6111b743f956ed
.dword 0x5fa388f2590db1b3
.dword 0x5f83fe541b09258b
.dword 0x7f397254824bf66d
.dword 0x5f6010befcbab41f
.dword 0x5f8943e82f8af8c3
.dword 0x7f01dbd0b3071840
.dword 0x5f93d1a2580ed007
.dword 0x5f73b45a2375b697
.dword 0x7f2385ee2764b288
.dword 0x5faf615e3d1dc570
.dword 0x5fa02c6758f19d47
.dword 0x7f6fb266dd29aa19
.dword 0x5fa6fd76e25872b5
.dword 0x5f952e5a4c6824cb
.dword 0x7f5c9f535a13607a
.dword 0x5f66a01466b8215f
.dword 0x5fa3aa401f0be9eb
.dword 0x7f1d0ec3e9b05988
.dword 0x5f92cf1d3b6ac94b
.dword 0x5fa899f171a9297a
.dword 0x7f5b14a5d519e4f5
.dword 0x5fa99e7a144435ef
.dword 0x5f9a4501af2d40bf
.dword 0x7f5833bb1ca74a3b
.dword 0x5fab537f328e16b0
.dword 0x5fafac7da9ef1ce9
.dword 0x7f6d7119bb697372
.dword 0x5fa25a6085117eb3
.dword 0x5f923cbe38fed7af
.dword 0x7f463f34397814cf
.dword 0x5fa6d796ca9f3e52
.dword 0x5f8b0624ba20ab53
.dword 0x7f51aa8115c0ce5b
.dword 0x5faede45ea2ac4af
.dword 0x5facf344fe49aeb9
.dword 0x7f75e8e56be7a393
.dword 0x5fa57b12a6c8424b
.dword 0x5f84e072cb2d87d3
.dword 0x7f4a1332dd035fa3
.dword 0x5fadb9ec201d5923
.dword 0x5fab67a2291e65ec
.dword 0x7f7957c7ebd93448
.dword 0x5fa2b230d0edf6b7
.dword 0x5facef388d58d8ec
.dword 0x7f6c6f157f95857d
.dword 0x5f98b20864979939
.dword 0x5f9675514445d7d5
.dword 0x7f4b78df038d879f
.dword 0x5fa40d80b76bc040
.dword 0x5f934403635e831b
.dword 0x7f523257890d439f
.dword 0x5f8bc63a6420b0e7
.dword 0x5faee5369ab02b92
.dword 0x7f53417873001a88
.dword 0x5fac1facf9764ac8
.dword 0x5f78f2c40125fbb7
.dword 0x7f38e85304d45566
.dword 0x5fa9a10b6e4ec167
.dword 0x5f9c74abdfb676c7
.dword 0x7f660e73c132f71e
.dword 0x5fa6da2613270600
.dword 0x5fad79a3e9b52e6a
.dword 0x7f6d5cd99060f6b9
.dword 0x5f9e418564c20c07
.dword 0x5fa7009b07ae3d88
.dword 0x7f646e4d09df3d47
.dword 0x5f9347f8263d98bd
.dword 0x5f5fc18b696ac21f
.dword 0x7f11d8fdc14bac89
.dword 0x5f70645d4519cddf
.dword 0x5fa8436c13d47a1b
.dword 0x7f33c693bf9f8fa9
.dword 0x5fa0bde6858f4b91
.dword 0x5fa7b855d00f829f
.dword 0x7f64bdf5c73bce49
.dword 0x5f83476623b5f3d7
.dword 0x5fa450c74c9b42e4
.dword 0x7f46dd20fedb35a7
.dword 0x5faac44ace32d282
.dword 0x5f9e7c922b2d54e3
.dword 0x7f64e619d93f2a4b
.dword 0x5f8dfe8e9311623f
.dword 0x5fafdc528ede5c0d
.dword 0x7f55f42acde5ee8e
.dword 0x5f4af7d1e8a8527f
.dword 0x5faacc8bf5e07e70
.dword 0x7f0c71408c566bb7
.dword 0x5fa353501de56e49
.dword 0x5fa405e69652cae2
.dword 0x7f59c4f99f3efdee
.dword 0x5f8e759ff97b7507
.dword 0x5fa16a5368858d8c
.dword 0x7f46b5ac213a2c3b
.dword 0x5f8ca7049f840037
.dword 0x5f261f77377e85ff
.dword 0x7ec7f2d009694180
.dword 0x5f97be065394fb87
.dword 0x5fa0f047e17234a4
.dword 0x7f54105122215908
.dword 0x5fa83a272ac3e0fc
.dword 0x5f99b17c3381c95b
.dword 0x7f56f71ab211379c
.dword 0x5fa4c697b9f4c156
.dword 0x5f937f62582fdc3f
.dword 0x7f528993dd4d19be
.dword 0x5fa6607c34459dce
.dword 0x5fa132ac57683a83
.dword 0x7f611a3e2c200294
.dword 0x5f89a3855b4b1a63
.dword 0x5f8495d2e6438f63
.dword 0x7f28b14942eb8464
.dword 0x5f7bef6db92e2fbf
.dword 0x5f65dcfa9a24791f
.dword 0x7ef492dd06bdb870
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 162*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
