
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:16 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V FD extension for the fnmsub_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmsub_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd == rs3 != rs2, rs1==f9, rs2==f5, rs3==f9, rd==f9, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8bed35a84b2c1 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x8f6ecde6240ad and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x34e10a7f9f270 and rm_val == 0  
// opcode: fnmsub.d ; op1:f9; op2:f5; op3:f9; dest:f9; op1val:0x3fe8bed35a84b2c1; op2val:0xbfa8f6ecde6240ad; op3val:0x3fe8bed35a84b2c1; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f9, f9, f5, f9, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f29, rs2==f3, rs3==f19, rd==f8, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc8d2a53c8f5d and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x60941631c6898 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3d2641dead4b8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f29; op2:f3; op3:f19; dest:f8; op1val:0x3fecc8d2a53c8f5d; op2val:0xbfc60941631c6898; op3val:0x3fc3d2641dead4b8; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f8, f29, f3, f19, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f17, rs2==f19, rs3==f11, rd==f17, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc8d2a53c8f5d and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x60941631c6898 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3d2641dead4b8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f17; op2:f19; op3:f11; dest:f17; op1val:0x3fecc8d2a53c8f5d; op2val:0xbfc60941631c6898; op3val:0x3fc3d2641dead4b8; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f17, f17, f19, f11, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==f16, rs2==f28, rs3==f28, rd==f28, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc8d2a53c8f5d and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x60941631c6898 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3d2641dead4b8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f16; op2:f28; op3:f28; dest:f28; op1val:0x3fecc8d2a53c8f5d; op2val:0xbfc60941631c6898; op3val:0xbfc60941631c6898; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f28, f16, f28, f28, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f2, rs2==f16, rs3==f2, rd==f12, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc8d2a53c8f5d and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x60941631c6898 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3d2641dead4b8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f2; op2:f16; op3:f2; dest:f12; op1val:0x3fecc8d2a53c8f5d; op2val:0xbfc60941631c6898; op3val:0x3fecc8d2a53c8f5d; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f12, f2, f16, f2, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f6, rs2==f8, rs3==f15, rd==f15, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc8d2a53c8f5d and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x60941631c6898 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3d2641dead4b8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f6; op2:f8; op3:f15; dest:f15; op1val:0x3fecc8d2a53c8f5d; op2val:0xbfc60941631c6898; op3val:0x3fc3d2641dead4b8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f15, f6, f8, f15, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f23, rs2==f23, rs3==f23, rd==f21, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e7d2e4d6296 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf1ce04f135ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbabdf3c66389c and rm_val == 4  
// opcode: fnmsub.d ; op1:f23; op2:f23; op3:f23; dest:f21; op1val:0x3fe06e7d2e4d6296; op2val:0x3fe06e7d2e4d6296; op3val:0x3fe06e7d2e4d6296; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f21, f23, f23, f23, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rs2 == rd != rs3, rs1==f7, rs2==f7, rs3==f29, rd==f7, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e7d2e4d6296 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf1ce04f135ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbabdf3c66389c and rm_val == 3  
// opcode: fnmsub.d ; op1:f7; op2:f7; op3:f29; dest:f7; op1val:0x3fe06e7d2e4d6296; op2val:0x3fe06e7d2e4d6296; op3val:0x3fdbabdf3c66389c; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f7, f7, f7, f29, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f24, rs2==f24, rs3==f24, rd==f24, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e7d2e4d6296 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf1ce04f135ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbabdf3c66389c and rm_val == 2  
// opcode: fnmsub.d ; op1:f24; op2:f24; op3:f24; dest:f24; op1val:0x3fe06e7d2e4d6296; op2val:0x3fe06e7d2e4d6296; op3val:0x3fe06e7d2e4d6296; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f24, f24, f24, f24, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f8, rs2==f13, rs3==f13, rd==f25, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e7d2e4d6296 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf1ce04f135ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbabdf3c66389c and rm_val == 1  
// opcode: fnmsub.d ; op1:f8; op2:f13; op3:f13; dest:f25; op1val:0x3fe06e7d2e4d6296; op2val:0xbfeaf1ce04f135ab; op3val:0xbfeaf1ce04f135ab; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f25, f8, f13, f13, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f1, rs2==f1, rs3==f18, rd==f11, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e7d2e4d6296 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf1ce04f135ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbabdf3c66389c and rm_val == 0  
// opcode: fnmsub.d ; op1:f1; op2:f1; op3:f18; dest:f11; op1val:0x3fe06e7d2e4d6296; op2val:0x3fe06e7d2e4d6296; op3val:0x3fdbabdf3c66389c; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f11, f1, f1, f18, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f13, rs2==f27, rs3==f10, rd==f27, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc99c56b942f91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xce1fbb3289681 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9d086e883066c and rm_val == 4  
// opcode: fnmsub.d ; op1:f13; op2:f27; op3:f10; dest:f27; op1val:0x3fec99c56b942f91; op2val:0xbfece1fbb3289681; op3val:0x3fe9d086e883066c; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f27, f13, f27, f10, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f0, rs2==f10, rs3==f14, rd==f18, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc99c56b942f91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xce1fbb3289681 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9d086e883066c and rm_val == 3  
// opcode: fnmsub.d ; op1:f0; op2:f10; op3:f14; dest:f18; op1val:0x3fec99c56b942f91; op2val:0xbfece1fbb3289681; op3val:0x3fe9d086e883066c; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f18, f0, f10, f14, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f14, rs2==f21, rs3==f12, rd==f6, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc99c56b942f91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xce1fbb3289681 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9d086e883066c and rm_val == 2  
// opcode: fnmsub.d ; op1:f14; op2:f21; op3:f12; dest:f6; op1val:0x3fec99c56b942f91; op2val:0xbfece1fbb3289681; op3val:0x3fe9d086e883066c; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f6, f14, f21, f12, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f27, rs2==f20, rs3==f25, rd==f5, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc99c56b942f91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xce1fbb3289681 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9d086e883066c and rm_val == 1  
// opcode: fnmsub.d ; op1:f27; op2:f20; op3:f25; dest:f5; op1val:0x3fec99c56b942f91; op2val:0xbfece1fbb3289681; op3val:0x3fe9d086e883066c; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f5, f27, f20, f25, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f15, rs2==f2, rs3==f4, rd==f16, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc99c56b942f91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xce1fbb3289681 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9d086e883066c and rm_val == 0  
// opcode: fnmsub.d ; op1:f15; op2:f2; op3:f4; dest:f16; op1val:0x3fec99c56b942f91; op2val:0xbfece1fbb3289681; op3val:0x3fe9d086e883066c; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f16, f15, f2, f4, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f3, rs2==f0, rs3==f30, rd==f14, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4382c46fb3685 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x100ca9ae9d057 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x57caf145e0d89 and rm_val == 4  
// opcode: fnmsub.d ; op1:f3; op2:f0; op3:f30; dest:f14; op1val:0x3fe4382c46fb3685; op2val:0xbff100ca9ae9d057; op3val:0x3fe57caf145e0d89; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f14, f3, f0, f30, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f20, rs2==f11, rs3==f22, rd==f4, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4382c46fb3685 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x100ca9ae9d057 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x57caf145e0d89 and rm_val == 3  
// opcode: fnmsub.d ; op1:f20; op2:f11; op3:f22; dest:f4; op1val:0x3fe4382c46fb3685; op2val:0xbff100ca9ae9d057; op3val:0x3fe57caf145e0d89; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f4, f20, f11, f22, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f30, rs2==f17, rs3==f8, rd==f23, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4382c46fb3685 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x100ca9ae9d057 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x57caf145e0d89 and rm_val == 2  
// opcode: fnmsub.d ; op1:f30; op2:f17; op3:f8; dest:f23; op1val:0x3fe4382c46fb3685; op2val:0xbff100ca9ae9d057; op3val:0x3fe57caf145e0d89; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f23, f30, f17, f8, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f31, rs2==f22, rs3==f5, rd==f10, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4382c46fb3685 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x100ca9ae9d057 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x57caf145e0d89 and rm_val == 1  
// opcode: fnmsub.d ; op1:f31; op2:f22; op3:f5; dest:f10; op1val:0x3fe4382c46fb3685; op2val:0xbff100ca9ae9d057; op3val:0x3fe57caf145e0d89; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f10, f31, f22, f5, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f25, rs2==f15, rs3==f20, rd==f31, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4382c46fb3685 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x100ca9ae9d057 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x57caf145e0d89 and rm_val == 0  
// opcode: fnmsub.d ; op1:f25; op2:f15; op3:f20; dest:f31; op1val:0x3fe4382c46fb3685; op2val:0xbff100ca9ae9d057; op3val:0x3fe57caf145e0d89; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f31, f25, f15, f20, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f18, rs2==f29, rs3==f7, rd==f0, fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaac43073e8a8a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x55cd0bfdd6cc1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1ce693d164e38 and rm_val == 4  
// opcode: fnmsub.d ; op1:f18; op2:f29; op3:f7; dest:f0; op1val:0x3fdaac43073e8a8a; op2val:0xbff55cd0bfdd6cc1; op3val:0x3fe1ce693d164e38; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f0, f18, f29, f7, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f28, rs2==f6, rs3==f17, rd==f22, fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaac43073e8a8a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x55cd0bfdd6cc1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1ce693d164e38 and rm_val == 3  
// opcode: fnmsub.d ; op1:f28; op2:f6; op3:f17; dest:f22; op1val:0x3fdaac43073e8a8a; op2val:0xbff55cd0bfdd6cc1; op3val:0x3fe1ce693d164e38; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f22, f28, f6, f17, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f11, rs2==f31, rs3==f27, rd==f1, fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaac43073e8a8a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x55cd0bfdd6cc1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1ce693d164e38 and rm_val == 2  
// opcode: fnmsub.d ; op1:f11; op2:f31; op3:f27; dest:f1; op1val:0x3fdaac43073e8a8a; op2val:0xbff55cd0bfdd6cc1; op3val:0x3fe1ce693d164e38; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f1, f11, f31, f27, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f4, rs2==f9, rs3==f21, rd==f20, fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaac43073e8a8a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x55cd0bfdd6cc1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1ce693d164e38 and rm_val == 1  
// opcode: fnmsub.d ; op1:f4; op2:f9; op3:f21; dest:f20; op1val:0x3fdaac43073e8a8a; op2val:0xbff55cd0bfdd6cc1; op3val:0x3fe1ce693d164e38; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f20, f4, f9, f21, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f10, rs2==f4, rs3==f6, rd==f13, fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaac43073e8a8a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x55cd0bfdd6cc1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1ce693d164e38 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f4; op3:f6; dest:f13; op1val:0x3fdaac43073e8a8a; op2val:0xbff55cd0bfdd6cc1; op3val:0x3fe1ce693d164e38; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f4, f6, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f21, rs2==f18, rs3==f0, rd==f2, fs1 == 0 and fe1 == 0x3fd and fm1 == 0xef247241252ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc4afb5a360c27 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb5c8197af226e and rm_val == 4  
// opcode: fnmsub.d ; op1:f21; op2:f18; op3:f0; dest:f2; op1val:0x3fdef247241252ca; op2val:0xbfec4afb5a360c27; op3val:0x3fdb5c8197af226e; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f2, f21, f18, f0, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f22, rs2==f12, rs3==f31, rd==f29, fs1 == 0 and fe1 == 0x3fd and fm1 == 0xef247241252ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc4afb5a360c27 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb5c8197af226e and rm_val == 3  
// opcode: fnmsub.d ; op1:f22; op2:f12; op3:f31; dest:f29; op1val:0x3fdef247241252ca; op2val:0xbfec4afb5a360c27; op3val:0x3fdb5c8197af226e; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f29, f22, f12, f31, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f19, rs2==f25, rs3==f1, rd==f3, fs1 == 0 and fe1 == 0x3fd and fm1 == 0xef247241252ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc4afb5a360c27 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb5c8197af226e and rm_val == 2  
// opcode: fnmsub.d ; op1:f19; op2:f25; op3:f1; dest:f3; op1val:0x3fdef247241252ca; op2val:0xbfec4afb5a360c27; op3val:0x3fdb5c8197af226e; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f3, f19, f25, f1, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f5, rs2==f26, rs3==f3, rd==f19, fs1 == 0 and fe1 == 0x3fd and fm1 == 0xef247241252ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc4afb5a360c27 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb5c8197af226e and rm_val == 1  
// opcode: fnmsub.d ; op1:f5; op2:f26; op3:f3; dest:f19; op1val:0x3fdef247241252ca; op2val:0xbfec4afb5a360c27; op3val:0x3fdb5c8197af226e; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f19, f5, f26, f3, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f26, rs2==f14, rs3==f16, rd==f30, fs1 == 0 and fe1 == 0x3fd and fm1 == 0xef247241252ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc4afb5a360c27 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb5c8197af226e and rm_val == 0  
// opcode: fnmsub.d ; op1:f26; op2:f14; op3:f16; dest:f30; op1val:0x3fdef247241252ca; op2val:0xbfec4afb5a360c27; op3val:0x3fdb5c8197af226e; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f30, f26, f14, f16, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f12, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4dacf26c7d0bc and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59f1add9dd906 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc2e9151e44ddd and rm_val == 4  
// opcode: fnmsub.d ; op1:f12; op2:f29; op3:f0; dest:f23; op1val:0x3fe4dacf26c7d0bc; op2val:0xbff59f1add9dd906; op3val:0x3fec2e9151e44ddd; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f23, f12, f29, f0, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// rs2==f30, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4dacf26c7d0bc and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59f1add9dd906 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc2e9151e44ddd and rm_val == 3  
// opcode: fnmsub.d ; op1:f19; op2:f30; op3:f20; dest:f31; op1val:0x3fe4dacf26c7d0bc; op2val:0xbff59f1add9dd906; op3val:0x3fec2e9151e44ddd; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f31, f19, f30, f20, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// rs3==f26, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4dacf26c7d0bc and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59f1add9dd906 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc2e9151e44ddd and rm_val == 2  
// opcode: fnmsub.d ; op1:f21; op2:f17; op3:f26; dest:f13; op1val:0x3fe4dacf26c7d0bc; op2val:0xbff59f1add9dd906; op3val:0x3fec2e9151e44ddd; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f21, f17, f26, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// rd==f26, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4dacf26c7d0bc and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59f1add9dd906 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc2e9151e44ddd and rm_val == 1  
// opcode: fnmsub.d ; op1:f0; op2:f16; op3:f28; dest:f26; op1val:0x3fe4dacf26c7d0bc; op2val:0xbff59f1add9dd906; op3val:0x3fec2e9151e44ddd; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f26, f0, f16, f28, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4dacf26c7d0bc and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59f1add9dd906 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc2e9151e44ddd and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4dacf26c7d0bc; op2val:0xbff59f1add9dd906; op3val:0x3fec2e9151e44ddd; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdbac849ee158c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0b647aed56b64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf0d7a21eba20b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdbac849ee158c; op2val:0xc010b647aed56b64; op3val:0x3fef0d7a21eba20b; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdbac849ee158c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0b647aed56b64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf0d7a21eba20b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdbac849ee158c; op2val:0xc010b647aed56b64; op3val:0x3fef0d7a21eba20b; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdbac849ee158c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0b647aed56b64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf0d7a21eba20b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdbac849ee158c; op2val:0xc010b647aed56b64; op3val:0x3fef0d7a21eba20b; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdbac849ee158c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0b647aed56b64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf0d7a21eba20b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdbac849ee158c; op2val:0xc010b647aed56b64; op3val:0x3fef0d7a21eba20b; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdbac849ee158c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0b647aed56b64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf0d7a21eba20b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdbac849ee158c; op2val:0xc010b647aed56b64; op3val:0x3fef0d7a21eba20b; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2d0a4ee74736c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe964efeb613ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1fbfb17001ed5 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2d0a4ee74736c; op2val:0xbffe964efeb613ee; op3val:0x3fe1fbfb17001ed5; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2d0a4ee74736c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe964efeb613ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1fbfb17001ed5 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2d0a4ee74736c; op2val:0xbffe964efeb613ee; op3val:0x3fe1fbfb17001ed5; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2d0a4ee74736c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe964efeb613ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1fbfb17001ed5 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2d0a4ee74736c; op2val:0xbffe964efeb613ee; op3val:0x3fe1fbfb17001ed5; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2d0a4ee74736c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe964efeb613ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1fbfb17001ed5 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2d0a4ee74736c; op2val:0xbffe964efeb613ee; op3val:0x3fe1fbfb17001ed5; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2d0a4ee74736c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe964efeb613ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1fbfb17001ed5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2d0a4ee74736c; op2val:0xbffe964efeb613ee; op3val:0x3fe1fbfb17001ed5; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x077cbdeb5a8d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad47b91b90ed0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb9d5dc6197962 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe077cbdeb5a8d5; op2val:0xbfead47b91b90ed0; op3val:0x3fdb9d5dc6197962; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x077cbdeb5a8d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad47b91b90ed0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb9d5dc6197962 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe077cbdeb5a8d5; op2val:0xbfead47b91b90ed0; op3val:0x3fdb9d5dc6197962; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x077cbdeb5a8d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad47b91b90ed0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb9d5dc6197962 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe077cbdeb5a8d5; op2val:0xbfead47b91b90ed0; op3val:0x3fdb9d5dc6197962; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x077cbdeb5a8d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad47b91b90ed0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb9d5dc6197962 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe077cbdeb5a8d5; op2val:0xbfead47b91b90ed0; op3val:0x3fdb9d5dc6197962; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x077cbdeb5a8d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad47b91b90ed0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb9d5dc6197962 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe077cbdeb5a8d5; op2val:0xbfead47b91b90ed0; op3val:0x3fdb9d5dc6197962; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc09d97f45a199 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdca98c2136b24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa1a71212058d7 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec09d97f45a199; op2val:0xbfedca98c2136b24; op3val:0x3fea1a71212058d7; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc09d97f45a199 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdca98c2136b24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa1a71212058d7 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec09d97f45a199; op2val:0xbfedca98c2136b24; op3val:0x3fea1a71212058d7; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc09d97f45a199 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdca98c2136b24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa1a71212058d7 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec09d97f45a199; op2val:0xbfedca98c2136b24; op3val:0x3fea1a71212058d7; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc09d97f45a199 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdca98c2136b24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa1a71212058d7 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec09d97f45a199; op2val:0xbfedca98c2136b24; op3val:0x3fea1a71212058d7; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc09d97f45a199 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdca98c2136b24 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa1a71212058d7 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec09d97f45a199; op2val:0xbfedca98c2136b24; op3val:0x3fea1a71212058d7; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa318f9e6bb000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x19116e58d042d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcc22f39cfc7e2 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea318f9e6bb000; op2val:0xbff19116e58d042d; op3val:0x3fecc22f39cfc7e2; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa318f9e6bb000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x19116e58d042d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcc22f39cfc7e2 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea318f9e6bb000; op2val:0xbff19116e58d042d; op3val:0x3fecc22f39cfc7e2; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa318f9e6bb000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x19116e58d042d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcc22f39cfc7e2 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea318f9e6bb000; op2val:0xbff19116e58d042d; op3val:0x3fecc22f39cfc7e2; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa318f9e6bb000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x19116e58d042d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcc22f39cfc7e2 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea318f9e6bb000; op2val:0xbff19116e58d042d; op3val:0x3fecc22f39cfc7e2; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa318f9e6bb000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x19116e58d042d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcc22f39cfc7e2 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea318f9e6bb000; op2val:0xbff19116e58d042d; op3val:0x3fecc22f39cfc7e2; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7b8ced1341a78 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe8d207b6f02ba and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6a5e047ba1da0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7b8ced1341a78; op2val:0xbffe8d207b6f02ba; op3val:0x3fe6a5e047ba1da0; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7b8ced1341a78 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe8d207b6f02ba and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6a5e047ba1da0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7b8ced1341a78; op2val:0xbffe8d207b6f02ba; op3val:0x3fe6a5e047ba1da0; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7b8ced1341a78 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe8d207b6f02ba and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6a5e047ba1da0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7b8ced1341a78; op2val:0xbffe8d207b6f02ba; op3val:0x3fe6a5e047ba1da0; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7b8ced1341a78 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe8d207b6f02ba and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6a5e047ba1da0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7b8ced1341a78; op2val:0xbffe8d207b6f02ba; op3val:0x3fe6a5e047ba1da0; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7b8ced1341a78 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe8d207b6f02ba and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6a5e047ba1da0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7b8ced1341a78; op2val:0xbffe8d207b6f02ba; op3val:0x3fe6a5e047ba1da0; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcef5f1f78b728 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8aa8728971c09 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x64db9377ee13a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcef5f1f78b728; op2val:0xbfe8aa8728971c09; op3val:0x3fd64db9377ee13a; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcef5f1f78b728 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8aa8728971c09 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x64db9377ee13a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcef5f1f78b728; op2val:0xbfe8aa8728971c09; op3val:0x3fd64db9377ee13a; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcef5f1f78b728 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8aa8728971c09 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x64db9377ee13a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcef5f1f78b728; op2val:0xbfe8aa8728971c09; op3val:0x3fd64db9377ee13a; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcef5f1f78b728 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8aa8728971c09 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x64db9377ee13a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcef5f1f78b728; op2val:0xbfe8aa8728971c09; op3val:0x3fd64db9377ee13a; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcef5f1f78b728 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8aa8728971c09 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x64db9377ee13a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcef5f1f78b728; op2val:0xbfe8aa8728971c09; op3val:0x3fd64db9377ee13a; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x31f42d0748d38 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b0d692c7b9f2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ec600217943a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd31f42d0748d38; op2val:0xc005b0d692c7b9f2; op3val:0x3fe9ec600217943a; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x31f42d0748d38 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b0d692c7b9f2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ec600217943a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd31f42d0748d38; op2val:0xc005b0d692c7b9f2; op3val:0x3fe9ec600217943a; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x31f42d0748d38 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b0d692c7b9f2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ec600217943a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd31f42d0748d38; op2val:0xc005b0d692c7b9f2; op3val:0x3fe9ec600217943a; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x31f42d0748d38 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b0d692c7b9f2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ec600217943a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd31f42d0748d38; op2val:0xc005b0d692c7b9f2; op3val:0x3fe9ec600217943a; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x31f42d0748d38 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b0d692c7b9f2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ec600217943a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd31f42d0748d38; op2val:0xc005b0d692c7b9f2; op3val:0x3fe9ec600217943a; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f1312c39cf68 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcd76b52502082 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1f94a6adc2304 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f1312c39cf68; op2val:0xbffcd76b52502082; op3val:0x3fe1f94a6adc2304; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f1312c39cf68 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcd76b52502082 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1f94a6adc2304 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f1312c39cf68; op2val:0xbffcd76b52502082; op3val:0x3fe1f94a6adc2304; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f1312c39cf68 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcd76b52502082 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1f94a6adc2304 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f1312c39cf68; op2val:0xbffcd76b52502082; op3val:0x3fe1f94a6adc2304; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f1312c39cf68 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcd76b52502082 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1f94a6adc2304 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f1312c39cf68; op2val:0xbffcd76b52502082; op3val:0x3fe1f94a6adc2304; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f1312c39cf68 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcd76b52502082 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1f94a6adc2304 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f1312c39cf68; op2val:0xbffcd76b52502082; op3val:0x3fe1f94a6adc2304; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcad63a955ecc6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x46784d90867d2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2492370592f48 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcad63a955ecc6; op2val:0xbfe46784d90867d2; op3val:0x3fd2492370592f48; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcad63a955ecc6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x46784d90867d2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2492370592f48 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcad63a955ecc6; op2val:0xbfe46784d90867d2; op3val:0x3fd2492370592f48; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcad63a955ecc6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x46784d90867d2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2492370592f48 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcad63a955ecc6; op2val:0xbfe46784d90867d2; op3val:0x3fd2492370592f48; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcad63a955ecc6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x46784d90867d2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2492370592f48 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcad63a955ecc6; op2val:0xbfe46784d90867d2; op3val:0x3fd2492370592f48; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcad63a955ecc6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x46784d90867d2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2492370592f48 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcad63a955ecc6; op2val:0xbfe46784d90867d2; op3val:0x3fd2492370592f48; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7306ef7b7be99 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xf50ea6f24f42a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6b18e781b87c8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7306ef7b7be99; op2val:0xbfbf50ea6f24f42a; op3val:0x3fb6b18e781b87c8; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7306ef7b7be99 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xf50ea6f24f42a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6b18e781b87c8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7306ef7b7be99; op2val:0xbfbf50ea6f24f42a; op3val:0x3fb6b18e781b87c8; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7306ef7b7be99 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xf50ea6f24f42a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6b18e781b87c8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7306ef7b7be99; op2val:0xbfbf50ea6f24f42a; op3val:0x3fb6b18e781b87c8; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7306ef7b7be99 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xf50ea6f24f42a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6b18e781b87c8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7306ef7b7be99; op2val:0xbfbf50ea6f24f42a; op3val:0x3fb6b18e781b87c8; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7306ef7b7be99 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xf50ea6f24f42a and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6b18e781b87c8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7306ef7b7be99; op2val:0xbfbf50ea6f24f42a; op3val:0x3fb6b18e781b87c8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x49315eccc6a62 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x39257c68bae1a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x92ad9105a8c38 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd49315eccc6a62; op2val:0xbff39257c68bae1a; op3val:0x3fd92ad9105a8c38; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x49315eccc6a62 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x39257c68bae1a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x92ad9105a8c38 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd49315eccc6a62; op2val:0xbff39257c68bae1a; op3val:0x3fd92ad9105a8c38; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x49315eccc6a62 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x39257c68bae1a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x92ad9105a8c38 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd49315eccc6a62; op2val:0xbff39257c68bae1a; op3val:0x3fd92ad9105a8c38; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x49315eccc6a62 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x39257c68bae1a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x92ad9105a8c38 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd49315eccc6a62; op2val:0xbff39257c68bae1a; op3val:0x3fd92ad9105a8c38; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x49315eccc6a62 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x39257c68bae1a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x92ad9105a8c38 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd49315eccc6a62; op2val:0xbff39257c68bae1a; op3val:0x3fd92ad9105a8c38; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4930f969667df and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x770e3d00e4fd4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe2490c78dac98 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4930f969667df; op2val:0xbfe770e3d00e4fd4; op3val:0x3fde2490c78dac98; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4930f969667df and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x770e3d00e4fd4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe2490c78dac98 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4930f969667df; op2val:0xbfe770e3d00e4fd4; op3val:0x3fde2490c78dac98; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4930f969667df and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x770e3d00e4fd4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe2490c78dac98 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4930f969667df; op2val:0xbfe770e3d00e4fd4; op3val:0x3fde2490c78dac98; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4930f969667df and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x770e3d00e4fd4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe2490c78dac98 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4930f969667df; op2val:0xbfe770e3d00e4fd4; op3val:0x3fde2490c78dac98; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4930f969667df and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x770e3d00e4fd4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe2490c78dac98 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4930f969667df; op2val:0xbfe770e3d00e4fd4; op3val:0x3fde2490c78dac98; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa93ac41d4b2fc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xfe472a2eb2a94 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa7cca407fab48 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca93ac41d4b2fc; op2val:0xbfdfe472a2eb2a94; op3val:0x3fba7cca407fab48; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa93ac41d4b2fc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xfe472a2eb2a94 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa7cca407fab48 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca93ac41d4b2fc; op2val:0xbfdfe472a2eb2a94; op3val:0x3fba7cca407fab48; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa93ac41d4b2fc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xfe472a2eb2a94 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa7cca407fab48 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca93ac41d4b2fc; op2val:0xbfdfe472a2eb2a94; op3val:0x3fba7cca407fab48; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa93ac41d4b2fc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xfe472a2eb2a94 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa7cca407fab48 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca93ac41d4b2fc; op2val:0xbfdfe472a2eb2a94; op3val:0x3fba7cca407fab48; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa93ac41d4b2fc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xfe472a2eb2a94 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xa7cca407fab48 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca93ac41d4b2fc; op2val:0xbfdfe472a2eb2a94; op3val:0x3fba7cca407fab48; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa2757baced6e7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07555fe4abaf2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae723fd01a816 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea2757baced6e7; op2val:0xbff07555fe4abaf2; op3val:0x3feae723fd01a816; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa2757baced6e7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07555fe4abaf2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae723fd01a816 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea2757baced6e7; op2val:0xbff07555fe4abaf2; op3val:0x3feae723fd01a816; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa2757baced6e7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07555fe4abaf2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae723fd01a816 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea2757baced6e7; op2val:0xbff07555fe4abaf2; op3val:0x3feae723fd01a816; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa2757baced6e7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07555fe4abaf2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae723fd01a816 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea2757baced6e7; op2val:0xbff07555fe4abaf2; op3val:0x3feae723fd01a816; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa2757baced6e7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07555fe4abaf2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae723fd01a816 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea2757baced6e7; op2val:0xbff07555fe4abaf2; op3val:0x3feae723fd01a816; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x80e8c7f135eee and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78dc42844e792 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b5088dc8608c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd80e8c7f135eee; op2val:0xbff78dc42844e792; op3val:0x3fe1b5088dc8608c; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x80e8c7f135eee and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78dc42844e792 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b5088dc8608c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd80e8c7f135eee; op2val:0xbff78dc42844e792; op3val:0x3fe1b5088dc8608c; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x80e8c7f135eee and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78dc42844e792 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b5088dc8608c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd80e8c7f135eee; op2val:0xbff78dc42844e792; op3val:0x3fe1b5088dc8608c; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x80e8c7f135eee and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78dc42844e792 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b5088dc8608c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd80e8c7f135eee; op2val:0xbff78dc42844e792; op3val:0x3fe1b5088dc8608c; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x80e8c7f135eee and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78dc42844e792 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b5088dc8608c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd80e8c7f135eee; op2val:0xbff78dc42844e792; op3val:0x3fe1b5088dc8608c; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbbeb7d3a1380a and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xc4bd03f2d7cad and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8889c6676dcb0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbbeb7d3a1380a; op2val:0xbfbc4bd03f2d7cad; op3val:0x3fa8889c6676dcb0; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbbeb7d3a1380a and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xc4bd03f2d7cad and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8889c6676dcb0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbbeb7d3a1380a; op2val:0xbfbc4bd03f2d7cad; op3val:0x3fa8889c6676dcb0; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbbeb7d3a1380a and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xc4bd03f2d7cad and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8889c6676dcb0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbbeb7d3a1380a; op2val:0xbfbc4bd03f2d7cad; op3val:0x3fa8889c6676dcb0; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbbeb7d3a1380a and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xc4bd03f2d7cad and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8889c6676dcb0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbbeb7d3a1380a; op2val:0xbfbc4bd03f2d7cad; op3val:0x3fa8889c6676dcb0; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbbeb7d3a1380a and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xc4bd03f2d7cad and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8889c6676dcb0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbbeb7d3a1380a; op2val:0xbfbc4bd03f2d7cad; op3val:0x3fa8889c6676dcb0; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x58f0f1573b368 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x90e27ed671220 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0e14d45a72152 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb58f0f1573b368; op2val:0xc0090e27ed671220; op3val:0x3fd0e14d45a72152; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x58f0f1573b368 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x90e27ed671220 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0e14d45a72152 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb58f0f1573b368; op2val:0xc0090e27ed671220; op3val:0x3fd0e14d45a72152; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x58f0f1573b368 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x90e27ed671220 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0e14d45a72152 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb58f0f1573b368; op2val:0xc0090e27ed671220; op3val:0x3fd0e14d45a72152; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x58f0f1573b368 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x90e27ed671220 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0e14d45a72152 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb58f0f1573b368; op2val:0xc0090e27ed671220; op3val:0x3fd0e14d45a72152; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x58f0f1573b368 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x90e27ed671220 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0e14d45a72152 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb58f0f1573b368; op2val:0xc0090e27ed671220; op3val:0x3fd0e14d45a72152; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf572e218a064c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3ce89359cc36e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3660afea148ac and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf572e218a064c; op2val:0xbfe3ce89359cc36e; op3val:0x3fd3660afea148ac; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf572e218a064c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3ce89359cc36e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3660afea148ac and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf572e218a064c; op2val:0xbfe3ce89359cc36e; op3val:0x3fd3660afea148ac; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf572e218a064c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3ce89359cc36e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3660afea148ac and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf572e218a064c; op2val:0xbfe3ce89359cc36e; op3val:0x3fd3660afea148ac; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf572e218a064c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3ce89359cc36e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3660afea148ac and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf572e218a064c; op2val:0xbfe3ce89359cc36e; op3val:0x3fd3660afea148ac; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf572e218a064c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3ce89359cc36e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3660afea148ac and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf572e218a064c; op2val:0xbfe3ce89359cc36e; op3val:0x3fd3660afea148ac; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3c2d3db48632 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x63ac337c64dcb and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x39d386c560a38 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3c2d3db48632; op2val:0xbfb63ac337c64dcb; op3val:0x3fb39d386c560a38; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3c2d3db48632 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x63ac337c64dcb and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x39d386c560a38 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3c2d3db48632; op2val:0xbfb63ac337c64dcb; op3val:0x3fb39d386c560a38; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3c2d3db48632 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x63ac337c64dcb and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x39d386c560a38 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3c2d3db48632; op2val:0xbfb63ac337c64dcb; op3val:0x3fb39d386c560a38; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3c2d3db48632 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x63ac337c64dcb and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x39d386c560a38 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3c2d3db48632; op2val:0xbfb63ac337c64dcb; op3val:0x3fb39d386c560a38; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3c2d3db48632 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x63ac337c64dcb and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x39d386c560a38 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3c2d3db48632; op2val:0xbfb63ac337c64dcb; op3val:0x3fb39d386c560a38; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x93e17a54dbd28 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x10abdb421c610 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae2eb38110cc5 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc93e17a54dbd28; op2val:0xc0110abdb421c610; op3val:0x3feae2eb38110cc5; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x93e17a54dbd28 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x10abdb421c610 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae2eb38110cc5 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc93e17a54dbd28; op2val:0xc0110abdb421c610; op3val:0x3feae2eb38110cc5; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x93e17a54dbd28 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x10abdb421c610 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae2eb38110cc5 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc93e17a54dbd28; op2val:0xc0110abdb421c610; op3val:0x3feae2eb38110cc5; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x93e17a54dbd28 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x10abdb421c610 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae2eb38110cc5 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc93e17a54dbd28; op2val:0xc0110abdb421c610; op3val:0x3feae2eb38110cc5; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x93e17a54dbd28 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x10abdb421c610 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae2eb38110cc5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc93e17a54dbd28; op2val:0xc0110abdb421c610; op3val:0x3feae2eb38110cc5; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1a3ae85e846e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe877b686032da and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d4222c7e7f5f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1a3ae85e846e7; op2val:0xbfee877b686032da; op3val:0x3fe0d4222c7e7f5f; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1a3ae85e846e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe877b686032da and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d4222c7e7f5f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1a3ae85e846e7; op2val:0xbfee877b686032da; op3val:0x3fe0d4222c7e7f5f; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1a3ae85e846e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe877b686032da and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d4222c7e7f5f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1a3ae85e846e7; op2val:0xbfee877b686032da; op3val:0x3fe0d4222c7e7f5f; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1a3ae85e846e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe877b686032da and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d4222c7e7f5f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1a3ae85e846e7; op2val:0xbfee877b686032da; op3val:0x3fe0d4222c7e7f5f; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1a3ae85e846e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe877b686032da and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0d4222c7e7f5f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1a3ae85e846e7; op2val:0xbfee877b686032da; op3val:0x3fe0d4222c7e7f5f; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf78e532cc9c04 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x37d16180dc4ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x32ace103db541 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf78e532cc9c04; op2val:0xbff37d16180dc4ac; op3val:0x3fe32ace103db541; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf78e532cc9c04 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x37d16180dc4ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x32ace103db541 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf78e532cc9c04; op2val:0xbff37d16180dc4ac; op3val:0x3fe32ace103db541; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf78e532cc9c04 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x37d16180dc4ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x32ace103db541 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf78e532cc9c04; op2val:0xbff37d16180dc4ac; op3val:0x3fe32ace103db541; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf78e532cc9c04 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x37d16180dc4ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x32ace103db541 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf78e532cc9c04; op2val:0xbff37d16180dc4ac; op3val:0x3fe32ace103db541; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf78e532cc9c04 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x37d16180dc4ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x32ace103db541 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf78e532cc9c04; op2val:0xbff37d16180dc4ac; op3val:0x3fe32ace103db541; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3ca9b178997d6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x925fa13fe16bf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf1b8c31df9fe0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3ca9b178997d6; op2val:0xbff925fa13fe16bf; op3val:0x3fdf1b8c31df9fe0; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3ca9b178997d6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x925fa13fe16bf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf1b8c31df9fe0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3ca9b178997d6; op2val:0xbff925fa13fe16bf; op3val:0x3fdf1b8c31df9fe0; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3ca9b178997d6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x925fa13fe16bf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf1b8c31df9fe0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3ca9b178997d6; op2val:0xbff925fa13fe16bf; op3val:0x3fdf1b8c31df9fe0; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3ca9b178997d6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x925fa13fe16bf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf1b8c31df9fe0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3ca9b178997d6; op2val:0xbff925fa13fe16bf; op3val:0x3fdf1b8c31df9fe0; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3ca9b178997d6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x925fa13fe16bf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf1b8c31df9fe0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3ca9b178997d6; op2val:0xbff925fa13fe16bf; op3val:0x3fdf1b8c31df9fe0; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd604cc826657a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x731fbdae649c3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x54b19d9bbc89a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd604cc826657a; op2val:0xbfe731fbdae649c3; op3val:0x3fd54b19d9bbc89a; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd604cc826657a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x731fbdae649c3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x54b19d9bbc89a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd604cc826657a; op2val:0xbfe731fbdae649c3; op3val:0x3fd54b19d9bbc89a; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd604cc826657a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x731fbdae649c3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x54b19d9bbc89a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd604cc826657a; op2val:0xbfe731fbdae649c3; op3val:0x3fd54b19d9bbc89a; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd604cc826657a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x731fbdae649c3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x54b19d9bbc89a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd604cc826657a; op2val:0xbfe731fbdae649c3; op3val:0x3fd54b19d9bbc89a; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd604cc826657a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x731fbdae649c3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x54b19d9bbc89a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd604cc826657a; op2val:0xbfe731fbdae649c3; op3val:0x3fd54b19d9bbc89a; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe67354c0f5c24 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x032a645ea09fc and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xec773c63fcf80 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce67354c0f5c24; op2val:0xbfe032a645ea09fc; op3val:0x3fbec773c63fcf80; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe67354c0f5c24 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x032a645ea09fc and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xec773c63fcf80 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce67354c0f5c24; op2val:0xbfe032a645ea09fc; op3val:0x3fbec773c63fcf80; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe67354c0f5c24 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x032a645ea09fc and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xec773c63fcf80 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce67354c0f5c24; op2val:0xbfe032a645ea09fc; op3val:0x3fbec773c63fcf80; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe67354c0f5c24 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x032a645ea09fc and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xec773c63fcf80 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce67354c0f5c24; op2val:0xbfe032a645ea09fc; op3val:0x3fbec773c63fcf80; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe67354c0f5c24 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x032a645ea09fc and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xec773c63fcf80 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce67354c0f5c24; op2val:0xbfe032a645ea09fc; op3val:0x3fbec773c63fcf80; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b84574a6c9c5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x04b4db856b2c9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x106f671a99100 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b84574a6c9c5; op2val:0xbff04b4db856b2c9; op3val:0x3fe106f671a99100; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b84574a6c9c5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x04b4db856b2c9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x106f671a99100 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b84574a6c9c5; op2val:0xbff04b4db856b2c9; op3val:0x3fe106f671a99100; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b84574a6c9c5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x04b4db856b2c9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x106f671a99100 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b84574a6c9c5; op2val:0xbff04b4db856b2c9; op3val:0x3fe106f671a99100; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b84574a6c9c5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x04b4db856b2c9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x106f671a99100 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b84574a6c9c5; op2val:0xbff04b4db856b2c9; op3val:0x3fe106f671a99100; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b84574a6c9c5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x04b4db856b2c9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x106f671a99100 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b84574a6c9c5; op2val:0xbff04b4db856b2c9; op3val:0x3fe106f671a99100; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xe909d8dd80760 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xabe28e71652db and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x98b21bc37ede0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9e909d8dd80760; op2val:0xbffabe28e71652db; op3val:0x3fa98b21bc37ede0; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xe909d8dd80760 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xabe28e71652db and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x98b21bc37ede0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9e909d8dd80760; op2val:0xbffabe28e71652db; op3val:0x3fa98b21bc37ede0; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xe909d8dd80760 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xabe28e71652db and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x98b21bc37ede0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9e909d8dd80760; op2val:0xbffabe28e71652db; op3val:0x3fa98b21bc37ede0; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xe909d8dd80760 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xabe28e71652db and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x98b21bc37ede0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9e909d8dd80760; op2val:0xbffabe28e71652db; op3val:0x3fa98b21bc37ede0; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xe909d8dd80760 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xabe28e71652db and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x98b21bc37ede0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9e909d8dd80760; op2val:0xbffabe28e71652db; op3val:0x3fa98b21bc37ede0; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa2a5f5b9a588c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd109eb5aea847 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7c3fd6076fd12 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca2a5f5b9a588c; op2val:0xbffd109eb5aea847; op3val:0x3fd7c3fd6076fd12; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa2a5f5b9a588c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd109eb5aea847 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7c3fd6076fd12 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca2a5f5b9a588c; op2val:0xbffd109eb5aea847; op3val:0x3fd7c3fd6076fd12; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa2a5f5b9a588c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd109eb5aea847 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7c3fd6076fd12 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca2a5f5b9a588c; op2val:0xbffd109eb5aea847; op3val:0x3fd7c3fd6076fd12; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa2a5f5b9a588c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd109eb5aea847 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7c3fd6076fd12 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca2a5f5b9a588c; op2val:0xbffd109eb5aea847; op3val:0x3fd7c3fd6076fd12; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa2a5f5b9a588c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd109eb5aea847 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7c3fd6076fd12 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca2a5f5b9a588c; op2val:0xbffd109eb5aea847; op3val:0x3fd7c3fd6076fd12; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaefcaa82456e2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35cca77dccc04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x04c7c290dd764 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaefcaa82456e2; op2val:0xbfe35cca77dccc04; op3val:0x3fe04c7c290dd764; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaefcaa82456e2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35cca77dccc04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x04c7c290dd764 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaefcaa82456e2; op2val:0xbfe35cca77dccc04; op3val:0x3fe04c7c290dd764; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaefcaa82456e2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35cca77dccc04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x04c7c290dd764 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaefcaa82456e2; op2val:0xbfe35cca77dccc04; op3val:0x3fe04c7c290dd764; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaefcaa82456e2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35cca77dccc04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x04c7c290dd764 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaefcaa82456e2; op2val:0xbfe35cca77dccc04; op3val:0x3fe04c7c290dd764; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaefcaa82456e2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35cca77dccc04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x04c7c290dd764 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaefcaa82456e2; op2val:0xbfe35cca77dccc04; op3val:0x3fe04c7c290dd764; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5fc1a144d049b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7e2397cced79b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0689eb5942f80 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5fc1a144d049b; op2val:0xbfe7e2397cced79b; op3val:0x3fe0689eb5942f80; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5fc1a144d049b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7e2397cced79b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0689eb5942f80 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5fc1a144d049b; op2val:0xbfe7e2397cced79b; op3val:0x3fe0689eb5942f80; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5fc1a144d049b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7e2397cced79b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0689eb5942f80 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5fc1a144d049b; op2val:0xbfe7e2397cced79b; op3val:0x3fe0689eb5942f80; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5fc1a144d049b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7e2397cced79b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0689eb5942f80 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5fc1a144d049b; op2val:0xbfe7e2397cced79b; op3val:0x3fe0689eb5942f80; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5fc1a144d049b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7e2397cced79b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0689eb5942f80 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5fc1a144d049b; op2val:0xbfe7e2397cced79b; op3val:0x3fe0689eb5942f80; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x544e62a9f1383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd9fd99bfc7c10 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3b0af912a4d07 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe544e62a9f1383; op2val:0xbfed9fd99bfc7c10; op3val:0x3fe3b0af912a4d07; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x544e62a9f1383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd9fd99bfc7c10 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3b0af912a4d07 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe544e62a9f1383; op2val:0xbfed9fd99bfc7c10; op3val:0x3fe3b0af912a4d07; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x544e62a9f1383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd9fd99bfc7c10 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3b0af912a4d07 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe544e62a9f1383; op2val:0xbfed9fd99bfc7c10; op3val:0x3fe3b0af912a4d07; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x544e62a9f1383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd9fd99bfc7c10 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3b0af912a4d07 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe544e62a9f1383; op2val:0xbfed9fd99bfc7c10; op3val:0x3fe3b0af912a4d07; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x544e62a9f1383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd9fd99bfc7c10 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3b0af912a4d07 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe544e62a9f1383; op2val:0xbfed9fd99bfc7c10; op3val:0x3fe3b0af912a4d07; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x797bc50a1bdbc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4150785e33142 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd9cada3c2b37b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd797bc50a1bdbc; op2val:0xc004150785e33142; op3val:0x3fed9cada3c2b37b; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x797bc50a1bdbc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4150785e33142 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd9cada3c2b37b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd797bc50a1bdbc; op2val:0xc004150785e33142; op3val:0x3fed9cada3c2b37b; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x797bc50a1bdbc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4150785e33142 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd9cada3c2b37b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd797bc50a1bdbc; op2val:0xc004150785e33142; op3val:0x3fed9cada3c2b37b; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x797bc50a1bdbc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4150785e33142 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd9cada3c2b37b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd797bc50a1bdbc; op2val:0xc004150785e33142; op3val:0x3fed9cada3c2b37b; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x797bc50a1bdbc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4150785e33142 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd9cada3c2b37b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd797bc50a1bdbc; op2val:0xc004150785e33142; op3val:0x3fed9cada3c2b37b; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf5bc77c63b7e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc591492588f6f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9a7a2fb01afb7 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf5bc77c63b7e; op2val:0xbffc591492588f6f; op3val:0x3fe9a7a2fb01afb7; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf5bc77c63b7e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc591492588f6f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9a7a2fb01afb7 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf5bc77c63b7e; op2val:0xbffc591492588f6f; op3val:0x3fe9a7a2fb01afb7; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf5bc77c63b7e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc591492588f6f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9a7a2fb01afb7 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf5bc77c63b7e; op2val:0xbffc591492588f6f; op3val:0x3fe9a7a2fb01afb7; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf5bc77c63b7e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc591492588f6f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9a7a2fb01afb7 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf5bc77c63b7e; op2val:0xbffc591492588f6f; op3val:0x3fe9a7a2fb01afb7; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf5bc77c63b7e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc591492588f6f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9a7a2fb01afb7 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf5bc77c63b7e; op2val:0xbffc591492588f6f; op3val:0x3fe9a7a2fb01afb7; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x3f5 and fm1 == 0x37c8c71046800 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x306070bc01f37 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x72b3e0facabc0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f537c8c71046800; op2val:0xc08306070bc01f37; op3val:0x3fe72b3e0facabc0; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x3f5 and fm1 == 0x37c8c71046800 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x306070bc01f37 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x72b3e0facabc0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f537c8c71046800; op2val:0xc08306070bc01f37; op3val:0x3fe72b3e0facabc0; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x3f5 and fm1 == 0x37c8c71046800 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x306070bc01f37 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x72b3e0facabc0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f537c8c71046800; op2val:0xc08306070bc01f37; op3val:0x3fe72b3e0facabc0; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x3f5 and fm1 == 0x37c8c71046800 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x306070bc01f37 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x72b3e0facabc0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f537c8c71046800; op2val:0xc08306070bc01f37; op3val:0x3fe72b3e0facabc0; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x3f5 and fm1 == 0x37c8c71046800 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x306070bc01f37 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x72b3e0facabc0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f537c8c71046800; op2val:0xc08306070bc01f37; op3val:0x3fe72b3e0facabc0; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8de9966990f6a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x23d98c6af7d52 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5a2ab3c8175e and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8de9966990f6a; op2val:0xc0023d98c6af7d52; op3val:0x3fec5a2ab3c8175e; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8de9966990f6a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x23d98c6af7d52 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5a2ab3c8175e and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8de9966990f6a; op2val:0xc0023d98c6af7d52; op3val:0x3fec5a2ab3c8175e; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8de9966990f6a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x23d98c6af7d52 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5a2ab3c8175e and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8de9966990f6a; op2val:0xc0023d98c6af7d52; op3val:0x3fec5a2ab3c8175e; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8de9966990f6a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x23d98c6af7d52 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5a2ab3c8175e and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8de9966990f6a; op2val:0xc0023d98c6af7d52; op3val:0x3fec5a2ab3c8175e; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8de9966990f6a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x23d98c6af7d52 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5a2ab3c8175e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8de9966990f6a; op2val:0xc0023d98c6af7d52; op3val:0x3fec5a2ab3c8175e; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x082c4447e9eae and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa01ca8c32c11a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad6581f2c7fc4 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe082c4447e9eae; op2val:0xbfea01ca8c32c11a; op3val:0x3fdad6581f2c7fc4; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x082c4447e9eae and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa01ca8c32c11a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad6581f2c7fc4 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe082c4447e9eae; op2val:0xbfea01ca8c32c11a; op3val:0x3fdad6581f2c7fc4; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x082c4447e9eae and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa01ca8c32c11a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad6581f2c7fc4 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe082c4447e9eae; op2val:0xbfea01ca8c32c11a; op3val:0x3fdad6581f2c7fc4; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x082c4447e9eae and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa01ca8c32c11a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad6581f2c7fc4 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe082c4447e9eae; op2val:0xbfea01ca8c32c11a; op3val:0x3fdad6581f2c7fc4; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x082c4447e9eae and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa01ca8c32c11a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad6581f2c7fc4 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe082c4447e9eae; op2val:0xbfea01ca8c32c11a; op3val:0x3fdad6581f2c7fc4; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xff84e9572e12e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4191bfd1bc999 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41447112dccce and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdff84e9572e12e; op2val:0xbff4191bfd1bc999; op3val:0x3fe41447112dccce; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xff84e9572e12e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4191bfd1bc999 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41447112dccce and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdff84e9572e12e; op2val:0xbff4191bfd1bc999; op3val:0x3fe41447112dccce; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xff84e9572e12e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4191bfd1bc999 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41447112dccce and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdff84e9572e12e; op2val:0xbff4191bfd1bc999; op3val:0x3fe41447112dccce; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xff84e9572e12e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4191bfd1bc999 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41447112dccce and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdff84e9572e12e; op2val:0xbff4191bfd1bc999; op3val:0x3fe41447112dccce; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xff84e9572e12e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4191bfd1bc999 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41447112dccce and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdff84e9572e12e; op2val:0xbff4191bfd1bc999; op3val:0x3fe41447112dccce; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xc4fab12e9ba70 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc68a06c13f37b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x922468a7fe168 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fac4fab12e9ba70; op2val:0xc01c68a06c13f37b; op3val:0x3fd922468a7fe168; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xc4fab12e9ba70 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc68a06c13f37b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x922468a7fe168 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fac4fab12e9ba70; op2val:0xc01c68a06c13f37b; op3val:0x3fd922468a7fe168; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xc4fab12e9ba70 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc68a06c13f37b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x922468a7fe168 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fac4fab12e9ba70; op2val:0xc01c68a06c13f37b; op3val:0x3fd922468a7fe168; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xc4fab12e9ba70 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc68a06c13f37b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x922468a7fe168 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fac4fab12e9ba70; op2val:0xc01c68a06c13f37b; op3val:0x3fd922468a7fe168; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xc4fab12e9ba70 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc68a06c13f37b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x922468a7fe168 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fac4fab12e9ba70; op2val:0xc01c68a06c13f37b; op3val:0x3fd922468a7fe168; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x996df2fef42e5 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x39a117985dca4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf59911fc1b01c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe996df2fef42e5; op2val:0xbfd39a117985dca4; op3val:0x3fcf59911fc1b01c; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x996df2fef42e5 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x39a117985dca4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf59911fc1b01c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe996df2fef42e5; op2val:0xbfd39a117985dca4; op3val:0x3fcf59911fc1b01c; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x996df2fef42e5 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x39a117985dca4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf59911fc1b01c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe996df2fef42e5; op2val:0xbfd39a117985dca4; op3val:0x3fcf59911fc1b01c; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x996df2fef42e5 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x39a117985dca4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf59911fc1b01c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe996df2fef42e5; op2val:0xbfd39a117985dca4; op3val:0x3fcf59911fc1b01c; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x996df2fef42e5 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x39a117985dca4 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf59911fc1b01c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe996df2fef42e5; op2val:0xbfd39a117985dca4; op3val:0x3fcf59911fc1b01c; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xdae4484794eb0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xae30ebaa29cd7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x8f0318b080860 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbdae4484794eb0; op2val:0xbfcae30ebaa29cd7; op3val:0x3f98f0318b080860; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xdae4484794eb0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xae30ebaa29cd7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x8f0318b080860 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbdae4484794eb0; op2val:0xbfcae30ebaa29cd7; op3val:0x3f98f0318b080860; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xdae4484794eb0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xae30ebaa29cd7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x8f0318b080860 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbdae4484794eb0; op2val:0xbfcae30ebaa29cd7; op3val:0x3f98f0318b080860; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xdae4484794eb0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xae30ebaa29cd7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x8f0318b080860 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbdae4484794eb0; op2val:0xbfcae30ebaa29cd7; op3val:0x3f98f0318b080860; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xdae4484794eb0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xae30ebaa29cd7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x8f0318b080860 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbdae4484794eb0; op2val:0xbfcae30ebaa29cd7; op3val:0x3f98f0318b080860; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x066de56a5de6f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc390a8eadf9e8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcee7e62453806 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe066de56a5de6f; op2val:0xbfec390a8eadf9e8; op3val:0x3fdcee7e62453806; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x066de56a5de6f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc390a8eadf9e8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcee7e62453806 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe066de56a5de6f; op2val:0xbfec390a8eadf9e8; op3val:0x3fdcee7e62453806; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x066de56a5de6f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc390a8eadf9e8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcee7e62453806 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe066de56a5de6f; op2val:0xbfec390a8eadf9e8; op3val:0x3fdcee7e62453806; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x066de56a5de6f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc390a8eadf9e8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcee7e62453806 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe066de56a5de6f; op2val:0xbfec390a8eadf9e8; op3val:0x3fdcee7e62453806; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x066de56a5de6f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc390a8eadf9e8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcee7e62453806 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe066de56a5de6f; op2val:0xbfec390a8eadf9e8; op3val:0x3fdcee7e62453806; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b524be5ad761 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x736a9e82a19fd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9b0e437ea4fde and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b524be5ad761; op2val:0xbfe736a9e82a19fd; op3val:0x3fd9b0e437ea4fde; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b524be5ad761 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x736a9e82a19fd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9b0e437ea4fde and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b524be5ad761; op2val:0xbfe736a9e82a19fd; op3val:0x3fd9b0e437ea4fde; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b524be5ad761 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x736a9e82a19fd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9b0e437ea4fde and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b524be5ad761; op2val:0xbfe736a9e82a19fd; op3val:0x3fd9b0e437ea4fde; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b524be5ad761 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x736a9e82a19fd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9b0e437ea4fde and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b524be5ad761; op2val:0xbfe736a9e82a19fd; op3val:0x3fd9b0e437ea4fde; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b524be5ad761 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x736a9e82a19fd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9b0e437ea4fde and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b524be5ad761; op2val:0xbfe736a9e82a19fd; op3val:0x3fd9b0e437ea4fde; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x250938133dc44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2ba997905c879 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5703e5122d056 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc250938133dc44; op2val:0xc002ba997905c879; op3val:0x3fd5703e5122d056; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x250938133dc44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2ba997905c879 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5703e5122d056 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc250938133dc44; op2val:0xc002ba997905c879; op3val:0x3fd5703e5122d056; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x250938133dc44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2ba997905c879 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5703e5122d056 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc250938133dc44; op2val:0xc002ba997905c879; op3val:0x3fd5703e5122d056; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x250938133dc44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2ba997905c879 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5703e5122d056 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc250938133dc44; op2val:0xc002ba997905c879; op3val:0x3fd5703e5122d056; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x250938133dc44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2ba997905c879 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5703e5122d056 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc250938133dc44; op2val:0xc002ba997905c879; op3val:0x3fd5703e5122d056; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3535f7870e95 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x648a01acf8bb5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3a499f549cebf and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3535f7870e95; op2val:0xbfe648a01acf8bb5; op3val:0x3fe3a499f549cebf; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3535f7870e95 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x648a01acf8bb5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3a499f549cebf and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3535f7870e95; op2val:0xbfe648a01acf8bb5; op3val:0x3fe3a499f549cebf; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3535f7870e95 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x648a01acf8bb5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3a499f549cebf and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3535f7870e95; op2val:0xbfe648a01acf8bb5; op3val:0x3fe3a499f549cebf; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3535f7870e95 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x648a01acf8bb5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3a499f549cebf and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3535f7870e95; op2val:0xbfe648a01acf8bb5; op3val:0x3fe3a499f549cebf; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3535f7870e95 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x648a01acf8bb5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3a499f549cebf and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3535f7870e95; op2val:0xbfe648a01acf8bb5; op3val:0x3fe3a499f549cebf; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x33a05aa93ca4b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x89ee02db08b8b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd95f2db08ccd0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe33a05aa93ca4b; op2val:0xbfd89ee02db08b8b; op3val:0x3fcd95f2db08ccd0; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x33a05aa93ca4b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x89ee02db08b8b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd95f2db08ccd0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe33a05aa93ca4b; op2val:0xbfd89ee02db08b8b; op3val:0x3fcd95f2db08ccd0; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x33a05aa93ca4b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x89ee02db08b8b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd95f2db08ccd0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe33a05aa93ca4b; op2val:0xbfd89ee02db08b8b; op3val:0x3fcd95f2db08ccd0; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x33a05aa93ca4b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x89ee02db08b8b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd95f2db08ccd0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe33a05aa93ca4b; op2val:0xbfd89ee02db08b8b; op3val:0x3fcd95f2db08ccd0; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x33a05aa93ca4b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x89ee02db08b8b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd95f2db08ccd0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe33a05aa93ca4b; op2val:0xbfd89ee02db08b8b; op3val:0x3fcd95f2db08ccd0; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47d3c9fa92d78 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf4d5106d1efc9 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x40ad3f5eb6e20 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47d3c9fa92d78; op2val:0xbfdf4d5106d1efc9; op3val:0x3fb40ad3f5eb6e20; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47d3c9fa92d78 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf4d5106d1efc9 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x40ad3f5eb6e20 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47d3c9fa92d78; op2val:0xbfdf4d5106d1efc9; op3val:0x3fb40ad3f5eb6e20; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47d3c9fa92d78 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf4d5106d1efc9 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x40ad3f5eb6e20 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47d3c9fa92d78; op2val:0xbfdf4d5106d1efc9; op3val:0x3fb40ad3f5eb6e20; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47d3c9fa92d78 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf4d5106d1efc9 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x40ad3f5eb6e20 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47d3c9fa92d78; op2val:0xbfdf4d5106d1efc9; op3val:0x3fb40ad3f5eb6e20; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x47d3c9fa92d78 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf4d5106d1efc9 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x40ad3f5eb6e20 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc47d3c9fa92d78; op2val:0xbfdf4d5106d1efc9; op3val:0x3fb40ad3f5eb6e20; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x86d90251ec13e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x106ef01c8fa1d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9feff24d173be and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe86d90251ec13e; op2val:0xbfe106ef01c8fa1d; op3val:0x3fd9feff24d173be; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x86d90251ec13e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x106ef01c8fa1d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9feff24d173be and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe86d90251ec13e; op2val:0xbfe106ef01c8fa1d; op3val:0x3fd9feff24d173be; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x86d90251ec13e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x106ef01c8fa1d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9feff24d173be and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe86d90251ec13e; op2val:0xbfe106ef01c8fa1d; op3val:0x3fd9feff24d173be; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x86d90251ec13e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x106ef01c8fa1d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9feff24d173be and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe86d90251ec13e; op2val:0xbfe106ef01c8fa1d; op3val:0x3fd9feff24d173be; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x86d90251ec13e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x106ef01c8fa1d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9feff24d173be and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe86d90251ec13e; op2val:0xbfe106ef01c8fa1d; op3val:0x3fd9feff24d173be; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xe024edb715280 and fs2 == 1 and fe2 == 0x405 and fm2 == 0xd4fed36142bb2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7d0b9d5b4b45 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7e024edb715280; op2val:0xc05d4fed36142bb2; op3val:0x3feb7d0b9d5b4b45; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xe024edb715280 and fs2 == 1 and fe2 == 0x405 and fm2 == 0xd4fed36142bb2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7d0b9d5b4b45 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7e024edb715280; op2val:0xc05d4fed36142bb2; op3val:0x3feb7d0b9d5b4b45; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 368, x18)

inst_278:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xe024edb715280 and fs2 == 1 and fe2 == 0x405 and fm2 == 0xd4fed36142bb2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7d0b9d5b4b45 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7e024edb715280; op2val:0xc05d4fed36142bb2; op3val:0x3feb7d0b9d5b4b45; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 384, x18)

inst_279:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xe024edb715280 and fs2 == 1 and fe2 == 0x405 and fm2 == 0xd4fed36142bb2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7d0b9d5b4b45 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7e024edb715280; op2val:0xc05d4fed36142bb2; op3val:0x3feb7d0b9d5b4b45; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 400, x18)

inst_280:
// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xe024edb715280 and fs2 == 1 and fe2 == 0x405 and fm2 == 0xd4fed36142bb2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7d0b9d5b4b45 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7e024edb715280; op2val:0xc05d4fed36142bb2; op3val:0x3feb7d0b9d5b4b45; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_281:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7780b8bb62a7b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x83c810b60302c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1c66862b4f011 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7780b8bb62a7b; op2val:0xbfe83c810b60302c; op3val:0x3fe1c66862b4f011; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 432, x18)

inst_282:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7780b8bb62a7b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x83c810b60302c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1c66862b4f011 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7780b8bb62a7b; op2val:0xbfe83c810b60302c; op3val:0x3fe1c66862b4f011; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 448, x18)

inst_283:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7780b8bb62a7b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x83c810b60302c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1c66862b4f011 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7780b8bb62a7b; op2val:0xbfe83c810b60302c; op3val:0x3fe1c66862b4f011; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 464, x18)

inst_284:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7780b8bb62a7b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x83c810b60302c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1c66862b4f011 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7780b8bb62a7b; op2val:0xbfe83c810b60302c; op3val:0x3fe1c66862b4f011; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 480, x18)

inst_285:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7780b8bb62a7b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x83c810b60302c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1c66862b4f011 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7780b8bb62a7b; op2val:0xbfe83c810b60302c; op3val:0x3fe1c66862b4f011; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 496, x18)

inst_286:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fe468ef9050a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x65d853ac3a170 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbf27d79ce274e and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fe468ef9050a; op2val:0xbff65d853ac3a170; op3val:0x3fdbf27d79ce274e; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 512, x18)

inst_287:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fe468ef9050a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x65d853ac3a170 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbf27d79ce274e and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fe468ef9050a; op2val:0xbff65d853ac3a170; op3val:0x3fdbf27d79ce274e; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 528, x18)

inst_288:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fe468ef9050a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x65d853ac3a170 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbf27d79ce274e and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fe468ef9050a; op2val:0xbff65d853ac3a170; op3val:0x3fdbf27d79ce274e; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 544, x18)

inst_289:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fe468ef9050a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x65d853ac3a170 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbf27d79ce274e and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fe468ef9050a; op2val:0xbff65d853ac3a170; op3val:0x3fdbf27d79ce274e; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 560, x18)

inst_290:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fe468ef9050a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x65d853ac3a170 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbf27d79ce274e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fe468ef9050a; op2val:0xbff65d853ac3a170; op3val:0x3fdbf27d79ce274e; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 576, x18)

inst_291:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9c46df0a4e7b6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfc0f938676a04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x991adc2a61c6f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9c46df0a4e7b6; op2val:0xbfffc0f938676a04; op3val:0x3fe991adc2a61c6f; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 592, x18)

inst_292:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9c46df0a4e7b6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfc0f938676a04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x991adc2a61c6f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9c46df0a4e7b6; op2val:0xbfffc0f938676a04; op3val:0x3fe991adc2a61c6f; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 608, x18)

inst_293:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9c46df0a4e7b6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfc0f938676a04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x991adc2a61c6f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9c46df0a4e7b6; op2val:0xbfffc0f938676a04; op3val:0x3fe991adc2a61c6f; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 624, x18)

inst_294:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9c46df0a4e7b6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfc0f938676a04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x991adc2a61c6f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9c46df0a4e7b6; op2val:0xbfffc0f938676a04; op3val:0x3fe991adc2a61c6f; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 640, x18)

inst_295:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9c46df0a4e7b6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfc0f938676a04 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x991adc2a61c6f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9c46df0a4e7b6; op2val:0xbfffc0f938676a04; op3val:0x3fe991adc2a61c6f; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 656, x18)

inst_296:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8eebca24c21d0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6c77189350cc7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1bf86ca972ac2 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8eebca24c21d0; op2val:0xbfd6c77189350cc7; op3val:0x3fd1bf86ca972ac2; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 672, x18)

inst_297:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8eebca24c21d0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6c77189350cc7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1bf86ca972ac2 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8eebca24c21d0; op2val:0xbfd6c77189350cc7; op3val:0x3fd1bf86ca972ac2; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 688, x18)

inst_298:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8eebca24c21d0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6c77189350cc7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1bf86ca972ac2 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8eebca24c21d0; op2val:0xbfd6c77189350cc7; op3val:0x3fd1bf86ca972ac2; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 704, x18)

inst_299:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8eebca24c21d0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6c77189350cc7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1bf86ca972ac2 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8eebca24c21d0; op2val:0xbfd6c77189350cc7; op3val:0x3fd1bf86ca972ac2; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 720, x18)

inst_300:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8eebca24c21d0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6c77189350cc7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1bf86ca972ac2 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8eebca24c21d0; op2val:0xbfd6c77189350cc7; op3val:0x3fd1bf86ca972ac2; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 736, x18)

inst_301:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad352edc767de and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd03701e395c70 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85264f43b74b5 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead352edc767de; op2val:0xbfed03701e395c70; op3val:0x3fe85264f43b74b5; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 752, x18)

inst_302:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad352edc767de and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd03701e395c70 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85264f43b74b5 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead352edc767de; op2val:0xbfed03701e395c70; op3val:0x3fe85264f43b74b5; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 768, x18)

inst_303:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad352edc767de and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd03701e395c70 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85264f43b74b5 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead352edc767de; op2val:0xbfed03701e395c70; op3val:0x3fe85264f43b74b5; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 784, x18)

inst_304:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad352edc767de and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd03701e395c70 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85264f43b74b5 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead352edc767de; op2val:0xbfed03701e395c70; op3val:0x3fe85264f43b74b5; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 800, x18)

inst_305:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad352edc767de and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd03701e395c70 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85264f43b74b5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead352edc767de; op2val:0xbfed03701e395c70; op3val:0x3fe85264f43b74b5; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 816, x18)

inst_306:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa09915a9c61f4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xea5b3ec900a1e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8efcc006ea84e and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca09915a9c61f4; op2val:0xbffea5b3ec900a1e; op3val:0x3fd8efcc006ea84e; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 832, x18)

inst_307:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa09915a9c61f4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xea5b3ec900a1e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8efcc006ea84e and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca09915a9c61f4; op2val:0xbffea5b3ec900a1e; op3val:0x3fd8efcc006ea84e; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 848, x18)

inst_308:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa09915a9c61f4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xea5b3ec900a1e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8efcc006ea84e and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca09915a9c61f4; op2val:0xbffea5b3ec900a1e; op3val:0x3fd8efcc006ea84e; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 864, x18)

inst_309:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa09915a9c61f4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xea5b3ec900a1e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8efcc006ea84e and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca09915a9c61f4; op2val:0xbffea5b3ec900a1e; op3val:0x3fd8efcc006ea84e; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 880, x18)

inst_310:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa09915a9c61f4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xea5b3ec900a1e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8efcc006ea84e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca09915a9c61f4; op2val:0xbffea5b3ec900a1e; op3val:0x3fd8efcc006ea84e; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 896, x18)

inst_311:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fed64f9ce8aa and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x77643b856a573 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8ebf36deccb1b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fed64f9ce8aa; op2val:0xbff77643b856a573; op3val:0x3fe8ebf36deccb1b; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 912, x18)

inst_312:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fed64f9ce8aa and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x77643b856a573 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8ebf36deccb1b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fed64f9ce8aa; op2val:0xbff77643b856a573; op3val:0x3fe8ebf36deccb1b; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 928, x18)

inst_313:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fed64f9ce8aa and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x77643b856a573 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8ebf36deccb1b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fed64f9ce8aa; op2val:0xbff77643b856a573; op3val:0x3fe8ebf36deccb1b; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 944, x18)

inst_314:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fed64f9ce8aa and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x77643b856a573 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8ebf36deccb1b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fed64f9ce8aa; op2val:0xbff77643b856a573; op3val:0x3fe8ebf36deccb1b; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 960, x18)

inst_315:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fed64f9ce8aa and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x77643b856a573 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8ebf36deccb1b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fed64f9ce8aa; op2val:0xbff77643b856a573; op3val:0x3fe8ebf36deccb1b; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 976, x18)

inst_316:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x879818ee7c52e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0089b71af5cbd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x886ac16acb34c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd879818ee7c52e; op2val:0xbff0089b71af5cbd; op3val:0x3fd886ac16acb34c; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 992, x18)

inst_317:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x879818ee7c52e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0089b71af5cbd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x886ac16acb34c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd879818ee7c52e; op2val:0xbff0089b71af5cbd; op3val:0x3fd886ac16acb34c; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1008, x18)

inst_318:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x879818ee7c52e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0089b71af5cbd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x886ac16acb34c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd879818ee7c52e; op2val:0xbff0089b71af5cbd; op3val:0x3fd886ac16acb34c; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1024, x18)

inst_319:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x879818ee7c52e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0089b71af5cbd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x886ac16acb34c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd879818ee7c52e; op2val:0xbff0089b71af5cbd; op3val:0x3fd886ac16acb34c; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1040, x18)

inst_320:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x879818ee7c52e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0089b71af5cbd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x886ac16acb34c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd879818ee7c52e; op2val:0xbff0089b71af5cbd; op3val:0x3fd886ac16acb34c; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1056, x18)

inst_321:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0bb20263240b4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xca853e79a9c58 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xdf77cd14f13c0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0bb20263240b4; op2val:0xbfcca853e79a9c58; op3val:0x3f9df77cd14f13c0; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1072, x18)

inst_322:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0bb20263240b4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xca853e79a9c58 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xdf77cd14f13c0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0bb20263240b4; op2val:0xbfcca853e79a9c58; op3val:0x3f9df77cd14f13c0; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1088, x18)

inst_323:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0bb20263240b4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xca853e79a9c58 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xdf77cd14f13c0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0bb20263240b4; op2val:0xbfcca853e79a9c58; op3val:0x3f9df77cd14f13c0; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1104, x18)

inst_324:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0bb20263240b4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xca853e79a9c58 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xdf77cd14f13c0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0bb20263240b4; op2val:0xbfcca853e79a9c58; op3val:0x3f9df77cd14f13c0; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1120, x18)

inst_325:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0bb20263240b4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xca853e79a9c58 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xdf77cd14f13c0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0bb20263240b4; op2val:0xbfcca853e79a9c58; op3val:0x3f9df77cd14f13c0; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1136, x18)

inst_326:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x43bf5cc03880c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x26a68eb42ac84 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x74a06712e3a30 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd43bf5cc03880c; op2val:0xbfd26a68eb42ac84; op3val:0x3fb74a06712e3a30; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1152, x18)

inst_327:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x43bf5cc03880c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x26a68eb42ac84 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x74a06712e3a30 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd43bf5cc03880c; op2val:0xbfd26a68eb42ac84; op3val:0x3fb74a06712e3a30; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1168, x18)

inst_328:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x43bf5cc03880c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x26a68eb42ac84 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x74a06712e3a30 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd43bf5cc03880c; op2val:0xbfd26a68eb42ac84; op3val:0x3fb74a06712e3a30; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1184, x18)

inst_329:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x43bf5cc03880c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x26a68eb42ac84 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x74a06712e3a30 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd43bf5cc03880c; op2val:0xbfd26a68eb42ac84; op3val:0x3fb74a06712e3a30; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1200, x18)

inst_330:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x43bf5cc03880c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x26a68eb42ac84 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x74a06712e3a30 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd43bf5cc03880c; op2val:0xbfd26a68eb42ac84; op3val:0x3fb74a06712e3a30; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1216, x18)

inst_331:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf9ceec9667200 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xda4ce1e3a0f97 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xd49084e6ab090 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf9ceec9667200; op2val:0xbfcda4ce1e3a0f97; op3val:0x3fbd49084e6ab090; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1232, x18)

inst_332:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf9ceec9667200 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xda4ce1e3a0f97 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xd49084e6ab090 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf9ceec9667200; op2val:0xbfcda4ce1e3a0f97; op3val:0x3fbd49084e6ab090; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1248, x18)

inst_333:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf9ceec9667200 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xda4ce1e3a0f97 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xd49084e6ab090 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf9ceec9667200; op2val:0xbfcda4ce1e3a0f97; op3val:0x3fbd49084e6ab090; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1264, x18)

inst_334:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf9ceec9667200 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xda4ce1e3a0f97 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xd49084e6ab090 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf9ceec9667200; op2val:0xbfcda4ce1e3a0f97; op3val:0x3fbd49084e6ab090; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1280, x18)

inst_335:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf9ceec9667200 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xda4ce1e3a0f97 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xd49084e6ab090 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf9ceec9667200; op2val:0xbfcda4ce1e3a0f97; op3val:0x3fbd49084e6ab090; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1296, x18)

inst_336:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd5d6d7242aeca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6cf3ce14415e8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ee67786d91f1 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed5d6d7242aeca; op2val:0xbfe6cf3ce14415e8; op3val:0x3fe4ee67786d91f1; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1312, x18)

inst_337:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd5d6d7242aeca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6cf3ce14415e8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ee67786d91f1 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed5d6d7242aeca; op2val:0xbfe6cf3ce14415e8; op3val:0x3fe4ee67786d91f1; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1328, x18)

inst_338:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd5d6d7242aeca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6cf3ce14415e8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ee67786d91f1 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed5d6d7242aeca; op2val:0xbfe6cf3ce14415e8; op3val:0x3fe4ee67786d91f1; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1344, x18)

inst_339:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd5d6d7242aeca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6cf3ce14415e8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ee67786d91f1 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed5d6d7242aeca; op2val:0xbfe6cf3ce14415e8; op3val:0x3fe4ee67786d91f1; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1360, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd5d6d7242aeca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6cf3ce14415e8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ee67786d91f1 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed5d6d7242aeca; op2val:0xbfe6cf3ce14415e8; op3val:0x3fe4ee67786d91f1; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1376, x18)

inst_341:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5efb2630b6275 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x02c77c3c31f00 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x62ca9c0bf544e and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5efb2630b6275; op2val:0xbfe02c77c3c31f00; op3val:0x3fd62ca9c0bf544e; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1392, x18)

inst_342:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5efb2630b6275 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x02c77c3c31f00 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x62ca9c0bf544e and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5efb2630b6275; op2val:0xbfe02c77c3c31f00; op3val:0x3fd62ca9c0bf544e; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1408, x18)

inst_343:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5efb2630b6275 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x02c77c3c31f00 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x62ca9c0bf544e and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5efb2630b6275; op2val:0xbfe02c77c3c31f00; op3val:0x3fd62ca9c0bf544e; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1424, x18)

inst_344:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5efb2630b6275 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x02c77c3c31f00 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x62ca9c0bf544e and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5efb2630b6275; op2val:0xbfe02c77c3c31f00; op3val:0x3fd62ca9c0bf544e; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1440, x18)

inst_345:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5efb2630b6275 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x02c77c3c31f00 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x62ca9c0bf544e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5efb2630b6275; op2val:0xbfe02c77c3c31f00; op3val:0x3fd62ca9c0bf544e; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1456, x18)

inst_346:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02e570b605c86 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1fd33486572da and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2314d1966daa8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe02e570b605c86; op2val:0xbfe1fd33486572da; op3val:0x3fd2314d1966daa8; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1472, x18)

inst_347:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02e570b605c86 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1fd33486572da and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2314d1966daa8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe02e570b605c86; op2val:0xbfe1fd33486572da; op3val:0x3fd2314d1966daa8; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1488, x18)

inst_348:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02e570b605c86 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1fd33486572da and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2314d1966daa8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe02e570b605c86; op2val:0xbfe1fd33486572da; op3val:0x3fd2314d1966daa8; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1504, x18)

inst_349:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02e570b605c86 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1fd33486572da and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2314d1966daa8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe02e570b605c86; op2val:0xbfe1fd33486572da; op3val:0x3fd2314d1966daa8; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1520, x18)

inst_350:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02e570b605c86 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1fd33486572da and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2314d1966daa8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe02e570b605c86; op2val:0xbfe1fd33486572da; op3val:0x3fd2314d1966daa8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1536, x18)

inst_351:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x117731104c654 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa56bcd7c7404e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc22c2c02b3678 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc117731104c654; op2val:0xbffa56bcd7c7404e; op3val:0x3fcc22c2c02b3678; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1552, x18)

inst_352:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x117731104c654 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa56bcd7c7404e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc22c2c02b3678 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc117731104c654; op2val:0xbffa56bcd7c7404e; op3val:0x3fcc22c2c02b3678; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1568, x18)

inst_353:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x117731104c654 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa56bcd7c7404e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc22c2c02b3678 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc117731104c654; op2val:0xbffa56bcd7c7404e; op3val:0x3fcc22c2c02b3678; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1584, x18)

inst_354:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x117731104c654 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa56bcd7c7404e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc22c2c02b3678 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc117731104c654; op2val:0xbffa56bcd7c7404e; op3val:0x3fcc22c2c02b3678; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1600, x18)

inst_355:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x117731104c654 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa56bcd7c7404e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc22c2c02b3678 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc117731104c654; op2val:0xbffa56bcd7c7404e; op3val:0x3fcc22c2c02b3678; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1616, x18)

inst_356:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8a93e93a6ea74 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xca10235cc712e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6102bf812b3f8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8a93e93a6ea74; op2val:0xbffca10235cc712e; op3val:0x3fd6102bf812b3f8; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1632, x18)

inst_357:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8a93e93a6ea74 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xca10235cc712e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6102bf812b3f8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8a93e93a6ea74; op2val:0xbffca10235cc712e; op3val:0x3fd6102bf812b3f8; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1648, x18)

inst_358:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8a93e93a6ea74 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xca10235cc712e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6102bf812b3f8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8a93e93a6ea74; op2val:0xbffca10235cc712e; op3val:0x3fd6102bf812b3f8; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1664, x18)

inst_359:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8a93e93a6ea74 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xca10235cc712e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6102bf812b3f8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8a93e93a6ea74; op2val:0xbffca10235cc712e; op3val:0x3fd6102bf812b3f8; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1680, x18)

inst_360:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8a93e93a6ea74 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xca10235cc712e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6102bf812b3f8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8a93e93a6ea74; op2val:0xbffca10235cc712e; op3val:0x3fd6102bf812b3f8; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1696, x18)

inst_361:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x321c1064fe8ea and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b44ff872cbf7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9f3e8b38d681f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd321c1064fe8ea; op2val:0xc005b44ff872cbf7; op3val:0x3fe9f3e8b38d681f; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1712, x18)

inst_362:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x321c1064fe8ea and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b44ff872cbf7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9f3e8b38d681f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd321c1064fe8ea; op2val:0xc005b44ff872cbf7; op3val:0x3fe9f3e8b38d681f; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1728, x18)

inst_363:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x321c1064fe8ea and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b44ff872cbf7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9f3e8b38d681f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd321c1064fe8ea; op2val:0xc005b44ff872cbf7; op3val:0x3fe9f3e8b38d681f; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1744, x18)

inst_364:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x321c1064fe8ea and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b44ff872cbf7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9f3e8b38d681f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd321c1064fe8ea; op2val:0xc005b44ff872cbf7; op3val:0x3fe9f3e8b38d681f; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1760, x18)

inst_365:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x321c1064fe8ea and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b44ff872cbf7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9f3e8b38d681f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd321c1064fe8ea; op2val:0xc005b44ff872cbf7; op3val:0x3fe9f3e8b38d681f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1776, x18)

inst_366:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9546b552fdc42 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8d8b0808afc79 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3aad60a70ee04 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9546b552fdc42; op2val:0xbfd8d8b0808afc79; op3val:0x3fd3aad60a70ee04; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1792, x18)

inst_367:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9546b552fdc42 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8d8b0808afc79 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3aad60a70ee04 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9546b552fdc42; op2val:0xbfd8d8b0808afc79; op3val:0x3fd3aad60a70ee04; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1808, x18)

inst_368:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9546b552fdc42 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8d8b0808afc79 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3aad60a70ee04 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9546b552fdc42; op2val:0xbfd8d8b0808afc79; op3val:0x3fd3aad60a70ee04; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1824, x18)

inst_369:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9546b552fdc42 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8d8b0808afc79 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3aad60a70ee04 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9546b552fdc42; op2val:0xbfd8d8b0808afc79; op3val:0x3fd3aad60a70ee04; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1840, x18)

inst_370:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9546b552fdc42 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8d8b0808afc79 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3aad60a70ee04 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9546b552fdc42; op2val:0xbfd8d8b0808afc79; op3val:0x3fd3aad60a70ee04; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1856, x18)

inst_371:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x96a17dfd3d600 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7ee77b51eb931 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x301a54cd23f48 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd96a17dfd3d600; op2val:0xbff7ee77b51eb931; op3val:0x3fe301a54cd23f48; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1872, x18)

inst_372:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x96a17dfd3d600 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7ee77b51eb931 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x301a54cd23f48 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd96a17dfd3d600; op2val:0xbff7ee77b51eb931; op3val:0x3fe301a54cd23f48; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1888, x18)

inst_373:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x96a17dfd3d600 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7ee77b51eb931 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x301a54cd23f48 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd96a17dfd3d600; op2val:0xbff7ee77b51eb931; op3val:0x3fe301a54cd23f48; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1904, x18)

inst_374:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x96a17dfd3d600 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7ee77b51eb931 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x301a54cd23f48 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd96a17dfd3d600; op2val:0xbff7ee77b51eb931; op3val:0x3fe301a54cd23f48; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1920, x18)

inst_375:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x96a17dfd3d600 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7ee77b51eb931 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x301a54cd23f48 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd96a17dfd3d600; op2val:0xbff7ee77b51eb931; op3val:0x3fe301a54cd23f48; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1936, x18)

inst_376:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x794930ec4dcba and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4be71ce133871 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe9263ddc946f0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe794930ec4dcba; op2val:0xbfe4be71ce133871; op3val:0x3fde9263ddc946f0; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1952, x18)

inst_377:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x794930ec4dcba and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4be71ce133871 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe9263ddc946f0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe794930ec4dcba; op2val:0xbfe4be71ce133871; op3val:0x3fde9263ddc946f0; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1968, x18)

inst_378:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x794930ec4dcba and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4be71ce133871 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe9263ddc946f0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe794930ec4dcba; op2val:0xbfe4be71ce133871; op3val:0x3fde9263ddc946f0; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1984, x18)

inst_379:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x794930ec4dcba and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4be71ce133871 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe9263ddc946f0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe794930ec4dcba; op2val:0xbfe4be71ce133871; op3val:0x3fde9263ddc946f0; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2000, x18)

inst_380:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x794930ec4dcba and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4be71ce133871 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe9263ddc946f0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe794930ec4dcba; op2val:0xbfe4be71ce133871; op3val:0x3fde9263ddc946f0; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_381:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34cc94cb0bfed and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x048bf656e44a8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3a489b5869838 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34cc94cb0bfed; op2val:0xbfe048bf656e44a8; op3val:0x3fd3a489b5869838; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 0, x18)

inst_382:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34cc94cb0bfed and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x048bf656e44a8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3a489b5869838 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34cc94cb0bfed; op2val:0xbfe048bf656e44a8; op3val:0x3fd3a489b5869838; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 16, x18)

inst_383:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34cc94cb0bfed and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x048bf656e44a8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3a489b5869838 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34cc94cb0bfed; op2val:0xbfe048bf656e44a8; op3val:0x3fd3a489b5869838; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 32, x18)

inst_384:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34cc94cb0bfed and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x048bf656e44a8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3a489b5869838 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34cc94cb0bfed; op2val:0xbfe048bf656e44a8; op3val:0x3fd3a489b5869838; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 48, x18)

inst_385:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34cc94cb0bfed and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x048bf656e44a8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3a489b5869838 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34cc94cb0bfed; op2val:0xbfe048bf656e44a8; op3val:0x3fd3a489b5869838; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 64, x18)

inst_386:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x37438a6b5b25e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x461ed7f000530 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c8582bc779dc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd37438a6b5b25e; op2val:0xc00461ed7f000530; op3val:0x3fe8c8582bc779dc; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 80, x18)

inst_387:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x37438a6b5b25e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x461ed7f000530 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c8582bc779dc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd37438a6b5b25e; op2val:0xc00461ed7f000530; op3val:0x3fe8c8582bc779dc; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 96, x18)

inst_388:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x37438a6b5b25e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x461ed7f000530 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c8582bc779dc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd37438a6b5b25e; op2val:0xc00461ed7f000530; op3val:0x3fe8c8582bc779dc; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 112, x18)

inst_389:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x37438a6b5b25e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x461ed7f000530 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c8582bc779dc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd37438a6b5b25e; op2val:0xc00461ed7f000530; op3val:0x3fe8c8582bc779dc; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 128, x18)

inst_390:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x37438a6b5b25e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x461ed7f000530 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c8582bc779dc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd37438a6b5b25e; op2val:0xc00461ed7f000530; op3val:0x3fe8c8582bc779dc; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 144, x18)

inst_391:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf19868ebd220 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x18018af70109b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0603672bd5c37 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf19868ebd220; op2val:0xbfe18018af70109b; op3val:0x3fe0603672bd5c37; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 160, x18)

inst_392:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf19868ebd220 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x18018af70109b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0603672bd5c37 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf19868ebd220; op2val:0xbfe18018af70109b; op3val:0x3fe0603672bd5c37; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 176, x18)

inst_393:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf19868ebd220 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x18018af70109b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0603672bd5c37 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf19868ebd220; op2val:0xbfe18018af70109b; op3val:0x3fe0603672bd5c37; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 192, x18)

inst_394:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf19868ebd220 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x18018af70109b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0603672bd5c37 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf19868ebd220; op2val:0xbfe18018af70109b; op3val:0x3fe0603672bd5c37; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 208, x18)

inst_395:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf19868ebd220 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x18018af70109b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0603672bd5c37 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedf19868ebd220; op2val:0xbfe18018af70109b; op3val:0x3fe0603672bd5c37; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 224, x18)

inst_396:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9a0aa8009cc0f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x36c7a9c9e93f0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf1c8b5adc72a6 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9a0aa8009cc0f; op2val:0xbff36c7a9c9e93f0; op3val:0x3fef1c8b5adc72a6; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 240, x18)

inst_397:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9a0aa8009cc0f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x36c7a9c9e93f0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf1c8b5adc72a6 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9a0aa8009cc0f; op2val:0xbff36c7a9c9e93f0; op3val:0x3fef1c8b5adc72a6; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 256, x18)

inst_398:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9a0aa8009cc0f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x36c7a9c9e93f0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf1c8b5adc72a6 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9a0aa8009cc0f; op2val:0xbff36c7a9c9e93f0; op3val:0x3fef1c8b5adc72a6; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 272, x18)

inst_399:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9a0aa8009cc0f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x36c7a9c9e93f0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf1c8b5adc72a6 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9a0aa8009cc0f; op2val:0xbff36c7a9c9e93f0; op3val:0x3fef1c8b5adc72a6; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 288, x18)

inst_400:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9a0aa8009cc0f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x36c7a9c9e93f0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf1c8b5adc72a6 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9a0aa8009cc0f; op2val:0xbff36c7a9c9e93f0; op3val:0x3fef1c8b5adc72a6; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 304, x18)

inst_401:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7e75e565c5c65 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa37c75a70a5e2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x395a73ab101e6 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7e75e565c5c65; op2val:0xbfda37c75a70a5e2; op3val:0x3fd395a73ab101e6; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 320, x18)

inst_402:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7e75e565c5c65 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa37c75a70a5e2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x395a73ab101e6 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7e75e565c5c65; op2val:0xbfda37c75a70a5e2; op3val:0x3fd395a73ab101e6; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 336, x18)

inst_403:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7e75e565c5c65 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa37c75a70a5e2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x395a73ab101e6 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7e75e565c5c65; op2val:0xbfda37c75a70a5e2; op3val:0x3fd395a73ab101e6; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 352, x18)

inst_404:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7e75e565c5c65 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa37c75a70a5e2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x395a73ab101e6 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7e75e565c5c65; op2val:0xbfda37c75a70a5e2; op3val:0x3fd395a73ab101e6; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 368, x18)

inst_405:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7e75e565c5c65 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa37c75a70a5e2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x395a73ab101e6 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7e75e565c5c65; op2val:0xbfda37c75a70a5e2; op3val:0x3fd395a73ab101e6; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 384, x18)

inst_406:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9c6b29c8287fe and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb43c087ce4d11 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5f639cf99edd0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9c6b29c8287fe; op2val:0xbfeb43c087ce4d11; op3val:0x3fd5f639cf99edd0; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 400, x18)

inst_407:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9c6b29c8287fe and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb43c087ce4d11 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5f639cf99edd0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9c6b29c8287fe; op2val:0xbfeb43c087ce4d11; op3val:0x3fd5f639cf99edd0; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 416, x18)

inst_408:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9c6b29c8287fe and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb43c087ce4d11 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5f639cf99edd0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9c6b29c8287fe; op2val:0xbfeb43c087ce4d11; op3val:0x3fd5f639cf99edd0; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 432, x18)

inst_409:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9c6b29c8287fe and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb43c087ce4d11 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5f639cf99edd0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9c6b29c8287fe; op2val:0xbfeb43c087ce4d11; op3val:0x3fd5f639cf99edd0; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 448, x18)

inst_410:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9c6b29c8287fe and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb43c087ce4d11 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5f639cf99edd0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9c6b29c8287fe; op2val:0xbfeb43c087ce4d11; op3val:0x3fd5f639cf99edd0; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 464, x18)

inst_411:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5709e8a5be0f8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf399c57c33a09 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ebb2f0415449 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5709e8a5be0f8; op2val:0xbfff399c57c33a09; op3val:0x3fe4ebb2f0415449; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 480, x18)

inst_412:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5709e8a5be0f8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf399c57c33a09 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ebb2f0415449 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5709e8a5be0f8; op2val:0xbfff399c57c33a09; op3val:0x3fe4ebb2f0415449; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 496, x18)

inst_413:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5709e8a5be0f8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf399c57c33a09 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ebb2f0415449 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5709e8a5be0f8; op2val:0xbfff399c57c33a09; op3val:0x3fe4ebb2f0415449; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 512, x18)

inst_414:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5709e8a5be0f8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf399c57c33a09 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ebb2f0415449 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5709e8a5be0f8; op2val:0xbfff399c57c33a09; op3val:0x3fe4ebb2f0415449; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 528, x18)

inst_415:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x5709e8a5be0f8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf399c57c33a09 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ebb2f0415449 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd5709e8a5be0f8; op2val:0xbfff399c57c33a09; op3val:0x3fe4ebb2f0415449; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 544, x18)

inst_416:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x29896c9c5943e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5795fe1d8b94e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8f5574da63290 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd29896c9c5943e; op2val:0xbfc5795fe1d8b94e; op3val:0x3fa8f5574da63290; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 560, x18)

inst_417:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x29896c9c5943e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5795fe1d8b94e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8f5574da63290 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd29896c9c5943e; op2val:0xbfc5795fe1d8b94e; op3val:0x3fa8f5574da63290; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 576, x18)

inst_418:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x29896c9c5943e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5795fe1d8b94e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8f5574da63290 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd29896c9c5943e; op2val:0xbfc5795fe1d8b94e; op3val:0x3fa8f5574da63290; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 592, x18)

inst_419:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x29896c9c5943e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5795fe1d8b94e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8f5574da63290 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd29896c9c5943e; op2val:0xbfc5795fe1d8b94e; op3val:0x3fa8f5574da63290; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 608, x18)

inst_420:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x29896c9c5943e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5795fe1d8b94e and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8f5574da63290 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd29896c9c5943e; op2val:0xbfc5795fe1d8b94e; op3val:0x3fa8f5574da63290; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 624, x18)

inst_421:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb45888fb3aa33 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x008dfe623272a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb54a8f55e4ccd and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb45888fb3aa33; op2val:0xbff008dfe623272a; op3val:0x3feb54a8f55e4ccd; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 640, x18)

inst_422:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb45888fb3aa33 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x008dfe623272a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb54a8f55e4ccd and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb45888fb3aa33; op2val:0xbff008dfe623272a; op3val:0x3feb54a8f55e4ccd; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 656, x18)

inst_423:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb45888fb3aa33 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x008dfe623272a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb54a8f55e4ccd and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb45888fb3aa33; op2val:0xbff008dfe623272a; op3val:0x3feb54a8f55e4ccd; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 672, x18)

inst_424:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb45888fb3aa33 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x008dfe623272a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb54a8f55e4ccd and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb45888fb3aa33; op2val:0xbff008dfe623272a; op3val:0x3feb54a8f55e4ccd; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 688, x18)
addi x16,x16,2040

inst_425:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb45888fb3aa33 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x008dfe623272a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb54a8f55e4ccd and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb45888fb3aa33; op2val:0xbff008dfe623272a; op3val:0x3feb54a8f55e4ccd; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 704, x18)

inst_426:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8205cdc6b6558 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x86656374b80f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2656dcdf93f67 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb8205cdc6b6558; op2val:0xc0186656374b80f9; op3val:0x3fe2656dcdf93f67; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 720, x18)

inst_427:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8205cdc6b6558 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x86656374b80f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2656dcdf93f67 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb8205cdc6b6558; op2val:0xc0186656374b80f9; op3val:0x3fe2656dcdf93f67; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 736, x18)

inst_428:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8205cdc6b6558 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x86656374b80f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2656dcdf93f67 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb8205cdc6b6558; op2val:0xc0186656374b80f9; op3val:0x3fe2656dcdf93f67; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 752, x18)

inst_429:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8205cdc6b6558 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x86656374b80f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2656dcdf93f67 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb8205cdc6b6558; op2val:0xc0186656374b80f9; op3val:0x3fe2656dcdf93f67; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 768, x18)

inst_430:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8205cdc6b6558 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x86656374b80f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2656dcdf93f67 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb8205cdc6b6558; op2val:0xc0186656374b80f9; op3val:0x3fe2656dcdf93f67; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 784, x18)

inst_431:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x21f39c97257ba and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x05bbc6ad9ee60 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x28720ca08c560 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd21f39c97257ba; op2val:0xbfb05bbc6ad9ee60; op3val:0x3f928720ca08c560; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 800, x18)

inst_432:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x21f39c97257ba and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x05bbc6ad9ee60 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x28720ca08c560 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd21f39c97257ba; op2val:0xbfb05bbc6ad9ee60; op3val:0x3f928720ca08c560; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 816, x18)

inst_433:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x21f39c97257ba and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x05bbc6ad9ee60 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x28720ca08c560 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd21f39c97257ba; op2val:0xbfb05bbc6ad9ee60; op3val:0x3f928720ca08c560; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 832, x18)

inst_434:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x21f39c97257ba and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x05bbc6ad9ee60 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x28720ca08c560 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd21f39c97257ba; op2val:0xbfb05bbc6ad9ee60; op3val:0x3f928720ca08c560; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 848, x18)

inst_435:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x21f39c97257ba and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x05bbc6ad9ee60 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x28720ca08c560 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd21f39c97257ba; op2val:0xbfb05bbc6ad9ee60; op3val:0x3f928720ca08c560; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 864, x18)

inst_436:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x097431c55fd7a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xb08da4d4b14a9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xc086f3e777640 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe097431c55fd7a; op2val:0xbf9b08da4d4b14a9; op3val:0x3f8c086f3e777640; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 880, x18)

inst_437:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x097431c55fd7a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xb08da4d4b14a9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xc086f3e777640 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe097431c55fd7a; op2val:0xbf9b08da4d4b14a9; op3val:0x3f8c086f3e777640; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 896, x18)

inst_438:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x097431c55fd7a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xb08da4d4b14a9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xc086f3e777640 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe097431c55fd7a; op2val:0xbf9b08da4d4b14a9; op3val:0x3f8c086f3e777640; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 912, x18)

inst_439:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x097431c55fd7a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xb08da4d4b14a9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xc086f3e777640 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe097431c55fd7a; op2val:0xbf9b08da4d4b14a9; op3val:0x3f8c086f3e777640; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 928, x18)

inst_440:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x097431c55fd7a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xb08da4d4b14a9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xc086f3e777640 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe097431c55fd7a; op2val:0xbf9b08da4d4b14a9; op3val:0x3f8c086f3e777640; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 944, x18)

inst_441:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xceedb89ef554e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14eb92e54c8b2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf4c248e612c5a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feceedb89ef554e; op2val:0xbfe14eb92e54c8b2; op3val:0x3fdf4c248e612c5a; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 960, x18)

inst_442:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xceedb89ef554e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14eb92e54c8b2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf4c248e612c5a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feceedb89ef554e; op2val:0xbfe14eb92e54c8b2; op3val:0x3fdf4c248e612c5a; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 976, x18)

inst_443:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xceedb89ef554e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14eb92e54c8b2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf4c248e612c5a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feceedb89ef554e; op2val:0xbfe14eb92e54c8b2; op3val:0x3fdf4c248e612c5a; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 992, x18)

inst_444:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xceedb89ef554e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14eb92e54c8b2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf4c248e612c5a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feceedb89ef554e; op2val:0xbfe14eb92e54c8b2; op3val:0x3fdf4c248e612c5a; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1008, x18)

inst_445:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xceedb89ef554e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14eb92e54c8b2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf4c248e612c5a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feceedb89ef554e; op2val:0xbfe14eb92e54c8b2; op3val:0x3fdf4c248e612c5a; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1024, x18)

inst_446:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffc442c859ec8 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x414f57ef8ddbb and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x4129da8c358c0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffc442c859ec8; op2val:0xbf9414f57ef8ddbb; op3val:0x3f94129da8c358c0; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1040, x18)

inst_447:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffc442c859ec8 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x414f57ef8ddbb and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x4129da8c358c0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffc442c859ec8; op2val:0xbf9414f57ef8ddbb; op3val:0x3f94129da8c358c0; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1056, x18)

inst_448:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffc442c859ec8 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x414f57ef8ddbb and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x4129da8c358c0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffc442c859ec8; op2val:0xbf9414f57ef8ddbb; op3val:0x3f94129da8c358c0; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1072, x18)

inst_449:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffc442c859ec8 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x414f57ef8ddbb and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x4129da8c358c0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffc442c859ec8; op2val:0xbf9414f57ef8ddbb; op3val:0x3f94129da8c358c0; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1088, x18)

inst_450:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffc442c859ec8 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x414f57ef8ddbb and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x4129da8c358c0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffc442c859ec8; op2val:0xbf9414f57ef8ddbb; op3val:0x3f94129da8c358c0; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1104, x18)

inst_451:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bc672b0fdb8f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3652a58c75153 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6b63164e717c8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2bc672b0fdb8f; op2val:0xbfc3652a58c75153; op3val:0x3fb6b63164e717c8; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1120, x18)

inst_452:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bc672b0fdb8f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3652a58c75153 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6b63164e717c8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2bc672b0fdb8f; op2val:0xbfc3652a58c75153; op3val:0x3fb6b63164e717c8; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1136, x18)

inst_453:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bc672b0fdb8f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3652a58c75153 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6b63164e717c8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2bc672b0fdb8f; op2val:0xbfc3652a58c75153; op3val:0x3fb6b63164e717c8; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1152, x18)

inst_454:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bc672b0fdb8f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3652a58c75153 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6b63164e717c8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2bc672b0fdb8f; op2val:0xbfc3652a58c75153; op3val:0x3fb6b63164e717c8; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1168, x18)

inst_455:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bc672b0fdb8f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3652a58c75153 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6b63164e717c8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2bc672b0fdb8f; op2val:0xbfc3652a58c75153; op3val:0x3fb6b63164e717c8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1184, x18)

inst_456:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5784326bba827 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbbae15650f4c1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x29adade812650 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5784326bba827; op2val:0xbfcbbae15650f4c1; op3val:0x3fc29adade812650; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1200, x18)

inst_457:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5784326bba827 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbbae15650f4c1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x29adade812650 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5784326bba827; op2val:0xbfcbbae15650f4c1; op3val:0x3fc29adade812650; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1216, x18)

inst_458:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5784326bba827 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbbae15650f4c1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x29adade812650 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5784326bba827; op2val:0xbfcbbae15650f4c1; op3val:0x3fc29adade812650; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1232, x18)

inst_459:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5784326bba827 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbbae15650f4c1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x29adade812650 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5784326bba827; op2val:0xbfcbbae15650f4c1; op3val:0x3fc29adade812650; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1248, x18)

inst_460:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5784326bba827 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbbae15650f4c1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x29adade812650 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5784326bba827; op2val:0xbfcbbae15650f4c1; op3val:0x3fc29adade812650; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1264, x18)

inst_461:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfa58573d2bed4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x842d58e4af554 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7fe3cac95de50 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefa58573d2bed4; op2val:0xbfc842d58e4af554; op3val:0x3fc7fe3cac95de50; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1280, x18)

inst_462:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfa58573d2bed4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x842d58e4af554 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7fe3cac95de50 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefa58573d2bed4; op2val:0xbfc842d58e4af554; op3val:0x3fc7fe3cac95de50; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1296, x18)

inst_463:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfa58573d2bed4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x842d58e4af554 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7fe3cac95de50 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefa58573d2bed4; op2val:0xbfc842d58e4af554; op3val:0x3fc7fe3cac95de50; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1312, x18)

inst_464:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfa58573d2bed4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x842d58e4af554 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7fe3cac95de50 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefa58573d2bed4; op2val:0xbfc842d58e4af554; op3val:0x3fc7fe3cac95de50; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1328, x18)

inst_465:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfa58573d2bed4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x842d58e4af554 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7fe3cac95de50 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefa58573d2bed4; op2val:0xbfc842d58e4af554; op3val:0x3fc7fe3cac95de50; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1344, x18)

inst_466:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb24812594aaaa and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb1e43bcfcb809 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x70078a583e45e and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb24812594aaaa; op2val:0xbfeb1e43bcfcb809; op3val:0x3fd70078a583e45e; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1360, x18)

inst_467:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb24812594aaaa and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb1e43bcfcb809 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x70078a583e45e and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb24812594aaaa; op2val:0xbfeb1e43bcfcb809; op3val:0x3fd70078a583e45e; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1376, x18)

inst_468:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb24812594aaaa and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb1e43bcfcb809 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x70078a583e45e and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb24812594aaaa; op2val:0xbfeb1e43bcfcb809; op3val:0x3fd70078a583e45e; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1392, x18)

inst_469:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb24812594aaaa and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb1e43bcfcb809 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x70078a583e45e and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb24812594aaaa; op2val:0xbfeb1e43bcfcb809; op3val:0x3fd70078a583e45e; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1408, x18)

inst_470:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb24812594aaaa and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb1e43bcfcb809 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x70078a583e45e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb24812594aaaa; op2val:0xbfeb1e43bcfcb809; op3val:0x3fd70078a583e45e; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1424, x18)

inst_471:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0e4164fddf8ec and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfd0a53d92e833 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0cb1766f98d86 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0e4164fddf8ec; op2val:0xbfefd0a53d92e833; op3val:0x3fd0cb1766f98d86; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1440, x18)

inst_472:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0e4164fddf8ec and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfd0a53d92e833 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0cb1766f98d86 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0e4164fddf8ec; op2val:0xbfefd0a53d92e833; op3val:0x3fd0cb1766f98d86; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1456, x18)

inst_473:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0e4164fddf8ec and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfd0a53d92e833 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0cb1766f98d86 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0e4164fddf8ec; op2val:0xbfefd0a53d92e833; op3val:0x3fd0cb1766f98d86; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1472, x18)

inst_474:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0e4164fddf8ec and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfd0a53d92e833 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0cb1766f98d86 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0e4164fddf8ec; op2val:0xbfefd0a53d92e833; op3val:0x3fd0cb1766f98d86; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1488, x18)

inst_475:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0e4164fddf8ec and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfd0a53d92e833 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0cb1766f98d86 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0e4164fddf8ec; op2val:0xbfefd0a53d92e833; op3val:0x3fd0cb1766f98d86; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1504, x18)

inst_476:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5f14673e36d72 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x1327efdb97b95 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x7959aff4c24e0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5f14673e36d72; op2val:0xbfa1327efdb97b95; op3val:0x3f97959aff4c24e0; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1520, x18)

inst_477:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5f14673e36d72 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x1327efdb97b95 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x7959aff4c24e0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5f14673e36d72; op2val:0xbfa1327efdb97b95; op3val:0x3f97959aff4c24e0; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1536, x18)

inst_478:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5f14673e36d72 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x1327efdb97b95 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x7959aff4c24e0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5f14673e36d72; op2val:0xbfa1327efdb97b95; op3val:0x3f97959aff4c24e0; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1552, x18)

inst_479:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5f14673e36d72 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x1327efdb97b95 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x7959aff4c24e0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5f14673e36d72; op2val:0xbfa1327efdb97b95; op3val:0x3f97959aff4c24e0; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1568, x18)

inst_480:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5f14673e36d72 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x1327efdb97b95 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x7959aff4c24e0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5f14673e36d72; op2val:0xbfa1327efdb97b95; op3val:0x3f97959aff4c24e0; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1584, x18)

inst_481:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x203bbe95e2aa8 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6669fa25dceb6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x938adeabbff1b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd203bbe95e2aa8; op2val:0xc006669fa25dceb6; op3val:0x3fe938adeabbff1b; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1600, x18)

inst_482:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x203bbe95e2aa8 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6669fa25dceb6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x938adeabbff1b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd203bbe95e2aa8; op2val:0xc006669fa25dceb6; op3val:0x3fe938adeabbff1b; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1616, x18)

inst_483:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x203bbe95e2aa8 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6669fa25dceb6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x938adeabbff1b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd203bbe95e2aa8; op2val:0xc006669fa25dceb6; op3val:0x3fe938adeabbff1b; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1632, x18)

inst_484:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x203bbe95e2aa8 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6669fa25dceb6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x938adeabbff1b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd203bbe95e2aa8; op2val:0xc006669fa25dceb6; op3val:0x3fe938adeabbff1b; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1648, x18)

inst_485:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x203bbe95e2aa8 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6669fa25dceb6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x938adeabbff1b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd203bbe95e2aa8; op2val:0xc006669fa25dceb6; op3val:0x3fe938adeabbff1b; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1664, x18)

inst_486:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc4c6ac7f1b54e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x16e46b7f2ebc5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xed43be63a4340 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec4c6ac7f1b54e; op2val:0xbff16e46b7f2ebc5; op3val:0x3feed43be63a4340; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1680, x18)

inst_487:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc4c6ac7f1b54e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x16e46b7f2ebc5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xed43be63a4340 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec4c6ac7f1b54e; op2val:0xbff16e46b7f2ebc5; op3val:0x3feed43be63a4340; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1696, x18)

inst_488:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc4c6ac7f1b54e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x16e46b7f2ebc5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xed43be63a4340 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec4c6ac7f1b54e; op2val:0xbff16e46b7f2ebc5; op3val:0x3feed43be63a4340; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1712, x18)

inst_489:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc4c6ac7f1b54e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x16e46b7f2ebc5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xed43be63a4340 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec4c6ac7f1b54e; op2val:0xbff16e46b7f2ebc5; op3val:0x3feed43be63a4340; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1728, x18)

inst_490:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc4c6ac7f1b54e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x16e46b7f2ebc5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xed43be63a4340 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec4c6ac7f1b54e; op2val:0xbff16e46b7f2ebc5; op3val:0x3feed43be63a4340; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1744, x18)

inst_491:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe4bc2466d4078 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xb218e941d3cff and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9afb1082cf882 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe4bc2466d4078; op2val:0xc01b218e941d3cff; op3val:0x3fe9afb1082cf882; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1760, x18)

inst_492:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe4bc2466d4078 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xb218e941d3cff and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9afb1082cf882 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe4bc2466d4078; op2val:0xc01b218e941d3cff; op3val:0x3fe9afb1082cf882; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1776, x18)

inst_493:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe4bc2466d4078 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xb218e941d3cff and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9afb1082cf882 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe4bc2466d4078; op2val:0xc01b218e941d3cff; op3val:0x3fe9afb1082cf882; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1792, x18)

inst_494:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe4bc2466d4078 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xb218e941d3cff and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9afb1082cf882 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe4bc2466d4078; op2val:0xc01b218e941d3cff; op3val:0x3fe9afb1082cf882; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1808, x18)

inst_495:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe4bc2466d4078 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xb218e941d3cff and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9afb1082cf882 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe4bc2466d4078; op2val:0xc01b218e941d3cff; op3val:0x3fe9afb1082cf882; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1824, x18)

inst_496:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x74b46a4cb32a2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x068e4471fe8b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7e3fc483585d7 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd74b46a4cb32a2; op2val:0xc00068e4471fe8b3; op3val:0x3fe7e3fc483585d7; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1840, x18)

inst_497:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x74b46a4cb32a2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x068e4471fe8b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7e3fc483585d7 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd74b46a4cb32a2; op2val:0xc00068e4471fe8b3; op3val:0x3fe7e3fc483585d7; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1856, x18)

inst_498:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x74b46a4cb32a2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x068e4471fe8b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7e3fc483585d7 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd74b46a4cb32a2; op2val:0xc00068e4471fe8b3; op3val:0x3fe7e3fc483585d7; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1872, x18)

inst_499:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x74b46a4cb32a2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x068e4471fe8b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7e3fc483585d7 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd74b46a4cb32a2; op2val:0xc00068e4471fe8b3; op3val:0x3fe7e3fc483585d7; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1888, x18)

inst_500:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x74b46a4cb32a2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x068e4471fe8b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7e3fc483585d7 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd74b46a4cb32a2; op2val:0xc00068e4471fe8b3; op3val:0x3fe7e3fc483585d7; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1904, x18)

inst_501:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xed63a8b04874c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9fab6ad4f40db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x908f76f691f9e and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fced63a8b04874c; op2val:0xc009fab6ad4f40db; op3val:0x3fe908f76f691f9e; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1920, x18)

inst_502:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xed63a8b04874c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9fab6ad4f40db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x908f76f691f9e and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fced63a8b04874c; op2val:0xc009fab6ad4f40db; op3val:0x3fe908f76f691f9e; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1936, x18)

inst_503:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xed63a8b04874c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9fab6ad4f40db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x908f76f691f9e and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fced63a8b04874c; op2val:0xc009fab6ad4f40db; op3val:0x3fe908f76f691f9e; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1952, x18)

inst_504:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xed63a8b04874c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9fab6ad4f40db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x908f76f691f9e and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fced63a8b04874c; op2val:0xc009fab6ad4f40db; op3val:0x3fe908f76f691f9e; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1968, x18)

inst_505:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xed63a8b04874c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9fab6ad4f40db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x908f76f691f9e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fced63a8b04874c; op2val:0xc009fab6ad4f40db; op3val:0x3fe908f76f691f9e; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1984, x18)

inst_506:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd2b1345cea515 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd0e5a0dba105e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa7c1e655b1d78 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed2b1345cea515; op2val:0xbfcd0e5a0dba105e; op3val:0x3fca7c1e655b1d78; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2000, x18)

inst_507:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd2b1345cea515 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd0e5a0dba105e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa7c1e655b1d78 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed2b1345cea515; op2val:0xbfcd0e5a0dba105e; op3val:0x3fca7c1e655b1d78; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_508:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd2b1345cea515 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd0e5a0dba105e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa7c1e655b1d78 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed2b1345cea515; op2val:0xbfcd0e5a0dba105e; op3val:0x3fca7c1e655b1d78; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd2b1345cea515 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd0e5a0dba105e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa7c1e655b1d78 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed2b1345cea515; op2val:0xbfcd0e5a0dba105e; op3val:0x3fca7c1e655b1d78; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 16, x18)
addi x16,x16,2040

inst_510:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd2b1345cea515 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd0e5a0dba105e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa7c1e655b1d78 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed2b1345cea515; op2val:0xbfcd0e5a0dba105e; op3val:0x3fca7c1e655b1d78; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 32, x18)

inst_511:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb531e01fbabad and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa7f55d9c83f3e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x6a0438f72b08c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb531e01fbabad; op2val:0xbfca7f55d9c83f3e; op3val:0x3fc6a0438f72b08c; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 48, x18)

inst_512:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb531e01fbabad and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa7f55d9c83f3e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x6a0438f72b08c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb531e01fbabad; op2val:0xbfca7f55d9c83f3e; op3val:0x3fc6a0438f72b08c; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 64, x18)

inst_513:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb531e01fbabad and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa7f55d9c83f3e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x6a0438f72b08c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb531e01fbabad; op2val:0xbfca7f55d9c83f3e; op3val:0x3fc6a0438f72b08c; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 80, x18)

inst_514:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb531e01fbabad and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa7f55d9c83f3e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x6a0438f72b08c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb531e01fbabad; op2val:0xbfca7f55d9c83f3e; op3val:0x3fc6a0438f72b08c; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 96, x18)

inst_515:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb531e01fbabad and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa7f55d9c83f3e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x6a0438f72b08c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb531e01fbabad; op2val:0xbfca7f55d9c83f3e; op3val:0x3fc6a0438f72b08c; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 112, x18)

inst_516:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x29a2e73478056 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6bdde96010ea8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa70bfecdf3ab8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd29a2e73478056; op2val:0xc006bdde96010ea8; op3val:0x3fea70bfecdf3ab8; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 128, x18)

inst_517:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x29a2e73478056 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6bdde96010ea8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa70bfecdf3ab8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd29a2e73478056; op2val:0xc006bdde96010ea8; op3val:0x3fea70bfecdf3ab8; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 144, x18)

inst_518:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x29a2e73478056 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6bdde96010ea8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa70bfecdf3ab8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd29a2e73478056; op2val:0xc006bdde96010ea8; op3val:0x3fea70bfecdf3ab8; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 160, x18)

inst_519:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x29a2e73478056 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6bdde96010ea8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa70bfecdf3ab8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd29a2e73478056; op2val:0xc006bdde96010ea8; op3val:0x3fea70bfecdf3ab8; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 176, x18)

inst_520:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x29a2e73478056 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6bdde96010ea8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa70bfecdf3ab8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd29a2e73478056; op2val:0xc006bdde96010ea8; op3val:0x3fea70bfecdf3ab8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 192, x18)

inst_521:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b958c72feccb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x789946a278c44 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd04099bd04e14 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b958c72feccb; op2val:0xbfe789946a278c44; op3val:0x3fdd04099bd04e14; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 208, x18)

inst_522:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b958c72feccb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x789946a278c44 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd04099bd04e14 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b958c72feccb; op2val:0xbfe789946a278c44; op3val:0x3fdd04099bd04e14; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 224, x18)

inst_523:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b958c72feccb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x789946a278c44 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd04099bd04e14 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b958c72feccb; op2val:0xbfe789946a278c44; op3val:0x3fdd04099bd04e14; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 240, x18)

inst_524:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b958c72feccb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x789946a278c44 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd04099bd04e14 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b958c72feccb; op2val:0xbfe789946a278c44; op3val:0x3fdd04099bd04e14; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 256, x18)

inst_525:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3b958c72feccb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x789946a278c44 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd04099bd04e14 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3b958c72feccb; op2val:0xbfe789946a278c44; op3val:0x3fdd04099bd04e14; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 272, x18)

inst_526:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x164e49a8d95d4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf331731e9b3ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0f582ddb55039 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe164e49a8d95d4; op2val:0xbfef331731e9b3ac; op3val:0x3fe0f582ddb55039; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 288, x18)

inst_527:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x164e49a8d95d4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf331731e9b3ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0f582ddb55039 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe164e49a8d95d4; op2val:0xbfef331731e9b3ac; op3val:0x3fe0f582ddb55039; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 304, x18)

inst_528:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x164e49a8d95d4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf331731e9b3ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0f582ddb55039 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe164e49a8d95d4; op2val:0xbfef331731e9b3ac; op3val:0x3fe0f582ddb55039; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 320, x18)

inst_529:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x164e49a8d95d4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf331731e9b3ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0f582ddb55039 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe164e49a8d95d4; op2val:0xbfef331731e9b3ac; op3val:0x3fe0f582ddb55039; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 336, x18)

inst_530:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x164e49a8d95d4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf331731e9b3ac and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0f582ddb55039 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe164e49a8d95d4; op2val:0xbfef331731e9b3ac; op3val:0x3fe0f582ddb55039; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 352, x18)

inst_531:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46fa7c92117e8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x40510860255ec and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x99209baaa1a42 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46fa7c92117e8; op2val:0xbfe40510860255ec; op3val:0x3fd99209baaa1a42; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 368, x18)

inst_532:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46fa7c92117e8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x40510860255ec and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x99209baaa1a42 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46fa7c92117e8; op2val:0xbfe40510860255ec; op3val:0x3fd99209baaa1a42; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 384, x18)

inst_533:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46fa7c92117e8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x40510860255ec and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x99209baaa1a42 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46fa7c92117e8; op2val:0xbfe40510860255ec; op3val:0x3fd99209baaa1a42; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 400, x18)

inst_534:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46fa7c92117e8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x40510860255ec and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x99209baaa1a42 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46fa7c92117e8; op2val:0xbfe40510860255ec; op3val:0x3fd99209baaa1a42; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 416, x18)

inst_535:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x46fa7c92117e8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x40510860255ec and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x99209baaa1a42 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe46fa7c92117e8; op2val:0xbfe40510860255ec; op3val:0x3fd99209baaa1a42; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 432, x18)

inst_536:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xafba8483bff58 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3feb49da64cf7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0dc31bf227e2a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdafba8483bff58; op2val:0xbfe3feb49da64cf7; op3val:0x3fd0dc31bf227e2a; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 448, x18)

inst_537:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xafba8483bff58 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3feb49da64cf7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0dc31bf227e2a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdafba8483bff58; op2val:0xbfe3feb49da64cf7; op3val:0x3fd0dc31bf227e2a; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 464, x18)

inst_538:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xafba8483bff58 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3feb49da64cf7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0dc31bf227e2a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdafba8483bff58; op2val:0xbfe3feb49da64cf7; op3val:0x3fd0dc31bf227e2a; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 480, x18)

inst_539:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xafba8483bff58 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3feb49da64cf7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0dc31bf227e2a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdafba8483bff58; op2val:0xbfe3feb49da64cf7; op3val:0x3fd0dc31bf227e2a; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 496, x18)

inst_540:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xafba8483bff58 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3feb49da64cf7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0dc31bf227e2a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdafba8483bff58; op2val:0xbfe3feb49da64cf7; op3val:0x3fd0dc31bf227e2a; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 512, x18)

inst_541:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x62725147d5cfa and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe75e8ae9a47b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x51652f774edb8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd62725147d5cfa; op2val:0xbffe75e8ae9a47b3; op3val:0x3fe51652f774edb8; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 528, x18)

inst_542:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x62725147d5cfa and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe75e8ae9a47b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x51652f774edb8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd62725147d5cfa; op2val:0xbffe75e8ae9a47b3; op3val:0x3fe51652f774edb8; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 544, x18)

inst_543:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x62725147d5cfa and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe75e8ae9a47b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x51652f774edb8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd62725147d5cfa; op2val:0xbffe75e8ae9a47b3; op3val:0x3fe51652f774edb8; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 560, x18)

inst_544:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x62725147d5cfa and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe75e8ae9a47b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x51652f774edb8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd62725147d5cfa; op2val:0xbffe75e8ae9a47b3; op3val:0x3fe51652f774edb8; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 576, x18)

inst_545:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x62725147d5cfa and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe75e8ae9a47b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x51652f774edb8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd62725147d5cfa; op2val:0xbffe75e8ae9a47b3; op3val:0x3fe51652f774edb8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 592, x18)

inst_546:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7bb21774988e0 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59b9b99328c30 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00633c4685c2b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7bb21774988e0; op2val:0xbff59b9b99328c30; op3val:0x3fe00633c4685c2b; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 608, x18)

inst_547:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7bb21774988e0 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59b9b99328c30 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00633c4685c2b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7bb21774988e0; op2val:0xbff59b9b99328c30; op3val:0x3fe00633c4685c2b; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 624, x18)

inst_548:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7bb21774988e0 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59b9b99328c30 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00633c4685c2b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7bb21774988e0; op2val:0xbff59b9b99328c30; op3val:0x3fe00633c4685c2b; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 640, x18)

inst_549:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7bb21774988e0 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59b9b99328c30 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00633c4685c2b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7bb21774988e0; op2val:0xbff59b9b99328c30; op3val:0x3fe00633c4685c2b; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 656, x18)

inst_550:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7bb21774988e0 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59b9b99328c30 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00633c4685c2b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7bb21774988e0; op2val:0xbff59b9b99328c30; op3val:0x3fe00633c4685c2b; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 672, x18)

inst_551:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x1e8d2f80b6d44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xf9c725448ad2b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b11b615fb3c8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc1e8d2f80b6d44; op2val:0xc00f9c725448ad2b; op3val:0x3fe1b11b615fb3c8; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 688, x18)

inst_552:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x1e8d2f80b6d44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xf9c725448ad2b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b11b615fb3c8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc1e8d2f80b6d44; op2val:0xc00f9c725448ad2b; op3val:0x3fe1b11b615fb3c8; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 704, x18)

inst_553:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x1e8d2f80b6d44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xf9c725448ad2b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b11b615fb3c8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc1e8d2f80b6d44; op2val:0xc00f9c725448ad2b; op3val:0x3fe1b11b615fb3c8; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 720, x18)

inst_554:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x1e8d2f80b6d44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xf9c725448ad2b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b11b615fb3c8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc1e8d2f80b6d44; op2val:0xc00f9c725448ad2b; op3val:0x3fe1b11b615fb3c8; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 736, x18)

inst_555:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x1e8d2f80b6d44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xf9c725448ad2b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1b11b615fb3c8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc1e8d2f80b6d44; op2val:0xc00f9c725448ad2b; op3val:0x3fe1b11b615fb3c8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 752, x18)

inst_556:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x44be43b41b4d4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1ebcbdd0bf302 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bbbfc2633de5 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc44be43b41b4d4; op2val:0xc011ebcbdd0bf302; op3val:0x3fe6bbbfc2633de5; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 768, x18)

inst_557:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x44be43b41b4d4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1ebcbdd0bf302 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bbbfc2633de5 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc44be43b41b4d4; op2val:0xc011ebcbdd0bf302; op3val:0x3fe6bbbfc2633de5; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 784, x18)

inst_558:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x44be43b41b4d4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1ebcbdd0bf302 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bbbfc2633de5 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc44be43b41b4d4; op2val:0xc011ebcbdd0bf302; op3val:0x3fe6bbbfc2633de5; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 800, x18)

inst_559:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x44be43b41b4d4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1ebcbdd0bf302 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bbbfc2633de5 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc44be43b41b4d4; op2val:0xc011ebcbdd0bf302; op3val:0x3fe6bbbfc2633de5; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 816, x18)

inst_560:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x44be43b41b4d4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1ebcbdd0bf302 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bbbfc2633de5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc44be43b41b4d4; op2val:0xc011ebcbdd0bf302; op3val:0x3fe6bbbfc2633de5; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 832, x18)

inst_561:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa9ed3a2862f86 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc6f43b84e7497 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7a788722ecc5b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda9ed3a2862f86; op2val:0xbffc6f43b84e7497; op3val:0x3fe7a788722ecc5b; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 848, x18)

inst_562:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa9ed3a2862f86 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc6f43b84e7497 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7a788722ecc5b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda9ed3a2862f86; op2val:0xbffc6f43b84e7497; op3val:0x3fe7a788722ecc5b; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 864, x18)

inst_563:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa9ed3a2862f86 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc6f43b84e7497 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7a788722ecc5b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda9ed3a2862f86; op2val:0xbffc6f43b84e7497; op3val:0x3fe7a788722ecc5b; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 880, x18)

inst_564:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa9ed3a2862f86 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc6f43b84e7497 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7a788722ecc5b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda9ed3a2862f86; op2val:0xbffc6f43b84e7497; op3val:0x3fe7a788722ecc5b; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 896, x18)

inst_565:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa9ed3a2862f86 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc6f43b84e7497 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7a788722ecc5b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda9ed3a2862f86; op2val:0xbffc6f43b84e7497; op3val:0x3fe7a788722ecc5b; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 912, x18)

inst_566:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbbf6f08f22524 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x315899829c8f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x08c56ddb28e36 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbbf6f08f22524; op2val:0xbff315899829c8f7; op3val:0x3fd08c56ddb28e36; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 928, x18)

inst_567:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbbf6f08f22524 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x315899829c8f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x08c56ddb28e36 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbbf6f08f22524; op2val:0xbff315899829c8f7; op3val:0x3fd08c56ddb28e36; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 944, x18)

inst_568:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbbf6f08f22524 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x315899829c8f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x08c56ddb28e36 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbbf6f08f22524; op2val:0xbff315899829c8f7; op3val:0x3fd08c56ddb28e36; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 960, x18)

inst_569:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbbf6f08f22524 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x315899829c8f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x08c56ddb28e36 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbbf6f08f22524; op2val:0xbff315899829c8f7; op3val:0x3fd08c56ddb28e36; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 976, x18)

inst_570:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbbf6f08f22524 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x315899829c8f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x08c56ddb28e36 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbbf6f08f22524; op2val:0xbff315899829c8f7; op3val:0x3fd08c56ddb28e36; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 992, x18)

inst_571:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x696fd75de4a0e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3689f54ca1200 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb67035fa2de78 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd696fd75de4a0e; op2val:0xbfe3689f54ca1200; op3val:0x3fcb67035fa2de78; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1008, x18)

inst_572:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x696fd75de4a0e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3689f54ca1200 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb67035fa2de78 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd696fd75de4a0e; op2val:0xbfe3689f54ca1200; op3val:0x3fcb67035fa2de78; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1024, x18)

inst_573:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x696fd75de4a0e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3689f54ca1200 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb67035fa2de78 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd696fd75de4a0e; op2val:0xbfe3689f54ca1200; op3val:0x3fcb67035fa2de78; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1040, x18)

inst_574:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x696fd75de4a0e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3689f54ca1200 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb67035fa2de78 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd696fd75de4a0e; op2val:0xbfe3689f54ca1200; op3val:0x3fcb67035fa2de78; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1056, x18)

inst_575:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x696fd75de4a0e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3689f54ca1200 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb67035fa2de78 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd696fd75de4a0e; op2val:0xbfe3689f54ca1200; op3val:0x3fcb67035fa2de78; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1072, x18)

inst_576:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc106e6e9d6f8a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x97a6db1ea3400 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x658351f7128bb and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc106e6e9d6f8a; op2val:0xbff97a6db1ea3400; op3val:0x3fe658351f7128bb; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1088, x18)

inst_577:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc106e6e9d6f8a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x97a6db1ea3400 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x658351f7128bb and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc106e6e9d6f8a; op2val:0xbff97a6db1ea3400; op3val:0x3fe658351f7128bb; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1104, x18)

inst_578:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc106e6e9d6f8a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x97a6db1ea3400 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x658351f7128bb and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc106e6e9d6f8a; op2val:0xbff97a6db1ea3400; op3val:0x3fe658351f7128bb; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1120, x18)

inst_579:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc106e6e9d6f8a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x97a6db1ea3400 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x658351f7128bb and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc106e6e9d6f8a; op2val:0xbff97a6db1ea3400; op3val:0x3fe658351f7128bb; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1136, x18)

inst_580:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc106e6e9d6f8a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x97a6db1ea3400 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x658351f7128bb and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc106e6e9d6f8a; op2val:0xbff97a6db1ea3400; op3val:0x3fe658351f7128bb; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1152, x18)

inst_581:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x476d27e10cca7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfb40cd9f7d3b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44640821893f9 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe476d27e10cca7; op2val:0xbfefb40cd9f7d3b3; op3val:0x3fe44640821893f9; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1168, x18)

inst_582:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x476d27e10cca7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfb40cd9f7d3b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44640821893f9 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe476d27e10cca7; op2val:0xbfefb40cd9f7d3b3; op3val:0x3fe44640821893f9; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1184, x18)

inst_583:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x476d27e10cca7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfb40cd9f7d3b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44640821893f9 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe476d27e10cca7; op2val:0xbfefb40cd9f7d3b3; op3val:0x3fe44640821893f9; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1200, x18)

inst_584:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x476d27e10cca7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfb40cd9f7d3b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44640821893f9 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe476d27e10cca7; op2val:0xbfefb40cd9f7d3b3; op3val:0x3fe44640821893f9; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1216, x18)

inst_585:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x476d27e10cca7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfb40cd9f7d3b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x44640821893f9 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe476d27e10cca7; op2val:0xbfefb40cd9f7d3b3; op3val:0x3fe44640821893f9; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1232, x18)

inst_586:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef628b829a953 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x96140d9639291 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88e68b9f5d664 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef628b829a953; op2val:0xbfe96140d9639291; op3val:0x3fe88e68b9f5d664; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1248, x18)

inst_587:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef628b829a953 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x96140d9639291 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88e68b9f5d664 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef628b829a953; op2val:0xbfe96140d9639291; op3val:0x3fe88e68b9f5d664; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1264, x18)

inst_588:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef628b829a953 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x96140d9639291 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88e68b9f5d664 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef628b829a953; op2val:0xbfe96140d9639291; op3val:0x3fe88e68b9f5d664; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1280, x18)

inst_589:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef628b829a953 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x96140d9639291 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88e68b9f5d664 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef628b829a953; op2val:0xbfe96140d9639291; op3val:0x3fe88e68b9f5d664; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1296, x18)

inst_590:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef628b829a953 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x96140d9639291 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88e68b9f5d664 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef628b829a953; op2val:0xbfe96140d9639291; op3val:0x3fe88e68b9f5d664; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1312, x18)

inst_591:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc02e86b2d6c88 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x91c16954365d3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5fadbe3c197a4 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbc02e86b2d6c88; op2val:0xc0191c16954365d3; op3val:0x3fe5fadbe3c197a4; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1328, x18)

inst_592:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc02e86b2d6c88 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x91c16954365d3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5fadbe3c197a4 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbc02e86b2d6c88; op2val:0xc0191c16954365d3; op3val:0x3fe5fadbe3c197a4; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1344, x18)

inst_593:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc02e86b2d6c88 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x91c16954365d3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5fadbe3c197a4 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbc02e86b2d6c88; op2val:0xc0191c16954365d3; op3val:0x3fe5fadbe3c197a4; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1360, x18)

inst_594:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc02e86b2d6c88 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x91c16954365d3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5fadbe3c197a4 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbc02e86b2d6c88; op2val:0xc0191c16954365d3; op3val:0x3fe5fadbe3c197a4; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1376, x18)
addi x16,x16,2040

inst_595:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc02e86b2d6c88 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x91c16954365d3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5fadbe3c197a4 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbc02e86b2d6c88; op2val:0xc0191c16954365d3; op3val:0x3fe5fadbe3c197a4; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1392, x18)

inst_596:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7f69f448e82d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59ad0f2649582 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x290a642b22b00 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb7f69f448e82d; op2val:0xbfd59ad0f2649582; op3val:0x3fd290a642b22b00; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1408, x18)

inst_597:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7f69f448e82d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59ad0f2649582 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x290a642b22b00 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb7f69f448e82d; op2val:0xbfd59ad0f2649582; op3val:0x3fd290a642b22b00; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1424, x18)

inst_598:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7f69f448e82d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59ad0f2649582 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x290a642b22b00 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb7f69f448e82d; op2val:0xbfd59ad0f2649582; op3val:0x3fd290a642b22b00; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1440, x18)

inst_599:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7f69f448e82d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59ad0f2649582 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x290a642b22b00 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb7f69f448e82d; op2val:0xbfd59ad0f2649582; op3val:0x3fd290a642b22b00; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1456, x18)

inst_600:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7f69f448e82d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59ad0f2649582 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x290a642b22b00 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb7f69f448e82d; op2val:0xbfd59ad0f2649582; op3val:0x3fd290a642b22b00; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1472, x18)

inst_601:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7c39d9aa35b8c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4b6bea9b919dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xec3f1510fdddc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7c39d9aa35b8c; op2val:0xc004b6bea9b919dc; op3val:0x3feec3f1510fdddc; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1488, x18)

inst_602:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7c39d9aa35b8c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4b6bea9b919dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xec3f1510fdddc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7c39d9aa35b8c; op2val:0xc004b6bea9b919dc; op3val:0x3feec3f1510fdddc; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1504, x18)

inst_603:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7c39d9aa35b8c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4b6bea9b919dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xec3f1510fdddc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7c39d9aa35b8c; op2val:0xc004b6bea9b919dc; op3val:0x3feec3f1510fdddc; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1520, x18)

inst_604:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7c39d9aa35b8c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4b6bea9b919dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xec3f1510fdddc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7c39d9aa35b8c; op2val:0xc004b6bea9b919dc; op3val:0x3feec3f1510fdddc; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1536, x18)

inst_605:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7c39d9aa35b8c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4b6bea9b919dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xec3f1510fdddc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7c39d9aa35b8c; op2val:0xc004b6bea9b919dc; op3val:0x3feec3f1510fdddc; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1552, x18)

inst_606:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x89065a920a7f8 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa0ed1c611a45e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x400b2cd077f49 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc89065a920a7f8; op2val:0xc00a0ed1c611a45e; op3val:0x3fe400b2cd077f49; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1568, x18)

inst_607:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x89065a920a7f8 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa0ed1c611a45e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x400b2cd077f49 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc89065a920a7f8; op2val:0xc00a0ed1c611a45e; op3val:0x3fe400b2cd077f49; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1584, x18)

inst_608:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x89065a920a7f8 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa0ed1c611a45e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x400b2cd077f49 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc89065a920a7f8; op2val:0xc00a0ed1c611a45e; op3val:0x3fe400b2cd077f49; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1600, x18)

inst_609:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x89065a920a7f8 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa0ed1c611a45e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x400b2cd077f49 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc89065a920a7f8; op2val:0xc00a0ed1c611a45e; op3val:0x3fe400b2cd077f49; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1616, x18)

inst_610:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x89065a920a7f8 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa0ed1c611a45e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x400b2cd077f49 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc89065a920a7f8; op2val:0xc00a0ed1c611a45e; op3val:0x3fe400b2cd077f49; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1632, x18)

inst_611:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4eb4c4c44ee61 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xec0dd10522e20 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41aabd4fc8b0e and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4eb4c4c44ee61; op2val:0xbfeec0dd10522e20; op3val:0x3fe41aabd4fc8b0e; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1648, x18)

inst_612:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4eb4c4c44ee61 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xec0dd10522e20 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41aabd4fc8b0e and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4eb4c4c44ee61; op2val:0xbfeec0dd10522e20; op3val:0x3fe41aabd4fc8b0e; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1664, x18)

inst_613:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4eb4c4c44ee61 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xec0dd10522e20 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41aabd4fc8b0e and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4eb4c4c44ee61; op2val:0xbfeec0dd10522e20; op3val:0x3fe41aabd4fc8b0e; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1680, x18)

inst_614:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4eb4c4c44ee61 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xec0dd10522e20 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41aabd4fc8b0e and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4eb4c4c44ee61; op2val:0xbfeec0dd10522e20; op3val:0x3fe41aabd4fc8b0e; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1696, x18)

inst_615:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4eb4c4c44ee61 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xec0dd10522e20 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41aabd4fc8b0e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4eb4c4c44ee61; op2val:0xbfeec0dd10522e20; op3val:0x3fe41aabd4fc8b0e; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1712, x18)

inst_616:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8749cae17bbb7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa94ba26fb6966 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45068e5b1c77b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8749cae17bbb7; op2val:0xbfea94ba26fb6966; op3val:0x3fe45068e5b1c77b; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1728, x18)

inst_617:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8749cae17bbb7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa94ba26fb6966 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45068e5b1c77b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8749cae17bbb7; op2val:0xbfea94ba26fb6966; op3val:0x3fe45068e5b1c77b; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1744, x18)

inst_618:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8749cae17bbb7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa94ba26fb6966 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45068e5b1c77b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8749cae17bbb7; op2val:0xbfea94ba26fb6966; op3val:0x3fe45068e5b1c77b; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1760, x18)

inst_619:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8749cae17bbb7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa94ba26fb6966 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45068e5b1c77b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8749cae17bbb7; op2val:0xbfea94ba26fb6966; op3val:0x3fe45068e5b1c77b; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1776, x18)

inst_620:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8749cae17bbb7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa94ba26fb6966 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x45068e5b1c77b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8749cae17bbb7; op2val:0xbfea94ba26fb6966; op3val:0x3fe45068e5b1c77b; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1792, x18)

inst_621:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bf3314a06fc5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9622159c71929 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa9175d16a505f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0bf3314a06fc5; op2val:0xbff9622159c71929; op3val:0x3fea9175d16a505f; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1808, x18)

inst_622:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bf3314a06fc5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9622159c71929 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa9175d16a505f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0bf3314a06fc5; op2val:0xbff9622159c71929; op3val:0x3fea9175d16a505f; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1824, x18)

inst_623:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bf3314a06fc5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9622159c71929 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa9175d16a505f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0bf3314a06fc5; op2val:0xbff9622159c71929; op3val:0x3fea9175d16a505f; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1840, x18)

inst_624:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bf3314a06fc5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9622159c71929 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa9175d16a505f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0bf3314a06fc5; op2val:0xbff9622159c71929; op3val:0x3fea9175d16a505f; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1856, x18)

inst_625:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bf3314a06fc5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9622159c71929 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa9175d16a505f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0bf3314a06fc5; op2val:0xbff9622159c71929; op3val:0x3fea9175d16a505f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1872, x18)

inst_626:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb4292eb887ee0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa47a2683e74c5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6631d6f2ed846 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fab4292eb887ee0; op2val:0xc01a47a2683e74c5; op3val:0x3fd6631d6f2ed846; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1888, x18)

inst_627:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb4292eb887ee0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa47a2683e74c5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6631d6f2ed846 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fab4292eb887ee0; op2val:0xc01a47a2683e74c5; op3val:0x3fd6631d6f2ed846; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1904, x18)

inst_628:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb4292eb887ee0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa47a2683e74c5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6631d6f2ed846 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fab4292eb887ee0; op2val:0xc01a47a2683e74c5; op3val:0x3fd6631d6f2ed846; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1920, x18)

inst_629:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb4292eb887ee0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa47a2683e74c5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6631d6f2ed846 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fab4292eb887ee0; op2val:0xc01a47a2683e74c5; op3val:0x3fd6631d6f2ed846; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1936, x18)

inst_630:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb4292eb887ee0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa47a2683e74c5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6631d6f2ed846 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fab4292eb887ee0; op2val:0xc01a47a2683e74c5; op3val:0x3fd6631d6f2ed846; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1952, x18)

inst_631:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xcfbc304128680 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x6ad68c701133b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x48a260f932be6 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8cfbc304128680; op2val:0xc046ad68c701133b; op3val:0x3fe48a260f932be6; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1968, x18)

inst_632:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xcfbc304128680 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x6ad68c701133b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x48a260f932be6 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8cfbc304128680; op2val:0xc046ad68c701133b; op3val:0x3fe48a260f932be6; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1984, x18)

inst_633:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xcfbc304128680 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x6ad68c701133b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x48a260f932be6 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8cfbc304128680; op2val:0xc046ad68c701133b; op3val:0x3fe48a260f932be6; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2000, x18)

inst_634:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xcfbc304128680 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x6ad68c701133b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x48a260f932be6 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8cfbc304128680; op2val:0xc046ad68c701133b; op3val:0x3fe48a260f932be6; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_635:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xcfbc304128680 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x6ad68c701133b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x48a260f932be6 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8cfbc304128680; op2val:0xc046ad68c701133b; op3val:0x3fe48a260f932be6; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 0, x18)

inst_636:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x985358246334e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb9c9e28d271e8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6054cad0cdca8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd985358246334e; op2val:0xbfeb9c9e28d271e8; op3val:0x3fd6054cad0cdca8; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 16, x18)

inst_637:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x985358246334e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb9c9e28d271e8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6054cad0cdca8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd985358246334e; op2val:0xbfeb9c9e28d271e8; op3val:0x3fd6054cad0cdca8; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 32, x18)

inst_638:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x985358246334e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb9c9e28d271e8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6054cad0cdca8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd985358246334e; op2val:0xbfeb9c9e28d271e8; op3val:0x3fd6054cad0cdca8; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 48, x18)

inst_639:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x985358246334e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb9c9e28d271e8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6054cad0cdca8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd985358246334e; op2val:0xbfeb9c9e28d271e8; op3val:0x3fd6054cad0cdca8; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 64, x18)

inst_640:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x985358246334e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb9c9e28d271e8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6054cad0cdca8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd985358246334e; op2val:0xbfeb9c9e28d271e8; op3val:0x3fd6054cad0cdca8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 80, x18)

inst_641:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0xe3a97f64cf800 and fs2 == 1 and fe2 == 0x409 and fm2 == 0x04444ccc6e171 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xebb92f80c666f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e3a97f64cf800; op2val:0xc0904444ccc6e171; op3val:0x3feebb92f80c666f; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 96, x18)

inst_642:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0xe3a97f64cf800 and fs2 == 1 and fe2 == 0x409 and fm2 == 0x04444ccc6e171 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xebb92f80c666f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e3a97f64cf800; op2val:0xc0904444ccc6e171; op3val:0x3feebb92f80c666f; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 112, x18)

inst_643:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0xe3a97f64cf800 and fs2 == 1 and fe2 == 0x409 and fm2 == 0x04444ccc6e171 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xebb92f80c666f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e3a97f64cf800; op2val:0xc0904444ccc6e171; op3val:0x3feebb92f80c666f; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 128, x18)

inst_644:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0xe3a97f64cf800 and fs2 == 1 and fe2 == 0x409 and fm2 == 0x04444ccc6e171 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xebb92f80c666f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e3a97f64cf800; op2val:0xc0904444ccc6e171; op3val:0x3feebb92f80c666f; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 144, x18)

inst_645:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0xe3a97f64cf800 and fs2 == 1 and fe2 == 0x409 and fm2 == 0x04444ccc6e171 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xebb92f80c666f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e3a97f64cf800; op2val:0xc0904444ccc6e171; op3val:0x3feebb92f80c666f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 160, x18)

inst_646:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1dac507dc8ef0 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x993f4cfb1d314 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc8aeefe825660 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1dac507dc8ef0; op2val:0xc03993f4cfb1d314; op3val:0x3fec8aeefe825660; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 176, x18)

inst_647:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1dac507dc8ef0 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x993f4cfb1d314 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc8aeefe825660 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1dac507dc8ef0; op2val:0xc03993f4cfb1d314; op3val:0x3fec8aeefe825660; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 192, x18)

inst_648:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1dac507dc8ef0 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x993f4cfb1d314 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc8aeefe825660 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1dac507dc8ef0; op2val:0xc03993f4cfb1d314; op3val:0x3fec8aeefe825660; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 208, x18)

inst_649:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1dac507dc8ef0 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x993f4cfb1d314 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc8aeefe825660 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1dac507dc8ef0; op2val:0xc03993f4cfb1d314; op3val:0x3fec8aeefe825660; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 224, x18)

inst_650:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1dac507dc8ef0 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x993f4cfb1d314 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc8aeefe825660 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1dac507dc8ef0; op2val:0xc03993f4cfb1d314; op3val:0x3fec8aeefe825660; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 240, x18)

inst_651:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2621585be5c7a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4982c0fa9dbae and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7a971535ed06a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2621585be5c7a; op2val:0xbfe4982c0fa9dbae; op3val:0x3fd7a971535ed06a; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 256, x18)

inst_652:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2621585be5c7a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4982c0fa9dbae and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7a971535ed06a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2621585be5c7a; op2val:0xbfe4982c0fa9dbae; op3val:0x3fd7a971535ed06a; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 272, x18)

inst_653:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2621585be5c7a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4982c0fa9dbae and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7a971535ed06a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2621585be5c7a; op2val:0xbfe4982c0fa9dbae; op3val:0x3fd7a971535ed06a; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 288, x18)

inst_654:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2621585be5c7a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4982c0fa9dbae and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7a971535ed06a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2621585be5c7a; op2val:0xbfe4982c0fa9dbae; op3val:0x3fd7a971535ed06a; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 304, x18)

inst_655:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2621585be5c7a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4982c0fa9dbae and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7a971535ed06a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2621585be5c7a; op2val:0xbfe4982c0fa9dbae; op3val:0x3fd7a971535ed06a; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 320, x18)

inst_656:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbec4f6cedc2e4 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x4d9e43fe06d0c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x231d34a223ff0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febec4f6cedc2e4; op2val:0xbfa4d9e43fe06d0c; op3val:0x3fa231d34a223ff0; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 336, x18)

inst_657:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbec4f6cedc2e4 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x4d9e43fe06d0c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x231d34a223ff0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febec4f6cedc2e4; op2val:0xbfa4d9e43fe06d0c; op3val:0x3fa231d34a223ff0; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 352, x18)

inst_658:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbec4f6cedc2e4 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x4d9e43fe06d0c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x231d34a223ff0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febec4f6cedc2e4; op2val:0xbfa4d9e43fe06d0c; op3val:0x3fa231d34a223ff0; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 368, x18)

inst_659:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbec4f6cedc2e4 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x4d9e43fe06d0c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x231d34a223ff0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febec4f6cedc2e4; op2val:0xbfa4d9e43fe06d0c; op3val:0x3fa231d34a223ff0; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 384, x18)

inst_660:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbec4f6cedc2e4 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x4d9e43fe06d0c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x231d34a223ff0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febec4f6cedc2e4; op2val:0xbfa4d9e43fe06d0c; op3val:0x3fa231d34a223ff0; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 400, x18)

inst_661:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa17504e344fa6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x07cb010cca364 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xae2a4186ac54e and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea17504e344fa6; op2val:0xbfe07cb010cca364; op3val:0x3fdae2a4186ac54e; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 416, x18)

inst_662:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa17504e344fa6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x07cb010cca364 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xae2a4186ac54e and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea17504e344fa6; op2val:0xbfe07cb010cca364; op3val:0x3fdae2a4186ac54e; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 432, x18)

inst_663:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa17504e344fa6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x07cb010cca364 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xae2a4186ac54e and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea17504e344fa6; op2val:0xbfe07cb010cca364; op3val:0x3fdae2a4186ac54e; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 448, x18)

inst_664:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa17504e344fa6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x07cb010cca364 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xae2a4186ac54e and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea17504e344fa6; op2val:0xbfe07cb010cca364; op3val:0x3fdae2a4186ac54e; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 464, x18)

inst_665:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa17504e344fa6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x07cb010cca364 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xae2a4186ac54e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea17504e344fa6; op2val:0xbfe07cb010cca364; op3val:0x3fdae2a4186ac54e; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 480, x18)

inst_666:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f14507e25bbc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7a09aaac0c335 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7300b4b06755 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f14507e25bbc; op2val:0xc007a09aaac0c335; op3val:0x3fed7300b4b06755; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 496, x18)

inst_667:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f14507e25bbc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7a09aaac0c335 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7300b4b06755 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f14507e25bbc; op2val:0xc007a09aaac0c335; op3val:0x3fed7300b4b06755; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 512, x18)

inst_668:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f14507e25bbc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7a09aaac0c335 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7300b4b06755 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f14507e25bbc; op2val:0xc007a09aaac0c335; op3val:0x3fed7300b4b06755; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 528, x18)

inst_669:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f14507e25bbc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7a09aaac0c335 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7300b4b06755 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f14507e25bbc; op2val:0xc007a09aaac0c335; op3val:0x3fed7300b4b06755; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 544, x18)

inst_670:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3f14507e25bbc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7a09aaac0c335 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7300b4b06755 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3f14507e25bbc; op2val:0xc007a09aaac0c335; op3val:0x3fed7300b4b06755; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 560, x18)

inst_671:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83a7eb80f24c6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x21aff4ede80a4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6ab038adcf98 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd83a7eb80f24c6; op2val:0xc0021aff4ede80a4; op3val:0x3feb6ab038adcf98; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 576, x18)

inst_672:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83a7eb80f24c6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x21aff4ede80a4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6ab038adcf98 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd83a7eb80f24c6; op2val:0xc0021aff4ede80a4; op3val:0x3feb6ab038adcf98; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 592, x18)

inst_673:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83a7eb80f24c6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x21aff4ede80a4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6ab038adcf98 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd83a7eb80f24c6; op2val:0xc0021aff4ede80a4; op3val:0x3feb6ab038adcf98; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 608, x18)

inst_674:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83a7eb80f24c6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x21aff4ede80a4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6ab038adcf98 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd83a7eb80f24c6; op2val:0xc0021aff4ede80a4; op3val:0x3feb6ab038adcf98; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 624, x18)

inst_675:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83a7eb80f24c6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x21aff4ede80a4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6ab038adcf98 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd83a7eb80f24c6; op2val:0xc0021aff4ede80a4; op3val:0x3feb6ab038adcf98; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 640, x18)

inst_676:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4e502927fe9b6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd822b386846c1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x34488e7c7634a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4e502927fe9b6; op2val:0xbfdd822b386846c1; op3val:0x3fd34488e7c7634a; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 656, x18)

inst_677:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4e502927fe9b6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd822b386846c1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x34488e7c7634a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4e502927fe9b6; op2val:0xbfdd822b386846c1; op3val:0x3fd34488e7c7634a; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 672, x18)

inst_678:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4e502927fe9b6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd822b386846c1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x34488e7c7634a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4e502927fe9b6; op2val:0xbfdd822b386846c1; op3val:0x3fd34488e7c7634a; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 688, x18)

inst_679:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4e502927fe9b6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd822b386846c1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x34488e7c7634a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4e502927fe9b6; op2val:0xbfdd822b386846c1; op3val:0x3fd34488e7c7634a; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 704, x18)
addi x16,x16,2040

inst_680:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4e502927fe9b6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd822b386846c1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x34488e7c7634a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4e502927fe9b6; op2val:0xbfdd822b386846c1; op3val:0x3fd34488e7c7634a; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 720, x18)

inst_681:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x41cc9d5f93cb4 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x681194b3842f6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc49dd6d0ce650 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe41cc9d5f93cb4; op2val:0xbfb681194b3842f6; op3val:0x3fac49dd6d0ce650; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 736, x18)

inst_682:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x41cc9d5f93cb4 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x681194b3842f6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc49dd6d0ce650 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe41cc9d5f93cb4; op2val:0xbfb681194b3842f6; op3val:0x3fac49dd6d0ce650; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 752, x18)

inst_683:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x41cc9d5f93cb4 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x681194b3842f6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc49dd6d0ce650 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe41cc9d5f93cb4; op2val:0xbfb681194b3842f6; op3val:0x3fac49dd6d0ce650; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 768, x18)

inst_684:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x41cc9d5f93cb4 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x681194b3842f6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc49dd6d0ce650 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe41cc9d5f93cb4; op2val:0xbfb681194b3842f6; op3val:0x3fac49dd6d0ce650; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 784, x18)

inst_685:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x41cc9d5f93cb4 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x681194b3842f6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc49dd6d0ce650 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe41cc9d5f93cb4; op2val:0xbfb681194b3842f6; op3val:0x3fac49dd6d0ce650; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 800, x18)

inst_686:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x363bd43df2c9e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x97ba5ecc6af76 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xee1af8c8633dd and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe363bd43df2c9e; op2val:0xbff97ba5ecc6af76; op3val:0x3feee1af8c8633dd; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 816, x18)

inst_687:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x363bd43df2c9e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x97ba5ecc6af76 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xee1af8c8633dd and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe363bd43df2c9e; op2val:0xbff97ba5ecc6af76; op3val:0x3feee1af8c8633dd; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 832, x18)

inst_688:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x363bd43df2c9e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x97ba5ecc6af76 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xee1af8c8633dd and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe363bd43df2c9e; op2val:0xbff97ba5ecc6af76; op3val:0x3feee1af8c8633dd; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 848, x18)

inst_689:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x363bd43df2c9e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x97ba5ecc6af76 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xee1af8c8633dd and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe363bd43df2c9e; op2val:0xbff97ba5ecc6af76; op3val:0x3feee1af8c8633dd; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 864, x18)

inst_690:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x363bd43df2c9e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x97ba5ecc6af76 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xee1af8c8633dd and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe363bd43df2c9e; op2val:0xbff97ba5ecc6af76; op3val:0x3feee1af8c8633dd; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 880, x18)

inst_691:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69063a431773c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3df0c654462a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc06043ad5cff1 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69063a431773c; op2val:0xc003df0c654462a9; op3val:0x3fec06043ad5cff1; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 896, x18)

inst_692:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69063a431773c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3df0c654462a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc06043ad5cff1 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69063a431773c; op2val:0xc003df0c654462a9; op3val:0x3fec06043ad5cff1; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 912, x18)

inst_693:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69063a431773c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3df0c654462a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc06043ad5cff1 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69063a431773c; op2val:0xc003df0c654462a9; op3val:0x3fec06043ad5cff1; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 928, x18)

inst_694:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69063a431773c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3df0c654462a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc06043ad5cff1 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69063a431773c; op2val:0xc003df0c654462a9; op3val:0x3fec06043ad5cff1; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 944, x18)

inst_695:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69063a431773c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3df0c654462a9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc06043ad5cff1 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69063a431773c; op2val:0xc003df0c654462a9; op3val:0x3fec06043ad5cff1; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 960, x18)

inst_696:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xddbf92dd7e9dc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x806004c2c05a9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x66a94682e0b6c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcddbf92dd7e9dc; op2val:0xbfe806004c2c05a9; op3val:0x3fc66a94682e0b6c; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 976, x18)

inst_697:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xddbf92dd7e9dc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x806004c2c05a9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x66a94682e0b6c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcddbf92dd7e9dc; op2val:0xbfe806004c2c05a9; op3val:0x3fc66a94682e0b6c; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 992, x18)

inst_698:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xddbf92dd7e9dc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x806004c2c05a9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x66a94682e0b6c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcddbf92dd7e9dc; op2val:0xbfe806004c2c05a9; op3val:0x3fc66a94682e0b6c; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1008, x18)

inst_699:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xddbf92dd7e9dc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x806004c2c05a9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x66a94682e0b6c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcddbf92dd7e9dc; op2val:0xbfe806004c2c05a9; op3val:0x3fc66a94682e0b6c; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1024, x18)

inst_700:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xddbf92dd7e9dc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x806004c2c05a9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x66a94682e0b6c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcddbf92dd7e9dc; op2val:0xbfe806004c2c05a9; op3val:0x3fc66a94682e0b6c; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1040, x18)

inst_701:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x90a4a15b9d60b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35cf90ff2a459 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe4db8ecdfef22 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe90a4a15b9d60b; op2val:0xbfe35cf90ff2a459; op3val:0x3fde4db8ecdfef22; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1056, x18)

inst_702:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x90a4a15b9d60b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35cf90ff2a459 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe4db8ecdfef22 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe90a4a15b9d60b; op2val:0xbfe35cf90ff2a459; op3val:0x3fde4db8ecdfef22; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1072, x18)

inst_703:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x90a4a15b9d60b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35cf90ff2a459 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe4db8ecdfef22 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe90a4a15b9d60b; op2val:0xbfe35cf90ff2a459; op3val:0x3fde4db8ecdfef22; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1088, x18)

inst_704:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x90a4a15b9d60b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35cf90ff2a459 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe4db8ecdfef22 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe90a4a15b9d60b; op2val:0xbfe35cf90ff2a459; op3val:0x3fde4db8ecdfef22; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1104, x18)

inst_705:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x90a4a15b9d60b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35cf90ff2a459 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe4db8ecdfef22 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe90a4a15b9d60b; op2val:0xbfe35cf90ff2a459; op3val:0x3fde4db8ecdfef22; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1120, x18)

inst_706:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x02b09cf9edfe0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x682cfe45f21ae and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bf5d40c5ba28 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb02b09cf9edfe0; op2val:0xc02682cfe45f21ae; op3val:0x3fe6bf5d40c5ba28; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1136, x18)

inst_707:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x02b09cf9edfe0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x682cfe45f21ae and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bf5d40c5ba28 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb02b09cf9edfe0; op2val:0xc02682cfe45f21ae; op3val:0x3fe6bf5d40c5ba28; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1152, x18)

inst_708:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x02b09cf9edfe0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x682cfe45f21ae and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bf5d40c5ba28 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb02b09cf9edfe0; op2val:0xc02682cfe45f21ae; op3val:0x3fe6bf5d40c5ba28; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1168, x18)

inst_709:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x02b09cf9edfe0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x682cfe45f21ae and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bf5d40c5ba28 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb02b09cf9edfe0; op2val:0xc02682cfe45f21ae; op3val:0x3fe6bf5d40c5ba28; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1184, x18)

inst_710:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x02b09cf9edfe0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x682cfe45f21ae and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6bf5d40c5ba28 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb02b09cf9edfe0; op2val:0xc02682cfe45f21ae; op3val:0x3fe6bf5d40c5ba28; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_711:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd1d5d3f287280 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x066d622ce8a39 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdd87e19b07cd2 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d1d5d3f287280; op2val:0xc03066d622ce8a39; op3val:0x3fddd87e19b07cd2; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1216, x18)

inst_712:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd1d5d3f287280 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x066d622ce8a39 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdd87e19b07cd2 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d1d5d3f287280; op2val:0xc03066d622ce8a39; op3val:0x3fddd87e19b07cd2; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1232, x18)

inst_713:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd1d5d3f287280 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x066d622ce8a39 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdd87e19b07cd2 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d1d5d3f287280; op2val:0xc03066d622ce8a39; op3val:0x3fddd87e19b07cd2; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1248, x18)

inst_714:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd1d5d3f287280 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x066d622ce8a39 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdd87e19b07cd2 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d1d5d3f287280; op2val:0xc03066d622ce8a39; op3val:0x3fddd87e19b07cd2; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1264, x18)

inst_715:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xd1d5d3f287280 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x066d622ce8a39 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdd87e19b07cd2 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9d1d5d3f287280; op2val:0xc03066d622ce8a39; op3val:0x3fddd87e19b07cd2; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1280, x18)

inst_716:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4c1b8ab91e9cc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8ab5e2660ad67 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00072c5757bff and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4c1b8ab91e9cc; op2val:0xc008ab5e2660ad67; op3val:0x3fe00072c5757bff; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1296, x18)

inst_717:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4c1b8ab91e9cc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8ab5e2660ad67 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00072c5757bff and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4c1b8ab91e9cc; op2val:0xc008ab5e2660ad67; op3val:0x3fe00072c5757bff; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1312, x18)

inst_718:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4c1b8ab91e9cc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8ab5e2660ad67 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00072c5757bff and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4c1b8ab91e9cc; op2val:0xc008ab5e2660ad67; op3val:0x3fe00072c5757bff; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1328, x18)

inst_719:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4c1b8ab91e9cc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8ab5e2660ad67 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00072c5757bff and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4c1b8ab91e9cc; op2val:0xc008ab5e2660ad67; op3val:0x3fe00072c5757bff; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1344, x18)

inst_720:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4c1b8ab91e9cc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8ab5e2660ad67 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00072c5757bff and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4c1b8ab91e9cc; op2val:0xc008ab5e2660ad67; op3val:0x3fe00072c5757bff; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1360, x18)

inst_721:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0c5a528aafc8d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa9f75d1e2840f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbe853fca4e684 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0c5a528aafc8d; op2val:0xbffa9f75d1e2840f; op3val:0x3febe853fca4e684; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1376, x18)

inst_722:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0c5a528aafc8d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa9f75d1e2840f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbe853fca4e684 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0c5a528aafc8d; op2val:0xbffa9f75d1e2840f; op3val:0x3febe853fca4e684; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1392, x18)

inst_723:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0c5a528aafc8d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa9f75d1e2840f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbe853fca4e684 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0c5a528aafc8d; op2val:0xbffa9f75d1e2840f; op3val:0x3febe853fca4e684; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1408, x18)

inst_724:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0c5a528aafc8d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa9f75d1e2840f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbe853fca4e684 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0c5a528aafc8d; op2val:0xbffa9f75d1e2840f; op3val:0x3febe853fca4e684; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1424, x18)

inst_725:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0c5a528aafc8d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa9f75d1e2840f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbe853fca4e684 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0c5a528aafc8d; op2val:0xbffa9f75d1e2840f; op3val:0x3febe853fca4e684; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1440, x18)

inst_726:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x61e2aeaef8095 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd9e562c307834 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x478c7686f5dce and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe61e2aeaef8095; op2val:0xbfdd9e562c307834; op3val:0x3fd478c7686f5dce; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1456, x18)

inst_727:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x61e2aeaef8095 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd9e562c307834 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x478c7686f5dce and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe61e2aeaef8095; op2val:0xbfdd9e562c307834; op3val:0x3fd478c7686f5dce; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1472, x18)

inst_728:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x61e2aeaef8095 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd9e562c307834 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x478c7686f5dce and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe61e2aeaef8095; op2val:0xbfdd9e562c307834; op3val:0x3fd478c7686f5dce; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1488, x18)

inst_729:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x61e2aeaef8095 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd9e562c307834 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x478c7686f5dce and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe61e2aeaef8095; op2val:0xbfdd9e562c307834; op3val:0x3fd478c7686f5dce; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1504, x18)

inst_730:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x61e2aeaef8095 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd9e562c307834 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x478c7686f5dce and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe61e2aeaef8095; op2val:0xbfdd9e562c307834; op3val:0x3fd478c7686f5dce; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1520, x18)

inst_731:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3f7b8a3867498 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x834c0c3e6e6e3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe356a9e801198 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3f7b8a3867498; op2val:0xc00834c0c3e6e6e3; op3val:0x3fde356a9e801198; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1536, x18)

inst_732:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3f7b8a3867498 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x834c0c3e6e6e3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe356a9e801198 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3f7b8a3867498; op2val:0xc00834c0c3e6e6e3; op3val:0x3fde356a9e801198; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1552, x18)

inst_733:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3f7b8a3867498 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x834c0c3e6e6e3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe356a9e801198 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3f7b8a3867498; op2val:0xc00834c0c3e6e6e3; op3val:0x3fde356a9e801198; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1568, x18)

inst_734:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3f7b8a3867498 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x834c0c3e6e6e3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe356a9e801198 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3f7b8a3867498; op2val:0xc00834c0c3e6e6e3; op3val:0x3fde356a9e801198; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1584, x18)

inst_735:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3f7b8a3867498 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x834c0c3e6e6e3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe356a9e801198 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3f7b8a3867498; op2val:0xc00834c0c3e6e6e3; op3val:0x3fde356a9e801198; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1600, x18)

inst_736:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x054f60886995e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3dbcc0019df9c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4453f4d0fde27 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe054f60886995e; op2val:0xbff3dbcc0019df9c; op3val:0x3fe4453f4d0fde27; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1616, x18)

inst_737:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x054f60886995e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3dbcc0019df9c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4453f4d0fde27 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe054f60886995e; op2val:0xbff3dbcc0019df9c; op3val:0x3fe4453f4d0fde27; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1632, x18)

inst_738:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x054f60886995e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3dbcc0019df9c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4453f4d0fde27 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe054f60886995e; op2val:0xbff3dbcc0019df9c; op3val:0x3fe4453f4d0fde27; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1648, x18)

inst_739:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x054f60886995e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3dbcc0019df9c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4453f4d0fde27 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe054f60886995e; op2val:0xbff3dbcc0019df9c; op3val:0x3fe4453f4d0fde27; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1664, x18)

inst_740:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x054f60886995e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3dbcc0019df9c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4453f4d0fde27 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe054f60886995e; op2val:0xbff3dbcc0019df9c; op3val:0x3fe4453f4d0fde27; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1680, x18)

inst_741:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3b4554b7cf508 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xba9dfc68e440c and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x108c2251deaa0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3b4554b7cf508; op2val:0xbfaba9dfc68e440c; op3val:0x3f9108c2251deaa0; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1696, x18)

inst_742:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3b4554b7cf508 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xba9dfc68e440c and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x108c2251deaa0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3b4554b7cf508; op2val:0xbfaba9dfc68e440c; op3val:0x3f9108c2251deaa0; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1712, x18)

inst_743:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3b4554b7cf508 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xba9dfc68e440c and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x108c2251deaa0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3b4554b7cf508; op2val:0xbfaba9dfc68e440c; op3val:0x3f9108c2251deaa0; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1728, x18)

inst_744:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3b4554b7cf508 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xba9dfc68e440c and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x108c2251deaa0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3b4554b7cf508; op2val:0xbfaba9dfc68e440c; op3val:0x3f9108c2251deaa0; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1744, x18)

inst_745:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3b4554b7cf508 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xba9dfc68e440c and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x108c2251deaa0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3b4554b7cf508; op2val:0xbfaba9dfc68e440c; op3val:0x3f9108c2251deaa0; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1760, x18)

inst_746:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa7b6588681a48 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7e9f95ef618fd and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3ca51d41839d8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba7b6588681a48; op2val:0xbfe7e9f95ef618fd; op3val:0x3fb3ca51d41839d8; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1776, x18)

inst_747:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa7b6588681a48 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7e9f95ef618fd and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3ca51d41839d8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba7b6588681a48; op2val:0xbfe7e9f95ef618fd; op3val:0x3fb3ca51d41839d8; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1792, x18)

inst_748:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa7b6588681a48 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7e9f95ef618fd and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3ca51d41839d8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba7b6588681a48; op2val:0xbfe7e9f95ef618fd; op3val:0x3fb3ca51d41839d8; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1808, x18)

inst_749:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa7b6588681a48 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7e9f95ef618fd and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3ca51d41839d8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba7b6588681a48; op2val:0xbfe7e9f95ef618fd; op3val:0x3fb3ca51d41839d8; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1824, x18)

inst_750:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa7b6588681a48 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7e9f95ef618fd and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3ca51d41839d8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba7b6588681a48; op2val:0xbfe7e9f95ef618fd; op3val:0x3fb3ca51d41839d8; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1840, x18)

inst_751:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x040c4520792b8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa90dcffbcc297 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xafc666a81f204 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb040c4520792b8; op2val:0xc01a90dcffbcc297; op3val:0x3fdafc666a81f204; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1856, x18)

inst_752:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x040c4520792b8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa90dcffbcc297 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xafc666a81f204 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb040c4520792b8; op2val:0xc01a90dcffbcc297; op3val:0x3fdafc666a81f204; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1872, x18)

inst_753:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x040c4520792b8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa90dcffbcc297 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xafc666a81f204 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb040c4520792b8; op2val:0xc01a90dcffbcc297; op3val:0x3fdafc666a81f204; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1888, x18)

inst_754:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x040c4520792b8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa90dcffbcc297 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xafc666a81f204 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb040c4520792b8; op2val:0xc01a90dcffbcc297; op3val:0x3fdafc666a81f204; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1904, x18)

inst_755:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x040c4520792b8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa90dcffbcc297 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xafc666a81f204 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb040c4520792b8; op2val:0xc01a90dcffbcc297; op3val:0x3fdafc666a81f204; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1920, x18)

inst_756:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b81badb38620 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x83da0789ab74b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2b9afacbe12b9 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b81badb38620; op2val:0xbff83da0789ab74b; op3val:0x3fe2b9afacbe12b9; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1936, x18)

inst_757:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b81badb38620 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x83da0789ab74b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2b9afacbe12b9 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b81badb38620; op2val:0xbff83da0789ab74b; op3val:0x3fe2b9afacbe12b9; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1952, x18)

inst_758:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b81badb38620 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x83da0789ab74b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2b9afacbe12b9 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b81badb38620; op2val:0xbff83da0789ab74b; op3val:0x3fe2b9afacbe12b9; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1968, x18)

inst_759:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b81badb38620 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x83da0789ab74b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2b9afacbe12b9 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b81badb38620; op2val:0xbff83da0789ab74b; op3val:0x3fe2b9afacbe12b9; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1984, x18)

inst_760:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b81badb38620 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x83da0789ab74b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2b9afacbe12b9 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b81badb38620; op2val:0xbff83da0789ab74b; op3val:0x3fe2b9afacbe12b9; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2000, x18)

inst_761:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xccff731a70a30 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd7565feda223f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa862c3aa84264 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbccff731a70a30; op2val:0xc00d7565feda223f; op3val:0x3fda862c3aa84264; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_762:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xccff731a70a30 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd7565feda223f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa862c3aa84264 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbccff731a70a30; op2val:0xc00d7565feda223f; op3val:0x3fda862c3aa84264; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xccff731a70a30 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd7565feda223f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa862c3aa84264 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbccff731a70a30; op2val:0xc00d7565feda223f; op3val:0x3fda862c3aa84264; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 16, x18)

inst_764:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xccff731a70a30 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd7565feda223f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa862c3aa84264 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbccff731a70a30; op2val:0xc00d7565feda223f; op3val:0x3fda862c3aa84264; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 32, x18)
addi x16,x16,2040

inst_765:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xccff731a70a30 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd7565feda223f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa862c3aa84264 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbccff731a70a30; op2val:0xc00d7565feda223f; op3val:0x3fda862c3aa84264; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 48, x18)

inst_766:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe7507f8f40ec4 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xf9344b3618a80 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe0d8ab9387ba4 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce7507f8f40ec4; op2val:0xc00f9344b3618a80; op3val:0x3fee0d8ab9387ba4; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 64, x18)

inst_767:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe7507f8f40ec4 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xf9344b3618a80 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe0d8ab9387ba4 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce7507f8f40ec4; op2val:0xc00f9344b3618a80; op3val:0x3fee0d8ab9387ba4; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 80, x18)

inst_768:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe7507f8f40ec4 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xf9344b3618a80 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe0d8ab9387ba4 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce7507f8f40ec4; op2val:0xc00f9344b3618a80; op3val:0x3fee0d8ab9387ba4; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 96, x18)

inst_769:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe7507f8f40ec4 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xf9344b3618a80 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe0d8ab9387ba4 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce7507f8f40ec4; op2val:0xc00f9344b3618a80; op3val:0x3fee0d8ab9387ba4; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 112, x18)

inst_770:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe7507f8f40ec4 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xf9344b3618a80 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe0d8ab9387ba4 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce7507f8f40ec4; op2val:0xc00f9344b3618a80; op3val:0x3fee0d8ab9387ba4; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 128, x18)

inst_771:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f31f434dedeb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x674296301da06 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa97dea375bb72 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2f31f434dedeb; op2val:0xbff674296301da06; op3val:0x3fea97dea375bb72; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 144, x18)

inst_772:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f31f434dedeb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x674296301da06 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa97dea375bb72 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2f31f434dedeb; op2val:0xbff674296301da06; op3val:0x3fea97dea375bb72; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 160, x18)

inst_773:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f31f434dedeb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x674296301da06 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa97dea375bb72 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2f31f434dedeb; op2val:0xbff674296301da06; op3val:0x3fea97dea375bb72; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 176, x18)

inst_774:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f31f434dedeb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x674296301da06 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa97dea375bb72 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2f31f434dedeb; op2val:0xbff674296301da06; op3val:0x3fea97dea375bb72; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 192, x18)

inst_775:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f31f434dedeb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x674296301da06 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa97dea375bb72 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2f31f434dedeb; op2val:0xbff674296301da06; op3val:0x3fea97dea375bb72; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 208, x18)

inst_776:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbc14c2b193245 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d5ee6c8f0e48 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x58a868f20bb37 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febc14c2b193245; op2val:0xbfe8d5ee6c8f0e48; op3val:0x3fe58a868f20bb37; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 224, x18)

inst_777:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbc14c2b193245 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d5ee6c8f0e48 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x58a868f20bb37 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febc14c2b193245; op2val:0xbfe8d5ee6c8f0e48; op3val:0x3fe58a868f20bb37; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 240, x18)

inst_778:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbc14c2b193245 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d5ee6c8f0e48 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x58a868f20bb37 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febc14c2b193245; op2val:0xbfe8d5ee6c8f0e48; op3val:0x3fe58a868f20bb37; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 256, x18)

inst_779:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbc14c2b193245 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d5ee6c8f0e48 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x58a868f20bb37 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febc14c2b193245; op2val:0xbfe8d5ee6c8f0e48; op3val:0x3fe58a868f20bb37; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 272, x18)

inst_780:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbc14c2b193245 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d5ee6c8f0e48 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x58a868f20bb37 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febc14c2b193245; op2val:0xbfe8d5ee6c8f0e48; op3val:0x3fe58a868f20bb37; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 288, x18)

inst_781:
// fs1 == 0 and fe1 == 0x3f6 and fm1 == 0x5a73773352100 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xa02fc031e4a91 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x199e2080335d0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f65a73773352100; op2val:0xc03a02fc031e4a91; op3val:0x3fb199e2080335d0; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 304, x18)

inst_782:
// fs1 == 0 and fe1 == 0x3f6 and fm1 == 0x5a73773352100 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xa02fc031e4a91 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x199e2080335d0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f65a73773352100; op2val:0xc03a02fc031e4a91; op3val:0x3fb199e2080335d0; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 320, x18)

inst_783:
// fs1 == 0 and fe1 == 0x3f6 and fm1 == 0x5a73773352100 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xa02fc031e4a91 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x199e2080335d0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f65a73773352100; op2val:0xc03a02fc031e4a91; op3val:0x3fb199e2080335d0; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 336, x18)

inst_784:
// fs1 == 0 and fe1 == 0x3f6 and fm1 == 0x5a73773352100 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xa02fc031e4a91 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x199e2080335d0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f65a73773352100; op2val:0xc03a02fc031e4a91; op3val:0x3fb199e2080335d0; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 352, x18)

inst_785:
// fs1 == 0 and fe1 == 0x3f6 and fm1 == 0x5a73773352100 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xa02fc031e4a91 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x199e2080335d0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f65a73773352100; op2val:0xc03a02fc031e4a91; op3val:0x3fb199e2080335d0; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 368, x18)

inst_786:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbfa706a40fde2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2b95286e0ef6e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x05ee73d5847f8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbfa706a40fde2; op2val:0xbfc2b95286e0ef6e; op3val:0x3fb05ee73d5847f8; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 384, x18)

inst_787:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbfa706a40fde2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2b95286e0ef6e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x05ee73d5847f8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbfa706a40fde2; op2val:0xbfc2b95286e0ef6e; op3val:0x3fb05ee73d5847f8; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 400, x18)

inst_788:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbfa706a40fde2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2b95286e0ef6e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x05ee73d5847f8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbfa706a40fde2; op2val:0xbfc2b95286e0ef6e; op3val:0x3fb05ee73d5847f8; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 416, x18)

inst_789:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbfa706a40fde2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2b95286e0ef6e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x05ee73d5847f8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbfa706a40fde2; op2val:0xbfc2b95286e0ef6e; op3val:0x3fb05ee73d5847f8; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 432, x18)

inst_790:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xbfa706a40fde2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2b95286e0ef6e and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x05ee73d5847f8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdbfa706a40fde2; op2val:0xbfc2b95286e0ef6e; op3val:0x3fb05ee73d5847f8; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 448, x18)

inst_791:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0e2f3f3ff2d36 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf99a32ee2ce59 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0acef8f8e6126 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0e2f3f3ff2d36; op2val:0xbfff99a32ee2ce59; op3val:0x3fe0acef8f8e6126; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 464, x18)

inst_792:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0e2f3f3ff2d36 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf99a32ee2ce59 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0acef8f8e6126 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0e2f3f3ff2d36; op2val:0xbfff99a32ee2ce59; op3val:0x3fe0acef8f8e6126; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 480, x18)

inst_793:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0e2f3f3ff2d36 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf99a32ee2ce59 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0acef8f8e6126 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0e2f3f3ff2d36; op2val:0xbfff99a32ee2ce59; op3val:0x3fe0acef8f8e6126; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 496, x18)

inst_794:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0e2f3f3ff2d36 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf99a32ee2ce59 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0acef8f8e6126 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0e2f3f3ff2d36; op2val:0xbfff99a32ee2ce59; op3val:0x3fe0acef8f8e6126; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 512, x18)

inst_795:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0e2f3f3ff2d36 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf99a32ee2ce59 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0acef8f8e6126 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0e2f3f3ff2d36; op2val:0xbfff99a32ee2ce59; op3val:0x3fe0acef8f8e6126; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 528, x18)

inst_796:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x58b2ad2d181d3 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x6742405084338 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xe3bbc583f7940 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe58b2ad2d181d3; op2val:0xbfc6742405084338; op3val:0x3fbe3bbc583f7940; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 544, x18)

inst_797:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x58b2ad2d181d3 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x6742405084338 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xe3bbc583f7940 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe58b2ad2d181d3; op2val:0xbfc6742405084338; op3val:0x3fbe3bbc583f7940; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 560, x18)

inst_798:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x58b2ad2d181d3 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x6742405084338 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xe3bbc583f7940 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe58b2ad2d181d3; op2val:0xbfc6742405084338; op3val:0x3fbe3bbc583f7940; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 576, x18)

inst_799:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x58b2ad2d181d3 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x6742405084338 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xe3bbc583f7940 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe58b2ad2d181d3; op2val:0xbfc6742405084338; op3val:0x3fbe3bbc583f7940; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 592, x18)

inst_800:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x58b2ad2d181d3 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x6742405084338 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xe3bbc583f7940 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe58b2ad2d181d3; op2val:0xbfc6742405084338; op3val:0x3fbe3bbc583f7940; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 608, x18)

inst_801:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x663db5d44aa90 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x425a75c036cc1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc318352e219bc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc663db5d44aa90; op2val:0xc00425a75c036cc1; op3val:0x3fdc318352e219bc; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 624, x18)

inst_802:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x663db5d44aa90 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x425a75c036cc1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc318352e219bc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc663db5d44aa90; op2val:0xc00425a75c036cc1; op3val:0x3fdc318352e219bc; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 640, x18)

inst_803:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x663db5d44aa90 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x425a75c036cc1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc318352e219bc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc663db5d44aa90; op2val:0xc00425a75c036cc1; op3val:0x3fdc318352e219bc; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 656, x18)

inst_804:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x663db5d44aa90 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x425a75c036cc1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc318352e219bc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc663db5d44aa90; op2val:0xc00425a75c036cc1; op3val:0x3fdc318352e219bc; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 672, x18)

inst_805:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x663db5d44aa90 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x425a75c036cc1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc318352e219bc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc663db5d44aa90; op2val:0xc00425a75c036cc1; op3val:0x3fdc318352e219bc; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 688, x18)

inst_806:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc6ce691b563fc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x30227e6b3a1a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0e29326941a3e and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc6ce691b563fc; op2val:0xbfe30227e6b3a1a2; op3val:0x3fd0e29326941a3e; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 704, x18)

inst_807:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc6ce691b563fc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x30227e6b3a1a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0e29326941a3e and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc6ce691b563fc; op2val:0xbfe30227e6b3a1a2; op3val:0x3fd0e29326941a3e; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 720, x18)

inst_808:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc6ce691b563fc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x30227e6b3a1a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0e29326941a3e and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc6ce691b563fc; op2val:0xbfe30227e6b3a1a2; op3val:0x3fd0e29326941a3e; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 736, x18)

inst_809:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc6ce691b563fc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x30227e6b3a1a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0e29326941a3e and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc6ce691b563fc; op2val:0xbfe30227e6b3a1a2; op3val:0x3fd0e29326941a3e; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 752, x18)

inst_810:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc6ce691b563fc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x30227e6b3a1a2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0e29326941a3e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc6ce691b563fc; op2val:0xbfe30227e6b3a1a2; op3val:0x3fd0e29326941a3e; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 768, x18)

inst_811:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc82fd9c37c99d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x10b3e3c84e5e7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5f366bc5734f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec82fd9c37c99d; op2val:0xbff10b3e3c84e5e7; op3val:0x3fee5f366bc5734f; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 784, x18)

inst_812:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc82fd9c37c99d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x10b3e3c84e5e7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5f366bc5734f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec82fd9c37c99d; op2val:0xbff10b3e3c84e5e7; op3val:0x3fee5f366bc5734f; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 800, x18)

inst_813:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc82fd9c37c99d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x10b3e3c84e5e7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5f366bc5734f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec82fd9c37c99d; op2val:0xbff10b3e3c84e5e7; op3val:0x3fee5f366bc5734f; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 816, x18)

inst_814:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc82fd9c37c99d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x10b3e3c84e5e7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5f366bc5734f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec82fd9c37c99d; op2val:0xbff10b3e3c84e5e7; op3val:0x3fee5f366bc5734f; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 832, x18)

inst_815:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc82fd9c37c99d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x10b3e3c84e5e7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5f366bc5734f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec82fd9c37c99d; op2val:0xbff10b3e3c84e5e7; op3val:0x3fee5f366bc5734f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 848, x18)

inst_816:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa589aeaa6f442 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x37ad4765e7f65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x009bcb6689888 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea589aeaa6f442; op2val:0xbfd37ad4765e7f65; op3val:0x3fd009bcb6689888; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 864, x18)

inst_817:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa589aeaa6f442 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x37ad4765e7f65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x009bcb6689888 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea589aeaa6f442; op2val:0xbfd37ad4765e7f65; op3val:0x3fd009bcb6689888; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 880, x18)

inst_818:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa589aeaa6f442 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x37ad4765e7f65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x009bcb6689888 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea589aeaa6f442; op2val:0xbfd37ad4765e7f65; op3val:0x3fd009bcb6689888; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 896, x18)

inst_819:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa589aeaa6f442 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x37ad4765e7f65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x009bcb6689888 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea589aeaa6f442; op2val:0xbfd37ad4765e7f65; op3val:0x3fd009bcb6689888; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 912, x18)

inst_820:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa589aeaa6f442 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x37ad4765e7f65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x009bcb6689888 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea589aeaa6f442; op2val:0xbfd37ad4765e7f65; op3val:0x3fd009bcb6689888; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 928, x18)

inst_821:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8e06edfabe22a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd188328bcdaef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69e72c44cc4dd and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8e06edfabe22a; op2val:0xbfed188328bcdaef; op3val:0x3fe69e72c44cc4dd; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 944, x18)

inst_822:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8e06edfabe22a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd188328bcdaef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69e72c44cc4dd and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8e06edfabe22a; op2val:0xbfed188328bcdaef; op3val:0x3fe69e72c44cc4dd; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 960, x18)

inst_823:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8e06edfabe22a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd188328bcdaef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69e72c44cc4dd and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8e06edfabe22a; op2val:0xbfed188328bcdaef; op3val:0x3fe69e72c44cc4dd; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 976, x18)

inst_824:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8e06edfabe22a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd188328bcdaef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69e72c44cc4dd and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8e06edfabe22a; op2val:0xbfed188328bcdaef; op3val:0x3fe69e72c44cc4dd; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 992, x18)

inst_825:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8e06edfabe22a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd188328bcdaef and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69e72c44cc4dd and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8e06edfabe22a; op2val:0xbfed188328bcdaef; op3val:0x3fe69e72c44cc4dd; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1008, x18)

inst_826:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe0c51ef53b68 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x088846101f658 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xccea251dcb599 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbe0c51ef53b68; op2val:0xc01088846101f658; op3val:0x3feccea251dcb599; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1024, x18)

inst_827:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe0c51ef53b68 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x088846101f658 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xccea251dcb599 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbe0c51ef53b68; op2val:0xc01088846101f658; op3val:0x3feccea251dcb599; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1040, x18)

inst_828:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe0c51ef53b68 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x088846101f658 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xccea251dcb599 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbe0c51ef53b68; op2val:0xc01088846101f658; op3val:0x3feccea251dcb599; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1056, x18)

inst_829:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe0c51ef53b68 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x088846101f658 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xccea251dcb599 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbe0c51ef53b68; op2val:0xc01088846101f658; op3val:0x3feccea251dcb599; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1072, x18)

inst_830:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe0c51ef53b68 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x088846101f658 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xccea251dcb599 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbe0c51ef53b68; op2val:0xc01088846101f658; op3val:0x3feccea251dcb599; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1088, x18)

inst_831:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x38aeabf67ab1c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdcd832c59642c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x23366c916bd13 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe38aeabf67ab1c; op2val:0xbfedcd832c59642c; op3val:0x3fe23366c916bd13; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1104, x18)

inst_832:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x38aeabf67ab1c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdcd832c59642c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x23366c916bd13 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe38aeabf67ab1c; op2val:0xbfedcd832c59642c; op3val:0x3fe23366c916bd13; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1120, x18)

inst_833:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x38aeabf67ab1c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdcd832c59642c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x23366c916bd13 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe38aeabf67ab1c; op2val:0xbfedcd832c59642c; op3val:0x3fe23366c916bd13; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1136, x18)

inst_834:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x38aeabf67ab1c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdcd832c59642c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x23366c916bd13 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe38aeabf67ab1c; op2val:0xbfedcd832c59642c; op3val:0x3fe23366c916bd13; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1152, x18)

inst_835:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x38aeabf67ab1c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdcd832c59642c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x23366c916bd13 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe38aeabf67ab1c; op2val:0xbfedcd832c59642c; op3val:0x3fe23366c916bd13; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1168, x18)

inst_836:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xae36d875f2552 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc60175cbd4c41 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d7bdc06d019b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feae36d875f2552; op2val:0xbfec60175cbd4c41; op3val:0x3fe7d7bdc06d019b; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1184, x18)

inst_837:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xae36d875f2552 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc60175cbd4c41 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d7bdc06d019b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feae36d875f2552; op2val:0xbfec60175cbd4c41; op3val:0x3fe7d7bdc06d019b; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1200, x18)

inst_838:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xae36d875f2552 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc60175cbd4c41 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d7bdc06d019b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feae36d875f2552; op2val:0xbfec60175cbd4c41; op3val:0x3fe7d7bdc06d019b; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1216, x18)

inst_839:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xae36d875f2552 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc60175cbd4c41 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d7bdc06d019b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feae36d875f2552; op2val:0xbfec60175cbd4c41; op3val:0x3fe7d7bdc06d019b; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1232, x18)

inst_840:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xae36d875f2552 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc60175cbd4c41 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7d7bdc06d019b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feae36d875f2552; op2val:0xbfec60175cbd4c41; op3val:0x3fe7d7bdc06d019b; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1248, x18)

inst_841:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1d4da7b1fade4 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2b84055f68608 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4dccd4e43031c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1d4da7b1fade4; op2val:0xc002b84055f68608; op3val:0x3fe4dccd4e43031c; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1264, x18)

inst_842:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1d4da7b1fade4 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2b84055f68608 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4dccd4e43031c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1d4da7b1fade4; op2val:0xc002b84055f68608; op3val:0x3fe4dccd4e43031c; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1280, x18)

inst_843:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1d4da7b1fade4 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2b84055f68608 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4dccd4e43031c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1d4da7b1fade4; op2val:0xc002b84055f68608; op3val:0x3fe4dccd4e43031c; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1296, x18)

inst_844:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1d4da7b1fade4 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2b84055f68608 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4dccd4e43031c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1d4da7b1fade4; op2val:0xc002b84055f68608; op3val:0x3fe4dccd4e43031c; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1312, x18)

inst_845:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1d4da7b1fade4 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2b84055f68608 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4dccd4e43031c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1d4da7b1fade4; op2val:0xc002b84055f68608; op3val:0x3fe4dccd4e43031c; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1328, x18)

inst_846:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xeb76f28cc8e64 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd896f6750ad3c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5a29005580fc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdeb76f28cc8e64; op2val:0xbffd896f6750ad3c; op3val:0x3fec5a29005580fc; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1344, x18)

inst_847:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xeb76f28cc8e64 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd896f6750ad3c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5a29005580fc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdeb76f28cc8e64; op2val:0xbffd896f6750ad3c; op3val:0x3fec5a29005580fc; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1360, x18)

inst_848:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xeb76f28cc8e64 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd896f6750ad3c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5a29005580fc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdeb76f28cc8e64; op2val:0xbffd896f6750ad3c; op3val:0x3fec5a29005580fc; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1376, x18)

inst_849:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xeb76f28cc8e64 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd896f6750ad3c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5a29005580fc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdeb76f28cc8e64; op2val:0xbffd896f6750ad3c; op3val:0x3fec5a29005580fc; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1392, x18)
addi x16,x16,2040

inst_850:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xeb76f28cc8e64 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd896f6750ad3c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5a29005580fc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdeb76f28cc8e64; op2val:0xbffd896f6750ad3c; op3val:0x3fec5a29005580fc; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1408, x18)

inst_851:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x48f6e30219322 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0c3b6c82093af and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x58aed1fbc4dce and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe48f6e30219322; op2val:0xbff0c3b6c82093af; op3val:0x3fe58aed1fbc4dce; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1424, x18)

inst_852:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x48f6e30219322 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0c3b6c82093af and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x58aed1fbc4dce and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe48f6e30219322; op2val:0xbff0c3b6c82093af; op3val:0x3fe58aed1fbc4dce; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1440, x18)

inst_853:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x48f6e30219322 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0c3b6c82093af and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x58aed1fbc4dce and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe48f6e30219322; op2val:0xbff0c3b6c82093af; op3val:0x3fe58aed1fbc4dce; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1456, x18)

inst_854:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x48f6e30219322 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0c3b6c82093af and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x58aed1fbc4dce and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe48f6e30219322; op2val:0xbff0c3b6c82093af; op3val:0x3fe58aed1fbc4dce; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1472, x18)

inst_855:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x48f6e30219322 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0c3b6c82093af and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x58aed1fbc4dce and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe48f6e30219322; op2val:0xbff0c3b6c82093af; op3val:0x3fe58aed1fbc4dce; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1488, x18)

inst_856:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5c8570b1c55a2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x08896dc411577 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6824b51061697 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5c8570b1c55a2; op2val:0xbff08896dc411577; op3val:0x3fe6824b51061697; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1504, x18)

inst_857:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5c8570b1c55a2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x08896dc411577 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6824b51061697 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5c8570b1c55a2; op2val:0xbff08896dc411577; op3val:0x3fe6824b51061697; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1520, x18)

inst_858:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5c8570b1c55a2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x08896dc411577 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6824b51061697 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5c8570b1c55a2; op2val:0xbff08896dc411577; op3val:0x3fe6824b51061697; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1536, x18)

inst_859:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5c8570b1c55a2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x08896dc411577 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6824b51061697 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5c8570b1c55a2; op2val:0xbff08896dc411577; op3val:0x3fe6824b51061697; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1552, x18)

inst_860:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5c8570b1c55a2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x08896dc411577 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6824b51061697 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5c8570b1c55a2; op2val:0xbff08896dc411577; op3val:0x3fe6824b51061697; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1568, x18)

inst_861:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x19e4567b4192e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7438e04d37460 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x99de6e9ad876c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd19e4567b4192e; op2val:0xbff7438e04d37460; op3val:0x3fd99de6e9ad876c; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1584, x18)

inst_862:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x19e4567b4192e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7438e04d37460 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x99de6e9ad876c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd19e4567b4192e; op2val:0xbff7438e04d37460; op3val:0x3fd99de6e9ad876c; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1600, x18)

inst_863:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x19e4567b4192e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7438e04d37460 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x99de6e9ad876c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd19e4567b4192e; op2val:0xbff7438e04d37460; op3val:0x3fd99de6e9ad876c; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1616, x18)

inst_864:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x19e4567b4192e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7438e04d37460 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x99de6e9ad876c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd19e4567b4192e; op2val:0xbff7438e04d37460; op3val:0x3fd99de6e9ad876c; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1632, x18)

inst_865:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x19e4567b4192e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7438e04d37460 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x99de6e9ad876c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd19e4567b4192e; op2val:0xbff7438e04d37460; op3val:0x3fd99de6e9ad876c; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1648, x18)

inst_866:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5f586decce698 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x145abaa6a8d64 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7b47dbc4eeb7c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5f586decce698; op2val:0xbff145abaa6a8d64; op3val:0x3fc7b47dbc4eeb7c; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1664, x18)

inst_867:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5f586decce698 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x145abaa6a8d64 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7b47dbc4eeb7c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5f586decce698; op2val:0xbff145abaa6a8d64; op3val:0x3fc7b47dbc4eeb7c; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1680, x18)

inst_868:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5f586decce698 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x145abaa6a8d64 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7b47dbc4eeb7c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5f586decce698; op2val:0xbff145abaa6a8d64; op3val:0x3fc7b47dbc4eeb7c; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1696, x18)

inst_869:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5f586decce698 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x145abaa6a8d64 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7b47dbc4eeb7c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5f586decce698; op2val:0xbff145abaa6a8d64; op3val:0x3fc7b47dbc4eeb7c; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1712, x18)

inst_870:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5f586decce698 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x145abaa6a8d64 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7b47dbc4eeb7c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5f586decce698; op2val:0xbff145abaa6a8d64; op3val:0x3fc7b47dbc4eeb7c; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1728, x18)

inst_871:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x62ab9f9902b34 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd46ae37e11a33 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x447aeb0052dbc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd62ab9f9902b34; op2val:0xbffd46ae37e11a33; op3val:0x3fe447aeb0052dbc; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1744, x18)

inst_872:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x62ab9f9902b34 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd46ae37e11a33 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x447aeb0052dbc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd62ab9f9902b34; op2val:0xbffd46ae37e11a33; op3val:0x3fe447aeb0052dbc; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1760, x18)

inst_873:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x62ab9f9902b34 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd46ae37e11a33 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x447aeb0052dbc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd62ab9f9902b34; op2val:0xbffd46ae37e11a33; op3val:0x3fe447aeb0052dbc; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1776, x18)

inst_874:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x62ab9f9902b34 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd46ae37e11a33 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x447aeb0052dbc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd62ab9f9902b34; op2val:0xbffd46ae37e11a33; op3val:0x3fe447aeb0052dbc; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1792, x18)

inst_875:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x62ab9f9902b34 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd46ae37e11a33 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x447aeb0052dbc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd62ab9f9902b34; op2val:0xbffd46ae37e11a33; op3val:0x3fe447aeb0052dbc; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1808, x18)

inst_876:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x488795d503e40 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc1d08da429d25 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x20a0b8dcd97a0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb488795d503e40; op2val:0xbffc1d08da429d25; op3val:0x3fc20a0b8dcd97a0; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1824, x18)

inst_877:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x488795d503e40 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc1d08da429d25 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x20a0b8dcd97a0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb488795d503e40; op2val:0xbffc1d08da429d25; op3val:0x3fc20a0b8dcd97a0; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1840, x18)

inst_878:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x488795d503e40 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc1d08da429d25 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x20a0b8dcd97a0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb488795d503e40; op2val:0xbffc1d08da429d25; op3val:0x3fc20a0b8dcd97a0; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1856, x18)

inst_879:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x488795d503e40 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc1d08da429d25 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x20a0b8dcd97a0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb488795d503e40; op2val:0xbffc1d08da429d25; op3val:0x3fc20a0b8dcd97a0; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1872, x18)

inst_880:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x488795d503e40 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc1d08da429d25 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x20a0b8dcd97a0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb488795d503e40; op2val:0xbffc1d08da429d25; op3val:0x3fc20a0b8dcd97a0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1888, x18)

inst_881:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5c33830d66aa4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x69daa900bfb79 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xec2e0d8a85778 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5c33830d66aa4; op2val:0xbff69daa900bfb79; op3val:0x3feec2e0d8a85778; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1904, x18)

inst_882:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5c33830d66aa4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x69daa900bfb79 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xec2e0d8a85778 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5c33830d66aa4; op2val:0xbff69daa900bfb79; op3val:0x3feec2e0d8a85778; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1920, x18)

inst_883:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5c33830d66aa4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x69daa900bfb79 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xec2e0d8a85778 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5c33830d66aa4; op2val:0xbff69daa900bfb79; op3val:0x3feec2e0d8a85778; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1936, x18)

inst_884:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5c33830d66aa4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x69daa900bfb79 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xec2e0d8a85778 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5c33830d66aa4; op2val:0xbff69daa900bfb79; op3val:0x3feec2e0d8a85778; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1952, x18)

inst_885:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5c33830d66aa4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x69daa900bfb79 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xec2e0d8a85778 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5c33830d66aa4; op2val:0xbff69daa900bfb79; op3val:0x3feec2e0d8a85778; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1968, x18)

inst_886:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x14756b04efa98 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x494f0a5e14b30 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x63a041f78e2cc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc14756b04efa98; op2val:0xc00494f0a5e14b30; op3val:0x3fd63a041f78e2cc; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1984, x18)

inst_887:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x14756b04efa98 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x494f0a5e14b30 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x63a041f78e2cc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc14756b04efa98; op2val:0xc00494f0a5e14b30; op3val:0x3fd63a041f78e2cc; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 2000, x18)

inst_888:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x14756b04efa98 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x494f0a5e14b30 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x63a041f78e2cc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc14756b04efa98; op2val:0xc00494f0a5e14b30; op3val:0x3fd63a041f78e2cc; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_8)

inst_889:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x14756b04efa98 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x494f0a5e14b30 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x63a041f78e2cc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc14756b04efa98; op2val:0xc00494f0a5e14b30; op3val:0x3fd63a041f78e2cc; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 0, x18)

inst_890:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x14756b04efa98 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x494f0a5e14b30 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x63a041f78e2cc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc14756b04efa98; op2val:0xc00494f0a5e14b30; op3val:0x3fd63a041f78e2cc; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 16, x18)

inst_891:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd089fe37ea0cf and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbb73331b02b52 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9257ead23b1fa and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed089fe37ea0cf; op2val:0xbfdbb73331b02b52; op3val:0x3fd9257ead23b1fa; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 32, x18)

inst_892:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd089fe37ea0cf and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbb73331b02b52 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9257ead23b1fa and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed089fe37ea0cf; op2val:0xbfdbb73331b02b52; op3val:0x3fd9257ead23b1fa; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 48, x18)

inst_893:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd089fe37ea0cf and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbb73331b02b52 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9257ead23b1fa and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed089fe37ea0cf; op2val:0xbfdbb73331b02b52; op3val:0x3fd9257ead23b1fa; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 64, x18)

inst_894:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd089fe37ea0cf and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbb73331b02b52 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9257ead23b1fa and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed089fe37ea0cf; op2val:0xbfdbb73331b02b52; op3val:0x3fd9257ead23b1fa; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 80, x18)

inst_895:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd089fe37ea0cf and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbb73331b02b52 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9257ead23b1fa and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed089fe37ea0cf; op2val:0xbfdbb73331b02b52; op3val:0x3fd9257ead23b1fa; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 96, x18)

inst_896:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x835d096f7ecd0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9456bf625005f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x31e90ade26270 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb835d096f7ecd0; op2val:0xbfe9456bf625005f; op3val:0x3fb31e90ade26270; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 112, x18)

inst_897:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x835d096f7ecd0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9456bf625005f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x31e90ade26270 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb835d096f7ecd0; op2val:0xbfe9456bf625005f; op3val:0x3fb31e90ade26270; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 128, x18)

inst_898:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x835d096f7ecd0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9456bf625005f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x31e90ade26270 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb835d096f7ecd0; op2val:0xbfe9456bf625005f; op3val:0x3fb31e90ade26270; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 144, x18)

inst_899:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x835d096f7ecd0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9456bf625005f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x31e90ade26270 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb835d096f7ecd0; op2val:0xbfe9456bf625005f; op3val:0x3fb31e90ade26270; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 160, x18)

inst_900:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x835d096f7ecd0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9456bf625005f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x31e90ade26270 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb835d096f7ecd0; op2val:0xbfe9456bf625005f; op3val:0x3fb31e90ade26270; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 176, x18)

inst_901:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x131a2b2293af0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf46a641bae2b7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0ce0b854ae44c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe131a2b2293af0; op2val:0xbfcf46a641bae2b7; op3val:0x3fc0ce0b854ae44c; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 192, x18)

inst_902:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x131a2b2293af0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf46a641bae2b7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0ce0b854ae44c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe131a2b2293af0; op2val:0xbfcf46a641bae2b7; op3val:0x3fc0ce0b854ae44c; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 208, x18)

inst_903:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x131a2b2293af0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf46a641bae2b7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0ce0b854ae44c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe131a2b2293af0; op2val:0xbfcf46a641bae2b7; op3val:0x3fc0ce0b854ae44c; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 224, x18)

inst_904:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x131a2b2293af0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf46a641bae2b7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0ce0b854ae44c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe131a2b2293af0; op2val:0xbfcf46a641bae2b7; op3val:0x3fc0ce0b854ae44c; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 240, x18)

inst_905:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x131a2b2293af0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf46a641bae2b7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0ce0b854ae44c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe131a2b2293af0; op2val:0xbfcf46a641bae2b7; op3val:0x3fc0ce0b854ae44c; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 256, x18)

inst_906:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x42850e5e2079e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x730660780dc5c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd36edc79e4615 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd42850e5e2079e; op2val:0xc00730660780dc5c; op3val:0x3fed36edc79e4615; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 272, x18)

inst_907:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x42850e5e2079e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x730660780dc5c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd36edc79e4615 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd42850e5e2079e; op2val:0xc00730660780dc5c; op3val:0x3fed36edc79e4615; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 288, x18)

inst_908:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x42850e5e2079e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x730660780dc5c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd36edc79e4615 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd42850e5e2079e; op2val:0xc00730660780dc5c; op3val:0x3fed36edc79e4615; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 304, x18)

inst_909:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x42850e5e2079e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x730660780dc5c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd36edc79e4615 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd42850e5e2079e; op2val:0xc00730660780dc5c; op3val:0x3fed36edc79e4615; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 320, x18)

inst_910:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x42850e5e2079e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x730660780dc5c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd36edc79e4615 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd42850e5e2079e; op2val:0xc00730660780dc5c; op3val:0x3fed36edc79e4615; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 336, x18)

inst_911:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9f4acbe96179 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce50739dab394 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8f1139e785572 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9f4acbe96179; op2val:0xbfdce50739dab394; op3val:0x3fd8f1139e785572; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 352, x18)

inst_912:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9f4acbe96179 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce50739dab394 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8f1139e785572 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9f4acbe96179; op2val:0xbfdce50739dab394; op3val:0x3fd8f1139e785572; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 368, x18)

inst_913:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9f4acbe96179 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce50739dab394 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8f1139e785572 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9f4acbe96179; op2val:0xbfdce50739dab394; op3val:0x3fd8f1139e785572; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 384, x18)

inst_914:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9f4acbe96179 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce50739dab394 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8f1139e785572 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9f4acbe96179; op2val:0xbfdce50739dab394; op3val:0x3fd8f1139e785572; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 400, x18)

inst_915:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb9f4acbe96179 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce50739dab394 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8f1139e785572 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb9f4acbe96179; op2val:0xbfdce50739dab394; op3val:0x3fd8f1139e785572; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 416, x18)

inst_916:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x45d517e8e3ad0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x57f0a9240d0f0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb5c2d21702c14 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb45d517e8e3ad0; op2val:0xc0057f0a9240d0f0; op3val:0x3fcb5c2d21702c14; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 432, x18)

inst_917:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x45d517e8e3ad0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x57f0a9240d0f0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb5c2d21702c14 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb45d517e8e3ad0; op2val:0xc0057f0a9240d0f0; op3val:0x3fcb5c2d21702c14; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 448, x18)

inst_918:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x45d517e8e3ad0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x57f0a9240d0f0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb5c2d21702c14 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb45d517e8e3ad0; op2val:0xc0057f0a9240d0f0; op3val:0x3fcb5c2d21702c14; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 464, x18)

inst_919:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x45d517e8e3ad0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x57f0a9240d0f0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb5c2d21702c14 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb45d517e8e3ad0; op2val:0xc0057f0a9240d0f0; op3val:0x3fcb5c2d21702c14; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 480, x18)

inst_920:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x45d517e8e3ad0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x57f0a9240d0f0 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb5c2d21702c14 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb45d517e8e3ad0; op2val:0xc0057f0a9240d0f0; op3val:0x3fcb5c2d21702c14; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 496, x18)

inst_921:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc211756ee9dac and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x01d9183f02d40 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc55132514e100 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc211756ee9dac; op2val:0xbfa01d9183f02d40; op3val:0x3f7c55132514e100; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 512, x18)

inst_922:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc211756ee9dac and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x01d9183f02d40 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc55132514e100 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc211756ee9dac; op2val:0xbfa01d9183f02d40; op3val:0x3f7c55132514e100; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 528, x18)

inst_923:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc211756ee9dac and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x01d9183f02d40 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc55132514e100 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc211756ee9dac; op2val:0xbfa01d9183f02d40; op3val:0x3f7c55132514e100; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 544, x18)

inst_924:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc211756ee9dac and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x01d9183f02d40 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc55132514e100 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc211756ee9dac; op2val:0xbfa01d9183f02d40; op3val:0x3f7c55132514e100; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 560, x18)

inst_925:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc211756ee9dac and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x01d9183f02d40 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc55132514e100 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc211756ee9dac; op2val:0xbfa01d9183f02d40; op3val:0x3f7c55132514e100; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 576, x18)

inst_926:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x395fdb7a9c138 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x20db7d6503188 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6198856a26400 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe395fdb7a9c138; op2val:0xbfe20db7d6503188; op3val:0x3fd6198856a26400; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 592, x18)

inst_927:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x395fdb7a9c138 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x20db7d6503188 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6198856a26400 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe395fdb7a9c138; op2val:0xbfe20db7d6503188; op3val:0x3fd6198856a26400; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 608, x18)

inst_928:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x395fdb7a9c138 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x20db7d6503188 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6198856a26400 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe395fdb7a9c138; op2val:0xbfe20db7d6503188; op3val:0x3fd6198856a26400; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 624, x18)

inst_929:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x395fdb7a9c138 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x20db7d6503188 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6198856a26400 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe395fdb7a9c138; op2val:0xbfe20db7d6503188; op3val:0x3fd6198856a26400; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 640, x18)

inst_930:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x395fdb7a9c138 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x20db7d6503188 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6198856a26400 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe395fdb7a9c138; op2val:0xbfe20db7d6503188; op3val:0x3fd6198856a26400; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 656, x18)

inst_931:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc0fd97e4edb94 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe268285939431 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa70a12e36c758 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc0fd97e4edb94; op2val:0xbfee268285939431; op3val:0x3fca70a12e36c758; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 672, x18)

inst_932:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc0fd97e4edb94 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe268285939431 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa70a12e36c758 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc0fd97e4edb94; op2val:0xbfee268285939431; op3val:0x3fca70a12e36c758; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 688, x18)

inst_933:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc0fd97e4edb94 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe268285939431 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa70a12e36c758 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc0fd97e4edb94; op2val:0xbfee268285939431; op3val:0x3fca70a12e36c758; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 704, x18)

inst_934:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc0fd97e4edb94 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe268285939431 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa70a12e36c758 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc0fd97e4edb94; op2val:0xbfee268285939431; op3val:0x3fca70a12e36c758; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 720, x18)
addi x16,x16,2040

inst_935:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc0fd97e4edb94 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe268285939431 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa70a12e36c758 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc0fd97e4edb94; op2val:0xbfee268285939431; op3val:0x3fca70a12e36c758; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 736, x18)

inst_936:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5cb935cdfb5dc and fs2 == 1 and fe2 == 0x400 and fm2 == 0xdb227ad4c34ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x439d4f6036e9a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5cb935cdfb5dc; op2val:0xc00db227ad4c34ea; op3val:0x3fe439d4f6036e9a; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 752, x18)

inst_937:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5cb935cdfb5dc and fs2 == 1 and fe2 == 0x400 and fm2 == 0xdb227ad4c34ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x439d4f6036e9a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5cb935cdfb5dc; op2val:0xc00db227ad4c34ea; op3val:0x3fe439d4f6036e9a; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 768, x18)

inst_938:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5cb935cdfb5dc and fs2 == 1 and fe2 == 0x400 and fm2 == 0xdb227ad4c34ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x439d4f6036e9a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5cb935cdfb5dc; op2val:0xc00db227ad4c34ea; op3val:0x3fe439d4f6036e9a; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 784, x18)

inst_939:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5cb935cdfb5dc and fs2 == 1 and fe2 == 0x400 and fm2 == 0xdb227ad4c34ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x439d4f6036e9a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5cb935cdfb5dc; op2val:0xc00db227ad4c34ea; op3val:0x3fe439d4f6036e9a; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 800, x18)

inst_940:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5cb935cdfb5dc and fs2 == 1 and fe2 == 0x400 and fm2 == 0xdb227ad4c34ea and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x439d4f6036e9a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5cb935cdfb5dc; op2val:0xc00db227ad4c34ea; op3val:0x3fe439d4f6036e9a; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 816, x18)

inst_941:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7e6ab13066e00 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x14874e9e696a7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9d1526bcc4bea and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7e6ab13066e00; op2val:0xc0014874e9e696a7; op3val:0x3fd9d1526bcc4bea; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 832, x18)

inst_942:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7e6ab13066e00 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x14874e9e696a7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9d1526bcc4bea and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7e6ab13066e00; op2val:0xc0014874e9e696a7; op3val:0x3fd9d1526bcc4bea; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 848, x18)

inst_943:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7e6ab13066e00 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x14874e9e696a7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9d1526bcc4bea and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7e6ab13066e00; op2val:0xc0014874e9e696a7; op3val:0x3fd9d1526bcc4bea; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 864, x18)

inst_944:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7e6ab13066e00 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x14874e9e696a7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9d1526bcc4bea and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7e6ab13066e00; op2val:0xc0014874e9e696a7; op3val:0x3fd9d1526bcc4bea; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 880, x18)

inst_945:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7e6ab13066e00 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x14874e9e696a7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9d1526bcc4bea and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7e6ab13066e00; op2val:0xc0014874e9e696a7; op3val:0x3fd9d1526bcc4bea; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 896, x18)

inst_946:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x02ad1a456261a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7c1414b48da97 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x800d3d71025d1 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd02ad1a456261a; op2val:0xc007c1414b48da97; op3val:0x3fe800d3d71025d1; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 912, x18)

inst_947:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x02ad1a456261a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7c1414b48da97 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x800d3d71025d1 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd02ad1a456261a; op2val:0xc007c1414b48da97; op3val:0x3fe800d3d71025d1; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 928, x18)

inst_948:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x02ad1a456261a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7c1414b48da97 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x800d3d71025d1 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd02ad1a456261a; op2val:0xc007c1414b48da97; op3val:0x3fe800d3d71025d1; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 944, x18)

inst_949:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x02ad1a456261a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7c1414b48da97 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x800d3d71025d1 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd02ad1a456261a; op2val:0xc007c1414b48da97; op3val:0x3fe800d3d71025d1; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 960, x18)

inst_950:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x02ad1a456261a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7c1414b48da97 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x800d3d71025d1 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd02ad1a456261a; op2val:0xc007c1414b48da97; op3val:0x3fe800d3d71025d1; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 976, x18)

inst_951:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1b11cf0208210 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x84a699eccc969 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xadbf357ecaff0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1b11cf0208210; op2val:0xc0184a699eccc969; op3val:0x3fcadbf357ecaff0; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 992, x18)

inst_952:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1b11cf0208210 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x84a699eccc969 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xadbf357ecaff0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1b11cf0208210; op2val:0xc0184a699eccc969; op3val:0x3fcadbf357ecaff0; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1008, x18)

inst_953:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1b11cf0208210 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x84a699eccc969 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xadbf357ecaff0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1b11cf0208210; op2val:0xc0184a699eccc969; op3val:0x3fcadbf357ecaff0; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1024, x18)

inst_954:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1b11cf0208210 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x84a699eccc969 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xadbf357ecaff0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1b11cf0208210; op2val:0xc0184a699eccc969; op3val:0x3fcadbf357ecaff0; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1040, x18)

inst_955:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1b11cf0208210 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x84a699eccc969 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xadbf357ecaff0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1b11cf0208210; op2val:0xc0184a699eccc969; op3val:0x3fcadbf357ecaff0; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1056, x18)

inst_956:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d282b70597f3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x15f436be4436c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46fbc1b04524f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2d282b70597f3; op2val:0xbff15f436be4436c; op3val:0x3fe46fbc1b04524f; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1072, x18)

inst_957:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d282b70597f3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x15f436be4436c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46fbc1b04524f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2d282b70597f3; op2val:0xbff15f436be4436c; op3val:0x3fe46fbc1b04524f; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1088, x18)

inst_958:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d282b70597f3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x15f436be4436c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46fbc1b04524f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2d282b70597f3; op2val:0xbff15f436be4436c; op3val:0x3fe46fbc1b04524f; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1104, x18)

inst_959:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d282b70597f3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x15f436be4436c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46fbc1b04524f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2d282b70597f3; op2val:0xbff15f436be4436c; op3val:0x3fe46fbc1b04524f; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1120, x18)

inst_960:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d282b70597f3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x15f436be4436c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x46fbc1b04524f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2d282b70597f3; op2val:0xbff15f436be4436c; op3val:0x3fe46fbc1b04524f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1136, x18)

inst_961:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7201eb004d7ea and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c4618ffa8e0f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc91faebc53c50 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7201eb004d7ea; op2val:0xbfc3c4618ffa8e0f; op3val:0x3fbc91faebc53c50; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1152, x18)

inst_962:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7201eb004d7ea and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c4618ffa8e0f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc91faebc53c50 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7201eb004d7ea; op2val:0xbfc3c4618ffa8e0f; op3val:0x3fbc91faebc53c50; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1168, x18)

inst_963:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7201eb004d7ea and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c4618ffa8e0f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc91faebc53c50 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7201eb004d7ea; op2val:0xbfc3c4618ffa8e0f; op3val:0x3fbc91faebc53c50; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1184, x18)

inst_964:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7201eb004d7ea and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c4618ffa8e0f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc91faebc53c50 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7201eb004d7ea; op2val:0xbfc3c4618ffa8e0f; op3val:0x3fbc91faebc53c50; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1200, x18)

inst_965:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7201eb004d7ea and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c4618ffa8e0f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc91faebc53c50 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7201eb004d7ea; op2val:0xbfc3c4618ffa8e0f; op3val:0x3fbc91faebc53c50; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1216, x18)

inst_966:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x90f2d42cb7c9c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x44228901d89fb and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfba96b5d9e518 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc90f2d42cb7c9c; op2val:0xc0044228901d89fb; op3val:0x3fdfba96b5d9e518; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1232, x18)

inst_967:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x90f2d42cb7c9c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x44228901d89fb and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfba96b5d9e518 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc90f2d42cb7c9c; op2val:0xc0044228901d89fb; op3val:0x3fdfba96b5d9e518; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1248, x18)

inst_968:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x90f2d42cb7c9c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x44228901d89fb and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfba96b5d9e518 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc90f2d42cb7c9c; op2val:0xc0044228901d89fb; op3val:0x3fdfba96b5d9e518; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1264, x18)

inst_969:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x90f2d42cb7c9c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x44228901d89fb and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfba96b5d9e518 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc90f2d42cb7c9c; op2val:0xc0044228901d89fb; op3val:0x3fdfba96b5d9e518; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1280, x18)

inst_970:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x90f2d42cb7c9c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x44228901d89fb and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfba96b5d9e518 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc90f2d42cb7c9c; op2val:0xc0044228901d89fb; op3val:0x3fdfba96b5d9e518; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1296, x18)

inst_971:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73bda7c0d9605 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf38439e7953e1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6aad57ee752d5 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73bda7c0d9605; op2val:0xbfef38439e7953e1; op3val:0x3fe6aad57ee752d5; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1312, x18)

inst_972:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73bda7c0d9605 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf38439e7953e1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6aad57ee752d5 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73bda7c0d9605; op2val:0xbfef38439e7953e1; op3val:0x3fe6aad57ee752d5; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1328, x18)

inst_973:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73bda7c0d9605 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf38439e7953e1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6aad57ee752d5 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73bda7c0d9605; op2val:0xbfef38439e7953e1; op3val:0x3fe6aad57ee752d5; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1344, x18)

inst_974:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73bda7c0d9605 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf38439e7953e1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6aad57ee752d5 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73bda7c0d9605; op2val:0xbfef38439e7953e1; op3val:0x3fe6aad57ee752d5; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1360, x18)

inst_975:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73bda7c0d9605 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf38439e7953e1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6aad57ee752d5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73bda7c0d9605; op2val:0xbfef38439e7953e1; op3val:0x3fe6aad57ee752d5; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1376, x18)

inst_976:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc41301d8074e2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8bdb85c7ce93a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5d867e2ccf4dc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec41301d8074e2; op2val:0xbfc8bdb85c7ce93a; op3val:0x3fc5d867e2ccf4dc; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1392, x18)

inst_977:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc41301d8074e2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8bdb85c7ce93a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5d867e2ccf4dc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec41301d8074e2; op2val:0xbfc8bdb85c7ce93a; op3val:0x3fc5d867e2ccf4dc; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1408, x18)

inst_978:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc41301d8074e2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8bdb85c7ce93a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5d867e2ccf4dc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec41301d8074e2; op2val:0xbfc8bdb85c7ce93a; op3val:0x3fc5d867e2ccf4dc; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1424, x18)

inst_979:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc41301d8074e2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8bdb85c7ce93a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5d867e2ccf4dc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec41301d8074e2; op2val:0xbfc8bdb85c7ce93a; op3val:0x3fc5d867e2ccf4dc; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1440, x18)

inst_980:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc41301d8074e2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8bdb85c7ce93a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5d867e2ccf4dc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec41301d8074e2; op2val:0xbfc8bdb85c7ce93a; op3val:0x3fc5d867e2ccf4dc; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1456, x18)

inst_981:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x754ec500b856c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x977924cef932e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2918718e1371c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe754ec500b856c; op2val:0xbfe977924cef932e; op3val:0x3fe2918718e1371c; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1472, x18)

inst_982:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x754ec500b856c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x977924cef932e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2918718e1371c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe754ec500b856c; op2val:0xbfe977924cef932e; op3val:0x3fe2918718e1371c; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1488, x18)

inst_983:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x754ec500b856c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x977924cef932e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2918718e1371c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe754ec500b856c; op2val:0xbfe977924cef932e; op3val:0x3fe2918718e1371c; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1504, x18)

inst_984:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x754ec500b856c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x977924cef932e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2918718e1371c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe754ec500b856c; op2val:0xbfe977924cef932e; op3val:0x3fe2918718e1371c; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1520, x18)

inst_985:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x754ec500b856c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x977924cef932e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2918718e1371c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe754ec500b856c; op2val:0xbfe977924cef932e; op3val:0x3fe2918718e1371c; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1536, x18)

inst_986:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdcdcdea01cce5 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25697c687f4c1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1146a49119a9a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedcdcdea01cce5; op2val:0xbfd25697c687f4c1; op3val:0x3fd1146a49119a9a; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1552, x18)

inst_987:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdcdcdea01cce5 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25697c687f4c1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1146a49119a9a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedcdcdea01cce5; op2val:0xbfd25697c687f4c1; op3val:0x3fd1146a49119a9a; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1568, x18)

inst_988:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdcdcdea01cce5 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25697c687f4c1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1146a49119a9a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedcdcdea01cce5; op2val:0xbfd25697c687f4c1; op3val:0x3fd1146a49119a9a; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1584, x18)

inst_989:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdcdcdea01cce5 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25697c687f4c1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1146a49119a9a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedcdcdea01cce5; op2val:0xbfd25697c687f4c1; op3val:0x3fd1146a49119a9a; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1600, x18)

inst_990:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdcdcdea01cce5 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25697c687f4c1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1146a49119a9a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedcdcdea01cce5; op2val:0xbfd25697c687f4c1; op3val:0x3fd1146a49119a9a; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1616, x18)

inst_991:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4b6180eb03660 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x21320c75cbbe4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7659dbb58a146 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4b6180eb03660; op2val:0xc0121320c75cbbe4; op3val:0x3fe7659dbb58a146; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1632, x18)

inst_992:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4b6180eb03660 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x21320c75cbbe4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7659dbb58a146 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4b6180eb03660; op2val:0xc0121320c75cbbe4; op3val:0x3fe7659dbb58a146; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1648, x18)

inst_993:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4b6180eb03660 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x21320c75cbbe4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7659dbb58a146 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4b6180eb03660; op2val:0xc0121320c75cbbe4; op3val:0x3fe7659dbb58a146; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1664, x18)

inst_994:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4b6180eb03660 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x21320c75cbbe4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7659dbb58a146 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4b6180eb03660; op2val:0xc0121320c75cbbe4; op3val:0x3fe7659dbb58a146; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1680, x18)

inst_995:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4b6180eb03660 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x21320c75cbbe4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7659dbb58a146 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4b6180eb03660; op2val:0xc0121320c75cbbe4; op3val:0x3fe7659dbb58a146; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1696, x18)

inst_996:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0526498b590bb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8dc2ae21bca6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe25f303f10256 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0526498b590bb; op2val:0xbfed8dc2ae21bca6; op3val:0x3fde25f303f10256; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1712, x18)

inst_997:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0526498b590bb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8dc2ae21bca6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe25f303f10256 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0526498b590bb; op2val:0xbfed8dc2ae21bca6; op3val:0x3fde25f303f10256; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1728, x18)

inst_998:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0526498b590bb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8dc2ae21bca6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe25f303f10256 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0526498b590bb; op2val:0xbfed8dc2ae21bca6; op3val:0x3fde25f303f10256; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1744, x18)

inst_999:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0526498b590bb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8dc2ae21bca6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe25f303f10256 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0526498b590bb; op2val:0xbfed8dc2ae21bca6; op3val:0x3fde25f303f10256; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1760, x18)

inst_1000:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0526498b590bb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8dc2ae21bca6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe25f303f10256 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0526498b590bb; op2val:0xbfed8dc2ae21bca6; op3val:0x3fde25f303f10256; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1776, x18)

inst_1001:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x468fee94ec0df and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb91033884207 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x251e863376b52 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe468fee94ec0df; op2val:0xbfecb91033884207; op3val:0x3fe251e863376b52; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1792, x18)

inst_1002:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x468fee94ec0df and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb91033884207 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x251e863376b52 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe468fee94ec0df; op2val:0xbfecb91033884207; op3val:0x3fe251e863376b52; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1808, x18)

inst_1003:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x468fee94ec0df and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb91033884207 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x251e863376b52 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe468fee94ec0df; op2val:0xbfecb91033884207; op3val:0x3fe251e863376b52; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1824, x18)

inst_1004:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x468fee94ec0df and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb91033884207 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x251e863376b52 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe468fee94ec0df; op2val:0xbfecb91033884207; op3val:0x3fe251e863376b52; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1840, x18)

inst_1005:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x468fee94ec0df and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb91033884207 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x251e863376b52 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe468fee94ec0df; op2val:0xbfecb91033884207; op3val:0x3fe251e863376b52; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1856, x18)

inst_1006:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6ec05c52f0704 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1a6159c78d522 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x948b5d351a5f0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6ec05c52f0704; op2val:0xc001a6159c78d522; op3val:0x3fd948b5d351a5f0; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1872, x18)

inst_1007:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6ec05c52f0704 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1a6159c78d522 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x948b5d351a5f0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6ec05c52f0704; op2val:0xc001a6159c78d522; op3val:0x3fd948b5d351a5f0; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1888, x18)

inst_1008:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6ec05c52f0704 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1a6159c78d522 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x948b5d351a5f0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6ec05c52f0704; op2val:0xc001a6159c78d522; op3val:0x3fd948b5d351a5f0; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1904, x18)

inst_1009:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6ec05c52f0704 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1a6159c78d522 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x948b5d351a5f0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6ec05c52f0704; op2val:0xc001a6159c78d522; op3val:0x3fd948b5d351a5f0; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1920, x18)

inst_1010:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6ec05c52f0704 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1a6159c78d522 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x948b5d351a5f0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6ec05c52f0704; op2val:0xc001a6159c78d522; op3val:0x3fd948b5d351a5f0; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1936, x18)

inst_1011:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x05f1809e654d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x102ce7496f3fc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x167e8ad2759cc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb05f1809e654d0; op2val:0xc01102ce7496f3fc; op3val:0x3fd167e8ad2759cc; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1952, x18)

inst_1012:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x05f1809e654d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x102ce7496f3fc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x167e8ad2759cc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb05f1809e654d0; op2val:0xc01102ce7496f3fc; op3val:0x3fd167e8ad2759cc; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1968, x18)

inst_1013:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x05f1809e654d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x102ce7496f3fc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x167e8ad2759cc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb05f1809e654d0; op2val:0xc01102ce7496f3fc; op3val:0x3fd167e8ad2759cc; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1984, x18)

inst_1014:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x05f1809e654d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x102ce7496f3fc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x167e8ad2759cc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb05f1809e654d0; op2val:0xc01102ce7496f3fc; op3val:0x3fd167e8ad2759cc; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 2000, x18)

inst_1015:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x05f1809e654d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x102ce7496f3fc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x167e8ad2759cc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb05f1809e654d0; op2val:0xc01102ce7496f3fc; op3val:0x3fd167e8ad2759cc; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_9)

inst_1016:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x42472c14be9a0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00c2fbfbd6db4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x433ca33cf8ce8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc42472c14be9a0; op2val:0xc0000c2fbfbd6db4; op3val:0x3fd433ca33cf8ce8; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x42472c14be9a0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00c2fbfbd6db4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x433ca33cf8ce8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc42472c14be9a0; op2val:0xc0000c2fbfbd6db4; op3val:0x3fd433ca33cf8ce8; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 16, x18)

inst_1018:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x42472c14be9a0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00c2fbfbd6db4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x433ca33cf8ce8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc42472c14be9a0; op2val:0xc0000c2fbfbd6db4; op3val:0x3fd433ca33cf8ce8; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 32, x18)

inst_1019:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x42472c14be9a0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00c2fbfbd6db4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x433ca33cf8ce8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc42472c14be9a0; op2val:0xc0000c2fbfbd6db4; op3val:0x3fd433ca33cf8ce8; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 48, x18)
addi x16,x16,2040

inst_1020:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x42472c14be9a0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00c2fbfbd6db4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x433ca33cf8ce8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc42472c14be9a0; op2val:0xc0000c2fbfbd6db4; op3val:0x3fd433ca33cf8ce8; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 64, x18)

inst_1021:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6b443326972eb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x173f2ad4e1a56 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8c40f64eea536 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6b443326972eb; op2val:0xbfe173f2ad4e1a56; op3val:0x3fd8c40f64eea536; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 80, x18)

inst_1022:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6b443326972eb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x173f2ad4e1a56 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8c40f64eea536 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6b443326972eb; op2val:0xbfe173f2ad4e1a56; op3val:0x3fd8c40f64eea536; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 96, x18)

inst_1023:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6b443326972eb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x173f2ad4e1a56 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8c40f64eea536 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6b443326972eb; op2val:0xbfe173f2ad4e1a56; op3val:0x3fd8c40f64eea536; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 112, x18)

inst_1024:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6b443326972eb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x173f2ad4e1a56 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8c40f64eea536 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6b443326972eb; op2val:0xbfe173f2ad4e1a56; op3val:0x3fd8c40f64eea536; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 128, x18)

inst_1025:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6b443326972eb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x173f2ad4e1a56 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8c40f64eea536 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6b443326972eb; op2val:0xbfe173f2ad4e1a56; op3val:0x3fd8c40f64eea536; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 144, x18)

inst_1026:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x393b0214d2ff0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1fe61b0d6c780 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6042b372dd308 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc393b0214d2ff0; op2val:0xc011fe61b0d6c780; op3val:0x3fe6042b372dd308; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 160, x18)

inst_1027:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x393b0214d2ff0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1fe61b0d6c780 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6042b372dd308 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc393b0214d2ff0; op2val:0xc011fe61b0d6c780; op3val:0x3fe6042b372dd308; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 176, x18)

inst_1028:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x393b0214d2ff0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1fe61b0d6c780 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6042b372dd308 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc393b0214d2ff0; op2val:0xc011fe61b0d6c780; op3val:0x3fe6042b372dd308; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 192, x18)

inst_1029:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x393b0214d2ff0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1fe61b0d6c780 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6042b372dd308 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc393b0214d2ff0; op2val:0xc011fe61b0d6c780; op3val:0x3fe6042b372dd308; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 208, x18)

inst_1030:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x393b0214d2ff0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1fe61b0d6c780 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6042b372dd308 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc393b0214d2ff0; op2val:0xc011fe61b0d6c780; op3val:0x3fe6042b372dd308; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 224, x18)

inst_1031:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42930027c513f and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0d42c21df8237 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x534895a8fdc70 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42930027c513f; op2val:0xbfb0d42c21df8237; op3val:0x3fa534895a8fdc70; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 240, x18)

inst_1032:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42930027c513f and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0d42c21df8237 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x534895a8fdc70 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42930027c513f; op2val:0xbfb0d42c21df8237; op3val:0x3fa534895a8fdc70; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 256, x18)

inst_1033:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42930027c513f and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0d42c21df8237 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x534895a8fdc70 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42930027c513f; op2val:0xbfb0d42c21df8237; op3val:0x3fa534895a8fdc70; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 272, x18)

inst_1034:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42930027c513f and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0d42c21df8237 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x534895a8fdc70 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42930027c513f; op2val:0xbfb0d42c21df8237; op3val:0x3fa534895a8fdc70; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 288, x18)

inst_1035:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42930027c513f and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0d42c21df8237 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x534895a8fdc70 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42930027c513f; op2val:0xbfb0d42c21df8237; op3val:0x3fa534895a8fdc70; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 304, x18)

inst_1036:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3bf8ebe405048 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4d9fa2ff77091 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9bc7d3a0f24b2 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3bf8ebe405048; op2val:0xc014d9fa2ff77091; op3val:0x3fe9bc7d3a0f24b2; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 320, x18)

inst_1037:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3bf8ebe405048 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4d9fa2ff77091 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9bc7d3a0f24b2 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3bf8ebe405048; op2val:0xc014d9fa2ff77091; op3val:0x3fe9bc7d3a0f24b2; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 336, x18)

inst_1038:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3bf8ebe405048 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4d9fa2ff77091 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9bc7d3a0f24b2 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3bf8ebe405048; op2val:0xc014d9fa2ff77091; op3val:0x3fe9bc7d3a0f24b2; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 352, x18)

inst_1039:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3bf8ebe405048 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4d9fa2ff77091 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9bc7d3a0f24b2 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3bf8ebe405048; op2val:0xc014d9fa2ff77091; op3val:0x3fe9bc7d3a0f24b2; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 368, x18)

inst_1040:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3bf8ebe405048 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4d9fa2ff77091 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9bc7d3a0f24b2 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc3bf8ebe405048; op2val:0xc014d9fa2ff77091; op3val:0x3fe9bc7d3a0f24b2; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 384, x18)

inst_1041:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbbdb271acf804 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9fe38208c3e05 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x68895c964fbc5 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbbdb271acf804; op2val:0xc009fe38208c3e05; op3val:0x3fe68895c964fbc5; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 400, x18)

inst_1042:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbbdb271acf804 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9fe38208c3e05 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x68895c964fbc5 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbbdb271acf804; op2val:0xc009fe38208c3e05; op3val:0x3fe68895c964fbc5; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 416, x18)

inst_1043:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbbdb271acf804 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9fe38208c3e05 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x68895c964fbc5 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbbdb271acf804; op2val:0xc009fe38208c3e05; op3val:0x3fe68895c964fbc5; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 432, x18)

inst_1044:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbbdb271acf804 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9fe38208c3e05 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x68895c964fbc5 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbbdb271acf804; op2val:0xc009fe38208c3e05; op3val:0x3fe68895c964fbc5; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 448, x18)

inst_1045:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbbdb271acf804 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9fe38208c3e05 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x68895c964fbc5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbbdb271acf804; op2val:0xc009fe38208c3e05; op3val:0x3fe68895c964fbc5; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 464, x18)

inst_1046:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7fe2999599722 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xd53eeb5542f77 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x5fd43e9290ff0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7fe2999599722; op2val:0xbfbd53eeb5542f77; op3val:0x3fa5fd43e9290ff0; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 480, x18)

inst_1047:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7fe2999599722 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xd53eeb5542f77 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x5fd43e9290ff0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7fe2999599722; op2val:0xbfbd53eeb5542f77; op3val:0x3fa5fd43e9290ff0; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 496, x18)

inst_1048:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7fe2999599722 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xd53eeb5542f77 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x5fd43e9290ff0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7fe2999599722; op2val:0xbfbd53eeb5542f77; op3val:0x3fa5fd43e9290ff0; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 512, x18)

inst_1049:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7fe2999599722 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xd53eeb5542f77 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x5fd43e9290ff0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7fe2999599722; op2val:0xbfbd53eeb5542f77; op3val:0x3fa5fd43e9290ff0; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 528, x18)

inst_1050:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7fe2999599722 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xd53eeb5542f77 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x5fd43e9290ff0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7fe2999599722; op2val:0xbfbd53eeb5542f77; op3val:0x3fa5fd43e9290ff0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 544, x18)

inst_1051:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x323636adde334 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9e1c8d4827133 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xef55d35952758 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc323636adde334; op2val:0xc009e1c8d4827133; op3val:0x3fdef55d35952758; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 560, x18)

inst_1052:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x323636adde334 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9e1c8d4827133 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xef55d35952758 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc323636adde334; op2val:0xc009e1c8d4827133; op3val:0x3fdef55d35952758; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 576, x18)

inst_1053:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x323636adde334 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9e1c8d4827133 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xef55d35952758 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc323636adde334; op2val:0xc009e1c8d4827133; op3val:0x3fdef55d35952758; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 592, x18)

inst_1054:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x323636adde334 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9e1c8d4827133 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xef55d35952758 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc323636adde334; op2val:0xc009e1c8d4827133; op3val:0x3fdef55d35952758; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 608, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x323636adde334 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9e1c8d4827133 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xef55d35952758 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc323636adde334; op2val:0xc009e1c8d4827133; op3val:0x3fdef55d35952758; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 624, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42f12c0c5db80 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x7c64897de7ffb and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdfdcd10974f10 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42f12c0c5db80; op2val:0xbfb7c64897de7ffb; op3val:0x3fadfdcd10974f10; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 640, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42f12c0c5db80 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x7c64897de7ffb and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdfdcd10974f10 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42f12c0c5db80; op2val:0xbfb7c64897de7ffb; op3val:0x3fadfdcd10974f10; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 656, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42f12c0c5db80 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x7c64897de7ffb and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdfdcd10974f10 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42f12c0c5db80; op2val:0xbfb7c64897de7ffb; op3val:0x3fadfdcd10974f10; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 672, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42f12c0c5db80 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x7c64897de7ffb and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdfdcd10974f10 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42f12c0c5db80; op2val:0xbfb7c64897de7ffb; op3val:0x3fadfdcd10974f10; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 688, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42f12c0c5db80 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x7c64897de7ffb and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdfdcd10974f10 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42f12c0c5db80; op2val:0xbfb7c64897de7ffb; op3val:0x3fadfdcd10974f10; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 704, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf8678ca4e602 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xa3cc10257bb57 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x7c0d4a0bd2bc0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf8678ca4e602; op2val:0xbfaa3cc10257bb57; op3val:0x3f97c0d4a0bd2bc0; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 720, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf8678ca4e602 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xa3cc10257bb57 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x7c0d4a0bd2bc0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf8678ca4e602; op2val:0xbfaa3cc10257bb57; op3val:0x3f97c0d4a0bd2bc0; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 736, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf8678ca4e602 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xa3cc10257bb57 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x7c0d4a0bd2bc0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf8678ca4e602; op2val:0xbfaa3cc10257bb57; op3val:0x3f97c0d4a0bd2bc0; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 752, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf8678ca4e602 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xa3cc10257bb57 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x7c0d4a0bd2bc0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf8678ca4e602; op2val:0xbfaa3cc10257bb57; op3val:0x3f97c0d4a0bd2bc0; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 768, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcf8678ca4e602 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xa3cc10257bb57 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x7c0d4a0bd2bc0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdcf8678ca4e602; op2val:0xbfaa3cc10257bb57; op3val:0x3f97c0d4a0bd2bc0; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 784, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8d7b5e1787baf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd0050c909d982 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x683bb8bae77bb and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8d7b5e1787baf; op2val:0xbfed0050c909d982; op3val:0x3fe683bb8bae77bb; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 800, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8d7b5e1787baf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd0050c909d982 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x683bb8bae77bb and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8d7b5e1787baf; op2val:0xbfed0050c909d982; op3val:0x3fe683bb8bae77bb; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 816, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8d7b5e1787baf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd0050c909d982 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x683bb8bae77bb and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8d7b5e1787baf; op2val:0xbfed0050c909d982; op3val:0x3fe683bb8bae77bb; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 832, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8d7b5e1787baf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd0050c909d982 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x683bb8bae77bb and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8d7b5e1787baf; op2val:0xbfed0050c909d982; op3val:0x3fe683bb8bae77bb; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 848, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8d7b5e1787baf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd0050c909d982 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x683bb8bae77bb and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8d7b5e1787baf; op2val:0xbfed0050c909d982; op3val:0x3fe683bb8bae77bb; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 864, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x28a1e22f9c158 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0251bd859fde7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x2b51dcc6e5b40 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb28a1e22f9c158; op2val:0xbfd0251bd859fde7; op3val:0x3f92b51dcc6e5b40; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 880, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x28a1e22f9c158 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0251bd859fde7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x2b51dcc6e5b40 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb28a1e22f9c158; op2val:0xbfd0251bd859fde7; op3val:0x3f92b51dcc6e5b40; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 896, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x28a1e22f9c158 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0251bd859fde7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x2b51dcc6e5b40 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb28a1e22f9c158; op2val:0xbfd0251bd859fde7; op3val:0x3f92b51dcc6e5b40; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 912, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x28a1e22f9c158 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0251bd859fde7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x2b51dcc6e5b40 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb28a1e22f9c158; op2val:0xbfd0251bd859fde7; op3val:0x3f92b51dcc6e5b40; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 928, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x28a1e22f9c158 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0251bd859fde7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x2b51dcc6e5b40 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb28a1e22f9c158; op2val:0xbfd0251bd859fde7; op3val:0x3f92b51dcc6e5b40; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 944, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x755865d71ab38 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x687f4ff5d668d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x06defd56e87d2 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb755865d71ab38; op2val:0xc00687f4ff5d668d; op3val:0x3fd06defd56e87d2; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 960, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x755865d71ab38 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x687f4ff5d668d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x06defd56e87d2 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb755865d71ab38; op2val:0xc00687f4ff5d668d; op3val:0x3fd06defd56e87d2; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 976, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x755865d71ab38 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x687f4ff5d668d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x06defd56e87d2 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb755865d71ab38; op2val:0xc00687f4ff5d668d; op3val:0x3fd06defd56e87d2; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 992, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x755865d71ab38 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x687f4ff5d668d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x06defd56e87d2 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb755865d71ab38; op2val:0xc00687f4ff5d668d; op3val:0x3fd06defd56e87d2; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1008, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x755865d71ab38 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x687f4ff5d668d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x06defd56e87d2 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb755865d71ab38; op2val:0xc00687f4ff5d668d; op3val:0x3fd06defd56e87d2; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1024, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc93c0ed77e17 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8ec7f5176ca3f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8c1d79da0cdb2 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefc93c0ed77e17; op2val:0xbfd8ec7f5176ca3f; op3val:0x3fd8c1d79da0cdb2; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1040, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc93c0ed77e17 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8ec7f5176ca3f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8c1d79da0cdb2 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefc93c0ed77e17; op2val:0xbfd8ec7f5176ca3f; op3val:0x3fd8c1d79da0cdb2; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1056, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc93c0ed77e17 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8ec7f5176ca3f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8c1d79da0cdb2 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefc93c0ed77e17; op2val:0xbfd8ec7f5176ca3f; op3val:0x3fd8c1d79da0cdb2; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1072, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc93c0ed77e17 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8ec7f5176ca3f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8c1d79da0cdb2 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefc93c0ed77e17; op2val:0xbfd8ec7f5176ca3f; op3val:0x3fd8c1d79da0cdb2; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1088, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc93c0ed77e17 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8ec7f5176ca3f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8c1d79da0cdb2 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefc93c0ed77e17; op2val:0xbfd8ec7f5176ca3f; op3val:0x3fd8c1d79da0cdb2; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1104, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0631b23d77622 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x60a92ced6bbed and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x693199e6e3b98 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0631b23d77622; op2val:0xbff60a92ced6bbed; op3val:0x3fd693199e6e3b98; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1120, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0631b23d77622 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x60a92ced6bbed and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x693199e6e3b98 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0631b23d77622; op2val:0xbff60a92ced6bbed; op3val:0x3fd693199e6e3b98; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1136, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0631b23d77622 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x60a92ced6bbed and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x693199e6e3b98 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0631b23d77622; op2val:0xbff60a92ced6bbed; op3val:0x3fd693199e6e3b98; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1152, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0631b23d77622 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x60a92ced6bbed and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x693199e6e3b98 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0631b23d77622; op2val:0xbff60a92ced6bbed; op3val:0x3fd693199e6e3b98; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1168, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0631b23d77622 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x60a92ced6bbed and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x693199e6e3b98 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0631b23d77622; op2val:0xbff60a92ced6bbed; op3val:0x3fd693199e6e3b98; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1184, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a87936b41cce and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3b1ebcd6ca027 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe5a4314ed5738 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a87936b41cce; op2val:0xbfe3b1ebcd6ca027; op3val:0x3fde5a4314ed5738; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1200, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a87936b41cce and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3b1ebcd6ca027 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe5a4314ed5738 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a87936b41cce; op2val:0xbfe3b1ebcd6ca027; op3val:0x3fde5a4314ed5738; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1216, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a87936b41cce and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3b1ebcd6ca027 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe5a4314ed5738 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a87936b41cce; op2val:0xbfe3b1ebcd6ca027; op3val:0x3fde5a4314ed5738; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1232, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a87936b41cce and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3b1ebcd6ca027 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe5a4314ed5738 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a87936b41cce; op2val:0xbfe3b1ebcd6ca027; op3val:0x3fde5a4314ed5738; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1248, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a87936b41cce and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3b1ebcd6ca027 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe5a4314ed5738 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a87936b41cce; op2val:0xbfe3b1ebcd6ca027; op3val:0x3fde5a4314ed5738; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1264, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2de7b6372bde6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b06ad5e5829b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9940f3dfe6f27 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2de7b6372bde6; op2val:0xc005b06ad5e5829b; op3val:0x3fe9940f3dfe6f27; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1280, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2de7b6372bde6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b06ad5e5829b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9940f3dfe6f27 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2de7b6372bde6; op2val:0xc005b06ad5e5829b; op3val:0x3fe9940f3dfe6f27; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1296, x18)

inst_1098:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2de7b6372bde6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b06ad5e5829b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9940f3dfe6f27 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2de7b6372bde6; op2val:0xc005b06ad5e5829b; op3val:0x3fe9940f3dfe6f27; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1312, x18)

inst_1099:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2de7b6372bde6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b06ad5e5829b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9940f3dfe6f27 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2de7b6372bde6; op2val:0xc005b06ad5e5829b; op3val:0x3fe9940f3dfe6f27; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1328, x18)

inst_1100:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2de7b6372bde6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5b06ad5e5829b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9940f3dfe6f27 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2de7b6372bde6; op2val:0xc005b06ad5e5829b; op3val:0x3fe9940f3dfe6f27; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1344, x18)

inst_1101:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf477a2665924c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x048be47e9496f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfd5afc97221d0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcf477a2665924c; op2val:0xc00048be47e9496f; op3val:0x3fdfd5afc97221d0; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1360, x18)

inst_1102:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf477a2665924c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x048be47e9496f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfd5afc97221d0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcf477a2665924c; op2val:0xc00048be47e9496f; op3val:0x3fdfd5afc97221d0; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1376, x18)

inst_1103:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf477a2665924c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x048be47e9496f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfd5afc97221d0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcf477a2665924c; op2val:0xc00048be47e9496f; op3val:0x3fdfd5afc97221d0; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1392, x18)

inst_1104:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf477a2665924c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x048be47e9496f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfd5afc97221d0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcf477a2665924c; op2val:0xc00048be47e9496f; op3val:0x3fdfd5afc97221d0; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1408, x18)
addi x16,x16,2040

inst_1105:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf477a2665924c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x048be47e9496f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfd5afc97221d0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcf477a2665924c; op2val:0xc00048be47e9496f; op3val:0x3fdfd5afc97221d0; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1424, x18)

inst_1106:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd0364e415dbbd and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x231155b99e0c7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x07e695010edb0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed0364e415dbbd; op2val:0xbfa231155b99e0c7; op3val:0x3fa07e695010edb0; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1440, x18)

inst_1107:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd0364e415dbbd and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x231155b99e0c7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x07e695010edb0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed0364e415dbbd; op2val:0xbfa231155b99e0c7; op3val:0x3fa07e695010edb0; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1456, x18)

inst_1108:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd0364e415dbbd and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x231155b99e0c7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x07e695010edb0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed0364e415dbbd; op2val:0xbfa231155b99e0c7; op3val:0x3fa07e695010edb0; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1472, x18)

inst_1109:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd0364e415dbbd and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x231155b99e0c7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x07e695010edb0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed0364e415dbbd; op2val:0xbfa231155b99e0c7; op3val:0x3fa07e695010edb0; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1488, x18)

inst_1110:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd0364e415dbbd and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x231155b99e0c7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x07e695010edb0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed0364e415dbbd; op2val:0xbfa231155b99e0c7; op3val:0x3fa07e695010edb0; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1504, x18)

inst_1111:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4594ee4aed52c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc8fd7b84cfe31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2299d4de373a8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4594ee4aed52c; op2val:0xbfec8fd7b84cfe31; op3val:0x3fe2299d4de373a8; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1520, x18)

inst_1112:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4594ee4aed52c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc8fd7b84cfe31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2299d4de373a8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4594ee4aed52c; op2val:0xbfec8fd7b84cfe31; op3val:0x3fe2299d4de373a8; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1536, x18)

inst_1113:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4594ee4aed52c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc8fd7b84cfe31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2299d4de373a8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4594ee4aed52c; op2val:0xbfec8fd7b84cfe31; op3val:0x3fe2299d4de373a8; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1552, x18)

inst_1114:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4594ee4aed52c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc8fd7b84cfe31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2299d4de373a8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4594ee4aed52c; op2val:0xbfec8fd7b84cfe31; op3val:0x3fe2299d4de373a8; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1568, x18)

inst_1115:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4594ee4aed52c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc8fd7b84cfe31 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2299d4de373a8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4594ee4aed52c; op2val:0xbfec8fd7b84cfe31; op3val:0x3fe2299d4de373a8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1584, x18)

inst_1116:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8dce228bf6098 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x420925172d1c4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf46b7d5611001 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8dce228bf6098; op2val:0xc00420925172d1c4; op3val:0x3fef46b7d5611001; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1600, x18)

inst_1117:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8dce228bf6098 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x420925172d1c4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf46b7d5611001 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8dce228bf6098; op2val:0xc00420925172d1c4; op3val:0x3fef46b7d5611001; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1616, x18)

inst_1118:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8dce228bf6098 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x420925172d1c4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf46b7d5611001 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8dce228bf6098; op2val:0xc00420925172d1c4; op3val:0x3fef46b7d5611001; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1632, x18)

inst_1119:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8dce228bf6098 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x420925172d1c4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf46b7d5611001 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8dce228bf6098; op2val:0xc00420925172d1c4; op3val:0x3fef46b7d5611001; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1648, x18)

inst_1120:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8dce228bf6098 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x420925172d1c4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf46b7d5611001 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8dce228bf6098; op2val:0xc00420925172d1c4; op3val:0x3fef46b7d5611001; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1664, x18)

inst_1121:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1974a2ff69374 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0faa72c89cbbf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2aadde331e042 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1974a2ff69374; op2val:0xbff0faa72c89cbbf; op3val:0x3fd2aadde331e042; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1680, x18)

inst_1122:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1974a2ff69374 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0faa72c89cbbf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2aadde331e042 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1974a2ff69374; op2val:0xbff0faa72c89cbbf; op3val:0x3fd2aadde331e042; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1696, x18)

inst_1123:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1974a2ff69374 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0faa72c89cbbf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2aadde331e042 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1974a2ff69374; op2val:0xbff0faa72c89cbbf; op3val:0x3fd2aadde331e042; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1712, x18)

inst_1124:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1974a2ff69374 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0faa72c89cbbf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2aadde331e042 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1974a2ff69374; op2val:0xbff0faa72c89cbbf; op3val:0x3fd2aadde331e042; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1728, x18)

inst_1125:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1974a2ff69374 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0faa72c89cbbf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2aadde331e042 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1974a2ff69374; op2val:0xbff0faa72c89cbbf; op3val:0x3fd2aadde331e042; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1744, x18)

inst_1126:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b88deb8dee5a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9c4494a88a2b6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc89c3b727b71a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b88deb8dee5a; op2val:0xbff9c4494a88a2b6; op3val:0x3fec89c3b727b71a; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1760, x18)

inst_1127:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b88deb8dee5a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9c4494a88a2b6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc89c3b727b71a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b88deb8dee5a; op2val:0xbff9c4494a88a2b6; op3val:0x3fec89c3b727b71a; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1776, x18)

inst_1128:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b88deb8dee5a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9c4494a88a2b6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc89c3b727b71a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b88deb8dee5a; op2val:0xbff9c4494a88a2b6; op3val:0x3fec89c3b727b71a; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1792, x18)

inst_1129:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b88deb8dee5a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9c4494a88a2b6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc89c3b727b71a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b88deb8dee5a; op2val:0xbff9c4494a88a2b6; op3val:0x3fec89c3b727b71a; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1808, x18)

inst_1130:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b88deb8dee5a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9c4494a88a2b6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc89c3b727b71a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b88deb8dee5a; op2val:0xbff9c4494a88a2b6; op3val:0x3fec89c3b727b71a; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1824, x18)

inst_1131:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8c88b03cbda00 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x09426c2dc44be and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ae0613cde624 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8c88b03cbda00; op2val:0xbff09426c2dc44be; op3val:0x3fe9ae0613cde624; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1840, x18)

inst_1132:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8c88b03cbda00 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x09426c2dc44be and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ae0613cde624 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8c88b03cbda00; op2val:0xbff09426c2dc44be; op3val:0x3fe9ae0613cde624; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1856, x18)

inst_1133:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8c88b03cbda00 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x09426c2dc44be and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ae0613cde624 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8c88b03cbda00; op2val:0xbff09426c2dc44be; op3val:0x3fe9ae0613cde624; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1872, x18)

inst_1134:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8c88b03cbda00 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x09426c2dc44be and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ae0613cde624 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8c88b03cbda00; op2val:0xbff09426c2dc44be; op3val:0x3fe9ae0613cde624; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1888, x18)

inst_1135:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8c88b03cbda00 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x09426c2dc44be and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9ae0613cde624 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8c88b03cbda00; op2val:0xbff09426c2dc44be; op3val:0x3fe9ae0613cde624; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1904, x18)

inst_1136:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3666044bbf18c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0de9625e45378 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x47442ca2dbc55 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3666044bbf18c; op2val:0xbff0de9625e45378; op3val:0x3fe47442ca2dbc55; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1920, x18)

inst_1137:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3666044bbf18c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0de9625e45378 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x47442ca2dbc55 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3666044bbf18c; op2val:0xbff0de9625e45378; op3val:0x3fe47442ca2dbc55; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1936, x18)

inst_1138:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3666044bbf18c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0de9625e45378 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x47442ca2dbc55 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3666044bbf18c; op2val:0xbff0de9625e45378; op3val:0x3fe47442ca2dbc55; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1952, x18)

inst_1139:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3666044bbf18c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0de9625e45378 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x47442ca2dbc55 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3666044bbf18c; op2val:0xbff0de9625e45378; op3val:0x3fe47442ca2dbc55; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1968, x18)

inst_1140:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3666044bbf18c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0de9625e45378 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x47442ca2dbc55 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3666044bbf18c; op2val:0xbff0de9625e45378; op3val:0x3fe47442ca2dbc55; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1984, x18)

inst_1141:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2356bf0926058 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdbb8969deac58 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0eb2031be9b81 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2356bf0926058; op2val:0xbffdbb8969deac58; op3val:0x3fe0eb2031be9b81; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 2000, x18)

inst_1142:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2356bf0926058 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdbb8969deac58 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0eb2031be9b81 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2356bf0926058; op2val:0xbffdbb8969deac58; op3val:0x3fe0eb2031be9b81; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_10)

inst_1143:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2356bf0926058 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdbb8969deac58 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0eb2031be9b81 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2356bf0926058; op2val:0xbffdbb8969deac58; op3val:0x3fe0eb2031be9b81; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 0, x18)

inst_1144:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2356bf0926058 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdbb8969deac58 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0eb2031be9b81 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2356bf0926058; op2val:0xbffdbb8969deac58; op3val:0x3fe0eb2031be9b81; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 16, x18)

inst_1145:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2356bf0926058 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdbb8969deac58 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0eb2031be9b81 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2356bf0926058; op2val:0xbffdbb8969deac58; op3val:0x3fe0eb2031be9b81; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 32, x18)

inst_1146:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1efc001f12b78 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf56faba20ba44 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x19102df46cda0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1efc001f12b78; op2val:0xbfdf56faba20ba44; op3val:0x3fd19102df46cda0; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 48, x18)

inst_1147:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1efc001f12b78 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf56faba20ba44 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x19102df46cda0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1efc001f12b78; op2val:0xbfdf56faba20ba44; op3val:0x3fd19102df46cda0; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 64, x18)

inst_1148:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1efc001f12b78 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf56faba20ba44 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x19102df46cda0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1efc001f12b78; op2val:0xbfdf56faba20ba44; op3val:0x3fd19102df46cda0; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 80, x18)

inst_1149:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1efc001f12b78 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf56faba20ba44 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x19102df46cda0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1efc001f12b78; op2val:0xbfdf56faba20ba44; op3val:0x3fd19102df46cda0; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 96, x18)

inst_1150:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1efc001f12b78 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf56faba20ba44 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x19102df46cda0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1efc001f12b78; op2val:0xbfdf56faba20ba44; op3val:0x3fd19102df46cda0; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 112, x18)

inst_1151:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18391f56888fb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9898418295216 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf41b391f63ac and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe18391f56888fb; op2val:0xbff9898418295216; op3val:0x3febf41b391f63ac; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 128, x18)

inst_1152:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18391f56888fb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9898418295216 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf41b391f63ac and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe18391f56888fb; op2val:0xbff9898418295216; op3val:0x3febf41b391f63ac; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 144, x18)

inst_1153:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18391f56888fb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9898418295216 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf41b391f63ac and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe18391f56888fb; op2val:0xbff9898418295216; op3val:0x3febf41b391f63ac; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 160, x18)

inst_1154:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18391f56888fb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9898418295216 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf41b391f63ac and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe18391f56888fb; op2val:0xbff9898418295216; op3val:0x3febf41b391f63ac; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 176, x18)

inst_1155:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18391f56888fb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9898418295216 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf41b391f63ac and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe18391f56888fb; op2val:0xbff9898418295216; op3val:0x3febf41b391f63ac; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 192, x18)

inst_1156:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc18654790efe2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe8fe6cc1bb109 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad5369a3b78a2 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec18654790efe2; op2val:0xbfde8fe6cc1bb109; op3val:0x3fdad5369a3b78a2; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 208, x18)

inst_1157:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc18654790efe2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe8fe6cc1bb109 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad5369a3b78a2 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec18654790efe2; op2val:0xbfde8fe6cc1bb109; op3val:0x3fdad5369a3b78a2; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 224, x18)

inst_1158:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc18654790efe2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe8fe6cc1bb109 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad5369a3b78a2 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec18654790efe2; op2val:0xbfde8fe6cc1bb109; op3val:0x3fdad5369a3b78a2; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 240, x18)

inst_1159:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc18654790efe2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe8fe6cc1bb109 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad5369a3b78a2 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec18654790efe2; op2val:0xbfde8fe6cc1bb109; op3val:0x3fdad5369a3b78a2; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 256, x18)

inst_1160:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc18654790efe2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe8fe6cc1bb109 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad5369a3b78a2 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec18654790efe2; op2val:0xbfde8fe6cc1bb109; op3val:0x3fdad5369a3b78a2; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 272, x18)

inst_1161:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0dba560d6d311 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9adaaafd7ed93 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0e2d2a79c421 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0dba560d6d311; op2val:0xbff9adaaafd7ed93; op3val:0x3feb0e2d2a79c421; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 288, x18)

inst_1162:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0dba560d6d311 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9adaaafd7ed93 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0e2d2a79c421 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0dba560d6d311; op2val:0xbff9adaaafd7ed93; op3val:0x3feb0e2d2a79c421; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 304, x18)

inst_1163:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0dba560d6d311 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9adaaafd7ed93 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0e2d2a79c421 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0dba560d6d311; op2val:0xbff9adaaafd7ed93; op3val:0x3feb0e2d2a79c421; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 320, x18)

inst_1164:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0dba560d6d311 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9adaaafd7ed93 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0e2d2a79c421 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0dba560d6d311; op2val:0xbff9adaaafd7ed93; op3val:0x3feb0e2d2a79c421; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 336, x18)

inst_1165:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0dba560d6d311 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9adaaafd7ed93 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0e2d2a79c421 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0dba560d6d311; op2val:0xbff9adaaafd7ed93; op3val:0x3feb0e2d2a79c421; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 352, x18)

inst_1166:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x94118ee35484c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x46311f37dd73e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x016df24c1260c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd94118ee35484c; op2val:0xbff46311f37dd73e; op3val:0x3fe016df24c1260c; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 368, x18)

inst_1167:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x94118ee35484c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x46311f37dd73e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x016df24c1260c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd94118ee35484c; op2val:0xbff46311f37dd73e; op3val:0x3fe016df24c1260c; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 384, x18)

inst_1168:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x94118ee35484c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x46311f37dd73e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x016df24c1260c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd94118ee35484c; op2val:0xbff46311f37dd73e; op3val:0x3fe016df24c1260c; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 400, x18)

inst_1169:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x94118ee35484c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x46311f37dd73e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x016df24c1260c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd94118ee35484c; op2val:0xbff46311f37dd73e; op3val:0x3fe016df24c1260c; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 416, x18)

inst_1170:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x94118ee35484c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x46311f37dd73e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x016df24c1260c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd94118ee35484c; op2val:0xbff46311f37dd73e; op3val:0x3fe016df24c1260c; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 432, x18)

inst_1171:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1df095384255b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa42e634b38e3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd55284f32bac1 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1df095384255b; op2val:0xbffa42e634b38e3d; op3val:0x3fed55284f32bac1; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 448, x18)

inst_1172:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1df095384255b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa42e634b38e3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd55284f32bac1 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1df095384255b; op2val:0xbffa42e634b38e3d; op3val:0x3fed55284f32bac1; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 464, x18)

inst_1173:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1df095384255b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa42e634b38e3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd55284f32bac1 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1df095384255b; op2val:0xbffa42e634b38e3d; op3val:0x3fed55284f32bac1; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 480, x18)

inst_1174:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1df095384255b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa42e634b38e3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd55284f32bac1 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1df095384255b; op2val:0xbffa42e634b38e3d; op3val:0x3fed55284f32bac1; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 496, x18)

inst_1175:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1df095384255b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa42e634b38e3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd55284f32bac1 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1df095384255b; op2val:0xbffa42e634b38e3d; op3val:0x3fed55284f32bac1; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 512, x18)

inst_1176:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa4f7a7ea66086 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x2c364d8eb2613 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xedab848d3f380 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea4f7a7ea66086; op2val:0xbfa2c364d8eb2613; op3val:0x3f9edab848d3f380; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 528, x18)

inst_1177:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa4f7a7ea66086 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x2c364d8eb2613 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xedab848d3f380 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea4f7a7ea66086; op2val:0xbfa2c364d8eb2613; op3val:0x3f9edab848d3f380; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 544, x18)

inst_1178:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa4f7a7ea66086 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x2c364d8eb2613 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xedab848d3f380 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea4f7a7ea66086; op2val:0xbfa2c364d8eb2613; op3val:0x3f9edab848d3f380; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 560, x18)

inst_1179:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa4f7a7ea66086 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x2c364d8eb2613 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xedab848d3f380 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea4f7a7ea66086; op2val:0xbfa2c364d8eb2613; op3val:0x3f9edab848d3f380; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 576, x18)

inst_1180:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa4f7a7ea66086 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x2c364d8eb2613 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xedab848d3f380 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea4f7a7ea66086; op2val:0xbfa2c364d8eb2613; op3val:0x3f9edab848d3f380; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 592, x18)

inst_1181:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x389c62efde540 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x6030a08cc03f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xae126969fccc0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8389c62efde540; op2val:0xc046030a08cc03f7; op3val:0x3fdae126969fccc0; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 608, x18)

inst_1182:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x389c62efde540 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x6030a08cc03f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xae126969fccc0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8389c62efde540; op2val:0xc046030a08cc03f7; op3val:0x3fdae126969fccc0; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 624, x18)

inst_1183:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x389c62efde540 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x6030a08cc03f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xae126969fccc0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8389c62efde540; op2val:0xc046030a08cc03f7; op3val:0x3fdae126969fccc0; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 640, x18)

inst_1184:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x389c62efde540 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x6030a08cc03f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xae126969fccc0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8389c62efde540; op2val:0xc046030a08cc03f7; op3val:0x3fdae126969fccc0; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 656, x18)

inst_1185:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x389c62efde540 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x6030a08cc03f7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xae126969fccc0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8389c62efde540; op2val:0xc046030a08cc03f7; op3val:0x3fdae126969fccc0; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 672, x18)

inst_1186:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1d62dc863e290 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xba0d15e845be3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeccb473105928 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1d62dc863e290; op2val:0xc01ba0d15e845be3; op3val:0x3fceccb473105928; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 688, x18)

inst_1187:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1d62dc863e290 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xba0d15e845be3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeccb473105928 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1d62dc863e290; op2val:0xc01ba0d15e845be3; op3val:0x3fceccb473105928; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 704, x18)

inst_1188:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1d62dc863e290 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xba0d15e845be3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeccb473105928 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1d62dc863e290; op2val:0xc01ba0d15e845be3; op3val:0x3fceccb473105928; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 720, x18)

inst_1189:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1d62dc863e290 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xba0d15e845be3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeccb473105928 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1d62dc863e290; op2val:0xc01ba0d15e845be3; op3val:0x3fceccb473105928; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 736, x18)
addi x16,x16,2040

inst_1190:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1d62dc863e290 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xba0d15e845be3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xeccb473105928 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1d62dc863e290; op2val:0xc01ba0d15e845be3; op3val:0x3fceccb473105928; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 752, x18)

inst_1191:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xff441cc3f6770 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xefc0a0e84c794 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xef0ab4077e7bf and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbff441cc3f6770; op2val:0xc01efc0a0e84c794; op3val:0x3feef0ab4077e7bf; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 768, x18)

inst_1192:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xff441cc3f6770 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xefc0a0e84c794 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xef0ab4077e7bf and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbff441cc3f6770; op2val:0xc01efc0a0e84c794; op3val:0x3feef0ab4077e7bf; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 784, x18)

inst_1193:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xff441cc3f6770 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xefc0a0e84c794 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xef0ab4077e7bf and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbff441cc3f6770; op2val:0xc01efc0a0e84c794; op3val:0x3feef0ab4077e7bf; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 800, x18)

inst_1194:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xff441cc3f6770 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xefc0a0e84c794 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xef0ab4077e7bf and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbff441cc3f6770; op2val:0xc01efc0a0e84c794; op3val:0x3feef0ab4077e7bf; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 816, x18)

inst_1195:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xff441cc3f6770 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xefc0a0e84c794 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xef0ab4077e7bf and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbff441cc3f6770; op2val:0xc01efc0a0e84c794; op3val:0x3feef0ab4077e7bf; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 832, x18)

inst_1196:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5087d1804040c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x33a850e9d4cdc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x947023bc1e0c8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5087d1804040c; op2val:0xc0133a850e9d4cdc; op3val:0x3fe947023bc1e0c8; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 848, x18)

inst_1197:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5087d1804040c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x33a850e9d4cdc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x947023bc1e0c8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5087d1804040c; op2val:0xc0133a850e9d4cdc; op3val:0x3fe947023bc1e0c8; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 864, x18)

inst_1198:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5087d1804040c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x33a850e9d4cdc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x947023bc1e0c8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5087d1804040c; op2val:0xc0133a850e9d4cdc; op3val:0x3fe947023bc1e0c8; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 880, x18)

inst_1199:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5087d1804040c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x33a850e9d4cdc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x947023bc1e0c8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5087d1804040c; op2val:0xc0133a850e9d4cdc; op3val:0x3fe947023bc1e0c8; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 896, x18)

inst_1200:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5087d1804040c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x33a850e9d4cdc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x947023bc1e0c8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc5087d1804040c; op2val:0xc0133a850e9d4cdc; op3val:0x3fe947023bc1e0c8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 912, x18)

inst_1201:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1f07ce892bbc0 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc74e4339e0e03 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe7e9fd6aa739 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1f07ce892bbc0; op2val:0xc03c74e4339e0e03; op3val:0x3fefe7e9fd6aa739; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 928, x18)

inst_1202:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1f07ce892bbc0 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc74e4339e0e03 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe7e9fd6aa739 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1f07ce892bbc0; op2val:0xc03c74e4339e0e03; op3val:0x3fefe7e9fd6aa739; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 944, x18)

inst_1203:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1f07ce892bbc0 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc74e4339e0e03 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe7e9fd6aa739 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1f07ce892bbc0; op2val:0xc03c74e4339e0e03; op3val:0x3fefe7e9fd6aa739; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 960, x18)

inst_1204:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1f07ce892bbc0 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc74e4339e0e03 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe7e9fd6aa739 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1f07ce892bbc0; op2val:0xc03c74e4339e0e03; op3val:0x3fefe7e9fd6aa739; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 976, x18)

inst_1205:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1f07ce892bbc0 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc74e4339e0e03 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfe7e9fd6aa739 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa1f07ce892bbc0; op2val:0xc03c74e4339e0e03; op3val:0x3fefe7e9fd6aa739; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 992, x18)

inst_1206:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0665e459ace6c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x43f6c57541d22 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4c0f7f6b2c14f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0665e459ace6c; op2val:0xc0043f6c57541d22; op3val:0x3fe4c0f7f6b2c14f; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1008, x18)

inst_1207:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0665e459ace6c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x43f6c57541d22 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4c0f7f6b2c14f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0665e459ace6c; op2val:0xc0043f6c57541d22; op3val:0x3fe4c0f7f6b2c14f; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1024, x18)

inst_1208:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0665e459ace6c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x43f6c57541d22 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4c0f7f6b2c14f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0665e459ace6c; op2val:0xc0043f6c57541d22; op3val:0x3fe4c0f7f6b2c14f; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1040, x18)

inst_1209:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0665e459ace6c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x43f6c57541d22 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4c0f7f6b2c14f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0665e459ace6c; op2val:0xc0043f6c57541d22; op3val:0x3fe4c0f7f6b2c14f; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1056, x18)

inst_1210:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0665e459ace6c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x43f6c57541d22 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4c0f7f6b2c14f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0665e459ace6c; op2val:0xc0043f6c57541d22; op3val:0x3fe4c0f7f6b2c14f; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1072, x18)

inst_1211:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a329115dfee9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x63b2cd64e6469 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb48f92708b4cc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a329115dfee9; op2val:0xbfe63b2cd64e6469; op3val:0x3fdb48f92708b4cc; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1088, x18)

inst_1212:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a329115dfee9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x63b2cd64e6469 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb48f92708b4cc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a329115dfee9; op2val:0xbfe63b2cd64e6469; op3val:0x3fdb48f92708b4cc; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1104, x18)

inst_1213:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a329115dfee9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x63b2cd64e6469 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb48f92708b4cc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a329115dfee9; op2val:0xbfe63b2cd64e6469; op3val:0x3fdb48f92708b4cc; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1120, x18)

inst_1214:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a329115dfee9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x63b2cd64e6469 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb48f92708b4cc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a329115dfee9; op2val:0xbfe63b2cd64e6469; op3val:0x3fdb48f92708b4cc; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1136, x18)

inst_1215:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a329115dfee9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x63b2cd64e6469 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb48f92708b4cc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a329115dfee9; op2val:0xbfe63b2cd64e6469; op3val:0x3fdb48f92708b4cc; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1152, x18)

inst_1216:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf7535a8597b7b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbfb47efb7af95 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb81eb5aa3073f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef7535a8597b7b; op2val:0xbfebfb47efb7af95; op3val:0x3feb81eb5aa3073f; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1168, x18)

inst_1217:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf7535a8597b7b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbfb47efb7af95 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb81eb5aa3073f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef7535a8597b7b; op2val:0xbfebfb47efb7af95; op3val:0x3feb81eb5aa3073f; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1184, x18)

inst_1218:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf7535a8597b7b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbfb47efb7af95 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb81eb5aa3073f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef7535a8597b7b; op2val:0xbfebfb47efb7af95; op3val:0x3feb81eb5aa3073f; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1200, x18)

inst_1219:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf7535a8597b7b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbfb47efb7af95 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb81eb5aa3073f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef7535a8597b7b; op2val:0xbfebfb47efb7af95; op3val:0x3feb81eb5aa3073f; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1216, x18)

inst_1220:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf7535a8597b7b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbfb47efb7af95 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb81eb5aa3073f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef7535a8597b7b; op2val:0xbfebfb47efb7af95; op3val:0x3feb81eb5aa3073f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1232, x18)

inst_1221:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x4681eb2a19a80 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x78280a00296da and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdfc1e273dc491 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f94681eb2a19a80; op2val:0xc0478280a00296da; op3val:0x3fedfc1e273dc491; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1248, x18)

inst_1222:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x4681eb2a19a80 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x78280a00296da and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdfc1e273dc491 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f94681eb2a19a80; op2val:0xc0478280a00296da; op3val:0x3fedfc1e273dc491; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1264, x18)

inst_1223:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x4681eb2a19a80 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x78280a00296da and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdfc1e273dc491 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f94681eb2a19a80; op2val:0xc0478280a00296da; op3val:0x3fedfc1e273dc491; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1280, x18)

inst_1224:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x4681eb2a19a80 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x78280a00296da and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdfc1e273dc491 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f94681eb2a19a80; op2val:0xc0478280a00296da; op3val:0x3fedfc1e273dc491; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1296, x18)

inst_1225:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x4681eb2a19a80 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x78280a00296da and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdfc1e273dc491 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f94681eb2a19a80; op2val:0xc0478280a00296da; op3val:0x3fedfc1e273dc491; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1312, x18)

inst_1226:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfaf5634181602 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2dcc4f14c5c21 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2ad38eecfcdea and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfaf5634181602; op2val:0xbfe2dcc4f14c5c21; op3val:0x3fd2ad38eecfcdea; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1328, x18)

inst_1227:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfaf5634181602 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2dcc4f14c5c21 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2ad38eecfcdea and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfaf5634181602; op2val:0xbfe2dcc4f14c5c21; op3val:0x3fd2ad38eecfcdea; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1344, x18)

inst_1228:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfaf5634181602 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2dcc4f14c5c21 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2ad38eecfcdea and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfaf5634181602; op2val:0xbfe2dcc4f14c5c21; op3val:0x3fd2ad38eecfcdea; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1360, x18)

inst_1229:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfaf5634181602 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2dcc4f14c5c21 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2ad38eecfcdea and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfaf5634181602; op2val:0xbfe2dcc4f14c5c21; op3val:0x3fd2ad38eecfcdea; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1376, x18)

inst_1230:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfaf5634181602 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2dcc4f14c5c21 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2ad38eecfcdea and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfaf5634181602; op2val:0xbfe2dcc4f14c5c21; op3val:0x3fd2ad38eecfcdea; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1392, x18)

inst_1231:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x479899362a7e7 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33c254272cef9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x89d4ad104407c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe479899362a7e7; op2val:0xbfd33c254272cef9; op3val:0x3fc89d4ad104407c; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1408, x18)

inst_1232:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x479899362a7e7 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33c254272cef9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x89d4ad104407c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe479899362a7e7; op2val:0xbfd33c254272cef9; op3val:0x3fc89d4ad104407c; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1424, x18)

inst_1233:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x479899362a7e7 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33c254272cef9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x89d4ad104407c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe479899362a7e7; op2val:0xbfd33c254272cef9; op3val:0x3fc89d4ad104407c; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1440, x18)

inst_1234:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x479899362a7e7 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33c254272cef9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x89d4ad104407c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe479899362a7e7; op2val:0xbfd33c254272cef9; op3val:0x3fc89d4ad104407c; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1456, x18)

inst_1235:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x479899362a7e7 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33c254272cef9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x89d4ad104407c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe479899362a7e7; op2val:0xbfd33c254272cef9; op3val:0x3fc89d4ad104407c; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1472, x18)

inst_1236:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc975c38f16094 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1284e46fb8dfc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xea8d843c81f50 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec975c38f16094; op2val:0xbfe1284e46fb8dfc; op3val:0x3fdea8d843c81f50; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1488, x18)

inst_1237:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc975c38f16094 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1284e46fb8dfc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xea8d843c81f50 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec975c38f16094; op2val:0xbfe1284e46fb8dfc; op3val:0x3fdea8d843c81f50; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1504, x18)

inst_1238:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc975c38f16094 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1284e46fb8dfc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xea8d843c81f50 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec975c38f16094; op2val:0xbfe1284e46fb8dfc; op3val:0x3fdea8d843c81f50; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1520, x18)

inst_1239:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc975c38f16094 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1284e46fb8dfc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xea8d843c81f50 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec975c38f16094; op2val:0xbfe1284e46fb8dfc; op3val:0x3fdea8d843c81f50; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1536, x18)

inst_1240:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc975c38f16094 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1284e46fb8dfc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xea8d843c81f50 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec975c38f16094; op2val:0xbfe1284e46fb8dfc; op3val:0x3fdea8d843c81f50; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1552, x18)

inst_1241:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcf4d843dd266d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x02c9cdcc155dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd45957958debc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecf4d843dd266d; op2val:0xbff02c9cdcc155dc; op3val:0x3fed45957958debc; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1568, x18)

inst_1242:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcf4d843dd266d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x02c9cdcc155dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd45957958debc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecf4d843dd266d; op2val:0xbff02c9cdcc155dc; op3val:0x3fed45957958debc; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1584, x18)

inst_1243:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcf4d843dd266d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x02c9cdcc155dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd45957958debc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecf4d843dd266d; op2val:0xbff02c9cdcc155dc; op3val:0x3fed45957958debc; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1600, x18)

inst_1244:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcf4d843dd266d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x02c9cdcc155dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd45957958debc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecf4d843dd266d; op2val:0xbff02c9cdcc155dc; op3val:0x3fed45957958debc; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1616, x18)

inst_1245:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcf4d843dd266d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x02c9cdcc155dc and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd45957958debc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecf4d843dd266d; op2val:0xbff02c9cdcc155dc; op3val:0x3fed45957958debc; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1632, x18)

inst_1246:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa55df8770b0b4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xba7ddd4f244fa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6c29b5121f3a4 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda55df8770b0b4; op2val:0xbffba7ddd4f244fa; op3val:0x3fe6c29b5121f3a4; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1648, x18)

inst_1247:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa55df8770b0b4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xba7ddd4f244fa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6c29b5121f3a4 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda55df8770b0b4; op2val:0xbffba7ddd4f244fa; op3val:0x3fe6c29b5121f3a4; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1664, x18)

inst_1248:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa55df8770b0b4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xba7ddd4f244fa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6c29b5121f3a4 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda55df8770b0b4; op2val:0xbffba7ddd4f244fa; op3val:0x3fe6c29b5121f3a4; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1680, x18)

inst_1249:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa55df8770b0b4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xba7ddd4f244fa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6c29b5121f3a4 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda55df8770b0b4; op2val:0xbffba7ddd4f244fa; op3val:0x3fe6c29b5121f3a4; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1696, x18)

inst_1250:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa55df8770b0b4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xba7ddd4f244fa and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6c29b5121f3a4 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda55df8770b0b4; op2val:0xbffba7ddd4f244fa; op3val:0x3fe6c29b5121f3a4; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1712, x18)

inst_1251:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b9ee4a5f12c6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0cfb7890db91a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2a00f1badefe9 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b9ee4a5f12c6; op2val:0xbff0cfb7890db91a; op3val:0x3fe2a00f1badefe9; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1728, x18)

inst_1252:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b9ee4a5f12c6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0cfb7890db91a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2a00f1badefe9 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b9ee4a5f12c6; op2val:0xbff0cfb7890db91a; op3val:0x3fe2a00f1badefe9; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1744, x18)

inst_1253:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b9ee4a5f12c6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0cfb7890db91a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2a00f1badefe9 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b9ee4a5f12c6; op2val:0xbff0cfb7890db91a; op3val:0x3fe2a00f1badefe9; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1760, x18)

inst_1254:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b9ee4a5f12c6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0cfb7890db91a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2a00f1badefe9 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b9ee4a5f12c6; op2val:0xbff0cfb7890db91a; op3val:0x3fe2a00f1badefe9; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1776, x18)

inst_1255:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1b9ee4a5f12c6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0cfb7890db91a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2a00f1badefe9 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1b9ee4a5f12c6; op2val:0xbff0cfb7890db91a; op3val:0x3fe2a00f1badefe9; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1792, x18)

inst_1256:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x895c17f719feb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x891f4f93d40d5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2e073e9be777f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe895c17f719feb; op2val:0xbfe891f4f93d40d5; op3val:0x3fe2e073e9be777f; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1808, x18)

inst_1257:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x895c17f719feb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x891f4f93d40d5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2e073e9be777f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe895c17f719feb; op2val:0xbfe891f4f93d40d5; op3val:0x3fe2e073e9be777f; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1824, x18)

inst_1258:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x895c17f719feb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x891f4f93d40d5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2e073e9be777f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe895c17f719feb; op2val:0xbfe891f4f93d40d5; op3val:0x3fe2e073e9be777f; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1840, x18)

inst_1259:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x895c17f719feb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x891f4f93d40d5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2e073e9be777f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe895c17f719feb; op2val:0xbfe891f4f93d40d5; op3val:0x3fe2e073e9be777f; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1856, x18)

inst_1260:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x895c17f719feb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x891f4f93d40d5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2e073e9be777f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe895c17f719feb; op2val:0xbfe891f4f93d40d5; op3val:0x3fe2e073e9be777f; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1872, x18)

inst_1261:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa8e12ddb93718 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5c38abfdca6f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x20f81486124eb and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea8e12ddb93718; op2val:0xbfe5c38abfdca6f9; op3val:0x3fe20f81486124eb; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1888, x18)

inst_1262:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa8e12ddb93718 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5c38abfdca6f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x20f81486124eb and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea8e12ddb93718; op2val:0xbfe5c38abfdca6f9; op3val:0x3fe20f81486124eb; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1904, x18)

inst_1263:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa8e12ddb93718 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5c38abfdca6f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x20f81486124eb and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea8e12ddb93718; op2val:0xbfe5c38abfdca6f9; op3val:0x3fe20f81486124eb; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1920, x18)

inst_1264:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa8e12ddb93718 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5c38abfdca6f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x20f81486124eb and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea8e12ddb93718; op2val:0xbfe5c38abfdca6f9; op3val:0x3fe20f81486124eb; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1936, x18)

inst_1265:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa8e12ddb93718 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5c38abfdca6f9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x20f81486124eb and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea8e12ddb93718; op2val:0xbfe5c38abfdca6f9; op3val:0x3fe20f81486124eb; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1952, x18)

inst_1266:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe2b7a49e9aa68 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x656ecaa477a42 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x50fd80ca787a1 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce2b7a49e9aa68; op2val:0xc00656ecaa477a42; op3val:0x3fe50fd80ca787a1; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1968, x18)

inst_1267:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe2b7a49e9aa68 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x656ecaa477a42 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x50fd80ca787a1 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce2b7a49e9aa68; op2val:0xc00656ecaa477a42; op3val:0x3fe50fd80ca787a1; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1984, x18)

inst_1268:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe2b7a49e9aa68 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x656ecaa477a42 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x50fd80ca787a1 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce2b7a49e9aa68; op2val:0xc00656ecaa477a42; op3val:0x3fe50fd80ca787a1; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 2000, x18)

inst_1269:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe2b7a49e9aa68 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x656ecaa477a42 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x50fd80ca787a1 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce2b7a49e9aa68; op2val:0xc00656ecaa477a42; op3val:0x3fe50fd80ca787a1; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_11)

inst_1270:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xe2b7a49e9aa68 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x656ecaa477a42 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x50fd80ca787a1 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fce2b7a49e9aa68; op2val:0xc00656ecaa477a42; op3val:0x3fe50fd80ca787a1; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 0, x18)

inst_1271:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x666088b88b8a8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x68e74ac6c143a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf93b8a0d077d4 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe666088b88b8a8; op2val:0xbff68e74ac6c143a; op3val:0x3fef93b8a0d077d4; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 16, x18)

inst_1272:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x666088b88b8a8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x68e74ac6c143a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf93b8a0d077d4 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe666088b88b8a8; op2val:0xbff68e74ac6c143a; op3val:0x3fef93b8a0d077d4; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 32, x18)

inst_1273:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x666088b88b8a8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x68e74ac6c143a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf93b8a0d077d4 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe666088b88b8a8; op2val:0xbff68e74ac6c143a; op3val:0x3fef93b8a0d077d4; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 48, x18)

inst_1274:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x666088b88b8a8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x68e74ac6c143a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf93b8a0d077d4 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe666088b88b8a8; op2val:0xbff68e74ac6c143a; op3val:0x3fef93b8a0d077d4; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 64, x18)
addi x16,x16,2040

inst_1275:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x666088b88b8a8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x68e74ac6c143a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf93b8a0d077d4 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe666088b88b8a8; op2val:0xbff68e74ac6c143a; op3val:0x3fef93b8a0d077d4; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 80, x18)

inst_1276:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x98ac9681b927d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2b96e99b67800 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xde427dd6ddf90 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe98ac9681b927d; op2val:0xbfd2b96e99b67800; op3val:0x3fcde427dd6ddf90; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 96, x18)

inst_1277:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x98ac9681b927d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2b96e99b67800 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xde427dd6ddf90 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe98ac9681b927d; op2val:0xbfd2b96e99b67800; op3val:0x3fcde427dd6ddf90; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 112, x18)

inst_1278:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x98ac9681b927d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2b96e99b67800 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xde427dd6ddf90 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe98ac9681b927d; op2val:0xbfd2b96e99b67800; op3val:0x3fcde427dd6ddf90; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 128, x18)

inst_1279:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x98ac9681b927d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2b96e99b67800 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xde427dd6ddf90 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe98ac9681b927d; op2val:0xbfd2b96e99b67800; op3val:0x3fcde427dd6ddf90; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 144, x18)

inst_1280:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x98ac9681b927d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2b96e99b67800 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xde427dd6ddf90 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe98ac9681b927d; op2val:0xbfd2b96e99b67800; op3val:0x3fcde427dd6ddf90; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 160, x18)

inst_1281:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x58e99712ee18c and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x31e4020d0b428 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x9c217fcb80be0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd58e99712ee18c; op2val:0xbfb31e4020d0b428; op3val:0x3f99c217fcb80be0; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 176, x18)

inst_1282:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x58e99712ee18c and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x31e4020d0b428 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x9c217fcb80be0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd58e99712ee18c; op2val:0xbfb31e4020d0b428; op3val:0x3f99c217fcb80be0; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 192, x18)

inst_1283:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x58e99712ee18c and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x31e4020d0b428 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x9c217fcb80be0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd58e99712ee18c; op2val:0xbfb31e4020d0b428; op3val:0x3f99c217fcb80be0; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 208, x18)

inst_1284:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x58e99712ee18c and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x31e4020d0b428 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x9c217fcb80be0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd58e99712ee18c; op2val:0xbfb31e4020d0b428; op3val:0x3f99c217fcb80be0; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 224, x18)

inst_1285:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x58e99712ee18c and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x31e4020d0b428 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x9c217fcb80be0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd58e99712ee18c; op2val:0xbfb31e4020d0b428; op3val:0x3f99c217fcb80be0; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1286:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x351ce4788f28f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x618f9abc0ebd2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xaaea3d045133b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe351ce4788f28f; op2val:0xbff618f9abc0ebd2; op3val:0x3feaaea3d045133b; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 256, x18)

inst_1287:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x351ce4788f28f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x618f9abc0ebd2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xaaea3d045133b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe351ce4788f28f; op2val:0xbff618f9abc0ebd2; op3val:0x3feaaea3d045133b; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 272, x18)

inst_1288:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x351ce4788f28f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x618f9abc0ebd2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xaaea3d045133b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe351ce4788f28f; op2val:0xbff618f9abc0ebd2; op3val:0x3feaaea3d045133b; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 288, x18)

inst_1289:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x351ce4788f28f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x618f9abc0ebd2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xaaea3d045133b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe351ce4788f28f; op2val:0xbff618f9abc0ebd2; op3val:0x3feaaea3d045133b; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 304, x18)

inst_1290:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x351ce4788f28f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x618f9abc0ebd2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xaaea3d045133b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe351ce4788f28f; op2val:0xbff618f9abc0ebd2; op3val:0x3feaaea3d045133b; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 320, x18)

inst_1291:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xbc8c592a89840 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xe657daf172416 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa6458095ec7dc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbbc8c592a89840; op2val:0xc01e657daf172416; op3val:0x3fea6458095ec7dc; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 336, x18)

inst_1292:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xbc8c592a89840 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xe657daf172416 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa6458095ec7dc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbbc8c592a89840; op2val:0xc01e657daf172416; op3val:0x3fea6458095ec7dc; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 352, x18)

inst_1293:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xbc8c592a89840 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xe657daf172416 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa6458095ec7dc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbbc8c592a89840; op2val:0xc01e657daf172416; op3val:0x3fea6458095ec7dc; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 368, x18)

inst_1294:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xbc8c592a89840 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xe657daf172416 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa6458095ec7dc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbbc8c592a89840; op2val:0xc01e657daf172416; op3val:0x3fea6458095ec7dc; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 384, x18)

inst_1295:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xbc8c592a89840 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xe657daf172416 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa6458095ec7dc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbbc8c592a89840; op2val:0xc01e657daf172416; op3val:0x3fea6458095ec7dc; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 400, x18)

inst_1296:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f038c6ce7c85 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x104ba2f1cd45b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5352064b6b2d8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f038c6ce7c85; op2val:0xbfd104ba2f1cd45b; op3val:0x3fc5352064b6b2d8; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 416, x18)

inst_1297:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f038c6ce7c85 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x104ba2f1cd45b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5352064b6b2d8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f038c6ce7c85; op2val:0xbfd104ba2f1cd45b; op3val:0x3fc5352064b6b2d8; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 432, x18)

inst_1298:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f038c6ce7c85 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x104ba2f1cd45b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5352064b6b2d8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f038c6ce7c85; op2val:0xbfd104ba2f1cd45b; op3val:0x3fc5352064b6b2d8; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 448, x18)

inst_1299:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f038c6ce7c85 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x104ba2f1cd45b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5352064b6b2d8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f038c6ce7c85; op2val:0xbfd104ba2f1cd45b; op3val:0x3fc5352064b6b2d8; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 464, x18)

inst_1300:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f038c6ce7c85 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x104ba2f1cd45b and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5352064b6b2d8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f038c6ce7c85; op2val:0xbfd104ba2f1cd45b; op3val:0x3fc5352064b6b2d8; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 480, x18)

inst_1301:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7760723dd89eb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x92aab1f3477f5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2737df2fb1cd5 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7760723dd89eb; op2val:0xbfe92aab1f3477f5; op3val:0x3fe2737df2fb1cd5; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 496, x18)

inst_1302:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7760723dd89eb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x92aab1f3477f5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2737df2fb1cd5 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7760723dd89eb; op2val:0xbfe92aab1f3477f5; op3val:0x3fe2737df2fb1cd5; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 512, x18)

inst_1303:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7760723dd89eb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x92aab1f3477f5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2737df2fb1cd5 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7760723dd89eb; op2val:0xbfe92aab1f3477f5; op3val:0x3fe2737df2fb1cd5; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 528, x18)

inst_1304:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7760723dd89eb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x92aab1f3477f5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2737df2fb1cd5 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7760723dd89eb; op2val:0xbfe92aab1f3477f5; op3val:0x3fe2737df2fb1cd5; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 544, x18)

inst_1305:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7760723dd89eb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x92aab1f3477f5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2737df2fb1cd5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7760723dd89eb; op2val:0xbfe92aab1f3477f5; op3val:0x3fe2737df2fb1cd5; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 560, x18)

inst_1306:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf9e61f6d13245 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5452273002d32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5043fd71eef07 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef9e61f6d13245; op2val:0xbfe5452273002d32; op3val:0x3fe5043fd71eef07; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 576, x18)

inst_1307:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf9e61f6d13245 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5452273002d32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5043fd71eef07 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef9e61f6d13245; op2val:0xbfe5452273002d32; op3val:0x3fe5043fd71eef07; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 592, x18)

inst_1308:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf9e61f6d13245 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5452273002d32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5043fd71eef07 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef9e61f6d13245; op2val:0xbfe5452273002d32; op3val:0x3fe5043fd71eef07; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 608, x18)

inst_1309:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf9e61f6d13245 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5452273002d32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5043fd71eef07 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef9e61f6d13245; op2val:0xbfe5452273002d32; op3val:0x3fe5043fd71eef07; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 624, x18)

inst_1310:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf9e61f6d13245 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5452273002d32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5043fd71eef07 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef9e61f6d13245; op2val:0xbfe5452273002d32; op3val:0x3fe5043fd71eef07; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 640, x18)

inst_1311:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f620de9f8966 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf04acca1ba617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x83215645e4e5d and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f620de9f8966; op2val:0xbfef04acca1ba617; op3val:0x3fe83215645e4e5d; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 656, x18)

inst_1312:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f620de9f8966 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf04acca1ba617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x83215645e4e5d and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f620de9f8966; op2val:0xbfef04acca1ba617; op3val:0x3fe83215645e4e5d; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 672, x18)

inst_1313:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f620de9f8966 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf04acca1ba617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x83215645e4e5d and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f620de9f8966; op2val:0xbfef04acca1ba617; op3val:0x3fe83215645e4e5d; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 688, x18)

inst_1314:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f620de9f8966 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf04acca1ba617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x83215645e4e5d and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f620de9f8966; op2val:0xbfef04acca1ba617; op3val:0x3fe83215645e4e5d; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 704, x18)

inst_1315:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8f620de9f8966 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf04acca1ba617 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x83215645e4e5d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8f620de9f8966; op2val:0xbfef04acca1ba617; op3val:0x3fe83215645e4e5d; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 720, x18)

inst_1316:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf8679e0b20b04 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x367ade24770d3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31dfc83a3f8a8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf8679e0b20b04; op2val:0xbfe367ade24770d3; op3val:0x3fd31dfc83a3f8a8; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 736, x18)

inst_1317:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf8679e0b20b04 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x367ade24770d3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31dfc83a3f8a8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf8679e0b20b04; op2val:0xbfe367ade24770d3; op3val:0x3fd31dfc83a3f8a8; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 752, x18)

inst_1318:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf8679e0b20b04 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x367ade24770d3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31dfc83a3f8a8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf8679e0b20b04; op2val:0xbfe367ade24770d3; op3val:0x3fd31dfc83a3f8a8; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 768, x18)

inst_1319:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf8679e0b20b04 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x367ade24770d3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31dfc83a3f8a8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf8679e0b20b04; op2val:0xbfe367ade24770d3; op3val:0x3fd31dfc83a3f8a8; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 784, x18)

inst_1320:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf8679e0b20b04 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x367ade24770d3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31dfc83a3f8a8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdf8679e0b20b04; op2val:0xbfe367ade24770d3; op3val:0x3fd31dfc83a3f8a8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 800, x18)

inst_1321:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdb6eba8c47ba8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xaae5ced19ffb3 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8c6886495bbc0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedb6eba8c47ba8; op2val:0xbfbaae5ced19ffb3; op3val:0x3fb8c6886495bbc0; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 816, x18)

inst_1322:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdb6eba8c47ba8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xaae5ced19ffb3 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8c6886495bbc0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedb6eba8c47ba8; op2val:0xbfbaae5ced19ffb3; op3val:0x3fb8c6886495bbc0; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 832, x18)

inst_1323:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdb6eba8c47ba8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xaae5ced19ffb3 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8c6886495bbc0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedb6eba8c47ba8; op2val:0xbfbaae5ced19ffb3; op3val:0x3fb8c6886495bbc0; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 848, x18)

inst_1324:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdb6eba8c47ba8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xaae5ced19ffb3 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8c6886495bbc0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedb6eba8c47ba8; op2val:0xbfbaae5ced19ffb3; op3val:0x3fb8c6886495bbc0; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 864, x18)

inst_1325:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdb6eba8c47ba8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xaae5ced19ffb3 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8c6886495bbc0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedb6eba8c47ba8; op2val:0xbfbaae5ced19ffb3; op3val:0x3fb8c6886495bbc0; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 880, x18)

inst_1326:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe2972c5b9a45c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0a484fde94646 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf5f9652be5954 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde2972c5b9a45c; op2val:0xbff0a484fde94646; op3val:0x3fdf5f9652be5954; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 896, x18)

inst_1327:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe2972c5b9a45c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0a484fde94646 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf5f9652be5954 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde2972c5b9a45c; op2val:0xbff0a484fde94646; op3val:0x3fdf5f9652be5954; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 912, x18)

inst_1328:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe2972c5b9a45c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0a484fde94646 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf5f9652be5954 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde2972c5b9a45c; op2val:0xbff0a484fde94646; op3val:0x3fdf5f9652be5954; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 928, x18)

inst_1329:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe2972c5b9a45c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0a484fde94646 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf5f9652be5954 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde2972c5b9a45c; op2val:0xbff0a484fde94646; op3val:0x3fdf5f9652be5954; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 944, x18)

inst_1330:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe2972c5b9a45c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0a484fde94646 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf5f9652be5954 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde2972c5b9a45c; op2val:0xbff0a484fde94646; op3val:0x3fdf5f9652be5954; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 960, x18)

inst_1331:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9acddc6c3cc37 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0f26d6611e7c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb31e3ee93b923 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9acddc6c3cc37; op2val:0xbff0f26d6611e7c2; op3val:0x3feb31e3ee93b923; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 976, x18)

inst_1332:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9acddc6c3cc37 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0f26d6611e7c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb31e3ee93b923 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9acddc6c3cc37; op2val:0xbff0f26d6611e7c2; op3val:0x3feb31e3ee93b923; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 992, x18)

inst_1333:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9acddc6c3cc37 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0f26d6611e7c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb31e3ee93b923 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9acddc6c3cc37; op2val:0xbff0f26d6611e7c2; op3val:0x3feb31e3ee93b923; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1008, x18)

inst_1334:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9acddc6c3cc37 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0f26d6611e7c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb31e3ee93b923 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9acddc6c3cc37; op2val:0xbff0f26d6611e7c2; op3val:0x3feb31e3ee93b923; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1024, x18)

inst_1335:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9acddc6c3cc37 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0f26d6611e7c2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb31e3ee93b923 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9acddc6c3cc37; op2val:0xbff0f26d6611e7c2; op3val:0x3feb31e3ee93b923; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1040, x18)

inst_1336:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4086c2815fcdc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x95f72cb036201 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfc4aabb0213c8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4086c2815fcdc; op2val:0xc0095f72cb036201; op3val:0x3fdfc4aabb0213c8; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1056, x18)

inst_1337:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4086c2815fcdc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x95f72cb036201 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfc4aabb0213c8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4086c2815fcdc; op2val:0xc0095f72cb036201; op3val:0x3fdfc4aabb0213c8; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1072, x18)

inst_1338:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4086c2815fcdc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x95f72cb036201 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfc4aabb0213c8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4086c2815fcdc; op2val:0xc0095f72cb036201; op3val:0x3fdfc4aabb0213c8; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1088, x18)

inst_1339:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4086c2815fcdc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x95f72cb036201 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfc4aabb0213c8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4086c2815fcdc; op2val:0xc0095f72cb036201; op3val:0x3fdfc4aabb0213c8; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1104, x18)

inst_1340:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4086c2815fcdc and fs2 == 1 and fe2 == 0x400 and fm2 == 0x95f72cb036201 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xfc4aabb0213c8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4086c2815fcdc; op2val:0xc0095f72cb036201; op3val:0x3fdfc4aabb0213c8; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1120, x18)

inst_1341:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3100cad24cd32 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x57cb34140ac4f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x999a296ca3c90 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3100cad24cd32; op2val:0xbfc57cb34140ac4f; op3val:0x3fa999a296ca3c90; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1136, x18)

inst_1342:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3100cad24cd32 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x57cb34140ac4f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x999a296ca3c90 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3100cad24cd32; op2val:0xbfc57cb34140ac4f; op3val:0x3fa999a296ca3c90; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1152, x18)

inst_1343:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3100cad24cd32 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x57cb34140ac4f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x999a296ca3c90 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3100cad24cd32; op2val:0xbfc57cb34140ac4f; op3val:0x3fa999a296ca3c90; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1168, x18)

inst_1344:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3100cad24cd32 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x57cb34140ac4f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x999a296ca3c90 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3100cad24cd32; op2val:0xbfc57cb34140ac4f; op3val:0x3fa999a296ca3c90; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1184, x18)

inst_1345:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3100cad24cd32 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x57cb34140ac4f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x999a296ca3c90 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3100cad24cd32; op2val:0xbfc57cb34140ac4f; op3val:0x3fa999a296ca3c90; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1200, x18)

inst_1346:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xce05361df6dba and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5f92e403ec858 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3d411fd7d5d70 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fece05361df6dba; op2val:0xbfd5f92e403ec858; op3val:0x3fd3d411fd7d5d70; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1216, x18)

inst_1347:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xce05361df6dba and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5f92e403ec858 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3d411fd7d5d70 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fece05361df6dba; op2val:0xbfd5f92e403ec858; op3val:0x3fd3d411fd7d5d70; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1232, x18)

inst_1348:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xce05361df6dba and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5f92e403ec858 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3d411fd7d5d70 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fece05361df6dba; op2val:0xbfd5f92e403ec858; op3val:0x3fd3d411fd7d5d70; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1248, x18)

inst_1349:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xce05361df6dba and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5f92e403ec858 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3d411fd7d5d70 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fece05361df6dba; op2val:0xbfd5f92e403ec858; op3val:0x3fd3d411fd7d5d70; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1264, x18)

inst_1350:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xce05361df6dba and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5f92e403ec858 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3d411fd7d5d70 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fece05361df6dba; op2val:0xbfd5f92e403ec858; op3val:0x3fd3d411fd7d5d70; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1280, x18)

inst_1351:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbae475f5de6ac and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1705df556d057 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xe2b92566106cc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febae475f5de6ac; op2val:0xbfd1705df556d057; op3val:0x3fce2b92566106cc; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1296, x18)

inst_1352:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbae475f5de6ac and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1705df556d057 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xe2b92566106cc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febae475f5de6ac; op2val:0xbfd1705df556d057; op3val:0x3fce2b92566106cc; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1312, x18)

inst_1353:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbae475f5de6ac and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1705df556d057 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xe2b92566106cc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febae475f5de6ac; op2val:0xbfd1705df556d057; op3val:0x3fce2b92566106cc; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1328, x18)

inst_1354:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbae475f5de6ac and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1705df556d057 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xe2b92566106cc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febae475f5de6ac; op2val:0xbfd1705df556d057; op3val:0x3fce2b92566106cc; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1344, x18)

inst_1355:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbae475f5de6ac and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1705df556d057 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xe2b92566106cc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febae475f5de6ac; op2val:0xbfd1705df556d057; op3val:0x3fce2b92566106cc; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1360, x18)

inst_1356:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x495f0b8947082 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8426dc63c6e57 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xf3660d25d39b0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe495f0b8947082; op2val:0xbfc8426dc63c6e57; op3val:0x3fbf3660d25d39b0; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1376, x18)

inst_1357:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x495f0b8947082 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8426dc63c6e57 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xf3660d25d39b0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe495f0b8947082; op2val:0xbfc8426dc63c6e57; op3val:0x3fbf3660d25d39b0; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1392, x18)

inst_1358:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x495f0b8947082 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8426dc63c6e57 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xf3660d25d39b0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe495f0b8947082; op2val:0xbfc8426dc63c6e57; op3val:0x3fbf3660d25d39b0; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1408, x18)

inst_1359:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x495f0b8947082 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8426dc63c6e57 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xf3660d25d39b0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe495f0b8947082; op2val:0xbfc8426dc63c6e57; op3val:0x3fbf3660d25d39b0; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1424, x18)
addi x16,x16,2040

inst_1360:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x495f0b8947082 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8426dc63c6e57 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xf3660d25d39b0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe495f0b8947082; op2val:0xbfc8426dc63c6e57; op3val:0x3fbf3660d25d39b0; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1440, x18)

inst_1361:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe796d11c17038 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x800e6f7813112 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6dbedc1c54de4 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe796d11c17038; op2val:0xc01800e6f7813112; op3val:0x3fe6dbedc1c54de4; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1456, x18)

inst_1362:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe796d11c17038 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x800e6f7813112 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6dbedc1c54de4 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe796d11c17038; op2val:0xc01800e6f7813112; op3val:0x3fe6dbedc1c54de4; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1472, x18)

inst_1363:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe796d11c17038 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x800e6f7813112 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6dbedc1c54de4 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe796d11c17038; op2val:0xc01800e6f7813112; op3val:0x3fe6dbedc1c54de4; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1488, x18)

inst_1364:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe796d11c17038 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x800e6f7813112 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6dbedc1c54de4 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe796d11c17038; op2val:0xc01800e6f7813112; op3val:0x3fe6dbedc1c54de4; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1504, x18)

inst_1365:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xe796d11c17038 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x800e6f7813112 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6dbedc1c54de4 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbe796d11c17038; op2val:0xc01800e6f7813112; op3val:0x3fe6dbedc1c54de4; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1520, x18)

inst_1366:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaf24a445992b2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x499e5420fb923 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x15905eb5337bc and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdaf24a445992b2; op2val:0xbfe499e5420fb923; op3val:0x3fd15905eb5337bc; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1536, x18)

inst_1367:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaf24a445992b2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x499e5420fb923 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x15905eb5337bc and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdaf24a445992b2; op2val:0xbfe499e5420fb923; op3val:0x3fd15905eb5337bc; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1552, x18)

inst_1368:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaf24a445992b2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x499e5420fb923 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x15905eb5337bc and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdaf24a445992b2; op2val:0xbfe499e5420fb923; op3val:0x3fd15905eb5337bc; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1568, x18)

inst_1369:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaf24a445992b2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x499e5420fb923 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x15905eb5337bc and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdaf24a445992b2; op2val:0xbfe499e5420fb923; op3val:0x3fd15905eb5337bc; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1584, x18)

inst_1370:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xaf24a445992b2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x499e5420fb923 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x15905eb5337bc and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdaf24a445992b2; op2val:0xbfe499e5420fb923; op3val:0x3fd15905eb5337bc; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1600, x18)

inst_1371:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9cbf2b3683c38 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x12259cb82e431 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xba01408f0a3b0 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9cbf2b3683c38; op2val:0xbfb12259cb82e431; op3val:0x3faba01408f0a3b0; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1616, x18)

inst_1372:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9cbf2b3683c38 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x12259cb82e431 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xba01408f0a3b0 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9cbf2b3683c38; op2val:0xbfb12259cb82e431; op3val:0x3faba01408f0a3b0; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1632, x18)

inst_1373:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9cbf2b3683c38 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x12259cb82e431 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xba01408f0a3b0 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9cbf2b3683c38; op2val:0xbfb12259cb82e431; op3val:0x3faba01408f0a3b0; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1648, x18)

inst_1374:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9cbf2b3683c38 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x12259cb82e431 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xba01408f0a3b0 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9cbf2b3683c38; op2val:0xbfb12259cb82e431; op3val:0x3faba01408f0a3b0; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1664, x18)

inst_1375:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9cbf2b3683c38 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x12259cb82e431 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xba01408f0a3b0 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9cbf2b3683c38; op2val:0xbfb12259cb82e431; op3val:0x3faba01408f0a3b0; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1680, x18)

inst_1376:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb9f257d9a2d20 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2f4d1754ca447 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x05cd76131562a and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fab9f257d9a2d20; op2val:0xc022f4d1754ca447; op3val:0x3fe05cd76131562a; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1696, x18)

inst_1377:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb9f257d9a2d20 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2f4d1754ca447 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x05cd76131562a and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fab9f257d9a2d20; op2val:0xc022f4d1754ca447; op3val:0x3fe05cd76131562a; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1712, x18)

inst_1378:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb9f257d9a2d20 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2f4d1754ca447 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x05cd76131562a and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fab9f257d9a2d20; op2val:0xc022f4d1754ca447; op3val:0x3fe05cd76131562a; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1728, x18)

inst_1379:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb9f257d9a2d20 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2f4d1754ca447 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x05cd76131562a and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fab9f257d9a2d20; op2val:0xc022f4d1754ca447; op3val:0x3fe05cd76131562a; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1744, x18)

inst_1380:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb9f257d9a2d20 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2f4d1754ca447 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x05cd76131562a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fab9f257d9a2d20; op2val:0xc022f4d1754ca447; op3val:0x3fe05cd76131562a; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1760, x18)

inst_1381:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb739b0d92b8e8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1734c8bcb71ec and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf0a6fdd754bb and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb739b0d92b8e8; op2val:0xbff1734c8bcb71ec; op3val:0x3fedf0a6fdd754bb; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1776, x18)

inst_1382:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb739b0d92b8e8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1734c8bcb71ec and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf0a6fdd754bb and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb739b0d92b8e8; op2val:0xbff1734c8bcb71ec; op3val:0x3fedf0a6fdd754bb; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1792, x18)

inst_1383:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb739b0d92b8e8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1734c8bcb71ec and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf0a6fdd754bb and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb739b0d92b8e8; op2val:0xbff1734c8bcb71ec; op3val:0x3fedf0a6fdd754bb; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1808, x18)

inst_1384:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb739b0d92b8e8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1734c8bcb71ec and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf0a6fdd754bb and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb739b0d92b8e8; op2val:0xbff1734c8bcb71ec; op3val:0x3fedf0a6fdd754bb; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1824, x18)

inst_1385:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb739b0d92b8e8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1734c8bcb71ec and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf0a6fdd754bb and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb739b0d92b8e8; op2val:0xbff1734c8bcb71ec; op3val:0x3fedf0a6fdd754bb; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1840, x18)

inst_1386:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x93f7d9958bfe0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0f8ce1bdb9ecf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac81af1886968 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb93f7d9958bfe0; op2val:0xc010f8ce1bdb9ecf; op3val:0x3fdac81af1886968; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1856, x18)

inst_1387:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x93f7d9958bfe0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0f8ce1bdb9ecf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac81af1886968 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb93f7d9958bfe0; op2val:0xc010f8ce1bdb9ecf; op3val:0x3fdac81af1886968; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1872, x18)

inst_1388:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x93f7d9958bfe0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0f8ce1bdb9ecf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac81af1886968 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb93f7d9958bfe0; op2val:0xc010f8ce1bdb9ecf; op3val:0x3fdac81af1886968; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1888, x18)

inst_1389:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x93f7d9958bfe0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0f8ce1bdb9ecf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac81af1886968 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb93f7d9958bfe0; op2val:0xc010f8ce1bdb9ecf; op3val:0x3fdac81af1886968; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1904, x18)

inst_1390:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x93f7d9958bfe0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0f8ce1bdb9ecf and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xac81af1886968 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb93f7d9958bfe0; op2val:0xc010f8ce1bdb9ecf; op3val:0x3fdac81af1886968; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1920, x18)

inst_1391:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x013d1fc62ed37 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x64f5413e05736 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66af713dd9220 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe013d1fc62ed37; op2val:0xbfe64f5413e05736; op3val:0x3fd66af713dd9220; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1936, x18)

inst_1392:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x013d1fc62ed37 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x64f5413e05736 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66af713dd9220 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe013d1fc62ed37; op2val:0xbfe64f5413e05736; op3val:0x3fd66af713dd9220; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1952, x18)

inst_1393:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x013d1fc62ed37 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x64f5413e05736 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66af713dd9220 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe013d1fc62ed37; op2val:0xbfe64f5413e05736; op3val:0x3fd66af713dd9220; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1968, x18)

inst_1394:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x013d1fc62ed37 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x64f5413e05736 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66af713dd9220 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe013d1fc62ed37; op2val:0xbfe64f5413e05736; op3val:0x3fd66af713dd9220; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1984, x18)

inst_1395:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x013d1fc62ed37 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x64f5413e05736 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x66af713dd9220 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe013d1fc62ed37; op2val:0xbfe64f5413e05736; op3val:0x3fd66af713dd9220; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 2000, x18)

inst_1396:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x52b82d70ff46b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xddd248ad56b3b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3c1bb3f4fc272 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe52b82d70ff46b; op2val:0xbfdddd248ad56b3b; op3val:0x3fd3c1bb3f4fc272; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_12)

inst_1397:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x52b82d70ff46b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xddd248ad56b3b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3c1bb3f4fc272 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe52b82d70ff46b; op2val:0xbfdddd248ad56b3b; op3val:0x3fd3c1bb3f4fc272; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 0, x18)

inst_1398:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x52b82d70ff46b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xddd248ad56b3b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3c1bb3f4fc272 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe52b82d70ff46b; op2val:0xbfdddd248ad56b3b; op3val:0x3fd3c1bb3f4fc272; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 16, x18)

inst_1399:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x52b82d70ff46b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xddd248ad56b3b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3c1bb3f4fc272 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe52b82d70ff46b; op2val:0xbfdddd248ad56b3b; op3val:0x3fd3c1bb3f4fc272; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 32, x18)

inst_1400:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x52b82d70ff46b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xddd248ad56b3b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3c1bb3f4fc272 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe52b82d70ff46b; op2val:0xbfdddd248ad56b3b; op3val:0x3fd3c1bb3f4fc272; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 48, x18)

inst_1401:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3edef7f91af83 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x16d22dfd404f0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5b4bed7891ada and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3edef7f91af83; op2val:0xbfe16d22dfd404f0; op3val:0x3fd5b4bed7891ada; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 64, x18)

inst_1402:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3edef7f91af83 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x16d22dfd404f0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5b4bed7891ada and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3edef7f91af83; op2val:0xbfe16d22dfd404f0; op3val:0x3fd5b4bed7891ada; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 80, x18)

inst_1403:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3edef7f91af83 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x16d22dfd404f0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5b4bed7891ada and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3edef7f91af83; op2val:0xbfe16d22dfd404f0; op3val:0x3fd5b4bed7891ada; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 96, x18)

inst_1404:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3edef7f91af83 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x16d22dfd404f0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5b4bed7891ada and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3edef7f91af83; op2val:0xbfe16d22dfd404f0; op3val:0x3fd5b4bed7891ada; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 112, x18)

inst_1405:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3edef7f91af83 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x16d22dfd404f0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5b4bed7891ada and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3edef7f91af83; op2val:0xbfe16d22dfd404f0; op3val:0x3fd5b4bed7891ada; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 128, x18)

inst_1406:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdfb2d72745ba1 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9f23780a874d8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x84f2b095d1e34 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedfb2d72745ba1; op2val:0xbfd9f23780a874d8; op3val:0x3fd84f2b095d1e34; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 144, x18)

inst_1407:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdfb2d72745ba1 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9f23780a874d8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x84f2b095d1e34 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedfb2d72745ba1; op2val:0xbfd9f23780a874d8; op3val:0x3fd84f2b095d1e34; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 160, x18)

inst_1408:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdfb2d72745ba1 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9f23780a874d8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x84f2b095d1e34 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedfb2d72745ba1; op2val:0xbfd9f23780a874d8; op3val:0x3fd84f2b095d1e34; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 176, x18)

inst_1409:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdfb2d72745ba1 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9f23780a874d8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x84f2b095d1e34 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedfb2d72745ba1; op2val:0xbfd9f23780a874d8; op3val:0x3fd84f2b095d1e34; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 192, x18)

inst_1410:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdfb2d72745ba1 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9f23780a874d8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x84f2b095d1e34 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedfb2d72745ba1; op2val:0xbfd9f23780a874d8; op3val:0x3fd84f2b095d1e34; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 208, x18)

inst_1411:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7bb8ab79c8032 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x7307ef9883d9c and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x132c32f8e7400 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7bb8ab79c8032; op2val:0xbf87307ef9883d9c; op3val:0x3f8132c32f8e7400; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 224, x18)

inst_1412:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7bb8ab79c8032 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x7307ef9883d9c and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x132c32f8e7400 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7bb8ab79c8032; op2val:0xbf87307ef9883d9c; op3val:0x3f8132c32f8e7400; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 240, x18)

inst_1413:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7bb8ab79c8032 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x7307ef9883d9c and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x132c32f8e7400 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7bb8ab79c8032; op2val:0xbf87307ef9883d9c; op3val:0x3f8132c32f8e7400; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 256, x18)

inst_1414:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7bb8ab79c8032 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x7307ef9883d9c and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x132c32f8e7400 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7bb8ab79c8032; op2val:0xbf87307ef9883d9c; op3val:0x3f8132c32f8e7400; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 272, x18)

inst_1415:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7bb8ab79c8032 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x7307ef9883d9c and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x132c32f8e7400 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7bb8ab79c8032; op2val:0xbf87307ef9883d9c; op3val:0x3f8132c32f8e7400; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 288, x18)

inst_1416:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3de9d391892f3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6d6601390ef15 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5c50f5592071 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3de9d391892f3; op2val:0xbff6d6601390ef15; op3val:0x3fec5c50f5592071; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 304, x18)

inst_1417:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3de9d391892f3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6d6601390ef15 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5c50f5592071 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3de9d391892f3; op2val:0xbff6d6601390ef15; op3val:0x3fec5c50f5592071; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 320, x18)

inst_1418:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3de9d391892f3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6d6601390ef15 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5c50f5592071 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3de9d391892f3; op2val:0xbff6d6601390ef15; op3val:0x3fec5c50f5592071; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 336, x18)

inst_1419:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3de9d391892f3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6d6601390ef15 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5c50f5592071 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3de9d391892f3; op2val:0xbff6d6601390ef15; op3val:0x3fec5c50f5592071; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 352, x18)

inst_1420:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3de9d391892f3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6d6601390ef15 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc5c50f5592071 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3de9d391892f3; op2val:0xbff6d6601390ef15; op3val:0x3fec5c50f5592071; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 368, x18)

inst_1421:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f46aea1a4b11 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x529cc0e984091 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x9125062d7cab8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2f46aea1a4b11; op2val:0xbfc529cc0e984091; op3val:0x3fb9125062d7cab8; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 384, x18)

inst_1422:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f46aea1a4b11 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x529cc0e984091 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x9125062d7cab8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2f46aea1a4b11; op2val:0xbfc529cc0e984091; op3val:0x3fb9125062d7cab8; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 400, x18)

inst_1423:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f46aea1a4b11 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x529cc0e984091 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x9125062d7cab8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2f46aea1a4b11; op2val:0xbfc529cc0e984091; op3val:0x3fb9125062d7cab8; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 416, x18)

inst_1424:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f46aea1a4b11 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x529cc0e984091 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x9125062d7cab8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2f46aea1a4b11; op2val:0xbfc529cc0e984091; op3val:0x3fb9125062d7cab8; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 432, x18)

inst_1425:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f46aea1a4b11 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x529cc0e984091 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x9125062d7cab8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2f46aea1a4b11; op2val:0xbfc529cc0e984091; op3val:0x3fb9125062d7cab8; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 448, x18)

inst_1426:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf5c3b313202a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7f12bccee2340 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x776a415eb5682 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef5c3b313202a4; op2val:0xbfe7f12bccee2340; op3val:0x3fe776a415eb5682; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 464, x18)

inst_1427:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf5c3b313202a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7f12bccee2340 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x776a415eb5682 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef5c3b313202a4; op2val:0xbfe7f12bccee2340; op3val:0x3fe776a415eb5682; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 480, x18)

inst_1428:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf5c3b313202a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7f12bccee2340 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x776a415eb5682 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef5c3b313202a4; op2val:0xbfe7f12bccee2340; op3val:0x3fe776a415eb5682; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 496, x18)

inst_1429:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf5c3b313202a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7f12bccee2340 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x776a415eb5682 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef5c3b313202a4; op2val:0xbfe7f12bccee2340; op3val:0x3fe776a415eb5682; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 512, x18)

inst_1430:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf5c3b313202a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7f12bccee2340 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x776a415eb5682 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef5c3b313202a4; op2val:0xbfe7f12bccee2340; op3val:0x3fe776a415eb5682; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 528, x18)

inst_1431:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd2247460f4215 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaeabf4d29e849 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88192bcf6c256 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed2247460f4215; op2val:0xbfeaeabf4d29e849; op3val:0x3fe88192bcf6c256; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 544, x18)

inst_1432:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd2247460f4215 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaeabf4d29e849 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88192bcf6c256 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed2247460f4215; op2val:0xbfeaeabf4d29e849; op3val:0x3fe88192bcf6c256; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 560, x18)

inst_1433:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd2247460f4215 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaeabf4d29e849 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88192bcf6c256 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed2247460f4215; op2val:0xbfeaeabf4d29e849; op3val:0x3fe88192bcf6c256; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 576, x18)

inst_1434:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd2247460f4215 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaeabf4d29e849 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88192bcf6c256 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed2247460f4215; op2val:0xbfeaeabf4d29e849; op3val:0x3fe88192bcf6c256; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 592, x18)

inst_1435:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd2247460f4215 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaeabf4d29e849 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x88192bcf6c256 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed2247460f4215; op2val:0xbfeaeabf4d29e849; op3val:0x3fe88192bcf6c256; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 608, x18)

inst_1436:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d93eb4691fe8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xadb14e6567f45 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5b17a998e9b78 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d93eb4691fe8; op2val:0xbfcadb14e6567f45; op3val:0x3fc5b17a998e9b78; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 624, x18)

inst_1437:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d93eb4691fe8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xadb14e6567f45 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5b17a998e9b78 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d93eb4691fe8; op2val:0xbfcadb14e6567f45; op3val:0x3fc5b17a998e9b78; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 640, x18)

inst_1438:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d93eb4691fe8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xadb14e6567f45 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5b17a998e9b78 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d93eb4691fe8; op2val:0xbfcadb14e6567f45; op3val:0x3fc5b17a998e9b78; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 656, x18)

inst_1439:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d93eb4691fe8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xadb14e6567f45 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5b17a998e9b78 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d93eb4691fe8; op2val:0xbfcadb14e6567f45; op3val:0x3fc5b17a998e9b78; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 672, x18)

inst_1440:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9d93eb4691fe8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xadb14e6567f45 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5b17a998e9b78 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9d93eb4691fe8; op2val:0xbfcadb14e6567f45; op3val:0x3fc5b17a998e9b78; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 688, x18)

inst_1441:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17ff06a70268a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8d16c1c10c80 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0291a0db51ebe and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17ff06a70268a; op2val:0xbfed8d16c1c10c80; op3val:0x3fe0291a0db51ebe; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 704, x18)

inst_1442:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17ff06a70268a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8d16c1c10c80 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0291a0db51ebe and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17ff06a70268a; op2val:0xbfed8d16c1c10c80; op3val:0x3fe0291a0db51ebe; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 720, x18)

inst_1443:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17ff06a70268a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8d16c1c10c80 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0291a0db51ebe and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17ff06a70268a; op2val:0xbfed8d16c1c10c80; op3val:0x3fe0291a0db51ebe; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 736, x18)

inst_1444:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17ff06a70268a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8d16c1c10c80 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0291a0db51ebe and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17ff06a70268a; op2val:0xbfed8d16c1c10c80; op3val:0x3fe0291a0db51ebe; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 752, x18)
addi x16,x16,2040

inst_1445:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17ff06a70268a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8d16c1c10c80 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0291a0db51ebe and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe17ff06a70268a; op2val:0xbfed8d16c1c10c80; op3val:0x3fe0291a0db51ebe; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 768, x18)

inst_1446:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6eba0a7c1f55e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x829f62b49c1eb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x14ec6b60ce679 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6eba0a7c1f55e; op2val:0xbff829f62b49c1eb; op3val:0x3fe14ec6b60ce679; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 784, x18)

inst_1447:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6eba0a7c1f55e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x829f62b49c1eb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x14ec6b60ce679 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6eba0a7c1f55e; op2val:0xbff829f62b49c1eb; op3val:0x3fe14ec6b60ce679; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 800, x18)

inst_1448:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6eba0a7c1f55e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x829f62b49c1eb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x14ec6b60ce679 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6eba0a7c1f55e; op2val:0xbff829f62b49c1eb; op3val:0x3fe14ec6b60ce679; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 816, x18)

inst_1449:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6eba0a7c1f55e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x829f62b49c1eb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x14ec6b60ce679 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6eba0a7c1f55e; op2val:0xbff829f62b49c1eb; op3val:0x3fe14ec6b60ce679; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 832, x18)

inst_1450:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6eba0a7c1f55e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x829f62b49c1eb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x14ec6b60ce679 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6eba0a7c1f55e; op2val:0xbff829f62b49c1eb; op3val:0x3fe14ec6b60ce679; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 848, x18)

inst_1451:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0xc8e57e5f2a800 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xc59b860a75fe7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x94c9d5665ac38 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c8e57e5f2a800; op2val:0xc08c59b860a75fe7; op3val:0x3fe94c9d5665ac38; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 864, x18)

inst_1452:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0xc8e57e5f2a800 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xc59b860a75fe7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x94c9d5665ac38 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c8e57e5f2a800; op2val:0xc08c59b860a75fe7; op3val:0x3fe94c9d5665ac38; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 880, x18)

inst_1453:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0xc8e57e5f2a800 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xc59b860a75fe7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x94c9d5665ac38 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c8e57e5f2a800; op2val:0xc08c59b860a75fe7; op3val:0x3fe94c9d5665ac38; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 896, x18)

inst_1454:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0xc8e57e5f2a800 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xc59b860a75fe7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x94c9d5665ac38 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c8e57e5f2a800; op2val:0xc08c59b860a75fe7; op3val:0x3fe94c9d5665ac38; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 912, x18)

inst_1455:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0xc8e57e5f2a800 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xc59b860a75fe7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x94c9d5665ac38 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c8e57e5f2a800; op2val:0xc08c59b860a75fe7; op3val:0x3fe94c9d5665ac38; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 928, x18)

inst_1456:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd46298b73df6d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa53078c4bd335 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x814f6a4c14400 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed46298b73df6d; op2val:0xbfea53078c4bd335; op3val:0x3fe814f6a4c14400; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 944, x18)

inst_1457:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd46298b73df6d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa53078c4bd335 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x814f6a4c14400 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed46298b73df6d; op2val:0xbfea53078c4bd335; op3val:0x3fe814f6a4c14400; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 960, x18)

inst_1458:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd46298b73df6d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa53078c4bd335 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x814f6a4c14400 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed46298b73df6d; op2val:0xbfea53078c4bd335; op3val:0x3fe814f6a4c14400; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 976, x18)

inst_1459:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd46298b73df6d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa53078c4bd335 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x814f6a4c14400 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed46298b73df6d; op2val:0xbfea53078c4bd335; op3val:0x3fe814f6a4c14400; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 992, x18)

inst_1460:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd46298b73df6d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa53078c4bd335 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x814f6a4c14400 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed46298b73df6d; op2val:0xbfea53078c4bd335; op3val:0x3fe814f6a4c14400; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1008, x18)

inst_1461:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbf518e73a3fa2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59f98adede999 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2e4478fa6577c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febf518e73a3fa2; op2val:0xbfd59f98adede999; op3val:0x3fd2e4478fa6577c; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1024, x18)

inst_1462:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbf518e73a3fa2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59f98adede999 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2e4478fa6577c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febf518e73a3fa2; op2val:0xbfd59f98adede999; op3val:0x3fd2e4478fa6577c; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1040, x18)

inst_1463:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbf518e73a3fa2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59f98adede999 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2e4478fa6577c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febf518e73a3fa2; op2val:0xbfd59f98adede999; op3val:0x3fd2e4478fa6577c; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1056, x18)

inst_1464:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbf518e73a3fa2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59f98adede999 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2e4478fa6577c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febf518e73a3fa2; op2val:0xbfd59f98adede999; op3val:0x3fd2e4478fa6577c; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1072, x18)

inst_1465:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbf518e73a3fa2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59f98adede999 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2e4478fa6577c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febf518e73a3fa2; op2val:0xbfd59f98adede999; op3val:0x3fd2e4478fa6577c; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1088, x18)

inst_1466:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8bed35a84b2c1 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x8f6ecde6240ad and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x34e10a7f9f270 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8bed35a84b2c1; op2val:0xbfa8f6ecde6240ad; op3val:0x3fa34e10a7f9f270; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1104, x18)

inst_1467:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8bed35a84b2c1 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x8f6ecde6240ad and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x34e10a7f9f270 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8bed35a84b2c1; op2val:0xbfa8f6ecde6240ad; op3val:0x3fa34e10a7f9f270; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1120, x18)

inst_1468:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8bed35a84b2c1 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x8f6ecde6240ad and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x34e10a7f9f270 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8bed35a84b2c1; op2val:0xbfa8f6ecde6240ad; op3val:0x3fa34e10a7f9f270; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1136, x18)

inst_1469:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8bed35a84b2c1 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x8f6ecde6240ad and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x34e10a7f9f270 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8bed35a84b2c1; op2val:0xbfa8f6ecde6240ad; op3val:0x3fa34e10a7f9f270; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1152, x18)

inst_1470:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8bed35a84b2c1 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x8f6ecde6240ad and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x34e10a7f9f270 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8bed35a84b2c1; op2val:0xbfa8f6ecde6240ad; op3val:0x3fa34e10a7f9f270; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1168, x18)

inst_1471:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc8d2a53c8f5d and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x60941631c6898 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3d2641dead4b8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecc8d2a53c8f5d; op2val:0xbfc60941631c6898; op3val:0x3fc3d2641dead4b8; valaddr_reg:x16; val_offset:624; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 624, x17, x15, 1184, x18)

inst_1472:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc8d2a53c8f5d and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x60941631c6898 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3d2641dead4b8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecc8d2a53c8f5d; op2val:0xbfc60941631c6898; op3val:0x3fc3d2641dead4b8; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1200, x18)

inst_1473:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e7d2e4d6296 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf1ce04f135ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbabdf3c66389c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06e7d2e4d6296; op2val:0xbfeaf1ce04f135ab; op3val:0x3fdbabdf3c66389c; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1216, x18)

inst_1474:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e7d2e4d6296 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf1ce04f135ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbabdf3c66389c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06e7d2e4d6296; op2val:0xbfeaf1ce04f135ab; op3val:0x3fdbabdf3c66389c; valaddr_reg:x16; val_offset:696; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 696, x17, x15, 1232, x18)

inst_1475:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e7d2e4d6296 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf1ce04f135ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbabdf3c66389c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06e7d2e4d6296; op2val:0xbfeaf1ce04f135ab; op3val:0x3fdbabdf3c66389c; valaddr_reg:x16; val_offset:720; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 720, x17, x15, 1248, x18)

inst_1476:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e7d2e4d6296 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf1ce04f135ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbabdf3c66389c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06e7d2e4d6296; op2val:0xbfeaf1ce04f135ab; op3val:0x3fdbabdf3c66389c; valaddr_reg:x16; val_offset:744; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 744, x17, x15, 1264, x18)

inst_1477:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e7d2e4d6296 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf1ce04f135ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbabdf3c66389c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06e7d2e4d6296; op2val:0xbfeaf1ce04f135ab; op3val:0x3fdbabdf3c66389c; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1280, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x3fe8bed35a84b2c1
.dword 0xbfa8f6ecde6240ad
.dword 0x3fe8bed35a84b2c1
.dword 0x3fecc8d2a53c8f5d
.dword 0xbfc60941631c6898
.dword 0x3fc3d2641dead4b8
.dword 0x3fecc8d2a53c8f5d
.dword 0xbfc60941631c6898
.dword 0x3fc3d2641dead4b8
.dword 0x3fecc8d2a53c8f5d
.dword 0xbfc60941631c6898
.dword 0xbfc60941631c6898
.dword 0x3fecc8d2a53c8f5d
.dword 0xbfc60941631c6898
.dword 0x3fecc8d2a53c8f5d
.dword 0x3fecc8d2a53c8f5d
.dword 0xbfc60941631c6898
.dword 0x3fc3d2641dead4b8
.dword 0x3fe06e7d2e4d6296
.dword 0x3fe06e7d2e4d6296
.dword 0x3fe06e7d2e4d6296
.dword 0x3fe06e7d2e4d6296
.dword 0x3fe06e7d2e4d6296
.dword 0x3fdbabdf3c66389c
.dword 0x3fe06e7d2e4d6296
.dword 0x3fe06e7d2e4d6296
.dword 0x3fe06e7d2e4d6296
.dword 0x3fe06e7d2e4d6296
.dword 0xbfeaf1ce04f135ab
.dword 0xbfeaf1ce04f135ab
.dword 0x3fe06e7d2e4d6296
.dword 0x3fe06e7d2e4d6296
.dword 0x3fdbabdf3c66389c
.dword 0x3fec99c56b942f91
.dword 0xbfece1fbb3289681
.dword 0x3fe9d086e883066c
.dword 0x3fec99c56b942f91
.dword 0xbfece1fbb3289681
.dword 0x3fe9d086e883066c
.dword 0x3fec99c56b942f91
.dword 0xbfece1fbb3289681
.dword 0x3fe9d086e883066c
.dword 0x3fec99c56b942f91
.dword 0xbfece1fbb3289681
.dword 0x3fe9d086e883066c
.dword 0x3fec99c56b942f91
.dword 0xbfece1fbb3289681
.dword 0x3fe9d086e883066c
.dword 0x3fe4382c46fb3685
.dword 0xbff100ca9ae9d057
.dword 0x3fe57caf145e0d89
.dword 0x3fe4382c46fb3685
.dword 0xbff100ca9ae9d057
.dword 0x3fe57caf145e0d89
.dword 0x3fe4382c46fb3685
.dword 0xbff100ca9ae9d057
.dword 0x3fe57caf145e0d89
.dword 0x3fe4382c46fb3685
.dword 0xbff100ca9ae9d057
.dword 0x3fe57caf145e0d89
.dword 0x3fe4382c46fb3685
.dword 0xbff100ca9ae9d057
.dword 0x3fe57caf145e0d89
.dword 0x3fdaac43073e8a8a
.dword 0xbff55cd0bfdd6cc1
.dword 0x3fe1ce693d164e38
.dword 0x3fdaac43073e8a8a
.dword 0xbff55cd0bfdd6cc1
.dword 0x3fe1ce693d164e38
.dword 0x3fdaac43073e8a8a
.dword 0xbff55cd0bfdd6cc1
.dword 0x3fe1ce693d164e38
.dword 0x3fdaac43073e8a8a
.dword 0xbff55cd0bfdd6cc1
.dword 0x3fe1ce693d164e38
.dword 0x3fdaac43073e8a8a
.dword 0xbff55cd0bfdd6cc1
.dword 0x3fe1ce693d164e38
.dword 0x3fdef247241252ca
.dword 0xbfec4afb5a360c27
.dword 0x3fdb5c8197af226e
.dword 0x3fdef247241252ca
.dword 0xbfec4afb5a360c27
.dword 0x3fdb5c8197af226e
.dword 0x3fdef247241252ca
.dword 0xbfec4afb5a360c27
.dword 0x3fdb5c8197af226e
.dword 0x3fdef247241252ca
.dword 0xbfec4afb5a360c27
.dword 0x3fdb5c8197af226e
.dword 0x3fdef247241252ca
.dword 0xbfec4afb5a360c27
.dword 0x3fdb5c8197af226e
.dword 0x3fe4dacf26c7d0bc
.dword 0xbff59f1add9dd906
.dword 0x3fec2e9151e44ddd
.dword 0x3fe4dacf26c7d0bc
.dword 0xbff59f1add9dd906
.dword 0x3fec2e9151e44ddd
.dword 0x3fe4dacf26c7d0bc
.dword 0xbff59f1add9dd906
.dword 0x3fec2e9151e44ddd
.dword 0x3fe4dacf26c7d0bc
.dword 0xbff59f1add9dd906
.dword 0x3fec2e9151e44ddd
.dword 0x3fe4dacf26c7d0bc
.dword 0xbff59f1add9dd906
.dword 0x3fec2e9151e44ddd
.dword 0x3fcdbac849ee158c
.dword 0xc010b647aed56b64
.dword 0x3fef0d7a21eba20b
.dword 0x3fcdbac849ee158c
.dword 0xc010b647aed56b64
.dword 0x3fef0d7a21eba20b
.dword 0x3fcdbac849ee158c
.dword 0xc010b647aed56b64
.dword 0x3fef0d7a21eba20b
.dword 0x3fcdbac849ee158c
.dword 0xc010b647aed56b64
.dword 0x3fef0d7a21eba20b
.dword 0x3fcdbac849ee158c
.dword 0xc010b647aed56b64
.dword 0x3fef0d7a21eba20b
.dword 0x3fd2d0a4ee74736c
.dword 0xbffe964efeb613ee
.dword 0x3fe1fbfb17001ed5
.dword 0x3fd2d0a4ee74736c
.dword 0xbffe964efeb613ee
.dword 0x3fe1fbfb17001ed5
.dword 0x3fd2d0a4ee74736c
.dword 0xbffe964efeb613ee
.dword 0x3fe1fbfb17001ed5
.dword 0x3fd2d0a4ee74736c
.dword 0xbffe964efeb613ee
.dword 0x3fe1fbfb17001ed5
.dword 0x3fd2d0a4ee74736c
.dword 0xbffe964efeb613ee
.dword 0x3fe1fbfb17001ed5
.dword 0x3fe077cbdeb5a8d5
.dword 0xbfead47b91b90ed0
.dword 0x3fdb9d5dc6197962
.dword 0x3fe077cbdeb5a8d5
.dword 0xbfead47b91b90ed0
.dword 0x3fdb9d5dc6197962
.dword 0x3fe077cbdeb5a8d5
.dword 0xbfead47b91b90ed0
.dword 0x3fdb9d5dc6197962
.dword 0x3fe077cbdeb5a8d5
.dword 0xbfead47b91b90ed0
.dword 0x3fdb9d5dc6197962
.dword 0x3fe077cbdeb5a8d5
.dword 0xbfead47b91b90ed0
.dword 0x3fdb9d5dc6197962
.dword 0x3fec09d97f45a199
.dword 0xbfedca98c2136b24
.dword 0x3fea1a71212058d7
.dword 0x3fec09d97f45a199
.dword 0xbfedca98c2136b24
.dword 0x3fea1a71212058d7
.dword 0x3fec09d97f45a199
.dword 0xbfedca98c2136b24
.dword 0x3fea1a71212058d7
.dword 0x3fec09d97f45a199
.dword 0xbfedca98c2136b24
.dword 0x3fea1a71212058d7
.dword 0x3fec09d97f45a199
.dword 0xbfedca98c2136b24
.dword 0x3fea1a71212058d7
.dword 0x3fea318f9e6bb000
.dword 0xbff19116e58d042d
.dword 0x3fecc22f39cfc7e2
.dword 0x3fea318f9e6bb000
.dword 0xbff19116e58d042d
.dword 0x3fecc22f39cfc7e2
.dword 0x3fea318f9e6bb000
.dword 0xbff19116e58d042d
.dword 0x3fecc22f39cfc7e2
.dword 0x3fea318f9e6bb000
.dword 0xbff19116e58d042d
.dword 0x3fecc22f39cfc7e2
.dword 0x3fea318f9e6bb000
.dword 0xbff19116e58d042d
.dword 0x3fecc22f39cfc7e2
.dword 0x3fd7b8ced1341a78
.dword 0xbffe8d207b6f02ba
.dword 0x3fe6a5e047ba1da0
.dword 0x3fd7b8ced1341a78
.dword 0xbffe8d207b6f02ba
.dword 0x3fe6a5e047ba1da0
.dword 0x3fd7b8ced1341a78
.dword 0xbffe8d207b6f02ba
.dword 0x3fe6a5e047ba1da0
.dword 0x3fd7b8ced1341a78
.dword 0xbffe8d207b6f02ba
.dword 0x3fe6a5e047ba1da0
.dword 0x3fd7b8ced1341a78
.dword 0xbffe8d207b6f02ba
.dword 0x3fe6a5e047ba1da0
.dword 0x3fdcef5f1f78b728
.dword 0xbfe8aa8728971c09
.dword 0x3fd64db9377ee13a
.dword 0x3fdcef5f1f78b728
.dword 0xbfe8aa8728971c09
.dword 0x3fd64db9377ee13a
.dword 0x3fdcef5f1f78b728
.dword 0xbfe8aa8728971c09
.dword 0x3fd64db9377ee13a
.dword 0x3fdcef5f1f78b728
.dword 0xbfe8aa8728971c09
.dword 0x3fd64db9377ee13a
.dword 0x3fdcef5f1f78b728
.dword 0xbfe8aa8728971c09
.dword 0x3fd64db9377ee13a
.dword 0x3fd31f42d0748d38
.dword 0xc005b0d692c7b9f2
.dword 0x3fe9ec600217943a
.dword 0x3fd31f42d0748d38
.dword 0xc005b0d692c7b9f2
.dword 0x3fe9ec600217943a
.dword 0x3fd31f42d0748d38
.dword 0xc005b0d692c7b9f2
.dword 0x3fe9ec600217943a
.dword 0x3fd31f42d0748d38
.dword 0xc005b0d692c7b9f2
.dword 0x3fe9ec600217943a
.dword 0x3fd31f42d0748d38
.dword 0xc005b0d692c7b9f2
.dword 0x3fe9ec600217943a
.dword 0x3fd3f1312c39cf68
.dword 0xbffcd76b52502082
.dword 0x3fe1f94a6adc2304
.dword 0x3fd3f1312c39cf68
.dword 0xbffcd76b52502082
.dword 0x3fe1f94a6adc2304
.dword 0x3fd3f1312c39cf68
.dword 0xbffcd76b52502082
.dword 0x3fe1f94a6adc2304
.dword 0x3fd3f1312c39cf68
.dword 0xbffcd76b52502082
.dword 0x3fe1f94a6adc2304
.dword 0x3fd3f1312c39cf68
.dword 0xbffcd76b52502082
.dword 0x3fe1f94a6adc2304
.dword 0x3fdcad63a955ecc6
.dword 0xbfe46784d90867d2
.dword 0x3fd2492370592f48
.dword 0x3fdcad63a955ecc6
.dword 0xbfe46784d90867d2
.dword 0x3fd2492370592f48
.dword 0x3fdcad63a955ecc6
.dword 0xbfe46784d90867d2
.dword 0x3fd2492370592f48
.dword 0x3fdcad63a955ecc6
.dword 0xbfe46784d90867d2
.dword 0x3fd2492370592f48
.dword 0x3fdcad63a955ecc6
.dword 0xbfe46784d90867d2
.dword 0x3fd2492370592f48
.dword 0x3fe7306ef7b7be99
.dword 0xbfbf50ea6f24f42a
.dword 0x3fb6b18e781b87c8
.dword 0x3fe7306ef7b7be99
.dword 0xbfbf50ea6f24f42a
.dword 0x3fb6b18e781b87c8
.dword 0x3fe7306ef7b7be99
.dword 0xbfbf50ea6f24f42a
.dword 0x3fb6b18e781b87c8
.dword 0x3fe7306ef7b7be99
.dword 0xbfbf50ea6f24f42a
.dword 0x3fb6b18e781b87c8
.dword 0x3fe7306ef7b7be99
.dword 0xbfbf50ea6f24f42a
.dword 0x3fb6b18e781b87c8
.dword 0x3fd49315eccc6a62
.dword 0xbff39257c68bae1a
.dword 0x3fd92ad9105a8c38
.dword 0x3fd49315eccc6a62
.dword 0xbff39257c68bae1a
.dword 0x3fd92ad9105a8c38
.dword 0x3fd49315eccc6a62
.dword 0xbff39257c68bae1a
.dword 0x3fd92ad9105a8c38
.dword 0x3fd49315eccc6a62
.dword 0xbff39257c68bae1a
.dword 0x3fd92ad9105a8c38
.dword 0x3fd49315eccc6a62
.dword 0xbff39257c68bae1a
.dword 0x3fd92ad9105a8c38
.dword 0x3fe4930f969667df
.dword 0xbfe770e3d00e4fd4
.dword 0x3fde2490c78dac98
.dword 0x3fe4930f969667df
.dword 0xbfe770e3d00e4fd4
.dword 0x3fde2490c78dac98
.dword 0x3fe4930f969667df
.dword 0xbfe770e3d00e4fd4
.dword 0x3fde2490c78dac98
.dword 0x3fe4930f969667df
.dword 0xbfe770e3d00e4fd4
.dword 0x3fde2490c78dac98
.dword 0x3fe4930f969667df
.dword 0xbfe770e3d00e4fd4
.dword 0x3fde2490c78dac98
.dword 0x3fca93ac41d4b2fc
.dword 0xbfdfe472a2eb2a94
.dword 0x3fba7cca407fab48
.dword 0x3fca93ac41d4b2fc
.dword 0xbfdfe472a2eb2a94
.dword 0x3fba7cca407fab48
.dword 0x3fca93ac41d4b2fc
.dword 0xbfdfe472a2eb2a94
.dword 0x3fba7cca407fab48
.dword 0x3fca93ac41d4b2fc
.dword 0xbfdfe472a2eb2a94
.dword 0x3fba7cca407fab48
.dword 0x3fca93ac41d4b2fc
.dword 0xbfdfe472a2eb2a94
.dword 0x3fba7cca407fab48
.dword 0x3fea2757baced6e7
.dword 0xbff07555fe4abaf2
.dword 0x3feae723fd01a816
.dword 0x3fea2757baced6e7
.dword 0xbff07555fe4abaf2
.dword 0x3feae723fd01a816
.dword 0x3fea2757baced6e7
.dword 0xbff07555fe4abaf2
.dword 0x3feae723fd01a816
.dword 0x3fea2757baced6e7
.dword 0xbff07555fe4abaf2
.dword 0x3feae723fd01a816
.dword 0x3fea2757baced6e7
.dword 0xbff07555fe4abaf2
.dword 0x3feae723fd01a816
.dword 0x3fd80e8c7f135eee
.dword 0xbff78dc42844e792
.dword 0x3fe1b5088dc8608c
.dword 0x3fd80e8c7f135eee
.dword 0xbff78dc42844e792
.dword 0x3fe1b5088dc8608c
.dword 0x3fd80e8c7f135eee
.dword 0xbff78dc42844e792
.dword 0x3fe1b5088dc8608c
.dword 0x3fd80e8c7f135eee
.dword 0xbff78dc42844e792
.dword 0x3fe1b5088dc8608c
.dword 0x3fd80e8c7f135eee
.dword 0xbff78dc42844e792
.dword 0x3fe1b5088dc8608c
.dword 0x3fdbbeb7d3a1380a
.dword 0xbfbc4bd03f2d7cad
.dword 0x3fa8889c6676dcb0
.dword 0x3fdbbeb7d3a1380a
.dword 0xbfbc4bd03f2d7cad
.dword 0x3fa8889c6676dcb0
.dword 0x3fdbbeb7d3a1380a
.dword 0xbfbc4bd03f2d7cad
.dword 0x3fa8889c6676dcb0
.dword 0x3fdbbeb7d3a1380a
.dword 0xbfbc4bd03f2d7cad
.dword 0x3fa8889c6676dcb0
.dword 0x3fdbbeb7d3a1380a
.dword 0xbfbc4bd03f2d7cad
.dword 0x3fa8889c6676dcb0
.dword 0x3fb58f0f1573b368
.dword 0xc0090e27ed671220
.dword 0x3fd0e14d45a72152
.dword 0x3fb58f0f1573b368
.dword 0xc0090e27ed671220
.dword 0x3fd0e14d45a72152
.dword 0x3fb58f0f1573b368
.dword 0xc0090e27ed671220
.dword 0x3fd0e14d45a72152
.dword 0x3fb58f0f1573b368
.dword 0xc0090e27ed671220
.dword 0x3fd0e14d45a72152
.dword 0x3fb58f0f1573b368
.dword 0xc0090e27ed671220
.dword 0x3fd0e14d45a72152
.dword 0x3fdf572e218a064c
.dword 0xbfe3ce89359cc36e
.dword 0x3fd3660afea148ac
.dword 0x3fdf572e218a064c
.dword 0xbfe3ce89359cc36e
.dword 0x3fd3660afea148ac
.dword 0x3fdf572e218a064c
.dword 0xbfe3ce89359cc36e
.dword 0x3fd3660afea148ac
.dword 0x3fdf572e218a064c
.dword 0xbfe3ce89359cc36e
.dword 0x3fd3660afea148ac
.dword 0x3fdf572e218a064c
.dword 0xbfe3ce89359cc36e
.dword 0x3fd3660afea148ac
.dword 0x3fec3c2d3db48632
.dword 0xbfb63ac337c64dcb
.dword 0x3fb39d386c560a38
.dword 0x3fec3c2d3db48632
.dword 0xbfb63ac337c64dcb
.dword 0x3fb39d386c560a38
.dword 0x3fec3c2d3db48632
.dword 0xbfb63ac337c64dcb
.dword 0x3fb39d386c560a38
.dword 0x3fec3c2d3db48632
.dword 0xbfb63ac337c64dcb
.dword 0x3fb39d386c560a38
.dword 0x3fec3c2d3db48632
.dword 0xbfb63ac337c64dcb
.dword 0x3fb39d386c560a38
.dword 0x3fc93e17a54dbd28
.dword 0xc0110abdb421c610
.dword 0x3feae2eb38110cc5
.dword 0x3fc93e17a54dbd28
.dword 0xc0110abdb421c610
.dword 0x3feae2eb38110cc5
.dword 0x3fc93e17a54dbd28
.dword 0xc0110abdb421c610
.dword 0x3feae2eb38110cc5
.dword 0x3fc93e17a54dbd28
.dword 0xc0110abdb421c610
.dword 0x3feae2eb38110cc5
.dword 0x3fc93e17a54dbd28
.dword 0xc0110abdb421c610
.dword 0x3feae2eb38110cc5
.dword 0x3fe1a3ae85e846e7
.dword 0xbfee877b686032da
.dword 0x3fe0d4222c7e7f5f
.dword 0x3fe1a3ae85e846e7
.dword 0xbfee877b686032da
.dword 0x3fe0d4222c7e7f5f
.dword 0x3fe1a3ae85e846e7
.dword 0xbfee877b686032da
.dword 0x3fe0d4222c7e7f5f
.dword 0x3fe1a3ae85e846e7
.dword 0xbfee877b686032da
.dword 0x3fe0d4222c7e7f5f
.dword 0x3fe1a3ae85e846e7
.dword 0xbfee877b686032da
.dword 0x3fe0d4222c7e7f5f
.dword 0x3fdf78e532cc9c04
.dword 0xbff37d16180dc4ac
.dword 0x3fe32ace103db541
.dword 0x3fdf78e532cc9c04
.dword 0xbff37d16180dc4ac
.dword 0x3fe32ace103db541
.dword 0x3fdf78e532cc9c04
.dword 0xbff37d16180dc4ac
.dword 0x3fe32ace103db541
.dword 0x3fdf78e532cc9c04
.dword 0xbff37d16180dc4ac
.dword 0x3fe32ace103db541
.dword 0x3fdf78e532cc9c04
.dword 0xbff37d16180dc4ac
.dword 0x3fe32ace103db541
.dword 0x3fd3ca9b178997d6
.dword 0xbff925fa13fe16bf
.dword 0x3fdf1b8c31df9fe0
.dword 0x3fd3ca9b178997d6
.dword 0xbff925fa13fe16bf
.dword 0x3fdf1b8c31df9fe0
.dword 0x3fd3ca9b178997d6
.dword 0xbff925fa13fe16bf
.dword 0x3fdf1b8c31df9fe0
.dword 0x3fd3ca9b178997d6
.dword 0xbff925fa13fe16bf
.dword 0x3fdf1b8c31df9fe0
.dword 0x3fd3ca9b178997d6
.dword 0xbff925fa13fe16bf
.dword 0x3fdf1b8c31df9fe0
.dword 0x3fdd604cc826657a
.dword 0xbfe731fbdae649c3
.dword 0x3fd54b19d9bbc89a
.dword 0x3fdd604cc826657a
.dword 0xbfe731fbdae649c3
.dword 0x3fd54b19d9bbc89a
.dword 0x3fdd604cc826657a
.dword 0xbfe731fbdae649c3
.dword 0x3fd54b19d9bbc89a
.dword 0x3fdd604cc826657a
.dword 0xbfe731fbdae649c3
.dword 0x3fd54b19d9bbc89a
.dword 0x3fdd604cc826657a
.dword 0xbfe731fbdae649c3
.dword 0x3fd54b19d9bbc89a
.dword 0x3fce67354c0f5c24
.dword 0xbfe032a645ea09fc
.dword 0x3fbec773c63fcf80
.dword 0x3fce67354c0f5c24
.dword 0xbfe032a645ea09fc
.dword 0x3fbec773c63fcf80
.dword 0x3fce67354c0f5c24
.dword 0xbfe032a645ea09fc
.dword 0x3fbec773c63fcf80
.dword 0x3fce67354c0f5c24
.dword 0xbfe032a645ea09fc
.dword 0x3fbec773c63fcf80
.dword 0x3fce67354c0f5c24
.dword 0xbfe032a645ea09fc
.dword 0x3fbec773c63fcf80
.dword 0x3fe0b84574a6c9c5
.dword 0xbff04b4db856b2c9
.dword 0x3fe106f671a99100
.dword 0x3fe0b84574a6c9c5
.dword 0xbff04b4db856b2c9
.dword 0x3fe106f671a99100
.dword 0x3fe0b84574a6c9c5
.dword 0xbff04b4db856b2c9
.dword 0x3fe106f671a99100
.dword 0x3fe0b84574a6c9c5
.dword 0xbff04b4db856b2c9
.dword 0x3fe106f671a99100
.dword 0x3fe0b84574a6c9c5
.dword 0xbff04b4db856b2c9
.dword 0x3fe106f671a99100
.dword 0x3f9e909d8dd80760
.dword 0xbffabe28e71652db
.dword 0x3fa98b21bc37ede0
.dword 0x3f9e909d8dd80760
.dword 0xbffabe28e71652db
.dword 0x3fa98b21bc37ede0
.dword 0x3f9e909d8dd80760
.dword 0xbffabe28e71652db
.dword 0x3fa98b21bc37ede0
.dword 0x3f9e909d8dd80760
.dword 0xbffabe28e71652db
.dword 0x3fa98b21bc37ede0
.dword 0x3f9e909d8dd80760
.dword 0xbffabe28e71652db
.dword 0x3fa98b21bc37ede0
.dword 0x3fca2a5f5b9a588c
.dword 0xbffd109eb5aea847
.dword 0x3fd7c3fd6076fd12
.dword 0x3fca2a5f5b9a588c
.dword 0xbffd109eb5aea847
.dword 0x3fd7c3fd6076fd12
.dword 0x3fca2a5f5b9a588c
.dword 0xbffd109eb5aea847
.dword 0x3fd7c3fd6076fd12
.dword 0x3fca2a5f5b9a588c
.dword 0xbffd109eb5aea847
.dword 0x3fd7c3fd6076fd12
.dword 0x3fca2a5f5b9a588c
.dword 0xbffd109eb5aea847
.dword 0x3fd7c3fd6076fd12
.dword 0x3feaefcaa82456e2
.dword 0xbfe35cca77dccc04
.dword 0x3fe04c7c290dd764
.dword 0x3feaefcaa82456e2
.dword 0xbfe35cca77dccc04
.dword 0x3fe04c7c290dd764
.dword 0x3feaefcaa82456e2
.dword 0xbfe35cca77dccc04
.dword 0x3fe04c7c290dd764
.dword 0x3feaefcaa82456e2
.dword 0xbfe35cca77dccc04
.dword 0x3fe04c7c290dd764
.dword 0x3feaefcaa82456e2
.dword 0xbfe35cca77dccc04
.dword 0x3fe04c7c290dd764
.dword 0x3fe5fc1a144d049b
.dword 0xbfe7e2397cced79b
.dword 0x3fe0689eb5942f80
.dword 0x3fe5fc1a144d049b
.dword 0xbfe7e2397cced79b
.dword 0x3fe0689eb5942f80
.dword 0x3fe5fc1a144d049b
.dword 0xbfe7e2397cced79b
.dword 0x3fe0689eb5942f80
.dword 0x3fe5fc1a144d049b
.dword 0xbfe7e2397cced79b
.dword 0x3fe0689eb5942f80
.dword 0x3fe5fc1a144d049b
.dword 0xbfe7e2397cced79b
.dword 0x3fe0689eb5942f80
.dword 0x3fe544e62a9f1383
.dword 0xbfed9fd99bfc7c10
.dword 0x3fe3b0af912a4d07
.dword 0x3fe544e62a9f1383
.dword 0xbfed9fd99bfc7c10
.dword 0x3fe3b0af912a4d07
.dword 0x3fe544e62a9f1383
.dword 0xbfed9fd99bfc7c10
.dword 0x3fe3b0af912a4d07
.dword 0x3fe544e62a9f1383
.dword 0xbfed9fd99bfc7c10
.dword 0x3fe3b0af912a4d07
.dword 0x3fe544e62a9f1383
.dword 0xbfed9fd99bfc7c10
.dword 0x3fe3b0af912a4d07
.dword 0x3fd797bc50a1bdbc
.dword 0xc004150785e33142
.dword 0x3fed9cada3c2b37b
.dword 0x3fd797bc50a1bdbc
.dword 0xc004150785e33142
.dword 0x3fed9cada3c2b37b
.dword 0x3fd797bc50a1bdbc
.dword 0xc004150785e33142
.dword 0x3fed9cada3c2b37b
.dword 0x3fd797bc50a1bdbc
.dword 0xc004150785e33142
.dword 0x3fed9cada3c2b37b
.dword 0x3fd797bc50a1bdbc
.dword 0xc004150785e33142
.dword 0x3fed9cada3c2b37b
.dword 0x3fdcf5bc77c63b7e
.dword 0xbffc591492588f6f
.dword 0x3fe9a7a2fb01afb7
.dword 0x3fdcf5bc77c63b7e
.dword 0xbffc591492588f6f
.dword 0x3fe9a7a2fb01afb7
.dword 0x3fdcf5bc77c63b7e
.dword 0xbffc591492588f6f
.dword 0x3fe9a7a2fb01afb7
.dword 0x3fdcf5bc77c63b7e
.dword 0xbffc591492588f6f
.dword 0x3fe9a7a2fb01afb7
.dword 0x3fdcf5bc77c63b7e
.dword 0xbffc591492588f6f
.dword 0x3fe9a7a2fb01afb7
.dword 0x3f537c8c71046800
.dword 0xc08306070bc01f37
.dword 0x3fe72b3e0facabc0
.dword 0x3f537c8c71046800
.dword 0xc08306070bc01f37
.dword 0x3fe72b3e0facabc0
.dword 0x3f537c8c71046800
.dword 0xc08306070bc01f37
.dword 0x3fe72b3e0facabc0
.dword 0x3f537c8c71046800
.dword 0xc08306070bc01f37
.dword 0x3fe72b3e0facabc0
.dword 0x3f537c8c71046800
.dword 0xc08306070bc01f37
.dword 0x3fe72b3e0facabc0
.dword 0x3fd8de9966990f6a
.dword 0xc0023d98c6af7d52
.dword 0x3fec5a2ab3c8175e
.dword 0x3fd8de9966990f6a
.dword 0xc0023d98c6af7d52
.dword 0x3fec5a2ab3c8175e
.dword 0x3fd8de9966990f6a
.dword 0xc0023d98c6af7d52
.dword 0x3fec5a2ab3c8175e
.dword 0x3fd8de9966990f6a
.dword 0xc0023d98c6af7d52
.dword 0x3fec5a2ab3c8175e
.dword 0x3fd8de9966990f6a
.dword 0xc0023d98c6af7d52
.dword 0x3fec5a2ab3c8175e
.dword 0x3fe082c4447e9eae
.dword 0xbfea01ca8c32c11a
.dword 0x3fdad6581f2c7fc4
.dword 0x3fe082c4447e9eae
.dword 0xbfea01ca8c32c11a
.dword 0x3fdad6581f2c7fc4
.dword 0x3fe082c4447e9eae
.dword 0xbfea01ca8c32c11a
.dword 0x3fdad6581f2c7fc4
.dword 0x3fe082c4447e9eae
.dword 0xbfea01ca8c32c11a
.dword 0x3fdad6581f2c7fc4
.dword 0x3fe082c4447e9eae
.dword 0xbfea01ca8c32c11a
.dword 0x3fdad6581f2c7fc4
.dword 0x3fdff84e9572e12e
.dword 0xbff4191bfd1bc999
.dword 0x3fe41447112dccce
.dword 0x3fdff84e9572e12e
.dword 0xbff4191bfd1bc999
.dword 0x3fe41447112dccce
.dword 0x3fdff84e9572e12e
.dword 0xbff4191bfd1bc999
.dword 0x3fe41447112dccce
.dword 0x3fdff84e9572e12e
.dword 0xbff4191bfd1bc999
.dword 0x3fe41447112dccce
.dword 0x3fdff84e9572e12e
.dword 0xbff4191bfd1bc999
.dword 0x3fe41447112dccce
.dword 0x3fac4fab12e9ba70
.dword 0xc01c68a06c13f37b
.dword 0x3fd922468a7fe168
.dword 0x3fac4fab12e9ba70
.dword 0xc01c68a06c13f37b
.dword 0x3fd922468a7fe168
.dword 0x3fac4fab12e9ba70
.dword 0xc01c68a06c13f37b
.dword 0x3fd922468a7fe168
.dword 0x3fac4fab12e9ba70
.dword 0xc01c68a06c13f37b
.dword 0x3fd922468a7fe168
.dword 0x3fac4fab12e9ba70
.dword 0xc01c68a06c13f37b
.dword 0x3fd922468a7fe168
.dword 0x3fe996df2fef42e5
.dword 0xbfd39a117985dca4
.dword 0x3fcf59911fc1b01c
.dword 0x3fe996df2fef42e5
.dword 0xbfd39a117985dca4
.dword 0x3fcf59911fc1b01c
.dword 0x3fe996df2fef42e5
.dword 0xbfd39a117985dca4
.dword 0x3fcf59911fc1b01c
.dword 0x3fe996df2fef42e5
.dword 0xbfd39a117985dca4
.dword 0x3fcf59911fc1b01c
.dword 0x3fe996df2fef42e5
.dword 0xbfd39a117985dca4
.dword 0x3fcf59911fc1b01c
.dword 0x3fbdae4484794eb0
.dword 0xbfcae30ebaa29cd7
.dword 0x3f98f0318b080860
.dword 0x3fbdae4484794eb0
.dword 0xbfcae30ebaa29cd7
.dword 0x3f98f0318b080860
.dword 0x3fbdae4484794eb0
.dword 0xbfcae30ebaa29cd7
.dword 0x3f98f0318b080860
.dword 0x3fbdae4484794eb0
.dword 0xbfcae30ebaa29cd7
.dword 0x3f98f0318b080860
.dword 0x3fbdae4484794eb0
.dword 0xbfcae30ebaa29cd7
.dword 0x3f98f0318b080860
.dword 0x3fe066de56a5de6f
.dword 0xbfec390a8eadf9e8
.dword 0x3fdcee7e62453806
.dword 0x3fe066de56a5de6f
.dword 0xbfec390a8eadf9e8
.dword 0x3fdcee7e62453806
.dword 0x3fe066de56a5de6f
.dword 0xbfec390a8eadf9e8
.dword 0x3fdcee7e62453806
.dword 0x3fe066de56a5de6f
.dword 0xbfec390a8eadf9e8
.dword 0x3fdcee7e62453806
.dword 0x3fe066de56a5de6f
.dword 0xbfec390a8eadf9e8
.dword 0x3fdcee7e62453806
.dword 0x3fe1b524be5ad761
.dword 0xbfe736a9e82a19fd
.dword 0x3fd9b0e437ea4fde
.dword 0x3fe1b524be5ad761
.dword 0xbfe736a9e82a19fd
.dword 0x3fd9b0e437ea4fde
.dword 0x3fe1b524be5ad761
.dword 0xbfe736a9e82a19fd
.dword 0x3fd9b0e437ea4fde
.dword 0x3fe1b524be5ad761
.dword 0xbfe736a9e82a19fd
.dword 0x3fd9b0e437ea4fde
.dword 0x3fe1b524be5ad761
.dword 0xbfe736a9e82a19fd
.dword 0x3fd9b0e437ea4fde
.dword 0x3fc250938133dc44
.dword 0xc002ba997905c879
.dword 0x3fd5703e5122d056
.dword 0x3fc250938133dc44
.dword 0xc002ba997905c879
.dword 0x3fd5703e5122d056
.dword 0x3fc250938133dc44
.dword 0xc002ba997905c879
.dword 0x3fd5703e5122d056
.dword 0x3fc250938133dc44
.dword 0xc002ba997905c879
.dword 0x3fd5703e5122d056
.dword 0x3fc250938133dc44
.dword 0xc002ba997905c879
.dword 0x3fd5703e5122d056
.dword 0x3fec3535f7870e95
.dword 0xbfe648a01acf8bb5
.dword 0x3fe3a499f549cebf
.dword 0x3fec3535f7870e95
.dword 0xbfe648a01acf8bb5
.dword 0x3fe3a499f549cebf
.dword 0x3fec3535f7870e95
.dword 0xbfe648a01acf8bb5
.dword 0x3fe3a499f549cebf
.dword 0x3fec3535f7870e95
.dword 0xbfe648a01acf8bb5
.dword 0x3fe3a499f549cebf
.dword 0x3fec3535f7870e95
.dword 0xbfe648a01acf8bb5
.dword 0x3fe3a499f549cebf
.dword 0x3fe33a05aa93ca4b
.dword 0xbfd89ee02db08b8b
.dword 0x3fcd95f2db08ccd0
.dword 0x3fe33a05aa93ca4b
.dword 0xbfd89ee02db08b8b
.dword 0x3fcd95f2db08ccd0
.dword 0x3fe33a05aa93ca4b
.dword 0xbfd89ee02db08b8b
.dword 0x3fcd95f2db08ccd0
.dword 0x3fe33a05aa93ca4b
.dword 0xbfd89ee02db08b8b
.dword 0x3fcd95f2db08ccd0
.dword 0x3fe33a05aa93ca4b
.dword 0xbfd89ee02db08b8b
.dword 0x3fcd95f2db08ccd0
.dword 0x3fc47d3c9fa92d78
.dword 0xbfdf4d5106d1efc9
.dword 0x3fb40ad3f5eb6e20
.dword 0x3fc47d3c9fa92d78
.dword 0xbfdf4d5106d1efc9
.dword 0x3fb40ad3f5eb6e20
.dword 0x3fc47d3c9fa92d78
.dword 0xbfdf4d5106d1efc9
.dword 0x3fb40ad3f5eb6e20
.dword 0x3fc47d3c9fa92d78
.dword 0xbfdf4d5106d1efc9
.dword 0x3fb40ad3f5eb6e20
.dword 0x3fc47d3c9fa92d78
.dword 0xbfdf4d5106d1efc9
.dword 0x3fb40ad3f5eb6e20
.dword 0x3fe86d90251ec13e
.dword 0xbfe106ef01c8fa1d
.dword 0x3fd9feff24d173be
.dword 0x3fe86d90251ec13e
.dword 0xbfe106ef01c8fa1d
.dword 0x3fd9feff24d173be
.dword 0x3fe86d90251ec13e
.dword 0xbfe106ef01c8fa1d
.dword 0x3fd9feff24d173be
.dword 0x3fe86d90251ec13e
.dword 0xbfe106ef01c8fa1d
.dword 0x3fd9feff24d173be
.dword 0x3fe86d90251ec13e
.dword 0xbfe106ef01c8fa1d
.dword 0x3fd9feff24d173be
.dword 0x3f7e024edb715280
.dword 0xc05d4fed36142bb2
.dword 0x3feb7d0b9d5b4b45
.dword 0x3f7e024edb715280
.dword 0xc05d4fed36142bb2
.dword 0x3feb7d0b9d5b4b45
.dword 0x3f7e024edb715280
.dword 0xc05d4fed36142bb2
.dword 0x3feb7d0b9d5b4b45
.dword 0x3f7e024edb715280
.dword 0xc05d4fed36142bb2
.dword 0x3feb7d0b9d5b4b45
.dword 0x3f7e024edb715280
.dword 0xc05d4fed36142bb2
.dword 0x3feb7d0b9d5b4b45
.dword 0x3fe7780b8bb62a7b
.dword 0xbfe83c810b60302c
.dword 0x3fe1c66862b4f011
.dword 0x3fe7780b8bb62a7b
.dword 0xbfe83c810b60302c
.dword 0x3fe1c66862b4f011
.dword 0x3fe7780b8bb62a7b
.dword 0xbfe83c810b60302c
.dword 0x3fe1c66862b4f011
.dword 0x3fe7780b8bb62a7b
.dword 0xbfe83c810b60302c
.dword 0x3fe1c66862b4f011
.dword 0x3fe7780b8bb62a7b
.dword 0xbfe83c810b60302c
.dword 0x3fe1c66862b4f011
.dword 0x3fd3fe468ef9050a
.dword 0xbff65d853ac3a170
.dword 0x3fdbf27d79ce274e
.dword 0x3fd3fe468ef9050a
.dword 0xbff65d853ac3a170
.dword 0x3fdbf27d79ce274e
.dword 0x3fd3fe468ef9050a
.dword 0xbff65d853ac3a170
.dword 0x3fdbf27d79ce274e
.dword 0x3fd3fe468ef9050a
.dword 0xbff65d853ac3a170
.dword 0x3fdbf27d79ce274e
.dword 0x3fd3fe468ef9050a
.dword 0xbff65d853ac3a170
.dword 0x3fdbf27d79ce274e
.dword 0x3fd9c46df0a4e7b6
.dword 0xbfffc0f938676a04
.dword 0x3fe991adc2a61c6f
.dword 0x3fd9c46df0a4e7b6
.dword 0xbfffc0f938676a04
.dword 0x3fe991adc2a61c6f
.dword 0x3fd9c46df0a4e7b6
.dword 0xbfffc0f938676a04
.dword 0x3fe991adc2a61c6f
.dword 0x3fd9c46df0a4e7b6
.dword 0xbfffc0f938676a04
.dword 0x3fe991adc2a61c6f
.dword 0x3fd9c46df0a4e7b6
.dword 0xbfffc0f938676a04
.dword 0x3fe991adc2a61c6f
.dword 0x3fe8eebca24c21d0
.dword 0xbfd6c77189350cc7
.dword 0x3fd1bf86ca972ac2
.dword 0x3fe8eebca24c21d0
.dword 0xbfd6c77189350cc7
.dword 0x3fd1bf86ca972ac2
.dword 0x3fe8eebca24c21d0
.dword 0xbfd6c77189350cc7
.dword 0x3fd1bf86ca972ac2
.dword 0x3fe8eebca24c21d0
.dword 0xbfd6c77189350cc7
.dword 0x3fd1bf86ca972ac2
.dword 0x3fe8eebca24c21d0
.dword 0xbfd6c77189350cc7
.dword 0x3fd1bf86ca972ac2
.dword 0x3fead352edc767de
.dword 0xbfed03701e395c70
.dword 0x3fe85264f43b74b5
.dword 0x3fead352edc767de
.dword 0xbfed03701e395c70
.dword 0x3fe85264f43b74b5
.dword 0x3fead352edc767de
.dword 0xbfed03701e395c70
.dword 0x3fe85264f43b74b5
.dword 0x3fead352edc767de
.dword 0xbfed03701e395c70
.dword 0x3fe85264f43b74b5
.dword 0x3fead352edc767de
.dword 0xbfed03701e395c70
.dword 0x3fe85264f43b74b5
.dword 0x3fca09915a9c61f4
.dword 0xbffea5b3ec900a1e
.dword 0x3fd8efcc006ea84e
.dword 0x3fca09915a9c61f4
.dword 0xbffea5b3ec900a1e
.dword 0x3fd8efcc006ea84e
.dword 0x3fca09915a9c61f4
.dword 0xbffea5b3ec900a1e
.dword 0x3fd8efcc006ea84e
.dword 0x3fca09915a9c61f4
.dword 0xbffea5b3ec900a1e
.dword 0x3fd8efcc006ea84e
.dword 0x3fca09915a9c61f4
.dword 0xbffea5b3ec900a1e
.dword 0x3fd8efcc006ea84e
.dword 0x3fe0fed64f9ce8aa
.dword 0xbff77643b856a573
.dword 0x3fe8ebf36deccb1b
.dword 0x3fe0fed64f9ce8aa
.dword 0xbff77643b856a573
.dword 0x3fe8ebf36deccb1b
.dword 0x3fe0fed64f9ce8aa
.dword 0xbff77643b856a573
.dword 0x3fe8ebf36deccb1b
.dword 0x3fe0fed64f9ce8aa
.dword 0xbff77643b856a573
.dword 0x3fe8ebf36deccb1b
.dword 0x3fe0fed64f9ce8aa
.dword 0xbff77643b856a573
.dword 0x3fe8ebf36deccb1b
.dword 0x3fd879818ee7c52e
.dword 0xbff0089b71af5cbd
.dword 0x3fd886ac16acb34c
.dword 0x3fd879818ee7c52e
.dword 0xbff0089b71af5cbd
.dword 0x3fd886ac16acb34c
.dword 0x3fd879818ee7c52e
.dword 0xbff0089b71af5cbd
.dword 0x3fd886ac16acb34c
.dword 0x3fd879818ee7c52e
.dword 0xbff0089b71af5cbd
.dword 0x3fd886ac16acb34c
.dword 0x3fd879818ee7c52e
.dword 0xbff0089b71af5cbd
.dword 0x3fd886ac16acb34c
.dword 0x3fc0bb20263240b4
.dword 0xbfcca853e79a9c58
.dword 0x3f9df77cd14f13c0
.dword 0x3fc0bb20263240b4
.dword 0xbfcca853e79a9c58
.dword 0x3f9df77cd14f13c0
.dword 0x3fc0bb20263240b4
.dword 0xbfcca853e79a9c58
.dword 0x3f9df77cd14f13c0
.dword 0x3fc0bb20263240b4
.dword 0xbfcca853e79a9c58
.dword 0x3f9df77cd14f13c0
.dword 0x3fc0bb20263240b4
.dword 0xbfcca853e79a9c58
.dword 0x3f9df77cd14f13c0
.dword 0x3fd43bf5cc03880c
.dword 0xbfd26a68eb42ac84
.dword 0x3fb74a06712e3a30
.dword 0x3fd43bf5cc03880c
.dword 0xbfd26a68eb42ac84
.dword 0x3fb74a06712e3a30
.dword 0x3fd43bf5cc03880c
.dword 0xbfd26a68eb42ac84
.dword 0x3fb74a06712e3a30
.dword 0x3fd43bf5cc03880c
.dword 0xbfd26a68eb42ac84
.dword 0x3fb74a06712e3a30
.dword 0x3fd43bf5cc03880c
.dword 0xbfd26a68eb42ac84
.dword 0x3fb74a06712e3a30
.dword 0x3fdf9ceec9667200
.dword 0xbfcda4ce1e3a0f97
.dword 0x3fbd49084e6ab090
.dword 0x3fdf9ceec9667200
.dword 0xbfcda4ce1e3a0f97
.dword 0x3fbd49084e6ab090
.dword 0x3fdf9ceec9667200
.dword 0xbfcda4ce1e3a0f97
.dword 0x3fbd49084e6ab090
.dword 0x3fdf9ceec9667200
.dword 0xbfcda4ce1e3a0f97
.dword 0x3fbd49084e6ab090
.dword 0x3fdf9ceec9667200
.dword 0xbfcda4ce1e3a0f97
.dword 0x3fbd49084e6ab090
.dword 0x3fed5d6d7242aeca
.dword 0xbfe6cf3ce14415e8
.dword 0x3fe4ee67786d91f1
.dword 0x3fed5d6d7242aeca
.dword 0xbfe6cf3ce14415e8
.dword 0x3fe4ee67786d91f1
.dword 0x3fed5d6d7242aeca
.dword 0xbfe6cf3ce14415e8
.dword 0x3fe4ee67786d91f1
.dword 0x3fed5d6d7242aeca
.dword 0xbfe6cf3ce14415e8
.dword 0x3fe4ee67786d91f1
.dword 0x3fed5d6d7242aeca
.dword 0xbfe6cf3ce14415e8
.dword 0x3fe4ee67786d91f1
.dword 0x3fe5efb2630b6275
.dword 0xbfe02c77c3c31f00
.dword 0x3fd62ca9c0bf544e
.dword 0x3fe5efb2630b6275
.dword 0xbfe02c77c3c31f00
.dword 0x3fd62ca9c0bf544e
.dword 0x3fe5efb2630b6275
.dword 0xbfe02c77c3c31f00
.dword 0x3fd62ca9c0bf544e
.dword 0x3fe5efb2630b6275
.dword 0xbfe02c77c3c31f00
.dword 0x3fd62ca9c0bf544e
.dword 0x3fe5efb2630b6275
.dword 0xbfe02c77c3c31f00
.dword 0x3fd62ca9c0bf544e
.dword 0x3fe02e570b605c86
.dword 0xbfe1fd33486572da
.dword 0x3fd2314d1966daa8
.dword 0x3fe02e570b605c86
.dword 0xbfe1fd33486572da
.dword 0x3fd2314d1966daa8
.dword 0x3fe02e570b605c86
.dword 0xbfe1fd33486572da
.dword 0x3fd2314d1966daa8
.dword 0x3fe02e570b605c86
.dword 0xbfe1fd33486572da
.dword 0x3fd2314d1966daa8
.dword 0x3fe02e570b605c86
.dword 0xbfe1fd33486572da
.dword 0x3fd2314d1966daa8
.dword 0x3fc117731104c654
.dword 0xbffa56bcd7c7404e
.dword 0x3fcc22c2c02b3678
.dword 0x3fc117731104c654
.dword 0xbffa56bcd7c7404e
.dword 0x3fcc22c2c02b3678
.dword 0x3fc117731104c654
.dword 0xbffa56bcd7c7404e
.dword 0x3fcc22c2c02b3678
.dword 0x3fc117731104c654
.dword 0xbffa56bcd7c7404e
.dword 0x3fcc22c2c02b3678
.dword 0x3fc117731104c654
.dword 0xbffa56bcd7c7404e
.dword 0x3fcc22c2c02b3678
.dword 0x3fc8a93e93a6ea74
.dword 0xbffca10235cc712e
.dword 0x3fd6102bf812b3f8
.dword 0x3fc8a93e93a6ea74
.dword 0xbffca10235cc712e
.dword 0x3fd6102bf812b3f8
.dword 0x3fc8a93e93a6ea74
.dword 0xbffca10235cc712e
.dword 0x3fd6102bf812b3f8
.dword 0x3fc8a93e93a6ea74
.dword 0xbffca10235cc712e
.dword 0x3fd6102bf812b3f8
.dword 0x3fc8a93e93a6ea74
.dword 0xbffca10235cc712e
.dword 0x3fd6102bf812b3f8
.dword 0x3fd321c1064fe8ea
.dword 0xc005b44ff872cbf7
.dword 0x3fe9f3e8b38d681f
.dword 0x3fd321c1064fe8ea
.dword 0xc005b44ff872cbf7
.dword 0x3fe9f3e8b38d681f
.dword 0x3fd321c1064fe8ea
.dword 0xc005b44ff872cbf7
.dword 0x3fe9f3e8b38d681f
.dword 0x3fd321c1064fe8ea
.dword 0xc005b44ff872cbf7
.dword 0x3fe9f3e8b38d681f
.dword 0x3fd321c1064fe8ea
.dword 0xc005b44ff872cbf7
.dword 0x3fe9f3e8b38d681f
.dword 0x3fe9546b552fdc42
.dword 0xbfd8d8b0808afc79
.dword 0x3fd3aad60a70ee04
.dword 0x3fe9546b552fdc42
.dword 0xbfd8d8b0808afc79
.dword 0x3fd3aad60a70ee04
.dword 0x3fe9546b552fdc42
.dword 0xbfd8d8b0808afc79
.dword 0x3fd3aad60a70ee04
.dword 0x3fe9546b552fdc42
.dword 0xbfd8d8b0808afc79
.dword 0x3fd3aad60a70ee04
.dword 0x3fe9546b552fdc42
.dword 0xbfd8d8b0808afc79
.dword 0x3fd3aad60a70ee04
.dword 0x3fd96a17dfd3d600
.dword 0xbff7ee77b51eb931
.dword 0x3fe301a54cd23f48
.dword 0x3fd96a17dfd3d600
.dword 0xbff7ee77b51eb931
.dword 0x3fe301a54cd23f48
.dword 0x3fd96a17dfd3d600
.dword 0xbff7ee77b51eb931
.dword 0x3fe301a54cd23f48
.dword 0x3fd96a17dfd3d600
.dword 0xbff7ee77b51eb931
.dword 0x3fe301a54cd23f48
.dword 0x3fd96a17dfd3d600
.dword 0xbff7ee77b51eb931
.dword 0x3fe301a54cd23f48
.dword 0x3fe794930ec4dcba
.dword 0xbfe4be71ce133871
.dword 0x3fde9263ddc946f0
.dword 0x3fe794930ec4dcba
.dword 0xbfe4be71ce133871
.dword 0x3fde9263ddc946f0
.dword 0x3fe794930ec4dcba
.dword 0xbfe4be71ce133871
.dword 0x3fde9263ddc946f0
.dword 0x3fe794930ec4dcba
.dword 0xbfe4be71ce133871
.dword 0x3fde9263ddc946f0
.dword 0x3fe794930ec4dcba
.dword 0xbfe4be71ce133871
.dword 0x3fde9263ddc946f0
.dword 0x3fe34cc94cb0bfed
.dword 0xbfe048bf656e44a8
.dword 0x3fd3a489b5869838
.dword 0x3fe34cc94cb0bfed
.dword 0xbfe048bf656e44a8
.dword 0x3fd3a489b5869838
.dword 0x3fe34cc94cb0bfed
.dword 0xbfe048bf656e44a8
.dword 0x3fd3a489b5869838
.dword 0x3fe34cc94cb0bfed
.dword 0xbfe048bf656e44a8
.dword 0x3fd3a489b5869838
.dword 0x3fe34cc94cb0bfed
.dword 0xbfe048bf656e44a8
.dword 0x3fd3a489b5869838
.dword 0x3fd37438a6b5b25e
.dword 0xc00461ed7f000530
.dword 0x3fe8c8582bc779dc
.dword 0x3fd37438a6b5b25e
.dword 0xc00461ed7f000530
.dword 0x3fe8c8582bc779dc
.dword 0x3fd37438a6b5b25e
.dword 0xc00461ed7f000530
.dword 0x3fe8c8582bc779dc
.dword 0x3fd37438a6b5b25e
.dword 0xc00461ed7f000530
.dword 0x3fe8c8582bc779dc
.dword 0x3fd37438a6b5b25e
.dword 0xc00461ed7f000530
.dword 0x3fe8c8582bc779dc
.dword 0x3fedf19868ebd220
.dword 0xbfe18018af70109b
.dword 0x3fe0603672bd5c37
.dword 0x3fedf19868ebd220
.dword 0xbfe18018af70109b
.dword 0x3fe0603672bd5c37
.dword 0x3fedf19868ebd220
.dword 0xbfe18018af70109b
.dword 0x3fe0603672bd5c37
.dword 0x3fedf19868ebd220
.dword 0xbfe18018af70109b
.dword 0x3fe0603672bd5c37
.dword 0x3fedf19868ebd220
.dword 0xbfe18018af70109b
.dword 0x3fe0603672bd5c37
.dword 0x3fe9a0aa8009cc0f
.dword 0xbff36c7a9c9e93f0
.dword 0x3fef1c8b5adc72a6
.dword 0x3fe9a0aa8009cc0f
.dword 0xbff36c7a9c9e93f0
.dword 0x3fef1c8b5adc72a6
.dword 0x3fe9a0aa8009cc0f
.dword 0xbff36c7a9c9e93f0
.dword 0x3fef1c8b5adc72a6
.dword 0x3fe9a0aa8009cc0f
.dword 0xbff36c7a9c9e93f0
.dword 0x3fef1c8b5adc72a6
.dword 0x3fe9a0aa8009cc0f
.dword 0xbff36c7a9c9e93f0
.dword 0x3fef1c8b5adc72a6
.dword 0x3fe7e75e565c5c65
.dword 0xbfda37c75a70a5e2
.dword 0x3fd395a73ab101e6
.dword 0x3fe7e75e565c5c65
.dword 0xbfda37c75a70a5e2
.dword 0x3fd395a73ab101e6
.dword 0x3fe7e75e565c5c65
.dword 0xbfda37c75a70a5e2
.dword 0x3fd395a73ab101e6
.dword 0x3fe7e75e565c5c65
.dword 0xbfda37c75a70a5e2
.dword 0x3fd395a73ab101e6
.dword 0x3fe7e75e565c5c65
.dword 0xbfda37c75a70a5e2
.dword 0x3fd395a73ab101e6
.dword 0x3fd9c6b29c8287fe
.dword 0xbfeb43c087ce4d11
.dword 0x3fd5f639cf99edd0
.dword 0x3fd9c6b29c8287fe
.dword 0xbfeb43c087ce4d11
.dword 0x3fd5f639cf99edd0
.dword 0x3fd9c6b29c8287fe
.dword 0xbfeb43c087ce4d11
.dword 0x3fd5f639cf99edd0
.dword 0x3fd9c6b29c8287fe
.dword 0xbfeb43c087ce4d11
.dword 0x3fd5f639cf99edd0
.dword 0x3fd9c6b29c8287fe
.dword 0xbfeb43c087ce4d11
.dword 0x3fd5f639cf99edd0
.dword 0x3fd5709e8a5be0f8
.dword 0xbfff399c57c33a09
.dword 0x3fe4ebb2f0415449
.dword 0x3fd5709e8a5be0f8
.dword 0xbfff399c57c33a09
.dword 0x3fe4ebb2f0415449
.dword 0x3fd5709e8a5be0f8
.dword 0xbfff399c57c33a09
.dword 0x3fe4ebb2f0415449
.dword 0x3fd5709e8a5be0f8
.dword 0xbfff399c57c33a09
.dword 0x3fe4ebb2f0415449
.dword 0x3fd5709e8a5be0f8
.dword 0xbfff399c57c33a09
.dword 0x3fe4ebb2f0415449
.dword 0x3fd29896c9c5943e
.dword 0xbfc5795fe1d8b94e
.dword 0x3fa8f5574da63290
.dword 0x3fd29896c9c5943e
.dword 0xbfc5795fe1d8b94e
.dword 0x3fa8f5574da63290
.dword 0x3fd29896c9c5943e
.dword 0xbfc5795fe1d8b94e
.dword 0x3fa8f5574da63290
.dword 0x3fd29896c9c5943e
.dword 0xbfc5795fe1d8b94e
.dword 0x3fa8f5574da63290
.dword 0x3fd29896c9c5943e
.dword 0xbfc5795fe1d8b94e
.dword 0x3fa8f5574da63290
.dword 0x3feb45888fb3aa33
.dword 0xbff008dfe623272a
.dword 0x3feb54a8f55e4ccd
.dword 0x3feb45888fb3aa33
.dword 0xbff008dfe623272a
.dword 0x3feb54a8f55e4ccd
.dword 0x3feb45888fb3aa33
.dword 0xbff008dfe623272a
.dword 0x3feb54a8f55e4ccd
.dword 0x3feb45888fb3aa33
.dword 0xbff008dfe623272a
.dword 0x3feb54a8f55e4ccd
.dword 0x3feb45888fb3aa33
.dword 0xbff008dfe623272a
.dword 0x3feb54a8f55e4ccd
.dword 0x3fb8205cdc6b6558
.dword 0xc0186656374b80f9
.dword 0x3fe2656dcdf93f67
.dword 0x3fb8205cdc6b6558
.dword 0xc0186656374b80f9
.dword 0x3fe2656dcdf93f67
.dword 0x3fb8205cdc6b6558
.dword 0xc0186656374b80f9
.dword 0x3fe2656dcdf93f67
.dword 0x3fb8205cdc6b6558
.dword 0xc0186656374b80f9
.dword 0x3fe2656dcdf93f67
.dword 0x3fb8205cdc6b6558
.dword 0xc0186656374b80f9
.dword 0x3fe2656dcdf93f67
.dword 0x3fd21f39c97257ba
.dword 0xbfb05bbc6ad9ee60
.dword 0x3f928720ca08c560
.dword 0x3fd21f39c97257ba
.dword 0xbfb05bbc6ad9ee60
.dword 0x3f928720ca08c560
.dword 0x3fd21f39c97257ba
.dword 0xbfb05bbc6ad9ee60
.dword 0x3f928720ca08c560
.dword 0x3fd21f39c97257ba
.dword 0xbfb05bbc6ad9ee60
.dword 0x3f928720ca08c560
.dword 0x3fd21f39c97257ba
.dword 0xbfb05bbc6ad9ee60
.dword 0x3f928720ca08c560
.dword 0x3fe097431c55fd7a
.dword 0xbf9b08da4d4b14a9
.dword 0x3f8c086f3e777640
.dword 0x3fe097431c55fd7a
.dword 0xbf9b08da4d4b14a9
.dword 0x3f8c086f3e777640
.dword 0x3fe097431c55fd7a
.dword 0xbf9b08da4d4b14a9
.dword 0x3f8c086f3e777640
.dword 0x3fe097431c55fd7a
.dword 0xbf9b08da4d4b14a9
.dword 0x3f8c086f3e777640
.dword 0x3fe097431c55fd7a
.dword 0xbf9b08da4d4b14a9
.dword 0x3f8c086f3e777640
.dword 0x3feceedb89ef554e
.dword 0xbfe14eb92e54c8b2
.dword 0x3fdf4c248e612c5a
.dword 0x3feceedb89ef554e
.dword 0xbfe14eb92e54c8b2
.dword 0x3fdf4c248e612c5a
.dword 0x3feceedb89ef554e
.dword 0xbfe14eb92e54c8b2
.dword 0x3fdf4c248e612c5a
.dword 0x3feceedb89ef554e
.dword 0xbfe14eb92e54c8b2
.dword 0x3fdf4c248e612c5a
.dword 0x3feceedb89ef554e
.dword 0xbfe14eb92e54c8b2
.dword 0x3fdf4c248e612c5a
.dword 0x3feffc442c859ec8
.dword 0xbf9414f57ef8ddbb
.dword 0x3f94129da8c358c0
.dword 0x3feffc442c859ec8
.dword 0xbf9414f57ef8ddbb
.dword 0x3f94129da8c358c0
.dword 0x3feffc442c859ec8
.dword 0xbf9414f57ef8ddbb
.dword 0x3f94129da8c358c0
.dword 0x3feffc442c859ec8
.dword 0xbf9414f57ef8ddbb
.dword 0x3f94129da8c358c0
.dword 0x3feffc442c859ec8
.dword 0xbf9414f57ef8ddbb
.dword 0x3f94129da8c358c0
.dword 0x3fe2bc672b0fdb8f
.dword 0xbfc3652a58c75153
.dword 0x3fb6b63164e717c8
.dword 0x3fe2bc672b0fdb8f
.dword 0xbfc3652a58c75153
.dword 0x3fb6b63164e717c8
.dword 0x3fe2bc672b0fdb8f
.dword 0xbfc3652a58c75153
.dword 0x3fb6b63164e717c8
.dword 0x3fe2bc672b0fdb8f
.dword 0xbfc3652a58c75153
.dword 0x3fb6b63164e717c8
.dword 0x3fe2bc672b0fdb8f
.dword 0xbfc3652a58c75153
.dword 0x3fb6b63164e717c8
.dword 0x3fe5784326bba827
.dword 0xbfcbbae15650f4c1
.dword 0x3fc29adade812650
.dword 0x3fe5784326bba827
.dword 0xbfcbbae15650f4c1
.dword 0x3fc29adade812650
.dword 0x3fe5784326bba827
.dword 0xbfcbbae15650f4c1
.dword 0x3fc29adade812650
.dword 0x3fe5784326bba827
.dword 0xbfcbbae15650f4c1
.dword 0x3fc29adade812650
.dword 0x3fe5784326bba827
.dword 0xbfcbbae15650f4c1
.dword 0x3fc29adade812650
.dword 0x3fefa58573d2bed4
.dword 0xbfc842d58e4af554
.dword 0x3fc7fe3cac95de50
.dword 0x3fefa58573d2bed4
.dword 0xbfc842d58e4af554
.dword 0x3fc7fe3cac95de50
.dword 0x3fefa58573d2bed4
.dword 0xbfc842d58e4af554
.dword 0x3fc7fe3cac95de50
.dword 0x3fefa58573d2bed4
.dword 0xbfc842d58e4af554
.dword 0x3fc7fe3cac95de50
.dword 0x3fefa58573d2bed4
.dword 0xbfc842d58e4af554
.dword 0x3fc7fe3cac95de50
.dword 0x3fdb24812594aaaa
.dword 0xbfeb1e43bcfcb809
.dword 0x3fd70078a583e45e
.dword 0x3fdb24812594aaaa
.dword 0xbfeb1e43bcfcb809
.dword 0x3fd70078a583e45e
.dword 0x3fdb24812594aaaa
.dword 0xbfeb1e43bcfcb809
.dword 0x3fd70078a583e45e
.dword 0x3fdb24812594aaaa
.dword 0xbfeb1e43bcfcb809
.dword 0x3fd70078a583e45e
.dword 0x3fdb24812594aaaa
.dword 0xbfeb1e43bcfcb809
.dword 0x3fd70078a583e45e
.dword 0x3fd0e4164fddf8ec
.dword 0xbfefd0a53d92e833
.dword 0x3fd0cb1766f98d86
.dword 0x3fd0e4164fddf8ec
.dword 0xbfefd0a53d92e833
.dword 0x3fd0cb1766f98d86
.dword 0x3fd0e4164fddf8ec
.dword 0xbfefd0a53d92e833
.dword 0x3fd0cb1766f98d86
.dword 0x3fd0e4164fddf8ec
.dword 0xbfefd0a53d92e833
.dword 0x3fd0cb1766f98d86
.dword 0x3fd0e4164fddf8ec
.dword 0xbfefd0a53d92e833
.dword 0x3fd0cb1766f98d86
.dword 0x3fe5f14673e36d72
.dword 0xbfa1327efdb97b95
.dword 0x3f97959aff4c24e0
.dword 0x3fe5f14673e36d72
.dword 0xbfa1327efdb97b95
.dword 0x3f97959aff4c24e0
.dword 0x3fe5f14673e36d72
.dword 0xbfa1327efdb97b95
.dword 0x3f97959aff4c24e0
.dword 0x3fe5f14673e36d72
.dword 0xbfa1327efdb97b95
.dword 0x3f97959aff4c24e0
.dword 0x3fe5f14673e36d72
.dword 0xbfa1327efdb97b95
.dword 0x3f97959aff4c24e0
.dword 0x3fd203bbe95e2aa8
.dword 0xc006669fa25dceb6
.dword 0x3fe938adeabbff1b
.dword 0x3fd203bbe95e2aa8
.dword 0xc006669fa25dceb6
.dword 0x3fe938adeabbff1b
.dword 0x3fd203bbe95e2aa8
.dword 0xc006669fa25dceb6
.dword 0x3fe938adeabbff1b
.dword 0x3fd203bbe95e2aa8
.dword 0xc006669fa25dceb6
.dword 0x3fe938adeabbff1b
.dword 0x3fd203bbe95e2aa8
.dword 0xc006669fa25dceb6
.dword 0x3fe938adeabbff1b
.dword 0x3fec4c6ac7f1b54e
.dword 0xbff16e46b7f2ebc5
.dword 0x3feed43be63a4340
.dword 0x3fec4c6ac7f1b54e
.dword 0xbff16e46b7f2ebc5
.dword 0x3feed43be63a4340
.dword 0x3fec4c6ac7f1b54e
.dword 0xbff16e46b7f2ebc5
.dword 0x3feed43be63a4340
.dword 0x3fec4c6ac7f1b54e
.dword 0xbff16e46b7f2ebc5
.dword 0x3feed43be63a4340
.dword 0x3fec4c6ac7f1b54e
.dword 0xbff16e46b7f2ebc5
.dword 0x3feed43be63a4340
.dword 0x3fbe4bc2466d4078
.dword 0xc01b218e941d3cff
.dword 0x3fe9afb1082cf882
.dword 0x3fbe4bc2466d4078
.dword 0xc01b218e941d3cff
.dword 0x3fe9afb1082cf882
.dword 0x3fbe4bc2466d4078
.dword 0xc01b218e941d3cff
.dword 0x3fe9afb1082cf882
.dword 0x3fbe4bc2466d4078
.dword 0xc01b218e941d3cff
.dword 0x3fe9afb1082cf882
.dword 0x3fbe4bc2466d4078
.dword 0xc01b218e941d3cff
.dword 0x3fe9afb1082cf882
.dword 0x3fd74b46a4cb32a2
.dword 0xc00068e4471fe8b3
.dword 0x3fe7e3fc483585d7
.dword 0x3fd74b46a4cb32a2
.dword 0xc00068e4471fe8b3
.dword 0x3fe7e3fc483585d7
.dword 0x3fd74b46a4cb32a2
.dword 0xc00068e4471fe8b3
.dword 0x3fe7e3fc483585d7
.dword 0x3fd74b46a4cb32a2
.dword 0xc00068e4471fe8b3
.dword 0x3fe7e3fc483585d7
.dword 0x3fd74b46a4cb32a2
.dword 0xc00068e4471fe8b3
.dword 0x3fe7e3fc483585d7
.dword 0x3fced63a8b04874c
.dword 0xc009fab6ad4f40db
.dword 0x3fe908f76f691f9e
.dword 0x3fced63a8b04874c
.dword 0xc009fab6ad4f40db
.dword 0x3fe908f76f691f9e
.dword 0x3fced63a8b04874c
.dword 0xc009fab6ad4f40db
.dword 0x3fe908f76f691f9e
.dword 0x3fced63a8b04874c
.dword 0xc009fab6ad4f40db
.dword 0x3fe908f76f691f9e
.dword 0x3fced63a8b04874c
.dword 0xc009fab6ad4f40db
.dword 0x3fe908f76f691f9e
.dword 0x3fed2b1345cea515
.dword 0xbfcd0e5a0dba105e
.dword 0x3fca7c1e655b1d78
.dword 0x3fed2b1345cea515
.dword 0xbfcd0e5a0dba105e
.dword 0x3fca7c1e655b1d78
.dword 0x3fed2b1345cea515
.dword 0xbfcd0e5a0dba105e
.dword 0x3fca7c1e655b1d78
.dword 0x3fed2b1345cea515
.dword 0xbfcd0e5a0dba105e
.dword 0x3fca7c1e655b1d78
.dword 0x3fed2b1345cea515
.dword 0xbfcd0e5a0dba105e
.dword 0x3fca7c1e655b1d78
.dword 0x3feb531e01fbabad
.dword 0xbfca7f55d9c83f3e
.dword 0x3fc6a0438f72b08c
.dword 0x3feb531e01fbabad
.dword 0xbfca7f55d9c83f3e
.dword 0x3fc6a0438f72b08c
.dword 0x3feb531e01fbabad
.dword 0xbfca7f55d9c83f3e
.dword 0x3fc6a0438f72b08c
.dword 0x3feb531e01fbabad
.dword 0xbfca7f55d9c83f3e
.dword 0x3fc6a0438f72b08c
.dword 0x3feb531e01fbabad
.dword 0xbfca7f55d9c83f3e
.dword 0x3fc6a0438f72b08c
.dword 0x3fd29a2e73478056
.dword 0xc006bdde96010ea8
.dword 0x3fea70bfecdf3ab8
.dword 0x3fd29a2e73478056
.dword 0xc006bdde96010ea8
.dword 0x3fea70bfecdf3ab8
.dword 0x3fd29a2e73478056
.dword 0xc006bdde96010ea8
.dword 0x3fea70bfecdf3ab8
.dword 0x3fd29a2e73478056
.dword 0xc006bdde96010ea8
.dword 0x3fea70bfecdf3ab8
.dword 0x3fd29a2e73478056
.dword 0xc006bdde96010ea8
.dword 0x3fea70bfecdf3ab8
.dword 0x3fe3b958c72feccb
.dword 0xbfe789946a278c44
.dword 0x3fdd04099bd04e14
.dword 0x3fe3b958c72feccb
.dword 0xbfe789946a278c44
.dword 0x3fdd04099bd04e14
.dword 0x3fe3b958c72feccb
.dword 0xbfe789946a278c44
.dword 0x3fdd04099bd04e14
.dword 0x3fe3b958c72feccb
.dword 0xbfe789946a278c44
.dword 0x3fdd04099bd04e14
.dword 0x3fe3b958c72feccb
.dword 0xbfe789946a278c44
.dword 0x3fdd04099bd04e14
.dword 0x3fe164e49a8d95d4
.dword 0xbfef331731e9b3ac
.dword 0x3fe0f582ddb55039
.dword 0x3fe164e49a8d95d4
.dword 0xbfef331731e9b3ac
.dword 0x3fe0f582ddb55039
.dword 0x3fe164e49a8d95d4
.dword 0xbfef331731e9b3ac
.dword 0x3fe0f582ddb55039
.dword 0x3fe164e49a8d95d4
.dword 0xbfef331731e9b3ac
.dword 0x3fe0f582ddb55039
.dword 0x3fe164e49a8d95d4
.dword 0xbfef331731e9b3ac
.dword 0x3fe0f582ddb55039
.dword 0x3fe46fa7c92117e8
.dword 0xbfe40510860255ec
.dword 0x3fd99209baaa1a42
.dword 0x3fe46fa7c92117e8
.dword 0xbfe40510860255ec
.dword 0x3fd99209baaa1a42
.dword 0x3fe46fa7c92117e8
.dword 0xbfe40510860255ec
.dword 0x3fd99209baaa1a42
.dword 0x3fe46fa7c92117e8
.dword 0xbfe40510860255ec
.dword 0x3fd99209baaa1a42
.dword 0x3fe46fa7c92117e8
.dword 0xbfe40510860255ec
.dword 0x3fd99209baaa1a42
.dword 0x3fdafba8483bff58
.dword 0xbfe3feb49da64cf7
.dword 0x3fd0dc31bf227e2a
.dword 0x3fdafba8483bff58
.dword 0xbfe3feb49da64cf7
.dword 0x3fd0dc31bf227e2a
.dword 0x3fdafba8483bff58
.dword 0xbfe3feb49da64cf7
.dword 0x3fd0dc31bf227e2a
.dword 0x3fdafba8483bff58
.dword 0xbfe3feb49da64cf7
.dword 0x3fd0dc31bf227e2a
.dword 0x3fdafba8483bff58
.dword 0xbfe3feb49da64cf7
.dword 0x3fd0dc31bf227e2a
.dword 0x3fd62725147d5cfa
.dword 0xbffe75e8ae9a47b3
.dword 0x3fe51652f774edb8
.dword 0x3fd62725147d5cfa
.dword 0xbffe75e8ae9a47b3
.dword 0x3fe51652f774edb8
.dword 0x3fd62725147d5cfa
.dword 0xbffe75e8ae9a47b3
.dword 0x3fe51652f774edb8
.dword 0x3fd62725147d5cfa
.dword 0xbffe75e8ae9a47b3
.dword 0x3fe51652f774edb8
.dword 0x3fd62725147d5cfa
.dword 0xbffe75e8ae9a47b3
.dword 0x3fe51652f774edb8
.dword 0x3fd7bb21774988e0
.dword 0xbff59b9b99328c30
.dword 0x3fe00633c4685c2b
.dword 0x3fd7bb21774988e0
.dword 0xbff59b9b99328c30
.dword 0x3fe00633c4685c2b
.dword 0x3fd7bb21774988e0
.dword 0xbff59b9b99328c30
.dword 0x3fe00633c4685c2b
.dword 0x3fd7bb21774988e0
.dword 0xbff59b9b99328c30
.dword 0x3fe00633c4685c2b
.dword 0x3fd7bb21774988e0
.dword 0xbff59b9b99328c30
.dword 0x3fe00633c4685c2b
.dword 0x3fc1e8d2f80b6d44
.dword 0xc00f9c725448ad2b
.dword 0x3fe1b11b615fb3c8
.dword 0x3fc1e8d2f80b6d44
.dword 0xc00f9c725448ad2b
.dword 0x3fe1b11b615fb3c8
.dword 0x3fc1e8d2f80b6d44
.dword 0xc00f9c725448ad2b
.dword 0x3fe1b11b615fb3c8
.dword 0x3fc1e8d2f80b6d44
.dword 0xc00f9c725448ad2b
.dword 0x3fe1b11b615fb3c8
.dword 0x3fc1e8d2f80b6d44
.dword 0xc00f9c725448ad2b
.dword 0x3fe1b11b615fb3c8
.dword 0x3fc44be43b41b4d4
.dword 0xc011ebcbdd0bf302
.dword 0x3fe6bbbfc2633de5
.dword 0x3fc44be43b41b4d4
.dword 0xc011ebcbdd0bf302
.dword 0x3fe6bbbfc2633de5
.dword 0x3fc44be43b41b4d4
.dword 0xc011ebcbdd0bf302
.dword 0x3fe6bbbfc2633de5
.dword 0x3fc44be43b41b4d4
.dword 0xc011ebcbdd0bf302
.dword 0x3fe6bbbfc2633de5
.dword 0x3fc44be43b41b4d4
.dword 0xc011ebcbdd0bf302
.dword 0x3fe6bbbfc2633de5
.dword 0x3fda9ed3a2862f86
.dword 0xbffc6f43b84e7497
.dword 0x3fe7a788722ecc5b
.dword 0x3fda9ed3a2862f86
.dword 0xbffc6f43b84e7497
.dword 0x3fe7a788722ecc5b
.dword 0x3fda9ed3a2862f86
.dword 0xbffc6f43b84e7497
.dword 0x3fe7a788722ecc5b
.dword 0x3fda9ed3a2862f86
.dword 0xbffc6f43b84e7497
.dword 0x3fe7a788722ecc5b
.dword 0x3fda9ed3a2862f86
.dword 0xbffc6f43b84e7497
.dword 0x3fe7a788722ecc5b
.dword 0x3fcbbf6f08f22524
.dword 0xbff315899829c8f7
.dword 0x3fd08c56ddb28e36
.dword 0x3fcbbf6f08f22524
.dword 0xbff315899829c8f7
.dword 0x3fd08c56ddb28e36
.dword 0x3fcbbf6f08f22524
.dword 0xbff315899829c8f7
.dword 0x3fd08c56ddb28e36
.dword 0x3fcbbf6f08f22524
.dword 0xbff315899829c8f7
.dword 0x3fd08c56ddb28e36
.dword 0x3fcbbf6f08f22524
.dword 0xbff315899829c8f7
.dword 0x3fd08c56ddb28e36
.dword 0x3fd696fd75de4a0e
.dword 0xbfe3689f54ca1200
.dword 0x3fcb67035fa2de78
.dword 0x3fd696fd75de4a0e
.dword 0xbfe3689f54ca1200
.dword 0x3fcb67035fa2de78
.dword 0x3fd696fd75de4a0e
.dword 0xbfe3689f54ca1200
.dword 0x3fcb67035fa2de78
.dword 0x3fd696fd75de4a0e
.dword 0xbfe3689f54ca1200
.dword 0x3fcb67035fa2de78
.dword 0x3fd696fd75de4a0e
.dword 0xbfe3689f54ca1200
.dword 0x3fcb67035fa2de78
.dword 0x3fdc106e6e9d6f8a
.dword 0xbff97a6db1ea3400
.dword 0x3fe658351f7128bb
.dword 0x3fdc106e6e9d6f8a
.dword 0xbff97a6db1ea3400
.dword 0x3fe658351f7128bb
.dword 0x3fdc106e6e9d6f8a
.dword 0xbff97a6db1ea3400
.dword 0x3fe658351f7128bb
.dword 0x3fdc106e6e9d6f8a
.dword 0xbff97a6db1ea3400
.dword 0x3fe658351f7128bb
.dword 0x3fdc106e6e9d6f8a
.dword 0xbff97a6db1ea3400
.dword 0x3fe658351f7128bb
.dword 0x3fe476d27e10cca7
.dword 0xbfefb40cd9f7d3b3
.dword 0x3fe44640821893f9
.dword 0x3fe476d27e10cca7
.dword 0xbfefb40cd9f7d3b3
.dword 0x3fe44640821893f9
.dword 0x3fe476d27e10cca7
.dword 0xbfefb40cd9f7d3b3
.dword 0x3fe44640821893f9
.dword 0x3fe476d27e10cca7
.dword 0xbfefb40cd9f7d3b3
.dword 0x3fe44640821893f9
.dword 0x3fe476d27e10cca7
.dword 0xbfefb40cd9f7d3b3
.dword 0x3fe44640821893f9
.dword 0x3feef628b829a953
.dword 0xbfe96140d9639291
.dword 0x3fe88e68b9f5d664
.dword 0x3feef628b829a953
.dword 0xbfe96140d9639291
.dword 0x3fe88e68b9f5d664
.dword 0x3feef628b829a953
.dword 0xbfe96140d9639291
.dword 0x3fe88e68b9f5d664
.dword 0x3feef628b829a953
.dword 0xbfe96140d9639291
.dword 0x3fe88e68b9f5d664
.dword 0x3feef628b829a953
.dword 0xbfe96140d9639291
.dword 0x3fe88e68b9f5d664
.dword 0x3fbc02e86b2d6c88
.dword 0xc0191c16954365d3
.dword 0x3fe5fadbe3c197a4
.dword 0x3fbc02e86b2d6c88
.dword 0xc0191c16954365d3
.dword 0x3fe5fadbe3c197a4
.dword 0x3fbc02e86b2d6c88
.dword 0xc0191c16954365d3
.dword 0x3fe5fadbe3c197a4
.dword 0x3fbc02e86b2d6c88
.dword 0xc0191c16954365d3
.dword 0x3fe5fadbe3c197a4
.dword 0x3fbc02e86b2d6c88
.dword 0xc0191c16954365d3
.dword 0x3fe5fadbe3c197a4
.dword 0x3feb7f69f448e82d
.dword 0xbfd59ad0f2649582
.dword 0x3fd290a642b22b00
.dword 0x3feb7f69f448e82d
.dword 0xbfd59ad0f2649582
.dword 0x3fd290a642b22b00
.dword 0x3feb7f69f448e82d
.dword 0xbfd59ad0f2649582
.dword 0x3fd290a642b22b00
.dword 0x3feb7f69f448e82d
.dword 0xbfd59ad0f2649582
.dword 0x3fd290a642b22b00
.dword 0x3feb7f69f448e82d
.dword 0xbfd59ad0f2649582
.dword 0x3fd290a642b22b00
.dword 0x3fd7c39d9aa35b8c
.dword 0xc004b6bea9b919dc
.dword 0x3feec3f1510fdddc
.dword 0x3fd7c39d9aa35b8c
.dword 0xc004b6bea9b919dc
.dword 0x3feec3f1510fdddc
.dword 0x3fd7c39d9aa35b8c
.dword 0xc004b6bea9b919dc
.dword 0x3feec3f1510fdddc
.dword 0x3fd7c39d9aa35b8c
.dword 0xc004b6bea9b919dc
.dword 0x3feec3f1510fdddc
.dword 0x3fd7c39d9aa35b8c
.dword 0xc004b6bea9b919dc
.dword 0x3feec3f1510fdddc
.dword 0x3fc89065a920a7f8
.dword 0xc00a0ed1c611a45e
.dword 0x3fe400b2cd077f49
.dword 0x3fc89065a920a7f8
.dword 0xc00a0ed1c611a45e
.dword 0x3fe400b2cd077f49
.dword 0x3fc89065a920a7f8
.dword 0xc00a0ed1c611a45e
.dword 0x3fe400b2cd077f49
.dword 0x3fc89065a920a7f8
.dword 0xc00a0ed1c611a45e
.dword 0x3fe400b2cd077f49
.dword 0x3fc89065a920a7f8
.dword 0xc00a0ed1c611a45e
.dword 0x3fe400b2cd077f49
.dword 0x3fe4eb4c4c44ee61
.dword 0xbfeec0dd10522e20
.dword 0x3fe41aabd4fc8b0e
.dword 0x3fe4eb4c4c44ee61
.dword 0xbfeec0dd10522e20
.dword 0x3fe41aabd4fc8b0e
.dword 0x3fe4eb4c4c44ee61
.dword 0xbfeec0dd10522e20
.dword 0x3fe41aabd4fc8b0e
.dword 0x3fe4eb4c4c44ee61
.dword 0xbfeec0dd10522e20
.dword 0x3fe41aabd4fc8b0e
.dword 0x3fe4eb4c4c44ee61
.dword 0xbfeec0dd10522e20
.dword 0x3fe41aabd4fc8b0e
.dword 0x3fe8749cae17bbb7
.dword 0xbfea94ba26fb6966
.dword 0x3fe45068e5b1c77b
.dword 0x3fe8749cae17bbb7
.dword 0xbfea94ba26fb6966
.dword 0x3fe45068e5b1c77b
.dword 0x3fe8749cae17bbb7
.dword 0xbfea94ba26fb6966
.dword 0x3fe45068e5b1c77b
.dword 0x3fe8749cae17bbb7
.dword 0xbfea94ba26fb6966
.dword 0x3fe45068e5b1c77b
.dword 0x3fe8749cae17bbb7
.dword 0xbfea94ba26fb6966
.dword 0x3fe45068e5b1c77b
.dword 0x3fe0bf3314a06fc5
.dword 0xbff9622159c71929
.dword 0x3fea9175d16a505f
.dword 0x3fe0bf3314a06fc5
.dword 0xbff9622159c71929
.dword 0x3fea9175d16a505f
.dword 0x3fe0bf3314a06fc5
.dword 0xbff9622159c71929
.dword 0x3fea9175d16a505f
.dword 0x3fe0bf3314a06fc5
.dword 0xbff9622159c71929
.dword 0x3fea9175d16a505f
.dword 0x3fe0bf3314a06fc5
.dword 0xbff9622159c71929
.dword 0x3fea9175d16a505f
.dword 0x3fab4292eb887ee0
.dword 0xc01a47a2683e74c5
.dword 0x3fd6631d6f2ed846
.dword 0x3fab4292eb887ee0
.dword 0xc01a47a2683e74c5
.dword 0x3fd6631d6f2ed846
.dword 0x3fab4292eb887ee0
.dword 0xc01a47a2683e74c5
.dword 0x3fd6631d6f2ed846
.dword 0x3fab4292eb887ee0
.dword 0xc01a47a2683e74c5
.dword 0x3fd6631d6f2ed846
.dword 0x3fab4292eb887ee0
.dword 0xc01a47a2683e74c5
.dword 0x3fd6631d6f2ed846
.dword 0x3f8cfbc304128680
.dword 0xc046ad68c701133b
.dword 0x3fe48a260f932be6
.dword 0x3f8cfbc304128680
.dword 0xc046ad68c701133b
.dword 0x3fe48a260f932be6
.dword 0x3f8cfbc304128680
.dword 0xc046ad68c701133b
.dword 0x3fe48a260f932be6
.dword 0x3f8cfbc304128680
.dword 0xc046ad68c701133b
.dword 0x3fe48a260f932be6
.dword 0x3f8cfbc304128680
.dword 0xc046ad68c701133b
.dword 0x3fe48a260f932be6
.dword 0x3fd985358246334e
.dword 0xbfeb9c9e28d271e8
.dword 0x3fd6054cad0cdca8
.dword 0x3fd985358246334e
.dword 0xbfeb9c9e28d271e8
.dword 0x3fd6054cad0cdca8
.dword 0x3fd985358246334e
.dword 0xbfeb9c9e28d271e8
.dword 0x3fd6054cad0cdca8
.dword 0x3fd985358246334e
.dword 0xbfeb9c9e28d271e8
.dword 0x3fd6054cad0cdca8
.dword 0x3fd985358246334e
.dword 0xbfeb9c9e28d271e8
.dword 0x3fd6054cad0cdca8
.dword 0x3f4e3a97f64cf800
.dword 0xc0904444ccc6e171
.dword 0x3feebb92f80c666f
.dword 0x3f4e3a97f64cf800
.dword 0xc0904444ccc6e171
.dword 0x3feebb92f80c666f
.dword 0x3f4e3a97f64cf800
.dword 0xc0904444ccc6e171
.dword 0x3feebb92f80c666f
.dword 0x3f4e3a97f64cf800
.dword 0xc0904444ccc6e171
.dword 0x3feebb92f80c666f
.dword 0x3f4e3a97f64cf800
.dword 0xc0904444ccc6e171
.dword 0x3feebb92f80c666f
.dword 0x3fa1dac507dc8ef0
.dword 0xc03993f4cfb1d314
.dword 0x3fec8aeefe825660
.dword 0x3fa1dac507dc8ef0
.dword 0xc03993f4cfb1d314
.dword 0x3fec8aeefe825660
.dword 0x3fa1dac507dc8ef0
.dword 0xc03993f4cfb1d314
.dword 0x3fec8aeefe825660
.dword 0x3fa1dac507dc8ef0
.dword 0xc03993f4cfb1d314
.dword 0x3fec8aeefe825660
.dword 0x3fa1dac507dc8ef0
.dword 0xc03993f4cfb1d314
.dword 0x3fec8aeefe825660
.dword 0x3fe2621585be5c7a
.dword 0xbfe4982c0fa9dbae
.dword 0x3fd7a971535ed06a
.dword 0x3fe2621585be5c7a
.dword 0xbfe4982c0fa9dbae
.dword 0x3fd7a971535ed06a
.dword 0x3fe2621585be5c7a
.dword 0xbfe4982c0fa9dbae
.dword 0x3fd7a971535ed06a
.dword 0x3fe2621585be5c7a
.dword 0xbfe4982c0fa9dbae
.dword 0x3fd7a971535ed06a
.dword 0x3fe2621585be5c7a
.dword 0xbfe4982c0fa9dbae
.dword 0x3fd7a971535ed06a
.dword 0x3febec4f6cedc2e4
.dword 0xbfa4d9e43fe06d0c
.dword 0x3fa231d34a223ff0
.dword 0x3febec4f6cedc2e4
.dword 0xbfa4d9e43fe06d0c
.dword 0x3fa231d34a223ff0
.dword 0x3febec4f6cedc2e4
.dword 0xbfa4d9e43fe06d0c
.dword 0x3fa231d34a223ff0
.dword 0x3febec4f6cedc2e4
.dword 0xbfa4d9e43fe06d0c
.dword 0x3fa231d34a223ff0
.dword 0x3febec4f6cedc2e4
.dword 0xbfa4d9e43fe06d0c
.dword 0x3fa231d34a223ff0
.dword 0x3fea17504e344fa6
.dword 0xbfe07cb010cca364
.dword 0x3fdae2a4186ac54e
.dword 0x3fea17504e344fa6
.dword 0xbfe07cb010cca364
.dword 0x3fdae2a4186ac54e
.dword 0x3fea17504e344fa6
.dword 0xbfe07cb010cca364
.dword 0x3fdae2a4186ac54e
.dword 0x3fea17504e344fa6
.dword 0xbfe07cb010cca364
.dword 0x3fdae2a4186ac54e
.dword 0x3fea17504e344fa6
.dword 0xbfe07cb010cca364
.dword 0x3fdae2a4186ac54e
.dword 0x3fd3f14507e25bbc
.dword 0xc007a09aaac0c335
.dword 0x3fed7300b4b06755
.dword 0x3fd3f14507e25bbc
.dword 0xc007a09aaac0c335
.dword 0x3fed7300b4b06755
.dword 0x3fd3f14507e25bbc
.dword 0xc007a09aaac0c335
.dword 0x3fed7300b4b06755
.dword 0x3fd3f14507e25bbc
.dword 0xc007a09aaac0c335
.dword 0x3fed7300b4b06755
.dword 0x3fd3f14507e25bbc
.dword 0xc007a09aaac0c335
.dword 0x3fed7300b4b06755
.dword 0x3fd83a7eb80f24c6
.dword 0xc0021aff4ede80a4
.dword 0x3feb6ab038adcf98
.dword 0x3fd83a7eb80f24c6
.dword 0xc0021aff4ede80a4
.dword 0x3feb6ab038adcf98
.dword 0x3fd83a7eb80f24c6
.dword 0xc0021aff4ede80a4
.dword 0x3feb6ab038adcf98
.dword 0x3fd83a7eb80f24c6
.dword 0xc0021aff4ede80a4
.dword 0x3feb6ab038adcf98
.dword 0x3fd83a7eb80f24c6
.dword 0xc0021aff4ede80a4
.dword 0x3feb6ab038adcf98
.dword 0x3fe4e502927fe9b6
.dword 0xbfdd822b386846c1
.dword 0x3fd34488e7c7634a
.dword 0x3fe4e502927fe9b6
.dword 0xbfdd822b386846c1
.dword 0x3fd34488e7c7634a
.dword 0x3fe4e502927fe9b6
.dword 0xbfdd822b386846c1
.dword 0x3fd34488e7c7634a
.dword 0x3fe4e502927fe9b6
.dword 0xbfdd822b386846c1
.dword 0x3fd34488e7c7634a
.dword 0x3fe4e502927fe9b6
.dword 0xbfdd822b386846c1
.dword 0x3fd34488e7c7634a
.dword 0x3fe41cc9d5f93cb4
.dword 0xbfb681194b3842f6
.dword 0x3fac49dd6d0ce650
.dword 0x3fe41cc9d5f93cb4
.dword 0xbfb681194b3842f6
.dword 0x3fac49dd6d0ce650
.dword 0x3fe41cc9d5f93cb4
.dword 0xbfb681194b3842f6
.dword 0x3fac49dd6d0ce650
.dword 0x3fe41cc9d5f93cb4
.dword 0xbfb681194b3842f6
.dword 0x3fac49dd6d0ce650
.dword 0x3fe41cc9d5f93cb4
.dword 0xbfb681194b3842f6
.dword 0x3fac49dd6d0ce650
.dword 0x3fe363bd43df2c9e
.dword 0xbff97ba5ecc6af76
.dword 0x3feee1af8c8633dd
.dword 0x3fe363bd43df2c9e
.dword 0xbff97ba5ecc6af76
.dword 0x3feee1af8c8633dd
.dword 0x3fe363bd43df2c9e
.dword 0xbff97ba5ecc6af76
.dword 0x3feee1af8c8633dd
.dword 0x3fe363bd43df2c9e
.dword 0xbff97ba5ecc6af76
.dword 0x3feee1af8c8633dd
.dword 0x3fe363bd43df2c9e
.dword 0xbff97ba5ecc6af76
.dword 0x3feee1af8c8633dd
.dword 0x3fd69063a431773c
.dword 0xc003df0c654462a9
.dword 0x3fec06043ad5cff1
.dword 0x3fd69063a431773c
.dword 0xc003df0c654462a9
.dword 0x3fec06043ad5cff1
.dword 0x3fd69063a431773c
.dword 0xc003df0c654462a9
.dword 0x3fec06043ad5cff1
.dword 0x3fd69063a431773c
.dword 0xc003df0c654462a9
.dword 0x3fec06043ad5cff1
.dword 0x3fd69063a431773c
.dword 0xc003df0c654462a9
.dword 0x3fec06043ad5cff1
.dword 0x3fcddbf92dd7e9dc
.dword 0xbfe806004c2c05a9
.dword 0x3fc66a94682e0b6c
.dword 0x3fcddbf92dd7e9dc
.dword 0xbfe806004c2c05a9
.dword 0x3fc66a94682e0b6c
.dword 0x3fcddbf92dd7e9dc
.dword 0xbfe806004c2c05a9
.dword 0x3fc66a94682e0b6c
.dword 0x3fcddbf92dd7e9dc
.dword 0xbfe806004c2c05a9
.dword 0x3fc66a94682e0b6c
.dword 0x3fcddbf92dd7e9dc
.dword 0xbfe806004c2c05a9
.dword 0x3fc66a94682e0b6c
.dword 0x3fe90a4a15b9d60b
.dword 0xbfe35cf90ff2a459
.dword 0x3fde4db8ecdfef22
.dword 0x3fe90a4a15b9d60b
.dword 0xbfe35cf90ff2a459
.dword 0x3fde4db8ecdfef22
.dword 0x3fe90a4a15b9d60b
.dword 0xbfe35cf90ff2a459
.dword 0x3fde4db8ecdfef22
.dword 0x3fe90a4a15b9d60b
.dword 0xbfe35cf90ff2a459
.dword 0x3fde4db8ecdfef22
.dword 0x3fe90a4a15b9d60b
.dword 0xbfe35cf90ff2a459
.dword 0x3fde4db8ecdfef22
.dword 0x3fb02b09cf9edfe0
.dword 0xc02682cfe45f21ae
.dword 0x3fe6bf5d40c5ba28
.dword 0x3fb02b09cf9edfe0
.dword 0xc02682cfe45f21ae
.dword 0x3fe6bf5d40c5ba28
.dword 0x3fb02b09cf9edfe0
.dword 0xc02682cfe45f21ae
.dword 0x3fe6bf5d40c5ba28
.dword 0x3fb02b09cf9edfe0
.dword 0xc02682cfe45f21ae
.dword 0x3fe6bf5d40c5ba28
.dword 0x3fb02b09cf9edfe0
.dword 0xc02682cfe45f21ae
.dword 0x3fe6bf5d40c5ba28
.dword 0x3f9d1d5d3f287280
.dword 0xc03066d622ce8a39
.dword 0x3fddd87e19b07cd2
.dword 0x3f9d1d5d3f287280
.dword 0xc03066d622ce8a39
.dword 0x3fddd87e19b07cd2
.dword 0x3f9d1d5d3f287280
.dword 0xc03066d622ce8a39
.dword 0x3fddd87e19b07cd2
.dword 0x3f9d1d5d3f287280
.dword 0xc03066d622ce8a39
.dword 0x3fddd87e19b07cd2
.dword 0x3f9d1d5d3f287280
.dword 0xc03066d622ce8a39
.dword 0x3fddd87e19b07cd2
.dword 0x3fc4c1b8ab91e9cc
.dword 0xc008ab5e2660ad67
.dword 0x3fe00072c5757bff
.dword 0x3fc4c1b8ab91e9cc
.dword 0xc008ab5e2660ad67
.dword 0x3fe00072c5757bff
.dword 0x3fc4c1b8ab91e9cc
.dword 0xc008ab5e2660ad67
.dword 0x3fe00072c5757bff
.dword 0x3fc4c1b8ab91e9cc
.dword 0xc008ab5e2660ad67
.dword 0x3fe00072c5757bff
.dword 0x3fc4c1b8ab91e9cc
.dword 0xc008ab5e2660ad67
.dword 0x3fe00072c5757bff
.dword 0x3fe0c5a528aafc8d
.dword 0xbffa9f75d1e2840f
.dword 0x3febe853fca4e684
.dword 0x3fe0c5a528aafc8d
.dword 0xbffa9f75d1e2840f
.dword 0x3febe853fca4e684
.dword 0x3fe0c5a528aafc8d
.dword 0xbffa9f75d1e2840f
.dword 0x3febe853fca4e684
.dword 0x3fe0c5a528aafc8d
.dword 0xbffa9f75d1e2840f
.dword 0x3febe853fca4e684
.dword 0x3fe0c5a528aafc8d
.dword 0xbffa9f75d1e2840f
.dword 0x3febe853fca4e684
.dword 0x3fe61e2aeaef8095
.dword 0xbfdd9e562c307834
.dword 0x3fd478c7686f5dce
.dword 0x3fe61e2aeaef8095
.dword 0xbfdd9e562c307834
.dword 0x3fd478c7686f5dce
.dword 0x3fe61e2aeaef8095
.dword 0xbfdd9e562c307834
.dword 0x3fd478c7686f5dce
.dword 0x3fe61e2aeaef8095
.dword 0xbfdd9e562c307834
.dword 0x3fd478c7686f5dce
.dword 0x3fe61e2aeaef8095
.dword 0xbfdd9e562c307834
.dword 0x3fd478c7686f5dce
.dword 0x3fc3f7b8a3867498
.dword 0xc00834c0c3e6e6e3
.dword 0x3fde356a9e801198
.dword 0x3fc3f7b8a3867498
.dword 0xc00834c0c3e6e6e3
.dword 0x3fde356a9e801198
.dword 0x3fc3f7b8a3867498
.dword 0xc00834c0c3e6e6e3
.dword 0x3fde356a9e801198
.dword 0x3fc3f7b8a3867498
.dword 0xc00834c0c3e6e6e3
.dword 0x3fde356a9e801198
.dword 0x3fc3f7b8a3867498
.dword 0xc00834c0c3e6e6e3
.dword 0x3fde356a9e801198
.dword 0x3fe054f60886995e
.dword 0xbff3dbcc0019df9c
.dword 0x3fe4453f4d0fde27
.dword 0x3fe054f60886995e
.dword 0xbff3dbcc0019df9c
.dword 0x3fe4453f4d0fde27
.dword 0x3fe054f60886995e
.dword 0xbff3dbcc0019df9c
.dword 0x3fe4453f4d0fde27
.dword 0x3fe054f60886995e
.dword 0xbff3dbcc0019df9c
.dword 0x3fe4453f4d0fde27
.dword 0x3fe054f60886995e
.dword 0xbff3dbcc0019df9c
.dword 0x3fe4453f4d0fde27
.dword 0x3fd3b4554b7cf508
.dword 0xbfaba9dfc68e440c
.dword 0x3f9108c2251deaa0
.dword 0x3fd3b4554b7cf508
.dword 0xbfaba9dfc68e440c
.dword 0x3f9108c2251deaa0
.dword 0x3fd3b4554b7cf508
.dword 0xbfaba9dfc68e440c
.dword 0x3f9108c2251deaa0
.dword 0x3fd3b4554b7cf508
.dword 0xbfaba9dfc68e440c
.dword 0x3f9108c2251deaa0
.dword 0x3fd3b4554b7cf508
.dword 0xbfaba9dfc68e440c
.dword 0x3f9108c2251deaa0
.dword 0x3fba7b6588681a48
.dword 0xbfe7e9f95ef618fd
.dword 0x3fb3ca51d41839d8
.dword 0x3fba7b6588681a48
.dword 0xbfe7e9f95ef618fd
.dword 0x3fb3ca51d41839d8
.dword 0x3fba7b6588681a48
.dword 0xbfe7e9f95ef618fd
.dword 0x3fb3ca51d41839d8
.dword 0x3fba7b6588681a48
.dword 0xbfe7e9f95ef618fd
.dword 0x3fb3ca51d41839d8
.dword 0x3fba7b6588681a48
.dword 0xbfe7e9f95ef618fd
.dword 0x3fb3ca51d41839d8
.dword 0x3fb040c4520792b8
.dword 0xc01a90dcffbcc297
.dword 0x3fdafc666a81f204
.dword 0x3fb040c4520792b8
.dword 0xc01a90dcffbcc297
.dword 0x3fdafc666a81f204
.dword 0x3fb040c4520792b8
.dword 0xc01a90dcffbcc297
.dword 0x3fdafc666a81f204
.dword 0x3fb040c4520792b8
.dword 0xc01a90dcffbcc297
.dword 0x3fdafc666a81f204
.dword 0x3fb040c4520792b8
.dword 0xc01a90dcffbcc297
.dword 0x3fdafc666a81f204
.dword 0x3fd8b81badb38620
.dword 0xbff83da0789ab74b
.dword 0x3fe2b9afacbe12b9
.dword 0x3fd8b81badb38620
.dword 0xbff83da0789ab74b
.dword 0x3fe2b9afacbe12b9
.dword 0x3fd8b81badb38620
.dword 0xbff83da0789ab74b
.dword 0x3fe2b9afacbe12b9
.dword 0x3fd8b81badb38620
.dword 0xbff83da0789ab74b
.dword 0x3fe2b9afacbe12b9
.dword 0x3fd8b81badb38620
.dword 0xbff83da0789ab74b
.dword 0x3fe2b9afacbe12b9
.dword 0x3fbccff731a70a30
.dword 0xc00d7565feda223f
.dword 0x3fda862c3aa84264
.dword 0x3fbccff731a70a30
.dword 0xc00d7565feda223f
.dword 0x3fda862c3aa84264
.dword 0x3fbccff731a70a30
.dword 0xc00d7565feda223f
.dword 0x3fda862c3aa84264
.dword 0x3fbccff731a70a30
.dword 0xc00d7565feda223f
.dword 0x3fda862c3aa84264
.dword 0x3fbccff731a70a30
.dword 0xc00d7565feda223f
.dword 0x3fda862c3aa84264
.dword 0x3fce7507f8f40ec4
.dword 0xc00f9344b3618a80
.dword 0x3fee0d8ab9387ba4
.dword 0x3fce7507f8f40ec4
.dword 0xc00f9344b3618a80
.dword 0x3fee0d8ab9387ba4
.dword 0x3fce7507f8f40ec4
.dword 0xc00f9344b3618a80
.dword 0x3fee0d8ab9387ba4
.dword 0x3fce7507f8f40ec4
.dword 0xc00f9344b3618a80
.dword 0x3fee0d8ab9387ba4
.dword 0x3fce7507f8f40ec4
.dword 0xc00f9344b3618a80
.dword 0x3fee0d8ab9387ba4
.dword 0x3fe2f31f434dedeb
.dword 0xbff674296301da06
.dword 0x3fea97dea375bb72
.dword 0x3fe2f31f434dedeb
.dword 0xbff674296301da06
.dword 0x3fea97dea375bb72
.dword 0x3fe2f31f434dedeb
.dword 0xbff674296301da06
.dword 0x3fea97dea375bb72
.dword 0x3fe2f31f434dedeb
.dword 0xbff674296301da06
.dword 0x3fea97dea375bb72
.dword 0x3fe2f31f434dedeb
.dword 0xbff674296301da06
.dword 0x3fea97dea375bb72
.dword 0x3febc14c2b193245
.dword 0xbfe8d5ee6c8f0e48
.dword 0x3fe58a868f20bb37
.dword 0x3febc14c2b193245
.dword 0xbfe8d5ee6c8f0e48
.dword 0x3fe58a868f20bb37
.dword 0x3febc14c2b193245
.dword 0xbfe8d5ee6c8f0e48
.dword 0x3fe58a868f20bb37
.dword 0x3febc14c2b193245
.dword 0xbfe8d5ee6c8f0e48
.dword 0x3fe58a868f20bb37
.dword 0x3febc14c2b193245
.dword 0xbfe8d5ee6c8f0e48
.dword 0x3fe58a868f20bb37
.dword 0x3f65a73773352100
.dword 0xc03a02fc031e4a91
.dword 0x3fb199e2080335d0
.dword 0x3f65a73773352100
.dword 0xc03a02fc031e4a91
.dword 0x3fb199e2080335d0
.dword 0x3f65a73773352100
.dword 0xc03a02fc031e4a91
.dword 0x3fb199e2080335d0
.dword 0x3f65a73773352100
.dword 0xc03a02fc031e4a91
.dword 0x3fb199e2080335d0
.dword 0x3f65a73773352100
.dword 0xc03a02fc031e4a91
.dword 0x3fb199e2080335d0
.dword 0x3fdbfa706a40fde2
.dword 0xbfc2b95286e0ef6e
.dword 0x3fb05ee73d5847f8
.dword 0x3fdbfa706a40fde2
.dword 0xbfc2b95286e0ef6e
.dword 0x3fb05ee73d5847f8
.dword 0x3fdbfa706a40fde2
.dword 0xbfc2b95286e0ef6e
.dword 0x3fb05ee73d5847f8
.dword 0x3fdbfa706a40fde2
.dword 0xbfc2b95286e0ef6e
.dword 0x3fb05ee73d5847f8
.dword 0x3fdbfa706a40fde2
.dword 0xbfc2b95286e0ef6e
.dword 0x3fb05ee73d5847f8
.dword 0x3fd0e2f3f3ff2d36
.dword 0xbfff99a32ee2ce59
.dword 0x3fe0acef8f8e6126
.dword 0x3fd0e2f3f3ff2d36
.dword 0xbfff99a32ee2ce59
.dword 0x3fe0acef8f8e6126
.dword 0x3fd0e2f3f3ff2d36
.dword 0xbfff99a32ee2ce59
.dword 0x3fe0acef8f8e6126
.dword 0x3fd0e2f3f3ff2d36
.dword 0xbfff99a32ee2ce59
.dword 0x3fe0acef8f8e6126
.dword 0x3fd0e2f3f3ff2d36
.dword 0xbfff99a32ee2ce59
.dword 0x3fe0acef8f8e6126
.dword 0x3fe58b2ad2d181d3
.dword 0xbfc6742405084338
.dword 0x3fbe3bbc583f7940
.dword 0x3fe58b2ad2d181d3
.dword 0xbfc6742405084338
.dword 0x3fbe3bbc583f7940
.dword 0x3fe58b2ad2d181d3
.dword 0xbfc6742405084338
.dword 0x3fbe3bbc583f7940
.dword 0x3fe58b2ad2d181d3
.dword 0xbfc6742405084338
.dword 0x3fbe3bbc583f7940
.dword 0x3fe58b2ad2d181d3
.dword 0xbfc6742405084338
.dword 0x3fbe3bbc583f7940
.dword 0x3fc663db5d44aa90
.dword 0xc00425a75c036cc1
.dword 0x3fdc318352e219bc
.dword 0x3fc663db5d44aa90
.dword 0xc00425a75c036cc1
.dword 0x3fdc318352e219bc
.dword 0x3fc663db5d44aa90
.dword 0xc00425a75c036cc1
.dword 0x3fdc318352e219bc
.dword 0x3fc663db5d44aa90
.dword 0xc00425a75c036cc1
.dword 0x3fdc318352e219bc
.dword 0x3fc663db5d44aa90
.dword 0xc00425a75c036cc1
.dword 0x3fdc318352e219bc
.dword 0x3fdc6ce691b563fc
.dword 0xbfe30227e6b3a1a2
.dword 0x3fd0e29326941a3e
.dword 0x3fdc6ce691b563fc
.dword 0xbfe30227e6b3a1a2
.dword 0x3fd0e29326941a3e
.dword 0x3fdc6ce691b563fc
.dword 0xbfe30227e6b3a1a2
.dword 0x3fd0e29326941a3e
.dword 0x3fdc6ce691b563fc
.dword 0xbfe30227e6b3a1a2
.dword 0x3fd0e29326941a3e
.dword 0x3fdc6ce691b563fc
.dword 0xbfe30227e6b3a1a2
.dword 0x3fd0e29326941a3e
.dword 0x3fec82fd9c37c99d
.dword 0xbff10b3e3c84e5e7
.dword 0x3fee5f366bc5734f
.dword 0x3fec82fd9c37c99d
.dword 0xbff10b3e3c84e5e7
.dword 0x3fee5f366bc5734f
.dword 0x3fec82fd9c37c99d
.dword 0xbff10b3e3c84e5e7
.dword 0x3fee5f366bc5734f
.dword 0x3fec82fd9c37c99d
.dword 0xbff10b3e3c84e5e7
.dword 0x3fee5f366bc5734f
.dword 0x3fec82fd9c37c99d
.dword 0xbff10b3e3c84e5e7
.dword 0x3fee5f366bc5734f
.dword 0x3fea589aeaa6f442
.dword 0xbfd37ad4765e7f65
.dword 0x3fd009bcb6689888
.dword 0x3fea589aeaa6f442
.dword 0xbfd37ad4765e7f65
.dword 0x3fd009bcb6689888
.dword 0x3fea589aeaa6f442
.dword 0xbfd37ad4765e7f65
.dword 0x3fd009bcb6689888
.dword 0x3fea589aeaa6f442
.dword 0xbfd37ad4765e7f65
.dword 0x3fd009bcb6689888
.dword 0x3fea589aeaa6f442
.dword 0xbfd37ad4765e7f65
.dword 0x3fd009bcb6689888
.dword 0x3fe8e06edfabe22a
.dword 0xbfed188328bcdaef
.dword 0x3fe69e72c44cc4dd
.dword 0x3fe8e06edfabe22a
.dword 0xbfed188328bcdaef
.dword 0x3fe69e72c44cc4dd
.dword 0x3fe8e06edfabe22a
.dword 0xbfed188328bcdaef
.dword 0x3fe69e72c44cc4dd
.dword 0x3fe8e06edfabe22a
.dword 0xbfed188328bcdaef
.dword 0x3fe69e72c44cc4dd
.dword 0x3fe8e06edfabe22a
.dword 0xbfed188328bcdaef
.dword 0x3fe69e72c44cc4dd
.dword 0x3fcbe0c51ef53b68
.dword 0xc01088846101f658
.dword 0x3feccea251dcb599
.dword 0x3fcbe0c51ef53b68
.dword 0xc01088846101f658
.dword 0x3feccea251dcb599
.dword 0x3fcbe0c51ef53b68
.dword 0xc01088846101f658
.dword 0x3feccea251dcb599
.dword 0x3fcbe0c51ef53b68
.dword 0xc01088846101f658
.dword 0x3feccea251dcb599
.dword 0x3fcbe0c51ef53b68
.dword 0xc01088846101f658
.dword 0x3feccea251dcb599
.dword 0x3fe38aeabf67ab1c
.dword 0xbfedcd832c59642c
.dword 0x3fe23366c916bd13
.dword 0x3fe38aeabf67ab1c
.dword 0xbfedcd832c59642c
.dword 0x3fe23366c916bd13
.dword 0x3fe38aeabf67ab1c
.dword 0xbfedcd832c59642c
.dword 0x3fe23366c916bd13
.dword 0x3fe38aeabf67ab1c
.dword 0xbfedcd832c59642c
.dword 0x3fe23366c916bd13
.dword 0x3fe38aeabf67ab1c
.dword 0xbfedcd832c59642c
.dword 0x3fe23366c916bd13
.dword 0x3feae36d875f2552
.dword 0xbfec60175cbd4c41
.dword 0x3fe7d7bdc06d019b
.dword 0x3feae36d875f2552
.dword 0xbfec60175cbd4c41
.dword 0x3fe7d7bdc06d019b
.dword 0x3feae36d875f2552
.dword 0xbfec60175cbd4c41
.dword 0x3fe7d7bdc06d019b
.dword 0x3feae36d875f2552
.dword 0xbfec60175cbd4c41
.dword 0x3fe7d7bdc06d019b
.dword 0x3feae36d875f2552
.dword 0xbfec60175cbd4c41
.dword 0x3fe7d7bdc06d019b
.dword 0x3fd1d4da7b1fade4
.dword 0xc002b84055f68608
.dword 0x3fe4dccd4e43031c
.dword 0x3fd1d4da7b1fade4
.dword 0xc002b84055f68608
.dword 0x3fe4dccd4e43031c
.dword 0x3fd1d4da7b1fade4
.dword 0xc002b84055f68608
.dword 0x3fe4dccd4e43031c
.dword 0x3fd1d4da7b1fade4
.dword 0xc002b84055f68608
.dword 0x3fe4dccd4e43031c
.dword 0x3fd1d4da7b1fade4
.dword 0xc002b84055f68608
.dword 0x3fe4dccd4e43031c
.dword 0x3fdeb76f28cc8e64
.dword 0xbffd896f6750ad3c
.dword 0x3fec5a29005580fc
.dword 0x3fdeb76f28cc8e64
.dword 0xbffd896f6750ad3c
.dword 0x3fec5a29005580fc
.dword 0x3fdeb76f28cc8e64
.dword 0xbffd896f6750ad3c
.dword 0x3fec5a29005580fc
.dword 0x3fdeb76f28cc8e64
.dword 0xbffd896f6750ad3c
.dword 0x3fec5a29005580fc
.dword 0x3fdeb76f28cc8e64
.dword 0xbffd896f6750ad3c
.dword 0x3fec5a29005580fc
.dword 0x3fe48f6e30219322
.dword 0xbff0c3b6c82093af
.dword 0x3fe58aed1fbc4dce
.dword 0x3fe48f6e30219322
.dword 0xbff0c3b6c82093af
.dword 0x3fe58aed1fbc4dce
.dword 0x3fe48f6e30219322
.dword 0xbff0c3b6c82093af
.dword 0x3fe58aed1fbc4dce
.dword 0x3fe48f6e30219322
.dword 0xbff0c3b6c82093af
.dword 0x3fe58aed1fbc4dce
.dword 0x3fe48f6e30219322
.dword 0xbff0c3b6c82093af
.dword 0x3fe58aed1fbc4dce
.dword 0x3fe5c8570b1c55a2
.dword 0xbff08896dc411577
.dword 0x3fe6824b51061697
.dword 0x3fe5c8570b1c55a2
.dword 0xbff08896dc411577
.dword 0x3fe6824b51061697
.dword 0x3fe5c8570b1c55a2
.dword 0xbff08896dc411577
.dword 0x3fe6824b51061697
.dword 0x3fe5c8570b1c55a2
.dword 0xbff08896dc411577
.dword 0x3fe6824b51061697
.dword 0x3fe5c8570b1c55a2
.dword 0xbff08896dc411577
.dword 0x3fe6824b51061697
.dword 0x3fd19e4567b4192e
.dword 0xbff7438e04d37460
.dword 0x3fd99de6e9ad876c
.dword 0x3fd19e4567b4192e
.dword 0xbff7438e04d37460
.dword 0x3fd99de6e9ad876c
.dword 0x3fd19e4567b4192e
.dword 0xbff7438e04d37460
.dword 0x3fd99de6e9ad876c
.dword 0x3fd19e4567b4192e
.dword 0xbff7438e04d37460
.dword 0x3fd99de6e9ad876c
.dword 0x3fd19e4567b4192e
.dword 0xbff7438e04d37460
.dword 0x3fd99de6e9ad876c
.dword 0x3fc5f586decce698
.dword 0xbff145abaa6a8d64
.dword 0x3fc7b47dbc4eeb7c
.dword 0x3fc5f586decce698
.dword 0xbff145abaa6a8d64
.dword 0x3fc7b47dbc4eeb7c
.dword 0x3fc5f586decce698
.dword 0xbff145abaa6a8d64
.dword 0x3fc7b47dbc4eeb7c
.dword 0x3fc5f586decce698
.dword 0xbff145abaa6a8d64
.dword 0x3fc7b47dbc4eeb7c
.dword 0x3fc5f586decce698
.dword 0xbff145abaa6a8d64
.dword 0x3fc7b47dbc4eeb7c
.dword 0x3fd62ab9f9902b34
.dword 0xbffd46ae37e11a33
.dword 0x3fe447aeb0052dbc
.dword 0x3fd62ab9f9902b34
.dword 0xbffd46ae37e11a33
.dword 0x3fe447aeb0052dbc
.dword 0x3fd62ab9f9902b34
.dword 0xbffd46ae37e11a33
.dword 0x3fe447aeb0052dbc
.dword 0x3fd62ab9f9902b34
.dword 0xbffd46ae37e11a33
.dword 0x3fe447aeb0052dbc
.dword 0x3fd62ab9f9902b34
.dword 0xbffd46ae37e11a33
.dword 0x3fe447aeb0052dbc
.dword 0x3fb488795d503e40
.dword 0xbffc1d08da429d25
.dword 0x3fc20a0b8dcd97a0
.dword 0x3fb488795d503e40
.dword 0xbffc1d08da429d25
.dword 0x3fc20a0b8dcd97a0
.dword 0x3fb488795d503e40
.dword 0xbffc1d08da429d25
.dword 0x3fc20a0b8dcd97a0
.dword 0x3fb488795d503e40
.dword 0xbffc1d08da429d25
.dword 0x3fc20a0b8dcd97a0
.dword 0x3fb488795d503e40
.dword 0xbffc1d08da429d25
.dword 0x3fc20a0b8dcd97a0
.dword 0x3fe5c33830d66aa4
.dword 0xbff69daa900bfb79
.dword 0x3feec2e0d8a85778
.dword 0x3fe5c33830d66aa4
.dword 0xbff69daa900bfb79
.dword 0x3feec2e0d8a85778
.dword 0x3fe5c33830d66aa4
.dword 0xbff69daa900bfb79
.dword 0x3feec2e0d8a85778
.dword 0x3fe5c33830d66aa4
.dword 0xbff69daa900bfb79
.dword 0x3feec2e0d8a85778
.dword 0x3fe5c33830d66aa4
.dword 0xbff69daa900bfb79
.dword 0x3feec2e0d8a85778
.dword 0x3fc14756b04efa98
.dword 0xc00494f0a5e14b30
.dword 0x3fd63a041f78e2cc
.dword 0x3fc14756b04efa98
.dword 0xc00494f0a5e14b30
.dword 0x3fd63a041f78e2cc
.dword 0x3fc14756b04efa98
.dword 0xc00494f0a5e14b30
.dword 0x3fd63a041f78e2cc
.dword 0x3fc14756b04efa98
.dword 0xc00494f0a5e14b30
.dword 0x3fd63a041f78e2cc
.dword 0x3fc14756b04efa98
.dword 0xc00494f0a5e14b30
.dword 0x3fd63a041f78e2cc
.dword 0x3fed089fe37ea0cf
.dword 0xbfdbb73331b02b52
.dword 0x3fd9257ead23b1fa
.dword 0x3fed089fe37ea0cf
.dword 0xbfdbb73331b02b52
.dword 0x3fd9257ead23b1fa
.dword 0x3fed089fe37ea0cf
.dword 0xbfdbb73331b02b52
.dword 0x3fd9257ead23b1fa
.dword 0x3fed089fe37ea0cf
.dword 0xbfdbb73331b02b52
.dword 0x3fd9257ead23b1fa
.dword 0x3fed089fe37ea0cf
.dword 0xbfdbb73331b02b52
.dword 0x3fd9257ead23b1fa
.dword 0x3fb835d096f7ecd0
.dword 0xbfe9456bf625005f
.dword 0x3fb31e90ade26270
.dword 0x3fb835d096f7ecd0
.dword 0xbfe9456bf625005f
.dword 0x3fb31e90ade26270
.dword 0x3fb835d096f7ecd0
.dword 0xbfe9456bf625005f
.dword 0x3fb31e90ade26270
.dword 0x3fb835d096f7ecd0
.dword 0xbfe9456bf625005f
.dword 0x3fb31e90ade26270
.dword 0x3fb835d096f7ecd0
.dword 0xbfe9456bf625005f
.dword 0x3fb31e90ade26270
.dword 0x3fe131a2b2293af0
.dword 0xbfcf46a641bae2b7
.dword 0x3fc0ce0b854ae44c
.dword 0x3fe131a2b2293af0
.dword 0xbfcf46a641bae2b7
.dword 0x3fc0ce0b854ae44c
.dword 0x3fe131a2b2293af0
.dword 0xbfcf46a641bae2b7
.dword 0x3fc0ce0b854ae44c
.dword 0x3fe131a2b2293af0
.dword 0xbfcf46a641bae2b7
.dword 0x3fc0ce0b854ae44c
.dword 0x3fe131a2b2293af0
.dword 0xbfcf46a641bae2b7
.dword 0x3fc0ce0b854ae44c
.dword 0x3fd42850e5e2079e
.dword 0xc00730660780dc5c
.dword 0x3fed36edc79e4615
.dword 0x3fd42850e5e2079e
.dword 0xc00730660780dc5c
.dword 0x3fed36edc79e4615
.dword 0x3fd42850e5e2079e
.dword 0xc00730660780dc5c
.dword 0x3fed36edc79e4615
.dword 0x3fd42850e5e2079e
.dword 0xc00730660780dc5c
.dword 0x3fed36edc79e4615
.dword 0x3fd42850e5e2079e
.dword 0xc00730660780dc5c
.dword 0x3fed36edc79e4615
.dword 0x3feb9f4acbe96179
.dword 0xbfdce50739dab394
.dword 0x3fd8f1139e785572
.dword 0x3feb9f4acbe96179
.dword 0xbfdce50739dab394
.dword 0x3fd8f1139e785572
.dword 0x3feb9f4acbe96179
.dword 0xbfdce50739dab394
.dword 0x3fd8f1139e785572
.dword 0x3feb9f4acbe96179
.dword 0xbfdce50739dab394
.dword 0x3fd8f1139e785572
.dword 0x3feb9f4acbe96179
.dword 0xbfdce50739dab394
.dword 0x3fd8f1139e785572
.dword 0x3fb45d517e8e3ad0
.dword 0xc0057f0a9240d0f0
.dword 0x3fcb5c2d21702c14
.dword 0x3fb45d517e8e3ad0
.dword 0xc0057f0a9240d0f0
.dword 0x3fcb5c2d21702c14
.dword 0x3fb45d517e8e3ad0
.dword 0xc0057f0a9240d0f0
.dword 0x3fcb5c2d21702c14
.dword 0x3fb45d517e8e3ad0
.dword 0xc0057f0a9240d0f0
.dword 0x3fcb5c2d21702c14
.dword 0x3fb45d517e8e3ad0
.dword 0xc0057f0a9240d0f0
.dword 0x3fcb5c2d21702c14
.dword 0x3fcc211756ee9dac
.dword 0xbfa01d9183f02d40
.dword 0x3f7c55132514e100
.dword 0x3fcc211756ee9dac
.dword 0xbfa01d9183f02d40
.dword 0x3f7c55132514e100
.dword 0x3fcc211756ee9dac
.dword 0xbfa01d9183f02d40
.dword 0x3f7c55132514e100
.dword 0x3fcc211756ee9dac
.dword 0xbfa01d9183f02d40
.dword 0x3f7c55132514e100
.dword 0x3fcc211756ee9dac
.dword 0xbfa01d9183f02d40
.dword 0x3f7c55132514e100
.dword 0x3fe395fdb7a9c138
.dword 0xbfe20db7d6503188
.dword 0x3fd6198856a26400
.dword 0x3fe395fdb7a9c138
.dword 0xbfe20db7d6503188
.dword 0x3fd6198856a26400
.dword 0x3fe395fdb7a9c138
.dword 0xbfe20db7d6503188
.dword 0x3fd6198856a26400
.dword 0x3fe395fdb7a9c138
.dword 0xbfe20db7d6503188
.dword 0x3fd6198856a26400
.dword 0x3fe395fdb7a9c138
.dword 0xbfe20db7d6503188
.dword 0x3fd6198856a26400
.dword 0x3fcc0fd97e4edb94
.dword 0xbfee268285939431
.dword 0x3fca70a12e36c758
.dword 0x3fcc0fd97e4edb94
.dword 0xbfee268285939431
.dword 0x3fca70a12e36c758
.dword 0x3fcc0fd97e4edb94
.dword 0xbfee268285939431
.dword 0x3fca70a12e36c758
.dword 0x3fcc0fd97e4edb94
.dword 0xbfee268285939431
.dword 0x3fca70a12e36c758
.dword 0x3fcc0fd97e4edb94
.dword 0xbfee268285939431
.dword 0x3fca70a12e36c758
.dword 0x3fc5cb935cdfb5dc
.dword 0xc00db227ad4c34ea
.dword 0x3fe439d4f6036e9a
.dword 0x3fc5cb935cdfb5dc
.dword 0xc00db227ad4c34ea
.dword 0x3fe439d4f6036e9a
.dword 0x3fc5cb935cdfb5dc
.dword 0xc00db227ad4c34ea
.dword 0x3fe439d4f6036e9a
.dword 0x3fc5cb935cdfb5dc
.dword 0xc00db227ad4c34ea
.dword 0x3fe439d4f6036e9a
.dword 0x3fc5cb935cdfb5dc
.dword 0xc00db227ad4c34ea
.dword 0x3fe439d4f6036e9a
.dword 0x3fc7e6ab13066e00
.dword 0xc0014874e9e696a7
.dword 0x3fd9d1526bcc4bea
.dword 0x3fc7e6ab13066e00
.dword 0xc0014874e9e696a7
.dword 0x3fd9d1526bcc4bea
.dword 0x3fc7e6ab13066e00
.dword 0xc0014874e9e696a7
.dword 0x3fd9d1526bcc4bea
.dword 0x3fc7e6ab13066e00
.dword 0xc0014874e9e696a7
.dword 0x3fd9d1526bcc4bea
.dword 0x3fc7e6ab13066e00
.dword 0xc0014874e9e696a7
.dword 0x3fd9d1526bcc4bea
.dword 0x3fd02ad1a456261a
.dword 0xc007c1414b48da97
.dword 0x3fe800d3d71025d1
.dword 0x3fd02ad1a456261a
.dword 0xc007c1414b48da97
.dword 0x3fe800d3d71025d1
.dword 0x3fd02ad1a456261a
.dword 0xc007c1414b48da97
.dword 0x3fe800d3d71025d1
.dword 0x3fd02ad1a456261a
.dword 0xc007c1414b48da97
.dword 0x3fe800d3d71025d1
.dword 0x3fd02ad1a456261a
.dword 0xc007c1414b48da97
.dword 0x3fe800d3d71025d1
.dword 0x3fa1b11cf0208210
.dword 0xc0184a699eccc969
.dword 0x3fcadbf357ecaff0
.dword 0x3fa1b11cf0208210
.dword 0xc0184a699eccc969
.dword 0x3fcadbf357ecaff0
.dword 0x3fa1b11cf0208210
.dword 0xc0184a699eccc969
.dword 0x3fcadbf357ecaff0
.dword 0x3fa1b11cf0208210
.dword 0xc0184a699eccc969
.dword 0x3fcadbf357ecaff0
.dword 0x3fa1b11cf0208210
.dword 0xc0184a699eccc969
.dword 0x3fcadbf357ecaff0
.dword 0x3fe2d282b70597f3
.dword 0xbff15f436be4436c
.dword 0x3fe46fbc1b04524f
.dword 0x3fe2d282b70597f3
.dword 0xbff15f436be4436c
.dword 0x3fe46fbc1b04524f
.dword 0x3fe2d282b70597f3
.dword 0xbff15f436be4436c
.dword 0x3fe46fbc1b04524f
.dword 0x3fe2d282b70597f3
.dword 0xbff15f436be4436c
.dword 0x3fe46fbc1b04524f
.dword 0x3fe2d282b70597f3
.dword 0xbff15f436be4436c
.dword 0x3fe46fbc1b04524f
.dword 0x3fe7201eb004d7ea
.dword 0xbfc3c4618ffa8e0f
.dword 0x3fbc91faebc53c50
.dword 0x3fe7201eb004d7ea
.dword 0xbfc3c4618ffa8e0f
.dword 0x3fbc91faebc53c50
.dword 0x3fe7201eb004d7ea
.dword 0xbfc3c4618ffa8e0f
.dword 0x3fbc91faebc53c50
.dword 0x3fe7201eb004d7ea
.dword 0xbfc3c4618ffa8e0f
.dword 0x3fbc91faebc53c50
.dword 0x3fe7201eb004d7ea
.dword 0xbfc3c4618ffa8e0f
.dword 0x3fbc91faebc53c50
.dword 0x3fc90f2d42cb7c9c
.dword 0xc0044228901d89fb
.dword 0x3fdfba96b5d9e518
.dword 0x3fc90f2d42cb7c9c
.dword 0xc0044228901d89fb
.dword 0x3fdfba96b5d9e518
.dword 0x3fc90f2d42cb7c9c
.dword 0xc0044228901d89fb
.dword 0x3fdfba96b5d9e518
.dword 0x3fc90f2d42cb7c9c
.dword 0xc0044228901d89fb
.dword 0x3fdfba96b5d9e518
.dword 0x3fc90f2d42cb7c9c
.dword 0xc0044228901d89fb
.dword 0x3fdfba96b5d9e518
.dword 0x3fe73bda7c0d9605
.dword 0xbfef38439e7953e1
.dword 0x3fe6aad57ee752d5
.dword 0x3fe73bda7c0d9605
.dword 0xbfef38439e7953e1
.dword 0x3fe6aad57ee752d5
.dword 0x3fe73bda7c0d9605
.dword 0xbfef38439e7953e1
.dword 0x3fe6aad57ee752d5
.dword 0x3fe73bda7c0d9605
.dword 0xbfef38439e7953e1
.dword 0x3fe6aad57ee752d5
.dword 0x3fe73bda7c0d9605
.dword 0xbfef38439e7953e1
.dword 0x3fe6aad57ee752d5
.dword 0x3fec41301d8074e2
.dword 0xbfc8bdb85c7ce93a
.dword 0x3fc5d867e2ccf4dc
.dword 0x3fec41301d8074e2
.dword 0xbfc8bdb85c7ce93a
.dword 0x3fc5d867e2ccf4dc
.dword 0x3fec41301d8074e2
.dword 0xbfc8bdb85c7ce93a
.dword 0x3fc5d867e2ccf4dc
.dword 0x3fec41301d8074e2
.dword 0xbfc8bdb85c7ce93a
.dword 0x3fc5d867e2ccf4dc
.dword 0x3fec41301d8074e2
.dword 0xbfc8bdb85c7ce93a
.dword 0x3fc5d867e2ccf4dc
.dword 0x3fe754ec500b856c
.dword 0xbfe977924cef932e
.dword 0x3fe2918718e1371c
.dword 0x3fe754ec500b856c
.dword 0xbfe977924cef932e
.dword 0x3fe2918718e1371c
.dword 0x3fe754ec500b856c
.dword 0xbfe977924cef932e
.dword 0x3fe2918718e1371c
.dword 0x3fe754ec500b856c
.dword 0xbfe977924cef932e
.dword 0x3fe2918718e1371c
.dword 0x3fe754ec500b856c
.dword 0xbfe977924cef932e
.dword 0x3fe2918718e1371c
.dword 0x3fedcdcdea01cce5
.dword 0xbfd25697c687f4c1
.dword 0x3fd1146a49119a9a
.dword 0x3fedcdcdea01cce5
.dword 0xbfd25697c687f4c1
.dword 0x3fd1146a49119a9a
.dword 0x3fedcdcdea01cce5
.dword 0xbfd25697c687f4c1
.dword 0x3fd1146a49119a9a
.dword 0x3fedcdcdea01cce5
.dword 0xbfd25697c687f4c1
.dword 0x3fd1146a49119a9a
.dword 0x3fedcdcdea01cce5
.dword 0xbfd25697c687f4c1
.dword 0x3fd1146a49119a9a
.dword 0x3fc4b6180eb03660
.dword 0xc0121320c75cbbe4
.dword 0x3fe7659dbb58a146
.dword 0x3fc4b6180eb03660
.dword 0xc0121320c75cbbe4
.dword 0x3fe7659dbb58a146
.dword 0x3fc4b6180eb03660
.dword 0xc0121320c75cbbe4
.dword 0x3fe7659dbb58a146
.dword 0x3fc4b6180eb03660
.dword 0xc0121320c75cbbe4
.dword 0x3fe7659dbb58a146
.dword 0x3fc4b6180eb03660
.dword 0xc0121320c75cbbe4
.dword 0x3fe7659dbb58a146
.dword 0x3fe0526498b590bb
.dword 0xbfed8dc2ae21bca6
.dword 0x3fde25f303f10256
.dword 0x3fe0526498b590bb
.dword 0xbfed8dc2ae21bca6
.dword 0x3fde25f303f10256
.dword 0x3fe0526498b590bb
.dword 0xbfed8dc2ae21bca6
.dword 0x3fde25f303f10256
.dword 0x3fe0526498b590bb
.dword 0xbfed8dc2ae21bca6
.dword 0x3fde25f303f10256
.dword 0x3fe0526498b590bb
.dword 0xbfed8dc2ae21bca6
.dword 0x3fde25f303f10256
.dword 0x3fe468fee94ec0df
.dword 0xbfecb91033884207
.dword 0x3fe251e863376b52
.dword 0x3fe468fee94ec0df
.dword 0xbfecb91033884207
.dword 0x3fe251e863376b52
.dword 0x3fe468fee94ec0df
.dword 0xbfecb91033884207
.dword 0x3fe251e863376b52
.dword 0x3fe468fee94ec0df
.dword 0xbfecb91033884207
.dword 0x3fe251e863376b52
.dword 0x3fe468fee94ec0df
.dword 0xbfecb91033884207
.dword 0x3fe251e863376b52
.dword 0x3fc6ec05c52f0704
.dword 0xc001a6159c78d522
.dword 0x3fd948b5d351a5f0
.dword 0x3fc6ec05c52f0704
.dword 0xc001a6159c78d522
.dword 0x3fd948b5d351a5f0
.dword 0x3fc6ec05c52f0704
.dword 0xc001a6159c78d522
.dword 0x3fd948b5d351a5f0
.dword 0x3fc6ec05c52f0704
.dword 0xc001a6159c78d522
.dword 0x3fd948b5d351a5f0
.dword 0x3fc6ec05c52f0704
.dword 0xc001a6159c78d522
.dword 0x3fd948b5d351a5f0
.dword 0x3fb05f1809e654d0
.dword 0xc01102ce7496f3fc
.dword 0x3fd167e8ad2759cc
.dword 0x3fb05f1809e654d0
.dword 0xc01102ce7496f3fc
.dword 0x3fd167e8ad2759cc
.dword 0x3fb05f1809e654d0
.dword 0xc01102ce7496f3fc
.dword 0x3fd167e8ad2759cc
.dword 0x3fb05f1809e654d0
.dword 0xc01102ce7496f3fc
.dword 0x3fd167e8ad2759cc
.dword 0x3fb05f1809e654d0
.dword 0xc01102ce7496f3fc
.dword 0x3fd167e8ad2759cc
.dword 0x3fc42472c14be9a0
.dword 0xc0000c2fbfbd6db4
.dword 0x3fd433ca33cf8ce8
.dword 0x3fc42472c14be9a0
.dword 0xc0000c2fbfbd6db4
.dword 0x3fd433ca33cf8ce8
.dword 0x3fc42472c14be9a0
.dword 0xc0000c2fbfbd6db4
.dword 0x3fd433ca33cf8ce8
.dword 0x3fc42472c14be9a0
.dword 0xc0000c2fbfbd6db4
.dword 0x3fd433ca33cf8ce8
.dword 0x3fc42472c14be9a0
.dword 0xc0000c2fbfbd6db4
.dword 0x3fd433ca33cf8ce8
.dword 0x3fe6b443326972eb
.dword 0xbfe173f2ad4e1a56
.dword 0x3fd8c40f64eea536
.dword 0x3fe6b443326972eb
.dword 0xbfe173f2ad4e1a56
.dword 0x3fd8c40f64eea536
.dword 0x3fe6b443326972eb
.dword 0xbfe173f2ad4e1a56
.dword 0x3fd8c40f64eea536
.dword 0x3fe6b443326972eb
.dword 0xbfe173f2ad4e1a56
.dword 0x3fd8c40f64eea536
.dword 0x3fe6b443326972eb
.dword 0xbfe173f2ad4e1a56
.dword 0x3fd8c40f64eea536
.dword 0x3fc393b0214d2ff0
.dword 0xc011fe61b0d6c780
.dword 0x3fe6042b372dd308
.dword 0x3fc393b0214d2ff0
.dword 0xc011fe61b0d6c780
.dword 0x3fe6042b372dd308
.dword 0x3fc393b0214d2ff0
.dword 0xc011fe61b0d6c780
.dword 0x3fe6042b372dd308
.dword 0x3fc393b0214d2ff0
.dword 0xc011fe61b0d6c780
.dword 0x3fe6042b372dd308
.dword 0x3fc393b0214d2ff0
.dword 0xc011fe61b0d6c780
.dword 0x3fe6042b372dd308
.dword 0x3fe42930027c513f
.dword 0xbfb0d42c21df8237
.dword 0x3fa534895a8fdc70
.dword 0x3fe42930027c513f
.dword 0xbfb0d42c21df8237
.dword 0x3fa534895a8fdc70
.dword 0x3fe42930027c513f
.dword 0xbfb0d42c21df8237
.dword 0x3fa534895a8fdc70
.dword 0x3fe42930027c513f
.dword 0xbfb0d42c21df8237
.dword 0x3fa534895a8fdc70
.dword 0x3fe42930027c513f
.dword 0xbfb0d42c21df8237
.dword 0x3fa534895a8fdc70
.dword 0x3fc3bf8ebe405048
.dword 0xc014d9fa2ff77091
.dword 0x3fe9bc7d3a0f24b2
.dword 0x3fc3bf8ebe405048
.dword 0xc014d9fa2ff77091
.dword 0x3fe9bc7d3a0f24b2
.dword 0x3fc3bf8ebe405048
.dword 0xc014d9fa2ff77091
.dword 0x3fe9bc7d3a0f24b2
.dword 0x3fc3bf8ebe405048
.dword 0xc014d9fa2ff77091
.dword 0x3fe9bc7d3a0f24b2
.dword 0x3fc3bf8ebe405048
.dword 0xc014d9fa2ff77091
.dword 0x3fe9bc7d3a0f24b2
.dword 0x3fcbbdb271acf804
.dword 0xc009fe38208c3e05
.dword 0x3fe68895c964fbc5
.dword 0x3fcbbdb271acf804
.dword 0xc009fe38208c3e05
.dword 0x3fe68895c964fbc5
.dword 0x3fcbbdb271acf804
.dword 0xc009fe38208c3e05
.dword 0x3fe68895c964fbc5
.dword 0x3fcbbdb271acf804
.dword 0xc009fe38208c3e05
.dword 0x3fe68895c964fbc5
.dword 0x3fcbbdb271acf804
.dword 0xc009fe38208c3e05
.dword 0x3fe68895c964fbc5
.dword 0x3fd7fe2999599722
.dword 0xbfbd53eeb5542f77
.dword 0x3fa5fd43e9290ff0
.dword 0x3fd7fe2999599722
.dword 0xbfbd53eeb5542f77
.dword 0x3fa5fd43e9290ff0
.dword 0x3fd7fe2999599722
.dword 0xbfbd53eeb5542f77
.dword 0x3fa5fd43e9290ff0
.dword 0x3fd7fe2999599722
.dword 0xbfbd53eeb5542f77
.dword 0x3fa5fd43e9290ff0
.dword 0x3fd7fe2999599722
.dword 0xbfbd53eeb5542f77
.dword 0x3fa5fd43e9290ff0
.dword 0x3fc323636adde334
.dword 0xc009e1c8d4827133
.dword 0x3fdef55d35952758
.dword 0x3fc323636adde334
.dword 0xc009e1c8d4827133
.dword 0x3fdef55d35952758
.dword 0x3fc323636adde334
.dword 0xc009e1c8d4827133
.dword 0x3fdef55d35952758
.dword 0x3fc323636adde334
.dword 0xc009e1c8d4827133
.dword 0x3fdef55d35952758
.dword 0x3fc323636adde334
.dword 0xc009e1c8d4827133
.dword 0x3fdef55d35952758
.dword 0x3fe42f12c0c5db80
.dword 0xbfb7c64897de7ffb
.dword 0x3fadfdcd10974f10
.dword 0x3fe42f12c0c5db80
.dword 0xbfb7c64897de7ffb
.dword 0x3fadfdcd10974f10
.dword 0x3fe42f12c0c5db80
.dword 0xbfb7c64897de7ffb
.dword 0x3fadfdcd10974f10
.dword 0x3fe42f12c0c5db80
.dword 0xbfb7c64897de7ffb
.dword 0x3fadfdcd10974f10
.dword 0x3fe42f12c0c5db80
.dword 0xbfb7c64897de7ffb
.dword 0x3fadfdcd10974f10
.dword 0x3fdcf8678ca4e602
.dword 0xbfaa3cc10257bb57
.dword 0x3f97c0d4a0bd2bc0
.dword 0x3fdcf8678ca4e602
.dword 0xbfaa3cc10257bb57
.dword 0x3f97c0d4a0bd2bc0
.dword 0x3fdcf8678ca4e602
.dword 0xbfaa3cc10257bb57
.dword 0x3f97c0d4a0bd2bc0
.dword 0x3fdcf8678ca4e602
.dword 0xbfaa3cc10257bb57
.dword 0x3f97c0d4a0bd2bc0
.dword 0x3fdcf8678ca4e602
.dword 0xbfaa3cc10257bb57
.dword 0x3f97c0d4a0bd2bc0
.dword 0x3fe8d7b5e1787baf
.dword 0xbfed0050c909d982
.dword 0x3fe683bb8bae77bb
.dword 0x3fe8d7b5e1787baf
.dword 0xbfed0050c909d982
.dword 0x3fe683bb8bae77bb
.dword 0x3fe8d7b5e1787baf
.dword 0xbfed0050c909d982
.dword 0x3fe683bb8bae77bb
.dword 0x3fe8d7b5e1787baf
.dword 0xbfed0050c909d982
.dword 0x3fe683bb8bae77bb
.dword 0x3fe8d7b5e1787baf
.dword 0xbfed0050c909d982
.dword 0x3fe683bb8bae77bb
.dword 0x3fb28a1e22f9c158
.dword 0xbfd0251bd859fde7
.dword 0x3f92b51dcc6e5b40
.dword 0x3fb28a1e22f9c158
.dword 0xbfd0251bd859fde7
.dword 0x3f92b51dcc6e5b40
.dword 0x3fb28a1e22f9c158
.dword 0xbfd0251bd859fde7
.dword 0x3f92b51dcc6e5b40
.dword 0x3fb28a1e22f9c158
.dword 0xbfd0251bd859fde7
.dword 0x3f92b51dcc6e5b40
.dword 0x3fb28a1e22f9c158
.dword 0xbfd0251bd859fde7
.dword 0x3f92b51dcc6e5b40
.dword 0x3fb755865d71ab38
.dword 0xc00687f4ff5d668d
.dword 0x3fd06defd56e87d2
.dword 0x3fb755865d71ab38
.dword 0xc00687f4ff5d668d
.dword 0x3fd06defd56e87d2
.dword 0x3fb755865d71ab38
.dword 0xc00687f4ff5d668d
.dword 0x3fd06defd56e87d2
.dword 0x3fb755865d71ab38
.dword 0xc00687f4ff5d668d
.dword 0x3fd06defd56e87d2
.dword 0x3fb755865d71ab38
.dword 0xc00687f4ff5d668d
.dword 0x3fd06defd56e87d2
.dword 0x3fefc93c0ed77e17
.dword 0xbfd8ec7f5176ca3f
.dword 0x3fd8c1d79da0cdb2
.dword 0x3fefc93c0ed77e17
.dword 0xbfd8ec7f5176ca3f
.dword 0x3fd8c1d79da0cdb2
.dword 0x3fefc93c0ed77e17
.dword 0xbfd8ec7f5176ca3f
.dword 0x3fd8c1d79da0cdb2
.dword 0x3fefc93c0ed77e17
.dword 0xbfd8ec7f5176ca3f
.dword 0x3fd8c1d79da0cdb2
.dword 0x3fefc93c0ed77e17
.dword 0xbfd8ec7f5176ca3f
.dword 0x3fd8c1d79da0cdb2
.dword 0x3fd0631b23d77622
.dword 0xbff60a92ced6bbed
.dword 0x3fd693199e6e3b98
.dword 0x3fd0631b23d77622
.dword 0xbff60a92ced6bbed
.dword 0x3fd693199e6e3b98
.dword 0x3fd0631b23d77622
.dword 0xbff60a92ced6bbed
.dword 0x3fd693199e6e3b98
.dword 0x3fd0631b23d77622
.dword 0xbff60a92ced6bbed
.dword 0x3fd693199e6e3b98
.dword 0x3fd0631b23d77622
.dword 0xbff60a92ced6bbed
.dword 0x3fd693199e6e3b98
.dword 0x3fe8a87936b41cce
.dword 0xbfe3b1ebcd6ca027
.dword 0x3fde5a4314ed5738
.dword 0x3fe8a87936b41cce
.dword 0xbfe3b1ebcd6ca027
.dword 0x3fde5a4314ed5738
.dword 0x3fe8a87936b41cce
.dword 0xbfe3b1ebcd6ca027
.dword 0x3fde5a4314ed5738
.dword 0x3fe8a87936b41cce
.dword 0xbfe3b1ebcd6ca027
.dword 0x3fde5a4314ed5738
.dword 0x3fe8a87936b41cce
.dword 0xbfe3b1ebcd6ca027
.dword 0x3fde5a4314ed5738
.dword 0x3fd2de7b6372bde6
.dword 0xc005b06ad5e5829b
.dword 0x3fe9940f3dfe6f27
.dword 0x3fd2de7b6372bde6
.dword 0xc005b06ad5e5829b
.dword 0x3fe9940f3dfe6f27
.dword 0x3fd2de7b6372bde6
.dword 0xc005b06ad5e5829b
.dword 0x3fe9940f3dfe6f27
.dword 0x3fd2de7b6372bde6
.dword 0xc005b06ad5e5829b
.dword 0x3fe9940f3dfe6f27
.dword 0x3fd2de7b6372bde6
.dword 0xc005b06ad5e5829b
.dword 0x3fe9940f3dfe6f27
.dword 0x3fcf477a2665924c
.dword 0xc00048be47e9496f
.dword 0x3fdfd5afc97221d0
.dword 0x3fcf477a2665924c
.dword 0xc00048be47e9496f
.dword 0x3fdfd5afc97221d0
.dword 0x3fcf477a2665924c
.dword 0xc00048be47e9496f
.dword 0x3fdfd5afc97221d0
.dword 0x3fcf477a2665924c
.dword 0xc00048be47e9496f
.dword 0x3fdfd5afc97221d0
.dword 0x3fcf477a2665924c
.dword 0xc00048be47e9496f
.dword 0x3fdfd5afc97221d0
.dword 0x3fed0364e415dbbd
.dword 0xbfa231155b99e0c7
.dword 0x3fa07e695010edb0
.dword 0x3fed0364e415dbbd
.dword 0xbfa231155b99e0c7
.dword 0x3fa07e695010edb0
.dword 0x3fed0364e415dbbd
.dword 0xbfa231155b99e0c7
.dword 0x3fa07e695010edb0
.dword 0x3fed0364e415dbbd
.dword 0xbfa231155b99e0c7
.dword 0x3fa07e695010edb0
.dword 0x3fed0364e415dbbd
.dword 0xbfa231155b99e0c7
.dword 0x3fa07e695010edb0
.dword 0x3fe4594ee4aed52c
.dword 0xbfec8fd7b84cfe31
.dword 0x3fe2299d4de373a8
.dword 0x3fe4594ee4aed52c
.dword 0xbfec8fd7b84cfe31
.dword 0x3fe2299d4de373a8
.dword 0x3fe4594ee4aed52c
.dword 0xbfec8fd7b84cfe31
.dword 0x3fe2299d4de373a8
.dword 0x3fe4594ee4aed52c
.dword 0xbfec8fd7b84cfe31
.dword 0x3fe2299d4de373a8
.dword 0x3fe4594ee4aed52c
.dword 0xbfec8fd7b84cfe31
.dword 0x3fe2299d4de373a8
.dword 0x3fd8dce228bf6098
.dword 0xc00420925172d1c4
.dword 0x3fef46b7d5611001
.dword 0x3fd8dce228bf6098
.dword 0xc00420925172d1c4
.dword 0x3fef46b7d5611001
.dword 0x3fd8dce228bf6098
.dword 0xc00420925172d1c4
.dword 0x3fef46b7d5611001
.dword 0x3fd8dce228bf6098
.dword 0xc00420925172d1c4
.dword 0x3fef46b7d5611001
.dword 0x3fd8dce228bf6098
.dword 0xc00420925172d1c4
.dword 0x3fef46b7d5611001
.dword 0x3fd1974a2ff69374
.dword 0xbff0faa72c89cbbf
.dword 0x3fd2aadde331e042
.dword 0x3fd1974a2ff69374
.dword 0xbff0faa72c89cbbf
.dword 0x3fd2aadde331e042
.dword 0x3fd1974a2ff69374
.dword 0xbff0faa72c89cbbf
.dword 0x3fd2aadde331e042
.dword 0x3fd1974a2ff69374
.dword 0xbff0faa72c89cbbf
.dword 0x3fd2aadde331e042
.dword 0x3fd1974a2ff69374
.dword 0xbff0faa72c89cbbf
.dword 0x3fd2aadde331e042
.dword 0x3fe1b88deb8dee5a
.dword 0xbff9c4494a88a2b6
.dword 0x3fec89c3b727b71a
.dword 0x3fe1b88deb8dee5a
.dword 0xbff9c4494a88a2b6
.dword 0x3fec89c3b727b71a
.dword 0x3fe1b88deb8dee5a
.dword 0xbff9c4494a88a2b6
.dword 0x3fec89c3b727b71a
.dword 0x3fe1b88deb8dee5a
.dword 0xbff9c4494a88a2b6
.dword 0x3fec89c3b727b71a
.dword 0x3fe1b88deb8dee5a
.dword 0xbff9c4494a88a2b6
.dword 0x3fec89c3b727b71a
.dword 0x3fe8c88b03cbda00
.dword 0xbff09426c2dc44be
.dword 0x3fe9ae0613cde624
.dword 0x3fe8c88b03cbda00
.dword 0xbff09426c2dc44be
.dword 0x3fe9ae0613cde624
.dword 0x3fe8c88b03cbda00
.dword 0xbff09426c2dc44be
.dword 0x3fe9ae0613cde624
.dword 0x3fe8c88b03cbda00
.dword 0xbff09426c2dc44be
.dword 0x3fe9ae0613cde624
.dword 0x3fe8c88b03cbda00
.dword 0xbff09426c2dc44be
.dword 0x3fe9ae0613cde624
.dword 0x3fe3666044bbf18c
.dword 0xbff0de9625e45378
.dword 0x3fe47442ca2dbc55
.dword 0x3fe3666044bbf18c
.dword 0xbff0de9625e45378
.dword 0x3fe47442ca2dbc55
.dword 0x3fe3666044bbf18c
.dword 0xbff0de9625e45378
.dword 0x3fe47442ca2dbc55
.dword 0x3fe3666044bbf18c
.dword 0xbff0de9625e45378
.dword 0x3fe47442ca2dbc55
.dword 0x3fe3666044bbf18c
.dword 0xbff0de9625e45378
.dword 0x3fe47442ca2dbc55
.dword 0x3fd2356bf0926058
.dword 0xbffdbb8969deac58
.dword 0x3fe0eb2031be9b81
.dword 0x3fd2356bf0926058
.dword 0xbffdbb8969deac58
.dword 0x3fe0eb2031be9b81
.dword 0x3fd2356bf0926058
.dword 0xbffdbb8969deac58
.dword 0x3fe0eb2031be9b81
.dword 0x3fd2356bf0926058
.dword 0xbffdbb8969deac58
.dword 0x3fe0eb2031be9b81
.dword 0x3fd2356bf0926058
.dword 0xbffdbb8969deac58
.dword 0x3fe0eb2031be9b81
.dword 0x3fe1efc001f12b78
.dword 0xbfdf56faba20ba44
.dword 0x3fd19102df46cda0
.dword 0x3fe1efc001f12b78
.dword 0xbfdf56faba20ba44
.dword 0x3fd19102df46cda0
.dword 0x3fe1efc001f12b78
.dword 0xbfdf56faba20ba44
.dword 0x3fd19102df46cda0
.dword 0x3fe1efc001f12b78
.dword 0xbfdf56faba20ba44
.dword 0x3fd19102df46cda0
.dword 0x3fe1efc001f12b78
.dword 0xbfdf56faba20ba44
.dword 0x3fd19102df46cda0
.dword 0x3fe18391f56888fb
.dword 0xbff9898418295216
.dword 0x3febf41b391f63ac
.dword 0x3fe18391f56888fb
.dword 0xbff9898418295216
.dword 0x3febf41b391f63ac
.dword 0x3fe18391f56888fb
.dword 0xbff9898418295216
.dword 0x3febf41b391f63ac
.dword 0x3fe18391f56888fb
.dword 0xbff9898418295216
.dword 0x3febf41b391f63ac
.dword 0x3fe18391f56888fb
.dword 0xbff9898418295216
.dword 0x3febf41b391f63ac
.dword 0x3fec18654790efe2
.dword 0xbfde8fe6cc1bb109
.dword 0x3fdad5369a3b78a2
.dword 0x3fec18654790efe2
.dword 0xbfde8fe6cc1bb109
.dword 0x3fdad5369a3b78a2
.dword 0x3fec18654790efe2
.dword 0xbfde8fe6cc1bb109
.dword 0x3fdad5369a3b78a2
.dword 0x3fec18654790efe2
.dword 0xbfde8fe6cc1bb109
.dword 0x3fdad5369a3b78a2
.dword 0x3fec18654790efe2
.dword 0xbfde8fe6cc1bb109
.dword 0x3fdad5369a3b78a2
.dword 0x3fe0dba560d6d311
.dword 0xbff9adaaafd7ed93
.dword 0x3feb0e2d2a79c421
.dword 0x3fe0dba560d6d311
.dword 0xbff9adaaafd7ed93
.dword 0x3feb0e2d2a79c421
.dword 0x3fe0dba560d6d311
.dword 0xbff9adaaafd7ed93
.dword 0x3feb0e2d2a79c421
.dword 0x3fe0dba560d6d311
.dword 0xbff9adaaafd7ed93
.dword 0x3feb0e2d2a79c421
.dword 0x3fe0dba560d6d311
.dword 0xbff9adaaafd7ed93
.dword 0x3feb0e2d2a79c421
.dword 0x3fd94118ee35484c
.dword 0xbff46311f37dd73e
.dword 0x3fe016df24c1260c
.dword 0x3fd94118ee35484c
.dword 0xbff46311f37dd73e
.dword 0x3fe016df24c1260c
.dword 0x3fd94118ee35484c
.dword 0xbff46311f37dd73e
.dword 0x3fe016df24c1260c
.dword 0x3fd94118ee35484c
.dword 0xbff46311f37dd73e
.dword 0x3fe016df24c1260c
.dword 0x3fd94118ee35484c
.dword 0xbff46311f37dd73e
.dword 0x3fe016df24c1260c
.dword 0x3fe1df095384255b
.dword 0xbffa42e634b38e3d
.dword 0x3fed55284f32bac1
.dword 0x3fe1df095384255b
.dword 0xbffa42e634b38e3d
.dword 0x3fed55284f32bac1
.dword 0x3fe1df095384255b
.dword 0xbffa42e634b38e3d
.dword 0x3fed55284f32bac1
.dword 0x3fe1df095384255b
.dword 0xbffa42e634b38e3d
.dword 0x3fed55284f32bac1
.dword 0x3fe1df095384255b
.dword 0xbffa42e634b38e3d
.dword 0x3fed55284f32bac1
.dword 0x3fea4f7a7ea66086
.dword 0xbfa2c364d8eb2613
.dword 0x3f9edab848d3f380
.dword 0x3fea4f7a7ea66086
.dword 0xbfa2c364d8eb2613
.dword 0x3f9edab848d3f380
.dword 0x3fea4f7a7ea66086
.dword 0xbfa2c364d8eb2613
.dword 0x3f9edab848d3f380
.dword 0x3fea4f7a7ea66086
.dword 0xbfa2c364d8eb2613
.dword 0x3f9edab848d3f380
.dword 0x3fea4f7a7ea66086
.dword 0xbfa2c364d8eb2613
.dword 0x3f9edab848d3f380
.dword 0x3f8389c62efde540
.dword 0xc046030a08cc03f7
.dword 0x3fdae126969fccc0
.dword 0x3f8389c62efde540
.dword 0xc046030a08cc03f7
.dword 0x3fdae126969fccc0
.dword 0x3f8389c62efde540
.dword 0xc046030a08cc03f7
.dword 0x3fdae126969fccc0
.dword 0x3f8389c62efde540
.dword 0xc046030a08cc03f7
.dword 0x3fdae126969fccc0
.dword 0x3f8389c62efde540
.dword 0xc046030a08cc03f7
.dword 0x3fdae126969fccc0
.dword 0x3fa1d62dc863e290
.dword 0xc01ba0d15e845be3
.dword 0x3fceccb473105928
.dword 0x3fa1d62dc863e290
.dword 0xc01ba0d15e845be3
.dword 0x3fceccb473105928
.dword 0x3fa1d62dc863e290
.dword 0xc01ba0d15e845be3
.dword 0x3fceccb473105928
.dword 0x3fa1d62dc863e290
.dword 0xc01ba0d15e845be3
.dword 0x3fceccb473105928
.dword 0x3fa1d62dc863e290
.dword 0xc01ba0d15e845be3
.dword 0x3fceccb473105928
.dword 0x3fbff441cc3f6770
.dword 0xc01efc0a0e84c794
.dword 0x3feef0ab4077e7bf
.dword 0x3fbff441cc3f6770
.dword 0xc01efc0a0e84c794
.dword 0x3feef0ab4077e7bf
.dword 0x3fbff441cc3f6770
.dword 0xc01efc0a0e84c794
.dword 0x3feef0ab4077e7bf
.dword 0x3fbff441cc3f6770
.dword 0xc01efc0a0e84c794
.dword 0x3feef0ab4077e7bf
.dword 0x3fbff441cc3f6770
.dword 0xc01efc0a0e84c794
.dword 0x3feef0ab4077e7bf
.dword 0x3fc5087d1804040c
.dword 0xc0133a850e9d4cdc
.dword 0x3fe947023bc1e0c8
.dword 0x3fc5087d1804040c
.dword 0xc0133a850e9d4cdc
.dword 0x3fe947023bc1e0c8
.dword 0x3fc5087d1804040c
.dword 0xc0133a850e9d4cdc
.dword 0x3fe947023bc1e0c8
.dword 0x3fc5087d1804040c
.dword 0xc0133a850e9d4cdc
.dword 0x3fe947023bc1e0c8
.dword 0x3fc5087d1804040c
.dword 0xc0133a850e9d4cdc
.dword 0x3fe947023bc1e0c8
.dword 0x3fa1f07ce892bbc0
.dword 0xc03c74e4339e0e03
.dword 0x3fefe7e9fd6aa739
.dword 0x3fa1f07ce892bbc0
.dword 0xc03c74e4339e0e03
.dword 0x3fefe7e9fd6aa739
.dword 0x3fa1f07ce892bbc0
.dword 0xc03c74e4339e0e03
.dword 0x3fefe7e9fd6aa739
.dword 0x3fa1f07ce892bbc0
.dword 0xc03c74e4339e0e03
.dword 0x3fefe7e9fd6aa739
.dword 0x3fa1f07ce892bbc0
.dword 0xc03c74e4339e0e03
.dword 0x3fefe7e9fd6aa739
.dword 0x3fd0665e459ace6c
.dword 0xc0043f6c57541d22
.dword 0x3fe4c0f7f6b2c14f
.dword 0x3fd0665e459ace6c
.dword 0xc0043f6c57541d22
.dword 0x3fe4c0f7f6b2c14f
.dword 0x3fd0665e459ace6c
.dword 0xc0043f6c57541d22
.dword 0x3fe4c0f7f6b2c14f
.dword 0x3fd0665e459ace6c
.dword 0xc0043f6c57541d22
.dword 0x3fe4c0f7f6b2c14f
.dword 0x3fd0665e459ace6c
.dword 0xc0043f6c57541d22
.dword 0x3fe4c0f7f6b2c14f
.dword 0x3fe3a329115dfee9
.dword 0xbfe63b2cd64e6469
.dword 0x3fdb48f92708b4cc
.dword 0x3fe3a329115dfee9
.dword 0xbfe63b2cd64e6469
.dword 0x3fdb48f92708b4cc
.dword 0x3fe3a329115dfee9
.dword 0xbfe63b2cd64e6469
.dword 0x3fdb48f92708b4cc
.dword 0x3fe3a329115dfee9
.dword 0xbfe63b2cd64e6469
.dword 0x3fdb48f92708b4cc
.dword 0x3fe3a329115dfee9
.dword 0xbfe63b2cd64e6469
.dword 0x3fdb48f92708b4cc
.dword 0x3fef7535a8597b7b
.dword 0xbfebfb47efb7af95
.dword 0x3feb81eb5aa3073f
.dword 0x3fef7535a8597b7b
.dword 0xbfebfb47efb7af95
.dword 0x3feb81eb5aa3073f
.dword 0x3fef7535a8597b7b
.dword 0xbfebfb47efb7af95
.dword 0x3feb81eb5aa3073f
.dword 0x3fef7535a8597b7b
.dword 0xbfebfb47efb7af95
.dword 0x3feb81eb5aa3073f
.dword 0x3fef7535a8597b7b
.dword 0xbfebfb47efb7af95
.dword 0x3feb81eb5aa3073f
.dword 0x3f94681eb2a19a80
.dword 0xc0478280a00296da
.dword 0x3fedfc1e273dc491
.dword 0x3f94681eb2a19a80
.dword 0xc0478280a00296da
.dword 0x3fedfc1e273dc491
.dword 0x3f94681eb2a19a80
.dword 0xc0478280a00296da
.dword 0x3fedfc1e273dc491
.dword 0x3f94681eb2a19a80
.dword 0xc0478280a00296da
.dword 0x3fedfc1e273dc491
.dword 0x3f94681eb2a19a80
.dword 0xc0478280a00296da
.dword 0x3fedfc1e273dc491
.dword 0x3fdfaf5634181602
.dword 0xbfe2dcc4f14c5c21
.dword 0x3fd2ad38eecfcdea
.dword 0x3fdfaf5634181602
.dword 0xbfe2dcc4f14c5c21
.dword 0x3fd2ad38eecfcdea
.dword 0x3fdfaf5634181602
.dword 0xbfe2dcc4f14c5c21
.dword 0x3fd2ad38eecfcdea
.dword 0x3fdfaf5634181602
.dword 0xbfe2dcc4f14c5c21
.dword 0x3fd2ad38eecfcdea
.dword 0x3fdfaf5634181602
.dword 0xbfe2dcc4f14c5c21
.dword 0x3fd2ad38eecfcdea
.dword 0x3fe479899362a7e7
.dword 0xbfd33c254272cef9
.dword 0x3fc89d4ad104407c
.dword 0x3fe479899362a7e7
.dword 0xbfd33c254272cef9
.dword 0x3fc89d4ad104407c
.dword 0x3fe479899362a7e7
.dword 0xbfd33c254272cef9
.dword 0x3fc89d4ad104407c
.dword 0x3fe479899362a7e7
.dword 0xbfd33c254272cef9
.dword 0x3fc89d4ad104407c
.dword 0x3fe479899362a7e7
.dword 0xbfd33c254272cef9
.dword 0x3fc89d4ad104407c
.dword 0x3fec975c38f16094
.dword 0xbfe1284e46fb8dfc
.dword 0x3fdea8d843c81f50
.dword 0x3fec975c38f16094
.dword 0xbfe1284e46fb8dfc
.dword 0x3fdea8d843c81f50
.dword 0x3fec975c38f16094
.dword 0xbfe1284e46fb8dfc
.dword 0x3fdea8d843c81f50
.dword 0x3fec975c38f16094
.dword 0xbfe1284e46fb8dfc
.dword 0x3fdea8d843c81f50
.dword 0x3fec975c38f16094
.dword 0xbfe1284e46fb8dfc
.dword 0x3fdea8d843c81f50
.dword 0x3fecf4d843dd266d
.dword 0xbff02c9cdcc155dc
.dword 0x3fed45957958debc
.dword 0x3fecf4d843dd266d
.dword 0xbff02c9cdcc155dc
.dword 0x3fed45957958debc
.dword 0x3fecf4d843dd266d
.dword 0xbff02c9cdcc155dc
.dword 0x3fed45957958debc
.dword 0x3fecf4d843dd266d
.dword 0xbff02c9cdcc155dc
.dword 0x3fed45957958debc
.dword 0x3fecf4d843dd266d
.dword 0xbff02c9cdcc155dc
.dword 0x3fed45957958debc
.dword 0x3fda55df8770b0b4
.dword 0xbffba7ddd4f244fa
.dword 0x3fe6c29b5121f3a4
.dword 0x3fda55df8770b0b4
.dword 0xbffba7ddd4f244fa
.dword 0x3fe6c29b5121f3a4
.dword 0x3fda55df8770b0b4
.dword 0xbffba7ddd4f244fa
.dword 0x3fe6c29b5121f3a4
.dword 0x3fda55df8770b0b4
.dword 0xbffba7ddd4f244fa
.dword 0x3fe6c29b5121f3a4
.dword 0x3fda55df8770b0b4
.dword 0xbffba7ddd4f244fa
.dword 0x3fe6c29b5121f3a4
.dword 0x3fe1b9ee4a5f12c6
.dword 0xbff0cfb7890db91a
.dword 0x3fe2a00f1badefe9
.dword 0x3fe1b9ee4a5f12c6
.dword 0xbff0cfb7890db91a
.dword 0x3fe2a00f1badefe9
.dword 0x3fe1b9ee4a5f12c6
.dword 0xbff0cfb7890db91a
.dword 0x3fe2a00f1badefe9
.dword 0x3fe1b9ee4a5f12c6
.dword 0xbff0cfb7890db91a
.dword 0x3fe2a00f1badefe9
.dword 0x3fe1b9ee4a5f12c6
.dword 0xbff0cfb7890db91a
.dword 0x3fe2a00f1badefe9
.dword 0x3fe895c17f719feb
.dword 0xbfe891f4f93d40d5
.dword 0x3fe2e073e9be777f
.dword 0x3fe895c17f719feb
.dword 0xbfe891f4f93d40d5
.dword 0x3fe2e073e9be777f
.dword 0x3fe895c17f719feb
.dword 0xbfe891f4f93d40d5
.dword 0x3fe2e073e9be777f
.dword 0x3fe895c17f719feb
.dword 0xbfe891f4f93d40d5
.dword 0x3fe2e073e9be777f
.dword 0x3fe895c17f719feb
.dword 0xbfe891f4f93d40d5
.dword 0x3fe2e073e9be777f
.dword 0x3fea8e12ddb93718
.dword 0xbfe5c38abfdca6f9
.dword 0x3fe20f81486124eb
.dword 0x3fea8e12ddb93718
.dword 0xbfe5c38abfdca6f9
.dword 0x3fe20f81486124eb
.dword 0x3fea8e12ddb93718
.dword 0xbfe5c38abfdca6f9
.dword 0x3fe20f81486124eb
.dword 0x3fea8e12ddb93718
.dword 0xbfe5c38abfdca6f9
.dword 0x3fe20f81486124eb
.dword 0x3fea8e12ddb93718
.dword 0xbfe5c38abfdca6f9
.dword 0x3fe20f81486124eb
.dword 0x3fce2b7a49e9aa68
.dword 0xc00656ecaa477a42
.dword 0x3fe50fd80ca787a1
.dword 0x3fce2b7a49e9aa68
.dword 0xc00656ecaa477a42
.dword 0x3fe50fd80ca787a1
.dword 0x3fce2b7a49e9aa68
.dword 0xc00656ecaa477a42
.dword 0x3fe50fd80ca787a1
.dword 0x3fce2b7a49e9aa68
.dword 0xc00656ecaa477a42
.dword 0x3fe50fd80ca787a1
.dword 0x3fce2b7a49e9aa68
.dword 0xc00656ecaa477a42
.dword 0x3fe50fd80ca787a1
.dword 0x3fe666088b88b8a8
.dword 0xbff68e74ac6c143a
.dword 0x3fef93b8a0d077d4
.dword 0x3fe666088b88b8a8
.dword 0xbff68e74ac6c143a
.dword 0x3fef93b8a0d077d4
.dword 0x3fe666088b88b8a8
.dword 0xbff68e74ac6c143a
.dword 0x3fef93b8a0d077d4
.dword 0x3fe666088b88b8a8
.dword 0xbff68e74ac6c143a
.dword 0x3fef93b8a0d077d4
.dword 0x3fe666088b88b8a8
.dword 0xbff68e74ac6c143a
.dword 0x3fef93b8a0d077d4
.dword 0x3fe98ac9681b927d
.dword 0xbfd2b96e99b67800
.dword 0x3fcde427dd6ddf90
.dword 0x3fe98ac9681b927d
.dword 0xbfd2b96e99b67800
.dword 0x3fcde427dd6ddf90
.dword 0x3fe98ac9681b927d
.dword 0xbfd2b96e99b67800
.dword 0x3fcde427dd6ddf90
.dword 0x3fe98ac9681b927d
.dword 0xbfd2b96e99b67800
.dword 0x3fcde427dd6ddf90
.dword 0x3fe98ac9681b927d
.dword 0xbfd2b96e99b67800
.dword 0x3fcde427dd6ddf90
.dword 0x3fd58e99712ee18c
.dword 0xbfb31e4020d0b428
.dword 0x3f99c217fcb80be0
.dword 0x3fd58e99712ee18c
.dword 0xbfb31e4020d0b428
.dword 0x3f99c217fcb80be0
.dword 0x3fd58e99712ee18c
.dword 0xbfb31e4020d0b428
.dword 0x3f99c217fcb80be0
.dword 0x3fd58e99712ee18c
.dword 0xbfb31e4020d0b428
.dword 0x3f99c217fcb80be0
.dword 0x3fd58e99712ee18c
.dword 0xbfb31e4020d0b428
.dword 0x3f99c217fcb80be0
.dword 0x3fe351ce4788f28f
.dword 0xbff618f9abc0ebd2
.dword 0x3feaaea3d045133b
.dword 0x3fe351ce4788f28f
.dword 0xbff618f9abc0ebd2
.dword 0x3feaaea3d045133b
.dword 0x3fe351ce4788f28f
.dword 0xbff618f9abc0ebd2
.dword 0x3feaaea3d045133b
.dword 0x3fe351ce4788f28f
.dword 0xbff618f9abc0ebd2
.dword 0x3feaaea3d045133b
.dword 0x3fe351ce4788f28f
.dword 0xbff618f9abc0ebd2
.dword 0x3feaaea3d045133b
.dword 0x3fbbc8c592a89840
.dword 0xc01e657daf172416
.dword 0x3fea6458095ec7dc
.dword 0x3fbbc8c592a89840
.dword 0xc01e657daf172416
.dword 0x3fea6458095ec7dc
.dword 0x3fbbc8c592a89840
.dword 0xc01e657daf172416
.dword 0x3fea6458095ec7dc
.dword 0x3fbbc8c592a89840
.dword 0xc01e657daf172416
.dword 0x3fea6458095ec7dc
.dword 0x3fbbc8c592a89840
.dword 0xc01e657daf172416
.dword 0x3fea6458095ec7dc
.dword 0x3fe3f038c6ce7c85
.dword 0xbfd104ba2f1cd45b
.dword 0x3fc5352064b6b2d8
.dword 0x3fe3f038c6ce7c85
.dword 0xbfd104ba2f1cd45b
.dword 0x3fc5352064b6b2d8
.dword 0x3fe3f038c6ce7c85
.dword 0xbfd104ba2f1cd45b
.dword 0x3fc5352064b6b2d8
.dword 0x3fe3f038c6ce7c85
.dword 0xbfd104ba2f1cd45b
.dword 0x3fc5352064b6b2d8
.dword 0x3fe3f038c6ce7c85
.dword 0xbfd104ba2f1cd45b
.dword 0x3fc5352064b6b2d8
.dword 0x3fe7760723dd89eb
.dword 0xbfe92aab1f3477f5
.dword 0x3fe2737df2fb1cd5
.dword 0x3fe7760723dd89eb
.dword 0xbfe92aab1f3477f5
.dword 0x3fe2737df2fb1cd5
.dword 0x3fe7760723dd89eb
.dword 0xbfe92aab1f3477f5
.dword 0x3fe2737df2fb1cd5
.dword 0x3fe7760723dd89eb
.dword 0xbfe92aab1f3477f5
.dword 0x3fe2737df2fb1cd5
.dword 0x3fe7760723dd89eb
.dword 0xbfe92aab1f3477f5
.dword 0x3fe2737df2fb1cd5
.dword 0x3fef9e61f6d13245
.dword 0xbfe5452273002d32
.dword 0x3fe5043fd71eef07
.dword 0x3fef9e61f6d13245
.dword 0xbfe5452273002d32
.dword 0x3fe5043fd71eef07
.dword 0x3fef9e61f6d13245
.dword 0xbfe5452273002d32
.dword 0x3fe5043fd71eef07
.dword 0x3fef9e61f6d13245
.dword 0xbfe5452273002d32
.dword 0x3fe5043fd71eef07
.dword 0x3fef9e61f6d13245
.dword 0xbfe5452273002d32
.dword 0x3fe5043fd71eef07
.dword 0x3fe8f620de9f8966
.dword 0xbfef04acca1ba617
.dword 0x3fe83215645e4e5d
.dword 0x3fe8f620de9f8966
.dword 0xbfef04acca1ba617
.dword 0x3fe83215645e4e5d
.dword 0x3fe8f620de9f8966
.dword 0xbfef04acca1ba617
.dword 0x3fe83215645e4e5d
.dword 0x3fe8f620de9f8966
.dword 0xbfef04acca1ba617
.dword 0x3fe83215645e4e5d
.dword 0x3fe8f620de9f8966
.dword 0xbfef04acca1ba617
.dword 0x3fe83215645e4e5d
.dword 0x3fdf8679e0b20b04
.dword 0xbfe367ade24770d3
.dword 0x3fd31dfc83a3f8a8
.dword 0x3fdf8679e0b20b04
.dword 0xbfe367ade24770d3
.dword 0x3fd31dfc83a3f8a8
.dword 0x3fdf8679e0b20b04
.dword 0xbfe367ade24770d3
.dword 0x3fd31dfc83a3f8a8
.dword 0x3fdf8679e0b20b04
.dword 0xbfe367ade24770d3
.dword 0x3fd31dfc83a3f8a8
.dword 0x3fdf8679e0b20b04
.dword 0xbfe367ade24770d3
.dword 0x3fd31dfc83a3f8a8
.dword 0x3fedb6eba8c47ba8
.dword 0xbfbaae5ced19ffb3
.dword 0x3fb8c6886495bbc0
.dword 0x3fedb6eba8c47ba8
.dword 0xbfbaae5ced19ffb3
.dword 0x3fb8c6886495bbc0
.dword 0x3fedb6eba8c47ba8
.dword 0xbfbaae5ced19ffb3
.dword 0x3fb8c6886495bbc0
.dword 0x3fedb6eba8c47ba8
.dword 0xbfbaae5ced19ffb3
.dword 0x3fb8c6886495bbc0
.dword 0x3fedb6eba8c47ba8
.dword 0xbfbaae5ced19ffb3
.dword 0x3fb8c6886495bbc0
.dword 0x3fde2972c5b9a45c
.dword 0xbff0a484fde94646
.dword 0x3fdf5f9652be5954
.dword 0x3fde2972c5b9a45c
.dword 0xbff0a484fde94646
.dword 0x3fdf5f9652be5954
.dword 0x3fde2972c5b9a45c
.dword 0xbff0a484fde94646
.dword 0x3fdf5f9652be5954
.dword 0x3fde2972c5b9a45c
.dword 0xbff0a484fde94646
.dword 0x3fdf5f9652be5954
.dword 0x3fde2972c5b9a45c
.dword 0xbff0a484fde94646
.dword 0x3fdf5f9652be5954
.dword 0x3fe9acddc6c3cc37
.dword 0xbff0f26d6611e7c2
.dword 0x3feb31e3ee93b923
.dword 0x3fe9acddc6c3cc37
.dword 0xbff0f26d6611e7c2
.dword 0x3feb31e3ee93b923
.dword 0x3fe9acddc6c3cc37
.dword 0xbff0f26d6611e7c2
.dword 0x3feb31e3ee93b923
.dword 0x3fe9acddc6c3cc37
.dword 0xbff0f26d6611e7c2
.dword 0x3feb31e3ee93b923
.dword 0x3fe9acddc6c3cc37
.dword 0xbff0f26d6611e7c2
.dword 0x3feb31e3ee93b923
.dword 0x3fc4086c2815fcdc
.dword 0xc0095f72cb036201
.dword 0x3fdfc4aabb0213c8
.dword 0x3fc4086c2815fcdc
.dword 0xc0095f72cb036201
.dword 0x3fdfc4aabb0213c8
.dword 0x3fc4086c2815fcdc
.dword 0xc0095f72cb036201
.dword 0x3fdfc4aabb0213c8
.dword 0x3fc4086c2815fcdc
.dword 0xc0095f72cb036201
.dword 0x3fdfc4aabb0213c8
.dword 0x3fc4086c2815fcdc
.dword 0xc0095f72cb036201
.dword 0x3fdfc4aabb0213c8
.dword 0x3fd3100cad24cd32
.dword 0xbfc57cb34140ac4f
.dword 0x3fa999a296ca3c90
.dword 0x3fd3100cad24cd32
.dword 0xbfc57cb34140ac4f
.dword 0x3fa999a296ca3c90
.dword 0x3fd3100cad24cd32
.dword 0xbfc57cb34140ac4f
.dword 0x3fa999a296ca3c90
.dword 0x3fd3100cad24cd32
.dword 0xbfc57cb34140ac4f
.dword 0x3fa999a296ca3c90
.dword 0x3fd3100cad24cd32
.dword 0xbfc57cb34140ac4f
.dword 0x3fa999a296ca3c90
.dword 0x3fece05361df6dba
.dword 0xbfd5f92e403ec858
.dword 0x3fd3d411fd7d5d70
.dword 0x3fece05361df6dba
.dword 0xbfd5f92e403ec858
.dword 0x3fd3d411fd7d5d70
.dword 0x3fece05361df6dba
.dword 0xbfd5f92e403ec858
.dword 0x3fd3d411fd7d5d70
.dword 0x3fece05361df6dba
.dword 0xbfd5f92e403ec858
.dword 0x3fd3d411fd7d5d70
.dword 0x3fece05361df6dba
.dword 0xbfd5f92e403ec858
.dword 0x3fd3d411fd7d5d70
.dword 0x3febae475f5de6ac
.dword 0xbfd1705df556d057
.dword 0x3fce2b92566106cc
.dword 0x3febae475f5de6ac
.dword 0xbfd1705df556d057
.dword 0x3fce2b92566106cc
.dword 0x3febae475f5de6ac
.dword 0xbfd1705df556d057
.dword 0x3fce2b92566106cc
.dword 0x3febae475f5de6ac
.dword 0xbfd1705df556d057
.dword 0x3fce2b92566106cc
.dword 0x3febae475f5de6ac
.dword 0xbfd1705df556d057
.dword 0x3fce2b92566106cc
.dword 0x3fe495f0b8947082
.dword 0xbfc8426dc63c6e57
.dword 0x3fbf3660d25d39b0
.dword 0x3fe495f0b8947082
.dword 0xbfc8426dc63c6e57
.dword 0x3fbf3660d25d39b0
.dword 0x3fe495f0b8947082
.dword 0xbfc8426dc63c6e57
.dword 0x3fbf3660d25d39b0
.dword 0x3fe495f0b8947082
.dword 0xbfc8426dc63c6e57
.dword 0x3fbf3660d25d39b0
.dword 0x3fe495f0b8947082
.dword 0xbfc8426dc63c6e57
.dword 0x3fbf3660d25d39b0
.dword 0x3fbe796d11c17038
.dword 0xc01800e6f7813112
.dword 0x3fe6dbedc1c54de4
.dword 0x3fbe796d11c17038
.dword 0xc01800e6f7813112
.dword 0x3fe6dbedc1c54de4
.dword 0x3fbe796d11c17038
.dword 0xc01800e6f7813112
.dword 0x3fe6dbedc1c54de4
.dword 0x3fbe796d11c17038
.dword 0xc01800e6f7813112
.dword 0x3fe6dbedc1c54de4
.dword 0x3fbe796d11c17038
.dword 0xc01800e6f7813112
.dword 0x3fe6dbedc1c54de4
.dword 0x3fdaf24a445992b2
.dword 0xbfe499e5420fb923
.dword 0x3fd15905eb5337bc
.dword 0x3fdaf24a445992b2
.dword 0xbfe499e5420fb923
.dword 0x3fd15905eb5337bc
.dword 0x3fdaf24a445992b2
.dword 0xbfe499e5420fb923
.dword 0x3fd15905eb5337bc
.dword 0x3fdaf24a445992b2
.dword 0xbfe499e5420fb923
.dword 0x3fd15905eb5337bc
.dword 0x3fdaf24a445992b2
.dword 0xbfe499e5420fb923
.dword 0x3fd15905eb5337bc
.dword 0x3fe9cbf2b3683c38
.dword 0xbfb12259cb82e431
.dword 0x3faba01408f0a3b0
.dword 0x3fe9cbf2b3683c38
.dword 0xbfb12259cb82e431
.dword 0x3faba01408f0a3b0
.dword 0x3fe9cbf2b3683c38
.dword 0xbfb12259cb82e431
.dword 0x3faba01408f0a3b0
.dword 0x3fe9cbf2b3683c38
.dword 0xbfb12259cb82e431
.dword 0x3faba01408f0a3b0
.dword 0x3fe9cbf2b3683c38
.dword 0xbfb12259cb82e431
.dword 0x3faba01408f0a3b0
.dword 0x3fab9f257d9a2d20
.dword 0xc022f4d1754ca447
.dword 0x3fe05cd76131562a
.dword 0x3fab9f257d9a2d20
.dword 0xc022f4d1754ca447
.dword 0x3fe05cd76131562a
.dword 0x3fab9f257d9a2d20
.dword 0xc022f4d1754ca447
.dword 0x3fe05cd76131562a
.dword 0x3fab9f257d9a2d20
.dword 0xc022f4d1754ca447
.dword 0x3fe05cd76131562a
.dword 0x3fab9f257d9a2d20
.dword 0xc022f4d1754ca447
.dword 0x3fe05cd76131562a
.dword 0x3feb739b0d92b8e8
.dword 0xbff1734c8bcb71ec
.dword 0x3fedf0a6fdd754bb
.dword 0x3feb739b0d92b8e8
.dword 0xbff1734c8bcb71ec
.dword 0x3fedf0a6fdd754bb
.dword 0x3feb739b0d92b8e8
.dword 0xbff1734c8bcb71ec
.dword 0x3fedf0a6fdd754bb
.dword 0x3feb739b0d92b8e8
.dword 0xbff1734c8bcb71ec
.dword 0x3fedf0a6fdd754bb
.dword 0x3feb739b0d92b8e8
.dword 0xbff1734c8bcb71ec
.dword 0x3fedf0a6fdd754bb
.dword 0x3fb93f7d9958bfe0
.dword 0xc010f8ce1bdb9ecf
.dword 0x3fdac81af1886968
.dword 0x3fb93f7d9958bfe0
.dword 0xc010f8ce1bdb9ecf
.dword 0x3fdac81af1886968
.dword 0x3fb93f7d9958bfe0
.dword 0xc010f8ce1bdb9ecf
.dword 0x3fdac81af1886968
.dword 0x3fb93f7d9958bfe0
.dword 0xc010f8ce1bdb9ecf
.dword 0x3fdac81af1886968
.dword 0x3fb93f7d9958bfe0
.dword 0xc010f8ce1bdb9ecf
.dword 0x3fdac81af1886968
.dword 0x3fe013d1fc62ed37
.dword 0xbfe64f5413e05736
.dword 0x3fd66af713dd9220
.dword 0x3fe013d1fc62ed37
.dword 0xbfe64f5413e05736
.dword 0x3fd66af713dd9220
.dword 0x3fe013d1fc62ed37
.dword 0xbfe64f5413e05736
.dword 0x3fd66af713dd9220
.dword 0x3fe013d1fc62ed37
.dword 0xbfe64f5413e05736
.dword 0x3fd66af713dd9220
.dword 0x3fe013d1fc62ed37
.dword 0xbfe64f5413e05736
.dword 0x3fd66af713dd9220
.dword 0x3fe52b82d70ff46b
.dword 0xbfdddd248ad56b3b
.dword 0x3fd3c1bb3f4fc272
.dword 0x3fe52b82d70ff46b
.dword 0xbfdddd248ad56b3b
.dword 0x3fd3c1bb3f4fc272
.dword 0x3fe52b82d70ff46b
.dword 0xbfdddd248ad56b3b
.dword 0x3fd3c1bb3f4fc272
.dword 0x3fe52b82d70ff46b
.dword 0xbfdddd248ad56b3b
.dword 0x3fd3c1bb3f4fc272
.dword 0x3fe52b82d70ff46b
.dword 0xbfdddd248ad56b3b
.dword 0x3fd3c1bb3f4fc272
.dword 0x3fe3edef7f91af83
.dword 0xbfe16d22dfd404f0
.dword 0x3fd5b4bed7891ada
.dword 0x3fe3edef7f91af83
.dword 0xbfe16d22dfd404f0
.dword 0x3fd5b4bed7891ada
.dword 0x3fe3edef7f91af83
.dword 0xbfe16d22dfd404f0
.dword 0x3fd5b4bed7891ada
.dword 0x3fe3edef7f91af83
.dword 0xbfe16d22dfd404f0
.dword 0x3fd5b4bed7891ada
.dword 0x3fe3edef7f91af83
.dword 0xbfe16d22dfd404f0
.dword 0x3fd5b4bed7891ada
.dword 0x3fedfb2d72745ba1
.dword 0xbfd9f23780a874d8
.dword 0x3fd84f2b095d1e34
.dword 0x3fedfb2d72745ba1
.dword 0xbfd9f23780a874d8
.dword 0x3fd84f2b095d1e34
.dword 0x3fedfb2d72745ba1
.dword 0xbfd9f23780a874d8
.dword 0x3fd84f2b095d1e34
.dword 0x3fedfb2d72745ba1
.dword 0xbfd9f23780a874d8
.dword 0x3fd84f2b095d1e34
.dword 0x3fedfb2d72745ba1
.dword 0xbfd9f23780a874d8
.dword 0x3fd84f2b095d1e34
.dword 0x3fe7bb8ab79c8032
.dword 0xbf87307ef9883d9c
.dword 0x3f8132c32f8e7400
.dword 0x3fe7bb8ab79c8032
.dword 0xbf87307ef9883d9c
.dword 0x3f8132c32f8e7400
.dword 0x3fe7bb8ab79c8032
.dword 0xbf87307ef9883d9c
.dword 0x3f8132c32f8e7400
.dword 0x3fe7bb8ab79c8032
.dword 0xbf87307ef9883d9c
.dword 0x3f8132c32f8e7400
.dword 0x3fe7bb8ab79c8032
.dword 0xbf87307ef9883d9c
.dword 0x3f8132c32f8e7400
.dword 0x3fe3de9d391892f3
.dword 0xbff6d6601390ef15
.dword 0x3fec5c50f5592071
.dword 0x3fe3de9d391892f3
.dword 0xbff6d6601390ef15
.dword 0x3fec5c50f5592071
.dword 0x3fe3de9d391892f3
.dword 0xbff6d6601390ef15
.dword 0x3fec5c50f5592071
.dword 0x3fe3de9d391892f3
.dword 0xbff6d6601390ef15
.dword 0x3fec5c50f5592071
.dword 0x3fe3de9d391892f3
.dword 0xbff6d6601390ef15
.dword 0x3fec5c50f5592071
.dword 0x3fe2f46aea1a4b11
.dword 0xbfc529cc0e984091
.dword 0x3fb9125062d7cab8
.dword 0x3fe2f46aea1a4b11
.dword 0xbfc529cc0e984091
.dword 0x3fb9125062d7cab8
.dword 0x3fe2f46aea1a4b11
.dword 0xbfc529cc0e984091
.dword 0x3fb9125062d7cab8
.dword 0x3fe2f46aea1a4b11
.dword 0xbfc529cc0e984091
.dword 0x3fb9125062d7cab8
.dword 0x3fe2f46aea1a4b11
.dword 0xbfc529cc0e984091
.dword 0x3fb9125062d7cab8
.dword 0x3fef5c3b313202a4
.dword 0xbfe7f12bccee2340
.dword 0x3fe776a415eb5682
.dword 0x3fef5c3b313202a4
.dword 0xbfe7f12bccee2340
.dword 0x3fe776a415eb5682
.dword 0x3fef5c3b313202a4
.dword 0xbfe7f12bccee2340
.dword 0x3fe776a415eb5682
.dword 0x3fef5c3b313202a4
.dword 0xbfe7f12bccee2340
.dword 0x3fe776a415eb5682
.dword 0x3fef5c3b313202a4
.dword 0xbfe7f12bccee2340
.dword 0x3fe776a415eb5682
.dword 0x3fed2247460f4215
.dword 0xbfeaeabf4d29e849
.dword 0x3fe88192bcf6c256
.dword 0x3fed2247460f4215
.dword 0xbfeaeabf4d29e849
.dword 0x3fe88192bcf6c256
.dword 0x3fed2247460f4215
.dword 0xbfeaeabf4d29e849
.dword 0x3fe88192bcf6c256
.dword 0x3fed2247460f4215
.dword 0xbfeaeabf4d29e849
.dword 0x3fe88192bcf6c256
.dword 0x3fed2247460f4215
.dword 0xbfeaeabf4d29e849
.dword 0x3fe88192bcf6c256
.dword 0x3fe9d93eb4691fe8
.dword 0xbfcadb14e6567f45
.dword 0x3fc5b17a998e9b78
.dword 0x3fe9d93eb4691fe8
.dword 0xbfcadb14e6567f45
.dword 0x3fc5b17a998e9b78
.dword 0x3fe9d93eb4691fe8
.dword 0xbfcadb14e6567f45
.dword 0x3fc5b17a998e9b78
.dword 0x3fe9d93eb4691fe8
.dword 0xbfcadb14e6567f45
.dword 0x3fc5b17a998e9b78
.dword 0x3fe9d93eb4691fe8
.dword 0xbfcadb14e6567f45
.dword 0x3fc5b17a998e9b78
.dword 0x3fe17ff06a70268a
.dword 0xbfed8d16c1c10c80
.dword 0x3fe0291a0db51ebe
.dword 0x3fe17ff06a70268a
.dword 0xbfed8d16c1c10c80
.dword 0x3fe0291a0db51ebe
.dword 0x3fe17ff06a70268a
.dword 0xbfed8d16c1c10c80
.dword 0x3fe0291a0db51ebe
.dword 0x3fe17ff06a70268a
.dword 0xbfed8d16c1c10c80
.dword 0x3fe0291a0db51ebe
.dword 0x3fe17ff06a70268a
.dword 0xbfed8d16c1c10c80
.dword 0x3fe0291a0db51ebe
.dword 0x3fd6eba0a7c1f55e
.dword 0xbff829f62b49c1eb
.dword 0x3fe14ec6b60ce679
.dword 0x3fd6eba0a7c1f55e
.dword 0xbff829f62b49c1eb
.dword 0x3fe14ec6b60ce679
.dword 0x3fd6eba0a7c1f55e
.dword 0xbff829f62b49c1eb
.dword 0x3fe14ec6b60ce679
.dword 0x3fd6eba0a7c1f55e
.dword 0xbff829f62b49c1eb
.dword 0x3fe14ec6b60ce679
.dword 0x3fd6eba0a7c1f55e
.dword 0xbff829f62b49c1eb
.dword 0x3fe14ec6b60ce679
.dword 0x3f4c8e57e5f2a800
.dword 0xc08c59b860a75fe7
.dword 0x3fe94c9d5665ac38
.dword 0x3f4c8e57e5f2a800
.dword 0xc08c59b860a75fe7
.dword 0x3fe94c9d5665ac38
.dword 0x3f4c8e57e5f2a800
.dword 0xc08c59b860a75fe7
.dword 0x3fe94c9d5665ac38
.dword 0x3f4c8e57e5f2a800
.dword 0xc08c59b860a75fe7
.dword 0x3fe94c9d5665ac38
.dword 0x3f4c8e57e5f2a800
.dword 0xc08c59b860a75fe7
.dword 0x3fe94c9d5665ac38
.dword 0x3fed46298b73df6d
.dword 0xbfea53078c4bd335
.dword 0x3fe814f6a4c14400
.dword 0x3fed46298b73df6d
.dword 0xbfea53078c4bd335
.dword 0x3fe814f6a4c14400
.dword 0x3fed46298b73df6d
.dword 0xbfea53078c4bd335
.dword 0x3fe814f6a4c14400
.dword 0x3fed46298b73df6d
.dword 0xbfea53078c4bd335
.dword 0x3fe814f6a4c14400
.dword 0x3fed46298b73df6d
.dword 0xbfea53078c4bd335
.dword 0x3fe814f6a4c14400
.dword 0x3febf518e73a3fa2
.dword 0xbfd59f98adede999
.dword 0x3fd2e4478fa6577c
.dword 0x3febf518e73a3fa2
.dword 0xbfd59f98adede999
.dword 0x3fd2e4478fa6577c
.dword 0x3febf518e73a3fa2
.dword 0xbfd59f98adede999
.dword 0x3fd2e4478fa6577c
.dword 0x3febf518e73a3fa2
.dword 0xbfd59f98adede999
.dword 0x3fd2e4478fa6577c
.dword 0x3febf518e73a3fa2
.dword 0xbfd59f98adede999
.dword 0x3fd2e4478fa6577c
.dword 0x3fe8bed35a84b2c1
.dword 0xbfa8f6ecde6240ad
.dword 0x3fa34e10a7f9f270
.dword 0x3fe8bed35a84b2c1
.dword 0xbfa8f6ecde6240ad
.dword 0x3fa34e10a7f9f270
.dword 0x3fe8bed35a84b2c1
.dword 0xbfa8f6ecde6240ad
.dword 0x3fa34e10a7f9f270
.dword 0x3fe8bed35a84b2c1
.dword 0xbfa8f6ecde6240ad
.dword 0x3fa34e10a7f9f270
.dword 0x3fe8bed35a84b2c1
.dword 0xbfa8f6ecde6240ad
.dword 0x3fa34e10a7f9f270
.dword 0x3fecc8d2a53c8f5d
.dword 0xbfc60941631c6898
.dword 0x3fc3d2641dead4b8
.dword 0x3fecc8d2a53c8f5d
.dword 0xbfc60941631c6898
.dword 0x3fc3d2641dead4b8
.dword 0x3fe06e7d2e4d6296
.dword 0xbfeaf1ce04f135ab
.dword 0x3fdbabdf3c66389c
.dword 0x3fe06e7d2e4d6296
.dword 0xbfeaf1ce04f135ab
.dword 0x3fdbabdf3c66389c
.dword 0x3fe06e7d2e4d6296
.dword 0xbfeaf1ce04f135ab
.dword 0x3fdbabdf3c66389c
.dword 0x3fe06e7d2e4d6296
.dword 0xbfeaf1ce04f135ab
.dword 0x3fdbabdf3c66389c
.dword 0x3fe06e7d2e4d6296
.dword 0xbfeaf1ce04f135ab
.dword 0x3fdbabdf3c66389c
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_8:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_9:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_10:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_11:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_12:
    .fill 162*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
