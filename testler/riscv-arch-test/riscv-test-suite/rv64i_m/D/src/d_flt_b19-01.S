
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 13:36:24 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_flt.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the flt.d instruction of the RISC-V FD extension for the flt_b19 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_flt_b19)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:// rs1 != rs2, rs1==f29, rs2==f6, rd==x7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f29; op2:f6; dest:x7; op1val:0x7fee97d52f73d2ed; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x7, f29, f6, 0, x16, 0, x17, x15, 0, x18)

inst_1:// rs1 == rs2, rs1==f2, rs2==f2, rd==x23, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f2; op2:f2; dest:x23; op1val:0x0; op2val:0x0; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x23, f2, f2, 0, x16, 16, x17, x15, 16, x18)

inst_2:// rs1==f0, rs2==f15, rd==x31, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f0; op2:f15; dest:x31; op1val:0x0; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x31, f0, f15, 0, x16, 32, x17, x15, 32, x18)

inst_3:// rs1==f30, rs2==f29, rd==x0, fs1 == 1 and fe1 == 0x3ff and fm1 == 0xa0d2ebbb9cec0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f30; op2:f29; dest:x0; op1val:0xbffa0d2ebbb9cec0; op2val:0x0; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x0, f30, f29, 0, x16, 48, x17, x15, 48, x18)

inst_4:// rs1==f22, rs2==f16, rd==x8, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa0d2ebbb9cec0 and rm_val == 1  
// opcode: flt.d ; op1:f22; op2:f16; dest:x8; op1val:0x0; op2val:0xbffa0d2ebbb9cec0; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x8, f22, f16, 0, x16, 64, x17, x15, 64, x18)

inst_5:// rs1==f5, rs2==f18, rd==x26, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f5; op2:f18; dest:x26; op1val:0x0; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x26, f5, f18, 0, x16, 80, x17, x15, 80, x18)

inst_6:// rs1==f3, rs2==f13, rd==x19, fs1 == 1 and fe1 == 0x3ff and fm1 == 0x271665b532bfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f3; op2:f13; dest:x19; op1val:0xbff271665b532bfd; op2val:0x0; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x19, f3, f13, 0, x16, 96, x17, x15, 96, x18)

inst_7:// rs1==f19, rs2==f22, rd==x30, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x271665b532bfd and rm_val == 1  
// opcode: flt.d ; op1:f19; op2:f22; dest:x30; op1val:0x0; op2val:0xbff271665b532bfd; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x30, f19, f22, 0, x16, 112, x17, x15, 112, x18)

inst_8:// rs1==f1, rs2==f19, rd==x21, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f1; op2:f19; dest:x21; op1val:0x0; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x21, f1, f19, 0, x16, 128, x17, x15, 128, x18)

inst_9:// rs1==f8, rs2==f25, rd==x5, fs1 == 1 and fe1 == 0x3ff and fm1 == 0xdf66a9ea7fbe7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f8; op2:f25; dest:x5; op1val:0xbffdf66a9ea7fbe7; op2val:0x0; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x5, f8, f25, 0, x16, 144, x17, x15, 144, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_0)

inst_10:// rs1==f18, rs2==f24, rd==x17, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdf66a9ea7fbe7 and rm_val == 1  
// opcode: flt.d ; op1:f18; op2:f24; dest:x17; op1val:0x0; op2val:0xbffdf66a9ea7fbe7; valaddr_reg:x20; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x17, f18, f24, 0, x20, 160, x21, x19, 0, x18)

inst_11:// rs1==f4, rs2==f27, rd==x16, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f4; op2:f27; dest:x16; op1val:0x0; op2val:0x800b11df817f3079; valaddr_reg:x20; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x16, f4, f27, 0, x20, 176, x21, x19, 16, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_12:// rs1==f13, rs2==f10, rd==x28, fs1 == 1 and fe1 == 0x3ff and fm1 == 0x8a193aec8d637 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f13; op2:f10; dest:x28; op1val:0xbff8a193aec8d637; op2val:0x0; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x28, f13, f10, 0, x16, 192, x17, x15, 0, x18)

inst_13:// rs1==f11, rs2==f20, rd==x6, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8a193aec8d637 and rm_val == 1  
// opcode: flt.d ; op1:f11; op2:f20; dest:x6; op1val:0x0; op2val:0xbff8a193aec8d637; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x6, f11, f20, 0, x16, 208, x17, x15, 16, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_1)

inst_14:// rs1==f25, rs2==f7, rd==x15, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f25; op2:f7; dest:x15; op1val:0x0; op2val:0x800ea45d43472379; valaddr_reg:x20; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x15, f25, f7, 0, x20, 224, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_15:// rs1==f17, rs2==f0, rd==x14, fs1 == 1 and fe1 == 0x400 and fm1 == 0x04a31976bdb6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f17; op2:f0; dest:x14; op1val:0xc0004a31976bdb6f; op2val:0x0; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x14, f17, f0, 0, x16, 240, x17, x15, 0, x18)

inst_16:// rs1==f9, rs2==f4, rd==x24, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x04a31976bdb6f and rm_val == 1  
// opcode: flt.d ; op1:f9; op2:f4; dest:x24; op1val:0x0; op2val:0xc0004a31976bdb6f; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x24, f9, f4, 0, x16, 256, x17, x15, 16, x18)

inst_17:// rs1==f27, rs2==f1, rd==x29, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f27; op2:f1; dest:x29; op1val:0x0; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x29, f27, f1, 0, x16, 272, x17, x15, 32, x18)

inst_18:// rs1==f15, rs2==f14, rd==x2, fs1 == 0 and fe1 == 0x402 and fm1 == 0x3cbf277e6ba7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f15; op2:f14; dest:x2; op1val:0x4023cbf277e6ba7f; op2val:0x0; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x2, f15, f14, 0, x16, 288, x17, x15, 48, x18)

inst_19:// rs1==f7, rs2==f31, rd==x22, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3cbf277e6ba7f and rm_val == 1  
// opcode: flt.d ; op1:f7; op2:f31; dest:x22; op1val:0x0; op2val:0x4023cbf277e6ba7f; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x22, f7, f31, 0, x16, 304, x17, x15, 64, x18)

inst_20:// rs1==f28, rs2==f23, rd==x20, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f28; op2:f23; dest:x20; op1val:0x0; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x20, f28, f23, 0, x16, 320, x17, x15, 80, x18)

inst_21:// rs1==f14, rs2==f26, rd==x11, fs1 == 0 and fe1 == 0x3ff and fm1 == 0x9bd762d8a6627 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f14; op2:f26; dest:x11; op1val:0x3ff9bd762d8a6627; op2val:0x0; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x11, f14, f26, 0, x16, 336, x17, x15, 96, x18)

inst_22:// rs1==f21, rs2==f17, rd==x4, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9bd762d8a6627 and rm_val == 1  
// opcode: flt.d ; op1:f21; op2:f17; dest:x4; op1val:0x0; op2val:0x3ff9bd762d8a6627; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x4, f21, f17, 0, x16, 352, x17, x15, 112, x18)

inst_23:// rs1==f31, rs2==f3, rd==x3, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f31; op2:f3; dest:x3; op1val:0x0; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x3, f31, f3, 0, x16, 368, x17, x15, 128, x18)

inst_24:// rs1==f10, rs2==f11, rd==x9, fs1 == 0 and fe1 == 0x3ff and fm1 == 0x4b1096905e83e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x9; op1val:0x3ff4b1096905e83e; op2val:0x0; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x9, f10, f11, 0, x16, 384, x17, x15, 144, x18)

inst_25:// rs1==f20, rs2==f12, rd==x10, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b1096905e83e and rm_val == 1  
// opcode: flt.d ; op1:f20; op2:f12; dest:x10; op1val:0x0; op2val:0x3ff4b1096905e83e; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x10, f20, f12, 0, x16, 400, x17, x15, 160, x18)

inst_26:// rs1==f12, rs2==f8, rd==x18, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f12; op2:f8; dest:x18; op1val:0x0; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x22
TEST_FCMP_OP(flt.d, x18, f12, f8, 0, x16, 416, x17, x15, 176, x22)

inst_27:// rs1==f26, rs2==f30, rd==x1, fs1 == 0 and fe1 == 0x3ff and fm1 == 0x7d7db8b6fc61f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f26; op2:f30; dest:x1; op1val:0x3ff7d7db8b6fc61f; op2val:0x0; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x1, f26, f30, 0, x16, 432, x17, x15, 192, x18)

inst_28:// rs1==f23, rs2==f21, rd==x25, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7d7db8b6fc61f and rm_val == 1  
// opcode: flt.d ; op1:f23; op2:f21; dest:x25; op1val:0x0; op2val:0x3ff7d7db8b6fc61f; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x25, f23, f21, 0, x16, 448, x17, x15, 208, x18)

inst_29:// rs1==f6, rs2==f28, rd==x27, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f6; op2:f28; dest:x27; op1val:0x0; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x27, f6, f28, 0, x16, 464, x17, x15, 224, x18)

inst_30:// rs1==f24, rs2==f5, rd==x12, fs1 == 0 and fe1 == 0x3ff and fm1 == 0x422095a1629ee and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f24; op2:f5; dest:x12; op1val:0x3ff422095a1629ee; op2val:0x0; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f24, f5, 0, x16, 480, x17, x15, 240, x18)

inst_31:// rs1==f16, rs2==f9, rd==x13, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x422095a1629ee and rm_val == 1  
// opcode: flt.d ; op1:f16; op2:f9; dest:x13; op1val:0x0; op2val:0x3ff422095a1629ee; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x13, f16, f9, 0, x16, 496, x17, x15, 256, x18)

inst_32:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 512, x17, x15, 272, x18)

inst_33:// fs1 == 1 and fe1 == 0x402 and fm1 == 0x0637b0487519a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc020637b0487519a; op2val:0x0; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 528, x17, x15, 288, x18)

inst_34:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x0637b0487519a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xc020637b0487519a; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 544, x17, x15, 304, x18)

inst_35:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 560, x17, x15, 320, x18)

inst_36:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x171a35c491d80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xbff171a35c491d80; op2val:0x0; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 576, x17, x15, 336, x18)

inst_37:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x171a35c491d80 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xbff171a35c491d80; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 592, x17, x15, 352, x18)

inst_38:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 608, x17, x15, 368, x18)

inst_39:// fs1 == 1 and fe1 == 0x401 and fm1 == 0xc4624671f2f0c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc01c4624671f2f0c; op2val:0x0; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 624, x17, x15, 384, x18)

inst_40:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc4624671f2f0c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xc01c4624671f2f0c; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 640, x17, x15, 400, x18)

inst_41:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 656, x17, x15, 416, x18)

inst_42:// fs1 == 1 and fe1 == 0x401 and fm1 == 0x2fc5d39f551da and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc012fc5d39f551da; op2val:0x0; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 672, x17, x15, 432, x18)

inst_43:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2fc5d39f551da and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xc012fc5d39f551da; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 688, x17, x15, 448, x18)

inst_44:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 704, x17, x15, 464, x18)

inst_45:// fs1 == 1 and fe1 == 0x402 and fm1 == 0x2c20e7e96fa8e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc022c20e7e96fa8e; op2val:0x0; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 720, x17, x15, 480, x18)

inst_46:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2c20e7e96fa8e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xc022c20e7e96fa8e; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 736, x17, x15, 496, x18)

inst_47:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 752, x17, x15, 512, x18)

inst_48:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xb4ebb70505c5a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x3ffb4ebb70505c5a; op2val:0x0; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 768, x17, x15, 528, x18)

inst_49:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb4ebb70505c5a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x3ffb4ebb70505c5a; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 784, x17, x15, 544, x18)

inst_50:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 800, x17, x15, 560, x18)

inst_51:// fs1 == 0 and fe1 == 0x401 and fm1 == 0xef7eded580ce9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x401ef7eded580ce9; op2val:0x0; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 816, x17, x15, 576, x18)

inst_52:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xef7eded580ce9 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x401ef7eded580ce9; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 832, x17, x15, 592, x18)

inst_53:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 848, x17, x15, 608, x18)

inst_54:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x16dc795a2b73d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x3ff16dc795a2b73d; op2val:0x0; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 864, x17, x15, 624, x18)

inst_55:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x16dc795a2b73d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x3ff16dc795a2b73d; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 880, x17, x15, 640, x18)

inst_56:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 896, x17, x15, 656, x18)

inst_57:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x80812523614ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x3ff80812523614ab; op2val:0x0; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 912, x17, x15, 672, x18)

inst_58:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80812523614ab and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x3ff80812523614ab; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 928, x17, x15, 688, x18)

inst_59:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 944, x17, x15, 704, x18)

inst_60:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0xb7f9db1715774 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x3ffb7f9db1715774; op2val:0x0; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 960, x17, x15, 720, x18)

inst_61:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb7f9db1715774 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x3ffb7f9db1715774; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 976, x17, x15, 736, x18)

inst_62:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 992, x17, x15, 752, x18)

inst_63:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa0d2ebbb9cec0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xbffa0d2ebbb9cec0; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1008, x17, x15, 768, x18)

inst_64:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x0; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1024, x17, x15, 784, x18)

inst_65:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x01df90d4d4e4a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x80001df90d4d4e4a; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1040, x17, x15, 800, x18)

inst_66:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x01df90d4d4e4a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80001df90d4d4e4a; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1056, x17, x15, 816, x18)

inst_67:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x01df90d4d4e4a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x80001df90d4d4e4a; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1072, x17, x15, 832, x18)

inst_68:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x01df90d4d4e4a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x849e8322fbf77 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80001df90d4d4e4a; op2val:0x800849e8322fbf77; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1088, x17, x15, 848, x18)

inst_69:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1104, x17, x15, 864, x18)

inst_70:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1120, x17, x15, 880, x18)

inst_71:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1136, x17, x15, 896, x18)

inst_72:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1152, x17, x15, 912, x18)

inst_73:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1168, x17, x15, 928, x18)

inst_74:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1184, x17, x15, 944, x18)

inst_75:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1200, x17, x15, 960, x18)

inst_76:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x12bba85050ee4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x80012bba85050ee4; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1216, x17, x15, 976, x18)

inst_77:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x12bba85050ee4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80012bba85050ee4; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1232, x17, x15, 992, x18)

inst_78:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x12bba85050ee4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0x80012bba85050ee4; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1248, x17, x15, 1008, x18)

inst_79:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x12bba85050ee4 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x1cb4e9082a569 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80012bba85050ee4; op2val:0x31cb4e9082a569; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1264, x17, x15, 1024, x18)

inst_80:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1280, x17, x15, 1040, x18)

inst_81:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1296, x17, x15, 1056, x18)

inst_82:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1312, x17, x15, 1072, x18)

inst_83:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1328, x17, x15, 1088, x18)

inst_84:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1344, x17, x15, 1104, x18)

inst_85:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1360, x17, x15, 1120, x18)

inst_86:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1376, x17, x15, 1136, x18)

inst_87:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x12bba85050ee4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80012bba85050ee4; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1392, x17, x15, 1152, x18)

inst_88:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x12bba85050ee4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0x80012bba85050ee4; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1408, x17, x15, 1168, x18)

inst_89:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x12bba85050ee4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x90c5811d4ea06 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80012bba85050ee4; op2val:0x90c5811d4ea06; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1424, x17, x15, 1184, x18)

inst_90:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1200, x18)

inst_91:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x72fc4fe0e8a0c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xffb72fc4fe0e8a0c; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1216, x18)

inst_92:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x72fc4fe0e8a0c and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb72fc4fe0e8a0c; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1232, x18)

inst_93:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x72fc4fe0e8a0c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0xffb72fc4fe0e8a0c; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1248, x18)

inst_94:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x72fc4fe0e8a0c and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd762fc26b2b18 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb72fc4fe0e8a0c; op2val:0x802d762fc26b2b18; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1264, x18)

inst_95:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1280, x18)

inst_96:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcfbb63d922c8f and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xffecfbb63d922c8f; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1296, x18)

inst_97:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xcfbb63d922c8f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffecfbb63d922c8f; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1312, x18)

inst_98:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcfbb63d922c8f and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0xffecfbb63d922c8f; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1328, x18)

inst_99:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xcfbb63d922c8f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7d6f6354e532b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffecfbb63d922c8f; op2val:0x8007d6f6354e532b; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1344, x18)

inst_100:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1360, x18)

inst_101:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x72fc4fe0e8a0c and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb72fc4fe0e8a0c; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1376, x18)

inst_102:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x72fc4fe0e8a0c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0xffb72fc4fe0e8a0c; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1392, x18)

inst_103:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x72fc4fe0e8a0c and fs2 == 1 and fe2 == 0x002 and fm2 == 0x969fab16b7edc and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb72fc4fe0e8a0c; op2val:0x802969fab16b7edc; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1408, x18)

inst_104:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1424, x18)

inst_105:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x72fc4fe0e8a0c and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb72fc4fe0e8a0c; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1440, x18)

inst_106:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x72fc4fe0e8a0c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0xffb72fc4fe0e8a0c; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1456, x18)

inst_107:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x72fc4fe0e8a0c and fs2 == 1 and fe2 == 0x002 and fm2 == 0x110b8bdd7297e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb72fc4fe0e8a0c; op2val:0x802110b8bdd7297e; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1472, x18)

inst_108:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1488, x18)

inst_109:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x28c9d980ba1a3 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xff828c9d980ba1a3; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1504, x18)

inst_110:// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x28c9d980ba1a3 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff828c9d980ba1a3; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1520, x18)

inst_111:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x28c9d980ba1a3 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0xff828c9d980ba1a3; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1536, x18)

inst_112:// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x28c9d980ba1a3 and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0dc4fe65af923 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff828c9d980ba1a3; op2val:0x8030dc4fe65af923; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1552, x18)

inst_113:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1568, x18)

inst_114:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xcfbb63d922c8f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffecfbb63d922c8f; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1584, x18)

inst_115:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcfbb63d922c8f and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0xffecfbb63d922c8f; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1600, x18)

inst_116:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xcfbb63d922c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc45cc3d79cddb and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffecfbb63d922c8f; op2val:0xc45cc3d79cddb; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1616, x18)

inst_117:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1632, x18)

inst_118:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x72fc4fe0e8a0c and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb72fc4fe0e8a0c; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1648, x18)

inst_119:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x72fc4fe0e8a0c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0xffb72fc4fe0e8a0c; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1664, x18)

inst_120:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x72fc4fe0e8a0c and fs2 == 0 and fe2 == 0x002 and fm2 == 0xbd5fdfc44e580 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb72fc4fe0e8a0c; op2val:0x2bd5fdfc44e580; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1680, x18)

inst_121:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1696, x18)

inst_122:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xcfbb63d922c8f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffecfbb63d922c8f; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1712, x18)

inst_123:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcfbb63d922c8f and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0xffecfbb63d922c8f; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1728, x18)

inst_124:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xcfbb63d922c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x7d53a47591bb8 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffecfbb63d922c8f; op2val:0x7d53a47591bb8; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1744, x18)

inst_125:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1760, x18)

inst_126:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xcfbb63d922c8f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffecfbb63d922c8f; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1776, x18)
addi x16,x16,2032

inst_127:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcfbb63d922c8f and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0xffecfbb63d922c8f; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 0, x17, x15, 1792, x18)

inst_128:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xcfbb63d922c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xacce25b46ca92 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffecfbb63d922c8f; op2val:0xacce25b46ca92; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 16, x17, x15, 1808, x18)

inst_129:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 32, x17, x15, 1824, x18)

inst_130:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xcfbb63d922c8f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffecfbb63d922c8f; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 48, x17, x15, 1840, x18)

inst_131:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcfbb63d922c8f and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0xffecfbb63d922c8f; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 64, x17, x15, 1856, x18)

inst_132:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xcfbb63d922c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc5bc46ffcb5d2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffecfbb63d922c8f; op2val:0xc5bc46ffcb5d2; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 80, x17, x15, 1872, x18)

inst_133:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xbb549323294e4 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800bb549323294e4; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 96, x17, x15, 1888, x18)

inst_134:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 112, x17, x15, 1904, x18)

inst_135:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x271665b532bfd and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xbff271665b532bfd; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 128, x17, x15, 1920, x18)

inst_136:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x0; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 144, x17, x15, 1936, x18)

inst_137:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x849e8322fbf77 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x800849e8322fbf77; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 160, x17, x15, 1952, x18)

inst_138:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 176, x17, x15, 1968, x18)

inst_139:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 192, x17, x15, 1984, x18)

inst_140:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 208, x17, x15, 2000, x18)

inst_141:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x02278fec7ae73 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x849e8322fbf77 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80002278fec7ae73; op2val:0x800849e8322fbf77; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 224, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_142:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x02278fec7ae73 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x80002278fec7ae73; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 240, x17, x15, 0, x18)

inst_143:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 256, x17, x15, 16, x18)

inst_144:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 272, x17, x15, 32, x18)

inst_145:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x01c56b70e1268 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x849e8322fbf77 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80001c56b70e1268; op2val:0x800849e8322fbf77; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 288, x17, x15, 48, x18)

inst_146:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x01c56b70e1268 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x80001c56b70e1268; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 304, x17, x15, 64, x18)

inst_147:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 320, x17, x15, 80, x18)

inst_148:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 336, x17, x15, 96, x18)

inst_149:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0257bd0086432 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x849e8322fbf77 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000257bd0086432; op2val:0x800849e8322fbf77; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 352, x17, x15, 112, x18)

inst_150:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0257bd0086432 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x8000257bd0086432; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 368, x17, x15, 128, x18)

inst_151:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 384, x17, x15, 144, x18)

inst_152:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0d430d1d19325 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x8000d430d1d19325; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 400, x17, x15, 160, x18)

inst_153:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d430d1d19325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d430d1d19325; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 416, x17, x15, 176, x18)

inst_154:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0b63657b34e4c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0d430d1d19325 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb63657b34e4c; op2val:0x8000d430d1d19325; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 432, x17, x15, 192, x18)

inst_155:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d430d1d19325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0b63657b34e4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d430d1d19325; op2val:0xb63657b34e4c; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 448, x17, x15, 208, x18)

inst_156:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 464, x17, x15, 224, x18)

inst_157:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 480, x17, x15, 240, x18)

inst_158:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01d9d54c6f6e6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x849e8322fbf77 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1d9d54c6f6e6; op2val:0x800849e8322fbf77; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 496, x17, x15, 256, x18)

inst_159:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01d9d54c6f6e6 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x1d9d54c6f6e6; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 512, x17, x15, 272, x18)

inst_160:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 528, x17, x15, 288, x18)

inst_161:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 544, x17, x15, 304, x18)

inst_162:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x017ce5da753f7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x849e8322fbf77 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x17ce5da753f7; op2val:0x800849e8322fbf77; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 560, x17, x15, 320, x18)

inst_163:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x017ce5da753f7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x17ce5da753f7; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 576, x17, x15, 336, x18)

inst_164:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 592, x17, x15, 352, x18)

inst_165:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 608, x17, x15, 368, x18)

inst_166:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01b6ea1db6961 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x849e8322fbf77 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1b6ea1db6961; op2val:0x800849e8322fbf77; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 624, x17, x15, 384, x18)

inst_167:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x849e8322fbf77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01b6ea1db6961 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800849e8322fbf77; op2val:0x1b6ea1db6961; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 640, x17, x15, 400, x18)

inst_168:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 656, x17, x15, 416, x18)

inst_169:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d430d1d19325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d430d1d19325; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 672, x17, x15, 432, x18)

inst_170:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01729d737e39f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0d430d1d19325 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1729d737e39f; op2val:0x8000d430d1d19325; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 688, x17, x15, 448, x18)

inst_171:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d430d1d19325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01729d737e39f and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d430d1d19325; op2val:0x1729d737e39f; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 704, x17, x15, 464, x18)

inst_172:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 720, x17, x15, 480, x18)

inst_173:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x06a2f722afb11 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xffb06a2f722afb11; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 736, x17, x15, 496, x18)

inst_174:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x06a2f722afb11 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb06a2f722afb11; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 752, x17, x15, 512, x18)

inst_175:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x096d7fec4b410 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x06a2f722afb11 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800096d7fec4b410; op2val:0xffb06a2f722afb11; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 768, x17, x15, 528, x18)

inst_176:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x06a2f722afb11 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x096d7fec4b410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb06a2f722afb11; op2val:0x800096d7fec4b410; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 784, x17, x15, 544, x18)

inst_177:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 800, x17, x15, 560, x18)

inst_178:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x484bb4eb5b9d5 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xffe484bb4eb5b9d5; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 816, x17, x15, 576, x18)

inst_179:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x484bb4eb5b9d5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe484bb4eb5b9d5; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 832, x17, x15, 592, x18)

inst_180:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x01411d273fbb6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x484bb4eb5b9d5 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80001411d273fbb6; op2val:0xffe484bb4eb5b9d5; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 848, x17, x15, 608, x18)

inst_181:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x484bb4eb5b9d5 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x01411d273fbb6 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe484bb4eb5b9d5; op2val:0x80001411d273fbb6; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 864, x17, x15, 624, x18)

inst_182:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 880, x17, x15, 640, x18)

inst_183:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x06a2f722afb11 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb06a2f722afb11; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 896, x17, x15, 656, x18)

inst_184:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0821e9d25fd6b and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x06a2f722afb11 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000821e9d25fd6b; op2val:0xffb06a2f722afb11; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 912, x17, x15, 672, x18)

inst_185:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x06a2f722afb11 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0821e9d25fd6b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb06a2f722afb11; op2val:0x8000821e9d25fd6b; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 928, x17, x15, 688, x18)

inst_186:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 944, x17, x15, 704, x18)

inst_187:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x06a2f722afb11 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb06a2f722afb11; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 960, x17, x15, 720, x18)

inst_188:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0575fdad63926 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x06a2f722afb11 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000575fdad63926; op2val:0xffb06a2f722afb11; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 976, x17, x15, 736, x18)

inst_189:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x06a2f722afb11 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0575fdad63926 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb06a2f722afb11; op2val:0x8000575fdad63926; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 992, x17, x15, 752, x18)

inst_190:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1008, x17, x15, 768, x18)

inst_191:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0xa437f1d1191b5 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xff7a437f1d1191b5; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1024, x17, x15, 784, x18)

inst_192:// fs1 == 1 and fe1 == 0x7f7 and fm1 == 0xa437f1d1191b5 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff7a437f1d1191b5; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1040, x17, x15, 800, x18)

inst_193:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0aca70936d6c4 and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0xa437f1d1191b5 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000aca70936d6c4; op2val:0xff7a437f1d1191b5; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1056, x17, x15, 816, x18)

inst_194:// fs1 == 1 and fe1 == 0x7f7 and fm1 == 0xa437f1d1191b5 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0aca70936d6c4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff7a437f1d1191b5; op2val:0x8000aca70936d6c4; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1072, x17, x15, 832, x18)

inst_195:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1088, x17, x15, 848, x18)

inst_196:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x484bb4eb5b9d5 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe484bb4eb5b9d5; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1104, x17, x15, 864, x18)

inst_197:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01f6b009d60c7 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x484bb4eb5b9d5 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1f6b009d60c7; op2val:0xffe484bb4eb5b9d5; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1120, x17, x15, 880, x18)

inst_198:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x484bb4eb5b9d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01f6b009d60c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe484bb4eb5b9d5; op2val:0x1f6b009d60c7; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1136, x17, x15, 896, x18)

inst_199:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1152, x17, x15, 912, x18)

inst_200:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x06a2f722afb11 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb06a2f722afb11; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1168, x17, x15, 928, x18)

inst_201:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x08e851467c726 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x06a2f722afb11 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8e851467c726; op2val:0xffb06a2f722afb11; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1184, x17, x15, 944, x18)

inst_202:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x06a2f722afb11 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x08e851467c726 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb06a2f722afb11; op2val:0x8e851467c726; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1200, x17, x15, 960, x18)

inst_203:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1216, x17, x15, 976, x18)

inst_204:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x484bb4eb5b9d5 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe484bb4eb5b9d5; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1232, x17, x15, 992, x18)

inst_205:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0140d61fe54c2 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x484bb4eb5b9d5 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x140d61fe54c2; op2val:0xffe484bb4eb5b9d5; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1248, x17, x15, 1008, x18)

inst_206:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x484bb4eb5b9d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0140d61fe54c2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe484bb4eb5b9d5; op2val:0x140d61fe54c2; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1264, x17, x15, 1024, x18)

inst_207:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1280, x17, x15, 1040, x18)

inst_208:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x484bb4eb5b9d5 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe484bb4eb5b9d5; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1296, x17, x15, 1056, x18)

inst_209:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01ba61a834496 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x484bb4eb5b9d5 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ba61a834496; op2val:0xffe484bb4eb5b9d5; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1312, x17, x15, 1072, x18)

inst_210:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x484bb4eb5b9d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01ba61a834496 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe484bb4eb5b9d5; op2val:0x1ba61a834496; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1328, x17, x15, 1088, x18)

inst_211:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1344, x17, x15, 1104, x18)

inst_212:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x484bb4eb5b9d5 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe484bb4eb5b9d5; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1360, x17, x15, 1120, x18)

inst_213:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01fa33e8f53bd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x484bb4eb5b9d5 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1fa33e8f53bd; op2val:0xffe484bb4eb5b9d5; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1376, x17, x15, 1136, x18)

inst_214:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x484bb4eb5b9d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01fa33e8f53bd and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe484bb4eb5b9d5; op2val:0x1fa33e8f53bd; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1392, x17, x15, 1152, x18)

inst_215:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0153814fb5b84 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000153814fb5b84; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1408, x17, x15, 1168, x18)

inst_216:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1424, x17, x15, 1184, x18)

inst_217:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdf66a9ea7fbe7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xbffdf66a9ea7fbe7; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1200, x18)

inst_218:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x0; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1216, x18)

inst_219:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x000 and fm2 == 0x02278fec7ae73 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x80002278fec7ae73; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1232, x18)

inst_220:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x02278fec7ae73 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80002278fec7ae73; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1248, x18)

inst_221:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1264, x18)

inst_222:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1280, x18)

inst_223:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1296, x18)

inst_224:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1312, x18)

inst_225:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1328, x18)

inst_226:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x000 and fm2 == 0x158b9f3ccd07c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x800158b9f3ccd07c; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1344, x18)

inst_227:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x158b9f3ccd07c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800158b9f3ccd07c; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1360, x18)

inst_228:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x158b9f3ccd07c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0x800158b9f3ccd07c; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1376, x18)

inst_229:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x158b9f3ccd07c and fs2 == 0 and fe2 == 0x003 and fm2 == 0x1cb4e9082a569 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800158b9f3ccd07c; op2val:0x31cb4e9082a569; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1392, x18)

inst_230:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1408, x18)

inst_231:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1424, x18)

inst_232:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1440, x18)

inst_233:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1456, x18)

inst_234:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1472, x18)

inst_235:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1488, x18)

inst_236:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1504, x18)

inst_237:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x158b9f3ccd07c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800158b9f3ccd07c; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1520, x18)

inst_238:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x158b9f3ccd07c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0x800158b9f3ccd07c; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1536, x18)

inst_239:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x158b9f3ccd07c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x90c5811d4ea06 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800158b9f3ccd07c; op2val:0x90c5811d4ea06; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1552, x18)

inst_240:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1568, x18)

inst_241:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xaaae5b42b9d01 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xffbaaae5b42b9d01; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1584, x18)

inst_242:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xaaae5b42b9d01 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbaaae5b42b9d01; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1600, x18)

inst_243:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xaaae5b42b9d01 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0xffbaaae5b42b9d01; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1616, x18)

inst_244:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xaaae5b42b9d01 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd762fc26b2b18 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbaaae5b42b9d01; op2val:0x802d762fc26b2b18; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1632, x18)

inst_245:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1648, x18)

inst_246:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1664, x18)

inst_247:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1680, x18)

inst_248:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1696, x18)

inst_249:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7d6f6354e532b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x8007d6f6354e532b; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1712, x18)

inst_250:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1728, x18)

inst_251:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xaaae5b42b9d01 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbaaae5b42b9d01; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1744, x18)

inst_252:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xaaae5b42b9d01 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0xffbaaae5b42b9d01; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1760, x18)

inst_253:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xaaae5b42b9d01 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x969fab16b7edc and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbaaae5b42b9d01; op2val:0x802969fab16b7edc; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1776, x18)
addi x16,x16,2032

inst_254:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 0, x17, x15, 1792, x18)

inst_255:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xaaae5b42b9d01 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbaaae5b42b9d01; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 16, x17, x15, 1808, x18)

inst_256:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xaaae5b42b9d01 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0xffbaaae5b42b9d01; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 32, x17, x15, 1824, x18)

inst_257:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xaaae5b42b9d01 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x110b8bdd7297e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbaaae5b42b9d01; op2val:0x802110b8bdd7297e; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 48, x17, x15, 1840, x18)

inst_258:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 64, x17, x15, 1856, x18)

inst_259:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x555849022e400 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xff8555849022e400; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 80, x17, x15, 1872, x18)

inst_260:// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x555849022e400 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff8555849022e400; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 96, x17, x15, 1888, x18)

inst_261:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x555849022e400 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0xff8555849022e400; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 112, x17, x15, 1904, x18)

inst_262:// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x555849022e400 and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0dc4fe65af923 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff8555849022e400; op2val:0x8030dc4fe65af923; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 128, x17, x15, 1920, x18)

inst_263:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 144, x17, x15, 1936, x18)

inst_264:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 160, x17, x15, 1952, x18)

inst_265:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 176, x17, x15, 1968, x18)

inst_266:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc45cc3d79cddb and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xc45cc3d79cddb; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 192, x17, x15, 1984, x18)

inst_267:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 208, x17, x15, 2000, x18)

inst_268:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xaaae5b42b9d01 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbaaae5b42b9d01; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 224, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_269:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xaaae5b42b9d01 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0xffbaaae5b42b9d01; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 240, x17, x15, 0, x18)

inst_270:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xaaae5b42b9d01 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xbd5fdfc44e580 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbaaae5b42b9d01; op2val:0x2bd5fdfc44e580; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 256, x17, x15, 16, x18)

inst_271:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 272, x17, x15, 32, x18)

inst_272:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 288, x17, x15, 48, x18)

inst_273:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 304, x17, x15, 64, x18)

inst_274:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x7d53a47591bb8 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7d53a47591bb8; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 320, x17, x15, 80, x18)

inst_275:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 336, x17, x15, 96, x18)

inst_276:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 352, x17, x15, 112, x18)

inst_277:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 368, x17, x15, 128, x18)

inst_278:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xacce25b46ca92 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xacce25b46ca92; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 384, x17, x15, 144, x18)

inst_279:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 400, x17, x15, 160, x18)

inst_280:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 416, x17, x15, 176, x18)

inst_281:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 432, x17, x15, 192, x18)

inst_282:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc5bc46ffcb5d2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xc5bc46ffcb5d2; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 448, x17, x15, 208, x18)

inst_283:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd7743860024db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d7743860024db; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 464, x17, x15, 224, x18)

inst_284:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 480, x17, x15, 240, x18)

inst_285:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8a193aec8d637 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xbff8a193aec8d637; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 496, x17, x15, 256, x18)

inst_286:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x0; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 512, x17, x15, 272, x18)

inst_287:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x01c56b70e1268 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x80001c56b70e1268; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 528, x17, x15, 288, x18)

inst_288:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x01c56b70e1268 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80001c56b70e1268; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 544, x17, x15, 304, x18)

inst_289:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 560, x17, x15, 320, x18)

inst_290:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 576, x17, x15, 336, x18)

inst_291:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 592, x17, x15, 352, x18)

inst_292:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x11b63268cb80c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x80011b63268cb80c; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 608, x17, x15, 368, x18)

inst_293:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x11b63268cb80c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80011b63268cb80c; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 624, x17, x15, 384, x18)

inst_294:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x11b63268cb80c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0x80011b63268cb80c; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 640, x17, x15, 400, x18)

inst_295:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x11b63268cb80c and fs2 == 0 and fe2 == 0x003 and fm2 == 0x1cb4e9082a569 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80011b63268cb80c; op2val:0x31cb4e9082a569; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 656, x17, x15, 416, x18)

inst_296:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 672, x17, x15, 432, x18)

inst_297:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 688, x17, x15, 448, x18)

inst_298:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 704, x17, x15, 464, x18)

inst_299:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 720, x17, x15, 480, x18)

inst_300:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 736, x17, x15, 496, x18)

inst_301:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 752, x17, x15, 512, x18)

inst_302:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 768, x17, x15, 528, x18)

inst_303:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x11b63268cb80c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80011b63268cb80c; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 784, x17, x15, 544, x18)

inst_304:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x11b63268cb80c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0x80011b63268cb80c; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 800, x17, x15, 560, x18)

inst_305:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x11b63268cb80c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x90c5811d4ea06 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80011b63268cb80c; op2val:0x90c5811d4ea06; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 816, x17, x15, 576, x18)

inst_306:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 832, x17, x15, 592, x18)

inst_307:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x5ec2653d2538d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xffb5ec2653d2538d; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 848, x17, x15, 608, x18)

inst_308:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x5ec2653d2538d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb5ec2653d2538d; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 864, x17, x15, 624, x18)

inst_309:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x5ec2653d2538d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0xffb5ec2653d2538d; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 880, x17, x15, 640, x18)

inst_310:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x5ec2653d2538d and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd762fc26b2b18 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb5ec2653d2538d; op2val:0x802d762fc26b2b18; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 896, x17, x15, 656, x18)

inst_311:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 912, x17, x15, 672, x18)

inst_312:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb672fe8c6e870 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xffeb672fe8c6e870; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 928, x17, x15, 688, x18)

inst_313:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb672fe8c6e870 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffeb672fe8c6e870; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 944, x17, x15, 704, x18)

inst_314:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb672fe8c6e870 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0xffeb672fe8c6e870; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 960, x17, x15, 720, x18)

inst_315:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb672fe8c6e870 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7d6f6354e532b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffeb672fe8c6e870; op2val:0x8007d6f6354e532b; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 976, x17, x15, 736, x18)

inst_316:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 992, x17, x15, 752, x18)

inst_317:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x5ec2653d2538d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb5ec2653d2538d; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1008, x17, x15, 768, x18)

inst_318:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x5ec2653d2538d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0xffb5ec2653d2538d; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1024, x17, x15, 784, x18)

inst_319:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x5ec2653d2538d and fs2 == 1 and fe2 == 0x002 and fm2 == 0x969fab16b7edc and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb5ec2653d2538d; op2val:0x802969fab16b7edc; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1040, x17, x15, 800, x18)

inst_320:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1056, x17, x15, 816, x18)

inst_321:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x5ec2653d2538d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb5ec2653d2538d; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1072, x17, x15, 832, x18)

inst_322:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x5ec2653d2538d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0xffb5ec2653d2538d; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1088, x17, x15, 848, x18)

inst_323:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x5ec2653d2538d and fs2 == 1 and fe2 == 0x002 and fm2 == 0x110b8bdd7297e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb5ec2653d2538d; op2val:0x802110b8bdd7297e; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1104, x17, x15, 864, x18)

inst_324:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1120, x17, x15, 880, x18)

inst_325:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x189b8430ea93d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xff8189b8430ea93d; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1136, x17, x15, 896, x18)

inst_326:// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x189b8430ea93d and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff8189b8430ea93d; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1152, x17, x15, 912, x18)

inst_327:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x189b8430ea93d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0xff8189b8430ea93d; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1168, x17, x15, 928, x18)

inst_328:// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x189b8430ea93d and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0dc4fe65af923 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff8189b8430ea93d; op2val:0x8030dc4fe65af923; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1184, x17, x15, 944, x18)

inst_329:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1200, x17, x15, 960, x18)

inst_330:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb672fe8c6e870 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffeb672fe8c6e870; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1216, x17, x15, 976, x18)

inst_331:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb672fe8c6e870 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0xffeb672fe8c6e870; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1232, x17, x15, 992, x18)

inst_332:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb672fe8c6e870 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc45cc3d79cddb and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffeb672fe8c6e870; op2val:0xc45cc3d79cddb; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1248, x17, x15, 1008, x18)

inst_333:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1264, x17, x15, 1024, x18)

inst_334:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x5ec2653d2538d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb5ec2653d2538d; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1280, x17, x15, 1040, x18)

inst_335:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x5ec2653d2538d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0xffb5ec2653d2538d; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1296, x17, x15, 1056, x18)

inst_336:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x5ec2653d2538d and fs2 == 0 and fe2 == 0x002 and fm2 == 0xbd5fdfc44e580 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb5ec2653d2538d; op2val:0x2bd5fdfc44e580; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1312, x17, x15, 1072, x18)

inst_337:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1328, x17, x15, 1088, x18)

inst_338:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb672fe8c6e870 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffeb672fe8c6e870; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1344, x17, x15, 1104, x18)

inst_339:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb672fe8c6e870 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0xffeb672fe8c6e870; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1360, x17, x15, 1120, x18)

inst_340:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb672fe8c6e870 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x7d53a47591bb8 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffeb672fe8c6e870; op2val:0x7d53a47591bb8; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1376, x17, x15, 1136, x18)

inst_341:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1392, x17, x15, 1152, x18)

inst_342:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb672fe8c6e870 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffeb672fe8c6e870; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1408, x17, x15, 1168, x18)

inst_343:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb672fe8c6e870 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0xffeb672fe8c6e870; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1424, x17, x15, 1184, x18)

inst_344:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb672fe8c6e870 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xacce25b46ca92 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffeb672fe8c6e870; op2val:0xacce25b46ca92; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1200, x18)

inst_345:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1216, x18)

inst_346:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb672fe8c6e870 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffeb672fe8c6e870; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1232, x18)

inst_347:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb672fe8c6e870 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0xffeb672fe8c6e870; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1248, x18)

inst_348:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xb672fe8c6e870 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc5bc46ffcb5d2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffeb672fe8c6e870; op2val:0xc5bc46ffcb5d2; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1264, x18)

inst_349:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xb11df817f3079 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800b11df817f3079; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1280, x18)

inst_350:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1296, x18)

inst_351:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x04a31976bdb6f and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xc0004a31976bdb6f; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1312, x18)

inst_352:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x0; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1328, x18)

inst_353:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0257bd0086432 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x8000257bd0086432; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1344, x18)

inst_354:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0257bd0086432 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000257bd0086432; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1360, x18)

inst_355:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1376, x18)

inst_356:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x176d62053e9f2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x800176d62053e9f2; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1392, x18)

inst_357:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x176d62053e9f2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800176d62053e9f2; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1408, x18)

inst_358:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x176d62053e9f2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0x800176d62053e9f2; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1424, x18)

inst_359:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x176d62053e9f2 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x1cb4e9082a569 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800176d62053e9f2; op2val:0x31cb4e9082a569; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1440, x18)

inst_360:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1456, x18)

inst_361:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1472, x18)

inst_362:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1488, x18)

inst_363:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1504, x18)

inst_364:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1520, x18)

inst_365:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1536, x18)

inst_366:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1552, x18)

inst_367:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x176d62053e9f2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800176d62053e9f2; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1568, x18)

inst_368:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x176d62053e9f2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0x800176d62053e9f2; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1584, x18)

inst_369:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x176d62053e9f2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x90c5811d4ea06 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800176d62053e9f2; op2val:0x90c5811d4ea06; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1600, x18)

inst_370:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1616, x18)

inst_371:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xcff30f3beb065 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xffbcff30f3beb065; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1632, x18)

inst_372:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xcff30f3beb065 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbcff30f3beb065; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1648, x18)

inst_373:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xcff30f3beb065 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0xffbcff30f3beb065; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1664, x18)

inst_374:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xcff30f3beb065 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd762fc26b2b18 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbcff30f3beb065; op2val:0x802d762fc26b2b18; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1680, x18)

inst_375:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1696, x18)

inst_376:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1712, x18)

inst_377:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1728, x18)

inst_378:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xcff30f3beb065 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbcff30f3beb065; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1744, x18)

inst_379:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xcff30f3beb065 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0xffbcff30f3beb065; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1760, x18)

inst_380:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xcff30f3beb065 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x969fab16b7edc and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbcff30f3beb065; op2val:0x802969fab16b7edc; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1776, x18)
addi x16,x16,2032

inst_381:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 0, x17, x15, 1792, x18)

inst_382:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xcff30f3beb065 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbcff30f3beb065; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 16, x17, x15, 1808, x18)

inst_383:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xcff30f3beb065 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0xffbcff30f3beb065; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 32, x17, x15, 1824, x18)

inst_384:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xcff30f3beb065 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x110b8bdd7297e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbcff30f3beb065; op2val:0x802110b8bdd7297e; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 48, x17, x15, 1840, x18)

inst_385:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 64, x17, x15, 1856, x18)

inst_386:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x7328d8fcbc051 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xff87328d8fcbc051; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 80, x17, x15, 1872, x18)

inst_387:// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x7328d8fcbc051 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff87328d8fcbc051; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 96, x17, x15, 1888, x18)

inst_388:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x7328d8fcbc051 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0xff87328d8fcbc051; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 112, x17, x15, 1904, x18)

inst_389:// fs1 == 1 and fe1 == 0x7f8 and fm1 == 0x7328d8fcbc051 and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0dc4fe65af923 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff87328d8fcbc051; op2val:0x8030dc4fe65af923; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 128, x17, x15, 1920, x18)

inst_390:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 144, x17, x15, 1936, x18)

inst_391:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 160, x17, x15, 1952, x18)

inst_392:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xcff30f3beb065 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbcff30f3beb065; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 176, x17, x15, 1968, x18)

inst_393:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xcff30f3beb065 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0xffbcff30f3beb065; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 192, x17, x15, 1984, x18)

inst_394:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xcff30f3beb065 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xbd5fdfc44e580 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbcff30f3beb065; op2val:0x2bd5fdfc44e580; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 208, x17, x15, 2000, x18)

inst_395:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 224, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_396:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 240, x17, x15, 0, x18)

inst_397:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 256, x17, x15, 16, x18)

inst_398:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xea45d43472379 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800ea45d43472379; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 272, x17, x15, 32, x18)

inst_399:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 288, x17, x15, 48, x18)

inst_400:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3cbf277e6ba7f and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x4023cbf277e6ba7f; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 304, x17, x15, 64, x18)

inst_401:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x0; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 320, x17, x15, 80, x18)

inst_402:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x1cb4e9082a569 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x31cb4e9082a569; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 336, x17, x15, 96, x18)

inst_403:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 352, x17, x15, 112, x18)

inst_404:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 368, x17, x15, 128, x18)

inst_405:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0b63657b34e4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0xb63657b34e4c; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 384, x17, x15, 144, x18)

inst_406:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0b63657b34e4c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb63657b34e4c; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 400, x17, x15, 160, x18)

inst_407:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 416, x17, x15, 176, x18)

inst_408:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 432, x17, x15, 192, x18)

inst_409:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 448, x17, x15, 208, x18)

inst_410:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 464, x17, x15, 224, x18)

inst_411:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 480, x17, x15, 240, x18)

inst_412:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 496, x17, x15, 256, x18)

inst_413:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 512, x17, x15, 272, x18)

inst_414:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 528, x17, x15, 288, x18)

inst_415:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x128254fc5a4fe and fs2 == 0 and fe2 == 0x003 and fm2 == 0x1cb4e9082a569 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x128254fc5a4fe; op2val:0x31cb4e9082a569; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 544, x17, x15, 304, x18)

inst_416:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x128254fc5a4fe and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0x128254fc5a4fe; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 560, x17, x15, 320, x18)

inst_417:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 576, x17, x15, 336, x18)

inst_418:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 592, x17, x15, 352, x18)

inst_419:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0ee0fa88947a1 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x1cb4e9082a569 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xee0fa88947a1; op2val:0x31cb4e9082a569; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 608, x17, x15, 368, x18)

inst_420:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0ee0fa88947a1 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0xee0fa88947a1; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 624, x17, x15, 384, x18)

inst_421:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 640, x17, x15, 400, x18)

inst_422:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 656, x17, x15, 416, x18)

inst_423:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1125252921dc7 and fs2 == 0 and fe2 == 0x003 and fm2 == 0x1cb4e9082a569 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1125252921dc7; op2val:0x31cb4e9082a569; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 672, x17, x15, 432, x18)

inst_424:// fs1 == 0 and fe1 == 0x003 and fm1 == 0x1cb4e9082a569 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x1125252921dc7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x31cb4e9082a569; op2val:0x1125252921dc7; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 688, x17, x15, 448, x18)

inst_425:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 704, x17, x15, 464, x18)

inst_426:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 720, x17, x15, 480, x18)

inst_427:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 736, x17, x15, 496, x18)

inst_428:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x19e9f6802bcef and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x7fe19e9f6802bcef; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 752, x17, x15, 512, x18)

inst_429:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x19e9f6802bcef and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe19e9f6802bcef; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 768, x17, x15, 528, x18)

inst_430:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e46ff3af089e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x19e9f6802bcef and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e46ff3af089e; op2val:0x7fe19e9f6802bcef; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 784, x17, x15, 544, x18)

inst_431:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x19e9f6802bcef and fs2 == 1 and fe2 == 0x000 and fm2 == 0x5e46ff3af089e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe19e9f6802bcef; op2val:0x8005e46ff3af089e; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 800, x17, x15, 560, x18)

inst_432:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 816, x17, x15, 576, x18)

inst_433:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 832, x17, x15, 592, x18)

inst_434:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 848, x17, x15, 608, x18)

inst_435:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0c8b23887d51e and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000c8b23887d51e; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 864, x17, x15, 624, x18)

inst_436:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0c8b23887d51e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x8000c8b23887d51e; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 880, x17, x15, 640, x18)

inst_437:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 896, x17, x15, 656, x18)

inst_438:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x19e9f6802bcef and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe19e9f6802bcef; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 912, x17, x15, 672, x18)

inst_439:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x51532237be62c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x19e9f6802bcef and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80051532237be62c; op2val:0x7fe19e9f6802bcef; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 928, x17, x15, 688, x18)

inst_440:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x19e9f6802bcef and fs2 == 1 and fe2 == 0x000 and fm2 == 0x51532237be62c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe19e9f6802bcef; op2val:0x80051532237be62c; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 944, x17, x15, 704, x18)

inst_441:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 960, x17, x15, 720, x18)

inst_442:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x19e9f6802bcef and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe19e9f6802bcef; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 976, x17, x15, 736, x18)

inst_443:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x369be8c5e3b80 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x19e9f6802bcef and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800369be8c5e3b80; op2val:0x7fe19e9f6802bcef; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 992, x17, x15, 752, x18)

inst_444:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x19e9f6802bcef and fs2 == 1 and fe2 == 0x000 and fm2 == 0x369be8c5e3b80 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe19e9f6802bcef; op2val:0x800369be8c5e3b80; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1008, x17, x15, 768, x18)

inst_445:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1024, x17, x15, 784, x18)

inst_446:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x7fa and fm2 == 0xc30ff0cd12e4b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x7fac30ff0cd12e4b; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1040, x17, x15, 800, x18)

inst_447:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc30ff0cd12e4b and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fac30ff0cd12e4b; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1056, x17, x15, 816, x18)

inst_448:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6be865c2463a7 and fs2 == 0 and fe2 == 0x7fa and fm2 == 0xc30ff0cd12e4b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006be865c2463a7; op2val:0x7fac30ff0cd12e4b; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1072, x17, x15, 832, x18)

inst_449:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc30ff0cd12e4b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x6be865c2463a7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fac30ff0cd12e4b; op2val:0x8006be865c2463a7; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1088, x17, x15, 848, x18)

inst_450:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1104, x17, x15, 864, x18)

inst_451:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1120, x17, x15, 880, x18)

inst_452:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x13a2e0625c7c9 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x13a2e0625c7c9; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1136, x17, x15, 896, x18)

inst_453:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x13a2e0625c7c9 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x13a2e0625c7c9; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1152, x17, x15, 912, x18)

inst_454:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1168, x17, x15, 928, x18)

inst_455:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x19e9f6802bcef and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe19e9f6802bcef; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1184, x17, x15, 944, x18)

inst_456:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x59132cc0dc780 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x19e9f6802bcef and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x59132cc0dc780; op2val:0x7fe19e9f6802bcef; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1200, x17, x15, 960, x18)

inst_457:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x19e9f6802bcef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x59132cc0dc780 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe19e9f6802bcef; op2val:0x59132cc0dc780; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1216, x17, x15, 976, x18)

inst_458:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1232, x17, x15, 992, x18)

inst_459:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1248, x17, x15, 1008, x18)

inst_460:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0c885d3ef4f92 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc885d3ef4f92; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1264, x17, x15, 1024, x18)

inst_461:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0c885d3ef4f92 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0xc885d3ef4f92; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1280, x17, x15, 1040, x18)

inst_462:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1296, x17, x15, 1056, x18)

inst_463:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1312, x17, x15, 1072, x18)

inst_464:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1147d0920addb and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1147d0920addb; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1328, x17, x15, 1088, x18)

inst_465:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x1147d0920addb and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x1147d0920addb; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1344, x17, x15, 1104, x18)

inst_466:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1360, x17, x15, 1120, x18)

inst_467:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1376, x17, x15, 1136, x18)

inst_468:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x13c6071994562 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x13c6071994562; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1392, x17, x15, 1152, x18)

inst_469:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x13c6071994562 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x13c6071994562; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1408, x17, x15, 1168, x18)

inst_470:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x71e1f6d010ef7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x71e1f6d010ef7; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1424, x17, x15, 1184, x18)

inst_471:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1200, x18)

inst_472:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9bd762d8a6627 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x3ff9bd762d8a6627; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1216, x18)

inst_473:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x0; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1232, x18)

inst_474:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01d9d54c6f6e6 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x1d9d54c6f6e6; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1248, x18)

inst_475:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01d9d54c6f6e6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1d9d54c6f6e6; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1264, x18)

inst_476:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1280, x18)

inst_477:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x128254fc5a4fe and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x128254fc5a4fe; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1296, x18)

inst_478:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x128254fc5a4fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x128254fc5a4fe; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1312, x18)

inst_479:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1328, x18)

inst_480:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1344, x18)

inst_481:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1360, x18)

inst_482:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1376, x18)

inst_483:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1392, x18)

inst_484:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x128254fc5a4fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x128254fc5a4fe; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1408, x18)

inst_485:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x128254fc5a4fe and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0x128254fc5a4fe; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1424, x18)

inst_486:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x128254fc5a4fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x90c5811d4ea06 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x128254fc5a4fe; op2val:0x90c5811d4ea06; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1440, x18)

inst_487:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1456, x18)

inst_488:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x6e8d0c67096e1 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x7fb6e8d0c67096e1; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1472, x18)

inst_489:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6e8d0c67096e1 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb6e8d0c67096e1; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1488, x18)

inst_490:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x6e8d0c67096e1 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0x7fb6e8d0c67096e1; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1504, x18)

inst_491:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6e8d0c67096e1 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd762fc26b2b18 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb6e8d0c67096e1; op2val:0x802d762fc26b2b18; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1520, x18)

inst_492:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1536, x18)

inst_493:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xca304f80cbc99 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x7feca304f80cbc99; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1552, x18)

inst_494:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca304f80cbc99 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feca304f80cbc99; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1568, x18)

inst_495:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xca304f80cbc99 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0x7feca304f80cbc99; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1584, x18)

inst_496:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca304f80cbc99 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7d6f6354e532b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feca304f80cbc99; op2val:0x8007d6f6354e532b; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1600, x18)

inst_497:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1616, x18)

inst_498:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6e8d0c67096e1 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb6e8d0c67096e1; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1632, x18)

inst_499:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x6e8d0c67096e1 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0x7fb6e8d0c67096e1; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1648, x18)

inst_500:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6e8d0c67096e1 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x969fab16b7edc and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb6e8d0c67096e1; op2val:0x802969fab16b7edc; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1664, x18)

inst_501:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1680, x18)

inst_502:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6e8d0c67096e1 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb6e8d0c67096e1; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1696, x18)

inst_503:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x6e8d0c67096e1 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0x7fb6e8d0c67096e1; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1712, x18)

inst_504:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6e8d0c67096e1 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x110b8bdd7297e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb6e8d0c67096e1; op2val:0x802110b8bdd7297e; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1728, x18)

inst_505:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1744, x18)

inst_506:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x253da385a124e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x7f8253da385a124e; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1760, x18)

inst_507:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x253da385a124e and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f8253da385a124e; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1776, x18)
addi x16,x16,2032

inst_508:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x253da385a124e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0x7f8253da385a124e; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 0, x17, x15, 1792, x18)

inst_509:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x253da385a124e and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0dc4fe65af923 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f8253da385a124e; op2val:0x8030dc4fe65af923; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 16, x17, x15, 1808, x18)

inst_510:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 32, x17, x15, 1824, x18)

inst_511:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca304f80cbc99 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feca304f80cbc99; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 48, x17, x15, 1840, x18)

inst_512:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xca304f80cbc99 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0x7feca304f80cbc99; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 64, x17, x15, 1856, x18)

inst_513:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca304f80cbc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc45cc3d79cddb and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feca304f80cbc99; op2val:0xc45cc3d79cddb; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 80, x17, x15, 1872, x18)

inst_514:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 96, x17, x15, 1888, x18)

inst_515:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6e8d0c67096e1 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb6e8d0c67096e1; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 112, x17, x15, 1904, x18)

inst_516:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x6e8d0c67096e1 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0x7fb6e8d0c67096e1; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 128, x17, x15, 1920, x18)

inst_517:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6e8d0c67096e1 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xbd5fdfc44e580 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb6e8d0c67096e1; op2val:0x2bd5fdfc44e580; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 144, x17, x15, 1936, x18)

inst_518:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 160, x17, x15, 1952, x18)

inst_519:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca304f80cbc99 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feca304f80cbc99; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 176, x17, x15, 1968, x18)

inst_520:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xca304f80cbc99 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0x7feca304f80cbc99; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 192, x17, x15, 1984, x18)

inst_521:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca304f80cbc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x7d53a47591bb8 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feca304f80cbc99; op2val:0x7d53a47591bb8; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 208, x17, x15, 2000, x18)

inst_522:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 224, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_523:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca304f80cbc99 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feca304f80cbc99; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 240, x17, x15, 0, x18)

inst_524:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xca304f80cbc99 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0x7feca304f80cbc99; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 256, x17, x15, 16, x18)

inst_525:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca304f80cbc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xacce25b46ca92 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feca304f80cbc99; op2val:0xacce25b46ca92; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 272, x17, x15, 32, x18)

inst_526:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 288, x17, x15, 48, x18)

inst_527:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca304f80cbc99 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feca304f80cbc99; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 304, x17, x15, 64, x18)

inst_528:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xca304f80cbc99 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0x7feca304f80cbc99; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 320, x17, x15, 80, x18)

inst_529:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca304f80cbc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc5bc46ffcb5d2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feca304f80cbc99; op2val:0xc5bc46ffcb5d2; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 336, x17, x15, 96, x18)

inst_530:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xb91751db871ea and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xb91751db871ea; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 352, x17, x15, 112, x18)

inst_531:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 368, x17, x15, 128, x18)

inst_532:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b1096905e83e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x3ff4b1096905e83e; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 384, x17, x15, 144, x18)

inst_533:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x0; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 400, x17, x15, 160, x18)

inst_534:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x017ce5da753f7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x17ce5da753f7; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 416, x17, x15, 176, x18)

inst_535:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x017ce5da753f7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x17ce5da753f7; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 432, x17, x15, 192, x18)

inst_536:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 448, x17, x15, 208, x18)

inst_537:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0ee0fa88947a1 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0xee0fa88947a1; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 464, x17, x15, 224, x18)

inst_538:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0ee0fa88947a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xee0fa88947a1; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 480, x17, x15, 240, x18)

inst_539:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 496, x17, x15, 256, x18)

inst_540:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 512, x17, x15, 272, x18)

inst_541:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 528, x17, x15, 288, x18)

inst_542:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0ee0fa88947a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xee0fa88947a1; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 544, x17, x15, 304, x18)

inst_543:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0ee0fa88947a1 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0xee0fa88947a1; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 560, x17, x15, 320, x18)

inst_544:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0ee0fa88947a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x90c5811d4ea06 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xee0fa88947a1; op2val:0x90c5811d4ea06; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 576, x17, x15, 336, x18)

inst_545:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 592, x17, x15, 352, x18)

inst_546:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x26a84eacd6c03 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x7fb26a84eacd6c03; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 608, x17, x15, 368, x18)

inst_547:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26a84eacd6c03 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb26a84eacd6c03; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 624, x17, x15, 384, x18)

inst_548:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x26a84eacd6c03 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0x7fb26a84eacd6c03; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 640, x17, x15, 400, x18)

inst_549:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26a84eacd6c03 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd762fc26b2b18 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb26a84eacd6c03; op2val:0x802d762fc26b2b18; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 656, x17, x15, 416, x18)

inst_550:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 672, x17, x15, 432, x18)

inst_551:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x705262580c704 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x7fe705262580c704; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 688, x17, x15, 448, x18)

inst_552:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x705262580c704 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe705262580c704; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 704, x17, x15, 464, x18)

inst_553:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x705262580c704 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0x7fe705262580c704; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 720, x17, x15, 480, x18)

inst_554:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x705262580c704 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7d6f6354e532b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe705262580c704; op2val:0x8007d6f6354e532b; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 736, x17, x15, 496, x18)

inst_555:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 752, x17, x15, 512, x18)

inst_556:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26a84eacd6c03 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb26a84eacd6c03; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 768, x17, x15, 528, x18)

inst_557:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x26a84eacd6c03 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0x7fb26a84eacd6c03; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 784, x17, x15, 544, x18)

inst_558:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26a84eacd6c03 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x969fab16b7edc and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb26a84eacd6c03; op2val:0x802969fab16b7edc; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 800, x17, x15, 560, x18)

inst_559:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 816, x17, x15, 576, x18)

inst_560:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26a84eacd6c03 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb26a84eacd6c03; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 832, x17, x15, 592, x18)

inst_561:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x26a84eacd6c03 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0x7fb26a84eacd6c03; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 848, x17, x15, 608, x18)

inst_562:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26a84eacd6c03 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x110b8bdd7297e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb26a84eacd6c03; op2val:0x802110b8bdd7297e; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 864, x17, x15, 624, x18)

inst_563:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 880, x17, x15, 640, x18)

inst_564:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x7f7 and fm2 == 0xd773b1148acd1 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x7f7d773b1148acd1; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 896, x17, x15, 656, x18)

inst_565:// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0xd773b1148acd1 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f7d773b1148acd1; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 912, x17, x15, 672, x18)

inst_566:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 0 and fe2 == 0x7f7 and fm2 == 0xd773b1148acd1 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0x7f7d773b1148acd1; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 928, x17, x15, 688, x18)

inst_567:// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0xd773b1148acd1 and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0dc4fe65af923 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f7d773b1148acd1; op2val:0x8030dc4fe65af923; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 944, x17, x15, 704, x18)

inst_568:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 960, x17, x15, 720, x18)

inst_569:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x705262580c704 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe705262580c704; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 976, x17, x15, 736, x18)

inst_570:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x705262580c704 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0x7fe705262580c704; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 992, x17, x15, 752, x18)

inst_571:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x705262580c704 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc45cc3d79cddb and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe705262580c704; op2val:0xc45cc3d79cddb; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1008, x17, x15, 768, x18)

inst_572:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1024, x17, x15, 784, x18)

inst_573:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26a84eacd6c03 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb26a84eacd6c03; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1040, x17, x15, 800, x18)

inst_574:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x26a84eacd6c03 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0x7fb26a84eacd6c03; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1056, x17, x15, 816, x18)

inst_575:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26a84eacd6c03 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xbd5fdfc44e580 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb26a84eacd6c03; op2val:0x2bd5fdfc44e580; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1072, x17, x15, 832, x18)

inst_576:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1088, x17, x15, 848, x18)

inst_577:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x705262580c704 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe705262580c704; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1104, x17, x15, 864, x18)

inst_578:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x705262580c704 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0x7fe705262580c704; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1120, x17, x15, 880, x18)

inst_579:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x705262580c704 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x7d53a47591bb8 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe705262580c704; op2val:0x7d53a47591bb8; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1136, x17, x15, 896, x18)

inst_580:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1152, x17, x15, 912, x18)

inst_581:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x705262580c704 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe705262580c704; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1168, x17, x15, 928, x18)

inst_582:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x705262580c704 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0x7fe705262580c704; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1184, x17, x15, 944, x18)

inst_583:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x705262580c704 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xacce25b46ca92 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe705262580c704; op2val:0xacce25b46ca92; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1200, x17, x15, 960, x18)

inst_584:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1216, x17, x15, 976, x18)

inst_585:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x705262580c704 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe705262580c704; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1232, x17, x15, 992, x18)

inst_586:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x705262580c704 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0x7fe705262580c704; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1248, x17, x15, 1008, x18)

inst_587:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x705262580c704 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc5bc46ffcb5d2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe705262580c704; op2val:0xc5bc46ffcb5d2; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1264, x17, x15, 1024, x18)

inst_588:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x94c9c955ccc4c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x94c9c955ccc4c; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1280, x17, x15, 1040, x18)

inst_589:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1296, x17, x15, 1056, x18)

inst_590:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7d7db8b6fc61f and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x3ff7d7db8b6fc61f; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1312, x17, x15, 1072, x18)

inst_591:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x0; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1328, x17, x15, 1088, x18)

inst_592:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01b6ea1db6961 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x1b6ea1db6961; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1344, x17, x15, 1104, x18)

inst_593:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01b6ea1db6961 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1b6ea1db6961; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1360, x17, x15, 1120, x18)

inst_594:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1376, x17, x15, 1136, x18)

inst_595:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x1125252921dc7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x1125252921dc7; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1392, x17, x15, 1152, x18)

inst_596:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1125252921dc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1125252921dc7; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1408, x17, x15, 1168, x18)

inst_597:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1424, x17, x15, 1184, x18)

inst_598:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1125252921dc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1125252921dc7; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1200, x18)

inst_599:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x1125252921dc7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0x1125252921dc7; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1216, x18)

inst_600:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1125252921dc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x90c5811d4ea06 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1125252921dc7; op2val:0x90c5811d4ea06; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1232, x18)

inst_601:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1248, x18)

inst_602:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x5389d1433ac87 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x7fb5389d1433ac87; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1264, x18)

inst_603:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5389d1433ac87 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5389d1433ac87; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1280, x18)

inst_604:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x5389d1433ac87 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0x7fb5389d1433ac87; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1296, x18)

inst_605:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5389d1433ac87 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd762fc26b2b18 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5389d1433ac87; op2val:0x802d762fc26b2b18; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1312, x18)

inst_606:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1328, x18)

inst_607:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xa86c4594097a9 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x7fea86c4594097a9; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1344, x18)

inst_608:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa86c4594097a9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fea86c4594097a9; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1360, x18)

inst_609:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xa86c4594097a9 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0x7fea86c4594097a9; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1376, x18)

inst_610:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa86c4594097a9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7d6f6354e532b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fea86c4594097a9; op2val:0x8007d6f6354e532b; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1392, x18)

inst_611:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1408, x18)

inst_612:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5389d1433ac87 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5389d1433ac87; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1424, x18)

inst_613:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x5389d1433ac87 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0x7fb5389d1433ac87; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1440, x18)

inst_614:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5389d1433ac87 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x969fab16b7edc and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5389d1433ac87; op2val:0x802969fab16b7edc; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1456, x18)

inst_615:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1472, x18)

inst_616:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5389d1433ac87 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5389d1433ac87; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1488, x18)

inst_617:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x5389d1433ac87 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0x7fb5389d1433ac87; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1504, x18)

inst_618:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5389d1433ac87 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x110b8bdd7297e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5389d1433ac87; op2val:0x802110b8bdd7297e; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1520, x18)

inst_619:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1536, x18)

inst_620:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x0fa17435c8a06 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x7f80fa17435c8a06; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1552, x18)

inst_621:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x0fa17435c8a06 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f80fa17435c8a06; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1568, x18)

inst_622:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x0fa17435c8a06 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0x7f80fa17435c8a06; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1584, x18)

inst_623:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x0fa17435c8a06 and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0dc4fe65af923 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f80fa17435c8a06; op2val:0x8030dc4fe65af923; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1600, x18)

inst_624:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1616, x18)

inst_625:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa86c4594097a9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fea86c4594097a9; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1632, x18)

inst_626:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xa86c4594097a9 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0x7fea86c4594097a9; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1648, x18)

inst_627:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa86c4594097a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc45cc3d79cddb and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fea86c4594097a9; op2val:0xc45cc3d79cddb; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1664, x18)

inst_628:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1680, x18)

inst_629:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5389d1433ac87 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5389d1433ac87; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1696, x18)

inst_630:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x5389d1433ac87 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0x7fb5389d1433ac87; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1712, x18)

inst_631:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5389d1433ac87 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xbd5fdfc44e580 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5389d1433ac87; op2val:0x2bd5fdfc44e580; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1728, x18)

inst_632:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1744, x18)

inst_633:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa86c4594097a9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fea86c4594097a9; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1760, x18)

inst_634:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xa86c4594097a9 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0x7fea86c4594097a9; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1776, x18)
addi x16,x16,2032

inst_635:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa86c4594097a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x7d53a47591bb8 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fea86c4594097a9; op2val:0x7d53a47591bb8; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 0, x17, x15, 1792, x18)

inst_636:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 16, x17, x15, 1808, x18)

inst_637:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa86c4594097a9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fea86c4594097a9; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 32, x17, x15, 1824, x18)

inst_638:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xa86c4594097a9 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0x7fea86c4594097a9; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 48, x17, x15, 1840, x18)

inst_639:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa86c4594097a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xacce25b46ca92 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fea86c4594097a9; op2val:0xacce25b46ca92; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 64, x17, x15, 1856, x18)

inst_640:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 80, x17, x15, 1872, x18)

inst_641:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa86c4594097a9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fea86c4594097a9; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 96, x17, x15, 1888, x18)

inst_642:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xa86c4594097a9 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0x7fea86c4594097a9; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 112, x17, x15, 1904, x18)

inst_643:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa86c4594097a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc5bc46ffcb5d2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fea86c4594097a9; op2val:0xc5bc46ffcb5d2; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 128, x17, x15, 1920, x18)

inst_644:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xab73739b529c7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xab73739b529c7; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 144, x17, x15, 1936, x18)

inst_645:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 160, x17, x15, 1952, x18)

inst_646:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x422095a1629ee and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x3ff422095a1629ee; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 176, x17, x15, 1968, x18)

inst_647:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x0; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 192, x17, x15, 1984, x18)

inst_648:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x90c5811d4ea06 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x90c5811d4ea06; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 208, x17, x15, 2000, x18)

inst_649:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 224, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_8)

inst_650:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 240, x17, x15, 0, x18)

inst_651:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01729d737e39f and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x1729d737e39f; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 256, x17, x15, 16, x18)

inst_652:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01729d737e39f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1729d737e39f; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 272, x17, x15, 32, x18)

inst_653:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 288, x17, x15, 48, x18)

inst_654:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 304, x17, x15, 64, x18)

inst_655:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 320, x17, x15, 80, x18)

inst_656:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 336, x17, x15, 96, x18)

inst_657:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 352, x17, x15, 112, x18)

inst_658:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 368, x17, x15, 128, x18)

inst_659:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 384, x17, x15, 144, x18)

inst_660:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 400, x17, x15, 160, x18)

inst_661:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 416, x17, x15, 176, x18)

inst_662:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 432, x17, x15, 192, x18)

inst_663:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 448, x17, x15, 208, x18)

inst_664:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x90c5811d4ea06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x90c5811d4ea06; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 464, x17, x15, 224, x18)

inst_665:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 480, x17, x15, 240, x18)

inst_666:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x1eb3ea9eb0abd and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x7fb1eb3ea9eb0abd; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 496, x17, x15, 256, x18)

inst_667:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1eb3ea9eb0abd and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb1eb3ea9eb0abd; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 512, x17, x15, 272, x18)

inst_668:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e46ff3af089e and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x1eb3ea9eb0abd and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e46ff3af089e; op2val:0x7fb1eb3ea9eb0abd; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 528, x17, x15, 288, x18)

inst_669:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1eb3ea9eb0abd and fs2 == 1 and fe2 == 0x000 and fm2 == 0x5e46ff3af089e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb1eb3ea9eb0abd; op2val:0x8005e46ff3af089e; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 544, x17, x15, 304, x18)

inst_670:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 560, x17, x15, 320, x18)

inst_671:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x6660e5465cd6d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x7fe6660e5465cd6d; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 576, x17, x15, 336, x18)

inst_672:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6660e5465cd6d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe6660e5465cd6d; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 592, x17, x15, 352, x18)

inst_673:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0c8b23887d51e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x6660e5465cd6d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000c8b23887d51e; op2val:0x7fe6660e5465cd6d; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 608, x17, x15, 368, x18)

inst_674:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6660e5465cd6d and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0c8b23887d51e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe6660e5465cd6d; op2val:0x8000c8b23887d51e; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 624, x17, x15, 384, x18)

inst_675:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 640, x17, x15, 400, x18)

inst_676:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1eb3ea9eb0abd and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb1eb3ea9eb0abd; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 656, x17, x15, 416, x18)

inst_677:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x51532237be62c and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x1eb3ea9eb0abd and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80051532237be62c; op2val:0x7fb1eb3ea9eb0abd; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 672, x17, x15, 432, x18)

inst_678:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1eb3ea9eb0abd and fs2 == 1 and fe2 == 0x000 and fm2 == 0x51532237be62c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb1eb3ea9eb0abd; op2val:0x80051532237be62c; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 688, x17, x15, 448, x18)

inst_679:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 704, x17, x15, 464, x18)

inst_680:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1eb3ea9eb0abd and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb1eb3ea9eb0abd; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 720, x17, x15, 480, x18)

inst_681:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x369be8c5e3b80 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x1eb3ea9eb0abd and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800369be8c5e3b80; op2val:0x7fb1eb3ea9eb0abd; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 736, x17, x15, 496, x18)

inst_682:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1eb3ea9eb0abd and fs2 == 1 and fe2 == 0x000 and fm2 == 0x369be8c5e3b80 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb1eb3ea9eb0abd; op2val:0x800369be8c5e3b80; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 752, x17, x15, 512, x18)

inst_683:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 768, x17, x15, 528, x18)

inst_684:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x7f7 and fm2 == 0xcab977644ddfc and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x7f7cab977644ddfc; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 784, x17, x15, 544, x18)

inst_685:// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0xcab977644ddfc and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f7cab977644ddfc; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 800, x17, x15, 560, x18)

inst_686:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6be865c2463a7 and fs2 == 0 and fe2 == 0x7f7 and fm2 == 0xcab977644ddfc and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006be865c2463a7; op2val:0x7f7cab977644ddfc; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 816, x17, x15, 576, x18)

inst_687:// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0xcab977644ddfc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x6be865c2463a7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f7cab977644ddfc; op2val:0x8006be865c2463a7; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 832, x17, x15, 592, x18)

inst_688:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 848, x17, x15, 608, x18)

inst_689:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6660e5465cd6d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe6660e5465cd6d; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 864, x17, x15, 624, x18)

inst_690:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x13a2e0625c7c9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x6660e5465cd6d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x13a2e0625c7c9; op2val:0x7fe6660e5465cd6d; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 880, x17, x15, 640, x18)

inst_691:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6660e5465cd6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x13a2e0625c7c9 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe6660e5465cd6d; op2val:0x13a2e0625c7c9; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 896, x17, x15, 656, x18)

inst_692:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 912, x17, x15, 672, x18)

inst_693:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1eb3ea9eb0abd and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb1eb3ea9eb0abd; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 928, x17, x15, 688, x18)

inst_694:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x59132cc0dc780 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x1eb3ea9eb0abd and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x59132cc0dc780; op2val:0x7fb1eb3ea9eb0abd; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 944, x17, x15, 704, x18)

inst_695:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1eb3ea9eb0abd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x59132cc0dc780 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb1eb3ea9eb0abd; op2val:0x59132cc0dc780; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 960, x17, x15, 720, x18)

inst_696:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 976, x17, x15, 736, x18)

inst_697:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6660e5465cd6d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe6660e5465cd6d; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 992, x17, x15, 752, x18)

inst_698:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0c885d3ef4f92 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x6660e5465cd6d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc885d3ef4f92; op2val:0x7fe6660e5465cd6d; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1008, x17, x15, 768, x18)

inst_699:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6660e5465cd6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0c885d3ef4f92 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe6660e5465cd6d; op2val:0xc885d3ef4f92; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1024, x17, x15, 784, x18)

inst_700:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1040, x17, x15, 800, x18)

inst_701:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6660e5465cd6d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe6660e5465cd6d; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1056, x17, x15, 816, x18)

inst_702:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1147d0920addb and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x6660e5465cd6d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1147d0920addb; op2val:0x7fe6660e5465cd6d; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1072, x17, x15, 832, x18)

inst_703:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6660e5465cd6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x1147d0920addb and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe6660e5465cd6d; op2val:0x1147d0920addb; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1088, x17, x15, 848, x18)

inst_704:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1104, x17, x15, 864, x18)

inst_705:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6660e5465cd6d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe6660e5465cd6d; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1120, x17, x15, 880, x18)

inst_706:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x13c6071994562 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x6660e5465cd6d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x13c6071994562; op2val:0x7fe6660e5465cd6d; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1136, x17, x15, 896, x18)

inst_707:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6660e5465cd6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x13c6071994562 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe6660e5465cd6d; op2val:0x13c6071994562; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1152, x17, x15, 912, x18)

inst_708:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0e7a2682ee434 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xe7a2682ee434; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1168, x17, x15, 928, x18)

inst_709:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1184, x17, x15, 944, x18)

inst_710:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x0637b0487519a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0xc020637b0487519a; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1200, x17, x15, 960, x18)

inst_711:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x0; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1216, x17, x15, 976, x18)

inst_712:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd762fc26b2b18 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x802d762fc26b2b18; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1232, x17, x15, 992, x18)

inst_713:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1248, x17, x15, 1008, x18)

inst_714:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1264, x17, x15, 1024, x18)

inst_715:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x096d7fec4b410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x800096d7fec4b410; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1280, x17, x15, 1040, x18)

inst_716:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x096d7fec4b410 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800096d7fec4b410; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1296, x17, x15, 1056, x18)

inst_717:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1312, x17, x15, 1072, x18)

inst_718:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1328, x17, x15, 1088, x18)

inst_719:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1344, x17, x15, 1104, x18)

inst_720:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1360, x17, x15, 1120, x18)

inst_721:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1376, x17, x15, 1136, x18)

inst_722:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1392, x17, x15, 1152, x18)

inst_723:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1408, x17, x15, 1168, x18)

inst_724:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x5e46ff3af089e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x8005e46ff3af089e; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1424, x17, x15, 1184, x18)

inst_725:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e46ff3af089e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e46ff3af089e; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1200, x18)

inst_726:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1216, x18)

inst_727:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1232, x18)

inst_728:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1248, x18)

inst_729:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1264, x18)

inst_730:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1280, x18)

inst_731:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd762fc26b2b18 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d762fc26b2b18; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1296, x18)

inst_732:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1312, x18)

inst_733:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e46ff3af089e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e46ff3af089e; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1328, x18)

inst_734:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1344, x18)

inst_735:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1360, x18)

inst_736:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf0d1987a81166 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaf0d1987a81166; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1376, x18)

inst_737:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf0d1987a81166 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xffaf0d1987a81166; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1392, x18)

inst_738:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1408, x18)

inst_739:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1424, x18)

inst_740:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1440, x18)

inst_741:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1456, x18)

inst_742:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1472, x18)

inst_743:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x7569006cfbae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0xffa7569006cfbae0; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1488, x18)

inst_744:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0x7569006cfbae0 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffa7569006cfbae0; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1504, x18)

inst_745:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0b1f8e609ac8a and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x7569006cfbae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0b1f8e609ac8a; op2val:0xffa7569006cfbae0; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1520, x18)

inst_746:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0x7569006cfbae0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0b1f8e609ac8a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffa7569006cfbae0; op2val:0xffe0b1f8e609ac8a; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1536, x18)

inst_747:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1552, x18)

inst_748:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x84df54aca644b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb84df54aca644b; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1568, x18)

inst_749:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x84df54aca644b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7fb84df54aca644b; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1584, x18)

inst_750:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1600, x18)

inst_751:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1616, x18)

inst_752:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1632, x18)

inst_753:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf063b3af54c9d and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7faf063b3af54c9d; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1648, x18)

inst_754:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fa and fm2 == 0xf063b3af54c9d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7faf063b3af54c9d; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1664, x18)

inst_755:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1680, x18)

inst_756:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5638683bdb69a and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5638683bdb69a; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1696, x18)

inst_757:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x5638683bdb69a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7fb5638683bdb69a; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1712, x18)

inst_758:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1728, x18)

inst_759:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x879775929758a and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb879775929758a; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1744, x18)

inst_760:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x879775929758a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7fb879775929758a; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1760, x18)

inst_761:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2c340883a998 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2c340883a998; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1776, x18)
addi x16,x16,2032

inst_762:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 0, x17, x15, 1792, x18)

inst_763:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x171a35c491d80 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0xbff171a35c491d80; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 16, x17, x15, 1808, x18)

inst_764:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x0; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 32, x17, x15, 1824, x18)

inst_765:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x7d6f6354e532b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x8007d6f6354e532b; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 48, x17, x15, 1840, x18)

inst_766:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 64, x17, x15, 1856, x18)

inst_767:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 80, x17, x15, 1872, x18)

inst_768:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x01411d273fbb6 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x80001411d273fbb6; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 96, x17, x15, 1888, x18)

inst_769:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x01411d273fbb6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80001411d273fbb6; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 112, x17, x15, 1904, x18)

inst_770:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 128, x17, x15, 1920, x18)

inst_771:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 144, x17, x15, 1936, x18)

inst_772:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 160, x17, x15, 1952, x18)

inst_773:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 176, x17, x15, 1968, x18)

inst_774:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 192, x17, x15, 1984, x18)

inst_775:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 208, x17, x15, 2000, x18)

inst_776:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 224, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_9)

inst_777:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0c8b23887d51e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x8000c8b23887d51e; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 240, x17, x15, 0, x18)

inst_778:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0c8b23887d51e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000c8b23887d51e; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 256, x17, x15, 16, x18)

inst_779:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 272, x17, x15, 32, x18)

inst_780:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 288, x17, x15, 48, x18)

inst_781:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 304, x17, x15, 64, x18)

inst_782:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 320, x17, x15, 80, x18)

inst_783:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 336, x17, x15, 96, x18)

inst_784:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x7d6f6354e532b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8007d6f6354e532b; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 352, x17, x15, 112, x18)

inst_785:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 368, x17, x15, 128, x18)

inst_786:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0c8b23887d51e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000c8b23887d51e; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 384, x17, x15, 144, x18)

inst_787:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 400, x17, x15, 160, x18)

inst_788:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf0d1987a81166 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0xffaf0d1987a81166; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 416, x17, x15, 176, x18)

inst_789:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf0d1987a81166 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaf0d1987a81166; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 432, x17, x15, 192, x18)

inst_790:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 448, x17, x15, 208, x18)

inst_791:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf0d1987a81166 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaf0d1987a81166; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 464, x17, x15, 224, x18)

inst_792:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 480, x17, x15, 240, x18)

inst_793:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf0d1987a81166 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaf0d1987a81166; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 496, x17, x15, 256, x18)

inst_794:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 512, x17, x15, 272, x18)

inst_795:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0x8d7479fb9a785 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0xff78d7479fb9a785; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 528, x17, x15, 288, x18)

inst_796:// fs1 == 1 and fe1 == 0x7f7 and fm1 == 0x8d7479fb9a785 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff78d7479fb9a785; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 544, x17, x15, 304, x18)

inst_797:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0x8d7479fb9a785 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xff78d7479fb9a785; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 560, x17, x15, 320, x18)

inst_798:// fs1 == 1 and fe1 == 0x7f7 and fm1 == 0x8d7479fb9a785 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff78d7479fb9a785; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 576, x17, x15, 336, x18)

inst_799:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 592, x17, x15, 352, x18)

inst_800:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 608, x17, x15, 368, x18)

inst_801:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 624, x17, x15, 384, x18)

inst_802:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf0d1987a81166 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaf0d1987a81166; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 640, x17, x15, 400, x18)

inst_803:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf0d1987a81166 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0xffaf0d1987a81166; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 656, x17, x15, 416, x18)

inst_804:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xf0d1987a81166 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaf0d1987a81166; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 672, x17, x15, 432, x18)

inst_805:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 688, x17, x15, 448, x18)

inst_806:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 704, x17, x15, 464, x18)

inst_807:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 720, x17, x15, 480, x18)

inst_808:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 736, x17, x15, 496, x18)

inst_809:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 752, x17, x15, 512, x18)

inst_810:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x3682ff4c90ae0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe3682ff4c90ae0; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 768, x17, x15, 528, x18)

inst_811:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 784, x17, x15, 544, x18)

inst_812:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 800, x17, x15, 560, x18)

inst_813:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc4624671f2f0c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0xc01c4624671f2f0c; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 816, x17, x15, 576, x18)

inst_814:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x0; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 832, x17, x15, 592, x18)

inst_815:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x002 and fm2 == 0x969fab16b7edc and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x802969fab16b7edc; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 848, x17, x15, 608, x18)

inst_816:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 864, x17, x15, 624, x18)

inst_817:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 880, x17, x15, 640, x18)

inst_818:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0821e9d25fd6b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x8000821e9d25fd6b; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 896, x17, x15, 656, x18)

inst_819:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0821e9d25fd6b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000821e9d25fd6b; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 912, x17, x15, 672, x18)

inst_820:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 928, x17, x15, 688, x18)

inst_821:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 944, x17, x15, 704, x18)

inst_822:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 960, x17, x15, 720, x18)

inst_823:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 976, x17, x15, 736, x18)

inst_824:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 992, x17, x15, 752, x18)

inst_825:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1008, x17, x15, 768, x18)

inst_826:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1024, x17, x15, 784, x18)

inst_827:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x000 and fm2 == 0x51532237be62c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x80051532237be62c; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1040, x17, x15, 800, x18)

inst_828:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x51532237be62c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80051532237be62c; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1056, x17, x15, 816, x18)

inst_829:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1072, x17, x15, 832, x18)

inst_830:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1088, x17, x15, 848, x18)

inst_831:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1104, x17, x15, 864, x18)

inst_832:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1120, x17, x15, 880, x18)

inst_833:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1136, x17, x15, 896, x18)

inst_834:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x969fab16b7edc and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802969fab16b7edc; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1152, x17, x15, 912, x18)

inst_835:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1168, x17, x15, 928, x18)

inst_836:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x51532237be62c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x80051532237be62c; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1184, x17, x15, 944, x18)

inst_837:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1200, x17, x15, 960, x18)

inst_838:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1216, x17, x15, 976, x18)

inst_839:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1232, x17, x15, 992, x18)

inst_840:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1248, x17, x15, 1008, x18)

inst_841:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1264, x17, x15, 1024, x18)

inst_842:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x421ba72f8a718 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0xffa421ba72f8a718; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1280, x17, x15, 1040, x18)

inst_843:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0x421ba72f8a718 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffa421ba72f8a718; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1296, x17, x15, 1056, x18)

inst_844:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0b1f8e609ac8a and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x421ba72f8a718 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0b1f8e609ac8a; op2val:0xffa421ba72f8a718; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1312, x17, x15, 1072, x18)

inst_845:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0x421ba72f8a718 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0b1f8e609ac8a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffa421ba72f8a718; op2val:0xffe0b1f8e609ac8a; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1328, x17, x15, 1088, x18)

inst_846:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1344, x17, x15, 1104, x18)

inst_847:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1360, x17, x15, 1120, x18)

inst_848:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1376, x17, x15, 1136, x18)

inst_849:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1392, x17, x15, 1152, x18)

inst_850:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1408, x17, x15, 1168, x18)

inst_851:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1424, x17, x15, 1184, x18)

inst_852:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x92a290fb6d0de and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd92a290fb6d0de; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1200, x18)

inst_853:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1216, x18)

inst_854:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2fc5d39f551da and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0xc012fc5d39f551da; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1232, x18)

inst_855:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x0; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1248, x18)

inst_856:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x002 and fm2 == 0x110b8bdd7297e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x802110b8bdd7297e; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1264, x18)

inst_857:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1280, x18)

inst_858:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1296, x18)

inst_859:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0575fdad63926 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x8000575fdad63926; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1312, x18)

inst_860:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0575fdad63926 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000575fdad63926; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1328, x18)

inst_861:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1344, x18)

inst_862:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1360, x18)

inst_863:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1376, x18)

inst_864:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1392, x18)

inst_865:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1408, x18)

inst_866:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1424, x18)

inst_867:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1440, x18)

inst_868:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x000 and fm2 == 0x369be8c5e3b80 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x800369be8c5e3b80; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1456, x18)

inst_869:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x369be8c5e3b80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800369be8c5e3b80; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1472, x18)

inst_870:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1488, x18)

inst_871:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1504, x18)

inst_872:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1520, x18)

inst_873:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1536, x18)

inst_874:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1552, x18)

inst_875:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x110b8bdd7297e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x802110b8bdd7297e; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1568, x18)

inst_876:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1584, x18)

inst_877:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x369be8c5e3b80 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x800369be8c5e3b80; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1600, x18)

inst_878:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1616, x18)

inst_879:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1632, x18)

inst_880:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1648, x18)

inst_881:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0xb096368d864aa and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0xff9b096368d864aa; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1664, x18)

inst_882:// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0xb096368d864aa and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff9b096368d864aa; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1680, x18)

inst_883:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0b1f8e609ac8a and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0xb096368d864aa and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0b1f8e609ac8a; op2val:0xff9b096368d864aa; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1696, x18)

inst_884:// fs1 == 1 and fe1 == 0x7f9 and fm1 == 0xb096368d864aa and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0b1f8e609ac8a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xff9b096368d864aa; op2val:0xffe0b1f8e609ac8a; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1712, x18)

inst_885:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1728, x18)

inst_886:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1744, x18)

inst_887:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1760, x18)

inst_888:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1776, x18)
addi x16,x16,2032

inst_889:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 0, x17, x15, 1792, x18)

inst_890:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 16, x17, x15, 1808, x18)

inst_891:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x0e5de21873eea and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd0e5de21873eea; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 32, x17, x15, 1824, x18)

inst_892:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 48, x17, x15, 1840, x18)

inst_893:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2c20e7e96fa8e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0xc022c20e7e96fa8e; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 64, x17, x15, 1856, x18)

inst_894:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x0; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 80, x17, x15, 1872, x18)

inst_895:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0dc4fe65af923 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x8030dc4fe65af923; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 96, x17, x15, 1888, x18)

inst_896:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 112, x17, x15, 1904, x18)

inst_897:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 128, x17, x15, 1920, x18)

inst_898:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0aca70936d6c4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x8000aca70936d6c4; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 144, x17, x15, 1936, x18)

inst_899:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0aca70936d6c4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000aca70936d6c4; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 160, x17, x15, 1952, x18)

inst_900:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 176, x17, x15, 1968, x18)

inst_901:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 192, x17, x15, 1984, x18)

inst_902:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 208, x17, x15, 2000, x18)

inst_903:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 224, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_10)

inst_904:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 240, x17, x15, 0, x18)

inst_905:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 256, x17, x15, 16, x18)

inst_906:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 272, x17, x15, 32, x18)

inst_907:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x6be865c2463a7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x8006be865c2463a7; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 288, x17, x15, 48, x18)

inst_908:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6be865c2463a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006be865c2463a7; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 304, x17, x15, 64, x18)

inst_909:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 320, x17, x15, 80, x18)

inst_910:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 336, x17, x15, 96, x18)

inst_911:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 352, x17, x15, 112, x18)

inst_912:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 368, x17, x15, 128, x18)

inst_913:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 384, x17, x15, 144, x18)

inst_914:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0dc4fe65af923 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030dc4fe65af923; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 400, x17, x15, 160, x18)

inst_915:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 416, x17, x15, 176, x18)

inst_916:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6be865c2463a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006be865c2463a7; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 432, x17, x15, 192, x18)

inst_917:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 448, x17, x15, 208, x18)

inst_918:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0b1f8e609ac8a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0xffe0b1f8e609ac8a; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 464, x17, x15, 224, x18)

inst_919:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0b1f8e609ac8a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0b1f8e609ac8a; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 480, x17, x15, 240, x18)

inst_920:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 496, x17, x15, 256, x18)

inst_921:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 512, x17, x15, 272, x18)

inst_922:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 528, x17, x15, 288, x18)

inst_923:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0b1f8e609ac8a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0b1f8e609ac8a; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 544, x17, x15, 304, x18)

inst_924:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 560, x17, x15, 320, x18)

inst_925:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0b1f8e609ac8a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0b1f8e609ac8a; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 576, x17, x15, 336, x18)

inst_926:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 592, x17, x15, 352, x18)

inst_927:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x3719108a1e9d6 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f83719108a1e9d6; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 608, x17, x15, 368, x18)

inst_928:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x3719108a1e9d6 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7f83719108a1e9d6; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 624, x17, x15, 384, x18)

inst_929:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 640, x17, x15, 400, x18)

inst_930:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0b1f8e609ac8a and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0b1f8e609ac8a; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 656, x17, x15, 416, x18)

inst_931:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x60cdf84161249 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0b1f8e609ac8a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fa60cdf84161249; op2val:0xffe0b1f8e609ac8a; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 672, x17, x15, 432, x18)

inst_932:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0b1f8e609ac8a and fs2 == 0 and fe2 == 0x7fa and fm2 == 0x60cdf84161249 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0b1f8e609ac8a; op2val:0x7fa60cdf84161249; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 688, x17, x15, 448, x18)

inst_933:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 704, x17, x15, 464, x18)

inst_934:// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0x8d1c8fbf7707e and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f78d1c8fbf7707e; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 720, x17, x15, 480, x18)

inst_935:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7f7 and fm2 == 0x8d1c8fbf7707e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7f78d1c8fbf7707e; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 736, x17, x15, 496, x18)

inst_936:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 752, x17, x15, 512, x18)

inst_937:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x11c6b9c97c548 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f811c6b9c97c548; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 768, x17, x15, 528, x18)

inst_938:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x11c6b9c97c548 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7f811c6b9c97c548; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 784, x17, x15, 544, x18)

inst_939:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 800, x17, x15, 560, x18)

inst_940:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x3945f7a87913c and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f83945f7a87913c; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 816, x17, x15, 576, x18)

inst_941:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x3945f7a87913c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7f83945f7a87913c; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 832, x17, x15, 592, x18)

inst_942:// fs1 == 1 and fe1 == 0x7fa and fm1 == 0xab65b09a91410 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xffaab65b09a91410; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 848, x17, x15, 608, x18)

inst_943:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 864, x17, x15, 624, x18)

inst_944:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb4ebb70505c5a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x3ffb4ebb70505c5a; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 880, x17, x15, 640, x18)

inst_945:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x0; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 896, x17, x15, 656, x18)

inst_946:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc45cc3d79cddb and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0xc45cc3d79cddb; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 912, x17, x15, 672, x18)

inst_947:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 928, x17, x15, 688, x18)

inst_948:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 944, x17, x15, 704, x18)

inst_949:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01f6b009d60c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x1f6b009d60c7; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 960, x17, x15, 720, x18)

inst_950:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01f6b009d60c7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1f6b009d60c7; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 976, x17, x15, 736, x18)

inst_951:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 992, x17, x15, 752, x18)

inst_952:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1008, x17, x15, 768, x18)

inst_953:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1024, x17, x15, 784, x18)

inst_954:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1040, x17, x15, 800, x18)

inst_955:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1056, x17, x15, 816, x18)

inst_956:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1072, x17, x15, 832, x18)

inst_957:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1088, x17, x15, 848, x18)

inst_958:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x13a2e0625c7c9 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x13a2e0625c7c9; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1104, x17, x15, 864, x18)

inst_959:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x13a2e0625c7c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x13a2e0625c7c9; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1120, x17, x15, 880, x18)

inst_960:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1136, x17, x15, 896, x18)

inst_961:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1152, x17, x15, 912, x18)

inst_962:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1168, x17, x15, 928, x18)

inst_963:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1184, x17, x15, 944, x18)

inst_964:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1200, x17, x15, 960, x18)

inst_965:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc45cc3d79cddb and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc45cc3d79cddb; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1216, x17, x15, 976, x18)

inst_966:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1232, x17, x15, 992, x18)

inst_967:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x13a2e0625c7c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x13a2e0625c7c9; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1248, x17, x15, 1008, x18)

inst_968:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1264, x17, x15, 1024, x18)

inst_969:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x84df54aca644b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x7fb84df54aca644b; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1280, x17, x15, 1040, x18)

inst_970:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x84df54aca644b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb84df54aca644b; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1296, x17, x15, 1056, x18)

inst_971:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1312, x17, x15, 1072, x18)

inst_972:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x84df54aca644b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb84df54aca644b; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1328, x17, x15, 1088, x18)

inst_973:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1344, x17, x15, 1104, x18)

inst_974:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x84df54aca644b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb84df54aca644b; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1360, x17, x15, 1120, x18)

inst_975:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1376, x17, x15, 1136, x18)

inst_976:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x3719108a1e9d6 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x7f83719108a1e9d6; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1392, x17, x15, 1152, x18)

inst_977:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x3719108a1e9d6 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f83719108a1e9d6; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1408, x17, x15, 1168, x18)

inst_978:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1424, x17, x15, 1184, x18)

inst_979:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x84df54aca644b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb84df54aca644b; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1200, x18)

inst_980:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x84df54aca644b and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7fb84df54aca644b; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1216, x18)

inst_981:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x84df54aca644b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb84df54aca644b; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1232, x18)

inst_982:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1248, x18)

inst_983:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1264, x18)

inst_984:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1280, x18)

inst_985:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1296, x18)

inst_986:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1312, x18)

inst_987:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee61729d7cfd5e; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1328, x18)

inst_988:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1344, x18)

inst_989:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1360, x18)

inst_990:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x401 and fm2 == 0xef7eded580ce9 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x401ef7eded580ce9; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1376, x18)

inst_991:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x0; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1392, x18)

inst_992:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x002 and fm2 == 0xbd5fdfc44e580 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x2bd5fdfc44e580; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1408, x18)

inst_993:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1424, x18)

inst_994:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1440, x18)

inst_995:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x08e851467c726 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x8e851467c726; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1456, x18)

inst_996:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x08e851467c726 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x8e851467c726; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1472, x18)

inst_997:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1488, x18)

inst_998:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1504, x18)

inst_999:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1520, x18)

inst_1000:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1536, x18)

inst_1001:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1552, x18)

inst_1002:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1568, x18)

inst_1003:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1584, x18)

inst_1004:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x59132cc0dc780 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x59132cc0dc780; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1600, x18)

inst_1005:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x59132cc0dc780 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x59132cc0dc780; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1616, x18)

inst_1006:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1632, x18)

inst_1007:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1648, x18)

inst_1008:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1664, x18)

inst_1009:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1680, x18)

inst_1010:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1696, x18)

inst_1011:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xbd5fdfc44e580 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x2bd5fdfc44e580; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1712, x18)

inst_1012:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1728, x18)

inst_1013:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x59132cc0dc780 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x59132cc0dc780; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1744, x18)

inst_1014:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1760, x18)

inst_1015:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1776, x18)
addi x16,x16,2032

inst_1016:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3682ff4c90ae0 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0xffe3682ff4c90ae0; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 0, x17, x15, 1792, x18)

inst_1017:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x7fa and fm2 == 0x60cdf84161249 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x7fa60cdf84161249; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 16, x17, x15, 1808, x18)

inst_1018:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x60cdf84161249 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fa60cdf84161249; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 32, x17, x15, 1824, x18)

inst_1019:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 48, x17, x15, 1840, x18)

inst_1020:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe61729d7cfd5e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x7fee61729d7cfd5e; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 64, x17, x15, 1856, x18)

inst_1021:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf063b3af54c9d and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7faf063b3af54c9d; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 80, x17, x15, 1872, x18)

inst_1022:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fa and fm2 == 0xf063b3af54c9d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7faf063b3af54c9d; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 96, x17, x15, 1888, x18)

inst_1023:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 112, x17, x15, 1904, x18)

inst_1024:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5638683bdb69a and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5638683bdb69a; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 128, x17, x15, 1920, x18)

inst_1025:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x5638683bdb69a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7fb5638683bdb69a; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 144, x17, x15, 1936, x18)

inst_1026:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 160, x17, x15, 1952, x18)

inst_1027:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x879775929758a and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb879775929758a; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 176, x17, x15, 1968, x18)

inst_1028:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x879775929758a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7fb879775929758a; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 192, x17, x15, 1984, x18)

inst_1029:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdb9017651b96db; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 208, x17, x15, 2000, x18)

inst_1030:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 224, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_11)

inst_1031:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x16dc795a2b73d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x3ff16dc795a2b73d; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 240, x17, x15, 0, x18)

inst_1032:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x0; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 256, x17, x15, 16, x18)

inst_1033:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x7d53a47591bb8 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x7d53a47591bb8; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 272, x17, x15, 32, x18)

inst_1034:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 288, x17, x15, 48, x18)

inst_1035:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 304, x17, x15, 64, x18)

inst_1036:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0140d61fe54c2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x140d61fe54c2; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 320, x17, x15, 80, x18)

inst_1037:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0140d61fe54c2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x140d61fe54c2; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 336, x17, x15, 96, x18)

inst_1038:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 352, x17, x15, 112, x18)

inst_1039:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 368, x17, x15, 128, x18)

inst_1040:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 384, x17, x15, 144, x18)

inst_1041:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 400, x17, x15, 160, x18)

inst_1042:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 416, x17, x15, 176, x18)

inst_1043:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 432, x17, x15, 192, x18)

inst_1044:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 448, x17, x15, 208, x18)

inst_1045:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0c885d3ef4f92 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0xc885d3ef4f92; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 464, x17, x15, 224, x18)

inst_1046:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0c885d3ef4f92 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc885d3ef4f92; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 480, x17, x15, 240, x18)

inst_1047:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 496, x17, x15, 256, x18)

inst_1048:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 512, x17, x15, 272, x18)

inst_1049:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 528, x17, x15, 288, x18)

inst_1050:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 544, x17, x15, 304, x18)

inst_1051:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 560, x17, x15, 320, x18)

inst_1052:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x7d53a47591bb8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7d53a47591bb8; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 576, x17, x15, 336, x18)

inst_1053:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 592, x17, x15, 352, x18)

inst_1054:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0c885d3ef4f92 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc885d3ef4f92; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 608, x17, x15, 368, x18)

inst_1055:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 624, x17, x15, 384, x18)

inst_1056:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x7fa and fm2 == 0xf063b3af54c9d and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x7faf063b3af54c9d; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 640, x17, x15, 400, x18)

inst_1057:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf063b3af54c9d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7faf063b3af54c9d; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 656, x17, x15, 416, x18)

inst_1058:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 672, x17, x15, 432, x18)

inst_1059:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf063b3af54c9d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7faf063b3af54c9d; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 688, x17, x15, 448, x18)

inst_1060:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 704, x17, x15, 464, x18)

inst_1061:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf063b3af54c9d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7faf063b3af54c9d; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 720, x17, x15, 480, x18)

inst_1062:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 736, x17, x15, 496, x18)

inst_1063:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x7f7 and fm2 == 0x8d1c8fbf7707e and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x7f78d1c8fbf7707e; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 752, x17, x15, 512, x18)

inst_1064:// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0x8d1c8fbf7707e and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f78d1c8fbf7707e; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 768, x17, x15, 528, x18)

inst_1065:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 784, x17, x15, 544, x18)

inst_1066:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf063b3af54c9d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7faf063b3af54c9d; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 800, x17, x15, 560, x18)

inst_1067:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 816, x17, x15, 576, x18)

inst_1068:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 832, x17, x15, 592, x18)

inst_1069:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 848, x17, x15, 608, x18)

inst_1070:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe363e504d94fe2; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 864, x17, x15, 624, x18)

inst_1071:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x363e504d94fe2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x7fe363e504d94fe2; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 880, x17, x15, 640, x18)

inst_1072:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 896, x17, x15, 656, x18)

inst_1073:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80812523614ab and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x3ff80812523614ab; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 912, x17, x15, 672, x18)

inst_1074:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x0; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 928, x17, x15, 688, x18)

inst_1075:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xacce25b46ca92 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0xacce25b46ca92; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 944, x17, x15, 704, x18)

inst_1076:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 960, x17, x15, 720, x18)

inst_1077:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 976, x17, x15, 736, x18)

inst_1078:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01ba61a834496 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x1ba61a834496; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 992, x17, x15, 752, x18)

inst_1079:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01ba61a834496 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ba61a834496; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1008, x17, x15, 768, x18)

inst_1080:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1024, x17, x15, 784, x18)

inst_1081:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1040, x17, x15, 800, x18)

inst_1082:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1056, x17, x15, 816, x18)

inst_1083:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1072, x17, x15, 832, x18)

inst_1084:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1088, x17, x15, 848, x18)

inst_1085:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1104, x17, x15, 864, x18)

inst_1086:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1120, x17, x15, 880, x18)

inst_1087:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x1147d0920addb and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x1147d0920addb; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1136, x17, x15, 896, x18)

inst_1088:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1147d0920addb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1147d0920addb; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1152, x17, x15, 912, x18)

inst_1089:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1168, x17, x15, 928, x18)

inst_1090:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1184, x17, x15, 944, x18)

inst_1091:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1200, x17, x15, 960, x18)

inst_1092:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1216, x17, x15, 976, x18)

inst_1093:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1232, x17, x15, 992, x18)

inst_1094:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xacce25b46ca92 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xacce25b46ca92; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1248, x17, x15, 1008, x18)

inst_1095:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1264, x17, x15, 1024, x18)

inst_1096:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x1147d0920addb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1147d0920addb; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1280, x17, x15, 1040, x18)

inst_1097:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1296, x17, x15, 1056, x18)

inst_1098:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x5638683bdb69a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x7fb5638683bdb69a; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1312, x17, x15, 1072, x18)

inst_1099:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5638683bdb69a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5638683bdb69a; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1328, x17, x15, 1088, x18)

inst_1100:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1344, x17, x15, 1104, x18)

inst_1101:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5638683bdb69a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5638683bdb69a; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1360, x17, x15, 1120, x18)

inst_1102:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1376, x17, x15, 1136, x18)

inst_1103:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5638683bdb69a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5638683bdb69a; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1392, x17, x15, 1152, x18)

inst_1104:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1408, x17, x15, 1168, x18)

inst_1105:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x11c6b9c97c548 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x7f811c6b9c97c548; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1424, x17, x15, 1184, x18)

inst_1106:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x11c6b9c97c548 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f811c6b9c97c548; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1200, x18)

inst_1107:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1216, x18)

inst_1108:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5638683bdb69a and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb5638683bdb69a; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1232, x18)

inst_1109:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1248, x18)

inst_1110:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe97d52f73d2ed and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feabc6824ad2440; op2val:0x7fee97d52f73d2ed; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1264, x18)

inst_1111:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabc6824ad2440 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x7feabc6824ad2440; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1280, x18)

inst_1112:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb7f9db1715774 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x3ffb7f9db1715774; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1296, x18)

inst_1113:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x0; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1312, x18)

inst_1114:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0xc5bc46ffcb5d2 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0xc5bc46ffcb5d2; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1328, x18)

inst_1115:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1344, x18)

inst_1116:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 1 and fe2 == 0x000 and fm2 == 0xbb549323294e4 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x800bb549323294e4; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1360, x18)

inst_1117:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01fa33e8f53bd and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x1fa33e8f53bd; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1376, x18)

inst_1118:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01fa33e8f53bd and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x1fa33e8f53bd; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1392, x18)

inst_1119:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0153814fb5b84 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x8000153814fb5b84; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1408, x18)

inst_1120:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1424, x18)

inst_1121:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd7743860024db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x800d7743860024db; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1440, x18)

inst_1122:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1456, x18)

inst_1123:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 1 and fe2 == 0x000 and fm2 == 0xb11df817f3079 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x800b11df817f3079; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1472, x18)

inst_1124:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1488, x18)

inst_1125:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 1 and fe2 == 0x000 and fm2 == 0xea45d43472379 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x800ea45d43472379; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1504, x18)

inst_1126:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x13c6071994562 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x13c6071994562; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1520, x18)

inst_1127:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x13c6071994562 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x13c6071994562; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1536, x18)

inst_1128:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x71e1f6d010ef7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x71e1f6d010ef7; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1552, x18)

inst_1129:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1568, x18)

inst_1130:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0xb91751db871ea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0xb91751db871ea; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1584, x18)

inst_1131:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1600, x18)

inst_1132:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x94c9c955ccc4c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x94c9c955ccc4c; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1616, x18)

inst_1133:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xc5bc46ffcb5d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xc5bc46ffcb5d2; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1632, x18)

inst_1134:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0xab73739b529c7 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0xab73739b529c7; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1648, x18)

inst_1135:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x13c6071994562 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x13c6071994562; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1664, x18)

inst_1136:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0e7a2682ee434 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0xe7a2682ee434; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1680, x18)

inst_1137:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x879775929758a and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x7fb879775929758a; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1696, x18)

inst_1138:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x879775929758a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb879775929758a; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1712, x18)

inst_1139:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2c340883a998 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0xffdd2c340883a998; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1728, x18)

inst_1140:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x879775929758a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb879775929758a; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1744, x18)

inst_1141:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x92a290fb6d0de and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0xffd92a290fb6d0de; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1760, x18)

inst_1142:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x879775929758a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb879775929758a; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1776, x18)
addi x16,x16,2032

inst_1143:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0e5de21873eea and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0xffd0e5de21873eea; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 0, x17, x15, 1792, x18)

inst_1144:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x3945f7a87913c and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x7f83945f7a87913c; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 16, x17, x15, 1808, x18)

inst_1145:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x3945f7a87913c and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7f83945f7a87913c; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 32, x17, x15, 1824, x18)

inst_1146:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xab65b09a91410 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0xffaab65b09a91410; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 48, x17, x15, 1840, x18)

inst_1147:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x879775929758a and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb879775929758a; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 64, x17, x15, 1856, x18)

inst_1148:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xb9017651b96db and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fee97d52f73d2ed; op2val:0x7fdb9017651b96db; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 80, x17, x15, 1872, x18)

inst_1149:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x0; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 96, x17, x15, 1888, x18)

inst_1150:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0xa0d2ebbb9cec0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 1  
// opcode: flt.d ; op1:f10; op2:f11; dest:x12; op1val:0xbffa0d2ebbb9cec0; op2val:0x0; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(flt.d, x12, f10, f11, 0, x16, 112, x17, x15, 1904, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fee97d52f73d2ed
.dword 0x7fee97d52f73d2ed
.dword 0x0
.dword 0x0
.dword 0x0
.dword 0x800bb549323294e4
.dword 0xbffa0d2ebbb9cec0
.dword 0x0
.dword 0x0
.dword 0xbffa0d2ebbb9cec0
.dword 0x0
.dword 0x8000153814fb5b84
.dword 0xbff271665b532bfd
.dword 0x0
.dword 0x0
.dword 0xbff271665b532bfd
.dword 0x0
.dword 0x800d7743860024db
.dword 0xbffdf66a9ea7fbe7
.dword 0x0
.dword 0x0
.dword 0xbffdf66a9ea7fbe7
.dword 0x0
.dword 0x800b11df817f3079
.dword 0xbff8a193aec8d637
.dword 0x0
.dword 0x0
.dword 0xbff8a193aec8d637
.dword 0x0
.dword 0x800ea45d43472379
.dword 0xc0004a31976bdb6f
.dword 0x0
.dword 0x0
.dword 0xc0004a31976bdb6f
.dword 0x0
.dword 0x71e1f6d010ef7
.dword 0x4023cbf277e6ba7f
.dword 0x0
.dword 0x0
.dword 0x4023cbf277e6ba7f
.dword 0x0
.dword 0xb91751db871ea
.dword 0x3ff9bd762d8a6627
.dword 0x0
.dword 0x0
.dword 0x3ff9bd762d8a6627
.dword 0x0
.dword 0x94c9c955ccc4c
.dword 0x3ff4b1096905e83e
.dword 0x0
.dword 0x0
.dword 0x3ff4b1096905e83e
.dword 0x0
.dword 0xab73739b529c7
.dword 0x3ff7d7db8b6fc61f
.dword 0x0
.dword 0x0
.dword 0x3ff7d7db8b6fc61f
.dword 0x0
.dword 0xe7a2682ee434
.dword 0x3ff422095a1629ee
.dword 0x0
.dword 0x0
.dword 0x3ff422095a1629ee
.dword 0x0
.dword 0xffdd2c340883a998
.dword 0xc020637b0487519a
.dword 0x0
.dword 0x0
.dword 0xc020637b0487519a
.dword 0x0
.dword 0xffe3682ff4c90ae0
.dword 0xbff171a35c491d80
.dword 0x0
.dword 0x0
.dword 0xbff171a35c491d80
.dword 0x0
.dword 0xffd92a290fb6d0de
.dword 0xc01c4624671f2f0c
.dword 0x0
.dword 0x0
.dword 0xc01c4624671f2f0c
.dword 0x0
.dword 0xffd0e5de21873eea
.dword 0xc012fc5d39f551da
.dword 0x0
.dword 0x0
.dword 0xc012fc5d39f551da
.dword 0x0
.dword 0xffaab65b09a91410
.dword 0xc022c20e7e96fa8e
.dword 0x0
.dword 0x0
.dword 0xc022c20e7e96fa8e
.dword 0x0
.dword 0x7fee61729d7cfd5e
.dword 0x3ffb4ebb70505c5a
.dword 0x0
.dword 0x0
.dword 0x3ffb4ebb70505c5a
.dword 0x0
.dword 0x7fdb9017651b96db
.dword 0x401ef7eded580ce9
.dword 0x0
.dword 0x0
.dword 0x401ef7eded580ce9
.dword 0x0
.dword 0x7fe363e504d94fe2
.dword 0x3ff16dc795a2b73d
.dword 0x0
.dword 0x0
.dword 0x3ff16dc795a2b73d
.dword 0x0
.dword 0x7feabc6824ad2440
.dword 0x3ff80812523614ab
.dword 0x0
.dword 0x0
.dword 0x3ff80812523614ab
.dword 0x0
.dword 0x7fee97d52f73d2ed
.dword 0x3ffb7f9db1715774
.dword 0x0
.dword 0x0
.dword 0x3ffb7f9db1715774
.dword 0x800bb549323294e4
.dword 0x800bb549323294e4
.dword 0x800bb549323294e4
.dword 0xbffa0d2ebbb9cec0
.dword 0x800bb549323294e4
.dword 0x0
.dword 0x800bb549323294e4
.dword 0x80001df90d4d4e4a
.dword 0x80001df90d4d4e4a
.dword 0x8000153814fb5b84
.dword 0x800849e8322fbf77
.dword 0x80001df90d4d4e4a
.dword 0x80001df90d4d4e4a
.dword 0x800849e8322fbf77
.dword 0x800bb549323294e4
.dword 0x8000153814fb5b84
.dword 0x800bb549323294e4
.dword 0x800d7743860024db
.dword 0x800d7743860024db
.dword 0x800bb549323294e4
.dword 0x800bb549323294e4
.dword 0x800b11df817f3079
.dword 0x800b11df817f3079
.dword 0x800bb549323294e4
.dword 0x800bb549323294e4
.dword 0x800ea45d43472379
.dword 0x800ea45d43472379
.dword 0x800bb549323294e4
.dword 0x800bb549323294e4
.dword 0x80012bba85050ee4
.dword 0x80012bba85050ee4
.dword 0x71e1f6d010ef7
.dword 0x31cb4e9082a569
.dword 0x80012bba85050ee4
.dword 0x80012bba85050ee4
.dword 0x31cb4e9082a569
.dword 0x800bb549323294e4
.dword 0x71e1f6d010ef7
.dword 0x800bb549323294e4
.dword 0xb91751db871ea
.dword 0xb91751db871ea
.dword 0x800bb549323294e4
.dword 0x800bb549323294e4
.dword 0x94c9c955ccc4c
.dword 0x94c9c955ccc4c
.dword 0x800bb549323294e4
.dword 0x800bb549323294e4
.dword 0xab73739b529c7
.dword 0xab73739b529c7
.dword 0x800bb549323294e4
.dword 0x80012bba85050ee4
.dword 0xe7a2682ee434
.dword 0x90c5811d4ea06
.dword 0x80012bba85050ee4
.dword 0x80012bba85050ee4
.dword 0x90c5811d4ea06
.dword 0x800bb549323294e4
.dword 0xe7a2682ee434
.dword 0x800bb549323294e4
.dword 0xffb72fc4fe0e8a0c
.dword 0xffb72fc4fe0e8a0c
.dword 0xffdd2c340883a998
.dword 0x802d762fc26b2b18
.dword 0xffb72fc4fe0e8a0c
.dword 0xffb72fc4fe0e8a0c
.dword 0x802d762fc26b2b18
.dword 0x800bb549323294e4
.dword 0xffdd2c340883a998
.dword 0x800bb549323294e4
.dword 0xffecfbb63d922c8f
.dword 0xffecfbb63d922c8f
.dword 0xffe3682ff4c90ae0
.dword 0x8007d6f6354e532b
.dword 0xffecfbb63d922c8f
.dword 0xffecfbb63d922c8f
.dword 0x8007d6f6354e532b
.dword 0x800bb549323294e4
.dword 0xffe3682ff4c90ae0
.dword 0xffb72fc4fe0e8a0c
.dword 0xffd92a290fb6d0de
.dword 0x802969fab16b7edc
.dword 0xffb72fc4fe0e8a0c
.dword 0xffb72fc4fe0e8a0c
.dword 0x802969fab16b7edc
.dword 0x800bb549323294e4
.dword 0xffd92a290fb6d0de
.dword 0xffb72fc4fe0e8a0c
.dword 0xffd0e5de21873eea
.dword 0x802110b8bdd7297e
.dword 0xffb72fc4fe0e8a0c
.dword 0xffb72fc4fe0e8a0c
.dword 0x802110b8bdd7297e
.dword 0x800bb549323294e4
.dword 0xffd0e5de21873eea
.dword 0x800bb549323294e4
.dword 0xff828c9d980ba1a3
.dword 0xff828c9d980ba1a3
.dword 0xffaab65b09a91410
.dword 0x8030dc4fe65af923
.dword 0xff828c9d980ba1a3
.dword 0xff828c9d980ba1a3
.dword 0x8030dc4fe65af923
.dword 0x800bb549323294e4
.dword 0xffaab65b09a91410
.dword 0xffecfbb63d922c8f
.dword 0x7fee61729d7cfd5e
.dword 0xc45cc3d79cddb
.dword 0xffecfbb63d922c8f
.dword 0xffecfbb63d922c8f
.dword 0xc45cc3d79cddb
.dword 0x800bb549323294e4
.dword 0x7fee61729d7cfd5e
.dword 0xffb72fc4fe0e8a0c
.dword 0x7fdb9017651b96db
.dword 0x2bd5fdfc44e580
.dword 0xffb72fc4fe0e8a0c
.dword 0xffb72fc4fe0e8a0c
.dword 0x2bd5fdfc44e580
.dword 0x800bb549323294e4
.dword 0x7fdb9017651b96db
.dword 0xffecfbb63d922c8f
.dword 0x7fe363e504d94fe2
.dword 0x7d53a47591bb8
.dword 0xffecfbb63d922c8f
.dword 0xffecfbb63d922c8f
.dword 0x7d53a47591bb8
.dword 0x800bb549323294e4
.dword 0x7fe363e504d94fe2
.dword 0xffecfbb63d922c8f
.dword 0x7feabc6824ad2440
.dword 0xacce25b46ca92
.dword 0xffecfbb63d922c8f
.dword 0xffecfbb63d922c8f
.dword 0xacce25b46ca92
.dword 0x800bb549323294e4
.dword 0x7feabc6824ad2440
.dword 0xffecfbb63d922c8f
.dword 0x7fee97d52f73d2ed
.dword 0xc5bc46ffcb5d2
.dword 0xffecfbb63d922c8f
.dword 0xffecfbb63d922c8f
.dword 0xc5bc46ffcb5d2
.dword 0x800bb549323294e4
.dword 0x7fee97d52f73d2ed
.dword 0x8000153814fb5b84
.dword 0x8000153814fb5b84
.dword 0x8000153814fb5b84
.dword 0xbff271665b532bfd
.dword 0x8000153814fb5b84
.dword 0x0
.dword 0x8000153814fb5b84
.dword 0x800849e8322fbf77
.dword 0x800849e8322fbf77
.dword 0x800bb549323294e4
.dword 0x8000153814fb5b84
.dword 0x800bb549323294e4
.dword 0x800849e8322fbf77
.dword 0x800d7743860024db
.dword 0x80002278fec7ae73
.dword 0x800849e8322fbf77
.dword 0x800849e8322fbf77
.dword 0x80002278fec7ae73
.dword 0x8000153814fb5b84
.dword 0x800d7743860024db
.dword 0x800849e8322fbf77
.dword 0x800b11df817f3079
.dword 0x80001c56b70e1268
.dword 0x800849e8322fbf77
.dword 0x800849e8322fbf77
.dword 0x80001c56b70e1268
.dword 0x8000153814fb5b84
.dword 0x800b11df817f3079
.dword 0x800849e8322fbf77
.dword 0x800ea45d43472379
.dword 0x8000257bd0086432
.dword 0x800849e8322fbf77
.dword 0x800849e8322fbf77
.dword 0x8000257bd0086432
.dword 0x8000153814fb5b84
.dword 0x800ea45d43472379
.dword 0x8000153814fb5b84
.dword 0x8000d430d1d19325
.dword 0x8000d430d1d19325
.dword 0x71e1f6d010ef7
.dword 0xb63657b34e4c
.dword 0x8000d430d1d19325
.dword 0x8000d430d1d19325
.dword 0xb63657b34e4c
.dword 0x8000153814fb5b84
.dword 0x71e1f6d010ef7
.dword 0x800849e8322fbf77
.dword 0xb91751db871ea
.dword 0x1d9d54c6f6e6
.dword 0x800849e8322fbf77
.dword 0x800849e8322fbf77
.dword 0x1d9d54c6f6e6
.dword 0x8000153814fb5b84
.dword 0xb91751db871ea
.dword 0x800849e8322fbf77
.dword 0x94c9c955ccc4c
.dword 0x17ce5da753f7
.dword 0x800849e8322fbf77
.dword 0x800849e8322fbf77
.dword 0x17ce5da753f7
.dword 0x8000153814fb5b84
.dword 0x94c9c955ccc4c
.dword 0x800849e8322fbf77
.dword 0xab73739b529c7
.dword 0x1b6ea1db6961
.dword 0x800849e8322fbf77
.dword 0x800849e8322fbf77
.dword 0x1b6ea1db6961
.dword 0x8000153814fb5b84
.dword 0xab73739b529c7
.dword 0x8000d430d1d19325
.dword 0xe7a2682ee434
.dword 0x1729d737e39f
.dword 0x8000d430d1d19325
.dword 0x8000d430d1d19325
.dword 0x1729d737e39f
.dword 0x8000153814fb5b84
.dword 0xe7a2682ee434
.dword 0x8000153814fb5b84
.dword 0xffb06a2f722afb11
.dword 0xffb06a2f722afb11
.dword 0xffdd2c340883a998
.dword 0x800096d7fec4b410
.dword 0xffb06a2f722afb11
.dword 0xffb06a2f722afb11
.dword 0x800096d7fec4b410
.dword 0x8000153814fb5b84
.dword 0xffdd2c340883a998
.dword 0x8000153814fb5b84
.dword 0xffe484bb4eb5b9d5
.dword 0xffe484bb4eb5b9d5
.dword 0xffe3682ff4c90ae0
.dword 0x80001411d273fbb6
.dword 0xffe484bb4eb5b9d5
.dword 0xffe484bb4eb5b9d5
.dword 0x80001411d273fbb6
.dword 0x8000153814fb5b84
.dword 0xffe3682ff4c90ae0
.dword 0xffb06a2f722afb11
.dword 0xffd92a290fb6d0de
.dword 0x8000821e9d25fd6b
.dword 0xffb06a2f722afb11
.dword 0xffb06a2f722afb11
.dword 0x8000821e9d25fd6b
.dword 0x8000153814fb5b84
.dword 0xffd92a290fb6d0de
.dword 0xffb06a2f722afb11
.dword 0xffd0e5de21873eea
.dword 0x8000575fdad63926
.dword 0xffb06a2f722afb11
.dword 0xffb06a2f722afb11
.dword 0x8000575fdad63926
.dword 0x8000153814fb5b84
.dword 0xffd0e5de21873eea
.dword 0x8000153814fb5b84
.dword 0xff7a437f1d1191b5
.dword 0xff7a437f1d1191b5
.dword 0xffaab65b09a91410
.dword 0x8000aca70936d6c4
.dword 0xff7a437f1d1191b5
.dword 0xff7a437f1d1191b5
.dword 0x8000aca70936d6c4
.dword 0x8000153814fb5b84
.dword 0xffaab65b09a91410
.dword 0xffe484bb4eb5b9d5
.dword 0x7fee61729d7cfd5e
.dword 0x1f6b009d60c7
.dword 0xffe484bb4eb5b9d5
.dword 0xffe484bb4eb5b9d5
.dword 0x1f6b009d60c7
.dword 0x8000153814fb5b84
.dword 0x7fee61729d7cfd5e
.dword 0xffb06a2f722afb11
.dword 0x7fdb9017651b96db
.dword 0x8e851467c726
.dword 0xffb06a2f722afb11
.dword 0xffb06a2f722afb11
.dword 0x8e851467c726
.dword 0x8000153814fb5b84
.dword 0x7fdb9017651b96db
.dword 0xffe484bb4eb5b9d5
.dword 0x7fe363e504d94fe2
.dword 0x140d61fe54c2
.dword 0xffe484bb4eb5b9d5
.dword 0xffe484bb4eb5b9d5
.dword 0x140d61fe54c2
.dword 0x8000153814fb5b84
.dword 0x7fe363e504d94fe2
.dword 0xffe484bb4eb5b9d5
.dword 0x7feabc6824ad2440
.dword 0x1ba61a834496
.dword 0xffe484bb4eb5b9d5
.dword 0xffe484bb4eb5b9d5
.dword 0x1ba61a834496
.dword 0x8000153814fb5b84
.dword 0x7feabc6824ad2440
.dword 0xffe484bb4eb5b9d5
.dword 0x7fee97d52f73d2ed
.dword 0x1fa33e8f53bd
.dword 0xffe484bb4eb5b9d5
.dword 0xffe484bb4eb5b9d5
.dword 0x1fa33e8f53bd
.dword 0x8000153814fb5b84
.dword 0x7fee97d52f73d2ed
.dword 0x800d7743860024db
.dword 0x800d7743860024db
.dword 0x800d7743860024db
.dword 0xbffdf66a9ea7fbe7
.dword 0x800d7743860024db
.dword 0x0
.dword 0x800d7743860024db
.dword 0x80002278fec7ae73
.dword 0x80002278fec7ae73
.dword 0x8000153814fb5b84
.dword 0x800d7743860024db
.dword 0x8000153814fb5b84
.dword 0x800d7743860024db
.dword 0x800b11df817f3079
.dword 0x800b11df817f3079
.dword 0x800d7743860024db
.dword 0x800d7743860024db
.dword 0x800ea45d43472379
.dword 0x800ea45d43472379
.dword 0x800d7743860024db
.dword 0x800d7743860024db
.dword 0x800158b9f3ccd07c
.dword 0x800158b9f3ccd07c
.dword 0x71e1f6d010ef7
.dword 0x31cb4e9082a569
.dword 0x800158b9f3ccd07c
.dword 0x800158b9f3ccd07c
.dword 0x31cb4e9082a569
.dword 0x800d7743860024db
.dword 0x71e1f6d010ef7
.dword 0x800d7743860024db
.dword 0xb91751db871ea
.dword 0xb91751db871ea
.dword 0x800d7743860024db
.dword 0x800d7743860024db
.dword 0x94c9c955ccc4c
.dword 0x94c9c955ccc4c
.dword 0x800d7743860024db
.dword 0x800d7743860024db
.dword 0xab73739b529c7
.dword 0xab73739b529c7
.dword 0x800d7743860024db
.dword 0x800158b9f3ccd07c
.dword 0xe7a2682ee434
.dword 0x90c5811d4ea06
.dword 0x800158b9f3ccd07c
.dword 0x800158b9f3ccd07c
.dword 0x90c5811d4ea06
.dword 0x800d7743860024db
.dword 0xe7a2682ee434
.dword 0x800d7743860024db
.dword 0xffbaaae5b42b9d01
.dword 0xffbaaae5b42b9d01
.dword 0xffdd2c340883a998
.dword 0x802d762fc26b2b18
.dword 0xffbaaae5b42b9d01
.dword 0xffbaaae5b42b9d01
.dword 0x802d762fc26b2b18
.dword 0x800d7743860024db
.dword 0xffdd2c340883a998
.dword 0x800d7743860024db
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xffe3682ff4c90ae0
.dword 0x8007d6f6354e532b
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x8007d6f6354e532b
.dword 0x800d7743860024db
.dword 0xffe3682ff4c90ae0
.dword 0xffbaaae5b42b9d01
.dword 0xffd92a290fb6d0de
.dword 0x802969fab16b7edc
.dword 0xffbaaae5b42b9d01
.dword 0xffbaaae5b42b9d01
.dword 0x802969fab16b7edc
.dword 0x800d7743860024db
.dword 0xffd92a290fb6d0de
.dword 0xffbaaae5b42b9d01
.dword 0xffd0e5de21873eea
.dword 0x802110b8bdd7297e
.dword 0xffbaaae5b42b9d01
.dword 0xffbaaae5b42b9d01
.dword 0x802110b8bdd7297e
.dword 0x800d7743860024db
.dword 0xffd0e5de21873eea
.dword 0x800d7743860024db
.dword 0xff8555849022e400
.dword 0xff8555849022e400
.dword 0xffaab65b09a91410
.dword 0x8030dc4fe65af923
.dword 0xff8555849022e400
.dword 0xff8555849022e400
.dword 0x8030dc4fe65af923
.dword 0x800d7743860024db
.dword 0xffaab65b09a91410
.dword 0xfff0000000000000
.dword 0x7fee61729d7cfd5e
.dword 0xc45cc3d79cddb
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xc45cc3d79cddb
.dword 0x800d7743860024db
.dword 0x7fee61729d7cfd5e
.dword 0xffbaaae5b42b9d01
.dword 0x7fdb9017651b96db
.dword 0x2bd5fdfc44e580
.dword 0xffbaaae5b42b9d01
.dword 0xffbaaae5b42b9d01
.dword 0x2bd5fdfc44e580
.dword 0x800d7743860024db
.dword 0x7fdb9017651b96db
.dword 0xfff0000000000000
.dword 0x7fe363e504d94fe2
.dword 0x7d53a47591bb8
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7d53a47591bb8
.dword 0x800d7743860024db
.dword 0x7fe363e504d94fe2
.dword 0xfff0000000000000
.dword 0x7feabc6824ad2440
.dword 0xacce25b46ca92
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xacce25b46ca92
.dword 0x800d7743860024db
.dword 0x7feabc6824ad2440
.dword 0xfff0000000000000
.dword 0x7fee97d52f73d2ed
.dword 0xc5bc46ffcb5d2
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xc5bc46ffcb5d2
.dword 0x800d7743860024db
.dword 0x7fee97d52f73d2ed
.dword 0x800b11df817f3079
.dword 0x800b11df817f3079
.dword 0x800b11df817f3079
.dword 0xbff8a193aec8d637
.dword 0x800b11df817f3079
.dword 0x0
.dword 0x800b11df817f3079
.dword 0x80001c56b70e1268
.dword 0x80001c56b70e1268
.dword 0x8000153814fb5b84
.dword 0x800b11df817f3079
.dword 0x8000153814fb5b84
.dword 0x800b11df817f3079
.dword 0x800ea45d43472379
.dword 0x800ea45d43472379
.dword 0x800b11df817f3079
.dword 0x800b11df817f3079
.dword 0x80011b63268cb80c
.dword 0x80011b63268cb80c
.dword 0x71e1f6d010ef7
.dword 0x31cb4e9082a569
.dword 0x80011b63268cb80c
.dword 0x80011b63268cb80c
.dword 0x31cb4e9082a569
.dword 0x800b11df817f3079
.dword 0x71e1f6d010ef7
.dword 0x800b11df817f3079
.dword 0xb91751db871ea
.dword 0xb91751db871ea
.dword 0x800b11df817f3079
.dword 0x800b11df817f3079
.dword 0x94c9c955ccc4c
.dword 0x94c9c955ccc4c
.dword 0x800b11df817f3079
.dword 0x800b11df817f3079
.dword 0xab73739b529c7
.dword 0xab73739b529c7
.dword 0x800b11df817f3079
.dword 0x80011b63268cb80c
.dword 0xe7a2682ee434
.dword 0x90c5811d4ea06
.dword 0x80011b63268cb80c
.dword 0x80011b63268cb80c
.dword 0x90c5811d4ea06
.dword 0x800b11df817f3079
.dword 0xe7a2682ee434
.dword 0x800b11df817f3079
.dword 0xffb5ec2653d2538d
.dword 0xffb5ec2653d2538d
.dword 0xffdd2c340883a998
.dword 0x802d762fc26b2b18
.dword 0xffb5ec2653d2538d
.dword 0xffb5ec2653d2538d
.dword 0x802d762fc26b2b18
.dword 0x800b11df817f3079
.dword 0xffdd2c340883a998
.dword 0x800b11df817f3079
.dword 0xffeb672fe8c6e870
.dword 0xffeb672fe8c6e870
.dword 0xffe3682ff4c90ae0
.dword 0x8007d6f6354e532b
.dword 0xffeb672fe8c6e870
.dword 0xffeb672fe8c6e870
.dword 0x8007d6f6354e532b
.dword 0x800b11df817f3079
.dword 0xffe3682ff4c90ae0
.dword 0xffb5ec2653d2538d
.dword 0xffd92a290fb6d0de
.dword 0x802969fab16b7edc
.dword 0xffb5ec2653d2538d
.dword 0xffb5ec2653d2538d
.dword 0x802969fab16b7edc
.dword 0x800b11df817f3079
.dword 0xffd92a290fb6d0de
.dword 0xffb5ec2653d2538d
.dword 0xffd0e5de21873eea
.dword 0x802110b8bdd7297e
.dword 0xffb5ec2653d2538d
.dword 0xffb5ec2653d2538d
.dword 0x802110b8bdd7297e
.dword 0x800b11df817f3079
.dword 0xffd0e5de21873eea
.dword 0x800b11df817f3079
.dword 0xff8189b8430ea93d
.dword 0xff8189b8430ea93d
.dword 0xffaab65b09a91410
.dword 0x8030dc4fe65af923
.dword 0xff8189b8430ea93d
.dword 0xff8189b8430ea93d
.dword 0x8030dc4fe65af923
.dword 0x800b11df817f3079
.dword 0xffaab65b09a91410
.dword 0xffeb672fe8c6e870
.dword 0x7fee61729d7cfd5e
.dword 0xc45cc3d79cddb
.dword 0xffeb672fe8c6e870
.dword 0xffeb672fe8c6e870
.dword 0xc45cc3d79cddb
.dword 0x800b11df817f3079
.dword 0x7fee61729d7cfd5e
.dword 0xffb5ec2653d2538d
.dword 0x7fdb9017651b96db
.dword 0x2bd5fdfc44e580
.dword 0xffb5ec2653d2538d
.dword 0xffb5ec2653d2538d
.dword 0x2bd5fdfc44e580
.dword 0x800b11df817f3079
.dword 0x7fdb9017651b96db
.dword 0xffeb672fe8c6e870
.dword 0x7fe363e504d94fe2
.dword 0x7d53a47591bb8
.dword 0xffeb672fe8c6e870
.dword 0xffeb672fe8c6e870
.dword 0x7d53a47591bb8
.dword 0x800b11df817f3079
.dword 0x7fe363e504d94fe2
.dword 0xffeb672fe8c6e870
.dword 0x7feabc6824ad2440
.dword 0xacce25b46ca92
.dword 0xffeb672fe8c6e870
.dword 0xffeb672fe8c6e870
.dword 0xacce25b46ca92
.dword 0x800b11df817f3079
.dword 0x7feabc6824ad2440
.dword 0xffeb672fe8c6e870
.dword 0x7fee97d52f73d2ed
.dword 0xc5bc46ffcb5d2
.dword 0xffeb672fe8c6e870
.dword 0xffeb672fe8c6e870
.dword 0xc5bc46ffcb5d2
.dword 0x800b11df817f3079
.dword 0x7fee97d52f73d2ed
.dword 0x800ea45d43472379
.dword 0x800ea45d43472379
.dword 0x800ea45d43472379
.dword 0xc0004a31976bdb6f
.dword 0x800ea45d43472379
.dword 0x0
.dword 0x800ea45d43472379
.dword 0x8000257bd0086432
.dword 0x8000257bd0086432
.dword 0x8000153814fb5b84
.dword 0x800ea45d43472379
.dword 0x8000153814fb5b84
.dword 0x800ea45d43472379
.dword 0x800176d62053e9f2
.dword 0x800176d62053e9f2
.dword 0x71e1f6d010ef7
.dword 0x31cb4e9082a569
.dword 0x800176d62053e9f2
.dword 0x800176d62053e9f2
.dword 0x31cb4e9082a569
.dword 0x800ea45d43472379
.dword 0x71e1f6d010ef7
.dword 0x800ea45d43472379
.dword 0xb91751db871ea
.dword 0xb91751db871ea
.dword 0x800ea45d43472379
.dword 0x800ea45d43472379
.dword 0x94c9c955ccc4c
.dword 0x94c9c955ccc4c
.dword 0x800ea45d43472379
.dword 0x800ea45d43472379
.dword 0xab73739b529c7
.dword 0xab73739b529c7
.dword 0x800ea45d43472379
.dword 0x800176d62053e9f2
.dword 0xe7a2682ee434
.dword 0x90c5811d4ea06
.dword 0x800176d62053e9f2
.dword 0x800176d62053e9f2
.dword 0x90c5811d4ea06
.dword 0x800ea45d43472379
.dword 0xe7a2682ee434
.dword 0x800ea45d43472379
.dword 0xffbcff30f3beb065
.dword 0xffbcff30f3beb065
.dword 0xffdd2c340883a998
.dword 0x802d762fc26b2b18
.dword 0xffbcff30f3beb065
.dword 0xffbcff30f3beb065
.dword 0x802d762fc26b2b18
.dword 0x800ea45d43472379
.dword 0xffdd2c340883a998
.dword 0x800ea45d43472379
.dword 0xfff0000000000000
.dword 0x800ea45d43472379
.dword 0xffe3682ff4c90ae0
.dword 0xffbcff30f3beb065
.dword 0xffd92a290fb6d0de
.dword 0x802969fab16b7edc
.dword 0xffbcff30f3beb065
.dword 0xffbcff30f3beb065
.dword 0x802969fab16b7edc
.dword 0x800ea45d43472379
.dword 0xffd92a290fb6d0de
.dword 0xffbcff30f3beb065
.dword 0xffd0e5de21873eea
.dword 0x802110b8bdd7297e
.dword 0xffbcff30f3beb065
.dword 0xffbcff30f3beb065
.dword 0x802110b8bdd7297e
.dword 0x800ea45d43472379
.dword 0xffd0e5de21873eea
.dword 0x800ea45d43472379
.dword 0xff87328d8fcbc051
.dword 0xff87328d8fcbc051
.dword 0xffaab65b09a91410
.dword 0x8030dc4fe65af923
.dword 0xff87328d8fcbc051
.dword 0xff87328d8fcbc051
.dword 0x8030dc4fe65af923
.dword 0x800ea45d43472379
.dword 0xffaab65b09a91410
.dword 0x800ea45d43472379
.dword 0x7fee61729d7cfd5e
.dword 0xffbcff30f3beb065
.dword 0x7fdb9017651b96db
.dword 0x2bd5fdfc44e580
.dword 0xffbcff30f3beb065
.dword 0xffbcff30f3beb065
.dword 0x2bd5fdfc44e580
.dword 0x800ea45d43472379
.dword 0x7fdb9017651b96db
.dword 0x800ea45d43472379
.dword 0x7fe363e504d94fe2
.dword 0x800ea45d43472379
.dword 0x7feabc6824ad2440
.dword 0x800ea45d43472379
.dword 0x7fee97d52f73d2ed
.dword 0x71e1f6d010ef7
.dword 0x71e1f6d010ef7
.dword 0x71e1f6d010ef7
.dword 0x4023cbf277e6ba7f
.dword 0x71e1f6d010ef7
.dword 0x0
.dword 0x71e1f6d010ef7
.dword 0x31cb4e9082a569
.dword 0x31cb4e9082a569
.dword 0x800bb549323294e4
.dword 0x71e1f6d010ef7
.dword 0x800bb549323294e4
.dword 0x71e1f6d010ef7
.dword 0xb63657b34e4c
.dword 0xb63657b34e4c
.dword 0x8000153814fb5b84
.dword 0x71e1f6d010ef7
.dword 0x8000153814fb5b84
.dword 0x31cb4e9082a569
.dword 0x800d7743860024db
.dword 0x71e1f6d010ef7
.dword 0x800d7743860024db
.dword 0x31cb4e9082a569
.dword 0x800b11df817f3079
.dword 0x71e1f6d010ef7
.dword 0x800b11df817f3079
.dword 0x31cb4e9082a569
.dword 0x800ea45d43472379
.dword 0x71e1f6d010ef7
.dword 0x800ea45d43472379
.dword 0x31cb4e9082a569
.dword 0xb91751db871ea
.dword 0x128254fc5a4fe
.dword 0x31cb4e9082a569
.dword 0x31cb4e9082a569
.dword 0x128254fc5a4fe
.dword 0x71e1f6d010ef7
.dword 0xb91751db871ea
.dword 0x31cb4e9082a569
.dword 0x94c9c955ccc4c
.dword 0xee0fa88947a1
.dword 0x31cb4e9082a569
.dword 0x31cb4e9082a569
.dword 0xee0fa88947a1
.dword 0x71e1f6d010ef7
.dword 0x94c9c955ccc4c
.dword 0x31cb4e9082a569
.dword 0xab73739b529c7
.dword 0x1125252921dc7
.dword 0x31cb4e9082a569
.dword 0x31cb4e9082a569
.dword 0x1125252921dc7
.dword 0x71e1f6d010ef7
.dword 0xab73739b529c7
.dword 0x71e1f6d010ef7
.dword 0xe7a2682ee434
.dword 0xe7a2682ee434
.dword 0x71e1f6d010ef7
.dword 0x71e1f6d010ef7
.dword 0x7fe19e9f6802bcef
.dword 0x7fe19e9f6802bcef
.dword 0xffdd2c340883a998
.dword 0x8005e46ff3af089e
.dword 0x7fe19e9f6802bcef
.dword 0x7fe19e9f6802bcef
.dword 0x8005e46ff3af089e
.dword 0x71e1f6d010ef7
.dword 0xffdd2c340883a998
.dword 0x71e1f6d010ef7
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0xffe3682ff4c90ae0
.dword 0x8000c8b23887d51e
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x8000c8b23887d51e
.dword 0x71e1f6d010ef7
.dword 0xffe3682ff4c90ae0
.dword 0x7fe19e9f6802bcef
.dword 0xffd92a290fb6d0de
.dword 0x80051532237be62c
.dword 0x7fe19e9f6802bcef
.dword 0x7fe19e9f6802bcef
.dword 0x80051532237be62c
.dword 0x71e1f6d010ef7
.dword 0xffd92a290fb6d0de
.dword 0x7fe19e9f6802bcef
.dword 0xffd0e5de21873eea
.dword 0x800369be8c5e3b80
.dword 0x7fe19e9f6802bcef
.dword 0x7fe19e9f6802bcef
.dword 0x800369be8c5e3b80
.dword 0x71e1f6d010ef7
.dword 0xffd0e5de21873eea
.dword 0x71e1f6d010ef7
.dword 0x7fac30ff0cd12e4b
.dword 0x7fac30ff0cd12e4b
.dword 0xffaab65b09a91410
.dword 0x8006be865c2463a7
.dword 0x7fac30ff0cd12e4b
.dword 0x7fac30ff0cd12e4b
.dword 0x8006be865c2463a7
.dword 0x71e1f6d010ef7
.dword 0xffaab65b09a91410
.dword 0x7ff0000000000000
.dword 0x7fee61729d7cfd5e
.dword 0x13a2e0625c7c9
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x13a2e0625c7c9
.dword 0x71e1f6d010ef7
.dword 0x7fee61729d7cfd5e
.dword 0x7fe19e9f6802bcef
.dword 0x7fdb9017651b96db
.dword 0x59132cc0dc780
.dword 0x7fe19e9f6802bcef
.dword 0x7fe19e9f6802bcef
.dword 0x59132cc0dc780
.dword 0x71e1f6d010ef7
.dword 0x7fdb9017651b96db
.dword 0x7ff0000000000000
.dword 0x7fe363e504d94fe2
.dword 0xc885d3ef4f92
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0xc885d3ef4f92
.dword 0x71e1f6d010ef7
.dword 0x7fe363e504d94fe2
.dword 0x7ff0000000000000
.dword 0x7feabc6824ad2440
.dword 0x1147d0920addb
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x1147d0920addb
.dword 0x71e1f6d010ef7
.dword 0x7feabc6824ad2440
.dword 0x7ff0000000000000
.dword 0x7fee97d52f73d2ed
.dword 0x13c6071994562
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x13c6071994562
.dword 0x71e1f6d010ef7
.dword 0x7fee97d52f73d2ed
.dword 0xb91751db871ea
.dword 0xb91751db871ea
.dword 0xb91751db871ea
.dword 0x3ff9bd762d8a6627
.dword 0xb91751db871ea
.dword 0x0
.dword 0xb91751db871ea
.dword 0x1d9d54c6f6e6
.dword 0x1d9d54c6f6e6
.dword 0x8000153814fb5b84
.dword 0xb91751db871ea
.dword 0x8000153814fb5b84
.dword 0xb91751db871ea
.dword 0x128254fc5a4fe
.dword 0x128254fc5a4fe
.dword 0x71e1f6d010ef7
.dword 0xb91751db871ea
.dword 0x71e1f6d010ef7
.dword 0xb91751db871ea
.dword 0x94c9c955ccc4c
.dword 0x94c9c955ccc4c
.dword 0xb91751db871ea
.dword 0xb91751db871ea
.dword 0xab73739b529c7
.dword 0xab73739b529c7
.dword 0xb91751db871ea
.dword 0x128254fc5a4fe
.dword 0xe7a2682ee434
.dword 0x90c5811d4ea06
.dword 0x128254fc5a4fe
.dword 0x128254fc5a4fe
.dword 0x90c5811d4ea06
.dword 0xb91751db871ea
.dword 0xe7a2682ee434
.dword 0xb91751db871ea
.dword 0x7fb6e8d0c67096e1
.dword 0x7fb6e8d0c67096e1
.dword 0xffdd2c340883a998
.dword 0x802d762fc26b2b18
.dword 0x7fb6e8d0c67096e1
.dword 0x7fb6e8d0c67096e1
.dword 0x802d762fc26b2b18
.dword 0xb91751db871ea
.dword 0xffdd2c340883a998
.dword 0xb91751db871ea
.dword 0x7feca304f80cbc99
.dword 0x7feca304f80cbc99
.dword 0xffe3682ff4c90ae0
.dword 0x8007d6f6354e532b
.dword 0x7feca304f80cbc99
.dword 0x7feca304f80cbc99
.dword 0x8007d6f6354e532b
.dword 0xb91751db871ea
.dword 0xffe3682ff4c90ae0
.dword 0x7fb6e8d0c67096e1
.dword 0xffd92a290fb6d0de
.dword 0x802969fab16b7edc
.dword 0x7fb6e8d0c67096e1
.dword 0x7fb6e8d0c67096e1
.dword 0x802969fab16b7edc
.dword 0xb91751db871ea
.dword 0xffd92a290fb6d0de
.dword 0x7fb6e8d0c67096e1
.dword 0xffd0e5de21873eea
.dword 0x802110b8bdd7297e
.dword 0x7fb6e8d0c67096e1
.dword 0x7fb6e8d0c67096e1
.dword 0x802110b8bdd7297e
.dword 0xb91751db871ea
.dword 0xffd0e5de21873eea
.dword 0xb91751db871ea
.dword 0x7f8253da385a124e
.dword 0x7f8253da385a124e
.dword 0xffaab65b09a91410
.dword 0x8030dc4fe65af923
.dword 0x7f8253da385a124e
.dword 0x7f8253da385a124e
.dword 0x8030dc4fe65af923
.dword 0xb91751db871ea
.dword 0xffaab65b09a91410
.dword 0x7feca304f80cbc99
.dword 0x7fee61729d7cfd5e
.dword 0xc45cc3d79cddb
.dword 0x7feca304f80cbc99
.dword 0x7feca304f80cbc99
.dword 0xc45cc3d79cddb
.dword 0xb91751db871ea
.dword 0x7fee61729d7cfd5e
.dword 0x7fb6e8d0c67096e1
.dword 0x7fdb9017651b96db
.dword 0x2bd5fdfc44e580
.dword 0x7fb6e8d0c67096e1
.dword 0x7fb6e8d0c67096e1
.dword 0x2bd5fdfc44e580
.dword 0xb91751db871ea
.dword 0x7fdb9017651b96db
.dword 0x7feca304f80cbc99
.dword 0x7fe363e504d94fe2
.dword 0x7d53a47591bb8
.dword 0x7feca304f80cbc99
.dword 0x7feca304f80cbc99
.dword 0x7d53a47591bb8
.dword 0xb91751db871ea
.dword 0x7fe363e504d94fe2
.dword 0x7feca304f80cbc99
.dword 0x7feabc6824ad2440
.dword 0xacce25b46ca92
.dword 0x7feca304f80cbc99
.dword 0x7feca304f80cbc99
.dword 0xacce25b46ca92
.dword 0xb91751db871ea
.dword 0x7feabc6824ad2440
.dword 0x7feca304f80cbc99
.dword 0x7fee97d52f73d2ed
.dword 0xc5bc46ffcb5d2
.dword 0x7feca304f80cbc99
.dword 0x7feca304f80cbc99
.dword 0xc5bc46ffcb5d2
.dword 0xb91751db871ea
.dword 0x7fee97d52f73d2ed
.dword 0x94c9c955ccc4c
.dword 0x94c9c955ccc4c
.dword 0x94c9c955ccc4c
.dword 0x3ff4b1096905e83e
.dword 0x94c9c955ccc4c
.dword 0x0
.dword 0x94c9c955ccc4c
.dword 0x17ce5da753f7
.dword 0x17ce5da753f7
.dword 0x8000153814fb5b84
.dword 0x94c9c955ccc4c
.dword 0x8000153814fb5b84
.dword 0x94c9c955ccc4c
.dword 0xee0fa88947a1
.dword 0xee0fa88947a1
.dword 0x71e1f6d010ef7
.dword 0x94c9c955ccc4c
.dword 0x71e1f6d010ef7
.dword 0x94c9c955ccc4c
.dword 0xab73739b529c7
.dword 0xab73739b529c7
.dword 0x94c9c955ccc4c
.dword 0xee0fa88947a1
.dword 0xe7a2682ee434
.dword 0x90c5811d4ea06
.dword 0xee0fa88947a1
.dword 0xee0fa88947a1
.dword 0x90c5811d4ea06
.dword 0x94c9c955ccc4c
.dword 0xe7a2682ee434
.dword 0x94c9c955ccc4c
.dword 0x7fb26a84eacd6c03
.dword 0x7fb26a84eacd6c03
.dword 0xffdd2c340883a998
.dword 0x802d762fc26b2b18
.dword 0x7fb26a84eacd6c03
.dword 0x7fb26a84eacd6c03
.dword 0x802d762fc26b2b18
.dword 0x94c9c955ccc4c
.dword 0xffdd2c340883a998
.dword 0x94c9c955ccc4c
.dword 0x7fe705262580c704
.dword 0x7fe705262580c704
.dword 0xffe3682ff4c90ae0
.dword 0x8007d6f6354e532b
.dword 0x7fe705262580c704
.dword 0x7fe705262580c704
.dword 0x8007d6f6354e532b
.dword 0x94c9c955ccc4c
.dword 0xffe3682ff4c90ae0
.dword 0x7fb26a84eacd6c03
.dword 0xffd92a290fb6d0de
.dword 0x802969fab16b7edc
.dword 0x7fb26a84eacd6c03
.dword 0x7fb26a84eacd6c03
.dword 0x802969fab16b7edc
.dword 0x94c9c955ccc4c
.dword 0xffd92a290fb6d0de
.dword 0x7fb26a84eacd6c03
.dword 0xffd0e5de21873eea
.dword 0x802110b8bdd7297e
.dword 0x7fb26a84eacd6c03
.dword 0x7fb26a84eacd6c03
.dword 0x802110b8bdd7297e
.dword 0x94c9c955ccc4c
.dword 0xffd0e5de21873eea
.dword 0x94c9c955ccc4c
.dword 0x7f7d773b1148acd1
.dword 0x7f7d773b1148acd1
.dword 0xffaab65b09a91410
.dword 0x8030dc4fe65af923
.dword 0x7f7d773b1148acd1
.dword 0x7f7d773b1148acd1
.dword 0x8030dc4fe65af923
.dword 0x94c9c955ccc4c
.dword 0xffaab65b09a91410
.dword 0x7fe705262580c704
.dword 0x7fee61729d7cfd5e
.dword 0xc45cc3d79cddb
.dword 0x7fe705262580c704
.dword 0x7fe705262580c704
.dword 0xc45cc3d79cddb
.dword 0x94c9c955ccc4c
.dword 0x7fee61729d7cfd5e
.dword 0x7fb26a84eacd6c03
.dword 0x7fdb9017651b96db
.dword 0x2bd5fdfc44e580
.dword 0x7fb26a84eacd6c03
.dword 0x7fb26a84eacd6c03
.dword 0x2bd5fdfc44e580
.dword 0x94c9c955ccc4c
.dword 0x7fdb9017651b96db
.dword 0x7fe705262580c704
.dword 0x7fe363e504d94fe2
.dword 0x7d53a47591bb8
.dword 0x7fe705262580c704
.dword 0x7fe705262580c704
.dword 0x7d53a47591bb8
.dword 0x94c9c955ccc4c
.dword 0x7fe363e504d94fe2
.dword 0x7fe705262580c704
.dword 0x7feabc6824ad2440
.dword 0xacce25b46ca92
.dword 0x7fe705262580c704
.dword 0x7fe705262580c704
.dword 0xacce25b46ca92
.dword 0x94c9c955ccc4c
.dword 0x7feabc6824ad2440
.dword 0x7fe705262580c704
.dword 0x7fee97d52f73d2ed
.dword 0xc5bc46ffcb5d2
.dword 0x7fe705262580c704
.dword 0x7fe705262580c704
.dword 0xc5bc46ffcb5d2
.dword 0x94c9c955ccc4c
.dword 0x7fee97d52f73d2ed
.dword 0xab73739b529c7
.dword 0xab73739b529c7
.dword 0xab73739b529c7
.dword 0x3ff7d7db8b6fc61f
.dword 0xab73739b529c7
.dword 0x0
.dword 0xab73739b529c7
.dword 0x1b6ea1db6961
.dword 0x1b6ea1db6961
.dword 0x8000153814fb5b84
.dword 0xab73739b529c7
.dword 0x8000153814fb5b84
.dword 0xab73739b529c7
.dword 0x1125252921dc7
.dword 0x1125252921dc7
.dword 0x71e1f6d010ef7
.dword 0xab73739b529c7
.dword 0x71e1f6d010ef7
.dword 0x1125252921dc7
.dword 0xe7a2682ee434
.dword 0x90c5811d4ea06
.dword 0x1125252921dc7
.dword 0x1125252921dc7
.dword 0x90c5811d4ea06
.dword 0xab73739b529c7
.dword 0xe7a2682ee434
.dword 0xab73739b529c7
.dword 0x7fb5389d1433ac87
.dword 0x7fb5389d1433ac87
.dword 0xffdd2c340883a998
.dword 0x802d762fc26b2b18
.dword 0x7fb5389d1433ac87
.dword 0x7fb5389d1433ac87
.dword 0x802d762fc26b2b18
.dword 0xab73739b529c7
.dword 0xffdd2c340883a998
.dword 0xab73739b529c7
.dword 0x7fea86c4594097a9
.dword 0x7fea86c4594097a9
.dword 0xffe3682ff4c90ae0
.dword 0x8007d6f6354e532b
.dword 0x7fea86c4594097a9
.dword 0x7fea86c4594097a9
.dword 0x8007d6f6354e532b
.dword 0xab73739b529c7
.dword 0xffe3682ff4c90ae0
.dword 0x7fb5389d1433ac87
.dword 0xffd92a290fb6d0de
.dword 0x802969fab16b7edc
.dword 0x7fb5389d1433ac87
.dword 0x7fb5389d1433ac87
.dword 0x802969fab16b7edc
.dword 0xab73739b529c7
.dword 0xffd92a290fb6d0de
.dword 0x7fb5389d1433ac87
.dword 0xffd0e5de21873eea
.dword 0x802110b8bdd7297e
.dword 0x7fb5389d1433ac87
.dword 0x7fb5389d1433ac87
.dword 0x802110b8bdd7297e
.dword 0xab73739b529c7
.dword 0xffd0e5de21873eea
.dword 0xab73739b529c7
.dword 0x7f80fa17435c8a06
.dword 0x7f80fa17435c8a06
.dword 0xffaab65b09a91410
.dword 0x8030dc4fe65af923
.dword 0x7f80fa17435c8a06
.dword 0x7f80fa17435c8a06
.dword 0x8030dc4fe65af923
.dword 0xab73739b529c7
.dword 0xffaab65b09a91410
.dword 0x7fea86c4594097a9
.dword 0x7fee61729d7cfd5e
.dword 0xc45cc3d79cddb
.dword 0x7fea86c4594097a9
.dword 0x7fea86c4594097a9
.dword 0xc45cc3d79cddb
.dword 0xab73739b529c7
.dword 0x7fee61729d7cfd5e
.dword 0x7fb5389d1433ac87
.dword 0x7fdb9017651b96db
.dword 0x2bd5fdfc44e580
.dword 0x7fb5389d1433ac87
.dword 0x7fb5389d1433ac87
.dword 0x2bd5fdfc44e580
.dword 0xab73739b529c7
.dword 0x7fdb9017651b96db
.dword 0x7fea86c4594097a9
.dword 0x7fe363e504d94fe2
.dword 0x7d53a47591bb8
.dword 0x7fea86c4594097a9
.dword 0x7fea86c4594097a9
.dword 0x7d53a47591bb8
.dword 0xab73739b529c7
.dword 0x7fe363e504d94fe2
.dword 0x7fea86c4594097a9
.dword 0x7feabc6824ad2440
.dword 0xacce25b46ca92
.dword 0x7fea86c4594097a9
.dword 0x7fea86c4594097a9
.dword 0xacce25b46ca92
.dword 0xab73739b529c7
.dword 0x7feabc6824ad2440
.dword 0x7fea86c4594097a9
.dword 0x7fee97d52f73d2ed
.dword 0xc5bc46ffcb5d2
.dword 0x7fea86c4594097a9
.dword 0x7fea86c4594097a9
.dword 0xc5bc46ffcb5d2
.dword 0xab73739b529c7
.dword 0x7fee97d52f73d2ed
.dword 0xe7a2682ee434
.dword 0xe7a2682ee434
.dword 0xe7a2682ee434
.dword 0x3ff422095a1629ee
.dword 0xe7a2682ee434
.dword 0x0
.dword 0xe7a2682ee434
.dword 0x90c5811d4ea06
.dword 0x90c5811d4ea06
.dword 0x800bb549323294e4
.dword 0xe7a2682ee434
.dword 0x800bb549323294e4
.dword 0xe7a2682ee434
.dword 0x1729d737e39f
.dword 0x1729d737e39f
.dword 0x8000153814fb5b84
.dword 0xe7a2682ee434
.dword 0x8000153814fb5b84
.dword 0x90c5811d4ea06
.dword 0x800d7743860024db
.dword 0xe7a2682ee434
.dword 0x800d7743860024db
.dword 0x90c5811d4ea06
.dword 0x800b11df817f3079
.dword 0xe7a2682ee434
.dword 0x800b11df817f3079
.dword 0x90c5811d4ea06
.dword 0x800ea45d43472379
.dword 0xe7a2682ee434
.dword 0x800ea45d43472379
.dword 0x90c5811d4ea06
.dword 0xb91751db871ea
.dword 0xe7a2682ee434
.dword 0xb91751db871ea
.dword 0x90c5811d4ea06
.dword 0x94c9c955ccc4c
.dword 0xe7a2682ee434
.dword 0x94c9c955ccc4c
.dword 0x90c5811d4ea06
.dword 0xab73739b529c7
.dword 0xe7a2682ee434
.dword 0xab73739b529c7
.dword 0xe7a2682ee434
.dword 0x7fb1eb3ea9eb0abd
.dword 0x7fb1eb3ea9eb0abd
.dword 0xffdd2c340883a998
.dword 0x8005e46ff3af089e
.dword 0x7fb1eb3ea9eb0abd
.dword 0x7fb1eb3ea9eb0abd
.dword 0x8005e46ff3af089e
.dword 0xe7a2682ee434
.dword 0xffdd2c340883a998
.dword 0xe7a2682ee434
.dword 0x7fe6660e5465cd6d
.dword 0x7fe6660e5465cd6d
.dword 0xffe3682ff4c90ae0
.dword 0x8000c8b23887d51e
.dword 0x7fe6660e5465cd6d
.dword 0x7fe6660e5465cd6d
.dword 0x8000c8b23887d51e
.dword 0xe7a2682ee434
.dword 0xffe3682ff4c90ae0
.dword 0x7fb1eb3ea9eb0abd
.dword 0xffd92a290fb6d0de
.dword 0x80051532237be62c
.dword 0x7fb1eb3ea9eb0abd
.dword 0x7fb1eb3ea9eb0abd
.dword 0x80051532237be62c
.dword 0xe7a2682ee434
.dword 0xffd92a290fb6d0de
.dword 0x7fb1eb3ea9eb0abd
.dword 0xffd0e5de21873eea
.dword 0x800369be8c5e3b80
.dword 0x7fb1eb3ea9eb0abd
.dword 0x7fb1eb3ea9eb0abd
.dword 0x800369be8c5e3b80
.dword 0xe7a2682ee434
.dword 0xffd0e5de21873eea
.dword 0xe7a2682ee434
.dword 0x7f7cab977644ddfc
.dword 0x7f7cab977644ddfc
.dword 0xffaab65b09a91410
.dword 0x8006be865c2463a7
.dword 0x7f7cab977644ddfc
.dword 0x7f7cab977644ddfc
.dword 0x8006be865c2463a7
.dword 0xe7a2682ee434
.dword 0xffaab65b09a91410
.dword 0x7fe6660e5465cd6d
.dword 0x7fee61729d7cfd5e
.dword 0x13a2e0625c7c9
.dword 0x7fe6660e5465cd6d
.dword 0x7fe6660e5465cd6d
.dword 0x13a2e0625c7c9
.dword 0xe7a2682ee434
.dword 0x7fee61729d7cfd5e
.dword 0x7fb1eb3ea9eb0abd
.dword 0x7fdb9017651b96db
.dword 0x59132cc0dc780
.dword 0x7fb1eb3ea9eb0abd
.dword 0x7fb1eb3ea9eb0abd
.dword 0x59132cc0dc780
.dword 0xe7a2682ee434
.dword 0x7fdb9017651b96db
.dword 0x7fe6660e5465cd6d
.dword 0x7fe363e504d94fe2
.dword 0xc885d3ef4f92
.dword 0x7fe6660e5465cd6d
.dword 0x7fe6660e5465cd6d
.dword 0xc885d3ef4f92
.dword 0xe7a2682ee434
.dword 0x7fe363e504d94fe2
.dword 0x7fe6660e5465cd6d
.dword 0x7feabc6824ad2440
.dword 0x1147d0920addb
.dword 0x7fe6660e5465cd6d
.dword 0x7fe6660e5465cd6d
.dword 0x1147d0920addb
.dword 0xe7a2682ee434
.dword 0x7feabc6824ad2440
.dword 0x7fe6660e5465cd6d
.dword 0x7fee97d52f73d2ed
.dword 0x13c6071994562
.dword 0x7fe6660e5465cd6d
.dword 0x7fe6660e5465cd6d
.dword 0x13c6071994562
.dword 0xe7a2682ee434
.dword 0x7fee97d52f73d2ed
.dword 0xffdd2c340883a998
.dword 0xffdd2c340883a998
.dword 0xffdd2c340883a998
.dword 0xc020637b0487519a
.dword 0xffdd2c340883a998
.dword 0x0
.dword 0xffdd2c340883a998
.dword 0x802d762fc26b2b18
.dword 0x802d762fc26b2b18
.dword 0x800bb549323294e4
.dword 0xffdd2c340883a998
.dword 0x800bb549323294e4
.dword 0xffdd2c340883a998
.dword 0x800096d7fec4b410
.dword 0x800096d7fec4b410
.dword 0x8000153814fb5b84
.dword 0xffdd2c340883a998
.dword 0x8000153814fb5b84
.dword 0x802d762fc26b2b18
.dword 0x800d7743860024db
.dword 0xffdd2c340883a998
.dword 0x800d7743860024db
.dword 0x802d762fc26b2b18
.dword 0x800b11df817f3079
.dword 0xffdd2c340883a998
.dword 0x800b11df817f3079
.dword 0x802d762fc26b2b18
.dword 0x800ea45d43472379
.dword 0xffdd2c340883a998
.dword 0x800ea45d43472379
.dword 0xffdd2c340883a998
.dword 0x8005e46ff3af089e
.dword 0x8005e46ff3af089e
.dword 0x71e1f6d010ef7
.dword 0xffdd2c340883a998
.dword 0x71e1f6d010ef7
.dword 0x802d762fc26b2b18
.dword 0xb91751db871ea
.dword 0xffdd2c340883a998
.dword 0xb91751db871ea
.dword 0x802d762fc26b2b18
.dword 0x94c9c955ccc4c
.dword 0xffdd2c340883a998
.dword 0x94c9c955ccc4c
.dword 0x802d762fc26b2b18
.dword 0xab73739b529c7
.dword 0xffdd2c340883a998
.dword 0xab73739b529c7
.dword 0x8005e46ff3af089e
.dword 0xe7a2682ee434
.dword 0xffdd2c340883a998
.dword 0xe7a2682ee434
.dword 0xffdd2c340883a998
.dword 0xfff0000000000000
.dword 0xffaf0d1987a81166
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xffaf0d1987a81166
.dword 0xffdd2c340883a998
.dword 0xffe3682ff4c90ae0
.dword 0xffdd2c340883a998
.dword 0xffd92a290fb6d0de
.dword 0xffd92a290fb6d0de
.dword 0xffdd2c340883a998
.dword 0xffdd2c340883a998
.dword 0xffd0e5de21873eea
.dword 0xffd0e5de21873eea
.dword 0xffdd2c340883a998
.dword 0xffdd2c340883a998
.dword 0xffa7569006cfbae0
.dword 0xffa7569006cfbae0
.dword 0xffaab65b09a91410
.dword 0xffe0b1f8e609ac8a
.dword 0xffa7569006cfbae0
.dword 0xffa7569006cfbae0
.dword 0xffe0b1f8e609ac8a
.dword 0xffdd2c340883a998
.dword 0xffaab65b09a91410
.dword 0x7fb84df54aca644b
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7fb84df54aca644b
.dword 0xffdd2c340883a998
.dword 0x7fee61729d7cfd5e
.dword 0xffdd2c340883a998
.dword 0x7fdb9017651b96db
.dword 0x7fdb9017651b96db
.dword 0xffdd2c340883a998
.dword 0x7faf063b3af54c9d
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7faf063b3af54c9d
.dword 0xffdd2c340883a998
.dword 0x7fe363e504d94fe2
.dword 0x7fb5638683bdb69a
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7fb5638683bdb69a
.dword 0xffdd2c340883a998
.dword 0x7feabc6824ad2440
.dword 0x7fb879775929758a
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7fb879775929758a
.dword 0xffdd2c340883a998
.dword 0x7fee97d52f73d2ed
.dword 0xffe3682ff4c90ae0
.dword 0xffe3682ff4c90ae0
.dword 0xffe3682ff4c90ae0
.dword 0xbff171a35c491d80
.dword 0xffe3682ff4c90ae0
.dword 0x0
.dword 0xffe3682ff4c90ae0
.dword 0x8007d6f6354e532b
.dword 0x8007d6f6354e532b
.dword 0x800bb549323294e4
.dword 0xffe3682ff4c90ae0
.dword 0x800bb549323294e4
.dword 0xffe3682ff4c90ae0
.dword 0x80001411d273fbb6
.dword 0x80001411d273fbb6
.dword 0x8000153814fb5b84
.dword 0xffe3682ff4c90ae0
.dword 0x8000153814fb5b84
.dword 0x8007d6f6354e532b
.dword 0x800d7743860024db
.dword 0xffe3682ff4c90ae0
.dword 0x800d7743860024db
.dword 0x8007d6f6354e532b
.dword 0x800b11df817f3079
.dword 0xffe3682ff4c90ae0
.dword 0x800b11df817f3079
.dword 0x8007d6f6354e532b
.dword 0x800ea45d43472379
.dword 0xffe3682ff4c90ae0
.dword 0x800ea45d43472379
.dword 0xffe3682ff4c90ae0
.dword 0x8000c8b23887d51e
.dword 0x8000c8b23887d51e
.dword 0x71e1f6d010ef7
.dword 0xffe3682ff4c90ae0
.dword 0x71e1f6d010ef7
.dword 0x8007d6f6354e532b
.dword 0xb91751db871ea
.dword 0xffe3682ff4c90ae0
.dword 0xb91751db871ea
.dword 0x8007d6f6354e532b
.dword 0x94c9c955ccc4c
.dword 0xffe3682ff4c90ae0
.dword 0x94c9c955ccc4c
.dword 0x8007d6f6354e532b
.dword 0xab73739b529c7
.dword 0xffe3682ff4c90ae0
.dword 0xab73739b529c7
.dword 0x8000c8b23887d51e
.dword 0xe7a2682ee434
.dword 0xffe3682ff4c90ae0
.dword 0xe7a2682ee434
.dword 0xffe3682ff4c90ae0
.dword 0xffaf0d1987a81166
.dword 0xffaf0d1987a81166
.dword 0xffdd2c340883a998
.dword 0xffe3682ff4c90ae0
.dword 0xffdd2c340883a998
.dword 0xffaf0d1987a81166
.dword 0xffd92a290fb6d0de
.dword 0xffe3682ff4c90ae0
.dword 0xffd92a290fb6d0de
.dword 0xffaf0d1987a81166
.dword 0xffd0e5de21873eea
.dword 0xffe3682ff4c90ae0
.dword 0xffd0e5de21873eea
.dword 0xffe3682ff4c90ae0
.dword 0xff78d7479fb9a785
.dword 0xff78d7479fb9a785
.dword 0xffaab65b09a91410
.dword 0xfff0000000000000
.dword 0xff78d7479fb9a785
.dword 0xff78d7479fb9a785
.dword 0xfff0000000000000
.dword 0xffe3682ff4c90ae0
.dword 0xffaab65b09a91410
.dword 0xffe3682ff4c90ae0
.dword 0x7fee61729d7cfd5e
.dword 0x7fee61729d7cfd5e
.dword 0xffe3682ff4c90ae0
.dword 0xffaf0d1987a81166
.dword 0x7fdb9017651b96db
.dword 0x7ff0000000000000
.dword 0xffaf0d1987a81166
.dword 0xffaf0d1987a81166
.dword 0x7ff0000000000000
.dword 0xffe3682ff4c90ae0
.dword 0x7fdb9017651b96db
.dword 0xffe3682ff4c90ae0
.dword 0x7fe363e504d94fe2
.dword 0x7fe363e504d94fe2
.dword 0xffe3682ff4c90ae0
.dword 0xffe3682ff4c90ae0
.dword 0x7feabc6824ad2440
.dword 0x7feabc6824ad2440
.dword 0xffe3682ff4c90ae0
.dword 0xffe3682ff4c90ae0
.dword 0x7fee97d52f73d2ed
.dword 0x7fee97d52f73d2ed
.dword 0xffe3682ff4c90ae0
.dword 0xffd92a290fb6d0de
.dword 0xffd92a290fb6d0de
.dword 0xffd92a290fb6d0de
.dword 0xc01c4624671f2f0c
.dword 0xffd92a290fb6d0de
.dword 0x0
.dword 0xffd92a290fb6d0de
.dword 0x802969fab16b7edc
.dword 0x802969fab16b7edc
.dword 0x800bb549323294e4
.dword 0xffd92a290fb6d0de
.dword 0x800bb549323294e4
.dword 0xffd92a290fb6d0de
.dword 0x8000821e9d25fd6b
.dword 0x8000821e9d25fd6b
.dword 0x8000153814fb5b84
.dword 0xffd92a290fb6d0de
.dword 0x8000153814fb5b84
.dword 0x802969fab16b7edc
.dword 0x800d7743860024db
.dword 0xffd92a290fb6d0de
.dword 0x800d7743860024db
.dword 0x802969fab16b7edc
.dword 0x800b11df817f3079
.dword 0xffd92a290fb6d0de
.dword 0x800b11df817f3079
.dword 0x802969fab16b7edc
.dword 0x800ea45d43472379
.dword 0xffd92a290fb6d0de
.dword 0x800ea45d43472379
.dword 0xffd92a290fb6d0de
.dword 0x80051532237be62c
.dword 0x80051532237be62c
.dword 0x71e1f6d010ef7
.dword 0xffd92a290fb6d0de
.dword 0x71e1f6d010ef7
.dword 0x802969fab16b7edc
.dword 0xb91751db871ea
.dword 0xffd92a290fb6d0de
.dword 0xb91751db871ea
.dword 0x802969fab16b7edc
.dword 0x94c9c955ccc4c
.dword 0xffd92a290fb6d0de
.dword 0x94c9c955ccc4c
.dword 0x802969fab16b7edc
.dword 0xab73739b529c7
.dword 0xffd92a290fb6d0de
.dword 0xab73739b529c7
.dword 0x80051532237be62c
.dword 0xe7a2682ee434
.dword 0xffd92a290fb6d0de
.dword 0xe7a2682ee434
.dword 0xffd92a290fb6d0de
.dword 0xfff0000000000000
.dword 0xffd92a290fb6d0de
.dword 0xffe3682ff4c90ae0
.dword 0xffd92a290fb6d0de
.dword 0xffd0e5de21873eea
.dword 0xffd0e5de21873eea
.dword 0xffd92a290fb6d0de
.dword 0xffd92a290fb6d0de
.dword 0xffa421ba72f8a718
.dword 0xffa421ba72f8a718
.dword 0xffaab65b09a91410
.dword 0xffe0b1f8e609ac8a
.dword 0xffa421ba72f8a718
.dword 0xffa421ba72f8a718
.dword 0xffe0b1f8e609ac8a
.dword 0xffd92a290fb6d0de
.dword 0xffaab65b09a91410
.dword 0xffd92a290fb6d0de
.dword 0x7fee61729d7cfd5e
.dword 0xffd92a290fb6d0de
.dword 0x7fdb9017651b96db
.dword 0x7fdb9017651b96db
.dword 0xffd92a290fb6d0de
.dword 0xffd92a290fb6d0de
.dword 0x7fe363e504d94fe2
.dword 0xffd92a290fb6d0de
.dword 0x7feabc6824ad2440
.dword 0xffd92a290fb6d0de
.dword 0x7fee97d52f73d2ed
.dword 0xffd0e5de21873eea
.dword 0xffd0e5de21873eea
.dword 0xffd0e5de21873eea
.dword 0xc012fc5d39f551da
.dword 0xffd0e5de21873eea
.dword 0x0
.dword 0xffd0e5de21873eea
.dword 0x802110b8bdd7297e
.dword 0x802110b8bdd7297e
.dword 0x800bb549323294e4
.dword 0xffd0e5de21873eea
.dword 0x800bb549323294e4
.dword 0xffd0e5de21873eea
.dword 0x8000575fdad63926
.dword 0x8000575fdad63926
.dword 0x8000153814fb5b84
.dword 0xffd0e5de21873eea
.dword 0x8000153814fb5b84
.dword 0x802110b8bdd7297e
.dword 0x800d7743860024db
.dword 0xffd0e5de21873eea
.dword 0x800d7743860024db
.dword 0x802110b8bdd7297e
.dword 0x800b11df817f3079
.dword 0xffd0e5de21873eea
.dword 0x800b11df817f3079
.dword 0x802110b8bdd7297e
.dword 0x800ea45d43472379
.dword 0xffd0e5de21873eea
.dword 0x800ea45d43472379
.dword 0xffd0e5de21873eea
.dword 0x800369be8c5e3b80
.dword 0x800369be8c5e3b80
.dword 0x71e1f6d010ef7
.dword 0xffd0e5de21873eea
.dword 0x71e1f6d010ef7
.dword 0x802110b8bdd7297e
.dword 0xb91751db871ea
.dword 0xffd0e5de21873eea
.dword 0xb91751db871ea
.dword 0x802110b8bdd7297e
.dword 0x94c9c955ccc4c
.dword 0xffd0e5de21873eea
.dword 0x94c9c955ccc4c
.dword 0x802110b8bdd7297e
.dword 0xab73739b529c7
.dword 0xffd0e5de21873eea
.dword 0xab73739b529c7
.dword 0x800369be8c5e3b80
.dword 0xe7a2682ee434
.dword 0xffd0e5de21873eea
.dword 0xe7a2682ee434
.dword 0xffd0e5de21873eea
.dword 0xfff0000000000000
.dword 0xffd0e5de21873eea
.dword 0xffe3682ff4c90ae0
.dword 0xffd0e5de21873eea
.dword 0xff9b096368d864aa
.dword 0xff9b096368d864aa
.dword 0xffaab65b09a91410
.dword 0xffe0b1f8e609ac8a
.dword 0xff9b096368d864aa
.dword 0xff9b096368d864aa
.dword 0xffe0b1f8e609ac8a
.dword 0xffd0e5de21873eea
.dword 0xffaab65b09a91410
.dword 0xffd0e5de21873eea
.dword 0x7fee61729d7cfd5e
.dword 0xffd0e5de21873eea
.dword 0x7fdb9017651b96db
.dword 0x7fdb9017651b96db
.dword 0xffd0e5de21873eea
.dword 0xffd0e5de21873eea
.dword 0x7fe363e504d94fe2
.dword 0xffd0e5de21873eea
.dword 0x7feabc6824ad2440
.dword 0xffd0e5de21873eea
.dword 0x7fee97d52f73d2ed
.dword 0xffaab65b09a91410
.dword 0xffaab65b09a91410
.dword 0xffaab65b09a91410
.dword 0xc022c20e7e96fa8e
.dword 0xffaab65b09a91410
.dword 0x0
.dword 0xffaab65b09a91410
.dword 0x8030dc4fe65af923
.dword 0x8030dc4fe65af923
.dword 0x800bb549323294e4
.dword 0xffaab65b09a91410
.dword 0x800bb549323294e4
.dword 0xffaab65b09a91410
.dword 0x8000aca70936d6c4
.dword 0x8000aca70936d6c4
.dword 0x8000153814fb5b84
.dword 0xffaab65b09a91410
.dword 0x8000153814fb5b84
.dword 0x8030dc4fe65af923
.dword 0x800d7743860024db
.dword 0xffaab65b09a91410
.dword 0x800d7743860024db
.dword 0x8030dc4fe65af923
.dword 0x800b11df817f3079
.dword 0xffaab65b09a91410
.dword 0x800b11df817f3079
.dword 0x8030dc4fe65af923
.dword 0x800ea45d43472379
.dword 0xffaab65b09a91410
.dword 0x800ea45d43472379
.dword 0xffaab65b09a91410
.dword 0x8006be865c2463a7
.dword 0x8006be865c2463a7
.dword 0x71e1f6d010ef7
.dword 0xffaab65b09a91410
.dword 0x71e1f6d010ef7
.dword 0x8030dc4fe65af923
.dword 0xb91751db871ea
.dword 0xffaab65b09a91410
.dword 0xb91751db871ea
.dword 0x8030dc4fe65af923
.dword 0x94c9c955ccc4c
.dword 0xffaab65b09a91410
.dword 0x94c9c955ccc4c
.dword 0x8030dc4fe65af923
.dword 0xab73739b529c7
.dword 0xffaab65b09a91410
.dword 0xab73739b529c7
.dword 0x8006be865c2463a7
.dword 0xe7a2682ee434
.dword 0xffaab65b09a91410
.dword 0xe7a2682ee434
.dword 0xffaab65b09a91410
.dword 0xffe0b1f8e609ac8a
.dword 0xffe0b1f8e609ac8a
.dword 0xffdd2c340883a998
.dword 0xffaab65b09a91410
.dword 0xffdd2c340883a998
.dword 0xffaab65b09a91410
.dword 0xfff0000000000000
.dword 0xffaab65b09a91410
.dword 0xffe3682ff4c90ae0
.dword 0xffe0b1f8e609ac8a
.dword 0xffd92a290fb6d0de
.dword 0xffaab65b09a91410
.dword 0xffd92a290fb6d0de
.dword 0xffe0b1f8e609ac8a
.dword 0xffd0e5de21873eea
.dword 0xffaab65b09a91410
.dword 0xffd0e5de21873eea
.dword 0x7f83719108a1e9d6
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7f83719108a1e9d6
.dword 0xffaab65b09a91410
.dword 0x7fee61729d7cfd5e
.dword 0xffe0b1f8e609ac8a
.dword 0x7fdb9017651b96db
.dword 0x7fa60cdf84161249
.dword 0xffe0b1f8e609ac8a
.dword 0xffe0b1f8e609ac8a
.dword 0x7fa60cdf84161249
.dword 0xffaab65b09a91410
.dword 0x7fdb9017651b96db
.dword 0x7f78d1c8fbf7707e
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7f78d1c8fbf7707e
.dword 0xffaab65b09a91410
.dword 0x7fe363e504d94fe2
.dword 0x7f811c6b9c97c548
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7f811c6b9c97c548
.dword 0xffaab65b09a91410
.dword 0x7feabc6824ad2440
.dword 0x7f83945f7a87913c
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7f83945f7a87913c
.dword 0xffaab65b09a91410
.dword 0x7fee97d52f73d2ed
.dword 0x7fee61729d7cfd5e
.dword 0x7fee61729d7cfd5e
.dword 0x7fee61729d7cfd5e
.dword 0x3ffb4ebb70505c5a
.dword 0x7fee61729d7cfd5e
.dword 0x0
.dword 0x7fee61729d7cfd5e
.dword 0xc45cc3d79cddb
.dword 0xc45cc3d79cddb
.dword 0x800bb549323294e4
.dword 0x7fee61729d7cfd5e
.dword 0x800bb549323294e4
.dword 0x7fee61729d7cfd5e
.dword 0x1f6b009d60c7
.dword 0x1f6b009d60c7
.dword 0x8000153814fb5b84
.dword 0x7fee61729d7cfd5e
.dword 0x8000153814fb5b84
.dword 0xc45cc3d79cddb
.dword 0x800d7743860024db
.dword 0x7fee61729d7cfd5e
.dword 0x800d7743860024db
.dword 0xc45cc3d79cddb
.dword 0x800b11df817f3079
.dword 0x7fee61729d7cfd5e
.dword 0x800b11df817f3079
.dword 0xc45cc3d79cddb
.dword 0x800ea45d43472379
.dword 0x7fee61729d7cfd5e
.dword 0x800ea45d43472379
.dword 0x7fee61729d7cfd5e
.dword 0x13a2e0625c7c9
.dword 0x13a2e0625c7c9
.dword 0x71e1f6d010ef7
.dword 0x7fee61729d7cfd5e
.dword 0x71e1f6d010ef7
.dword 0xc45cc3d79cddb
.dword 0xb91751db871ea
.dword 0x7fee61729d7cfd5e
.dword 0xb91751db871ea
.dword 0xc45cc3d79cddb
.dword 0x94c9c955ccc4c
.dword 0x7fee61729d7cfd5e
.dword 0x94c9c955ccc4c
.dword 0xc45cc3d79cddb
.dword 0xab73739b529c7
.dword 0x7fee61729d7cfd5e
.dword 0xab73739b529c7
.dword 0x13a2e0625c7c9
.dword 0xe7a2682ee434
.dword 0x7fee61729d7cfd5e
.dword 0xe7a2682ee434
.dword 0x7fee61729d7cfd5e
.dword 0x7fb84df54aca644b
.dword 0x7fb84df54aca644b
.dword 0xffdd2c340883a998
.dword 0x7fee61729d7cfd5e
.dword 0xffdd2c340883a998
.dword 0x7fb84df54aca644b
.dword 0xffd92a290fb6d0de
.dword 0x7fee61729d7cfd5e
.dword 0xffd92a290fb6d0de
.dword 0x7fb84df54aca644b
.dword 0xffd0e5de21873eea
.dword 0x7fee61729d7cfd5e
.dword 0xffd0e5de21873eea
.dword 0x7fee61729d7cfd5e
.dword 0x7f83719108a1e9d6
.dword 0x7f83719108a1e9d6
.dword 0xffaab65b09a91410
.dword 0x7fee61729d7cfd5e
.dword 0xffaab65b09a91410
.dword 0x7fb84df54aca644b
.dword 0x7fdb9017651b96db
.dword 0x7ff0000000000000
.dword 0x7fb84df54aca644b
.dword 0x7fb84df54aca644b
.dword 0x7ff0000000000000
.dword 0x7fee61729d7cfd5e
.dword 0x7fdb9017651b96db
.dword 0x7fee61729d7cfd5e
.dword 0x7fe363e504d94fe2
.dword 0x7fe363e504d94fe2
.dword 0x7fee61729d7cfd5e
.dword 0x7fee61729d7cfd5e
.dword 0x7feabc6824ad2440
.dword 0x7feabc6824ad2440
.dword 0x7fee61729d7cfd5e
.dword 0x7fee61729d7cfd5e
.dword 0x7fee97d52f73d2ed
.dword 0x7fee97d52f73d2ed
.dword 0x7fee61729d7cfd5e
.dword 0x7fdb9017651b96db
.dword 0x7fdb9017651b96db
.dword 0x7fdb9017651b96db
.dword 0x401ef7eded580ce9
.dword 0x7fdb9017651b96db
.dword 0x0
.dword 0x7fdb9017651b96db
.dword 0x2bd5fdfc44e580
.dword 0x2bd5fdfc44e580
.dword 0x800bb549323294e4
.dword 0x7fdb9017651b96db
.dword 0x800bb549323294e4
.dword 0x7fdb9017651b96db
.dword 0x8e851467c726
.dword 0x8e851467c726
.dword 0x8000153814fb5b84
.dword 0x7fdb9017651b96db
.dword 0x8000153814fb5b84
.dword 0x2bd5fdfc44e580
.dword 0x800d7743860024db
.dword 0x7fdb9017651b96db
.dword 0x800d7743860024db
.dword 0x2bd5fdfc44e580
.dword 0x800b11df817f3079
.dword 0x7fdb9017651b96db
.dword 0x800b11df817f3079
.dword 0x2bd5fdfc44e580
.dword 0x800ea45d43472379
.dword 0x7fdb9017651b96db
.dword 0x800ea45d43472379
.dword 0x7fdb9017651b96db
.dword 0x59132cc0dc780
.dword 0x59132cc0dc780
.dword 0x71e1f6d010ef7
.dword 0x7fdb9017651b96db
.dword 0x71e1f6d010ef7
.dword 0x2bd5fdfc44e580
.dword 0xb91751db871ea
.dword 0x7fdb9017651b96db
.dword 0xb91751db871ea
.dword 0x2bd5fdfc44e580
.dword 0x94c9c955ccc4c
.dword 0x7fdb9017651b96db
.dword 0x94c9c955ccc4c
.dword 0x2bd5fdfc44e580
.dword 0xab73739b529c7
.dword 0x7fdb9017651b96db
.dword 0xab73739b529c7
.dword 0x59132cc0dc780
.dword 0xe7a2682ee434
.dword 0x7fdb9017651b96db
.dword 0xe7a2682ee434
.dword 0x7fdb9017651b96db
.dword 0x7ff0000000000000
.dword 0x7fdb9017651b96db
.dword 0xffe3682ff4c90ae0
.dword 0x7fdb9017651b96db
.dword 0x7fa60cdf84161249
.dword 0x7fa60cdf84161249
.dword 0xffaab65b09a91410
.dword 0x7fdb9017651b96db
.dword 0xffaab65b09a91410
.dword 0x7fdb9017651b96db
.dword 0x7fee61729d7cfd5e
.dword 0x7faf063b3af54c9d
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x7faf063b3af54c9d
.dword 0x7fdb9017651b96db
.dword 0x7fe363e504d94fe2
.dword 0x7fb5638683bdb69a
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x7fb5638683bdb69a
.dword 0x7fdb9017651b96db
.dword 0x7feabc6824ad2440
.dword 0x7fb879775929758a
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x7fb879775929758a
.dword 0x7fdb9017651b96db
.dword 0x7fee97d52f73d2ed
.dword 0x7fe363e504d94fe2
.dword 0x7fe363e504d94fe2
.dword 0x7fe363e504d94fe2
.dword 0x3ff16dc795a2b73d
.dword 0x7fe363e504d94fe2
.dword 0x0
.dword 0x7fe363e504d94fe2
.dword 0x7d53a47591bb8
.dword 0x7d53a47591bb8
.dword 0x800bb549323294e4
.dword 0x7fe363e504d94fe2
.dword 0x800bb549323294e4
.dword 0x7fe363e504d94fe2
.dword 0x140d61fe54c2
.dword 0x140d61fe54c2
.dword 0x8000153814fb5b84
.dword 0x7fe363e504d94fe2
.dword 0x8000153814fb5b84
.dword 0x7d53a47591bb8
.dword 0x800d7743860024db
.dword 0x7fe363e504d94fe2
.dword 0x800d7743860024db
.dword 0x7d53a47591bb8
.dword 0x800b11df817f3079
.dword 0x7fe363e504d94fe2
.dword 0x800b11df817f3079
.dword 0x7d53a47591bb8
.dword 0x800ea45d43472379
.dword 0x7fe363e504d94fe2
.dword 0x800ea45d43472379
.dword 0x7fe363e504d94fe2
.dword 0xc885d3ef4f92
.dword 0xc885d3ef4f92
.dword 0x71e1f6d010ef7
.dword 0x7fe363e504d94fe2
.dword 0x71e1f6d010ef7
.dword 0x7d53a47591bb8
.dword 0xb91751db871ea
.dword 0x7fe363e504d94fe2
.dword 0xb91751db871ea
.dword 0x7d53a47591bb8
.dword 0x94c9c955ccc4c
.dword 0x7fe363e504d94fe2
.dword 0x94c9c955ccc4c
.dword 0x7d53a47591bb8
.dword 0xab73739b529c7
.dword 0x7fe363e504d94fe2
.dword 0xab73739b529c7
.dword 0xc885d3ef4f92
.dword 0xe7a2682ee434
.dword 0x7fe363e504d94fe2
.dword 0xe7a2682ee434
.dword 0x7fe363e504d94fe2
.dword 0x7faf063b3af54c9d
.dword 0x7faf063b3af54c9d
.dword 0xffdd2c340883a998
.dword 0x7fe363e504d94fe2
.dword 0xffdd2c340883a998
.dword 0x7faf063b3af54c9d
.dword 0xffd92a290fb6d0de
.dword 0x7fe363e504d94fe2
.dword 0xffd92a290fb6d0de
.dword 0x7faf063b3af54c9d
.dword 0xffd0e5de21873eea
.dword 0x7fe363e504d94fe2
.dword 0xffd0e5de21873eea
.dword 0x7fe363e504d94fe2
.dword 0x7f78d1c8fbf7707e
.dword 0x7f78d1c8fbf7707e
.dword 0xffaab65b09a91410
.dword 0x7fe363e504d94fe2
.dword 0xffaab65b09a91410
.dword 0x7faf063b3af54c9d
.dword 0x7fdb9017651b96db
.dword 0x7fe363e504d94fe2
.dword 0x7fdb9017651b96db
.dword 0x7fe363e504d94fe2
.dword 0x7feabc6824ad2440
.dword 0x7feabc6824ad2440
.dword 0x7fe363e504d94fe2
.dword 0x7fe363e504d94fe2
.dword 0x7fee97d52f73d2ed
.dword 0x7fee97d52f73d2ed
.dword 0x7fe363e504d94fe2
.dword 0x7feabc6824ad2440
.dword 0x7feabc6824ad2440
.dword 0x7feabc6824ad2440
.dword 0x3ff80812523614ab
.dword 0x7feabc6824ad2440
.dword 0x0
.dword 0x7feabc6824ad2440
.dword 0xacce25b46ca92
.dword 0xacce25b46ca92
.dword 0x800bb549323294e4
.dword 0x7feabc6824ad2440
.dword 0x800bb549323294e4
.dword 0x7feabc6824ad2440
.dword 0x1ba61a834496
.dword 0x1ba61a834496
.dword 0x8000153814fb5b84
.dword 0x7feabc6824ad2440
.dword 0x8000153814fb5b84
.dword 0xacce25b46ca92
.dword 0x800d7743860024db
.dword 0x7feabc6824ad2440
.dword 0x800d7743860024db
.dword 0xacce25b46ca92
.dword 0x800b11df817f3079
.dword 0x7feabc6824ad2440
.dword 0x800b11df817f3079
.dword 0xacce25b46ca92
.dword 0x800ea45d43472379
.dword 0x7feabc6824ad2440
.dword 0x800ea45d43472379
.dword 0x7feabc6824ad2440
.dword 0x1147d0920addb
.dword 0x1147d0920addb
.dword 0x71e1f6d010ef7
.dword 0x7feabc6824ad2440
.dword 0x71e1f6d010ef7
.dword 0xacce25b46ca92
.dword 0xb91751db871ea
.dword 0x7feabc6824ad2440
.dword 0xb91751db871ea
.dword 0xacce25b46ca92
.dword 0x94c9c955ccc4c
.dword 0x7feabc6824ad2440
.dword 0x94c9c955ccc4c
.dword 0xacce25b46ca92
.dword 0xab73739b529c7
.dword 0x7feabc6824ad2440
.dword 0xab73739b529c7
.dword 0x1147d0920addb
.dword 0xe7a2682ee434
.dword 0x7feabc6824ad2440
.dword 0xe7a2682ee434
.dword 0x7feabc6824ad2440
.dword 0x7fb5638683bdb69a
.dword 0x7fb5638683bdb69a
.dword 0xffdd2c340883a998
.dword 0x7feabc6824ad2440
.dword 0xffdd2c340883a998
.dword 0x7fb5638683bdb69a
.dword 0xffd92a290fb6d0de
.dword 0x7feabc6824ad2440
.dword 0xffd92a290fb6d0de
.dword 0x7fb5638683bdb69a
.dword 0xffd0e5de21873eea
.dword 0x7feabc6824ad2440
.dword 0xffd0e5de21873eea
.dword 0x7feabc6824ad2440
.dword 0x7f811c6b9c97c548
.dword 0x7f811c6b9c97c548
.dword 0xffaab65b09a91410
.dword 0x7feabc6824ad2440
.dword 0xffaab65b09a91410
.dword 0x7fb5638683bdb69a
.dword 0x7fdb9017651b96db
.dword 0x7feabc6824ad2440
.dword 0x7fdb9017651b96db
.dword 0x7feabc6824ad2440
.dword 0x7fee97d52f73d2ed
.dword 0x7fee97d52f73d2ed
.dword 0x7feabc6824ad2440
.dword 0x7fee97d52f73d2ed
.dword 0x3ffb7f9db1715774
.dword 0x7fee97d52f73d2ed
.dword 0x0
.dword 0x7fee97d52f73d2ed
.dword 0xc5bc46ffcb5d2
.dword 0xc5bc46ffcb5d2
.dword 0x800bb549323294e4
.dword 0x7fee97d52f73d2ed
.dword 0x800bb549323294e4
.dword 0x7fee97d52f73d2ed
.dword 0x1fa33e8f53bd
.dword 0x1fa33e8f53bd
.dword 0x8000153814fb5b84
.dword 0x7fee97d52f73d2ed
.dword 0x8000153814fb5b84
.dword 0xc5bc46ffcb5d2
.dword 0x800d7743860024db
.dword 0x7fee97d52f73d2ed
.dword 0x800d7743860024db
.dword 0xc5bc46ffcb5d2
.dword 0x800b11df817f3079
.dword 0x7fee97d52f73d2ed
.dword 0x800b11df817f3079
.dword 0xc5bc46ffcb5d2
.dword 0x800ea45d43472379
.dword 0x7fee97d52f73d2ed
.dword 0x800ea45d43472379
.dword 0x7fee97d52f73d2ed
.dword 0x13c6071994562
.dword 0x13c6071994562
.dword 0x71e1f6d010ef7
.dword 0x7fee97d52f73d2ed
.dword 0x71e1f6d010ef7
.dword 0xc5bc46ffcb5d2
.dword 0xb91751db871ea
.dword 0x7fee97d52f73d2ed
.dword 0xb91751db871ea
.dword 0xc5bc46ffcb5d2
.dword 0x94c9c955ccc4c
.dword 0x7fee97d52f73d2ed
.dword 0x94c9c955ccc4c
.dword 0xc5bc46ffcb5d2
.dword 0xab73739b529c7
.dword 0x7fee97d52f73d2ed
.dword 0xab73739b529c7
.dword 0x13c6071994562
.dword 0xe7a2682ee434
.dword 0x7fee97d52f73d2ed
.dword 0xe7a2682ee434
.dword 0x7fee97d52f73d2ed
.dword 0x7fb879775929758a
.dword 0x7fb879775929758a
.dword 0xffdd2c340883a998
.dword 0x7fee97d52f73d2ed
.dword 0xffdd2c340883a998
.dword 0x7fb879775929758a
.dword 0xffd92a290fb6d0de
.dword 0x7fee97d52f73d2ed
.dword 0xffd92a290fb6d0de
.dword 0x7fb879775929758a
.dword 0xffd0e5de21873eea
.dword 0x7fee97d52f73d2ed
.dword 0xffd0e5de21873eea
.dword 0x7fee97d52f73d2ed
.dword 0x7f83945f7a87913c
.dword 0x7f83945f7a87913c
.dword 0xffaab65b09a91410
.dword 0x7fee97d52f73d2ed
.dword 0xffaab65b09a91410
.dword 0x7fb879775929758a
.dword 0x7fdb9017651b96db
.dword 0x7fee97d52f73d2ed
.dword 0x7fdb9017651b96db
.dword 0x0
.dword 0x0
.dword 0xbffa0d2ebbb9cec0
.dword 0x0
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 20*(XLEN/32),4,0xdeadbeef


signature_x19_0:
    .fill 4*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 4*(XLEN/32),4,0xdeadbeef


signature_x19_1:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_8:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_9:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_10:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_11:
    .fill 240*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
