
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:00 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V FD extension for the fmsub_b5 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmsub_b5)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f15, rs2==f26, rs3==f2, rd==f15, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b9ad0f953a6d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdd010c341e476 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34f069651326f and rm_val == 0  
// opcode: fmsub.d ; op1:f15; op2:f26; op3:f2; dest:f15; op1val:0x7fd4b9ad0f953a6d; op2val:0x3fddd010c341e476; op3val:0x7fc34f069651326f; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f15, f15, f26, f2, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f0, rs2==f5, rs3==f0, rd==f28, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe2f460df71daf and fs2 == 0 and fe2 == 0x402 and fm2 == 0xa0fdaacb5fbcf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8955d5926548d and rm_val == 4  
// opcode: fmsub.d ; op1:f0; op2:f5; op3:f0; dest:f28; op1val:0x7fae2f460df71daf; op2val:0x402a0fdaacb5fbcf; op3val:0x7fae2f460df71daf; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f28, f0, f5, f0, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f16, rs2==f1, rs3==f1, rd==f3, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe2f460df71daf and fs2 == 0 and fe2 == 0x402 and fm2 == 0xa0fdaacb5fbcf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8955d5926548d and rm_val == 3  
// opcode: fmsub.d ; op1:f16; op2:f1; op3:f1; dest:f3; op1val:0x7fae2f460df71daf; op2val:0x402a0fdaacb5fbcf; op3val:0x402a0fdaacb5fbcf; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f3, f16, f1, f1, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f24, rs2==f16, rs3==f17, rd==f10, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe2f460df71daf and fs2 == 0 and fe2 == 0x402 and fm2 == 0xa0fdaacb5fbcf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8955d5926548d and rm_val == 2  
// opcode: fmsub.d ; op1:f24; op2:f16; op3:f17; dest:f10; op1val:0x7fae2f460df71daf; op2val:0x402a0fdaacb5fbcf; op3val:0x7fe8955d5926548d; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f10, f24, f16, f17, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f4, rs2==f30, rs3==f22, rd==f30, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe2f460df71daf and fs2 == 0 and fe2 == 0x402 and fm2 == 0xa0fdaacb5fbcf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8955d5926548d and rm_val == 1  
// opcode: fmsub.d ; op1:f4; op2:f30; op3:f22; dest:f30; op1val:0x7fae2f460df71daf; op2val:0x402a0fdaacb5fbcf; op3val:0x7fe8955d5926548d; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f30, f4, f30, f22, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f28, rs2==f28, rs3==f30, rd==f13, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe2f460df71daf and fs2 == 0 and fe2 == 0x402 and fm2 == 0xa0fdaacb5fbcf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8955d5926548d and rm_val == 0  
// opcode: fmsub.d ; op1:f28; op2:f28; op3:f30; dest:f13; op1val:0x7fae2f460df71daf; op2val:0x7fae2f460df71daf; op3val:0x7fe8955d5926548d; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f28, f28, f30, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rd == rs3 != rs2, rs1==f6, rs2==f10, rs3==f6, rd==f6, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5829bf9c6538f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64c2b92225f5e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdf9fd6fcc553f and rm_val == 4  
// opcode: fmsub.d ; op1:f6; op2:f10; op3:f6; dest:f6; op1val:0x7fc5829bf9c6538f; op2val:0x3fe64c2b92225f5e; op3val:0x7fc5829bf9c6538f; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f6, f6, f10, f6, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rd == rs2 == rs3 != rs1, rs1==f11, rs2==f31, rs3==f31, rd==f31, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5829bf9c6538f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64c2b92225f5e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdf9fd6fcc553f and rm_val == 3  
// opcode: fmsub.d ; op1:f11; op2:f31; op3:f31; dest:f31; op1val:0x7fc5829bf9c6538f; op2val:0x3fe64c2b92225f5e; op3val:0x3fe64c2b92225f5e; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f31, f11, f31, f31, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f19, rs2==f19, rs3==f19, rd==f19, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5829bf9c6538f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64c2b92225f5e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdf9fd6fcc553f and rm_val == 2  
// opcode: fmsub.d ; op1:f19; op2:f19; op3:f19; dest:f19; op1val:0x7fc5829bf9c6538f; op2val:0x7fc5829bf9c6538f; op3val:0x7fc5829bf9c6538f; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f19, f19, f19, f19, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 != rd, rs1==f9, rs2==f9, rs3==f9, rd==f23, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5829bf9c6538f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64c2b92225f5e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdf9fd6fcc553f and rm_val == 1  
// opcode: fmsub.d ; op1:f9; op2:f9; op3:f9; dest:f23; op1val:0x7fc5829bf9c6538f; op2val:0x7fc5829bf9c6538f; op3val:0x7fc5829bf9c6538f; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f23, f9, f9, f9, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 == rd != rs3, rs1==f17, rs2==f17, rs3==f11, rd==f17, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5829bf9c6538f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64c2b92225f5e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdf9fd6fcc553f and rm_val == 0  
// opcode: fmsub.d ; op1:f17; op2:f17; op3:f11; dest:f17; op1val:0x7fc5829bf9c6538f; op2val:0x7fc5829bf9c6538f; op3val:0x7fbdf9fd6fcc553f; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f17, f17, f17, f11, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f7, rs2==f8, rs3==f5, rd==f5, fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x71abc78672bff and fs2 == 0 and fe2 == 0x403 and fm2 == 0x4766a61cffe7f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd8c6a62d7fd8f and rm_val == 4  
// opcode: fmsub.d ; op1:f7; op2:f8; op3:f5; dest:f5; op1val:0x7f971abc78672bff; op2val:0x4034766a61cffe7f; op3val:0x7fdd8c6a62d7fd8f; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f5, f7, f8, f5, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f14, rs2==f27, rs3==f8, rd==f18, fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x71abc78672bff and fs2 == 0 and fe2 == 0x403 and fm2 == 0x4766a61cffe7f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd8c6a62d7fd8f and rm_val == 3  
// opcode: fmsub.d ; op1:f14; op2:f27; op3:f8; dest:f18; op1val:0x7f971abc78672bff; op2val:0x4034766a61cffe7f; op3val:0x7fdd8c6a62d7fd8f; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f18, f14, f27, f8, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f3, rs2==f21, rs3==f25, rd==f0, fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x71abc78672bff and fs2 == 0 and fe2 == 0x403 and fm2 == 0x4766a61cffe7f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd8c6a62d7fd8f and rm_val == 2  
// opcode: fmsub.d ; op1:f3; op2:f21; op3:f25; dest:f0; op1val:0x7f971abc78672bff; op2val:0x4034766a61cffe7f; op3val:0x7fdd8c6a62d7fd8f; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f0, f3, f21, f25, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f25, rs2==f4, rs3==f23, rd==f16, fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x71abc78672bff and fs2 == 0 and fe2 == 0x403 and fm2 == 0x4766a61cffe7f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd8c6a62d7fd8f and rm_val == 1  
// opcode: fmsub.d ; op1:f25; op2:f4; op3:f23; dest:f16; op1val:0x7f971abc78672bff; op2val:0x4034766a61cffe7f; op3val:0x7fdd8c6a62d7fd8f; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f16, f25, f4, f23, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f2, rs2==f13, rs3==f15, rd==f12, fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x71abc78672bff and fs2 == 0 and fe2 == 0x403 and fm2 == 0x4766a61cffe7f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd8c6a62d7fd8f and rm_val == 0  
// opcode: fmsub.d ; op1:f2; op2:f13; op3:f15; dest:f12; op1val:0x7f971abc78672bff; op2val:0x4034766a61cffe7f; op3val:0x7fdd8c6a62d7fd8f; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f12, f2, f13, f15, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f13, rs2==f15, rs3==f18, rd==f8, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0ce9718a893 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbbb2d2c120e46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5659a61635557 and rm_val == 4  
// opcode: fmsub.d ; op1:f13; op2:f15; op3:f18; dest:f8; op1val:0x7fd8b0ce9718a893; op2val:0x3ffbbb2d2c120e46; op3val:0x7fe5659a61635557; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f8, f13, f15, f18, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f31, rs2==f11, rs3==f24, rd==f2, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0ce9718a893 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbbb2d2c120e46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5659a61635557 and rm_val == 3  
// opcode: fmsub.d ; op1:f31; op2:f11; op3:f24; dest:f2; op1val:0x7fd8b0ce9718a893; op2val:0x3ffbbb2d2c120e46; op3val:0x7fe5659a61635557; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f2, f31, f11, f24, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f18, rs2==f6, rs3==f21, rd==f26, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0ce9718a893 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbbb2d2c120e46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5659a61635557 and rm_val == 2  
// opcode: fmsub.d ; op1:f18; op2:f6; op3:f21; dest:f26; op1val:0x7fd8b0ce9718a893; op2val:0x3ffbbb2d2c120e46; op3val:0x7fe5659a61635557; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f26, f18, f6, f21, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f26, rs2==f22, rs3==f10, rd==f21, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0ce9718a893 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbbb2d2c120e46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5659a61635557 and rm_val == 1  
// opcode: fmsub.d ; op1:f26; op2:f22; op3:f10; dest:f21; op1val:0x7fd8b0ce9718a893; op2val:0x3ffbbb2d2c120e46; op3val:0x7fe5659a61635557; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f21, f26, f22, f10, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f10, rs2==f25, rs3==f4, rd==f9, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0ce9718a893 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbbb2d2c120e46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5659a61635557 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f25; op3:f4; dest:f9; op1val:0x7fd8b0ce9718a893; op2val:0x3ffbbb2d2c120e46; op3val:0x7fe5659a61635557; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f9, f10, f25, f4, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f20, rs2==f12, rs3==f14, rd==f11, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4d3535c8560c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6290a8daf6d85 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x236d02dbba759 and rm_val == 4  
// opcode: fmsub.d ; op1:f20; op2:f12; op3:f14; dest:f11; op1val:0x7fea4d3535c8560c; op2val:0x3fd6290a8daf6d85; op3val:0x7fd236d02dbba759; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f11, f20, f12, f14, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f30, rs2==f20, rs3==f26, rd==f22, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4d3535c8560c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6290a8daf6d85 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x236d02dbba759 and rm_val == 3  
// opcode: fmsub.d ; op1:f30; op2:f20; op3:f26; dest:f22; op1val:0x7fea4d3535c8560c; op2val:0x3fd6290a8daf6d85; op3val:0x7fd236d02dbba759; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f22, f30, f20, f26, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f12, rs2==f0, rs3==f13, rd==f24, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4d3535c8560c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6290a8daf6d85 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x236d02dbba759 and rm_val == 2  
// opcode: fmsub.d ; op1:f12; op2:f0; op3:f13; dest:f24; op1val:0x7fea4d3535c8560c; op2val:0x3fd6290a8daf6d85; op3val:0x7fd236d02dbba759; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f24, f12, f0, f13, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f1, rs2==f2, rs3==f16, rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4d3535c8560c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6290a8daf6d85 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x236d02dbba759 and rm_val == 1  
// opcode: fmsub.d ; op1:f1; op2:f2; op3:f16; dest:f29; op1val:0x7fea4d3535c8560c; op2val:0x3fd6290a8daf6d85; op3val:0x7fd236d02dbba759; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f29, f1, f2, f16, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f27, rs2==f24, rs3==f20, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4d3535c8560c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6290a8daf6d85 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x236d02dbba759 and rm_val == 0  
// opcode: fmsub.d ; op1:f27; op2:f24; op3:f20; dest:f4; op1val:0x7fea4d3535c8560c; op2val:0x3fd6290a8daf6d85; op3val:0x7fd236d02dbba759; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f4, f27, f24, f20, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f21, rs2==f14, rs3==f12, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b547924fd121 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x88dcc2c35a5a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfc77122b9963b and rm_val == 4  
// opcode: fmsub.d ; op1:f21; op2:f14; op3:f12; dest:f7; op1val:0x7fe4b547924fd121; op2val:0x3ff88dcc2c35a5a1; op3val:0x7fefc77122b9963b; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f7, f21, f14, f12, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f22, rs2==f7, rs3==f3, rd==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b547924fd121 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x88dcc2c35a5a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfc77122b9963b and rm_val == 3  
// opcode: fmsub.d ; op1:f22; op2:f7; op3:f3; dest:f25; op1val:0x7fe4b547924fd121; op2val:0x3ff88dcc2c35a5a1; op3val:0x7fefc77122b9963b; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f25, f22, f7, f3, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f29, rs2==f18, rs3==f28, rd==f14, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b547924fd121 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x88dcc2c35a5a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfc77122b9963b and rm_val == 2  
// opcode: fmsub.d ; op1:f29; op2:f18; op3:f28; dest:f14; op1val:0x7fe4b547924fd121; op2val:0x3ff88dcc2c35a5a1; op3val:0x7fefc77122b9963b; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f14, f29, f18, f28, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f8, rs2==f23, rs3==f29, rd==f20, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b547924fd121 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x88dcc2c35a5a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfc77122b9963b and rm_val == 1  
// opcode: fmsub.d ; op1:f8; op2:f23; op3:f29; dest:f20; op1val:0x7fe4b547924fd121; op2val:0x3ff88dcc2c35a5a1; op3val:0x7fefc77122b9963b; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f20, f8, f23, f29, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f5, rs2==f3, rs3==f7, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b547924fd121 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x88dcc2c35a5a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfc77122b9963b and rm_val == 0  
// opcode: fmsub.d ; op1:f5; op2:f3; op3:f7; dest:f1; op1val:0x7fe4b547924fd121; op2val:0x3ff88dcc2c35a5a1; op3val:0x7fefc77122b9963b; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f1, f5, f3, f7, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f23, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf10102ecb507f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x72003d0023fd5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6729f653d09b6 and rm_val == 4  
// opcode: fmsub.d ; op1:f23; op2:f21; op3:f28; dest:f6; op1val:0x7faf10102ecb507f; op2val:0x40272003d0023fd5; op3val:0x7fe6729f653d09b6; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f6, f23, f21, f28, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// rs2==f29, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf10102ecb507f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x72003d0023fd5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6729f653d09b6 and rm_val == 3  
// opcode: fmsub.d ; op1:f12; op2:f29; op3:f11; dest:f0; op1val:0x7faf10102ecb507f; op2val:0x40272003d0023fd5; op3val:0x7fe6729f653d09b6; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f0, f12, f29, f11, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// rs3==f27, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf10102ecb507f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x72003d0023fd5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6729f653d09b6 and rm_val == 2  
// opcode: fmsub.d ; op1:f16; op2:f25; op3:f27; dest:f9; op1val:0x7faf10102ecb507f; op2val:0x40272003d0023fd5; op3val:0x7fe6729f653d09b6; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f9, f16, f25, f27, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// rd==f27, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf10102ecb507f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x72003d0023fd5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6729f653d09b6 and rm_val == 1  
// opcode: fmsub.d ; op1:f11; op2:f17; op3:f4; dest:f27; op1val:0x7faf10102ecb507f; op2val:0x40272003d0023fd5; op3val:0x7fe6729f653d09b6; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f27, f11, f17, f4, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf10102ecb507f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x72003d0023fd5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6729f653d09b6 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7faf10102ecb507f; op2val:0x40272003d0023fd5; op3val:0x7fe6729f653d09b6; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe57a08d938ac9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x669fb3be375cc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x540bc20428f59 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde57a08d938ac9; op2val:0x3ff669fb3be375cc; op3val:0x7fe540bc20428f59; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe57a08d938ac9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x669fb3be375cc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x540bc20428f59 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde57a08d938ac9; op2val:0x3ff669fb3be375cc; op3val:0x7fe540bc20428f59; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe57a08d938ac9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x669fb3be375cc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x540bc20428f59 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde57a08d938ac9; op2val:0x3ff669fb3be375cc; op3val:0x7fe540bc20428f59; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe57a08d938ac9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x669fb3be375cc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x540bc20428f59 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde57a08d938ac9; op2val:0x3ff669fb3be375cc; op3val:0x7fe540bc20428f59; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe57a08d938ac9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x669fb3be375cc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x540bc20428f59 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde57a08d938ac9; op2val:0x3ff669fb3be375cc; op3val:0x7fe540bc20428f59; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae1041c5fd79f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fe9f24a7455f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe3ad3d9146af5 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feae1041c5fd79f; op2val:0x3ff1fe9f24a7455f; op3val:0x7fee3ad3d9146af5; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae1041c5fd79f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fe9f24a7455f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe3ad3d9146af5 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feae1041c5fd79f; op2val:0x3ff1fe9f24a7455f; op3val:0x7fee3ad3d9146af5; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae1041c5fd79f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fe9f24a7455f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe3ad3d9146af5 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feae1041c5fd79f; op2val:0x3ff1fe9f24a7455f; op3val:0x7fee3ad3d9146af5; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae1041c5fd79f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fe9f24a7455f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe3ad3d9146af5 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feae1041c5fd79f; op2val:0x3ff1fe9f24a7455f; op3val:0x7fee3ad3d9146af5; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae1041c5fd79f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fe9f24a7455f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe3ad3d9146af5 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feae1041c5fd79f; op2val:0x3ff1fe9f24a7455f; op3val:0x7fee3ad3d9146af5; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28e8063300472 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x92cabe4efe922 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd3277d88cd395 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe28e8063300472; op2val:0x3fe92cabe4efe922; op3val:0x7fdd3277d88cd395; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28e8063300472 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x92cabe4efe922 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd3277d88cd395 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe28e8063300472; op2val:0x3fe92cabe4efe922; op3val:0x7fdd3277d88cd395; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28e8063300472 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x92cabe4efe922 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd3277d88cd395 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe28e8063300472; op2val:0x3fe92cabe4efe922; op3val:0x7fdd3277d88cd395; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28e8063300472 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x92cabe4efe922 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd3277d88cd395 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe28e8063300472; op2val:0x3fe92cabe4efe922; op3val:0x7fdd3277d88cd395; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28e8063300472 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x92cabe4efe922 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd3277d88cd395 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe28e8063300472; op2val:0x3fe92cabe4efe922; op3val:0x7fdd3277d88cd395; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63fdc11669528 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb5ae43b7daad0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30513f9fc9850 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63fdc11669528; op2val:0x3feb5ae43b7daad0; op3val:0x7fe30513f9fc9850; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63fdc11669528 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb5ae43b7daad0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30513f9fc9850 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63fdc11669528; op2val:0x3feb5ae43b7daad0; op3val:0x7fe30513f9fc9850; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63fdc11669528 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb5ae43b7daad0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30513f9fc9850 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63fdc11669528; op2val:0x3feb5ae43b7daad0; op3val:0x7fe30513f9fc9850; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63fdc11669528 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb5ae43b7daad0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30513f9fc9850 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63fdc11669528; op2val:0x3feb5ae43b7daad0; op3val:0x7fe30513f9fc9850; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63fdc11669528 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb5ae43b7daad0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30513f9fc9850 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63fdc11669528; op2val:0x3feb5ae43b7daad0; op3val:0x7fe30513f9fc9850; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc03ea0b45fe6a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6ef94d7b62f69 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4147072b89211 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec03ea0b45fe6a; op2val:0x3fd6ef94d7b62f69; op3val:0x7fd4147072b89211; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc03ea0b45fe6a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6ef94d7b62f69 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4147072b89211 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec03ea0b45fe6a; op2val:0x3fd6ef94d7b62f69; op3val:0x7fd4147072b89211; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc03ea0b45fe6a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6ef94d7b62f69 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4147072b89211 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec03ea0b45fe6a; op2val:0x3fd6ef94d7b62f69; op3val:0x7fd4147072b89211; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc03ea0b45fe6a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6ef94d7b62f69 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4147072b89211 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec03ea0b45fe6a; op2val:0x3fd6ef94d7b62f69; op3val:0x7fd4147072b89211; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc03ea0b45fe6a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6ef94d7b62f69 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4147072b89211 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec03ea0b45fe6a; op2val:0x3fd6ef94d7b62f69; op3val:0x7fd4147072b89211; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8775d523b7834 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7fbb0c63a2134 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2563a7f28084c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8775d523b7834; op2val:0x3fe7fbb0c63a2134; op3val:0x7fe2563a7f28084c; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8775d523b7834 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7fbb0c63a2134 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2563a7f28084c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8775d523b7834; op2val:0x3fe7fbb0c63a2134; op3val:0x7fe2563a7f28084c; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8775d523b7834 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7fbb0c63a2134 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2563a7f28084c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8775d523b7834; op2val:0x3fe7fbb0c63a2134; op3val:0x7fe2563a7f28084c; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8775d523b7834 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7fbb0c63a2134 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2563a7f28084c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8775d523b7834; op2val:0x3fe7fbb0c63a2134; op3val:0x7fe2563a7f28084c; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8775d523b7834 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7fbb0c63a2134 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2563a7f28084c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8775d523b7834; op2val:0x3fe7fbb0c63a2134; op3val:0x7fe2563a7f28084c; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412f93d91b86f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x10b0d09a9e321 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384f7bbd and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa412f93d91b86f; op2val:0x40310b0d09a9e321; op3val:0x7fe56206384f7bbd; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412f93d91b86f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x10b0d09a9e321 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384f7bbd and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa412f93d91b86f; op2val:0x40310b0d09a9e321; op3val:0x7fe56206384f7bbd; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412f93d91b86f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x10b0d09a9e321 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384f7bbd and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa412f93d91b86f; op2val:0x40310b0d09a9e321; op3val:0x7fe56206384f7bbd; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412f93d91b86f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x10b0d09a9e321 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384f7bbd and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa412f93d91b86f; op2val:0x40310b0d09a9e321; op3val:0x7fe56206384f7bbd; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412f93d91b86f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x10b0d09a9e321 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384f7bbd and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa412f93d91b86f; op2val:0x40310b0d09a9e321; op3val:0x7fe56206384f7bbd; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3743aaeeeacbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9bcce06a14cb0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf4b2be35fa361 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3743aaeeeacbb; op2val:0x4009bcce06a14cb0; op3val:0x7fdf4b2be35fa361; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3743aaeeeacbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9bcce06a14cb0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf4b2be35fa361 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3743aaeeeacbb; op2val:0x4009bcce06a14cb0; op3val:0x7fdf4b2be35fa361; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3743aaeeeacbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9bcce06a14cb0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf4b2be35fa361 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3743aaeeeacbb; op2val:0x4009bcce06a14cb0; op3val:0x7fdf4b2be35fa361; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3743aaeeeacbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9bcce06a14cb0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf4b2be35fa361 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3743aaeeeacbb; op2val:0x4009bcce06a14cb0; op3val:0x7fdf4b2be35fa361; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3743aaeeeacbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9bcce06a14cb0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf4b2be35fa361 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3743aaeeeacbb; op2val:0x4009bcce06a14cb0; op3val:0x7fdf4b2be35fa361; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac2863951d7a5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf913c3426f6d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x83a7f9d5e43df and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdac2863951d7a5; op2val:0x3ffcf913c3426f6d; op3val:0x7fe83a7f9d5e43df; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac2863951d7a5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf913c3426f6d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x83a7f9d5e43df and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdac2863951d7a5; op2val:0x3ffcf913c3426f6d; op3val:0x7fe83a7f9d5e43df; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac2863951d7a5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf913c3426f6d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x83a7f9d5e43df and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdac2863951d7a5; op2val:0x3ffcf913c3426f6d; op3val:0x7fe83a7f9d5e43df; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac2863951d7a5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf913c3426f6d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x83a7f9d5e43df and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdac2863951d7a5; op2val:0x3ffcf913c3426f6d; op3val:0x7fe83a7f9d5e43df; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac2863951d7a5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf913c3426f6d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x83a7f9d5e43df and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdac2863951d7a5; op2val:0x3ffcf913c3426f6d; op3val:0x7fe83a7f9d5e43df; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5d97a44af52a and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xed60f4ded2fb1 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe398f1061c0ef and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5d97a44af52a; op2val:0x3fbed60f4ded2fb1; op3val:0x7fbe398f1061c0ef; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5d97a44af52a and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xed60f4ded2fb1 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe398f1061c0ef and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5d97a44af52a; op2val:0x3fbed60f4ded2fb1; op3val:0x7fbe398f1061c0ef; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5d97a44af52a and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xed60f4ded2fb1 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe398f1061c0ef and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5d97a44af52a; op2val:0x3fbed60f4ded2fb1; op3val:0x7fbe398f1061c0ef; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5d97a44af52a and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xed60f4ded2fb1 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe398f1061c0ef and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5d97a44af52a; op2val:0x3fbed60f4ded2fb1; op3val:0x7fbe398f1061c0ef; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5d97a44af52a and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xed60f4ded2fb1 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe398f1061c0ef and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5d97a44af52a; op2val:0x3fbed60f4ded2fb1; op3val:0x7fbe398f1061c0ef; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7579da5cb9b2f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x943579dbdd6c5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x26d9284df25e5 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7579da5cb9b2f; op2val:0x3fd943579dbdd6c5; op3val:0x7fd26d9284df25e5; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7579da5cb9b2f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x943579dbdd6c5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x26d9284df25e5 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7579da5cb9b2f; op2val:0x3fd943579dbdd6c5; op3val:0x7fd26d9284df25e5; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7579da5cb9b2f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x943579dbdd6c5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x26d9284df25e5 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7579da5cb9b2f; op2val:0x3fd943579dbdd6c5; op3val:0x7fd26d9284df25e5; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7579da5cb9b2f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x943579dbdd6c5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x26d9284df25e5 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7579da5cb9b2f; op2val:0x3fd943579dbdd6c5; op3val:0x7fd26d9284df25e5; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7579da5cb9b2f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x943579dbdd6c5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x26d9284df25e5 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7579da5cb9b2f; op2val:0x3fd943579dbdd6c5; op3val:0x7fd26d9284df25e5; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ce68e5faffc7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xaa92f4d6f9193 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0120595fb816 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ce68e5faffc7; op2val:0x3ffaa92f4d6f9193; op3val:0x7fec0120595fb816; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ce68e5faffc7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xaa92f4d6f9193 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0120595fb816 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ce68e5faffc7; op2val:0x3ffaa92f4d6f9193; op3val:0x7fec0120595fb816; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ce68e5faffc7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xaa92f4d6f9193 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0120595fb816 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ce68e5faffc7; op2val:0x3ffaa92f4d6f9193; op3val:0x7fec0120595fb816; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ce68e5faffc7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xaa92f4d6f9193 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0120595fb816 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ce68e5faffc7; op2val:0x3ffaa92f4d6f9193; op3val:0x7fec0120595fb816; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ce68e5faffc7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xaa92f4d6f9193 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0120595fb816 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ce68e5faffc7; op2val:0x3ffaa92f4d6f9193; op3val:0x7fec0120595fb816; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf3e8df14f472f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2d37c75ea8563 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x261add5337480 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcf3e8df14f472f; op2val:0x4002d37c75ea8563; op3val:0x7fe261add5337480; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf3e8df14f472f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2d37c75ea8563 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x261add5337480 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcf3e8df14f472f; op2val:0x4002d37c75ea8563; op3val:0x7fe261add5337480; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf3e8df14f472f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2d37c75ea8563 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x261add5337480 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcf3e8df14f472f; op2val:0x4002d37c75ea8563; op3val:0x7fe261add5337480; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf3e8df14f472f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2d37c75ea8563 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x261add5337480 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcf3e8df14f472f; op2val:0x4002d37c75ea8563; op3val:0x7fe261add5337480; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf3e8df14f472f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2d37c75ea8563 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x261add5337480 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcf3e8df14f472f; op2val:0x4002d37c75ea8563; op3val:0x7fe261add5337480; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96b8e84b814c5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc2858a780d3ff and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65e29931e8ba7 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe96b8e84b814c5; op2val:0x3fec2858a780d3ff; op3val:0x7fe65e29931e8ba7; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96b8e84b814c5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc2858a780d3ff and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65e29931e8ba7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe96b8e84b814c5; op2val:0x3fec2858a780d3ff; op3val:0x7fe65e29931e8ba7; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96b8e84b814c5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc2858a780d3ff and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65e29931e8ba7 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe96b8e84b814c5; op2val:0x3fec2858a780d3ff; op3val:0x7fe65e29931e8ba7; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96b8e84b814c5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc2858a780d3ff and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65e29931e8ba7 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe96b8e84b814c5; op2val:0x3fec2858a780d3ff; op3val:0x7fe65e29931e8ba7; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96b8e84b814c5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc2858a780d3ff and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65e29931e8ba7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe96b8e84b814c5; op2val:0x3fec2858a780d3ff; op3val:0x7fe65e29931e8ba7; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd00f90ae48549 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x52abf187430ec and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x32f61e9fcc711 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd00f90ae48549; op2val:0x3fe52abf187430ec; op3val:0x7fd32f61e9fcc711; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd00f90ae48549 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x52abf187430ec and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x32f61e9fcc711 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd00f90ae48549; op2val:0x3fe52abf187430ec; op3val:0x7fd32f61e9fcc711; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd00f90ae48549 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x52abf187430ec and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x32f61e9fcc711 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd00f90ae48549; op2val:0x3fe52abf187430ec; op3val:0x7fd32f61e9fcc711; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd00f90ae48549 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x52abf187430ec and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x32f61e9fcc711 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd00f90ae48549; op2val:0x3fe52abf187430ec; op3val:0x7fd32f61e9fcc711; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd00f90ae48549 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x52abf187430ec and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x32f61e9fcc711 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd00f90ae48549; op2val:0x3fe52abf187430ec; op3val:0x7fd32f61e9fcc711; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x41afcbbb98d77 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdd2d56b3ae715 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bcec3bb19a9d and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd41afcbbb98d77; op2val:0x3ffdd2d56b3ae715; op3val:0x7fe2bcec3bb19a9d; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x41afcbbb98d77 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdd2d56b3ae715 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bcec3bb19a9d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd41afcbbb98d77; op2val:0x3ffdd2d56b3ae715; op3val:0x7fe2bcec3bb19a9d; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x41afcbbb98d77 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdd2d56b3ae715 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bcec3bb19a9d and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd41afcbbb98d77; op2val:0x3ffdd2d56b3ae715; op3val:0x7fe2bcec3bb19a9d; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x41afcbbb98d77 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdd2d56b3ae715 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bcec3bb19a9d and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd41afcbbb98d77; op2val:0x3ffdd2d56b3ae715; op3val:0x7fe2bcec3bb19a9d; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x41afcbbb98d77 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdd2d56b3ae715 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bcec3bb19a9d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd41afcbbb98d77; op2val:0x3ffdd2d56b3ae715; op3val:0x7fe2bcec3bb19a9d; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c5d62a207b44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41c339608df40 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb5dac1e37c3b7 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5c5d62a207b44; op2val:0x3fe41c339608df40; op3val:0x7fdb5dac1e37c3b7; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c5d62a207b44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41c339608df40 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb5dac1e37c3b7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5c5d62a207b44; op2val:0x3fe41c339608df40; op3val:0x7fdb5dac1e37c3b7; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c5d62a207b44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41c339608df40 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb5dac1e37c3b7 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5c5d62a207b44; op2val:0x3fe41c339608df40; op3val:0x7fdb5dac1e37c3b7; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c5d62a207b44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41c339608df40 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb5dac1e37c3b7 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5c5d62a207b44; op2val:0x3fe41c339608df40; op3val:0x7fdb5dac1e37c3b7; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c5d62a207b44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41c339608df40 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb5dac1e37c3b7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5c5d62a207b44; op2val:0x3fe41c339608df40; op3val:0x7fdb5dac1e37c3b7; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xba5199ddf7689 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fae840b679dda5f; op2val:0x400ba5199ddf7689; op3val:0x7fca5cdae7f1504f; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xba5199ddf7689 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fae840b679dda5f; op2val:0x400ba5199ddf7689; op3val:0x7fca5cdae7f1504f; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xba5199ddf7689 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fae840b679dda5f; op2val:0x400ba5199ddf7689; op3val:0x7fca5cdae7f1504f; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xba5199ddf7689 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fae840b679dda5f; op2val:0x400ba5199ddf7689; op3val:0x7fca5cdae7f1504f; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xba5199ddf7689 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fae840b679dda5f; op2val:0x400ba5199ddf7689; op3val:0x7fca5cdae7f1504f; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1871f66d9338f and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xd5883b90379fc and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x012f0320f4e17 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1871f66d9338f; op2val:0x3fbd5883b90379fc; op3val:0x7fb012f0320f4e17; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1871f66d9338f and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xd5883b90379fc and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x012f0320f4e17 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1871f66d9338f; op2val:0x3fbd5883b90379fc; op3val:0x7fb012f0320f4e17; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1871f66d9338f and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xd5883b90379fc and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x012f0320f4e17 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1871f66d9338f; op2val:0x3fbd5883b90379fc; op3val:0x7fb012f0320f4e17; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1871f66d9338f and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xd5883b90379fc and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x012f0320f4e17 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1871f66d9338f; op2val:0x3fbd5883b90379fc; op3val:0x7fb012f0320f4e17; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1871f66d9338f and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xd5883b90379fc and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x012f0320f4e17 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1871f66d9338f; op2val:0x3fbd5883b90379fc; op3val:0x7fb012f0320f4e17; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x471faa8c06142 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2a6cb740159e7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d55c80c789ad and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe471faa8c06142; op2val:0x3fe2a6cb740159e7; op3val:0x7fd7d55c80c789ad; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x471faa8c06142 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2a6cb740159e7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d55c80c789ad and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe471faa8c06142; op2val:0x3fe2a6cb740159e7; op3val:0x7fd7d55c80c789ad; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x471faa8c06142 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2a6cb740159e7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d55c80c789ad and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe471faa8c06142; op2val:0x3fe2a6cb740159e7; op3val:0x7fd7d55c80c789ad; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x471faa8c06142 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2a6cb740159e7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d55c80c789ad and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe471faa8c06142; op2val:0x3fe2a6cb740159e7; op3val:0x7fd7d55c80c789ad; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x471faa8c06142 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2a6cb740159e7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d55c80c789ad and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe471faa8c06142; op2val:0x3fe2a6cb740159e7; op3val:0x7fd7d55c80c789ad; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7220ac1a61dbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9beb88f04a963 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29c77f248e9cc and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7220ac1a61dbb; op2val:0x4009beb88f04a963; op3val:0x7fe29c77f248e9cc; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7220ac1a61dbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9beb88f04a963 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29c77f248e9cc and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7220ac1a61dbb; op2val:0x4009beb88f04a963; op3val:0x7fe29c77f248e9cc; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7220ac1a61dbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9beb88f04a963 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29c77f248e9cc and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7220ac1a61dbb; op2val:0x4009beb88f04a963; op3val:0x7fe29c77f248e9cc; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7220ac1a61dbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9beb88f04a963 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29c77f248e9cc and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7220ac1a61dbb; op2val:0x4009beb88f04a963; op3val:0x7fe29c77f248e9cc; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7220ac1a61dbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9beb88f04a963 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29c77f248e9cc and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7220ac1a61dbb; op2val:0x4009beb88f04a963; op3val:0x7fe29c77f248e9cc; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3be2a8c7b6829 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x52a3bf7842274 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1db506ba5ee9 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3be2a8c7b6829; op2val:0x40052a3bf7842274; op3val:0x7fea1db506ba5ee9; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3be2a8c7b6829 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x52a3bf7842274 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1db506ba5ee9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3be2a8c7b6829; op2val:0x40052a3bf7842274; op3val:0x7fea1db506ba5ee9; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3be2a8c7b6829 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x52a3bf7842274 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1db506ba5ee9 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3be2a8c7b6829; op2val:0x40052a3bf7842274; op3val:0x7fea1db506ba5ee9; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3be2a8c7b6829 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x52a3bf7842274 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1db506ba5ee9 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3be2a8c7b6829; op2val:0x40052a3bf7842274; op3val:0x7fea1db506ba5ee9; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3be2a8c7b6829 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x52a3bf7842274 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1db506ba5ee9 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3be2a8c7b6829; op2val:0x40052a3bf7842274; op3val:0x7fea1db506ba5ee9; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x276f358a6a63b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa21385d91b7e5 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe27a1d244ecc7 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc276f358a6a63b; op2val:0x3fea21385d91b7e5; op3val:0x7fbe27a1d244ecc7; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x276f358a6a63b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa21385d91b7e5 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe27a1d244ecc7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc276f358a6a63b; op2val:0x3fea21385d91b7e5; op3val:0x7fbe27a1d244ecc7; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x276f358a6a63b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa21385d91b7e5 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe27a1d244ecc7 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc276f358a6a63b; op2val:0x3fea21385d91b7e5; op3val:0x7fbe27a1d244ecc7; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x276f358a6a63b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa21385d91b7e5 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe27a1d244ecc7 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc276f358a6a63b; op2val:0x3fea21385d91b7e5; op3val:0x7fbe27a1d244ecc7; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x276f358a6a63b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa21385d91b7e5 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe27a1d244ecc7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc276f358a6a63b; op2val:0x3fea21385d91b7e5; op3val:0x7fbe27a1d244ecc7; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7892d8885ef9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5973ca5b38043 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x288f5635a6591 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7892d8885ef9; op2val:0x3fd5973ca5b38043; op3val:0x7fd288f5635a6591; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7892d8885ef9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5973ca5b38043 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x288f5635a6591 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7892d8885ef9; op2val:0x3fd5973ca5b38043; op3val:0x7fd288f5635a6591; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7892d8885ef9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5973ca5b38043 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x288f5635a6591 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7892d8885ef9; op2val:0x3fd5973ca5b38043; op3val:0x7fd288f5635a6591; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7892d8885ef9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5973ca5b38043 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x288f5635a6591 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7892d8885ef9; op2val:0x3fd5973ca5b38043; op3val:0x7fd288f5635a6591; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7892d8885ef9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5973ca5b38043 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x288f5635a6591 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7892d8885ef9; op2val:0x3fd5973ca5b38043; op3val:0x7fd288f5635a6591; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3d7b58e26345 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x86e30b0ef95b6 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7d9af63a065bf and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3d7b58e26345; op2val:0x3fa86e30b0ef95b6; op3val:0x7fa7d9af63a065bf; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3d7b58e26345 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x86e30b0ef95b6 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7d9af63a065bf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3d7b58e26345; op2val:0x3fa86e30b0ef95b6; op3val:0x7fa7d9af63a065bf; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3d7b58e26345 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x86e30b0ef95b6 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7d9af63a065bf and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3d7b58e26345; op2val:0x3fa86e30b0ef95b6; op3val:0x7fa7d9af63a065bf; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3d7b58e26345 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x86e30b0ef95b6 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7d9af63a065bf and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3d7b58e26345; op2val:0x3fa86e30b0ef95b6; op3val:0x7fa7d9af63a065bf; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3d7b58e26345 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x86e30b0ef95b6 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7d9af63a065bf and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3d7b58e26345; op2val:0x3fa86e30b0ef95b6; op3val:0x7fa7d9af63a065bf; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x277a09a57982a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5fee54562abf2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9633680658f13 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe277a09a57982a; op2val:0x3fe5fee54562abf2; op3val:0x7fd9633680658f13; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x277a09a57982a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5fee54562abf2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9633680658f13 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe277a09a57982a; op2val:0x3fe5fee54562abf2; op3val:0x7fd9633680658f13; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x277a09a57982a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5fee54562abf2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9633680658f13 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe277a09a57982a; op2val:0x3fe5fee54562abf2; op3val:0x7fd9633680658f13; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x277a09a57982a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5fee54562abf2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9633680658f13 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe277a09a57982a; op2val:0x3fe5fee54562abf2; op3val:0x7fd9633680658f13; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x277a09a57982a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5fee54562abf2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9633680658f13 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe277a09a57982a; op2val:0x3fe5fee54562abf2; op3val:0x7fd9633680658f13; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x413eed654fd22 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x82ad1aedc7830 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe53a1b43f58c2 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe413eed654fd22; op2val:0x3ff82ad1aedc7830; op3val:0x7fee53a1b43f58c2; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x413eed654fd22 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x82ad1aedc7830 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe53a1b43f58c2 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe413eed654fd22; op2val:0x3ff82ad1aedc7830; op3val:0x7fee53a1b43f58c2; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x413eed654fd22 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x82ad1aedc7830 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe53a1b43f58c2 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe413eed654fd22; op2val:0x3ff82ad1aedc7830; op3val:0x7fee53a1b43f58c2; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x413eed654fd22 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x82ad1aedc7830 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe53a1b43f58c2 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe413eed654fd22; op2val:0x3ff82ad1aedc7830; op3val:0x7fee53a1b43f58c2; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x413eed654fd22 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x82ad1aedc7830 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe53a1b43f58c2 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe413eed654fd22; op2val:0x3ff82ad1aedc7830; op3val:0x7fee53a1b43f58c2; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcd9e20ba842b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbfb17c3e518207; op2val:0x3ffcd9e20ba842b1; op3val:0x7fcc93182a170b2f; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcd9e20ba842b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbfb17c3e518207; op2val:0x3ffcd9e20ba842b1; op3val:0x7fcc93182a170b2f; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcd9e20ba842b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbfb17c3e518207; op2val:0x3ffcd9e20ba842b1; op3val:0x7fcc93182a170b2f; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcd9e20ba842b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbfb17c3e518207; op2val:0x3ffcd9e20ba842b1; op3val:0x7fcc93182a170b2f; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcd9e20ba842b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbfb17c3e518207; op2val:0x3ffcd9e20ba842b1; op3val:0x7fcc93182a170b2f; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb2b5288790eeb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf29ef3e1f4174 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75929643064a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb2b5288790eeb; op2val:0x3fff29ef3e1f4174; op3val:0x7fea75929643064a; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb2b5288790eeb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf29ef3e1f4174 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75929643064a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb2b5288790eeb; op2val:0x3fff29ef3e1f4174; op3val:0x7fea75929643064a; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb2b5288790eeb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf29ef3e1f4174 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75929643064a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb2b5288790eeb; op2val:0x3fff29ef3e1f4174; op3val:0x7fea75929643064a; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb2b5288790eeb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf29ef3e1f4174 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75929643064a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb2b5288790eeb; op2val:0x3fff29ef3e1f4174; op3val:0x7fea75929643064a; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb2b5288790eeb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf29ef3e1f4174 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75929643064a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb2b5288790eeb; op2val:0x3fff29ef3e1f4174; op3val:0x7fea75929643064a; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1e20b87b382df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c6fe2f4aa781 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x738f7d1a22dd7 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb1e20b87b382df; op2val:0x3ff4c6fe2f4aa781; op3val:0x7fb738f7d1a22dd7; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1e20b87b382df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c6fe2f4aa781 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x738f7d1a22dd7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb1e20b87b382df; op2val:0x3ff4c6fe2f4aa781; op3val:0x7fb738f7d1a22dd7; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1e20b87b382df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c6fe2f4aa781 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x738f7d1a22dd7 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb1e20b87b382df; op2val:0x3ff4c6fe2f4aa781; op3val:0x7fb738f7d1a22dd7; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1e20b87b382df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c6fe2f4aa781 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x738f7d1a22dd7 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb1e20b87b382df; op2val:0x3ff4c6fe2f4aa781; op3val:0x7fb738f7d1a22dd7; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1e20b87b382df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c6fe2f4aa781 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x738f7d1a22dd7 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb1e20b87b382df; op2val:0x3ff4c6fe2f4aa781; op3val:0x7fb738f7d1a22dd7; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x332a1858028cf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x721650593dd17 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbc0d9d3586aa3 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa332a1858028cf; op2val:0x402721650593dd17; op3val:0x7fdbc0d9d3586aa3; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x332a1858028cf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x721650593dd17 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbc0d9d3586aa3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa332a1858028cf; op2val:0x402721650593dd17; op3val:0x7fdbc0d9d3586aa3; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x332a1858028cf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x721650593dd17 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbc0d9d3586aa3 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa332a1858028cf; op2val:0x402721650593dd17; op3val:0x7fdbc0d9d3586aa3; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x332a1858028cf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x721650593dd17 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbc0d9d3586aa3 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa332a1858028cf; op2val:0x402721650593dd17; op3val:0x7fdbc0d9d3586aa3; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x332a1858028cf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x721650593dd17 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbc0d9d3586aa3 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa332a1858028cf; op2val:0x402721650593dd17; op3val:0x7fdbc0d9d3586aa3; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xdb208fa38975f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x17f84065d01af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x03ce9dcdbd9d6 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fadb208fa38975f; op2val:0x40217f84065d01af; op3val:0x7fe03ce9dcdbd9d6; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xdb208fa38975f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x17f84065d01af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x03ce9dcdbd9d6 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fadb208fa38975f; op2val:0x40217f84065d01af; op3val:0x7fe03ce9dcdbd9d6; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xdb208fa38975f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x17f84065d01af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x03ce9dcdbd9d6 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fadb208fa38975f; op2val:0x40217f84065d01af; op3val:0x7fe03ce9dcdbd9d6; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xdb208fa38975f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x17f84065d01af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x03ce9dcdbd9d6 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fadb208fa38975f; op2val:0x40217f84065d01af; op3val:0x7fe03ce9dcdbd9d6; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xdb208fa38975f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x17f84065d01af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x03ce9dcdbd9d6 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fadb208fa38975f; op2val:0x40217f84065d01af; op3val:0x7fe03ce9dcdbd9d6; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x125f20460639f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5d6446920937c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x767727ca98cc1 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe125f20460639f; op2val:0x3fe5d6446920937c; op3val:0x7fd767727ca98cc1; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x125f20460639f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5d6446920937c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x767727ca98cc1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe125f20460639f; op2val:0x3fe5d6446920937c; op3val:0x7fd767727ca98cc1; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x125f20460639f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5d6446920937c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x767727ca98cc1 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe125f20460639f; op2val:0x3fe5d6446920937c; op3val:0x7fd767727ca98cc1; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x125f20460639f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5d6446920937c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x767727ca98cc1 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe125f20460639f; op2val:0x3fe5d6446920937c; op3val:0x7fd767727ca98cc1; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x125f20460639f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5d6446920937c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x767727ca98cc1 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe125f20460639f; op2val:0x3fe5d6446920937c; op3val:0x7fd767727ca98cc1; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d474883171fe and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xc7ce04a4c90c6 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x28b2f3a47e0ff and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d474883171fe; op2val:0x3fbc7ce04a4c90c6; op3val:0x7fb28b2f3a47e0ff; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d474883171fe and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xc7ce04a4c90c6 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x28b2f3a47e0ff and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d474883171fe; op2val:0x3fbc7ce04a4c90c6; op3val:0x7fb28b2f3a47e0ff; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d474883171fe and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xc7ce04a4c90c6 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x28b2f3a47e0ff and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d474883171fe; op2val:0x3fbc7ce04a4c90c6; op3val:0x7fb28b2f3a47e0ff; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d474883171fe and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xc7ce04a4c90c6 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x28b2f3a47e0ff and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d474883171fe; op2val:0x3fbc7ce04a4c90c6; op3val:0x7fb28b2f3a47e0ff; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d474883171fe and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xc7ce04a4c90c6 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x28b2f3a47e0ff and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d474883171fe; op2val:0x3fbc7ce04a4c90c6; op3val:0x7fb28b2f3a47e0ff; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b9ad0f953a6d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdd010c341e476 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34f069651326f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4b9ad0f953a6d; op2val:0x3fddd010c341e476; op3val:0x7fc34f069651326f; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b9ad0f953a6d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdd010c341e476 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34f069651326f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4b9ad0f953a6d; op2val:0x3fddd010c341e476; op3val:0x7fc34f069651326f; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b9ad0f953a6d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdd010c341e476 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34f069651326f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4b9ad0f953a6d; op2val:0x3fddd010c341e476; op3val:0x7fc34f069651326f; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b9ad0f953a6d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdd010c341e476 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34f069651326f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4b9ad0f953a6d; op2val:0x3fddd010c341e476; op3val:0x7fc34f069651326f; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe2f460df71daf and fs2 == 0 and fe2 == 0x402 and fm2 == 0xa0fdaacb5fbcf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8955d5926548d and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fae2f460df71daf; op2val:0x402a0fdaacb5fbcf; op3val:0x7fe8955d5926548d; valaddr_reg:x16; val_offset:960; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe2f460df71daf and fs2 == 0 and fe2 == 0x402 and fm2 == 0xa0fdaacb5fbcf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8955d5926548d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fae2f460df71daf; op2val:0x402a0fdaacb5fbcf; op3val:0x7fe8955d5926548d; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe2f460df71daf and fs2 == 0 and fe2 == 0x402 and fm2 == 0xa0fdaacb5fbcf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8955d5926548d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fae2f460df71daf; op2val:0x402a0fdaacb5fbcf; op3val:0x7fe8955d5926548d; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5829bf9c6538f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64c2b92225f5e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdf9fd6fcc553f and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5829bf9c6538f; op2val:0x3fe64c2b92225f5e; op3val:0x7fbdf9fd6fcc553f; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5829bf9c6538f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64c2b92225f5e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdf9fd6fcc553f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5829bf9c6538f; op2val:0x3fe64c2b92225f5e; op3val:0x7fbdf9fd6fcc553f; valaddr_reg:x16; val_offset:1056; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5829bf9c6538f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64c2b92225f5e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdf9fd6fcc553f and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5829bf9c6538f; op2val:0x3fe64c2b92225f5e; op3val:0x7fbdf9fd6fcc553f; valaddr_reg:x16; val_offset:1080; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5829bf9c6538f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64c2b92225f5e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdf9fd6fcc553f and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5829bf9c6538f; op2val:0x3fe64c2b92225f5e; op3val:0x7fbdf9fd6fcc553f; valaddr_reg:x16; val_offset:1104; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5829bf9c6538f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64c2b92225f5e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdf9fd6fcc553f and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5829bf9c6538f; op2val:0x3fe64c2b92225f5e; op3val:0x7fbdf9fd6fcc553f; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 1440, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fd4b9ad0f953a6d
.dword 0x3fddd010c341e476
.dword 0x7fc34f069651326f
.dword 0x7fae2f460df71daf
.dword 0x402a0fdaacb5fbcf
.dword 0x7fae2f460df71daf
.dword 0x7fae2f460df71daf
.dword 0x402a0fdaacb5fbcf
.dword 0x402a0fdaacb5fbcf
.dword 0x7fae2f460df71daf
.dword 0x402a0fdaacb5fbcf
.dword 0x7fe8955d5926548d
.dword 0x7fae2f460df71daf
.dword 0x402a0fdaacb5fbcf
.dword 0x7fe8955d5926548d
.dword 0x7fae2f460df71daf
.dword 0x7fae2f460df71daf
.dword 0x7fe8955d5926548d
.dword 0x7fc5829bf9c6538f
.dword 0x3fe64c2b92225f5e
.dword 0x7fc5829bf9c6538f
.dword 0x7fc5829bf9c6538f
.dword 0x3fe64c2b92225f5e
.dword 0x3fe64c2b92225f5e
.dword 0x7fc5829bf9c6538f
.dword 0x7fc5829bf9c6538f
.dword 0x7fc5829bf9c6538f
.dword 0x7fc5829bf9c6538f
.dword 0x7fc5829bf9c6538f
.dword 0x7fc5829bf9c6538f
.dword 0x7fc5829bf9c6538f
.dword 0x7fc5829bf9c6538f
.dword 0x7fbdf9fd6fcc553f
.dword 0x7f971abc78672bff
.dword 0x4034766a61cffe7f
.dword 0x7fdd8c6a62d7fd8f
.dword 0x7f971abc78672bff
.dword 0x4034766a61cffe7f
.dword 0x7fdd8c6a62d7fd8f
.dword 0x7f971abc78672bff
.dword 0x4034766a61cffe7f
.dword 0x7fdd8c6a62d7fd8f
.dword 0x7f971abc78672bff
.dword 0x4034766a61cffe7f
.dword 0x7fdd8c6a62d7fd8f
.dword 0x7f971abc78672bff
.dword 0x4034766a61cffe7f
.dword 0x7fdd8c6a62d7fd8f
.dword 0x7fd8b0ce9718a893
.dword 0x3ffbbb2d2c120e46
.dword 0x7fe5659a61635557
.dword 0x7fd8b0ce9718a893
.dword 0x3ffbbb2d2c120e46
.dword 0x7fe5659a61635557
.dword 0x7fd8b0ce9718a893
.dword 0x3ffbbb2d2c120e46
.dword 0x7fe5659a61635557
.dword 0x7fd8b0ce9718a893
.dword 0x3ffbbb2d2c120e46
.dword 0x7fe5659a61635557
.dword 0x7fd8b0ce9718a893
.dword 0x3ffbbb2d2c120e46
.dword 0x7fe5659a61635557
.dword 0x7fea4d3535c8560c
.dword 0x3fd6290a8daf6d85
.dword 0x7fd236d02dbba759
.dword 0x7fea4d3535c8560c
.dword 0x3fd6290a8daf6d85
.dword 0x7fd236d02dbba759
.dword 0x7fea4d3535c8560c
.dword 0x3fd6290a8daf6d85
.dword 0x7fd236d02dbba759
.dword 0x7fea4d3535c8560c
.dword 0x3fd6290a8daf6d85
.dword 0x7fd236d02dbba759
.dword 0x7fea4d3535c8560c
.dword 0x3fd6290a8daf6d85
.dword 0x7fd236d02dbba759
.dword 0x7fe4b547924fd121
.dword 0x3ff88dcc2c35a5a1
.dword 0x7fefc77122b9963b
.dword 0x7fe4b547924fd121
.dword 0x3ff88dcc2c35a5a1
.dword 0x7fefc77122b9963b
.dword 0x7fe4b547924fd121
.dword 0x3ff88dcc2c35a5a1
.dword 0x7fefc77122b9963b
.dword 0x7fe4b547924fd121
.dword 0x3ff88dcc2c35a5a1
.dword 0x7fefc77122b9963b
.dword 0x7fe4b547924fd121
.dword 0x3ff88dcc2c35a5a1
.dword 0x7fefc77122b9963b
.dword 0x7faf10102ecb507f
.dword 0x40272003d0023fd5
.dword 0x7fe6729f653d09b6
.dword 0x7faf10102ecb507f
.dword 0x40272003d0023fd5
.dword 0x7fe6729f653d09b6
.dword 0x7faf10102ecb507f
.dword 0x40272003d0023fd5
.dword 0x7fe6729f653d09b6
.dword 0x7faf10102ecb507f
.dword 0x40272003d0023fd5
.dword 0x7fe6729f653d09b6
.dword 0x7faf10102ecb507f
.dword 0x40272003d0023fd5
.dword 0x7fe6729f653d09b6
.dword 0x7fde57a08d938ac9
.dword 0x3ff669fb3be375cc
.dword 0x7fe540bc20428f59
.dword 0x7fde57a08d938ac9
.dword 0x3ff669fb3be375cc
.dword 0x7fe540bc20428f59
.dword 0x7fde57a08d938ac9
.dword 0x3ff669fb3be375cc
.dword 0x7fe540bc20428f59
.dword 0x7fde57a08d938ac9
.dword 0x3ff669fb3be375cc
.dword 0x7fe540bc20428f59
.dword 0x7fde57a08d938ac9
.dword 0x3ff669fb3be375cc
.dword 0x7fe540bc20428f59
.dword 0x7feae1041c5fd79f
.dword 0x3ff1fe9f24a7455f
.dword 0x7fee3ad3d9146af5
.dword 0x7feae1041c5fd79f
.dword 0x3ff1fe9f24a7455f
.dword 0x7fee3ad3d9146af5
.dword 0x7feae1041c5fd79f
.dword 0x3ff1fe9f24a7455f
.dword 0x7fee3ad3d9146af5
.dword 0x7feae1041c5fd79f
.dword 0x3ff1fe9f24a7455f
.dword 0x7fee3ad3d9146af5
.dword 0x7feae1041c5fd79f
.dword 0x3ff1fe9f24a7455f
.dword 0x7fee3ad3d9146af5
.dword 0x7fe28e8063300472
.dword 0x3fe92cabe4efe922
.dword 0x7fdd3277d88cd395
.dword 0x7fe28e8063300472
.dword 0x3fe92cabe4efe922
.dword 0x7fdd3277d88cd395
.dword 0x7fe28e8063300472
.dword 0x3fe92cabe4efe922
.dword 0x7fdd3277d88cd395
.dword 0x7fe28e8063300472
.dword 0x3fe92cabe4efe922
.dword 0x7fdd3277d88cd395
.dword 0x7fe28e8063300472
.dword 0x3fe92cabe4efe922
.dword 0x7fdd3277d88cd395
.dword 0x7fe63fdc11669528
.dword 0x3feb5ae43b7daad0
.dword 0x7fe30513f9fc9850
.dword 0x7fe63fdc11669528
.dword 0x3feb5ae43b7daad0
.dword 0x7fe30513f9fc9850
.dword 0x7fe63fdc11669528
.dword 0x3feb5ae43b7daad0
.dword 0x7fe30513f9fc9850
.dword 0x7fe63fdc11669528
.dword 0x3feb5ae43b7daad0
.dword 0x7fe30513f9fc9850
.dword 0x7fe63fdc11669528
.dword 0x3feb5ae43b7daad0
.dword 0x7fe30513f9fc9850
.dword 0x7fec03ea0b45fe6a
.dword 0x3fd6ef94d7b62f69
.dword 0x7fd4147072b89211
.dword 0x7fec03ea0b45fe6a
.dword 0x3fd6ef94d7b62f69
.dword 0x7fd4147072b89211
.dword 0x7fec03ea0b45fe6a
.dword 0x3fd6ef94d7b62f69
.dword 0x7fd4147072b89211
.dword 0x7fec03ea0b45fe6a
.dword 0x3fd6ef94d7b62f69
.dword 0x7fd4147072b89211
.dword 0x7fec03ea0b45fe6a
.dword 0x3fd6ef94d7b62f69
.dword 0x7fd4147072b89211
.dword 0x7fe8775d523b7834
.dword 0x3fe7fbb0c63a2134
.dword 0x7fe2563a7f28084c
.dword 0x7fe8775d523b7834
.dword 0x3fe7fbb0c63a2134
.dword 0x7fe2563a7f28084c
.dword 0x7fe8775d523b7834
.dword 0x3fe7fbb0c63a2134
.dword 0x7fe2563a7f28084c
.dword 0x7fe8775d523b7834
.dword 0x3fe7fbb0c63a2134
.dword 0x7fe2563a7f28084c
.dword 0x7fe8775d523b7834
.dword 0x3fe7fbb0c63a2134
.dword 0x7fe2563a7f28084c
.dword 0x7fa412f93d91b86f
.dword 0x40310b0d09a9e321
.dword 0x7fe56206384f7bbd
.dword 0x7fa412f93d91b86f
.dword 0x40310b0d09a9e321
.dword 0x7fe56206384f7bbd
.dword 0x7fa412f93d91b86f
.dword 0x40310b0d09a9e321
.dword 0x7fe56206384f7bbd
.dword 0x7fa412f93d91b86f
.dword 0x40310b0d09a9e321
.dword 0x7fe56206384f7bbd
.dword 0x7fa412f93d91b86f
.dword 0x40310b0d09a9e321
.dword 0x7fe56206384f7bbd
.dword 0x7fc3743aaeeeacbb
.dword 0x4009bcce06a14cb0
.dword 0x7fdf4b2be35fa361
.dword 0x7fc3743aaeeeacbb
.dword 0x4009bcce06a14cb0
.dword 0x7fdf4b2be35fa361
.dword 0x7fc3743aaeeeacbb
.dword 0x4009bcce06a14cb0
.dword 0x7fdf4b2be35fa361
.dword 0x7fc3743aaeeeacbb
.dword 0x4009bcce06a14cb0
.dword 0x7fdf4b2be35fa361
.dword 0x7fc3743aaeeeacbb
.dword 0x4009bcce06a14cb0
.dword 0x7fdf4b2be35fa361
.dword 0x7fdac2863951d7a5
.dword 0x3ffcf913c3426f6d
.dword 0x7fe83a7f9d5e43df
.dword 0x7fdac2863951d7a5
.dword 0x3ffcf913c3426f6d
.dword 0x7fe83a7f9d5e43df
.dword 0x7fdac2863951d7a5
.dword 0x3ffcf913c3426f6d
.dword 0x7fe83a7f9d5e43df
.dword 0x7fdac2863951d7a5
.dword 0x3ffcf913c3426f6d
.dword 0x7fe83a7f9d5e43df
.dword 0x7fdac2863951d7a5
.dword 0x3ffcf913c3426f6d
.dword 0x7fe83a7f9d5e43df
.dword 0x7fef5d97a44af52a
.dword 0x3fbed60f4ded2fb1
.dword 0x7fbe398f1061c0ef
.dword 0x7fef5d97a44af52a
.dword 0x3fbed60f4ded2fb1
.dword 0x7fbe398f1061c0ef
.dword 0x7fef5d97a44af52a
.dword 0x3fbed60f4ded2fb1
.dword 0x7fbe398f1061c0ef
.dword 0x7fef5d97a44af52a
.dword 0x3fbed60f4ded2fb1
.dword 0x7fbe398f1061c0ef
.dword 0x7fef5d97a44af52a
.dword 0x3fbed60f4ded2fb1
.dword 0x7fbe398f1061c0ef
.dword 0x7fe7579da5cb9b2f
.dword 0x3fd943579dbdd6c5
.dword 0x7fd26d9284df25e5
.dword 0x7fe7579da5cb9b2f
.dword 0x3fd943579dbdd6c5
.dword 0x7fd26d9284df25e5
.dword 0x7fe7579da5cb9b2f
.dword 0x3fd943579dbdd6c5
.dword 0x7fd26d9284df25e5
.dword 0x7fe7579da5cb9b2f
.dword 0x3fd943579dbdd6c5
.dword 0x7fd26d9284df25e5
.dword 0x7fe7579da5cb9b2f
.dword 0x3fd943579dbdd6c5
.dword 0x7fd26d9284df25e5
.dword 0x7fe0ce68e5faffc7
.dword 0x3ffaa92f4d6f9193
.dword 0x7fec0120595fb816
.dword 0x7fe0ce68e5faffc7
.dword 0x3ffaa92f4d6f9193
.dword 0x7fec0120595fb816
.dword 0x7fe0ce68e5faffc7
.dword 0x3ffaa92f4d6f9193
.dword 0x7fec0120595fb816
.dword 0x7fe0ce68e5faffc7
.dword 0x3ffaa92f4d6f9193
.dword 0x7fec0120595fb816
.dword 0x7fe0ce68e5faffc7
.dword 0x3ffaa92f4d6f9193
.dword 0x7fec0120595fb816
.dword 0x7fcf3e8df14f472f
.dword 0x4002d37c75ea8563
.dword 0x7fe261add5337480
.dword 0x7fcf3e8df14f472f
.dword 0x4002d37c75ea8563
.dword 0x7fe261add5337480
.dword 0x7fcf3e8df14f472f
.dword 0x4002d37c75ea8563
.dword 0x7fe261add5337480
.dword 0x7fcf3e8df14f472f
.dword 0x4002d37c75ea8563
.dword 0x7fe261add5337480
.dword 0x7fcf3e8df14f472f
.dword 0x4002d37c75ea8563
.dword 0x7fe261add5337480
.dword 0x7fe96b8e84b814c5
.dword 0x3fec2858a780d3ff
.dword 0x7fe65e29931e8ba7
.dword 0x7fe96b8e84b814c5
.dword 0x3fec2858a780d3ff
.dword 0x7fe65e29931e8ba7
.dword 0x7fe96b8e84b814c5
.dword 0x3fec2858a780d3ff
.dword 0x7fe65e29931e8ba7
.dword 0x7fe96b8e84b814c5
.dword 0x3fec2858a780d3ff
.dword 0x7fe65e29931e8ba7
.dword 0x7fe96b8e84b814c5
.dword 0x3fec2858a780d3ff
.dword 0x7fe65e29931e8ba7
.dword 0x7fdd00f90ae48549
.dword 0x3fe52abf187430ec
.dword 0x7fd32f61e9fcc711
.dword 0x7fdd00f90ae48549
.dword 0x3fe52abf187430ec
.dword 0x7fd32f61e9fcc711
.dword 0x7fdd00f90ae48549
.dword 0x3fe52abf187430ec
.dword 0x7fd32f61e9fcc711
.dword 0x7fdd00f90ae48549
.dword 0x3fe52abf187430ec
.dword 0x7fd32f61e9fcc711
.dword 0x7fdd00f90ae48549
.dword 0x3fe52abf187430ec
.dword 0x7fd32f61e9fcc711
.dword 0x7fd41afcbbb98d77
.dword 0x3ffdd2d56b3ae715
.dword 0x7fe2bcec3bb19a9d
.dword 0x7fd41afcbbb98d77
.dword 0x3ffdd2d56b3ae715
.dword 0x7fe2bcec3bb19a9d
.dword 0x7fd41afcbbb98d77
.dword 0x3ffdd2d56b3ae715
.dword 0x7fe2bcec3bb19a9d
.dword 0x7fd41afcbbb98d77
.dword 0x3ffdd2d56b3ae715
.dword 0x7fe2bcec3bb19a9d
.dword 0x7fd41afcbbb98d77
.dword 0x3ffdd2d56b3ae715
.dword 0x7fe2bcec3bb19a9d
.dword 0x7fe5c5d62a207b44
.dword 0x3fe41c339608df40
.dword 0x7fdb5dac1e37c3b7
.dword 0x7fe5c5d62a207b44
.dword 0x3fe41c339608df40
.dword 0x7fdb5dac1e37c3b7
.dword 0x7fe5c5d62a207b44
.dword 0x3fe41c339608df40
.dword 0x7fdb5dac1e37c3b7
.dword 0x7fe5c5d62a207b44
.dword 0x3fe41c339608df40
.dword 0x7fdb5dac1e37c3b7
.dword 0x7fe5c5d62a207b44
.dword 0x3fe41c339608df40
.dword 0x7fdb5dac1e37c3b7
.dword 0x7fae840b679dda5f
.dword 0x400ba5199ddf7689
.dword 0x7fca5cdae7f1504f
.dword 0x7fae840b679dda5f
.dword 0x400ba5199ddf7689
.dword 0x7fca5cdae7f1504f
.dword 0x7fae840b679dda5f
.dword 0x400ba5199ddf7689
.dword 0x7fca5cdae7f1504f
.dword 0x7fae840b679dda5f
.dword 0x400ba5199ddf7689
.dword 0x7fca5cdae7f1504f
.dword 0x7fae840b679dda5f
.dword 0x400ba5199ddf7689
.dword 0x7fca5cdae7f1504f
.dword 0x7fe1871f66d9338f
.dword 0x3fbd5883b90379fc
.dword 0x7fb012f0320f4e17
.dword 0x7fe1871f66d9338f
.dword 0x3fbd5883b90379fc
.dword 0x7fb012f0320f4e17
.dword 0x7fe1871f66d9338f
.dword 0x3fbd5883b90379fc
.dword 0x7fb012f0320f4e17
.dword 0x7fe1871f66d9338f
.dword 0x3fbd5883b90379fc
.dword 0x7fb012f0320f4e17
.dword 0x7fe1871f66d9338f
.dword 0x3fbd5883b90379fc
.dword 0x7fb012f0320f4e17
.dword 0x7fe471faa8c06142
.dword 0x3fe2a6cb740159e7
.dword 0x7fd7d55c80c789ad
.dword 0x7fe471faa8c06142
.dword 0x3fe2a6cb740159e7
.dword 0x7fd7d55c80c789ad
.dword 0x7fe471faa8c06142
.dword 0x3fe2a6cb740159e7
.dword 0x7fd7d55c80c789ad
.dword 0x7fe471faa8c06142
.dword 0x3fe2a6cb740159e7
.dword 0x7fd7d55c80c789ad
.dword 0x7fe471faa8c06142
.dword 0x3fe2a6cb740159e7
.dword 0x7fd7d55c80c789ad
.dword 0x7fc7220ac1a61dbb
.dword 0x4009beb88f04a963
.dword 0x7fe29c77f248e9cc
.dword 0x7fc7220ac1a61dbb
.dword 0x4009beb88f04a963
.dword 0x7fe29c77f248e9cc
.dword 0x7fc7220ac1a61dbb
.dword 0x4009beb88f04a963
.dword 0x7fe29c77f248e9cc
.dword 0x7fc7220ac1a61dbb
.dword 0x4009beb88f04a963
.dword 0x7fe29c77f248e9cc
.dword 0x7fc7220ac1a61dbb
.dword 0x4009beb88f04a963
.dword 0x7fe29c77f248e9cc
.dword 0x7fd3be2a8c7b6829
.dword 0x40052a3bf7842274
.dword 0x7fea1db506ba5ee9
.dword 0x7fd3be2a8c7b6829
.dword 0x40052a3bf7842274
.dword 0x7fea1db506ba5ee9
.dword 0x7fd3be2a8c7b6829
.dword 0x40052a3bf7842274
.dword 0x7fea1db506ba5ee9
.dword 0x7fd3be2a8c7b6829
.dword 0x40052a3bf7842274
.dword 0x7fea1db506ba5ee9
.dword 0x7fd3be2a8c7b6829
.dword 0x40052a3bf7842274
.dword 0x7fea1db506ba5ee9
.dword 0x7fc276f358a6a63b
.dword 0x3fea21385d91b7e5
.dword 0x7fbe27a1d244ecc7
.dword 0x7fc276f358a6a63b
.dword 0x3fea21385d91b7e5
.dword 0x7fbe27a1d244ecc7
.dword 0x7fc276f358a6a63b
.dword 0x3fea21385d91b7e5
.dword 0x7fbe27a1d244ecc7
.dword 0x7fc276f358a6a63b
.dword 0x3fea21385d91b7e5
.dword 0x7fbe27a1d244ecc7
.dword 0x7fc276f358a6a63b
.dword 0x3fea21385d91b7e5
.dword 0x7fbe27a1d244ecc7
.dword 0x7feb7892d8885ef9
.dword 0x3fd5973ca5b38043
.dword 0x7fd288f5635a6591
.dword 0x7feb7892d8885ef9
.dword 0x3fd5973ca5b38043
.dword 0x7fd288f5635a6591
.dword 0x7feb7892d8885ef9
.dword 0x3fd5973ca5b38043
.dword 0x7fd288f5635a6591
.dword 0x7feb7892d8885ef9
.dword 0x3fd5973ca5b38043
.dword 0x7fd288f5635a6591
.dword 0x7feb7892d8885ef9
.dword 0x3fd5973ca5b38043
.dword 0x7fd288f5635a6591
.dword 0x7fef3d7b58e26345
.dword 0x3fa86e30b0ef95b6
.dword 0x7fa7d9af63a065bf
.dword 0x7fef3d7b58e26345
.dword 0x3fa86e30b0ef95b6
.dword 0x7fa7d9af63a065bf
.dword 0x7fef3d7b58e26345
.dword 0x3fa86e30b0ef95b6
.dword 0x7fa7d9af63a065bf
.dword 0x7fef3d7b58e26345
.dword 0x3fa86e30b0ef95b6
.dword 0x7fa7d9af63a065bf
.dword 0x7fef3d7b58e26345
.dword 0x3fa86e30b0ef95b6
.dword 0x7fa7d9af63a065bf
.dword 0x7fe277a09a57982a
.dword 0x3fe5fee54562abf2
.dword 0x7fd9633680658f13
.dword 0x7fe277a09a57982a
.dword 0x3fe5fee54562abf2
.dword 0x7fd9633680658f13
.dword 0x7fe277a09a57982a
.dword 0x3fe5fee54562abf2
.dword 0x7fd9633680658f13
.dword 0x7fe277a09a57982a
.dword 0x3fe5fee54562abf2
.dword 0x7fd9633680658f13
.dword 0x7fe277a09a57982a
.dword 0x3fe5fee54562abf2
.dword 0x7fd9633680658f13
.dword 0x7fe413eed654fd22
.dword 0x3ff82ad1aedc7830
.dword 0x7fee53a1b43f58c2
.dword 0x7fe413eed654fd22
.dword 0x3ff82ad1aedc7830
.dword 0x7fee53a1b43f58c2
.dword 0x7fe413eed654fd22
.dword 0x3ff82ad1aedc7830
.dword 0x7fee53a1b43f58c2
.dword 0x7fe413eed654fd22
.dword 0x3ff82ad1aedc7830
.dword 0x7fee53a1b43f58c2
.dword 0x7fe413eed654fd22
.dword 0x3ff82ad1aedc7830
.dword 0x7fee53a1b43f58c2
.dword 0x7fbfb17c3e518207
.dword 0x3ffcd9e20ba842b1
.dword 0x7fcc93182a170b2f
.dword 0x7fbfb17c3e518207
.dword 0x3ffcd9e20ba842b1
.dword 0x7fcc93182a170b2f
.dword 0x7fbfb17c3e518207
.dword 0x3ffcd9e20ba842b1
.dword 0x7fcc93182a170b2f
.dword 0x7fbfb17c3e518207
.dword 0x3ffcd9e20ba842b1
.dword 0x7fcc93182a170b2f
.dword 0x7fbfb17c3e518207
.dword 0x3ffcd9e20ba842b1
.dword 0x7fcc93182a170b2f
.dword 0x7fdb2b5288790eeb
.dword 0x3fff29ef3e1f4174
.dword 0x7fea75929643064a
.dword 0x7fdb2b5288790eeb
.dword 0x3fff29ef3e1f4174
.dword 0x7fea75929643064a
.dword 0x7fdb2b5288790eeb
.dword 0x3fff29ef3e1f4174
.dword 0x7fea75929643064a
.dword 0x7fdb2b5288790eeb
.dword 0x3fff29ef3e1f4174
.dword 0x7fea75929643064a
.dword 0x7fdb2b5288790eeb
.dword 0x3fff29ef3e1f4174
.dword 0x7fea75929643064a
.dword 0x7fb1e20b87b382df
.dword 0x3ff4c6fe2f4aa781
.dword 0x7fb738f7d1a22dd7
.dword 0x7fb1e20b87b382df
.dword 0x3ff4c6fe2f4aa781
.dword 0x7fb738f7d1a22dd7
.dword 0x7fb1e20b87b382df
.dword 0x3ff4c6fe2f4aa781
.dword 0x7fb738f7d1a22dd7
.dword 0x7fb1e20b87b382df
.dword 0x3ff4c6fe2f4aa781
.dword 0x7fb738f7d1a22dd7
.dword 0x7fb1e20b87b382df
.dword 0x3ff4c6fe2f4aa781
.dword 0x7fb738f7d1a22dd7
.dword 0x7fa332a1858028cf
.dword 0x402721650593dd17
.dword 0x7fdbc0d9d3586aa3
.dword 0x7fa332a1858028cf
.dword 0x402721650593dd17
.dword 0x7fdbc0d9d3586aa3
.dword 0x7fa332a1858028cf
.dword 0x402721650593dd17
.dword 0x7fdbc0d9d3586aa3
.dword 0x7fa332a1858028cf
.dword 0x402721650593dd17
.dword 0x7fdbc0d9d3586aa3
.dword 0x7fa332a1858028cf
.dword 0x402721650593dd17
.dword 0x7fdbc0d9d3586aa3
.dword 0x7fadb208fa38975f
.dword 0x40217f84065d01af
.dword 0x7fe03ce9dcdbd9d6
.dword 0x7fadb208fa38975f
.dword 0x40217f84065d01af
.dword 0x7fe03ce9dcdbd9d6
.dword 0x7fadb208fa38975f
.dword 0x40217f84065d01af
.dword 0x7fe03ce9dcdbd9d6
.dword 0x7fadb208fa38975f
.dword 0x40217f84065d01af
.dword 0x7fe03ce9dcdbd9d6
.dword 0x7fadb208fa38975f
.dword 0x40217f84065d01af
.dword 0x7fe03ce9dcdbd9d6
.dword 0x7fe125f20460639f
.dword 0x3fe5d6446920937c
.dword 0x7fd767727ca98cc1
.dword 0x7fe125f20460639f
.dword 0x3fe5d6446920937c
.dword 0x7fd767727ca98cc1
.dword 0x7fe125f20460639f
.dword 0x3fe5d6446920937c
.dword 0x7fd767727ca98cc1
.dword 0x7fe125f20460639f
.dword 0x3fe5d6446920937c
.dword 0x7fd767727ca98cc1
.dword 0x7fe125f20460639f
.dword 0x3fe5d6446920937c
.dword 0x7fd767727ca98cc1
.dword 0x7fe4d474883171fe
.dword 0x3fbc7ce04a4c90c6
.dword 0x7fb28b2f3a47e0ff
.dword 0x7fe4d474883171fe
.dword 0x3fbc7ce04a4c90c6
.dword 0x7fb28b2f3a47e0ff
.dword 0x7fe4d474883171fe
.dword 0x3fbc7ce04a4c90c6
.dword 0x7fb28b2f3a47e0ff
.dword 0x7fe4d474883171fe
.dword 0x3fbc7ce04a4c90c6
.dword 0x7fb28b2f3a47e0ff
.dword 0x7fe4d474883171fe
.dword 0x3fbc7ce04a4c90c6
.dword 0x7fb28b2f3a47e0ff
.dword 0x7fd4b9ad0f953a6d
.dword 0x3fddd010c341e476
.dword 0x7fc34f069651326f
.dword 0x7fd4b9ad0f953a6d
.dword 0x3fddd010c341e476
.dword 0x7fc34f069651326f
.dword 0x7fd4b9ad0f953a6d
.dword 0x3fddd010c341e476
.dword 0x7fc34f069651326f
.dword 0x7fd4b9ad0f953a6d
.dword 0x3fddd010c341e476
.dword 0x7fc34f069651326f
.dword 0x7fae2f460df71daf
.dword 0x402a0fdaacb5fbcf
.dword 0x7fe8955d5926548d
.dword 0x7fae2f460df71daf
.dword 0x402a0fdaacb5fbcf
.dword 0x7fe8955d5926548d
.dword 0x7fae2f460df71daf
.dword 0x402a0fdaacb5fbcf
.dword 0x7fe8955d5926548d
.dword 0x7fc5829bf9c6538f
.dword 0x3fe64c2b92225f5e
.dword 0x7fbdf9fd6fcc553f
.dword 0x7fc5829bf9c6538f
.dword 0x3fe64c2b92225f5e
.dword 0x7fbdf9fd6fcc553f
.dword 0x7fc5829bf9c6538f
.dword 0x3fe64c2b92225f5e
.dword 0x7fbdf9fd6fcc553f
.dword 0x7fc5829bf9c6538f
.dword 0x3fe64c2b92225f5e
.dword 0x7fbdf9fd6fcc553f
.dword 0x7fc5829bf9c6538f
.dword 0x3fe64c2b92225f5e
.dword 0x7fbdf9fd6fcc553f
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 182*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
